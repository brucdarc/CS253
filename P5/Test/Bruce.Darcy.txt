silverton:~/Desktop/cs253/P5/Test$ testAll
[==========] Running 23 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 8 tests from portAlg
[ RUN      ] portAlg.step1
[       OK ] portAlg.step1 (0 ms)
[ RUN      ] portAlg.step2
[       OK ] portAlg.step2 (0 ms)
[ RUN      ] portAlg.sentiment
[       OK ] portAlg.sentiment (0 ms)
[ RUN      ] portAlg.step1RECIT
[       OK ] portAlg.step1RECIT (0 ms)
[ RUN      ] portAlg.step2RECIT
[       OK ] portAlg.step2RECIT (0 ms)
[ RUN      ] portAlg.step3RECIT
[       OK ] portAlg.step3RECIT (0 ms)
[ RUN      ] portAlg.step4RECIT
[       OK ] portAlg.step4RECIT (0 ms)
[ RUN      ] portAlg.step5RECIT
[       OK ] portAlg.step5RECIT (0 ms)
[----------] 8 tests from portAlg (0 ms total)

[----------] 15 tests from P5
[ RUN      ] P5.isPlus
[       OK ] P5.isPlus (0 ms)
[ RUN      ] P5.isPlus2
[       OK ] P5.isPlus2 (0 ms)
[ RUN      ] P5.isCaps
[       OK ] P5.isCaps (0 ms)
[ RUN      ] P5.isCaps2
[       OK ] P5.isCaps2 (0 ms)
[ RUN      ] P5.MakeLower
[       OK ] P5.MakeLower (0 ms)
[ RUN      ] P5.MakeLower2
[       OK ] P5.MakeLower2 (0 ms)
[ RUN      ] P5.capsFind
[       OK ] P5.capsFind (0 ms)
[ RUN      ] P5.capsFind2
[       OK ] P5.capsFind2 (0 ms)
[ RUN      ] P5.capsFind3
[       OK ] P5.capsFind3 (0 ms)
[ RUN      ] P5.testCaps
[       OK ] P5.testCaps (0 ms)
[ RUN      ] P5.testCaps2
[       OK ] P5.testCaps2 (0 ms)
[ RUN      ] P5.testCaps3
[       OK ] P5.testCaps3 (0 ms)
[ RUN      ] P5.testCaps4
[       OK ] P5.testCaps4 (0 ms)
[ RUN      ] P5.testCaps5
[       OK ] P5.testCaps5 (0 ms)
[ RUN      ] P5.emptyTests
[       OK ] P5.emptyTests (0 ms)
[----------] 15 tests from P5 (0 ms total)

[----------] Global test environment tear-down
[==========] 23 tests from 2 test cases ran. (0 ms total)
[  PASSED  ] 23 tests.



#include <GrammarMachine.h>
#include <Except.h>
#include <gtest/gtest.h>
#include <StringTest.h>
#include <vector>

// macro defineby google testd
TEST(portAlg, step1)
{
	GrammarMachine ss;
	EXPECT_EQ("abc", ss.step1("abc"));
	//compare expected output to actual output
	EXPECT_EQ("abc", ss.step1("\'abc"));
	
}


TEST(portAlg, step2)
{
	GrammarMachine ss;
	string t = "abcsses";
	
	EXPECT_EQ("abcss", ss.step2(t));
}


TEST(portAlg, sentiment)
{
	GrammarMachine ss;
	string t = "sentiment";
	ss.doSteps(t);
	EXPECT_EQ("sentiment", t);
}

TEST(portAlg, step1RECIT)
{
	GrammarMachine ss;
	EXPECT_EQ("cause", ss.step1("\'cause"));
	//compare expected output to actual output
	EXPECT_EQ("ole", ss.step1("ole\'"));
	EXPECT_EQ("programmer", ss.step1("programmer\'s"));
}


TEST(portAlg, step2RECIT)
{
	GrammarMachine ss;
	string t = "masses";
	
	EXPECT_EQ("mass", ss.step2(t));
}

TEST(portAlg, step3RECIT)
{
	GrammarMachine ss;
	string t = "goateedly";
	
	EXPECT_EQ("goatee", ss.step3(t));

	t = "exceed";
	
	EXPECT_EQ("excee", ss.step3(t));

}

TEST(portAlg, step4RECIT)
{
	GrammarMachine ss;
	string t = "decry";
	
	EXPECT_EQ("decri", ss.step4(t));
}

TEST(portAlg, step5RECIT)
{
	GrammarMachine ss;
	string t = "exceptional";
	
	EXPECT_EQ("exception", ss.step5(t));

	t = "anxiousness";
	
	EXPECT_EQ("anxious", ss.step5(t));

	t = "irrational";
	
	EXPECT_EQ("irrate", ss.step5(t));

}





