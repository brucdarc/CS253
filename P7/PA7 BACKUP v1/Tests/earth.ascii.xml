<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.31.0-wmf.4</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Earth</title>
    <ns>0</ns>
    <id>9228</id>
    <revision>
      <id>806851735</id>
      <parentid>806032373</parentid>
      <timestamp>2017-10-24T15:17:55Z</timestamp>
      <contributor>
        <username>Nemo bis</username>
        <id>2584239</id>
      </contributor>
      <comment>Added free to read links in citations with [[WP:OABOT|OAbot]] #oabot</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="165322">{{About|the planet itself|its human aspects|World|other uses}}
{{pp-semi|small=yes}}
{{Featured article}}
{{Use dmy dates|date=September 2017}}
{{Use American English|date=July 2015}}
{{Infobox planet
&lt;!---------------------------------------------------------------------------------------
    This infobox has been formatted in the same way as those for other Solar System
    planets and bodies, so please do not change it without discussion on the talkpage.
 ----------------------------------------------------------------------------------------&gt;
| bgcolour  = #c0c0ff
| name      = Earth
| symbol    = [[File:Earth symbol.svg|18px|Astronomical symbol of Earth]]
| image     = The Earth seen from Apollo 17.jpg
|alt=&quot;[[The Blue Marble]]&quot; photograph of Earth, taken by the ''[[Apollo 17]]'' mission. The Arabian peninsula, Africa and Madagascar lie in the upper half of the disc, whereas Antarctica is at the bottom.
| caption   = ''[[The Blue Marble]]'' photograph of Earth, taken during the [[Apollo 17]] lunar mission in 1972
| alt_names = &lt;!--{{ublist|style=padding-top:0.1em;|li_style=line-height:1.3em; |{{hlist|the Earth|the World}} |{{hlist|Blue Planet|[[The Blue Marble|Blue Marble]]|''[[Terra]]''|[[Gaia (mythology)|Gaia]]}} }}--&gt;
| epoch         = [[J2000.0|J2000]]&lt;ref group=&quot;n&quot; name=&quot;epoch&quot;/&gt;
| aphelion      = {{convert|152100000|km|mi AU|comma=gaps|abbr=on|disp=x|&lt;ref group=&quot;n&quot; name=&quot;apsis&quot;/&gt;&lt;br /&gt;&lt;small&gt;(|)&lt;/small&gt;}}
| perihelion    = {{convert|147095000|km|mi AU|comma=gaps|abbr=on|disp=x|&lt;ref group=&quot;n&quot; name=&quot;apsis&quot;/&gt;&lt;br /&gt;&lt;small&gt;(|)&lt;/small&gt;}}
| semimajor     = {{convert|149598023|km|mi AU|comma=gaps|abbr=on|disp=x|&lt;ref name=&quot;VSOP87&quot;/&gt;&lt;br /&gt;&lt;small&gt;(|)&lt;/small&gt;}}
| eccentricity  = {{val|0.0167086}}&lt;ref name=&quot;VSOP87&quot;/&gt;
| period        = {{convert|365.256363004|d|years|comma=gaps|abbr=on|lk=out|disp=x|&lt;ref name=&quot;IERS&quot;/&gt;&lt;br /&gt;&lt;small&gt;(|)&lt;/small&gt;}}
| avg_speed     = {{convert|29.78|km/s|km/h mph|comma=gaps|abbr=on|disp=x|&lt;ref name=&quot;earth_fact_sheet&quot;/&gt;&lt;br /&gt;&lt;small&gt;(|)&lt;/small&gt;}}
| mean_anomaly  = {{val|358.617|u=}}
| inclination   = {{ublist|class=nowrap |{{val|7.155|u=}} to the [[Sun]]'s [[equator]]; |{{val|1.57869|u=}}&lt;ref name=&quot;Allen294&quot;/&gt; to [[invariable plane]]; |{{val|0.00005|u=}} to J2000 [[ecliptic]]}}
| asc_node      = {{val|-11.26064|u=}}&lt;ref name=&quot;earth_fact_sheet&quot;/&gt; to J2000 ecliptic
| arg_peri      = {{val|114.20783|u=}}&lt;ref name=&quot;earth_fact_sheet&quot;/&gt;
| satellites    =
 {{unbulleted list
  | 1 natural satellite: the [[Moon]]
  | 5 [[quasi-satellite]]s
  | &gt;1400 operational [[artificial satellite]]s&lt;ref name=&quot;ucs&quot;/&gt;
  | &gt;16000 [[space debris]]&lt;ref group=&quot;n&quot; name=&quot;space_debris&quot;/&gt;
 }}
| allsatellites = yes
| physical_characteristics = yes
| mean_radius   = {{convert|6371.0|km|mi|comma=gaps|abbr=on|disp=x| &lt;small&gt;(|)&lt;/small&gt;}}&lt;ref name=&quot;hbcp2000&quot;/&gt;
| equatorial_radius = {{convert|6378.1|km|mi|comma=gaps|abbr=on|disp=x| &lt;small&gt;(|)&lt;/small&gt;}}&lt;ref name=usno/&gt;&lt;ref name=&quot;WGS-84&quot;/&gt;
| polar_radius  = {{convert|6356.8|km|mi|comma=gaps|abbr=on|disp=x| &lt;small&gt;(|)&lt;/small&gt;}}&lt;ref name=&quot;cazenave_ahrens1995&quot;/&gt;
| flattening    = {{val|0.0033528}}&lt;ref name=&quot;IERS2004&quot;/&gt;&lt;br /&gt;1/{{val|298.257222101}} ([[ETRS89]])
| circumference =
 {{unbulleted list |class=nowrap
  | {{convert|40075.017|km|mi|comma=gaps|abbr=on|disp=x| &lt;small&gt;[[equator]]ial (|)&lt;/small&gt;}}&lt;ref name=&quot;WGS-84&quot;&gt;[[World Geodetic System]] (''WGS-84''). [http://earth-info.nga.mil/GandG/wgs84/ Available online] from [[National Geospatial-Intelligence Agency]].&lt;/ref&gt;
  | {{convert|40007.86|km|mi|comma=gaps|abbr=on|disp=x| &lt;small&gt;[[meridional]] (|)&lt;/small&gt;}}&lt;ref name=&quot;WGS-84-2&quot;/&gt;&lt;ref name=&quot;circ&quot;&gt;Earth's [[circumference]] is almost exactly 40,000 km because the metre was calibrated on this measurementmore specifically, 1/10-millionth of the distance between the poles and the equator.&lt;/ref&gt;
 }}
| surface_area  =
 {{unbulleted list |class=nowrap
  | {{convert|510072000|km2|sqmi|comma=gaps|abbr=on|disp=x| &lt;small&gt;(|)&lt;/small&gt;}}&lt;ref name=&quot;Pidwirny 2006_8&quot;/&gt;&lt;ref name=&quot;cia&quot;/&gt;&lt;ref group=&quot;n&quot; name=&quot;surfacecover&quot;/&gt;
  | {{convert|148940000|km2|sqmi|comma=gaps|abbr=on|disp=x| land &lt;small&gt;(|; 29.2%)&lt;/small&gt;}}
  | {{convert|361132000|km2|sqmi|comma=gaps|abbr=on|disp=x| water &lt;small&gt;(|; 70.8%)&lt;/small&gt;}}
 }}
| volume        = [[Volume of the Earth|{{val|1.08321|e=12|u=km3}}]] &lt;small&gt;({{val|2.59876|e=11|u=cu mi}})&lt;/small&gt;&lt;ref name=&quot;earth_fact_sheet&quot;/&gt;
| mass          = {{val|5.97237|e=24|u=kg}} &lt;small&gt;({{val|1.31668|e=25|u=lb}})&lt;/small&gt;&lt;ref name=&quot;Luzum2011&quot; /&gt; &lt;br /&gt; &lt;small&gt;({{val|3.0|e=-6|ul=solar mass}})&lt;/small&gt;
| density       = {{convert|5.514|g/cm3|lb/cuin|comma=gaps|abbr=on|disp=x| &lt;small&gt;(|)&lt;/small&gt;}}&lt;ref name=&quot;earth_fact_sheet&quot;/&gt;
| surface_grav  = {{convert|9.807|m/s2|ft/s2|comma=gaps|abbr=on|disp=x| &lt;small&gt;([[Gravity of Earth|{{val|1|u=''g''}}]]; |)&lt;/small&gt;}}&lt;ref name=&quot;NIST2008&quot;/&gt;
| moment_of_inertia_factor = 0.3307&lt;ref name=&quot;Williams1994&quot;/&gt;
| escape_velocity = {{convert|11.186|km/s|km/h mph|comma=gaps|abbr=on|disp=x|&lt;ref name=&quot;earth_fact_sheet&quot;/&gt; &lt;br /&gt; &lt;small&gt;(|)&lt;/small&gt;}}
| sidereal_day  = {{longitem|{{val|0.99726968|u=d}}&lt;ref name=&quot;Allen296&quot;/&gt; &lt;br /&gt; &lt;small&gt;(23h&amp;nbsp;56m&amp;nbsp;4.100s)&lt;/small&gt;}}
| rot_velocity  = {{convert|1674.4|km/h|km/s km/h mph|order=out|comma=gaps|abbr=on|disp=x|&lt;ref name=&quot;Cox2000&quot;/&gt; &lt;br /&gt; &lt;small&gt;(|)&lt;/small&gt;}}
| axial_tilt    = {{val|23.4392811|u=}}&lt;ref name=&quot;IERS&quot;/&gt;
| albedo        = {{ublist|class=nowrap |0.367 [[Geometric albedo|geometric]]&lt;ref name=&quot;earth_fact_sheet&quot;/&gt; |0.306 [[Bond albedo|Bond]]&lt;ref name=&quot;earth_fact_sheet&quot;/&gt;}}
| atmosphere    = yes
| temperatures  = yes
| temp_name1    = [[Kelvin]]
| min_temp_1    = 184&amp;nbsp;K&lt;ref name=asu_lowest_temp/&gt;
| mean_temp_1   = 288&amp;nbsp;K&lt;ref name=kinver20091210/&gt;
| max_temp_1    = 330&amp;nbsp;K&lt;ref name=asu_highest_temp/&gt;
| temp_name2    = Celsius
| min_temp_2    = 89.2&amp;nbsp;C
| mean_temp_2   = 15&amp;nbsp;C
| max_temp_2    = 56.7&amp;nbsp;C
| temp_name3    = Fahrenheit
| min_temp_3    = 128.5&amp;nbsp;F
| mean_temp_3   = 59&amp;nbsp;F
| max_temp_3    = 134&amp;nbsp;F
| surface_pressure = {{val|101.325|ul=kPa}} (at [[Sea level|MSL]])
| atmosphere_composition =
 {{unbulleted list |class=nowrap
  | 78.08% [[nitrogen]] (N{{smallsub|2}}; dry air)&lt;ref name=&quot;earth_fact_sheet&quot;/&gt;
  | 20.95% [[oxygen]] (O{{smallsub|2}})
  | 0.930% [[argon]]
  | 0.0402% [[carbon dioxide]]&lt;ref name=&quot;NOAA&quot;&gt;{{cite web |url=http://www.esrl.noaa.gov/gmd/ccgg/trends/#mlo |author=[[National Oceanic and Atmospheric Administration]] |website=[[Earth System Research Laboratory]] |title=Trends in Atmospheric Carbon Dioxide |date=8 November 2016 |access-date=3 December 2016}}&lt;/ref&gt;
  | ~&amp;nbsp;1% [[water vapor]] &lt;small&gt;([[climate]]-variable)&lt;/small&gt;
 }}
| note = no
}}

'''Earth''' is the third [[planet]] from the [[Sun]] and the only object in the [[Universe]] known to harbor [[life]]. According to [[radiometric dating]] and other sources of evidence, Earth [[Age of the Earth|formed]] over 4 [[bya|billion years ago]].&lt;ref name=&quot;USGS1997&quot;&gt;{{cite web |date=1997 |title=Age of the Earth |url=http://pubs.usgs.gov/gip/geotime/age.html |publisher=U.S. Geological Survey |accessdate=10 January 2006 |archiveurl=https://web.archive.org/web/20051223072700/http://pubs.usgs.gov/gip/geotime/age.html |archivedate=23 December 2005 |deadurl=no}}&lt;/ref&gt;&lt;ref&gt;{{cite journal |last=Dalrymple |first=G. Brent |title=The age of the Earth in the twentieth century: a problem (mostly) solved |journal=Special Publications, Geological Society of London |date=2001 |volume=190 |issue=1 |pages=20521 |doi=10.1144/GSL.SP.2001.190.01.14 |bibcode=2001GSLSP.190..205D}}&lt;/ref&gt;&lt;ref&gt;{{cite journal |author=Manhesa, Grard |author2=Allgre, Claude J. |author3=Dupra, Bernard |author4=Hamelin, Bruno |last-author-amp=yes |title=Lead isotope study of basic-ultrabasic layered complexes: Speculations about the age of the earth and primitive mantle characteristics |journal=[[Earth and Planetary Science Letters]] |date=1980 |volume=47 |issue=3 |pages=37082 |doi=10.1016/0012-821X(80)90024-2 |bibcode=1980E&amp;PSL..47..370M}}&lt;/ref&gt; [[Gravity of Earth|Earth's gravity]] interacts with other objects in space, especially the Sun and the [[Moon]], Earth's only [[natural satellite]]. Earth [[Earth's orbit|revolves around the Sun]] in 365.26 days, a period known as an Earth [[year]]. During this time, Earth [[Earth's rotation|rotates about its axis]] about 366.26 times.&lt;ref group=&quot;n&quot; name=&quot;sidereal_solar&quot;/&gt;

Earth's [[#Axial tilt and seasons|axis of rotation]] is tilted, producing [[season|seasonal variations]] on the planet's surface.&lt;ref name=yoder1995/&gt; The [[gravity|gravitational interaction]] between the Earth and Moon causes [[Tide|ocean tides]], stabilizes the Earth's orientation on its axis, and gradually slows its rotation.&lt;ref name=aaa428_261/&gt; Earth is the densest planet in the [[Solar System]] and the largest of the four [[terrestrial planet]]s.

[[Lithosphere#Earth's lithosphere|Earth's lithosphere]] is divided into several rigid [[Plate tectonics|tectonic plates]] that migrate across the surface over periods of many millions of years. About 71% of Earth's surface is [[Water distribution on Earth|covered with water]], mostly by [[ocean]]s.&lt;ref&gt;{{cite web |url=http://www.noaa.gov/ocean.html |author=National Oceanic and Atmospheric Administration |title=Ocean |website=NOAA.gov |accessdate=3 May 2013}}&lt;/ref&gt; The remaining 29% is [[Land#History of land on Earth|land]] consisting of [[continent]]s and [[island]]s that together have many lakes, rivers and other sources of water that contribute to the [[hydrosphere]]. The majority of [[Polar regions of Earth|Earth's polar regions]] are covered in ice, including the [[Antarctic ice sheet]] and the sea ice of the Arctic ice pack. Earth's interior remains active with a solid iron inner core, a liquid outer core that generates the [[Earth's magnetic field]], and a convecting [[Mantle (geology)|mantle]] that drives plate tectonics.

Within the first billion years of [[History of Earth|Earth's history]], life appeared in the oceans and began to affect the [[Atmosphere of Earth|Earth's atmosphere]] and surface, leading to the proliferation of [[Aerobic organism|aerobic]] and [[anaerobic organism]]s. Some geological evidence indicates that life may have arisen as much as 4.1 billion years ago. Since then, the combination of Earth's distance from the Sun, physical properties, and [[Geological history of Earth|geological history]] have allowed life to evolve and thrive.&lt;ref name=&quot;AP-20151019&quot;&gt;{{cite news |last=Borenstein |first=Seth |title=Hints of life on what was thought to be desolate early Earth |url=http://apnews.excite.com/article/20151019/us-sci--earliest_life-a400435d0d.html |date=19 October 2015 |work=[[Excite]] |location=Yonkers, NY |publisher=[[Mindspark Interactive Network]] |agency=[[Associated Press]] |accessdate=20 October 2015}}&lt;/ref&gt;&lt;ref name=&quot;PNAS-20151014-pdf&quot;&gt;{{cite journal |last1=Bell |first1=Elizabeth A. |last2=Boehnike |first2=Patrick |last3=Harrison |first3=T. Mark |last4=Mao |first4=Wendy L. |display-authors=3 |date=19 October 2015 |title=Potentially biogenic carbon preserved in a 4.1 billion-year-old zircon |url=http://www.pnas.org/content/early/2015/10/14/1517557112.full.pdf |format=PDF |journal=Proc. Natl. Acad. Sci. U.S.A. |location=Washington, D.C. |publisher=National Academy of Sciences |doi=10.1073/pnas.1517557112 |issn=1091-6490 |accessdate=20 October 2015 |pmid=26483481 |pmc=4664351 |volume=112 |issue=47 |pages=1451821 |bibcode=2015PNAS..11214518B}} Early edition, published online before print.&lt;/ref&gt; In the history of the Earth, [[biodiversity]] has gone through long periods of expansion, occasionally punctuated by [[extinction event|mass extinction events]]. Over 99% of all [[species]]&lt;ref name=&quot;Book-Biology&quot;&gt;{{cite book |editor1=Kunin, W.E. |editor2=Gaston, Kevin |title=The Biology of Rarity: Causes and consequences of rarecommon differences |url=https://books.google.com/books?id=4LHnCAAAQBAJ&amp;pg=PA110&amp;lpg=PA110&amp;dq#v=onepage&amp;q&amp;f=false |date=31 December 1996 |isbn=978-0412633805 |accessdate=26 May 2015}}&lt;/ref&gt; that ever lived on Earth are [[extinct]].&lt;ref name=&quot;StearnsStearns2000&quot;&gt;{{cite book |last=Stearns |first=Beverly Peterson |last2=Stearns |first2=S. C. |last3=Stearns |first3=Stephen C. |title=Watching, from the Edge of Extinction |url=https://books.google.com/books?id=0BHeC-tXIB4C&amp;q=99%20percent#v=onepage&amp;q=99%20percent&amp;f=false |year=2000 |publisher=[[Yale University Press]] |isbn=978-0-300-08469-6|page=preface x |accessdate=30 May 2017 }}&lt;/ref&gt;&lt;ref name=&quot;NYT-20141108-MJN&quot;&gt;{{cite news |last=Novacek |first=Michael J. |title=Prehistory's Brilliant Future |url=https://www.nytimes.com/2014/11/09/opinion/sunday/prehistorys-brilliant-future.html |date=8 November 2014 |work=[[New York Times]] |accessdate=25 December 2014}}&lt;/ref&gt; Estimates of the number of species on Earth today vary widely;&lt;ref name=science_241_4872_1441/&gt;&lt;ref name=&quot;MillerSpoolman2012&quot;&gt;{{cite book |last1=Miller |first1=G. |last2=Spoolman |first2=Scott |title=Environmental Science |chapter=Biodiversity and Evolution |url=https://books.google.com/books?id=NYEJAAAAQBAJ&amp;pg=PA62 |date=1 January 2012 |publisher=[[Cengage Learning]] |isbn=1-133-70787-4 |page=62 |accessdate=27 December 2014}}&lt;/ref&gt;&lt;ref name=&quot;NSF-2016002&quot;&gt;{{cite news |author=Staff |title=Researchers find that Earth may be home to 1 trillion species |url=http://www.nsf.gov/news/news_summ.jsp?cntn_id=138446 |date=2 May 2016 |work=[[National Science Foundation]] |accessdate=6 May 2016}}&lt;/ref&gt; most species have not been described.&lt;ref name=&quot;PLoS-20110823&quot;&gt;{{cite journal |last1=Mora |first1=C. |last2=Tittensor |first2=D.P. |last3=Adl |first3=S. |last4=Simpson |first4=A.G. |last5=Worm |first5=B. |title=How many species are there on Earth and in the ocean? |date=23 August 2011 |journal=[[PLOS Biology]] |doi=10.1371/journal.pbio.1001127 |pmid=21886479 |pmc=3160336 |volume=9 |issue=8 |pages=e1001127}}&lt;/ref&gt; [[World population|Over 7.4 billion humans]] live on Earth and depend on its [[biosphere]] and [[natural resources]] for their survival. Humans have developed diverse [[Society|societies]] and [[culture]]s; politically, the world has [[List of sovereign states|about 200 sovereign states]].

==Name and etymology==
The [[modern English]] word {{anchor|Name|Etymology}} ''Earth'' developed from a wide variety of [[Middle English]] forms,{{refn|group=n|Including ''eore'', ''ere'', ''erde'', and ''erthe''.&lt;ref name=oedearth/&gt;}} which derived from an [[Old English]] noun most often spelled ''{{linktext|eore}}''.&lt;ref name=oedearth&gt;Oxford English Dictionary, {{nowrap|3rd ed.}} &quot;earth, ''n.''&quot; Oxford University Press (Oxford), 2010.&lt;/ref&gt; It has cognates in every [[Germanic languages|Germanic language]], and their [[proto-Germanic]] root has been reconstructed as [[wikt:Appendix:Proto-Germanic/er|*''er'']]. In its earliest appearances, ''eore'' was already being used to translate the many senses of [[Latin language|Latin]] ''{{linktext|terra}}'' and [[Ancient Greek language|Greek]] {{linktext|}} (''g''): the ground,{{refn|group=n|As in ''[[Beowulf]]'' (153133):&lt;br /&gt;''Wearp a wundelml&amp;nbsp;&amp;nbsp;&amp;nbsp;wrttum gebunden&lt;br /&gt;yrre oretta,&amp;nbsp;&amp;nbsp;&amp;nbsp;t hit on '''eoran''' lg,&lt;br /&gt;sti ond stylecg.''&lt;ref name=oedearth/&gt;&lt;ref name=beo/&gt;&lt;br /&gt;&quot;He threw the artfully-wound sword so that it lay upon the '''earth''', firm and sharp-edged.&quot;&lt;ref name=beo&gt;''Beowulf''. Trans. Chad Matlick in [http://www.as.wvu.edu/english/oeoe/english311/1799.html &quot;''Beowulf'': Lines 1399 to 1799&quot;]. West Virginia University. Accessed 5 August 2014. {{ang icon}} &amp; {{en icon}}&lt;/ref&gt;}} its [[soil]],{{refn|group=n|As in the Old English glosses of the ''[[Lindisfarne Gospels]]'' ([[Luke 13]]:7):&lt;br /&gt;Succidite ergo illam ut quid etiam '''terram''' occupat: ''hrendas'' uel ''scearfa foron ailca ''uel'' hia to huon uutedlice '''eoro''' gioneta ''uel'' gemerras.''&lt;ref name=oedearth/&gt;&lt;br /&gt;&quot;Remove it. Why should it use up the '''soil'''?&quot;&lt;ref&gt;''Mounce Reverse-Intralinear New Testament'': &quot;[https://www.biblegateway.com/passage/?search=Luke%2013:7&amp;version=MOUNCE Luke 13:7]&quot;. Hosted at ''Bible Gateway''. 2014. Accessed 5 August 2014. {{grc icon}} &amp; {{en icon}}&lt;/ref&gt;}} dry land,{{refn|group=n|As in [[lfric of Eynsham|lfric]]'s ''[[Heptateuch]]'' ([[Book of Genesis|Gen. 1]]:10):&lt;br /&gt;''Ond God gecygde a drignysse '''eoran''' ond re wtera gegaderunge he het s''.&lt;ref name=oedearth/&gt;&lt;ref&gt;lfric of Eynsham. [http://wordhord.org/nasb/genesis.html ''Heptateuch''. Reprinted by S.J. Crawford as ''The Old English Version of the Heptateuch, lfrics Treatise on the Old and New Testament and his Preface to Genesis''. Humphrey Milford (London), 1922.] Hosted at ''Wordhord''. Accessed 5 August 2014. {{ang icon}}&lt;/ref&gt;&lt;br /&gt;&quot;And God called the dry land '''Earth'''; and the gathering together of the waters called he Seas.&quot;&lt;ref&gt;[[King James Version]] of [[the Bible]]: &quot;[https://www.biblegateway.com/passage/?search=Genesis%201:10&amp;version=KJV Genesis 1:10]&quot;. Hosted at ''Bible Gateway''. 2014. Accessed 5 August 2014.&lt;/ref&gt;}} the human world,{{refn|group=n|As in the [[Wessex Gospels]] ([[Matthew 28|Matt. 28]]:18):&lt;br /&gt;''Me is geseald lc anweald on heofonan &amp; on '''eoran'''''.&lt;ref name=oedearth/&gt;&lt;br /&gt;&quot;All authority in heaven and on '''earth''' has been given to me.&quot;&lt;ref&gt;''Mounce Reverse-Intralinear New Testament'': &quot;[https://www.biblegateway.com/passage/?search=Matthew+28%3A18&amp;version=MOUNCE Matthew 28:18]&quot;. Hosted at ''Bible Gateway''. 2014. Accessed 5 August 2014. {{grc icon}} &amp; {{en icon}}&lt;/ref&gt;}} the surface of the world (including the sea),{{refn|group=n|As in the [[Codex Junius]]'s ''[[Genesis A|Genesis]]'' (11216):&lt;br /&gt;''her rest gesceop&amp;nbsp;&amp;nbsp;&amp;nbsp;ece drihten,&lt;br /&gt;helm eallwihta,&amp;nbsp;&amp;nbsp;&amp;nbsp;heofon and '''eoran''',&lt;br /&gt;rodor arrde&amp;nbsp;&amp;nbsp;&amp;nbsp;and is rume land&lt;br /&gt;gestaelode&amp;nbsp;&amp;nbsp;&amp;nbsp;strangum mihtum,&lt;br /&gt;frea lmihtig.''&lt;ref name=oedearth/&gt;&lt;ref&gt;&quot;[http://www.maldura.unipd.it/dllags/brunetti/OE/TESTI/GenesisA/DATI/testo.html Genesis A]&quot;. Hosted at the Dept. of Linguistic Studies at the University of Padua. Accessed 5 August 2014. {{ang icon}}&lt;/ref&gt;&lt;br /&gt;&quot;Here first with mighty power the Everlasting Lord, the Helm of all created things, Almighty King, made '''earth''' and heaven, raised up the sky and founded the spacious land.&quot;&lt;ref&gt;Killings, Douglas. [http://www.gutenberg.org/files/618/618-h/618-h.htm ''Codex Junius 11'', I.ii]. 1996. Hosted at Project Gutenberg. Accessed 5 August 2014.&lt;/ref&gt;}} and the globe itself.{{refn|group=n|As in [[lfric of Eynsham|lfric]]'s ''On the Seasons of the Year'' {{nowrap|(Ch. 6,}} 9):&lt;br /&gt;''Seo '''eore''' stent on gelicnysse anre pinnhnyte, &amp; seo sunne glit onbutan be Godes gesetnysse.''&lt;ref name=oedearth/&gt;&lt;br /&gt;&quot;The '''earth''' can be compared to a pine cone, and the Sun glides around it by God's decree.&lt;ref&gt;lfric, Abbot of Eynsham. &quot;''De temporibus annis''&quot; Trans. {{nowrap|P. Baker}} as &quot;[http://faculty.virginia.edu/OldEnglish/aelfric/detemp.html On the Seasons of the Year]&quot;. Hosted at Old English at the University of Virginia, 1998. Accessed 6 August 2014.&lt;/ref&gt;}} As with [[Terra (goddess)|Terra]] and [[Gaia (goddess)|Gaia]], Earth was a [[earth goddess|personified goddess]] in [[Germanic religion (aboriginal)|Germanic paganism]]: the [[Angles]] were listed by [[Tacitus]] as among the [[Anglo-Saxon paganism|devotees]] of [[Nerthus]],&lt;ref&gt;[[Tacitus]]. ''[[Germania (Tacitus)|Germania]]'', {{nowrap|Ch. 40}}.&lt;/ref&gt; and later [[Norse mythology]] included [[Jr]], a giantess often given as the mother of [[Thor]].&lt;ref name=&quot;SIMEK179&quot;&gt;[[Rudolf Simek|Simek, Rudolf]]. Trans. Angela Hall as ''Dictionary of Northern Mythology'', {{nowrap|p. 179.}} [[Boydell &amp; Brewer|D.S. Brewer]], 2007. {{ISBN|0-85991-513-1}}.&lt;/ref&gt;

Originally, ''earth'' was written in lowercase, and from [[early Middle English]], its [[definite]] sense as &quot;the globe&quot; was expressed as ''[[definite article|the]] earth''. By [[early Modern English]], many nouns were capitalized, and ''the earth'' became (and often remained) ''the Earth'', particularly when referenced along with other heavenly bodies. More recently, the name is sometimes simply given as ''Earth'', by analogy with the names of the [[Solar System|other planets]].&lt;ref name=oedearth/&gt; [[Style guide|House styles]] now vary: [[Oxford spelling]] recognizes the lowercase form as the most common, with the capitalized form an acceptable variant. Another convention capitalizes &quot;Earth&quot; when appearing as a name (e.g. &quot;Earth's atmosphere&quot;) but writes it in lowercase when preceded by ''the'' (e.g. &quot;the atmosphere of the earth&quot;). It almost always appears in lowercase in colloquial expressions such as &quot;what on earth are you doing?&quot;&lt;ref name=&quot;oxford&quot;&gt;''The New Oxford Dictionary of English'', {{nowrap|1st ed.}} &quot;earth&quot;. Oxford University Press (Oxford), 1998. {{ISBN|0-19-861263-X}}.&lt;/ref&gt;

==Chronology==
{{Main article|History of Earth}}

===Formation===
[[File:Protoplanetary-disk.jpg|thumb|left|Artist's impression of the early Solar System's planetary disk]]

The oldest material found in the [[Solar System]] is dated to {{val|4.5672|0.0006|ul=billion years ago}} (Bya).&lt;ref name=bowring_housch1995/&gt; By {{val|4.54|0.04|u=Bya}}&lt;ref name=&quot;age_earth1&quot; /&gt; the primordial Earth had formed. The [[Formation and evolution of the Solar System|formation and evolution of Solar System]] bodies occurred along with the Sun. In theory, a [[solar nebula]] partitions a volume out of a [[molecular cloud]] by gravitational collapse, which begins to spin and flatten into a [[circumstellar disk]], and then the planets grow out of that disk along with the Sun. A nebula contains gas, ice grains, and [[Cosmic dust|dust]] (including [[primordial nuclide]]s). According to [[nebular theory]], [[planetesimal]]s formed by [[accretion (astrophysics)|accretion]], with the primordial Earth taking 10{{val|20|ul=million years}} (Mys) to form.&lt;ref name=nature418_6901_949/&gt;

A subject of on-going research is the formation of the Moon, some 4.53 Bya.&lt;ref name=science310_5754_1671/&gt; A [[working hypothesis]] is that it was formed by accretion from material loosed from Earth after a [[Mars]]-sized object, named [[Theia (planet)|Theia]], [[giant impact hypothesis|impacted]] Earth.&lt;ref name=reilly20091022/&gt; In this scenario, the mass of Theia was approximately 10% of that of Earth,&lt;ref name=canup_asphaug2001a/&gt; it impacted Earth with a glancing blow,&lt;ref name=canup_asphaug2001b/&gt; and some of its mass merged with Earth. Between approximately 4.1 and {{val|3.8|u=Bya}}, numerous [[asteroid]] impacts during the [[Late Heavy Bombardment]] caused significant changes to the greater surface environment of the Moon, and by inference, to that of Earth.

===Geological history===
{{Main article|Geological history of Earth}}
[[File:USA 10654 Bryce Canyon Luca Galuzzi 2007.jpg|thumb|[[Hoodoo (geology)|Hoodoos]] at the [[Bryce Canyon National Park]], [[Utah]]]]

Earth's atmosphere and oceans were formed by [[Volcano|volcanic activity]] and [[outgassing]] that included water vapor. The [[origin of the world's oceans]] was condensation augmented by water and ice delivered by asteroids, [[protoplanet]]s, and [[comet]]s.&lt;ref name=&quot;watersource&quot;/&gt; In [[faint young Sun paradox|this model]], atmospheric &quot;greenhouse gases&quot; kept the oceans from freezing when the newly forming Sun had only 70% of its [[solar luminosity|current luminosity]].&lt;ref name=asp2002/&gt; By {{val|3.5|u=Bya}}, [[Earth's magnetic field]] was established, which helped prevent the atmosphere from being stripped away by the [[solar wind]].&lt;ref name=physorg20100304/&gt;

A crust formed when the molten outer layer of Earth cooled [[Phase transition|to form]] a solid. The two models&lt;ref name=williams_santosh2004/&gt; that explain land mass propose either a steady growth to the present-day forms&lt;ref name=science164_1229/&gt; or, more likely, a rapid growth&lt;ref name=tp322_19/&gt; early in Earth history&lt;ref name=rg6_175/&gt; followed by a long-term steady continental area.&lt;ref name=science310_5756_1947/&gt;&lt;ref name=jaes23_799/&gt;&lt;ref name=ajes38_613/&gt; Continents formed by [[plate tectonics]], a process ultimately driven by the continuous loss of heat from Earth's interior. On [[Geologic time scale|time scales]] lasting hundreds of millions of years, the [[supercontinent]]s have assembled and broken apart. Roughly {{val|750|u=million years ago}} (Mya), one of the earliest known supercontinents, [[Rodinia]], began to break apart. The continents later recombined to form [[Pannotia]], 600{{val|540|u=Mya}}, then finally [[Pangaea]], which also broke apart {{val|180|u=Mya}}.&lt;ref name=as92_324/&gt;

The present pattern of [[ice age]]s began about {{val|40|u=Mya}} and then intensified during the [[Pleistocene]] about {{val|3|u=Mya}}. High-[[latitude]] regions have since undergone repeated cycles of glaciation and thaw, repeating about every 40,000{{val|100000|u=years}}. The last continental glaciation ended 10,000&amp;nbsp;years ago.&lt;ref name=psc/&gt;

===Origin of life and evolution===
{{Life timeline}}
{{Main article|Abiogenesis|Evolutionary history of life}}
[[File:PhylogeneticTree, Woese 1990.PNG|thumb|left|Speculative [[phylogenetic tree]] of life on Earth based on [[rRNA]] analysis]]

[[Chemical reaction]]s led to the first self-replicating molecules about four billion years ago. A half billion years later, the [[last universal common ancestor|last common ancestor of all life]] arose.&lt;ref name=sa282_6_90/&gt; The evolution of [[photosynthesis]] allowed the Sun's energy to be harvested directly by life forms. The resultant [[molecular oxygen]] (O&lt;sub&gt;2&lt;/sub&gt;) accumulated in the atmosphere and due to interaction with ultraviolet solar radiation, formed a protective [[ozone layer]] (O&lt;sub&gt;3&lt;/sub&gt;) in the upper atmosphere.&lt;ref name=&quot;NYT-20131003&quot;&gt;{{cite news |last=Zimmer |first=Carl |authorlink=Carl Zimmer |title=Earths Oxygen: A Mystery Easy to Take for Granted |url=https://www.nytimes.com/2013/10/03/science/earths-oxygen-a-mystery-easy-to-take-for-granted.html |date=3 October 2013 |work=[[New York Times]] |accessdate=3 October 2013}}&lt;/ref&gt; The incorporation of smaller cells within larger ones resulted in the [[endosymbiotic theory|development of complex cells]] called [[eukaryote]]s.&lt;ref name=jas22_3_225/&gt; True multicellular organisms formed as cells within [[Colony (biology)|colonies]] became increasingly specialized. Aided by the absorption of harmful [[ultraviolet radiation]] by the ozone layer, life colonized Earth's surface.&lt;ref name=burton20021129/&gt; Among the earliest [[fossil]] evidence for [[life]] is [[microbial mat]] fossils found in 3.48 billion-year-old [[sandstone]] in [[Western Australia]],&lt;ref name=&quot;Origin1&quot;&gt;Schopf, JW, Kudryavtsev, AB, Czaja, AD, and Tripathi, AB. (2007). ''Evidence of Archean life: Stromatolites and microfossils.'' Precambrian Research 158:141155.&lt;/ref&gt;&lt;ref name=&quot;Origin2&quot;&gt;Schopf, JW (2006). ''Fossil evidence of Archaean life.'' Philos Trans R Soc Lond B Biol Sci 29;361(1470) 869-85.&lt;/ref&gt;&lt;ref name=&quot;RavenJohnson2002&quot;&gt;{{cite book |first=Peter |last=Hamilton Raven |first2=George |last2=Brooks Johnson |title=Biology |url=https://books.google.com/books?id=GtlqPwAACAAJ |date=2002 |publisher=McGraw-Hill Education |isbn=978-0-07-112261-0 |page=68 |accessdate=7 July 2013}}&lt;/ref&gt;&lt;ref name=&quot;AP-20131113&quot;&gt;{{cite news |last=Borenstein |first=Seth |title=Oldest fossil found: Meet your microbial mom |url=http://apnews.excite.com/article/20131113/DAA1VSC01.html |date=13 November 2013 |agency=Associated Press |accessdate=15 November 2013}}&lt;/ref&gt;&lt;ref name=&quot;AST-20131108&quot;&gt;{{cite journal |last1=Noffke |first1=Nora |last2=Christian |first2=Daniel |last3=Wacey |first3=David |last4=Hazen |first4=Robert M. |title=Microbially Induced Sedimentary Structures Recording an Ancient Ecosystem in the ca. 3.48 Billion-Year-Old Dresser Formation, Pilbara, Western Australia |url=http://online.liebertpub.com/doi/abs/10.1089/ast.2013.1030 |date=8 November 2013 |journal=[[Astrobiology (journal)|Astrobiology]] |doi=10.1089/ast.2013.1030 |accessdate=15 November 2013 |bibcode=2013AsBio..13.1103N |pmid=24205812 |pmc=3870916 |volume=13 |issue=12 |pages=110324}}&lt;/ref&gt; [[Biogenic substance|biogenic]] [[graphite]] found in 3.7 billion-year-old [[Metasediment|metasedimentary rocks]] in [[Western Greenland]],&lt;ref name=&quot;NG-20131208&quot;&gt;{{cite journal |last1=Ohtomo |first1=Yoko |last2=Kakegawa |first2=Takeshi |last3=Ishida |first3=Akizumi |last4=Nagase |first4=Toshiro |last5=Rosing |first5=Minik T. |display-authors=3 |url=http://www.nature.com/ngeo/journal/vaop/ncurrent/full/ngeo2025.html |date=January 2014 |title=Evidence for biogenic graphite in early Archaean Isua metasedimentary rocks |journal=[[Nature Geoscience]] |location=London |publisher=[[Nature Publishing Group]] |volume=7 |issue=1 |pages=2528 |bibcode=2014NatGe...7...25O |doi=10.1038/ngeo2025 |issn=1752-0894}}&lt;/ref&gt; remains of [[biotic material]] found in 4.1 billion-year-old rocks in Western Australia.&lt;ref name=&quot;AP-20151019&quot; /&gt;&lt;ref name=&quot;PNAS-20151014-pdf&quot; /&gt;

During the [[Neoproterozoic]], {{val|750|to|580|u=Mya}}, much of Earth might have been covered in ice. This hypothesis has been termed &quot;[[Snowball Earth]]&quot;, and it is of particular interest because it preceded the [[Cambrian explosion]], when multicellular life forms significantly increased in complexity.&lt;ref name=kirschvink1992/&gt; Following the Cambrian explosion, {{val|535|u=Mya}}, there have been five [[Extinction event|major mass extinctions]].&lt;ref name=&quot;sci215_4539_1501&quot; /&gt; The [[CretaceousTertiary extinction event|most recent such event]] was {{val|66|u=Mya}}, when [[Chicxulub impactor|an asteroid impact]] triggered the extinction of the non-[[bird|avian]] [[dinosaur]]s and other large reptiles, but spared some small animals such as [[mammal]]s, which then resembled [[shrew]]s. Over the past {{val|66|ul=Mys}}, mammalian life has diversified, and several million years ago an African ape-like animal such as ''[[Orrorin tugenensis]]'' gained the ability to stand upright.&lt;ref name=&quot;gould1994&quot; /&gt; This facilitated tool use and encouraged communication that provided the nutrition and stimulation needed for a larger brain, which allowed the [[Human evolution|evolution of humans]]. The [[History of agriculture|development of agriculture]], and then [[List of ancient civilizations|civilization]], led to humans having an [[Human impact on the environment|influence on Earth]] and the nature and quantity of other life forms that continues today.&lt;ref name=&quot;bgsa119_1_140&quot; /&gt;

===Future===
{{Main article|Future of Earth}}
{{See also|Global catastrophic risk}}
Earth's expected long-term future is closely tied to that of the Sun. Over the next {{val|1.1|u=Bys}}, solar luminosity will increase by 10%, and over the next {{val|3.5|u=Bys}} by 40%.&lt;ref name=&quot;sun_future&quot;/&gt; The Earth's increasing surface temperature will accelerate the [[inorganic]] [[Carbon cycle|CO&lt;sub&gt;2&lt;/sub&gt; cycle]], reducing its concentration to levels lethally low for plants ({{val|10|ul=ppm}} for [[C4 carbon fixation|C4 photosynthesis]]) in approximately 500{{val|900|u=Mys}}.&lt;ref name=&quot;britt2000&quot; /&gt; The lack of vegetation will result in the loss of oxygen in the atmosphere, and animal life will become extinct.&lt;ref name=ward_brownlee2002/&gt; After another billion years all surface water will have disappeared&lt;ref name=carrington/&gt; and the mean global temperature will reach {{val|70|ul=degC}}&lt;ref name=ward_brownlee2002/&gt; ({{val|158|ul=degF}}). From that point, the Earth is expected to be habitable for another {{val|500|u=Myr}},&lt;ref name=&quot;britt2000&quot;/&gt; possibly up to {{val|2.3|u=Ga}} if nitrogen is removed from the atmosphere.&lt;ref name=pnas1_24_9576/&gt; Even if the Sun were eternal and stable, 27% of the water in the modern oceans will descend to the [[Mantle (geology)|mantle]] in one billion years, due to reduced steam venting from mid-ocean ridges.&lt;ref name=hess5_4_569/&gt;

The Sun will [[stellar evolution|evolve]] to become a [[red giant]] in about {{val|5|u=Bys}}. Models predict that the Sun will expand to roughly {{convert|1|AU|e6km e6mi|lk=in|abbr=unit}}, which is about 250 times its present radius.&lt;ref name=&quot;sun_future&quot; /&gt;&lt;ref name=&quot;sun_future_schroder&quot;/&gt; Earth's fate is less clear. As a red giant, the Sun will lose roughly 30% of its mass, so, without tidal effects, Earth will move to an orbit {{convert|1.7|AU|e6km e6mi|lk=off|abbr=unit}} from the Sun when the star reaches its maximum radius. Most, if not all, remaining life will be destroyed by the Sun's increased luminosity (peaking at about 5,000 times its present level).&lt;ref name=&quot;sun_future&quot; /&gt; A 2008 simulation indicates that Earth's orbit will eventually decay due to [[Tidal acceleration|tidal effects]] and drag, causing it to enter the Sun's atmosphere and be vaporized.&lt;ref name=&quot;sun_future_schroder&quot; /&gt;

==Physical characteristics&lt;!--linked from 'Earth physical characteristics tables'--&gt;==

===Shape===
[[File:Earth2014shape SouthAmerica small.jpg|thumb|Shape of planet Earth. Shown are distances between surface relief and the geocentre. The South American Andes summits are visible as elevated areas. Data from the Earth2014&lt;ref name=&quot;Earth2014&quot;&gt;{{cite web |url=http://www.iapg.bgu.tum.de/9321785--~iapg~forschung~Topographie~Earth2014.html |title=Earth2014 global topography (relief) model |publisher=Institut fr Astronomische und Physikalische Geodsie |accessdate=4 March 2016}}&lt;/ref&gt; global relief model.]]
{{Main article|Figure of the Earth}}

The shape of Earth is approximately [[oblate spheroid]]al. Due to [[rotation]], the Earth is flattened along the geographic axis and [[equatorial bulge|bulging]] around the [[equator]].&lt;ref name=milbert_smith96/&gt; The diameter of the Earth at the equator is {{convert|43|km|mi}} larger than the [[Geographical pole|pole]]-to-pole diameter.&lt;ref name=&quot;ngdc2006&quot;/&gt; Thus the point on the surface farthest from Earth's [[center of mass]] is the summit of the equatorial [[Chimborazo (volcano)|Chimborazo]] volcano in [[Ecuador]].&lt;ref name=ps20_5_16/&gt;&lt;ref name=lancet365_9462_831/&gt;&lt;ref name=tall_tales/&gt;&lt;ref name=&quot;The 'Highest' Spot on Earth&quot;&gt;{{cite web |url=http://www.npr.org/templates/story/story.php?storyId=9428163 |title=The 'Highest' Spot on Earth |publisher=Npr.org |date=7 April 2007 |accessdate=31 July 2012}}&lt;/ref&gt; The average diameter of the reference spheroid is {{convert|12742|km|mi}}. Local [[topography]] deviates from this idealized spheroid, although on a global scale these deviations are small compared to Earth's radius: The maximum deviation of only 0.17% is at the [[Mariana Trench]] ({{convert|10911|m|ft}} below local sea level), whereas [[Mount Everest]] ({{convert|8848|m|ft}} above local sea level) represents a deviation of 0.14%.{{refn|group=n| If Earth were shrunk to the size of a [[billiard ball]], some areas of Earth such as large mountain ranges and oceanic trenches would feel like tiny imperfections, whereas much of the planet, including the [[Great Plains]] and the [[abyssal plain]]s, would feel smoother.&lt;ref&gt;{{cite web |url=http://billiards.colostate.edu/bd_articles/2013/june13.pdf |title=Is a Pool Ball Smoother than the Earth? |publisher=Billiards Digest |date=1 June 2013 |accessdate=26 November 2014}}&lt;/ref&gt;}}

In [[geodesy]], the exact shape that Earth's oceans would adopt in the absence of land and perturbations such as tides and winds is called the [[geoid]]. More precisely, the geoid is the surface of gravitational equipotential at [[mean sea level]].

===Chemical composition===
{{See also|Abundance of elements on Earth}}
{| class=&quot;wikitable&quot; style=&quot;float: right; clear: right; margin-left: 2em;&quot;
|+ Chemical composition of the crust&lt;ref name=brown_mussett1981/&gt;
!rowspan=&quot;2&quot;|Compound
!rowspan=&quot;2&quot;|Formula
!colspan=&quot;2&quot;|Composition
|-
!style=&quot;font-size: smaller;&quot;|Continental
!style=&quot;font-size: smaller;&quot;|Oceanic
|-
|[[silica]]
|style=&quot;text-align: center;&quot;|SiO&lt;sub&gt;2&lt;/sub&gt;
|style=&quot;text-align: right;&quot;|60.2%
|style=&quot;text-align: right;&quot;|48.6%
|-
|[[Aluminum oxide|alumina]]
|style=&quot;text-align: center;&quot;|Al&lt;sub&gt;2&lt;/sub&gt;O&lt;sub&gt;3&lt;/sub&gt;
|style=&quot;text-align: right;&quot;|15.2%
|style=&quot;text-align: right;&quot;|16.5%
|-
|[[Calcium oxide|lime]]
|style=&quot;text-align: center;&quot;|CaO
|style=&quot;text-align: right;&quot;|5.5%
|style=&quot;text-align: right;&quot;|12.3%
|-
|[[Magnesium oxide|magnesia]]
|style=&quot;text-align: center;&quot;|MgO
|style=&quot;text-align: right;&quot;|3.1%
|style=&quot;text-align: right;&quot;|6.8%
|-
|[[iron(II) oxide]]
|style=&quot;text-align: center;&quot;|FeO
|style=&quot;text-align: right;&quot;|3.8%
|style=&quot;text-align: right;&quot;|6.2%
|-
|[[sodium oxide]]
|style=&quot;text-align: center;&quot;|Na&lt;sub&gt;2&lt;/sub&gt;O
|style=&quot;text-align: right;&quot;|3.0%
|style=&quot;text-align: right;&quot;|2.6%
|-
|[[potassium oxide]]
|style=&quot;text-align: center;&quot;|K&lt;sub&gt;2&lt;/sub&gt;O
|style=&quot;text-align: right;&quot;|2.8%
|style=&quot;text-align: right;&quot;|0.4%
|-
|[[iron(III) oxide]]
|style=&quot;text-align: center;&quot;|Fe&lt;sub&gt;2&lt;/sub&gt;O&lt;sub&gt;3&lt;/sub&gt;
|style=&quot;text-align: right;&quot;|2.5%
|style=&quot;text-align: right;&quot;|2.3%
|-
|[[water (molecule)|water]]
|style=&quot;text-align: center;&quot;|H&lt;sub&gt;2&lt;/sub&gt;O
|style=&quot;text-align: right;&quot;|1.4%
|style=&quot;text-align: right;&quot;|1.1%
|-
|[[carbon dioxide]]
|style=&quot;text-align: center;&quot;|CO&lt;sub&gt;2&lt;/sub&gt;
|style=&quot;text-align: right;&quot;|1.2%
|style=&quot;text-align: right;&quot;|1.4%
|-
|[[titanium dioxide]]
|style=&quot;text-align: center;&quot;|TiO&lt;sub&gt;2&lt;/sub&gt;
|style=&quot;text-align: right;&quot;|0.7%
|style=&quot;text-align: right;&quot;|1.4%
|-
|[[phosphorus pentoxide]]
|style=&quot;text-align: center;&quot;|P&lt;sub&gt;2&lt;/sub&gt;O&lt;sub&gt;5&lt;/sub&gt;
|style=&quot;text-align: right;&quot;|0.2%
|style=&quot;text-align: right;&quot;|0.3%
|-
!colspan=&quot;2&quot;|Total
!style=&quot;text-align: right;&quot;|99.6%
!style=&quot;text-align: right;&quot;|99.9%
|}

[[Earth mass|Earth's mass]] is approximately {{val|5.97|e=24|ul=kg}} (5,970 [[yottagram|Yg]]). It is composed mostly of [[iron]] (32.1%), [[oxygen]] (30.1%), [[silicon]] (15.1%), [[magnesium]] (13.9%), [[sulfur]] (2.9%), [[nickel]] (1.8%), [[calcium]] (1.5%), and [[aluminium]] (1.4%), with the remaining 1.2% consisting of trace amounts of other elements. Due to [[mass segregation]], the core region is estimated to be primarily composed of iron (88.8%), with smaller amounts of nickel (5.8%), sulfur (4.5%), and less than 1% trace elements.&lt;ref name=pnas71_12_6973/&gt;

The most common rock constituents of the crust are nearly all oxides: chlorine, sulfur, and fluorine are the important exceptions to this and their total amount in any rock is usually much less than 1%. Over 99% of the crust is composed of 11 oxides, principally silica, alumina, iron oxides, lime, magnesia, potash, and soda.&lt;ref name=brown_mussett1981/&gt;&lt;ref name=pnas71_12_6973/&gt;&lt;ref&gt;{{EB1911|title=Petrology |inline=1}}&lt;/ref&gt;

===Internal structure===
{{Main article|Structure of the Earth}}
Earth's interior, like that of the other terrestrial planets, is divided into layers by their [[chemical]] or physical ([[Rheology|rheological]]) properties. The outer layer is a chemically distinct [[Silicate minerals|silicate]] solid crust, which is underlain by a highly [[viscous]] solid mantle. The crust is separated from the mantle by the [[Mohorovii discontinuity]]. The thickness of the crust varies from about {{val|6|ul=km}} (kilometers) under the oceans to 3050&amp;nbsp;km for the continents. The crust and the cold, rigid, top of the [[upper mantle]] are collectively known as the lithosphere, and it is of the lithosphere that the tectonic plates are composed. Beneath the lithosphere is the [[asthenosphere]], a relatively low-viscosity layer on which the lithosphere rides. Important changes in crystal structure within the mantle occur at 410 and {{val|660|u=km}} below the surface, spanning a [[Transition zone (Earth)|transition zone]] that separates the upper and lower mantle. Beneath the mantle, an extremely low viscosity liquid [[outer core]] lies above a solid [[inner core]].&lt;ref name=tanimoto_ahrens1995/&gt; The Earth's inner core might rotate at a slightly higher [[angular velocity]] than the remainder of the planet, advancing by 0.10.5 per year.&lt;ref name=science309_5739_1313/&gt; The radius of the inner core is about one fifth of that of Earth.

{| class=&quot;wikitable&quot; style=&quot;text-align:center;&quot;
|+ Geologic layers of Earth&lt;ref name=pnas76_9_4192/&gt;
|-
! rowspan=&quot;8&quot; style=&quot;font-size:smaller; text-align:center;&quot;|[[File:Earth-cutaway-schematic-english.svg|frameless|center]]&lt;br /&gt;Earth cutaway from core to exosphere. Not to scale.
!Depth&lt;ref name=robertson2001/&gt;&lt;br /&gt;&lt;span style=&quot;font-size: smaller;&quot;&gt;km&lt;/span&gt;
!style=&quot;vertical-align: bottom;&quot;|Component layer
!Density&lt;br /&gt;&lt;span style=&quot;font-size: smaller;&quot;&gt;g/cm&lt;sup&gt;3&lt;/sup&gt;&lt;/span&gt;
|-
|060
|style=&quot;text-align:left;&quot;|Lithosphere&lt;ref group=&quot;n&quot;&gt;Locally varies between 5 and 200&amp;nbsp;km.&lt;/ref&gt;
|
|- style=&quot;background:#FEFEFE;&quot;
|035
|style=&quot;text-align:left;&quot;| Crust&lt;ref group=&quot;n&quot;&gt;Locally varies between 5 and 70&amp;nbsp;km.&lt;/ref&gt;
|2.22.9
|- style=&quot;background:#FEFEFE;&quot;
|3560
|style=&quot;text-align:left;&quot;| Upper mantle
|3.44.4
|-
|&amp;nbsp;&amp;nbsp;352890
|style=&quot;text-align:left;&quot;|Mantle
|3.45.6
|- style=&quot;background:#FEFEFE;&quot;
|100700
|style=&quot;text-align:left;&quot;| Asthenosphere
|
|-
|28905100
|style=&quot;text-align:left;&quot;|Outer core
|9.912.2
|-
|51006378
|style=&quot;text-align:left;&quot;|Inner core
|12.813.1
|}

===Heat===
{{Main article|Earth's internal heat budget}}
Earth's [[internal heat]] comes from a combination of residual heat from [[planetary accretion]] (about 20%) and heat produced through [[radioactive decay]] (80%).&lt;ref name=&quot;turcotte&quot;/&gt; The major heat-producing [[isotope]]s within Earth are [[potassium-40]], [[uranium-238]], and [[thorium-232]].&lt;ref name=sanders20031210/&gt; At the center, the temperature may be up to {{convert|6000|Celsius}},&lt;ref&gt;{{cite web |title=The Earth's Centre is 1000 Degrees Hotter than Previously Thought |url=http://www.esrf.eu/news/general/Earth-Center-Hotter |website=The European Synchrotron (ESRF) |accessdate=12 April 2015 |archiveurl=https://www.webcitation.org/6HKckNXMF?url=http://www.esrf.eu/news/general/Earth-Center-Hotter/Earth-Centre-Hotter |archivedate=12 June 2013 |date=25 April 2013 |deadurl=no |df=dmy }}&lt;/ref&gt; and the pressure could reach 360&amp;nbsp;[[GPa]].&lt;ref name=ptrsl360_1795_1227/&gt; Because much of the heat is provided by radioactive decay, scientists postulate that early in Earth's history, before isotopes with short half-lives were depleted, Earth's heat production was much higher. At approximately {{val|3|ul=Gyr}}, twice the present-day heat would have been produced, increasing the rates of [[mantle convection]] and plate tectonics, and allowing the production of uncommon igneous rocks such as [[komatiites]] that are rarely formed today.&lt;ref name=&quot;turcotte&quot; /&gt;&lt;ref name=epsl121_1/&gt;

{| class=&quot;wikitable&quot; style=&quot;text-align:center;&quot;
|+ Present-day major heat-producing isotopes&lt;ref name=&quot;T&amp;S 137&quot;/&gt;
|-
! Isotope
! Heat release&lt;br /&gt;&lt;span style=&quot;font-size: smaller;&quot;&gt;{{sfrac|W|kg isotope}}&lt;/span&gt;
! Half-life&lt;br /&gt;&lt;span style=&quot;font-size: smaller;&quot;&gt;years&lt;/span&gt;
! Mean mantle concentration&lt;br /&gt;&lt;span style=&quot;font-size: smaller;&quot;&gt;{{sfrac|kg isotope|kg mantle}}&lt;/span&gt;
! Heat release&lt;br /&gt;&lt;span style=&quot;font-size: smaller;&quot;&gt;{{sfrac|W|kg mantle}}&lt;/span&gt;
|-
| &lt;sup&gt;238&lt;/sup&gt;U
| {{nowrap|94.6  10&lt;sup&gt;6&lt;/sup&gt;}}
| {{nowrap|4.47  10&lt;sup&gt;9&lt;/sup&gt;}}
| {{nowrap|30.8  10&lt;sup&gt;9&lt;/sup&gt;}}
| {{nowrap|2.91  10&lt;sup&gt;12&lt;/sup&gt;}}
|-
| &lt;sup&gt;235&lt;/sup&gt;U
| {{nowrap|569  10&lt;sup&gt;6&lt;/sup&gt;}}
| {{nowrap|0.704  10&lt;sup&gt;9&lt;/sup&gt;}}
| {{nowrap|0.22  10&lt;sup&gt;9&lt;/sup&gt;}}
| {{nowrap|0.125  10&lt;sup&gt;12&lt;/sup&gt;}}
|-
| &lt;sup&gt;232&lt;/sup&gt;Th
| {{nowrap|26.4  10&lt;sup&gt;6&lt;/sup&gt;}}
| {{nowrap|14.0  10&lt;sup&gt;9&lt;/sup&gt;}}
| {{nowrap|124  10&lt;sup&gt;9&lt;/sup&gt;}}
| {{nowrap|3.27  10&lt;sup&gt;12&lt;/sup&gt;}}
|-
| &lt;sup&gt;40&lt;/sup&gt;K
| {{nowrap|29.2  10&lt;sup&gt;6&lt;/sup&gt;}}
| {{nowrap|1.25  10&lt;sup&gt;9&lt;/sup&gt;}}
| {{nowrap|36.9  10&lt;sup&gt;9&lt;/sup&gt;}}
| {{nowrap|1.08  10&lt;sup&gt;12&lt;/sup&gt;}}
|}

The mean heat loss from Earth is {{nowrap|87 mW m&lt;sup&gt;2&lt;/sup&gt;}}, for a global heat loss of {{nowrap|4.42  10&lt;sup&gt;13&lt;/sup&gt; W}}.&lt;ref name=jg31_3_267/&gt; A portion of the core's thermal energy is transported toward the crust by [[mantle plume]]s, a form of convection consisting of upwellings of higher-temperature rock. These plumes can produce [[Hotspot (geology)|hotspots]] and [[flood basalt]]s.&lt;ref name=science246_4926_103/&gt; More of the heat in Earth is lost through plate tectonics, by mantle upwelling associated with [[mid-ocean ridge]]s. The final major mode of heat loss is through conduction through the lithosphere, the majority of which occurs under the oceans because the crust there is much thinner than that of the continents.&lt;ref name=&quot;heat loss&quot; /&gt;{{clear right}}

===Tectonic plates===
{| class=&quot;wikitable&quot; style=&quot;float:right; margin-left:1em;&quot;
|+ [[List of tectonic plates|Earth's major plates]]&lt;ref name=brown_wohletz2005/&gt;
|-
|colspan=&quot;2&quot; style=&quot;font-size: smaller; text-align: center;&quot;|[[File:Tectonic plates (empty).svg|frameless|alt=Shows the extent and boundaries of tectonic plates, with superimposed outlines of the continents they support]]
|-
!Plate name
!Area&lt;br /&gt;&lt;span style=&quot;font-size: smaller;&quot;&gt;10&lt;sup&gt;6&lt;/sup&gt;&amp;nbsp;km&lt;sup&gt;2&lt;/sup&gt;&lt;/span&gt;
|-
| {{legend|#fee6aa|[[Pacific Plate]]}}         ||style=&quot;text-align: center;&quot;|103.3
|-
| {{legend|#fb9a7a|[[African Plate]]&lt;ref group=&quot;n&quot; name=&quot;jaes41_3_379&quot;/&gt;}} ||style=&quot;text-align: center;&quot;| 78.0
|-
| {{legend|#ac8d7f|[[North American Plate]]}}  ||style=&quot;text-align: center;&quot;| 75.9
|-
| {{legend|#7fa172|[[Eurasian Plate]]}}        ||style=&quot;text-align: center;&quot;| 67.8
|-
| {{legend|#8a9dbe|[[Antarctic Plate]]}}       ||style=&quot;text-align: center;&quot;| 60.9
|-
| {{legend|#fcb482|[[Indo-Australian Plate]]}} ||style=&quot;text-align: center;&quot;| 47.2
|-
| {{legend|#ad82b0|[[South American Plate]]}}  ||style=&quot;text-align: center;&quot;| 43.6
|}
{{Main article|Plate tectonics}}
The mechanically rigid outer layer of Earth, the lithosphere, is divided into pieces called tectonic plates. These plates are rigid segments that move in relation to one another at one of three types of plate boundaries: [[Convergent boundary|convergent boundaries]], at which two plates come together, [[Divergent boundary|divergent boundaries]], at which two plates are pulled apart, and [[Transform boundary|transform boundaries]], in which two plates slide past one another laterally. [[Earthquake]]s, [[Volcanism|volcanic activity]], [[Orogeny|mountain-building]], and [[oceanic trench]] formation can occur along these plate boundaries.&lt;ref name=kious_tilling1999/&gt; The tectonic plates ride on top of the asthenosphere, the solid but less-viscous part of the upper mantle that can flow and move along with the plates.&lt;ref name=seligman2008/&gt;

As the tectonic plates migrate, oceanic crust is [[Subduction|subducted]] under the leading edges of the plates at convergent boundaries. At the same time, the upwelling of mantle material at divergent boundaries creates mid-ocean ridges. The combination of these processes recycles the [[oceanic crust]] back into the mantle. Due to this recycling, most of the ocean floor is less than {{val|100|u=Myr}} old in age. The oldest oceanic crust is located in the Western Pacific and has an estimated age of {{val|200|u=Myr}}.&lt;ref name=duennebier1999/&gt;&lt;ref name=noaa20070307/&gt; By comparison, the oldest dated [[continental crust]] is {{val|4030|u=Myr}}.&lt;ref name=cmp134_3/&gt;

The seven major plates are the [[Pacific Plate|Pacific]], [[North American Plate|North American]], [[Eurasian Plate|Eurasian]], [[African Plate|African]], [[Antarctic Plate|Antarctic]], [[Indo-Australian Plate|Indo-Australian]], and [[South American Plate|South American]]. Other notable plates include the [[Arabian Plate]], the [[Caribbean Plate]], the [[Nazca Plate]] off the west coast of South America and the [[Scotia Plate]] in the southern Atlantic Ocean. The Australian Plate fused with the Indian Plate between 50 and {{val|55|u=Mya}}. The fastest-moving plates are the oceanic plates, with the [[Cocos Plate]] advancing at a rate of 75&amp;nbsp;mm/year&lt;ref name=podp2000/&gt; and the Pacific Plate moving 5269&amp;nbsp;mm/year. At the other extreme, the slowest-moving plate is the Eurasian Plate, progressing at a typical rate of 21&amp;nbsp;mm/year.&lt;ref name=gps_time_series/&gt;

===Surface===
{{Main article|Lithosphere|Landform|Extreme points of Earth}}
[[File:AYool topography 15min.png|thumb|left|Present-day Earth [[terrain|altimetry]] and [[bathymetry]]. Data from the [[National Geophysical Data Center]].]]

The total [[Spheroid#Area|surface area]] of the Earth is about {{val|510|end=&amp;nbsp;million|ul=km2}} (197 million sq mi).&lt;ref name=&quot;Pidwirny 2006_8&quot;/&gt; Of this, 70.8%,&lt;ref name=&quot;Pidwirny 2006_8&quot;/&gt; or {{val|361.13|end=&amp;nbsp;million|u=km2}} (139.43 million sq mi), is below sea level and covered by ocean water.&lt;ref&gt;{{cite web |url=https://www.cia.gov/library/publications/the-world-factbook/geos/xx.html |title=CIA&amp;nbsp; The World Factbook |publisher=Cia.gov |accessdate=2 November 2012}}&lt;/ref&gt; Below the ocean's surface are much of the [[continental shelf]], mountains, volcanoes,&lt;ref name=&quot;ngdc2006&quot; /&gt; oceanic trenches, [[submarine canyon]]s, [[oceanic plateau]]s, abyssal plains, and a globe-spanning mid-ocean ridge system. The remaining 29.2% ({{val|148.94|end=&amp;nbsp;million|u=km2}}, or 57.51 million sq mi) not covered by water has [[terrain]] that varies greatly from place to place and consists of mountains, deserts, plains, plateaus, and other [[landform]]s. [[erosion and tectonics|Tectonics and erosion]], [[Types of volcanic eruptions|volcanic eruptions]], [[flooding]], [[weathering]], [[glaciation]], the growth of [[coral reef]]s, and [[Impact event|meteorite impacts]] are among the processes that constantly reshape the Earth's surface over [[geological time]].&lt;ref name=kring/&gt;&lt;ref&gt;{{cite book |title=Earth's Evolving Systems: The History of Planet Earth |first=Ronald |last=Martin |publisher=Jones &amp; Bartlett Learning|year=2011 |url=https://books.google.com/?id=agaOKrvAoeAC&amp;printsec=frontcover&amp;dq=%22earth+systems%22+geology#v=onepage&amp;q=%22earth%20systems%22%20geology&amp;f=false|isbn=9780763780012 }}&lt;/ref&gt;

The continental crust consists of lower density material such as the igneous rocks [[granite]] and [[andesite]]. Less common is [[basalt]], a denser volcanic rock that is the primary constituent of the ocean floors.&lt;ref name=layers_earth/&gt; [[Sedimentary rock]] is formed from the accumulation of sediment that becomes buried and [[Diagenesis|compacted together]]. Nearly 75% of the continental surfaces are covered by sedimentary rocks, although they form about 5% of the crust.&lt;ref name=jessey/&gt; The third form of rock material found on Earth is [[metamorphic rock]], which is created from the transformation of pre-existing rock types through high pressures, high temperatures, or both. The most abundant [[silicate mineral]]s on Earth's surface include [[quartz]], [[feldspar]]s, [[amphibole]], [[mica]], [[pyroxene]] and [[olivine]].&lt;ref name=de_pater_lissauer2010/&gt; Common [[carbonate mineral]]s include [[calcite]] (found in [[limestone]]) and [[dolomite]].&lt;ref name=wekn_bulakh2004/&gt;

The elevation of the land surface varies from the low point of 418&amp;nbsp;m at the [[Dead Sea]], to a maximum altitude of 8,848&amp;nbsp;m at the top of Mount Everest. The mean height of land above sea level is about {{convert|797|m}}&lt;ref&gt;https://ngdc.noaa.gov/mgg/global/etopo1_surface_histogram.html&lt;/ref&gt;.

The [[pedosphere]] is the outermost layer of Earth's continental surface and is composed of [[soil]] and subject to [[pedogenesis|soil formation processes]]. The total arable land is 10.9% of the land surface, with 1.3% being permanent cropland.&lt;ref&gt;{{cite web |title=World Bank arable land |url=http://data.worldbank.org/indicator/AG.LND.ARBL.ZS/countries/1W?display=graph |website=worldbank.org |accessdate=19 October 2015}}&lt;/ref&gt;&lt;ref&gt;{{cite web |title=World Bank permanent cropland |url=http://data.worldbank.org/indicator/AG.LND.CROP.ZS/countries?display=graph |website=worldbank.org |accessdate=19 October 2015}}&lt;/ref&gt; Close to 40% of Earth's land surface is used for cropland and pasture, or an estimated 1.3{{e|7}}&amp;nbsp;km&lt;sup&gt;2&lt;/sup&gt; of cropland and 3.4{{e|7}}&amp;nbsp;km&lt;sup&gt;2&lt;/sup&gt; of pastureland.&lt;ref name=fao1994/&gt;

===Hydrosphere===
{{Main article|Hydrosphere}}
[[File:Earth elevation histogram 2.svg|thumb|Elevation histogram of Earth's surface]]
The abundance of water on Earth's surface is a unique feature that distinguishes the &quot;Blue Planet&quot; from other planets in the Solar System. Earth's hydrosphere consists chiefly of the oceans, but technically includes all water surfaces in the world, including inland seas, lakes, rivers, and underground waters down to a depth of 2,000&amp;nbsp;m. The deepest underwater location is [[Challenger Deep]] of the Mariana Trench in the Pacific Ocean with a depth of 10,911.4&amp;nbsp;m.&lt;ref group=&quot;n&quot; name=&quot;trench_depth&quot;/&gt;&lt;ref name=kaiko7000/&gt;

The mass of the oceans is approximately 1.35{{e|18}}&amp;nbsp;[[metric ton]]s or about 1/4400 of Earth's total mass. The oceans cover an area of {{val|3.618|e=8|u=km2}} with a mean depth of {{val|3682|u=m}}, resulting in an estimated volume of {{val|1.332|e=9|u=km3}}.&lt;ref name=ocean23_2_112/&gt; If all of Earth's crustal surface were at the same elevation as a smooth sphere, the depth of the resulting world ocean would be 2.7 to 2.8&amp;nbsp;km.&lt;ref&gt;{{cite encyclopedia |url=https://www.britannica.com/EBchecked/topic/559627/sphere-depth-of-the-ocean |title=sphere depth of the ocean&amp;nbsp; hydrology |encyclopedia=Encyclopdia Britannica |accessdate=12 April 2015}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=https://ase.tufts.edu/cosmos/print_chapter.asp?id=4 |title=Third rock from the Sun&amp;nbsp; restless Earth |work=NASA's Cosmos |accessdate=12 April 2015}}&lt;/ref&gt;

About 97.5% of the water is [[saline water|saline]]; the remaining 2.5% is [[fresh water]]. Most fresh water, about 68.7%, is present as ice in [[ice cap]]s and [[glacier]]s.&lt;ref&gt;{{cite web |url=https://water.usgs.gov/edu/earthwherewater.html |title=The World's Water |last1=Perlman |first1=Howard |date=17 March 2014 |accessdate=12 April 2015 |work=USGS Water-Science School}}&lt;/ref&gt;

The average [[salinity]] of Earth's oceans is about 35&amp;nbsp;grams of salt per kilogram of sea water (3.5% salt).&lt;ref name=kennish2001/&gt; Most of this salt was released from volcanic activity or extracted from cool igneous rocks.&lt;ref name=mullen2002/&gt; The oceans are also a reservoir of dissolved atmospheric gases, which are essential for the survival of many aquatic life forms.&lt;ref name=natsci_oxy4/&gt; Sea water has an important influence on the world's climate, with the oceans acting as a large [[heat reservoir]].&lt;ref name=michon2006/&gt; Shifts in the oceanic temperature distribution can cause significant weather shifts, such as the [[El Nio-Southern Oscillation]].&lt;ref name=sample2005/&gt;

===Atmosphere===
{{Main article|Atmosphere of Earth}}
[[File:MODIS Map.jpg|thumb|Satellite image of Earth [[cloud cover]] using [[NASA]]'s [[Moderate-Resolution Imaging Spectroradiometer]]]]
The [[atmospheric pressure]] on Earth's surface averages 101.325&amp;nbsp;[[kPa]], with a [[scale height]] of about 8.5&amp;nbsp;km.&lt;ref name=&quot;earth_fact_sheet&quot;/&gt; It has a composition of 78% [[nitrogen]] and 21% oxygen, with trace amounts of [[water vapor]], [[carbon dioxide]], and other gaseous molecules. The height of the [[troposphere]] varies with latitude, ranging between 8&amp;nbsp;km at the poles to 17&amp;nbsp;km at the equator, with some variation resulting from weather and seasonal factors.&lt;ref name=geerts_linacre97/&gt;

Earth's [[biosphere]] has significantly altered its [[Atmosphere of Earth|atmosphere]]. [[Oxygen evolution#Oxygen evolution in nature|Oxygenic photosynthesis]] evolved {{val|2.7|u=Gya}}, [[oxygen catastrophe|forming]] the primarily nitrogenoxygen atmosphere of today.&lt;ref name=&quot;NYT-20131003&quot; /&gt; This change enabled the proliferation of [[aerobic organisms]] and, indirectly, the formation of the [[ozone layer]] due to the subsequent [[Ozoneoxygen cycle|conversion of atmospheric O&lt;sub&gt;2&lt;/sub&gt; into O&lt;sub&gt;3&lt;/sub&gt;]]. The ozone layer blocks [[ultraviolet]] [[solar radiation]], permitting life on land.&lt;ref name=&quot;Harrison 2002&quot;/&gt; Other atmospheric functions important to life include transporting water vapor, providing useful gases, causing small [[meteor]]s to burn up before they strike the surface, and moderating temperature.&lt;ref name=&quot;atmosphere&quot;/&gt; This last phenomenon is known as the [[greenhouse effect]]: trace molecules within the atmosphere serve to capture [[thermal energy]] emitted from the ground, thereby raising the average temperature. Water vapor, carbon dioxide, [[methane]], [[nitrous oxide]], and [[ozone]] are the primary [[greenhouse gas]]es in the atmosphere. Without this heat-retention effect, the average surface temperature would be 18&amp;nbsp;C, in contrast to the current +15&amp;nbsp;C,&lt;ref name=&quot;Pidwirny2006_7&quot; /&gt; and life on Earth probably would not exist in its current form.&lt;ref name=Narottam2008/&gt; In May 2017, glints of light, seen as twinkling from an orbiting satellite a million miles away, were found to be [[Reflection (physics)|reflected light]] from [[ice crystals]] in the atmosphere.&lt;ref name=&quot;NYT-20170519&quot;&gt;{{cite news |last=St. Fleur |first=Nicholas |title=Spotting Mysterious Twinkles on Earth From a Million Miles Away |url=https://www.nytimes.com/2017/05/19/science/dscovr-satellite-ice-glints-earth-atmosphere.html |date=19 May 2017 |work=[[New York Times]] |accessdate=20 May 2017 }}&lt;/ref&gt;&lt;ref name=&quot;GRL-201760515&quot;&gt;{{cite journal |last1=Marshak |first1=Alexander |last2=Vrnai |first2=Tams |last3=Kostinski |first3=Alexander |title=Terrestrial glint seen from deep space: oriented ice crystals detected from the Lagrangian point |url=http://onlinelibrary.wiley.com/doi/10.1002/2017GL073248/abstract |date=15 May 2017 |journal=[[Geophysical Research Letters]] |doi=10.1002/2017GL073248 |accessdate=20 May 2017 |volume=44 |issue=10 |pages=51975202|bibcode = 2017GeoRL..44.5197M }}&lt;/ref&gt;

====Weather and climate====
{{Main article|Weather|Climate}}
{{multiple image
| align = right
| direction = vertical
| width = 220
| image1 = Felix from ISS 03 sept 2007 1138Z.jpg
| caption1 = [[Hurricane Felix]] seen from low Earth orbit, September 2007
| image2 = Pressure ridges Scott Base lrg.jpg
| caption2 = [[Lenticular cloud]] with a [[Pressure ridge (ice)|pressure ridge]] near [[Mount Discovery]], [[Antarctica]], November 2013
| image3 = 3D-Clouds.jpg
| caption3 = Massive clouds above the [[Mojave Desert]], February 2016
}}

Earth's atmosphere has no definite boundary, slowly becoming thinner and fading into outer space. Three-quarters of the atmosphere's mass is contained within the first {{convert|11|km|mi|abbr=on}} of the surface. This lowest layer is called the troposphere. Energy from the Sun heats this layer, and the surface below, causing expansion of the air. This lower-density air then rises and is replaced by cooler, higher-density air. The result is [[atmospheric circulation]] that drives the weather and climate through redistribution of thermal energy.&lt;ref name=&quot;moran2005&quot;/&gt;

The primary atmospheric circulation bands consist of the [[trade winds]] in the equatorial region below 30 latitude and the [[westerlies]] in the mid-latitudes between 30 and 60.&lt;ref name=&quot;berger2002&quot;/&gt; [[Ocean current]]s are also important factors in determining climate, particularly the [[thermohaline circulation]] that distributes thermal energy from the equatorial oceans to the polar regions.&lt;ref name=rahmstorf2003/&gt;

Water vapor generated through surface evaporation is transported by circulatory patterns in the atmosphere. When atmospheric conditions permit an uplift of warm, humid air, this water condenses and falls to the surface as precipitation.&lt;ref name=&quot;moran2005&quot; /&gt; Most of the water is then transported to lower elevations by river systems and usually returned to the oceans or deposited into lakes. This [[water cycle]] is a vital mechanism for supporting life on land and is a primary factor in the erosion of surface features over geological periods. Precipitation patterns vary widely, ranging from several meters of water per year to less than a millimeter. Atmospheric circulation, topographic features, and temperature differences determine the average precipitation that falls in each region.&lt;ref name=hydrologic_cycle/&gt;

The amount of solar energy reaching Earth's surface decreases with increasing latitude. At higher latitudes, the sunlight reaches the surface at lower angles, and it must pass through thicker columns of the atmosphere. As a result, the mean annual air temperature at sea level decreases by about {{convert|0.4|C-change|F-change|1}} per degree of latitude from the equator.&lt;ref name=sadava_heller2006/&gt; Earth's surface can be subdivided into specific latitudinal belts of approximately homogeneous climate. Ranging from the equator to the polar regions, these are the [[Tropics|tropical]] (or equatorial), [[Subtropics|subtropical]], [[temperate]] and [[Polar region|polar]] climates.&lt;ref name=climate_zones/&gt;

This latitudinal rule has several anomalies:
* Proximity to oceans moderates the climate. For example, the [[Scandinavian Peninsula]] has more moderate climate than similarly northern latitudes of [[northern Canada]].
* The [[wind]] enables this moderating effect. The windward side of a land mass experiences more moderation than the leeward side. In the Northern Hemisphere, the prevailing wind is west-to-east, and western coasts tend to be milder than eastern coasts. This is seen in Eastern North America and Western Europe, where rough continental climates appear on the east coast on parallels with mild climates on the other side of the ocean.&lt;ref&gt;{{cite web |url=http://www.livescience.com/13573-east-coast-colder-europe-west-coast.html |title=Why U.S. East Coast is colder than Europe's West Coast |publisher=Live Science |date=5 April 2011 |accessdate=7 July 2015}}&lt;/ref&gt; In the Southern Hemisphere, the prevailing wind is east-to-west, and the eastern coasts are milder.
* The distance from the Earth to the Sun varies. The Earth is closest to the Sun (at [[perihelion]]) in January, which is summer in the Southern Hemisphere. It is furthest away (at [[aphelion]]) in July, which is summer in the Northern Hemisphere, and only 93.55% of the solar radiation from the Sun falls on a given square area of land than at perihelion. Despite this, there are larger land masses in the Northern Hemisphere, which are easier to heat than the seas. Consequently, summers are {{convert|2.3|C-change|F-change|0}} warmer in the Northern Hemisphere than in the Southern Hemisphere under similar conditions.&lt;ref name=&quot;Earth at Aphelion&quot;&gt;{{cite web |url=http://spaceweather.com/glossary/aphelion.html |title=Earth at Aphelion |publisher=Space Weather |date=July 2008 |accessdate=7 July 2015}}&lt;/ref&gt;
* The climate is colder at high altitudes than at sea level because of the decreased air density.

The commonly used [[Kppen climate classification]] system has five broad groups ([[tropical climate|humid tropics]], [[Desert|arid]], [[humid subtropical climate|humid middle latitudes]], [[Continental climate|continental]] and cold [[polar climate|polar]]), which are further divided into more specific subtypes.&lt;ref name=&quot;berger2002&quot; /&gt; The Kppen system rates regions of terrain based on observed temperature and precipitation.

The highest air temperature ever measured on Earth was {{convert|56.7|C|F}} in [[Furnace Creek, California]], in [[Death Valley National Park|Death Valley]], in 1913.&lt;ref&gt;{{cite web |url=http://www.guinnessworldrecords.com/world-records/highest-recorded-temperature/ |title=Highest recorded temperature |publisher=Guinness World Records |accessdate=12 July 2015}}&lt;/ref&gt; The lowest air temperature ever directly measured on Earth was {{convert|-89.2|C|F}} at [[Vostok Station]] in 1983,&lt;ref&gt;{{cite book |last1=Lyons |first1=Walter A |title=The Handy Weather Answer Book |date=1997 |publisher=Visible Ink Press |location=Detroit, Michigan |isbn=0-7876-1034-8 |edition=2nd}}&lt;/ref&gt; but satellites have used remote sensing to measure temperatures as low as {{convert|-94.7|C|F}} in [[East Antarctica]].&lt;ref&gt;{{cite web |url=https://www.theguardian.com/world/2013/dec/10/coldest-temperature-recorded-earth-antarctica-guinness-book |title=Coldest temperature ever recorded on Earth in Antarctica |publisher=The Guardian |date=10 December 2013 |accessdate=12 July 2015}}&lt;/ref&gt; These temperature records are only measurements made with modern instruments from the 20th century onwards and likely do not reflect the full range of temperature on Earth.

====Upper atmosphere====
[[File:Full moon partially obscured by atmosphere.jpg|thumb|This view from orbit shows the [[Full moon|full Moon]] partially obscured by Earth's atmosphere.]]
Above the troposphere, the atmosphere is usually divided into the [[stratosphere]], [[mesosphere]], and [[thermosphere]].&lt;ref name=&quot;atmosphere&quot; /&gt; Each layer has a different [[lapse rate]], defining the rate of change in temperature with height. Beyond these, the [[exosphere]] thins out into the [[magnetosphere]], where the geomagnetic fields interact with the [[solar wind]].&lt;ref name=sciweek2004/&gt; Within the stratosphere is the ozone layer, a component that partially shields the surface from ultraviolet light and thus is important for life on Earth. The [[Krmn line]], defined as 100&amp;nbsp;km above Earth's surface, is a working definition for the boundary between the atmosphere and [[outer space]].&lt;ref name=cordoba2004/&gt;

Thermal energy causes some of the molecules at the outer edge of the atmosphere to increase their velocity to the point where they can escape from Earth's gravity. This causes a slow but steady [[Atmospheric escape|loss of the atmosphere into space]]. Because unfixed [[hydrogen]] has a low [[molecular mass]], it can achieve [[escape velocity]] more readily, and it leaks into outer space at a greater rate than other gases.&lt;ref name=jas31_4_1118/&gt; The leakage of hydrogen into space contributes to the shifting of Earth's atmosphere and surface from an initially [[redox|reducing]] state to its current [[Redox|oxidizing]] one. Photosynthesis provided a source of free oxygen, but the loss of reducing agents such as hydrogen is thought to have been a necessary precondition for the widespread accumulation of oxygen in the atmosphere.&lt;ref name=sci293_5531_839/&gt; Hence the ability of hydrogen to escape from the atmosphere may have influenced the nature of life that developed on Earth.&lt;ref name=abedon1997/&gt; In the current, oxygen-rich atmosphere most hydrogen is converted into water before it has an opportunity to escape. Instead, most of the hydrogen loss comes from the destruction of methane in the upper atmosphere.&lt;ref name=arwps4_265/&gt;

===Gravitational field===
{{Main article|Gravity of Earth}}
[[File:Geoids sm.jpg|thumb|Earth's gravity measured by NASA's [[Gravity Recovery and Climate Experiment|GRACE]] mission, showing deviations from the [[theoretical gravity]]. Red shows where gravity is stronger than the smooth, standard value, and blue shows where it is weaker.]]

The [[gravity of Earth]] is the [[acceleration]] that is imparted to objects due to the distribution of mass within the Earth. Near the Earth's surface, [[gravitational acceleration]] is approximately {{convert|9.8|m/s2|abbr=on}}. Local differences in [[topography]], [[geology]], and deeper tectonic structure cause local and broad, regional differences in the Earth's gravitational field, known as [[Gravity anomaly|gravitational anomalies]].&lt;ref&gt;{{cite journal |first1=A. B. |last1=Watts |first2=S. F. |last2=Daly |title=Long wavelength gravity and topography anomalies |journal=Annual Review of Earth and Planetary Sciences |volume=9 |pages=41518 |date=May 1981 |doi=10.1146/annurev.ea.09.050181.002215 |bibcode=1981AREPS...9..415W |url=http://articles.adsabs.harvard.edu/cgi-bin/nph-iarticle_query?1981AREPS...9..415W&amp;defaultprint=YES&amp;filetype=.pdf}}&lt;/ref&gt;

===Magnetic field===
{{Main article|Earth's magnetic field}}

The main part of [[Earth's magnetic field]] is generated in the core, the site of a [[Dynamo theory|dynamo]] process that converts the kinetic energy of thermally and compositionally driven convection into electrical and magnetic field energy. The field extends outwards from the core, through the mantle, and up to Earth's surface, where it is, approximately, a [[dipole]]. The poles of the dipole are located close to Earth's geographic poles. At the equator of the magnetic field, the magnetic-field strength at the surface is {{nowrap|3.05  10&lt;sup&gt;5&lt;/sup&gt; [[Tesla (unit)|T]]}}, with global [[magnetic dipole moment]] of {{nowrap|7.91  10&lt;sup&gt;15&lt;/sup&gt; T m&lt;sup&gt;3&lt;/sup&gt;}}.&lt;ref name=lang2003/&gt; The convection movements in the core are chaotic; the magnetic poles drift and periodically change alignment. This causes [[Geomagnetic secular variation|secular variation]] of the main field and [[geomagnetic reversal|field reversals]] at irregular intervals averaging a few times every million years. The most recent reversal occurred approximately 700,000 years ago.&lt;ref name=fitzpatrick2006/&gt;&lt;ref name=campbelwh/&gt;

====Magnetosphere====
{{Main article|Magnetosphere}}
[[File:Structure of the magnetosphere-en.svg|thumb|Schematic of Earth's magnetosphere. The solar wind flows from left to right|alt=Diagram showing the magnetic field lines of Earth's magnetosphere. The lines are swept back in the anti-solar direction under the influence of the solar wind.]]

The extent of Earth's magnetic field in space defines the [[magnetosphere]]. Ions and electrons of the solar wind are deflected by the magnetosphere; solar wind pressure compresses the dayside of the magnetosphere, to about 10 Earth radii, and extends the nightside magnetosphere into a long tail.&lt;ref name=&quot;Britannica&quot;/&gt; Because the velocity of the solar wind is greater than the speed at which waves propagate through the solar wind, a supersonic bowshock precedes the dayside magnetosphere within the solar wind.&lt;ref&gt;{{cite web |url=http://sci.esa.int/jump.cfm?oid=40994 |title=Cluster reveals the reformation of the Earth's bow shock |publisher=European Space Agency |first=Arnaud |last=Masson |date=11 May 2007 |accessdate=16 August 2016}}&lt;/ref&gt; [[Charged particle]]s are contained within the magnetosphere; the plasmasphere is defined by low-energy particles that essentially follow magnetic field lines as Earth rotates;&lt;ref&gt;{{cite web |url=http://plasmasphere.nasa.gov/ |title=The Earth's Plasmasphere |publisher=NASA/Marshall Space Flight Center |last=Gallagher |first=Dennis L. |date=14 August 2015 |accessdate=16 August 2016}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://plasmasphere.nasa.gov/formed.html |title=How the Plasmasphere is Formed |publisher=NASA/Marshall Space Flight Center |last=Gallagher |first=Dennis L. |date=27 May 2015 |accessdate=16 August 2016}}&lt;/ref&gt; the ring current is defined by medium-energy particles that drift relative to the geomagnetic field, but with paths that are still dominated by the magnetic field,&lt;ref name=&quot;BaumjohannTreumann1997&quot;&gt;{{cite book |title=Basic Space Plasma Physics |publisher=World Scientific |first1=Wolfgang |last1=Baumjohann |first2=Rudolf A. |last2=Treumann |pages=8, 31 |year=1997 |isbn=978-1-86094-079-8}}&lt;/ref&gt; and the [[Van Allen radiation belt]] are formed by high-energy particles whose motion is essentially random, but otherwise contained by the magnetosphere.&lt;ref name=&quot;Britannica&quot;&gt;{{cite encyclopedia |url=https://www.britannica.com/science/ionosphere-and-magnetosphere/Magnetosphere |title=Ionosphere and magnetosphere |encyclopedia=Encyclopdia Britannica |publisher=Encyclopdia Britannica, Inc. |first=Michael B. |last=McElroy |date=2012}}&lt;/ref&gt;&lt;ref name=&quot;Van Allen&quot;&gt;{{cite book |title=Origins of Magnetospheric Physics |publisher=University of Iowa Press |last=Van Allen |first=James Alfred |date=2004 |isbn=978-0-87745-921-7 |oclc=646887856}}&lt;/ref&gt;

During [[magnetic storm]]s and [[substorm]]s, charged particles can be deflected from the outer magnetosphere and especially the magnetotail, directed along field lines into Earth's ionosphere, where atmospheric atoms can be excited and ionized, causing the [[Aurora (astronomy)|aurora]].&lt;ref name=stern2005/&gt;

==Orbit and rotation==

===Rotation===
{{Main article|Earth's rotation}}
[[File:EpicEarth-Globespin(2016May29).gif|thumb|right|Earth's rotation imaged by [[Deep Space Climate Observatory|DSCOVR EPIC]] on 29 May 2016, a few weeks before the [[solstice]].]]
Earth's rotation period relative to the Sunits mean solar dayis {{nowrap|86,400 seconds}} of mean solar time ({{nowrap|86,400.0025 [[SI]] seconds}}).&lt;ref name=aj136_5_1906/&gt; Because Earth's solar day is now slightly longer than it was during the 19th century due to [[tidal acceleration|tidal deceleration]], each day varies between {{nowrap|0 and 2 SI [[millisecond|ms]]}} longer&lt;!--than the previous day or the 19th-C day?  This construction is ambiguous--&gt;.&lt;ref name=USNO_TSD/&gt;&lt;ref&gt;{{cite journal |title=Rapid Service/Prediction of Earth Orientation |journal=IERS Bulletin-A |date=9 April 2015 |volume=28 |issue=15 |url=http://maia.usno.navy.mil/ser7/ser7.dat |accessdate=12 April 2015 |format=.DAT file (displays as plaintext in browser)}}&lt;/ref&gt;

Earth's rotation period relative to the [[fixed star]]s, called its ''stellar day'' by the [[International Earth Rotation and Reference Systems Service]] (IERS), is {{nowrap|86,164.0989 seconds}} of mean solar time (UT1), or {{nowrap |23{{smallsup|h}} 56{{smallsup|m}} 4.0989{{smallsup|s}}.}}&lt;ref name=IERS/&gt;&lt;ref group=&quot;n&quot; name=&quot;Aoki&quot;/&gt; Earth's rotation period relative to the [[precession (astronomy)|precessing]] or moving mean [[vernal equinox]], misnamed its ''[[sidereal day]]'', is {{nowrap|86,164.0905 seconds}} of mean solar time (UT1) {{nowrap|(23{{smallsup|h}} 56{{smallsup|m}} 4.0905{{smallsup|s}})}}.&lt;ref name=IERS/&gt; Thus the sidereal day is shorter than the stellar day by about 8.4&amp;nbsp;ms.&lt;ref name=seidelmann1992/&gt; The length of the mean solar day in SI seconds is available from the IERS for the periods 16232005&lt;ref name=iers1623/&gt; and 19622005.&lt;ref name=iers1962/&gt;

Apart from meteors within the atmosphere and low-orbiting satellites, the main apparent motion of celestial bodies in Earth's sky is to the west at a rate of 15/h = 15'/min. For bodies near the [[celestial equator]], this is equivalent to an apparent diameter of the Sun or the Moon every two minutes; from Earth's surface, the apparent sizes of the Sun and the Moon are approximately the same.&lt;ref name=zeilik1998/&gt;&lt;ref name=angular/&gt;

===Orbit===
{{Main article|Earth's orbit}}
[[File:Pale Blue Dot.png|thumb|upright|The ''[[Pale Blue Dot]]'' photo taken in 1990 by the ''[[Voyager 1]]'' spacecraft showing Earth (center right) from nearly {{convert|4|e9mi|e9km|order=flip|abbr=unit}} away]]

Earth orbits the Sun at an average distance of about {{convert|150|e6km|e6mi|abbr=unit}} every 365.2564 mean solar days, or one [[sidereal year]]. This gives an apparent movement of the Sun eastward with respect to the stars at a rate of about 1/day, which is one apparent Sun or Moon diameter every 12&amp;nbsp;hours. Due to this motion, on average it takes 24&amp;nbsp;hoursa [[Solar time|solar day]]for Earth to complete a full rotation about its axis so that the Sun returns to the [[Meridian (astronomy)|meridian]]. The orbital speed of Earth averages about {{convert|29.78|km/s|km/h mph|abbr=on}}, which is fast enough to travel a distance equal to Earth's diameter, about {{convert|12742|km|mi|abbr=on}}, in seven minutes, and the distance to the Moon, {{convert|384000|km|mi|abbr=on}}, in about 3.5 hours.&lt;ref name=&quot;earth fact sheet&quot; /&gt;

The Moon and Earth orbit a common [[barycenter]] every 27.32&amp;nbsp;days relative to the background stars. When combined with the EarthMoon system's common orbit around the Sun, the period of the [[synodic month]], from new moon to new moon, is 29.53&amp;nbsp;days. Viewed from the [[celestial pole|celestial north pole]], the motion of Earth, the Moon, and their axial rotations are all [[counterclockwise]]. Viewed from a vantage point above the north poles of both the Sun and Earth, Earth orbits in a counterclockwise direction about the Sun. The orbital and axial planes are not precisely aligned: Earth's [[axial tilt|axis is tilted]] some 23.44&amp;nbsp;degrees from the perpendicular to the EarthSun plane (the [[ecliptic]]), and the EarthMoon plane is tilted up to 5.1&amp;nbsp;degrees against the EarthSun plane. Without this tilt, there would be an eclipse every two weeks, alternating between [[lunar eclipse]]s and [[solar eclipse]]s.&lt;ref name=&quot;earth_fact_sheet&quot; /&gt;&lt;ref name=&quot;moon_fact_sheet&quot; /&gt;

The [[Hill sphere]], or the sphere of [[Gravity|gravitational]] influence, of the Earth is about {{convert|1.5|e6km|mi}} in radius.&lt;ref name=vazquez_etal2006 /&gt;&lt;ref group=&quot;n&quot; name=&quot;hill_radius&quot; /&gt; This is the maximum distance at which the Earth's gravitational influence is stronger than the more distant Sun and planets. Objects must orbit the Earth within this radius, or they can become unbound by the gravitational perturbation of the Sun.

Earth, along with the Solar System, is situated in the [[Milky Way]] and orbits about 28,000&amp;nbsp;[[light-year]]s from its center. It is about 20&amp;nbsp;light-years above the [[galactic plane]] in the [[Orion Arm]].&lt;ref name=nasa20051201 /&gt;

===Axial tilt and seasons===
{{Main article|Axial tilt#Earth}}
[[File:AxialTiltObliquity.png|thumb|left|Earth's axial tilt (or [[obliquity]]) and its relation to the [[Rotation|rotation axis]] and [[Orbital plane (astronomy)|plane of orbit]]]]

The axial tilt of the Earth is approximately 23.439281&lt;ref name=&quot;IERS&quot;/&gt; with the axis of its orbit plane, always pointing towards the [[Celestial Poles]]. Due to Earth's axial tilt, the amount of sunlight reaching any given point on the surface varies over the course of the year. This causes the seasonal change in climate, with [[summer]] in the [[Northern Hemisphere]] occurring when the [[Tropic of Cancer]] is facing the Sun, and [[winter]] taking place when the [[Tropic of Capricorn]] in the [[Southern Hemisphere]] faces the Sun. During the summer, the day lasts longer, and the Sun climbs higher in the sky. In winter, the climate becomes cooler and the days shorter. In northern temperate latitudes, the Sun rises north of true east during the summer solstice, and sets north of true west, reversing in the winter. The Sun rises south of true east in the summer for the southern temperate zone and sets south of true west.

Above the [[Arctic Circle]], an extreme case is reached where there is no daylight at all for part of the year, up to six months at the North Pole itself, a [[polar night]]. In the Southern Hemisphere, the situation is exactly reversed, with the [[South Pole]] oriented opposite the direction of the North Pole. Six months later, this pole will experience a [[midnight sun]], a day of 24 hours, again reversing with the South Pole.

By astronomical convention, the four seasons can be determined by the [[solstice]]sthe points in the orbit of maximum axial tilt toward or away from the Sunand the [[equinox]]es, when the direction of the tilt and the direction to the Sun are perpendicular. In the Northern Hemisphere, [[winter solstice]] currently occurs around 21 December; [[summer solstice]] is near 21 June, [[spring equinox]] is around 20 March and [[autumnal equinox]] is about 22 or 23 September. In the Southern Hemisphere, the situation is reversed, with the summer and winter solstices exchanged and the spring and autumnal equinox dates swapped.&lt;ref name=bromberg2008/&gt;

The angle of Earth's axial tilt is relatively stable over long periods of time. Its axial tilt does undergo [[nutation]]; a slight, irregular motion with a main period of 18.6&amp;nbsp;years.&lt;ref name=lin2006/&gt; The orientation (rather than the angle) of Earth's axis also changes over time, [[precession|precessing]] around in a complete circle over each 25,800&amp;nbsp;year cycle; this precession is the reason for the difference between a sidereal year and a [[tropical year]]. Both of these motions are caused by the varying attraction of the Sun and the Moon on Earth's equatorial bulge. The poles also migrate a few meters across Earth's surface. This [[polar motion]] has multiple, cyclical components, which collectively are termed [[quasiperiodic motion]]. In addition to an annual component to this motion, there is a 14-month cycle called the [[Chandler wobble]]. Earth's rotational velocity also varies in a phenomenon known as length-of-day variation.&lt;ref name=fisher19960205/&gt;

In modern times, Earth's [[perihelion]] occurs around 3 January, and its [[aphelion]] around 4 July. These dates change over time due to precession and other orbital factors, which follow cyclical patterns known as [[Milankovitch cycles]]. The changing EarthSun distance causes an increase of about 6.9%&lt;ref group=&quot;n&quot; name=&quot;solar_energy&quot;/&gt; in solar energy reaching Earth at perihelion relative to aphelion. Because the Southern Hemisphere is tilted toward the Sun at about the same time that Earth reaches the closest approach to the Sun, the Southern Hemisphere receives slightly more energy from the Sun than does the northern over the course of a year. This effect is much less significant than the total energy change due to the axial tilt, and most of the excess energy is absorbed by the higher proportion of water in the Southern Hemisphere.&lt;ref name=williams20051230/&gt;

A study from 2016 suggested that [[Planet Nine]] tilted all [[solar system]] planets, including Earth's by about 6 degrees.&lt;ref&gt;{{cite web|url=https://www.space.com/34448-planet-nine-solar-system-tilt.html|title=Did the Mysterious 'Planet Nine' Tilt the Solar System?|year=2016|work=Space}}&lt;/ref&gt;

==Habitability==
[[File:Moraine Lake 17092005.jpg|thumb|The [[Rocky Mountains]] in Canada overlook [[Moraine Lake]].]]

A planet that can sustain life is termed [[Planetary habitability|habitable]], even if life did not originate there. Earth provides liquid wateran environment where complex [[Organic compound|organic molecules]] can assemble and interact, and sufficient energy to sustain [[metabolism]].&lt;ref name=ab2003/&gt; The distance of Earth from the Sun, as well as its orbital eccentricity, rate of rotation, axial tilt, geological history, sustaining atmosphere, and magnetic field all contribute to the current climatic conditions at the surface.&lt;ref name=dole1970/&gt;

===Biosphere===
{{Main article|Biosphere}}
A planet's life forms inhabit [[ecosystem]]s, whose total is sometimes said to form a &quot;biosphere&quot;. Earth's biosphere is thought to have begun [[evolution|evolving]] about {{val|3.5|u=Gya}}.&lt;ref name=&quot;NYT-20131003&quot; /&gt; The biosphere is divided into a number of [[biome]]s, inhabited by broadly similar plants and animals. On land, biomes are separated primarily by differences in latitude, [[elevation|height above sea level]] and [[humidity]]. Terrestrial [[tundra|biomes]] lying within the Arctic or [[Antarctic Circle]]s, at [[Alpine tundra|high altitudes]] or in [[desert|extremely arid areas]] are relatively barren of plant and animal life; [[Latitudinal gradients in species diversity|species diversity]] reaches a peak in [[tropical rainforest|humid lowlands at equatorial latitudes]].&lt;ref name=amnat163_2_192/&gt;

In July 2016, scientists reported identifying a set of 355 [[gene]]s from the [[Last Universal Common Ancestor]] (LUCA) of all [[organism]]s living on Earth.&lt;ref name=&quot;NYT-20160725&quot;&gt;{{cite news |last=Wade |first=Nicholas |authorlink=Nicholas Wade |title=Meet Luca, the Ancestor of All Living Things |url=https://www.nytimes.com/2016/07/26/science/last-universal-ancestor.html |date=25 July 2016 |work=[[New York Times]] |accessdate=25 July 2016}}&lt;/ref&gt;

===Natural resources and land use===
{{Main article|Natural resource|Land use}}

{| class=&quot;wikitable&quot; style=&quot;float:right; margin-left:1em;&quot;
|+ Estimated human land use, 2000&lt;ref name=&quot;Lambin2011&quot;/&gt;
|-
!Land use
!Mha
|-
| Cropland
|style=&quot;text-align:center&quot;| 1,5101,611
|-
| Pastures
|style=&quot;text-align:center&quot;| 2,5003,410
|-
| Natural forests
|style=&quot;text-align:center&quot;| 3,1433,871
|-
| Planted forests
|style=&quot;text-align:center&quot;| 126215
|-
| Urban areas
|style=&quot;text-align:center&quot;| 66351
|-
| Unused, productive land
|style=&quot;text-align:center&quot;| 356445
|}
Earth has resources that have been exploited by humans. Those termed [[non-renewable resources]], such as [[fossil fuel]]s, only renew over geological timescales.

Large deposits of fossil fuels are obtained from Earth's crust, consisting of [[coal]], [[petroleum]], and [[natural gas]]. These deposits are used by humans both for energy production and as feedstock for chemical production. Mineral [[ore]] bodies have also been formed within the crust through a process of [[ore genesis]], resulting from actions of [[magma]]tism, erosion, and plate tectonics.&lt;ref name=&quot;Ramdohr&quot;/&gt; These bodies form concentrated sources for many metals and other useful [[chemical element|elements]].

Earth's biosphere produces many useful biological products for humans, including food, [[wood]], [[pharmaceutical]]s, oxygen, and the recycling of many organic wastes. The land-based [[ecosystem]] depends upon [[topsoil]] and fresh water, and the oceanic ecosystem depends upon dissolved nutrients washed down from the land.&lt;ref name=science299_5607_673/&gt; In 1980, 5,053&amp;nbsp;[[Hectare|Mha]] (50.53 million km&lt;sup&gt;2&lt;/sup&gt;) of Earth's land surface consisted of forest and woodlands, 6,788&amp;nbsp;Mha (67.88 million km&lt;sup&gt;2&lt;/sup&gt;) was grasslands and pasture, and 1,501&amp;nbsp;Mha (15.01 million km&lt;sup&gt;2&lt;/sup&gt;) was cultivated as croplands.&lt;ref name=&quot;Turner1990&quot;/&gt; The estimated amount of [[irrigated land]] in 1993 was {{convert|2481250|km2}}.&lt;ref name=cia/&gt; Humans also live on the land by using [[building material]]s to construct shelters.

===Natural and environmental hazards===
[[File:Pavlof2014iss.jpg|thumb|left|A volcano injecting hot ash into the atmosphere]]
Large areas of Earth's surface are subject to extreme weather such as tropical [[cyclone]]s, [[hurricane]]s, or [[typhoon]]s that dominate life in those areas. From 1980 to 2000, these events caused an average of 11,800 human deaths per year.&lt;ref name=walsh2008/&gt; Many places are subject to earthquakes, [[landslide]]s, [[tsunami]]s, [[volcano|volcanic eruptions]], [[tornado]]es, [[sinkhole]]s, [[blizzard]]s, floods, droughts, [[wildfire]]s, and other calamities and disasters.

Many localized areas are subject to human-made [[pollution]] of the air and water, [[acid rain]] and toxic substances, loss of vegetation ([[overgrazing]], [[deforestation]], [[desertification]]), loss of wildlife, species [[extinction]], [[soil degradation]], [[soil depletion]] and [[erosion]].

There is a [[scientific consensus]] linking human activities to [[global warming]] due to industrial carbon dioxide emissions. This is predicted to produce changes such as the melting of glaciers and ice sheets, more extreme temperature ranges, significant changes in weather and a [[Sea level rise|global rise in average sea levels]].&lt;ref name=un20070202/&gt;

==Human geography==
{{Main article|Human geography|World}}
{{World map indicating continents}}

[[Cartography]], the study and practice of map-making, and [[geography]], the study of the lands, features, inhabitants and phenomena on Earth, have historically been the disciplines devoted to depicting Earth. [[Surveying]], the determination of locations and distances, and to a lesser extent [[navigation]], the determination of position and direction, have developed alongside cartography and geography, providing and suitably quantifying the requisite information.

[[world population|Earth's human population]] reached approximately seven billion on 31 October 2011.&lt;ref&gt;{{cite web |url=https://news.yahoo.com/various-7-billionth-babies-celebrated-worldwide-064439018.html |title=Various '7 billionth' babies celebrated worldwide |accessdate=31 October 2011 |deadurl=yes |archiveurl=https://web.archive.org/web/20111031182613/http://news.yahoo.com/various-7-billionth-babies-celebrated-worldwide-064439018.html |archivedate=31 October 2011 |df=dmy-all }}&lt;/ref&gt; Projections indicate that the world's human population will reach 9.2&amp;nbsp;billion in 2050.&lt;ref name=un2006/&gt; Most of the growth is expected to take place in [[developing nations]]. [[Population density#Human population density|Human population density]] varies widely around the world, but a majority live in Asia. By 2020, 60% of the world's population is expected to be living in urban, rather than rural, areas.&lt;ref name=prb2007/&gt;

It is estimated that one-eighth of Earth's surface is suitable for humans to live on&amp;nbsp; three-quarters of Earth's surface is covered by oceans, leaving one-quarter as land. Half of that land area is desert (14%),&lt;ref name=hessd4_439/&gt; high mountains (27%),&lt;ref name=biodiv/&gt; or other unsuitable terrains. The northernmost permanent settlement in the world is [[Alert, Nunavut|Alert]], on [[Ellesmere Island]] in [[Nunavut]], Canada.&lt;ref name=cfsa2006/&gt; (8228N) The southernmost is the [[AmundsenScott South Pole Station]], in Antarctica, almost exactly at the South Pole. (90S)

[[File:67%C2%BA_Per%C3%ADodo_de_Sesiones_de_la_Asamblea_General_de_Naciones_Unidas_(8020913157).jpg|thumb|left|[[Headquarters of the United Nations]] in [[New York City]]]]
Independent sovereign nations claim the planet's entire land surface, except for some parts of Antarctica, a few [[CroatiaSerbia border dispute|land parcels along the Danube]] river's western bank, and the [[Terra nullius|unclaimed area]] of [[Bir Tawil]] between Egypt and Sudan. {{As of|2015}}, there are 193 [[List of sovereign states|sovereign states]] that are [[member states of the United Nations]], plus two [[United Nations General Assembly observers|observer states]] and 72 [[Dependent territory|dependent territories]] and [[List of states with limited recognition|states with limited recognition]].&lt;ref name=cia /&gt; Earth has never had a [[sovereignty|sovereign]] government with authority over the entire globe, although some nation-states have striven for [[Hyperpower|world domination]] and failed.&lt;ref name=kennedy1989/&gt;

The [[United Nations]] is a worldwide [[international organization|intergovernmental organization]] that was created with the goal of intervening in the disputes between nations, thereby avoiding armed conflict.&lt;ref name=uncharter/&gt; The U.N. serves primarily as a forum for international diplomacy and [[international law]]. When the consensus of the membership permits, it provides a mechanism for armed intervention.&lt;ref name=un_int_law/&gt;

The first human to orbit Earth was [[Yuri Gagarin]] on 12 April 1961.&lt;ref name=kuhn2006/&gt; In total, about 487 people have visited outer space and reached orbit {{as of|2010|07|30|lc=on}}, and, of these, [[Apollo program|twelve]] have walked on the Moon.&lt;ref name=ellis2004/&gt;&lt;ref name=shayler_vis2005/&gt;&lt;ref name=wade2008/&gt; Normally, the only humans in space are those on the [[International Space Station]]. The station's [[List of International Space Station expeditions|crew]], made up of six people, is usually replaced every six months.&lt;ref name=nasa_rg_iss2007/&gt; The farthest that humans have traveled from Earth is 400,171&amp;nbsp;km, achieved during the [[Apollo 13]] mission in 1970.&lt;ref name=&quot;Apollo13History&quot;/&gt;

==Moon==
{| class=&quot;wikitable&quot; style=&quot;float: right; margin-left: 0.5em;&quot;
|+ Characteristics
|-
| colspan=2 | [[File:FullMoon2010.jpg|center|200px|[[Full moon]] as seen from Earth's [[Northern Hemisphere]]]]
|-
| '''Diameter''' || 3,474.8&amp;nbsp;km
|-
| '''Mass''' || 7.349{{e|22}}&amp;nbsp;kg
|-
| '''[[Semi-major axis]]''' || 384,400&amp;nbsp;km
|-
| '''Orbital period''' || {{nowrap|27 d 7 h 43.7 m}}
|}
{{Main article|Moon}}

The Moon is a relatively large, [[Terrestrial planet|terrestrial]], planet-like [[natural satellite]], with a diameter about one-quarter of Earth's. It is the largest moon in the Solar System relative to the size of its planet, although [[Charon (moon)|Charon]] is larger relative to the [[dwarf planet]] [[Pluto]]. The natural satellites of other planets are also referred to as &quot;moons&quot;, after Earth's.

The gravitational attraction between Earth and the Moon causes [[tide]]s on Earth. The same effect on the Moon has led to its [[tidal locking]]: its rotation period is the same as the time it takes to orbit Earth. As a result, it always presents the same face to the planet. As the Moon orbits Earth, different parts of its face are illuminated by the Sun, leading to the [[lunar phase]]s; the dark part of the face is separated from the light part by the [[terminator (solar)|solar terminator]].

[[File:Earth-Moon.svg|thumb|left|Details of the EarthMoon system, showing the radius of each object and the EarthMoon [[barycenter]]. The Moon's axis is located by [[Cassini's laws|Cassini's third law]].]]

Due to their [[Tidal acceleration|tidal interaction]], the Moon recedes from Earth at the rate of approximately 38&amp;nbsp;mm/yr. Over millions of years, these tiny modificationsand the lengthening of Earth's day by about 23&amp;nbsp;[[Microsecond|s]]/yradd up to significant changes.&lt;ref name=espenak_meeus20070207/&gt; During the [[Devonian]] period, for example, (approximately {{val|410|u=Mya}}) there were 400 days in a year, with each day lasting 21.8 hours.&lt;ref&gt;{{cite book |last=Lambeck |first=Kurt |title=The Earth's Variable Rotation: Geophysical Causes and Consequences |publisher=Cambridge University Press |year=1980 |page=367 |url=https://books.google.com/?id=-kiG3uYkoUEC&amp;pg=PA62&amp;dq=%22the+earth's+variable+rotation%22#v=onepage&amp;q&amp;f=false|isbn=9780521673303 }}&lt;/ref&gt;

The Moon may have dramatically affected the development of life by moderating the planet's climate. [[Paleontology|Paleontological]] evidence and computer simulations show that Earth's axial tilt is stabilized by tidal interactions with the Moon.&lt;ref name=aaa428_261/&gt; Some theorists think that without this stabilization against the [[torque]]s applied by the Sun and planets to Earth's equatorial bulge, the rotational axis might be chaotically unstable, exhibiting chaotic changes over millions of years, as appears to be the case for Mars.&lt;ref name=nature410_6830_773/&gt;

Viewed from Earth, the Moon is just far enough away to have almost the same apparent-sized disk as the Sun. The [[angular size]] (or [[solid angle]]) of these two bodies match because, although the Sun's diameter is about 400 times as large as the Moon's, it is also 400 times more distant.&lt;ref name=angular /&gt; This allows total and annular solar eclipses to occur on Earth.

The most widely accepted theory of the Moon's origin, the [[giant-impact hypothesis]], states that it formed from the collision of a Mars-size protoplanet called Theia with the early Earth. This hypothesis explains (among other things) the Moon's relative lack of iron and volatile elements and the fact that its composition is nearly identical to that of Earth's crust.&lt;ref name=nature412_708/&gt;

==Asteroids and artificial satellites==
Earth has at least five [[Quasi-satellite|co-orbital asteroids]], including [[3753 Cruithne]] and {{mpl|2002 AA|29}}.&lt;ref name=whitehouse20021021/&gt;&lt;ref name=christou_asher2011/&gt; A [[Earth trojan|trojan asteroid]] companion, {{mpl|2010 TK|7}}, is librating around the leading [[Lagrange point|Lagrange triangular point]], L4, in the [[Earth's orbit]] around the [[Sun]].&lt;ref name=Connors/&gt;&lt;ref name=Choi/&gt;

The tiny [[near-Earth asteroid]] {{mpl|2006 RH|120}} makes close approaches to the EarthMoon system roughly every twenty years. During these approaches, it can orbit Earth for brief periods of time.&lt;ref&gt;{{cite web |title=2006 RH120 ( = 6R10DB9) (A second moon for the Earth?) |url=http://www.birtwhistle.org/Gallery6R10DB9.htm |website=Great Shefford Observatory |publisher=Great Shefford Observatory |accessdate=17 July 2015 |archiveurl=https://web.archive.org/web/20150206154817/http://www.birtwhistle.org/Gallery6R10DB9.htm |archivedate=6 February 2015}}&lt;/ref&gt;

{{As of|2016|6}}, there were 1,419 operational, human-made [[satellite]]s orbiting Earth.&lt;ref name=ucs/&gt; There are also inoperative satellites, including [[Vanguard 1]], the oldest satellite currently in orbit, and over 16,000 pieces of tracked [[space debris]].&lt;ref group=&quot;n&quot; name=&quot;space_debris&quot;/&gt; Earth's largest artificial satellite is the International Space Station.

==Cultural and historical viewpoint==
{{Main article|Earth in culture}}
[[File:NASA-Apollo8-Dec24-Earthrise.jpg|thumb|''[[Earthrise]]'', taken by astronauts on board [[Apollo&amp;nbsp;8]]]]

The standard astronomical symbol of Earth consists of a cross [[circumscribed circle|circumscribed by a circle]], [[File:Earth symbol.svg|18px]],&lt;ref name=liungman2004/&gt; representing the [[four corners of the world]].

[[Culture|Human cultures]] have developed many views of the planet. Earth is sometimes [[Anthropomorphism|personified]] as a [[deity]]. In many cultures it is a [[mother goddess]] that is also the primary [[fertility deity]],&lt;ref name=&quot;:0&quot;&gt;{{Cite book |title=Thematic Guide to World Mythology |last=Stookey |first=Lorena Laura |publisher=Greenwood Press |year=2004 |isbn=978-0-313-31505-3 |location=Westport, Conn. |pages=11415}}&lt;/ref&gt; and by the mid-20th century, the [[Gaia hypothesis|Gaia Principle]] compared Earth's environments and life as a single self-regulating organism leading to broad stabilization of the conditions of habitability.&lt;ref name=&quot;vanishing255&quot;&gt;Lovelock, James. ''The Vanishing Face of Gaia''. Basic Books, 2009, p. 255. {{ISBN|978-0-465-01549-8}}&lt;/ref&gt;&lt;ref name=&quot;J1972&quot;&gt;{{cite journal |last=Lovelock |first=J.E. |title=Gaia as seen through the atmosphere |journal=Atmospheric Environment |date=1972 |volume=6 |issue=8 |pages=57980 |doi=10.1016/0004-6981(72)90076-5 |publisher=Elsevier |issn=1352-2310 |ref=harv |bibcode=1972AtmEn...6..579L}}&lt;/ref&gt;&lt;ref name=&quot;lovelock1974&quot;&gt;{{cite journal |last1=Lovelock |first1=J.E. |last2=Margulis |first2=L. |title=Atmospheric homeostasis by and for the biosphere: the Gaia hypothesis |journal=Tellus |date=1974 |volume=26 |series=Series A |issue=12 |pages=210 |doi=10.1111/j.2153-3490.1974.tb01946.x |url=http://tellusa.net/index.php/tellusa/article/view/9731 |accessdate=20 October 2012 |publisher=International Meteorological Institute |location=Stockholm |issn=1600-0870 |ref=harv |bibcode=1974Tell...26....2L}}&lt;/ref&gt; [[Creation myth]]s in many religions involve the creation of Earth by a supernatural [[deity]] or deities.&lt;ref name=&quot;:0&quot; /&gt;

Scientific investigation has resulted in several culturally transformative shifts in people's view of the planet. In the West, belief in a [[flat Earth]]&lt;ref name=russell1997/&gt; was displaced by the idea of [[spherical Earth]], credited to [[Pythagoras]] in the 6th century BC.&lt;ref&gt;{{cite web |url=https://archive.org/details/livesnecromance04godwgoog |title=Lives of the Necromancers |first1=William |last1=Godwin |date=1876 |page=49}}&lt;/ref&gt; Earth was further believed to be [[Geocentric model|the center of the universe]] until the 16th century when scientists first theorized that it was [[heliocentrism|a moving object]], comparable to the other planets in the Solar System.&lt;ref name=arnett20060716/&gt; Due to the efforts of influential Christian scholars and clerics such as [[James Ussher]], who sought to determine the age of Earth through analysis of genealogies in Scripture, Westerners before the 19th century generally believed Earth to be a few thousand years old at most. It was only during the 19th century that geologists realized [[Earth's age]] was at least many millions of years.&lt;ref&gt;{{Cite book |title=Physical Geology: Exploring the Earth |last=Monroe |first=James |publisher=Thomson Brooks/Cole |year=2007 |isbn=978-0-495-01148-4 |location= |pages=26365 |last2=Wicander |first2=Reed |last3=Hazlett |first3=Richard}}&lt;/ref&gt;

[[William Thomson, 1st Baron Kelvin|Lord Kelvin]] used [[thermodynamics]] to estimate the age of Earth to be between 20 million and 400 million years in 1864, sparking a vigorous debate on the subject; it was only when radioactivity and [[Radiometric dating|radioactive dating]] were discovered in the late 19th and early 20th centuries that a reliable mechanism for determining Earth's age was established, proving the planet to be billions of years old.&lt;ref&gt;{{Cite book |title=An Equation for Every Occasion: Fifty-Two Formulas and Why They Matter |last=Henshaw |first=John M. |publisher=Johns Hopkins University Press |year=2014 |isbn=978-1-421-41491-1 |location= |pages=11718}}&lt;/ref&gt;&lt;ref&gt;{{Cite book |title=Lord Kelvin and the Age of the Earth |last=Burchfield |first=Joe D. |publisher=University of Chicago Press |year=1990 |isbn=978-0-226-08043-7 |location= |pages=1318}}&lt;/ref&gt; The perception of Earth shifted again in the 20th century when humans first viewed it from orbit, and especially with photographs of Earth returned by the [[Apollo program]].&lt;ref&gt;{{cite news |url=http://alcalde.texasexes.org/2012/06/neil-degrasse-tyson-on-why-space-matters-watch/ |title=Neil deGrasse Tyson: Why Space Matters |work=[[The Alcalde]] |first=Rose |last=Cahalan |date=5 June 2012 |accessdate=21 January 2016}}&lt;/ref&gt;

==See also==
* [[Outline of Earth]]
* [[Celestial sphere]]
* [[Earth physical characteristics tables]]
* [[Earth science]]
* [[Earth system science]]
* [[Timeline of the far future]]
{{Portal bar|Biology|Earth sciences|Ecology|Geography|Volcanoes|Moon|Solar System|Weather}}

==Notes==
&lt;!--

    List alphabetised.  Keep it that way!

--&gt;
{{reflist |30em |group=&quot;n&quot; |refs=

&lt;ref name=Aoki&gt;The ultimate source of these figures, uses the term &quot;seconds of UT1&quot; instead of &quot;seconds of mean solar time&quot;.{{cite journal |last=Aoki |first=S. |title=The new definition of universal time |journal=Astronomy and Astrophysics |date=1982 |volume=105 |issue=2 |pages=35961 |bibcode=1982A&amp;A...105..359A |last2=Kinoshita |first2=H. |last3=Guinot |first3=B. |last4=Kaplan |first4=G. H. |last5=McCarthy |first5=D. D. |last6=Seidelmann |first6=P. K.}}&lt;/ref&gt;

&lt;ref name=apsis&gt;aphelion = ''a''  (1 + ''e''); perihelion = ''a''  (1&amp;nbsp; ''e''), where ''a'' is the semi-major axis and ''e'' is the eccentricity. The difference between Earth's perihelion and aphelion is 5 million kilometers.&lt;/ref&gt;

&lt;ref name=epoch&gt;All astronomical quantities vary, both [[Secular phenomena|secularly]] and [[Frequency|periodically]]. The quantities given are the values at the instant [[J2000.0]] of the secular variation, ignoring all periodic variations.&lt;/ref&gt;

&lt;ref name=hill_radius&gt;For Earth, the [[Hill radius]] is &lt;math&gt;R_H = a\left ( \frac{m}{3M} \right )^{\frac{1}{3}}&lt;/math&gt;, where ''m'' is the mass of Earth, ''a'' is an astronomical unit, and ''M'' is the mass of the Sun. So the radius in AU is about &lt;math&gt;\left ( \frac{1}{3 \cdot 332,946} \right )^{\frac{1}{3}} = 0.01&lt;/math&gt;.&lt;/ref&gt;

&lt;ref name=jaes41_3_379&gt;Including the [[Somali Plate]], which is being formed out of the African Plate. See: {{cite journal |first=Jean |last=Chorowicz |date=October 2005 |title=The East African rift system |journal=[[Journal of African Earth Sciences]] |volume=43 |issue=13 |pages=379410 |doi=10.1016/j.jafrearsci.2005.07.019 |bibcode=2005JAfES..43..379C}}&lt;/ref&gt;

&lt;ref name=sidereal_solar&gt;The number of solar days is one less than the number of [[sidereal day]]s because the orbital motion of Earth around the Sun causes one additional revolution of the planet about its axis.&lt;/ref&gt;

&lt;ref name=solar_energy&gt;Aphelion is 103.4% of the distance to perihelion. Due to the inverse square law, the radiation at perihelion is about 106.9% the energy at aphelion.&lt;/ref&gt;

&lt;ref name=surfacecover&gt;Due to natural fluctuations, ambiguities surrounding [[Ice shelf|ice shelves]], and mapping conventions for [[vertical datum]]s, exact values for land and ocean coverage are not meaningful. Based on data from the [[Vector Map]] and [http://www.landcover.org/ Global Landcover] datasets, extreme values for coverage of lakes and streams are 0.6% and 1.0% of Earth's surface. The ice shields of [[Antarctica]] and [[Greenland]] are counted as land, even though much of the rock that supports them lies below sea level.&lt;/ref&gt;

&lt;ref name=trench_depth&gt;This is the measurement taken by the vessel ''[[Kaik]]'' in March 1995 and is considered the most accurate measurement to date. See the [[Challenger Deep]] article for more details.&lt;/ref&gt;

&lt;ref name=space_debris&gt;As of 5 July 2016, the United States Strategic Command tracked a total of 17,729 artificial objects, mostly debris. See: {{cite newsletter |url=https://orbitaldebris.jsc.nasa.gov/quarterly-news/pdfs/odqnv20i3.pdf |title=Orbital Debris Quarterly News |volume=20 |issue=3 |page=8 |publisher=[[NASA]] |date=July 2016 |accessdate=10 October 2016}}&lt;/ref&gt;

}}

==References==
&lt;!--

    List alphabetised.  Keep it that way!

--&gt;
{{reflist |30em |refs=

&lt;ref name=aaa428_261&gt;{{cite journal |display-authors=1 |last1=Laskar |first1=J. |last2=Robutel |first2=P. |last3=Joutel |first3=F. |last4=Gastineau |first4=M. |last5=Correia |first5=A.C.M. |last6=Levrard |first6=B. |title=A long-term numerical solution for the insolation quantities of the Earth |journal=Astronomy and Astrophysics |date=2004 |volume=428 |issue=1 |pages=26185 |bibcode=2004A&amp;A...428..261L |doi=10.1051/0004-6361:20041335}}&lt;/ref&gt;

&lt;ref name=ab2003&gt;{{cite web |author=Staff |date=September 2003 |url=http://astrobiology.arc.nasa.gov/roadmap/g1.html |archiveurl=https://www.webcitation.org/664nPTN2N?url=http://astrobiology.arc.nasa.gov/roadmap/g1.html |archivedate=11 March 2012 |title=Astrobiology Roadmap |publisher=NASA, Lockheed Martin |accessdate=10 March 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=abedon1997&gt;{{cite web |last1=Abedon |first1=Stephen T. |date=31 March 1997 |url=http://www.mansfield.ohio-state.edu/~sabedon/biol1010.htm |archiveurl=https://www.webcitation.org/6F17z629O?url=http://www.mansfield.ohio-state.edu/~sabedon/biol1010.htm |archivedate=10 March 2013 |title=History of Earth |publisher=Ohio State University |accessdate=19 March 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=&quot;age_earth1&quot;&gt;See:
* {{cite book |first1=G.B. |last1=Dalrymple |date=1991 |title=The Age of the Earth |publisher=Stanford University Press |location=California |isbn=0-8047-1569-6}}
* {{cite web |last=Newman |first=William L. |date=9 July 2007 |url=http://pubs.usgs.gov/gip/geotime/age.html |title=Age of the Earth |publisher=Publications Services, USGS |accessdate=20 September 2007}}
* {{cite journal |last1=Dalrymple |first1=G. Brent |title=The age of the Earth in the twentieth century: a problem (mostly) solved |journal=Geological Society, London, Special Publications |date=2001 |volume=190 |issue=1 |pages=20521 |url=http://sp.lyellcollection.org/cgi/content/abstract/190/1/205 |accessdate=20 September 2007 |doi=10.1144/GSL.SP.2001.190.01.14 |bibcode=2001GSLSP.190..205D}}
&lt;/ref&gt;

&lt;ref name=aj136_5_1906&gt;{{cite journal |last1=McCarthy |first1=Dennis D. |last2=Hackman |first2=Christine |last3=Nelson |first3=Robert A. |title=The Physical Basis of the Leap Second |journal=The Astronomical Journal |volume=136 |issue=5 |pages=190608 |date=November 2008 |doi=10.1088/0004-6256/136/5/1906 |bibcode=2008AJ....136.1906M}}&lt;/ref&gt;

&lt;ref name=ajes38_613&gt;{{cite journal |last1=Armstrong |first1=R. L. |date=1991 |title=The persistent myth of crustal growth |journal=Australian Journal of Earth Sciences |volume=38 |issue=5 |pages=61330 |doi=10.1080/08120099108727995 |bibcode=1991AuJES..38..613A|url=http://www.mantleplumes.org/WebDocuments/Armstrong1991.pdf }}&lt;/ref&gt;

&lt;ref name=Allen294&gt;{{cite book |title=Allen's Astrophysical Quantities |last1=Allen |first1=Clabon Walter |last2=Cox |first2=Arthur N. |publisher=Springer |date=2000 |isbn=0-387-98746-0 |url=https://books.google.com/?id=w8PK2XFLLH8C&amp;pg=PA294 |page=294 |accessdate=13 March 2011}}&lt;/ref&gt;

&lt;ref name=Allen296&gt;{{cite book |title=Allen's Astrophysical Quantities |last1=Allen |first1=Clabon Walter |last2=Cox |first2=Arthur N. |publisher=Springer |date=2000 |isbn=0-387-98746-0 |url=https://books.google.com/?id=w8PK2XFLLH8C&amp;pg=PA296 |page=296 |accessdate=17 August 2010}}&lt;/ref&gt;

&lt;ref name=amnat163_2_192&gt;{{cite journal |last1=Hillebrand |first1=Helmut |title=On the Generality of the Latitudinal Gradient |journal=American Naturalist |date=2004 |volume=163 |issue=2 |pages=192211 |doi=10.1086/381004 |pmid=14970922}}&lt;/ref&gt;

&lt;ref name=angular&gt;{{cite web |last1=Williams |first1=David R. |date=10 February 2006 |url=http://nssdc.gsfc.nasa.gov/planetary/planetfact.html |title=Planetary Fact Sheets |publisher=NASA |accessdate=28 September 2008}}See the apparent diameters on the Sun and Moon pages.&lt;/ref&gt;
&lt;!---
&lt;ref name=arghg4_143&gt;{{cite journal |last1=Pennock |first1=R. T. |title=Creationism and intelligent design |journal=Annual Review of Genomics and Human Genetics |volume=4 |issue=1 |pages=14363 |date=2003 |pmid=14527300 |doi=10.1146/annurev.genom.4.070802.110400}}&lt;/ref&gt;
---&gt;
&lt;ref name=arnett20060716&gt;{{cite web |first1=Bill |last1=Arnett |date=16 July 2006 |title=Earth |work=The Nine Planets, A Multimedia Tour of the Solar System: one star, eight planets, and more |url=http://nineplanets.org/earth.html |accessdate=9 March 2010}}&lt;/ref&gt;

&lt;ref name=arwps4_265&gt;{{cite journal |last1=Hunten |first1=D. M. |title=Hydrogen loss from the terrestrial planets |journal=Annual Review of Earth and Planetary Sciences |date=1976 |volume=4 |issue=1 |pages=26592 |bibcode=1976AREPS...4..265H |doi=10.1146/annurev.ea.04.050176.001405 |last2=Donahue |first2=T. M}}&lt;/ref&gt;

&lt;ref name=as92_324&gt;{{cite journal |last1=Murphy |first1=J. B. |last2=Nance |first2=R. D. |title=How do supercontinents assemble? |journal=American Scientist |date=1965 |volume=92 |issue=4 |pages=32433 |doi=10.1511/2004.4.324}}&lt;/ref&gt;

&lt;ref name=asp2002&gt;{{cite conference |last1=Guinan |first1=E. F. |last2=Ribas |first2=I. |editor=Benjamin Montesinos, Alvaro Gimenez and Edward F. Guinan |title=Our Changing Sun: The Role of Solar Nuclear Evolution and Magnetic Activity on Earth's Atmosphere and Climate |work=ASP Conference Proceedings: The Evolving Sun and its Influence on Planetary Environments |location=San Francisco |isbn=1-58381-109-5 |publisher=Astronomical Society of the Pacific |bibcode=2002ASPC..269...85G}}&lt;/ref&gt;

&lt;ref name=asu_highest_temp&gt;{{cite web|url=http://wmo.asu.edu/world-highest-temperature |title=World: Highest Temperature |work=[[WMO]] Weather and Climate Extremes Archive |publisher=[[Arizona State University]] |accessdate=7 August 2010 |deadurl=yes |archiveurl=https://web.archive.org/web/20130104143844/http://wmo.asu.edu/world-highest-temperature |archivedate=4 January 2013 |df=dmy }}&lt;/ref&gt;

&lt;ref name=asu_lowest_temp&gt;{{cite web|url=http://wmo.asu.edu/world-lowest-temperature |title=World: Lowest Temperature |work=[[WMO]] Weather and Climate Extremes Archive |publisher=[[Arizona State University]] |accessdate=7 August 2010 |deadurl=yes |archiveurl=https://web.archive.org/web/20100616025722/http://wmo.asu.edu/world-lowest-temperature |archivedate=16 June 2010 |df= }}&lt;/ref&gt;

&lt;ref name=&quot;atmosphere&quot;&gt;{{cite web |author=Staff |date=8 October 2003 |url=http://www.nasa.gov/audience/forstudents/9-12/features/912_liftoff_atm.html |title=Earth's Atmosphere |publisher=NASA |accessdate=21 March 2007}}&lt;/ref&gt;

&lt;ref name=&quot;berger2002&quot;&gt;{{cite web |last1=Berger |first1=Wolfgang H. |date=2002 |url=http://earthguide.ucsd.edu/virtualmuseum/climatechange1/cc1syllabus.shtml |title=The Earth's Climate System |publisher=University of California, San Diego |accessdate=24 March 2007}}&lt;/ref&gt;

&lt;ref name=bgsa119_1_140&gt;{{cite journal |last1=Wilkinson |first1=B. H. |last2=McElroy |first2=B. J. |title=The impact of humans on continental erosion and sedimentation |journal=Bulletin of the Geological Society of America |date=2007 |volume=119 |issue=12 |pages=14056 |url=http://bulletin.geoscienceworld.org/cgi/content/abstract/119/1-2/140 |accessdate=22 April 2007 |doi=10.1130/B25899.1 |bibcode=2007GSAB..119..140W}}&lt;/ref&gt;

&lt;ref name=biodiv&gt;{{cite web|author=Staff |url=http://www.biodiv.org/programmes/default.shtml |title=Themes &amp; Issues |publisher=Secretariat of the Convention on Biological Diversity |accessdate=29 March 2007 |deadurl=yes |archiveurl=https://web.archive.org/web/20070407011249/http://www.biodiv.org/programmes/default.shtml |archivedate=7 April 2007 |df= }}&lt;/ref&gt;

&lt;ref name=bowring_housch1995&gt;{{cite journal |last1=Bowring |first1=S. |last2=Housh |first2=T. |title=The Earth's early evolution |date=1995 |doi=10.1126/science.7667634 |journal=Science |volume=269 |pmid=7667634 |issue=5230 |bibcode=1995Sci...269.1535B |pages=153540}}&lt;/ref&gt;

&lt;ref name=&quot;britt2000&quot;&gt;{{cite web |first1=Robert |last1=Britt |url=http://www.space.com/scienceastronomy/solarsystem/death_of_earth_000224.html |title=Freeze, Fry or Dry: How Long Has the Earth Got? |date=25 February 2000 |deadurl=yes |archiveurl=https://web.archive.org/web/20090605231345/http://www.space.com/scienceastronomy/solarsystem/death_of_earth_000224.html |archivedate=5 June 2009}}&lt;/ref&gt;

&lt;ref name=bromberg2008&gt;{{cite web |last1=Bromberg |first1=Irv |date=1 May 2008 |url=http://www.sym454.org/seasons/ |title=The Lengths of the Seasons (on Earth) |publisher=University of Toronto |accessdate=8 November 2008}}&lt;/ref&gt;

&lt;ref name=brown_mussett1981&gt;{{cite book |last1=Brown |first1=Geoff C. |last2=Mussett |first2=Alan E. |title=The Inaccessible Earth |edition=2nd |date=1981 |page=166 |publisher=Taylor &amp; Francis |isbn=0-04-550028-2}} Note: After Ronov and Yaroshevsky (1969).&lt;/ref&gt;

&lt;ref name=brown_wohletz2005&gt;{{cite web |last1=Brown |first1=W. K. |last2=Wohletz |first2=K. H. |date=2005 |url=http://www.lanl.gov/orgs/ees/geodynamics/Wohletz/SFT-Tectonics.htm |title=SFT and the Earth's Tectonic Plates |publisher=Los Alamos National Laboratory |accessdate=2 March 2007}}&lt;/ref&gt;

&lt;ref name=burton20021129&gt;{{cite web |last1=Burton |first1=Kathleen |date=29 November 2002 |url=http://www.nasa.gov/centers/ames/news/releases/2000/00_79AR.html |title=Astrobiologists Find Evidence of Early Life on Land |publisher=NASA |accessdate=5 March 2007}}&lt;/ref&gt;

&lt;ref name=campbelwh&gt;{{cite book |last1=Campbell |first1=Wallace Hall |title=Introduction to Geomagnetic Fields |publisher=Cambridge University Press |date=2003 |location=New York |page=57 |isbn=0-521-82206-8}}&lt;/ref&gt;

&lt;ref name=canup_asphaug2001a&gt;{{cite conference |last1=Canup |first1=R. M. |last2=Asphaug |first2=E. |title=An impact origin of the Earth-Moon system |conference=American Geophysical Union, Fall Meeting 2001 |work=Abstract #U51A-02 |date=2001 |bibcode=2001AGUFM.U51A..02C}}&lt;/ref&gt;

&lt;ref name=canup_asphaug2001b&gt;{{cite journal |last1=Canup |first1=R. |last2=Asphaug |first2=E. |title=Origin of the Moon in a giant impact near the end of the Earth's formation |journal=Nature |volume=412 |pages=70812 |date=2001 |url=http://www.nature.com/nature/journal/v412/n6848/abs/412708a0.html |doi=10.1038/35089010 |pmid=11507633 |issue=6848 |bibcode=2001Natur.412..708C}}&lt;/ref&gt;

&lt;ref name=carrington&gt;{{cite news |first1=Damian |last1=Carrington |title=Date set for desert Earth |publisher=BBC News |date=21 February 2000 |url=http://news.bbc.co.uk/1/hi/sci/tech/specials/washington_2000/649913.stm |accessdate=31 March 2007}}&lt;/ref&gt;

&lt;ref name=cazenave_ahrens1995&gt;{{cite book |first1=Anny |last1=Cazenave |authorlink=Anny Cazenave |editor=Ahrens, Thomas J |date=1995 |title=Global Earth Physics: A Handbook of Physical Constants |publisher=American Geophysical Union |location=Washington, DC |isbn=0-87590-851-9 |chapter-url=http://www.agu.org/reference/gephys/5_cazenave.pdf |archiveurl=https://web.archive.org/web/20061016024803/http://www.agu.org/reference/gephys/5_cazenave.pdf |archivedate=16 October 2006 |accessdate=3 August 2008 |chapter-format=PDF |chapter=Geoid, Topography and Distribution of Landforms}}&lt;/ref&gt;

&lt;ref name=cfsa2006&gt;{{cite web |author=Staff |date=15 August 2006 |url=http://www.tscm.com/alert.html |title=Canadian Forces Station (CFS) Alert |publisher=Information Management Group |accessdate=31 March 2007}}&lt;/ref&gt;

&lt;ref name=Choi&gt;{{cite web |last1=Choi |first1=Charles Q. |title=First Asteroid Companion of Earth Discovered at Last |url=http://www.space.com/12443-earth-asteroid-companion-discovered-2010-tk7.html |date=27 July 2011 |publisher=[[Space.com]] |accessdate=27 July 2011}}&lt;/ref&gt;

&lt;ref name=christou_asher2011&gt;{{cite journal | last1=Christou|first1=Apostolos A.|last2=Asher|first2=David J. | date=31 March 2011 | title=A long-lived horseshoe companion to the Earth | arxiv=1104.0036 | class=astro-ph.EP | doi=10.1111/j.1365-2966.2011.18595.x | volume=414 |issue=4| journal=Monthly Notices of the Royal Astronomical Society | pages=29652969 | bibcode=2011MNRAS.414.2965C}} See table 2, p. 5.&lt;/ref&gt;

&lt;ref name=cia&gt;{{cite web |author=Staff |date=24 July 2008 |url=https://www.cia.gov/library/publications/the-world-factbook/geos/xx.html |title=World |work=The World Factbook |publisher=Central Intelligence Agency |accessdate=5 August 2008}}&lt;/ref&gt;

&lt;ref name=climate_zones&gt;{{cite web |author=Staff |url=http://www.ace.mmu.ac.uk/eae/climate/older/Climate_Zones.html |archiveurl=https://web.archive.org/web/20100808131632/http://www.ace.mmu.ac.uk/eae/climate/older/Climate_Zones.html |archivedate=8 August 2010 |title=Climate Zones |publisher=UK Department for Environment, Food and Rural Affairs |accessdate=24 March 2007}}&lt;/ref&gt;

&lt;ref name=cmp134_3&gt;{{cite journal |doi=10.1007/s004100050465 |title=Priscoan (4.004.03 Ga) orthogneisses from northwestern Canada |date=1999 |last1=Bowring |first1=Samuel A. |journal=Contributions to Mineralogy and Petrology |volume=134 |issue=1 |pages=316 |last2=Williams |first2=Ian S. |bibcode=1999CoMP..134....3B}}&lt;/ref&gt;

&lt;ref name=Connors&gt;{{cite journal |last1=Connors |first1=Martin |last2=Wiegert |first2=Paul |last3=Veillet |first3=Christian |title=Earth's Trojan asteroid |date=27 July 2011 |journal=[[Nature (journal)|Nature]] |volume=475 |pages=48183 |url=http://www.nature.com/nature/journal/v475/n7357/full/nature10233.html |doi=10.1038/nature10233 |accessdate=27 July 2011 |issue=7357 |bibcode=2011Natur.475..481C |pmid=21796207}}&lt;/ref&gt;

&lt;ref name=cordoba2004&gt;{{cite web |first1=S. Sanz Fernndez |last1=de Crdoba |date=21 June 2004 |url=http://www.fai.org/astronautics/100km.asp |archiveurl=https://www.webcitation.org/5mqg4J7Nl?url=http://www.fai.org/astronautics/100km.asp |archivedate=17 January 2010 |title=Presentation of the Karman separation line, used as the boundary separating Aeronautics and Astronautics |publisher=Fdration Aronautique Internationale |accessdate=21 April 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=&quot;Cox2000&quot;&gt;{{cite book |editor=Arthur N. Cox |title=Allen's Astrophysical Quantities |url=https://books.google.com/?id=w8PK2XFLLH8C&amp;pg=PA244 |edition=4th |date=2000 |publisher=AIP Press |location=New York |isbn=0-387-98746-0 |page=244 |accessdate=17 August 2010}}&lt;/ref&gt;

&lt;ref name=&quot;Apollo13History&quot;&gt;{{cite web |url=https://history.nasa.gov/SP-4029/Apollo_13a_Summary.htm |title=Apollo 13 The Seventh Mission: The Third Lunar Landing Attempt 11 April17 April 1970 |publisher=NASA |accessdate=7 November 2015}}&lt;/ref&gt;

&lt;ref name=de_pater_lissauer2010&gt;{{cite book |last1=de Pater |first1=Imke |last2=Lissauer |first2=Jack J. |title=Planetary Sciences |page=154 |edition=2nd |publisher=Cambridge University Press |date=2010 |isbn=0-521-85371-0}}&lt;/ref&gt;

&lt;ref name=dole1970&gt;{{cite book |first1=Stephen H. |last1=Dole |date=1970 |title=Habitable Planets for Man |edition=2nd |publisher=American Elsevier Publishing Co |url=https://www.rand.org/pubs/reports/R414/ |accessdate=11 March 2007 |isbn=0-444-00092-5}}&lt;/ref&gt;

&lt;ref name=duennebier1999&gt;{{cite web |last1=Duennebier |first1=Fred |date=12 August 1999 |url=http://www.soest.hawaii.edu/GG/ASK/plate-tectonics2.html |title=Pacific Plate Motion |publisher=University of Hawaii |accessdate=14 March 2007}}&lt;/ref&gt;
&lt;!---
&lt;ref name=Dutch2002&gt;{{cite journal |last1=Dutch |first1=S. I. |date=2002 |title=Religion as belief versus religion as fact |journal=Journal of Geoscience Education |volume=50 |issue=2 |pages=13744 |url=http://nagt.org/files/nagt/jge/abstracts/Dutch_v50n2p137.pdf |accessdate=28 April 2008 |format=PDF}}&lt;/ref&gt;
---&gt;
&lt;ref name=&quot;earth_fact_sheet&quot;&gt;{{cite web |last1=Williams |first1=David R. |date=1 September 2004 |url=http://nssdc.gsfc.nasa.gov/planetary/factsheet/earthfact.html |title=Earth Fact Sheet |publisher=NASA |accessdate=9 August 2010}}&lt;/ref&gt;
&lt;!---
&lt;ref name=edis2003&gt;{{cite book |first1=Taner |last1=Edis |date=2003 |title=A World Designed by God: Science and Creationism in Contemporary Islam |publisher=Amherst: Prometheus |archiveurl=https://web.archive.org/web/20030608143431/http://www2.truman.edu/~edis/writings/articles/CFI-2001.pdf |url=http://www2.truman.edu/~edis/writings/articles/CFI-2001.pdf |archivedate=8 June 2003 |isbn=1-59102-064-6 |accessdate=28 April 2008 |format=PDF}}&lt;/ref&gt;
---&gt;
&lt;ref name=ellis2004&gt;{{cite book |first1=Lee |last1=Ellis |date=2004 |title=Who's who of NASA Astronauts |publisher=Americana Group Publishing |isbn=0-9667961-4-4}}&lt;/ref&gt;

&lt;ref name=epsl121_1&gt;{{cite journal|last1=Vlaar |first1=N |last2=Vankeken |first2=P. |last3=Vandenberg |first3=A. |title=Cooling of the Earth in the Archaean: Consequences of pressure-release melting in a hotter mantle |date=1994 |journal=Earth and Planetary Science Letters |volume=121 |issue=12 |pages=118 |doi=10.1016/0012-821X(94)90028-0 |url=http://www.geo.lsa.umich.edu/~keken/papers/Vlaar_EPSL94.pdf |format=PDF |bibcode=1994E&amp;PSL.121....1V |deadurl=yes |archiveurl=https://web.archive.org/web/20120319181621/http://www.geo.lsa.umich.edu/~keken/papers/Vlaar_EPSL94.pdf |archivedate=19 March 2012 |df= }}&lt;/ref&gt;

&lt;ref name=espenak_meeus20070207&gt;{{cite web |last1=Espenak |first1=F. |last2=Meeus |first2=J. |date=7 February 2007 |url=http://sunearth.gsfc.nasa.gov/eclipse/SEcat5/secular.html |archiveurl=https://www.webcitation.org/617EmcCjR?url=http://sunearth.gsfc.nasa.gov/eclipse/SEcat5/secular.html |archivedate=22 August 2011 |title=Secular acceleration of the Moon |publisher=NASA |accessdate=20 April 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=fao1994&gt;{{cite book |author=FAO Staff |date=1995 |title=FAO Production Yearbook 1994 |edition=Volume 48 |publisher=Food and Agriculture Organization of the United Nations |location=Rome, Italy |isbn=92-5-003844-5}}&lt;/ref&gt;

&lt;ref name=fisher19960205&gt;{{cite web |last1=Fisher |first1=Rick |date=5 February 1996 |url=http://www.cv.nrao.edu/~rfisher/Ephemerides/earth_rot.html |title=Earth Rotation and Equatorial Coordinates |publisher=National Radio Astronomy Observatory |accessdate=21 March 2007}}&lt;/ref&gt;

&lt;ref name=fitzpatrick2006&gt;{{cite web |last1=Fitzpatrick |first1=Richard |date=16 February 2006 |url=http://farside.ph.utexas.edu/teaching/plasma/lectures/node69.html |title=MHD dynamo theory |publisher=NASA WMAP |accessdate=27 February 2007}}&lt;/ref&gt;
&lt;!---
&lt;ref name=frye1983&gt;{{cite book |last1=Frye |first1=Roland Mushat |date=1983 |title=Is God a Creationist? The Religious Case Against Creation-Science |publisher=Scribner's |isbn=0-684-17993-8}}&lt;/ref&gt;
---&gt;
&lt;ref name=geerts_linacre97&gt;{{cite web |last1=Geerts |first1=B. |last2=Linacre |first2=E. |url=http://www-das.uwyo.edu/~geerts/cwx/notes/chap01/tropo.html |title=The height of the tropopause |date=November 1997 |work=Resources in Atmospheric Sciences |publisher=University of Wyoming |accessdate=10 August 2006}}&lt;/ref&gt;

&lt;ref name=gould1994&gt;{{cite journal |last1=Gould |first1=Stephan J. |title=The Evolution of Life on Earth |journal=Scientific American |date=October 1994 |url=http://brembs.net/gould.html |accessdate=5 March 2007 |doi=10.1038/scientificamerican1094-84 |volume=271 |issue=4 |pages=8491 |pmid=7939569|bibcode = 1994SciAm.271d..84G }}&lt;/ref&gt;

&lt;ref name=gps_time_series&gt;{{cite web |author=Staff |url=http://sideshow.jpl.nasa.gov/mbh/series.html |title=GPS Time Series |publisher=NASA JPL |accessdate=2 April 2007}}&lt;/ref&gt;

&lt;ref name=&quot;Harrison 2002&quot;&gt;{{cite book |first1=Roy M. |last1=Harrison |authorlink1=Roy M. Harrison|last2=Hester |first2=Ronald E. |date=2002 |title=Causes and Environmental Implications of Increased UV-B Radiation |publisher=Royal Society of Chemistry |isbn=0-85404-265-2}}&lt;/ref&gt;

&lt;ref name=hbcp2000&gt;{{cite book |author=Various |editor=David R. Lide |date=2000 |title=Handbook of Chemistry and Physics |edition=81st |publisher=CRC |isbn=0-8493-0481-4}}&lt;/ref&gt;

&lt;ref name=&quot;heat loss&quot;&gt;{{cite journal |doi=10.1029/JB086iB12p11535 |title=Oceans and Continents: Similarities and Differences in the Mechanisms of Heat Loss |date=1981 |last1=Sclater |first1=John G |last2=Parsons |first2=Barry |last3=Jaupart |first3=Claude |journal=Journal of Geophysical Research |volume=86 |issue=B12 |page=11535 |bibcode=1981JGR....8611535S}}&lt;/ref&gt;

&lt;ref name=hess5_4_569&gt;{{cite journal |last1=Bounama |first1=Christine |date=2001 |last2=Franck |first2=S. |last3=Von Bloh |first3=W. |title=The fate of Earth's ocean |journal=Hydrology and Earth System Sciences |volume=5 |issue=4 |pages=56975 |publisher=Potsdam Institute for Climate Impact Research |location=Germany |url=http://www.hydrol-earth-syst-sci.net/5/569/2001/hess-5-569-2001.pdf |accessdate=3 July 2009 |doi=10.5194/hess-5-569-2001 |bibcode=2001HESS....5..569B}}&lt;/ref&gt;

&lt;ref name=hessd4_439&gt;{{cite journal |last1=Peel |first1=M. C. |last2=Finlayson |first2=B. L. |last3=McMahon |first3=T. A. |title=Updated world map of the Kppen-Geiger climate classification |journal=Hydrology and Earth System Sciences Discussions |date=2007 |volume=4 |issue=2 |pages=43973 |url=http://www.hydrol-earth-syst-sci-discuss.net/4/439/2007/hessd-4-439-2007.html |accessdate=31 March 2007 |doi=10.5194/hessd-4-439-2007}}&lt;/ref&gt;

&lt;ref name=hydrologic_cycle&gt;{{cite web |author=Various |date=21 July 1997 |url=http://ww2010.atmos.uiuc.edu/(Gh)/guides/mtr/hyd/home.rxml |title=The Hydrologic Cycle |publisher=University of Illinois |accessdate=24 March 2007}}&lt;/ref&gt;

&lt;ref name=&quot;IERS2004&quot;&gt;{{cite book |accessdate=29 April 2016 |author=International Earth Rotation and Reference Systems Service (IERS) Working Group |chapter=General Definitions and Numerical Standards |chapter-url=http://www.iers.org/SharedDocs/Publikationen/EN/IERS/Publications/tn/TechnNote32/tn32_009.pdf?__blob=publicationFile&amp;v=1 |editor-first=Dennis D. |editor-last=McCarthy |editor2-first=Grard |editor2-last=Petit |url=http://www.iers.org/SharedDocs/Publikationen/EN/IERS/Publications/tn/TechnNote32/tn32.pdf?__blob=publicationFile&amp;v=1 |title=IERS Conventions (2003) |publisher=Verlag des Bundesamts fr Kartographie und Geodsie |work=IERS Technical Note No. 32 |year=2004 |format=PDF |location=Frankfurt am Main |page=12 |isbn=3-89888-884-3}}&lt;/ref&gt;

&lt;ref name=IERS&gt;{{cite web |author=Staff |date=7 August 2007 |url=http://hpiers.obspm.fr/eop-pc/models/constants.html |title=Useful Constants |publisher=[[International Earth Rotation and Reference Systems Service]] |accessdate=23 September 2008}}&lt;/ref&gt;

&lt;ref name=iers1623&gt;{{cite web |author=Staff |url=http://hpiers.obspm.fr/eop-pc/earthor/ut1lod/lod-1623.html |title=IERS Excess of the duration of the day to 86400s&amp;nbsp;... since 1623 |publisher=International Earth Rotation and Reference Systems Service (IERS) |accessdate=23 September 2008}}Graph at end.&lt;/ref&gt;

&lt;ref name=iers1962&gt;{{cite web |author=Staff |url=http://hpiers.obspm.fr/eop-pc/earthor/ut1lod/figure3.html |archiveurl=https://web.archive.org/web/20070813203913/http://hpiers.obspm.fr/eop-pc/earthor/ut1lod/figure3.html |archivedate=13 August 2007 |title=IERS Variations in the duration of the day 19622005 |publisher=International Earth Rotation and Reference Systems Service (IERS) |accessdate=23 September 2008}}&lt;/ref&gt;

&lt;ref name=jaes23_799&gt;{{cite journal |doi=10.1016/S1367-9120(03)00134-2 |title=Continental crustal growth and the supercontinental cycle: evidence from the Central Asian Orogenic Belt |date=2004 |last1=Hong |first1=D. |journal=Journal of Asian Earth Sciences |volume=23 |issue=5 |pages=799813 |bibcode=2004JAESc..23..799H |last2=Zhang |first2=Jisheng |last3=Wang |first3=Tao |last4=Wang |first4=Shiguang |last5=Xie |first5=Xilin}}&lt;/ref&gt;

&lt;ref name=jas22_3_225&gt;{{cite journal |last1=Berkner |first1=L. V. |last2=Marshall |first2=L. C. |title=On the Origin and Rise of Oxygen Concentration in the Earth's Atmosphere |journal=Journal of Atmospheric Sciences |volume=22 |issue=3 |pages=22561 |bibcode=1965JAtS...22..225B |doi=10.1175/1520-0469(1965)022&lt;0225:OTOARO&gt;2.0.CO;2 |year=1965}}&lt;/ref&gt;

&lt;ref name=jas31_4_1118&gt;{{cite journal |last1=Liu |first1=S. C. |last2=Donahue |first2=T. M. |title=The Aeronomy of Hydrogen in the Atmosphere of the Earth |journal=Journal of Atmospheric Sciences |volume=31 |issue=4 |pages=111836 |bibcode=1974JAtS...31.1118L |doi=10.1175/1520-0469(1974)031&lt;1118:TAOHIT&gt;2.0.CO;2 |year=1974}}&lt;/ref&gt;

&lt;ref name=jessey&gt;{{cite web |last1=Jessey |first1=David |url=http://geology.csupomona.edu/drjessey/class/Gsc101/Weathering.html |archiveurl=https://www.webcitation.org/5QVXQaCAy?url=http://geology.csupomona.edu/drjessey/class/Gsc101/Weathering.html |archivedate=21 July 2007 |title=Weathering and Sedimentary Rocks |publisher=Cal Poly Pomona |accessdate=20 March 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=jg31_3_267&gt;{{cite journal |last1=Pollack |first1=Henry N. |last2=Hurter |first2=Suzanne J. |last3=Johnson |first3=Jeffrey R. |title=Heat flow from the Earth's interior: Analysis of the global data set |journal=Reviews of Geophysics |volume=31 |issue=3 |pages=26780 |date=August 1993 |doi=10.1029/93RG01249 |bibcode=1993RvGeo..31..267P |archiveurl=https://web.archive.org/web/20140109015833/http://onlinelibrary.wiley.com/doi/10.1029/93RG01249/abstract |url=http://onlinelibrary.wiley.com/doi/10.1029/93RG01249/abstract |archivedate=9 January 2014}}&lt;/ref&gt;
&lt;!---
&lt;ref name=jge53_3_319&gt;{{cite journal |last1=Ross |first1=M. R. |date=2005 |title=Who Believes What? Clearing up Confusion over Intelligent Design and Young-Earth Creationism |journal=Journal of Geoscience Education |volume=53 |issue=3 |page=319 |url=http://www.nagt.org/files/nagt/jge/abstracts/Ross_v53n3p319.pdf |accessdate=28 April 2008 |format=PDF}}&lt;/ref&gt;
---&gt;

&lt;!---
&lt;ref name=jrst43_4_419&gt;{{cite journal |last1=Colburn, |first1=A. |last2=Henriques |first2=Laura |date=2006 |title=Clergy views on evolution, creationism, science, and religion |journal=Journal of Research in Science Teaching |volume=43 |issue=4 |pages=41942 |doi=10.1002/tea.20109 |bibcode=2006JRScT..43..419C}}&lt;/ref&gt;
---&gt;
&lt;ref name=kaiko7000&gt;{{cite web |title=7,000&amp;nbsp;m Class Remotely Operated Vehicle ''KAIKO 7000'' |url=http://www.jamstec.go.jp/e/about/equipment/ships/kaiko7000.html |publisher=Japan Agency for Marine-Earth Science and Technology (JAMSTEC) |accessdate=7 June 2008}}&lt;/ref&gt;

&lt;ref name=kennedy1989&gt;{{cite book |first1=Paul |last1=Kennedy |authorlink1=Paul Kennedy |date=1989 |title=[[The Rise and Fall of the Great Powers]] |edition=1st |publisher=Vintage |isbn=0-679-72019-7}}&lt;/ref&gt;

&lt;ref name=kennish2001&gt;{{cite book |first1=Michael J. |last1=Kennish |date=2001 |title=Practical handbook of marine science |page=35 |edition=3rd |publisher=CRC Press |series=Marine science series |isbn=0-8493-2391-6}}&lt;/ref&gt;

&lt;ref name=kinver20091210&gt;{{cite news |url=http://news.bbc.co.uk/2/hi/science/nature/8406839.stm |title=Global average temperature may hit record level in 2010 |last1=Kinver |first1=Mark |date=10 December 2009 |work=[[BBC Online]] |accessdate=22 April 2010}}&lt;/ref&gt;

&lt;ref name=kious_tilling1999&gt;{{cite web |last1=Kious |first1=W. J. |last2=Tilling |first2=R. I. |date=5 May 1999 |url=http://pubs.usgs.gov/gip/dynamic/understanding.html |title=Understanding plate motions |publisher=USGS |accessdate=2 March 2007}}&lt;/ref&gt;

&lt;ref name=kirschvink1992&gt;{{cite book |last1=Kirschvink |first1=J. L. |editor1=Schopf, J.W. |editor2=Klein, C. |editor3=Des Maris, D. |date=1992 |title=Late Proterozoic low-latitude global glaciation: the Snowball Earth |series=The Proterozoic Biosphere: A Multidisciplinary Study |pages=5152 |publisher=Cambridge University Press |isbn=0-521-36615-1}}&lt;/ref&gt;

&lt;ref name=kring&gt;{{cite web |last1=Kring |first1=David A |url=http://www.lpi.usra.edu/science/kring/epo_web/impact_cratering/intro/ |title=Terrestrial Impact Cratering and Its Environmental Effects |publisher=Lunar and Planetary Laboratory |accessdate=22 March 2007}}&lt;/ref&gt;

&lt;ref name=kuhn2006&gt;{{cite book |first1=Betsy |last1=Kuhn |date=2006 |title=The race for space: the United States and the Soviet Union compete for the new frontier |page=34 |publisher=Twenty-First Century Books |isbn=0-8225-5984-6}}&lt;/ref&gt;

&lt;ref name=&quot;Lambin2011&quot;&gt;{{Cite journal |first1=Eric F. |last1=Lambin |first2=Patrick |last2=Meyfroidt |title=Global land use change, economic globalization, and the looming land scarcity |work=Proceedings of the National Academy of Sciences of the United States of America |publisher=National Academy of Sciences |pages=346572 |volume=108 |issue=9 |date=1 March 2011 |url=http://www.pnas.org/content/108/9/3465.full.pdf |accessdate=30 August 2014 |bibcode=2011PNAS..108.3465L |doi=10.1073/pnas.1100480108 |pmid=21321211 |pmc=3048112}} See Table 1.&lt;/ref&gt;

&lt;ref name=lancet365_9462_831&gt;{{cite journal |last1=Sharp |first1=David |title=Chimborazo and the old kilogram |journal=The Lancet |date=5 March 2005 |volume=365 |issue=9462 |pages=83132 |doi=10.1016/S0140-6736(05)71021-7 |pmid=15752514}}&lt;/ref&gt;

&lt;ref name=lang2003&gt;{{cite book |first1=Kenneth R. |last1=Lang |date=2003 |title=The Cambridge guide to the solar system |page=92 |publisher=Cambridge University Press |isbn=0-521-81306-9}}&lt;/ref&gt;

&lt;ref name=layers_earth&gt;{{cite web |author=Staff |url=http://volcano.oregonstate.edu/vwdocs/vwlessons/plate_tectonics/part1.html |archiveurl=https://www.webcitation.org/6DnLWg22n?url=http://volcano.oregonstate.edu/vwdocs/vwlessons/plate_tectonics/part1.html |archivedate=19 January 2013 |title=Layers of the Earth |publisher=Volcano World |accessdate=11 March 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=lin2006&gt;{{cite web |first1=Haosheng |last1=Lin |title=Animation of precession of moon orbit |work=Survey of Astronomy AST110-6 |date=2006 |publisher=University of Hawaii at Manoa |url=http://www.ifa.hawaii.edu/users/lin/ast110-6/applets/precession_of_moon_orbit.htm |accessdate=10 September 2010}}&lt;/ref&gt;

&lt;ref name=liungman2004&gt;{{cite book |first1=Carl G. |last1=Liungman |date=2004 |chapter=Group 29: Multi-axes symmetric, both soft and straight-lined, closed signs with crossing lines |title=Symbols&amp;nbsp; Encyclopedia of Western Signs and Ideograms |pages=28182 |publisher=Ionfox AB |location=New York |isbn=91-972705-0-4}}&lt;/ref&gt;

&lt;ref name=michon2006&gt;{{cite web |last1=Scott |first1=Michon |date=24 April 2006 |url=http://earthobservatory.nasa.gov/Study/HeatBucket/ |title=Earth's Big heat Bucket |publisher=NASA Earth Observatory |accessdate=14 March 2007}}&lt;/ref&gt;

&lt;ref name=milbert_smith96&gt;{{cite web |last1=Milbert |first1=D. G. |last2=Smith |first2=D. A |url=http://www.ngs.noaa.gov/PUBS_LIB/gislis96.html |title=Converting GPS Height into NAVD88 Elevation with the GEOID96 Geoid Height Model |publisher=National Geodetic Survey, NOAA |accessdate=7 March 2007}}&lt;/ref&gt;

&lt;ref name=&quot;Ramdohr&quot;&gt;{{cite book |last=Ramdohr |first1=Paul |url=http://www.sciencedirect.com/science/book/9780080116358 |title=The Ore Minerals and their Intergrowths |work=AKADEMIE-VERLAG GmbH |publisher=Elsevier Ltd. |year=1969 |isbn=978-0-08-011635-8 |doi=10.1016/B978-0-08-011635-8.50004-8 |accessdate=29 April 2016}}&lt;/ref&gt;

&lt;ref name=&quot;moon_fact_sheet&quot;&gt;{{cite web |last1=Williams |first1=David R. |date=1 September 2004 |url=http://nssdc.gsfc.nasa.gov/planetary/factsheet/moonfact.html |title=Moon Fact Sheet |publisher=NASA |accessdate=21 March 2007}}&lt;/ref&gt;

&lt;ref name=&quot;moran2005&quot;&gt;{{cite web |last1=Moran |first1=Joseph M. |date=2005 |url=http://www.nasa.gov/worldbook/weather_worldbook.html |archiveurl=https://www.webcitation.org/6F17zeqFy?url=http://www.nasa.gov/worldbook/weather_worldbook.html |archivedate=10 March 2013 |title=Weather |work=World Book Online Reference Center |publisher=NASA/World Book, Inc |accessdate=17 March 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=mullen2002&gt;{{cite web |last1=Mullen |first1=Leslie |date=11 June 2002 |url=http://www.astrobio.net/news/article223.html |archiveurl=https://www.webcitation.org/5QVie9nX9?url=http://www.astrobio.net/news/article223.html |archivedate=22 July 2007 |title=Salt of the Early Earth |publisher=NASA Astrobiology Magazine |accessdate=14 March 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=nasa_rg_iss2007&gt;{{cite web |date=16 January 2007 |url=http://www.nasa.gov/mission_pages/station/news/ISS_Reference_Guide.html |title=Reference Guide to the International Space Station |publisher=NASA |accessdate=23 December 2008}}&lt;/ref&gt;
&lt;!---
&lt;ref name=nathist106_2_16&gt;{{cite journal |last1=Gould |first1=S. J. |date=1997 |title=Nonoverlapping magisteria |journal=Natural History |volume=106 |issue=2 |pages=1622 |url=http://www.jbburnett.com/resources/gould_nonoverlapping.pdf |accessdate=28 April 2008 |format=PDF}}&lt;/ref&gt;
---&gt;
&lt;ref name=nasa20051201&gt;{{cite web |author=Astrophysicist team |date=1 December 2005 |url=http://imagine.gsfc.nasa.gov/docs/ask_astro/answers/030827a.html |title=Earth's location in the Milky Way |publisher=NASA |accessdate=11 June 2008}}&lt;/ref&gt;

&lt;ref name=natsci_oxy4&gt;{{cite web |last1=Morris |first1=Ron M |url=http://seis.natsci.csulb.edu/rmorris/oxy/oxy4.html |title=Oceanic Processes |publisher=NASA Astrobiology Magazine |accessdate=14 March 2007 |deadurl=yes |archiveurl=https://web.archive.org/web/20090415082741/http://seis.natsci.csulb.edu/rmorris/oxy/oxy4.html |archivedate=15 April 2009}}&lt;/ref&gt;

&lt;ref name=nature410_6830_773&gt;{{cite journal |last1=Murray |first1=N. |last2=Holman |first2=M. |title=The role of chaotic resonances in the solar system |journal=Nature |date=2001 |volume=410 |issue=6830 |pages=77379 |arxiv=astro-ph/0111602 |doi=10.1038/35071000 |pmid=11298438}}&lt;/ref&gt;

&lt;ref name=nature412_708&gt;{{cite journal |last1=Canup |first1=R. |last2=Asphaug |first2=E. |title=Origin of the Moon in a giant impact near the end of the Earth's formation |journal=Nature |volume=412 |pages=70812 |date=2001 |doi=10.1038/35089010 |pmid=11507633 |issue=6848 |bibcode=2001Natur.412..708C}}&lt;/ref&gt;

&lt;ref name=nature418_6901_949&gt;{{cite journal |last1=Yin |first1=Qingzhu |title=A short timescale for terrestrial planet formation from Hf-W chronometry of meteorites |journal=Nature |date=2002 |volume=418 |issue=6901 |pages=94952 |doi=10.1038/nature00995 |pmid=12198540 |last2=Jacobsen |first2=S. B. |last3=Yamashita |first3=K. |last4=Blichert-Toft |first4=J. |last5=Tlouk |first5=P. |last6=Albarde |first6=F. |bibcode=2002Natur.418..949Y}}&lt;/ref&gt;

&lt;ref name=&quot;ngdc2006&quot;&gt;{{cite web |last1=Sandwell |first1=D. T. |last2=Smith |first2=W. H. F. |date=7 July 2006 |url=http://www.ngdc.noaa.gov/mgg/bathymetry/predicted/explore.HTML |title=Exploring the Ocean Basins with Satellite Altimeter Data |publisher=NOAA/NGDC |accessdate=21 April 2007}}&lt;/ref&gt;

&lt;ref name=&quot;NIST2008&quot;&gt;{{Cite book |url=http://physics.nist.gov/Pubs/SP330/sp330.pdf |title=The international system of units (SI) |publisher=[[United States Department of Commerce]], [[National Institute of Standards and Technology|NIST]] Special Publication 330 |edition=2008 |page=52}}&lt;/ref&gt;

&lt;ref name=noaa20070307&gt;{{cite web |display-authors=1 |last1=Mueller |first1=R. D. |last2=Roest |first2=W. R. |last3=Royer |first3=J.-Y. |last4=Gahagan |first4=L. M. |last5=Sclater |first5=J. G. |date=7 March 2007 |url=http://www.ngdc.noaa.gov/mgg/fliers/96mgg04.html |title=Age of the Ocean Floor Poster |publisher=NOAA |accessdate=14 March 2007}}&lt;/ref&gt;

&lt;ref name=ocean23_2_112&gt;{{Cite journal |last1=Charette |first1=Matthew A. |last2=Smith |first2=Walter H. F. |title=The Volume of Earth's Ocean |journal=Oceanography |volume=23 |issue=2 |pages=11214 |date=June 2010 |url=http://www.tos.org/oceanography/archive/23-2_charette.pdf |archiveurl=https://www.webcitation.org/6IZIkxZNa?url=http://www.tos.org/oceanography/archive/23-2_charette.pdf |archivedate=2 August 2013 |accessdate=6 June 2013 |doi=10.5670/oceanog.2010.51 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=physorg20100304&gt;{{cite news |author=Staff |title=Oldest measurement of Earth's magnetic field reveals battle between Sun and Earth for our atmosphere |date=4 March 2010 |work=Physorg.news |url=http://www.physorg.com/news186922627.html |accessdate=27 March 2010}}&lt;/ref&gt;

&lt;ref name=&quot;Pidwirny 2006_8&quot;&gt;{{cite journal |last1=Pidwirny |first1=Michael |date=2 February 2006 |title=Surface area of our planet covered by oceans and continents.(Table 8o-1) |publisher=University of British Columbia, Okanagan |url=http://www.physicalgeography.net/fundamentals/8o.html |accessdate=26 November 2007}}&lt;/ref&gt;

&lt;ref name=&quot;Pidwirny2006_7&quot;&gt;{{cite web |last1=Pidwirny |first1=Michael |date=2006 |url=http://www.physicalgeography.net/fundamentals/7h.html |title=Fundamentals of Physical Geography (2nd Edition) |publisher=PhysicalGeography.net |accessdate=19 March 2007}}&lt;/ref&gt;

&lt;ref name=pnas1_24_9576&gt;{{cite journal |last1=Li |first1=King-Fai |last2=Pahlevan |first2=Kaveh |last3=Kirschvink |first3=Joseph L. |last4=Yung |first4=Yuk L. |date=2009 |title=Atmospheric pressure as a natural climate regulator for a terrestrial planet with a biosphere |journal=Proceedings of the National Academy of Sciences |volume=106 |issue=24 |pages=957679 |url=http://www.gps.caltech.edu/~kfl/paper/Li_PNAS2009.pdf |accessdate=19 July 2009 |doi=10.1073/pnas.0809436106 |pmid=19487662 |pmc=2701016 |bibcode=2009PNAS..106.9576L}}&lt;/ref&gt;

&lt;ref name=pnas71_12_6973&gt;{{cite journal |last1=Morgan |first1=J. W. |last2=Anders |first2=E. |title=Chemical composition of Earth, Venus, and Mercury |journal=Proceedings of the National Academy of Sciences |date=1980 |volume=77 |issue=12 |pages=697377 |doi=10.1073/pnas.77.12.6973 |pmid=16592930 |pmc=350422 |bibcode=1980PNAS...77.6973M}}&lt;/ref&gt;

&lt;ref name=pnas76_9_4192&gt;{{cite journal |last1=Jordan |first1=T. H. |title=Structural geology of the Earth's interior |journal=Proceedings of the National Academy of Sciences of the United States of America |date=1979 |volume=76 |issue=9 |pages=41924200 |doi=10.1073/pnas.76.9.4192 |pmid=16592703 |pmc=411539 |bibcode=1979PNAS...76.4192J}}&lt;/ref&gt;

&lt;ref name=podp2000&gt;{{cite web |last1=Meschede |first1=Martin |last2=Barckhausen |first2=Udo |date=20 November 2000 |url=http://www-odp.tamu.edu/publications/170_SR/chap_07/chap_07.htm |title=Plate Tectonic Evolution of the Cocos-Nazca Spreading Center |work=Proceedings of the Ocean Drilling Program |publisher=Texas A&amp;M University |accessdate=2 April 2007}}&lt;/ref&gt;

&lt;ref name=prb2007&gt;{{cite web |author=Staff |date=2007 |url=http://www.prb.org/Educators/TeachersGuides/HumanPopulation/PopulationGrowth/QuestionAnswer.aspx |archiveurl=https://www.webcitation.org/6EKxj3SWs?url=http://www.prb.org/Educators/TeachersGuides/HumanPopulation/PopulationGrowth/QuestionAnswer.aspx |archivedate=10 February 2013 |title=Human Population: Fundamentals of Growth: Growth |publisher=Population Reference Bureau |accessdate=31 March 2007 |deadurl=yes |df=dmy }}&lt;/ref&gt;

&lt;ref name=ps20_5_16&gt;{{cite journal |last1=Senne |first1=Joseph H. |title=Did Edmund Hillary Climb the Wrong Mountain |url=http://archives.profsurv.com/magazine/article.aspx?i=589 |journal=Professional Surveyor |date=2000 |volume=20 |issue=5 |pages=1621}}&lt;/ref&gt;

&lt;ref name=psc&gt;{{cite web|author=Staff |url=http://www.lakepowell.net/sciencecenter/paleoclimate.htm |title=Paleoclimatology&amp;nbsp; The Study of Ancient Climates |publisher=Page Paleontology Science Center |accessdate=2 March 2007 |deadurl=yes |archiveurl=https://web.archive.org/web/20070304002646/http://www.lakepowell.net/sciencecenter/paleoclimate.htm |archivedate=4 March 2007 |df= }}&lt;/ref&gt;

&lt;ref name=ptrsl360_1795_1227&gt;{{cite journal |last1=Alf |first1=D. |last2=Gillan |first2=M. J. |last3=Vocadlo |first3=L. |last4=Brodholt |first4=J. |last5=Price |first5=G. D. |title=The ''ab initio'' simulation of the Earth's core |journal=Philosophical Transactions of the Royal Society |date=2002 |volume=360 |issue=1795 |pages=122744 |url=http://chianti.geol.ucl.ac.uk/~dario/pubblicazioni/PTRSA2002.pdf |format=PDF |accessdate=28 February 2007 |doi=10.1098/rsta.2002.0992 |bibcode=2002RSPTA.360.1227A}}&lt;/ref&gt;

&lt;ref name=rahmstorf2003&gt;{{cite web |first1=Stefan |last1=Rahmstorf |date=2003 |url=http://www.pik-potsdam.de/~stefan/thc_fact_sheet.html |title=The Thermohaline Ocean Circulation |publisher=Potsdam Institute for Climate Impact Research |accessdate=21 April 2007}}&lt;/ref&gt;

&lt;ref name=reilly20091022&gt;{{cite news |first1=Michael |last1=Reilly |date=22 October 2009 |title=Controversial Moon Origin Theory Rewrites History |url=http://news.discovery.com/space/moon-earth-formation.html |archiveurl=https://web.archive.org/web/20100109042800/http://news.discovery.com/space/moon-earth-formation.html |archivedate=9 January 2010 |accessdate=30 January 2010}}&lt;/ref&gt;

&lt;ref name=rg6_175&gt;{{cite journal |last1=Armstrong |first1=R. L. |date=1968 |title=A model for the evolution of strontium and lead isotopes in a dynamic earth |journal=Reviews of Geophysics |volume=6 |issue=2 |pages=17599 |doi=10.1029/RG006i002p00175 |bibcode=1968RvGSP...6..175A}}&lt;/ref&gt;

&lt;ref name=robertson2001&gt;{{cite web |last1=Robertson |first1=Eugene C. |date=26 July 2001 |url=http://pubs.usgs.gov/gip/interior/ |title=The Interior of the Earth |publisher=USGS |accessdate=24 March 2007}}&lt;/ref&gt;

&lt;ref name=russell1997&gt;{{cite web |last1=Russell |first1=Jeffrey B |url=http://www.asa3.org/ASA/topics/history/1997Russell.html |title=The Myth of the Flat Earth |publisher=American Scientific Affiliation |accessdate=14 March 2007}}; but see also [[Cosmas Indicopleustes]].&lt;/ref&gt;

&lt;ref name=sa282_6_90&gt;{{cite journal |last1=Doolittle |first1=W. Ford |last2=Worm |first2=Boris |url=http://shiva.msu.montana.edu/courses/mb437_537_2005_fall/docs/uprooting.pdf |archiveurl=https://www.webcitation.org/5w9oPfm4a?url=http://shiva.msu.montana.edu/courses/mb437_537_2005_fall/docs/uprooting.pdf |archivedate=31 January 2011 |title=Uprooting the tree of life |journal=Scientific American |date=February 2000 |volume=282 |issue=6 |pages=9095 |doi=10.1038/scientificamerican0200-90 |pmid=10710791 |deadurl=yes |df=dmy |bibcode = 2000SciAm.282b..90D }}&lt;/ref&gt;

&lt;ref name=sadava_heller2006&gt;{{cite book |last1=Sadava |first1=David E. |last2=Heller |first2=H. Craig |last3=Orians |first3=Gordon H. |title=Life, the Science of Biology |publisher=MacMillan |date=2006 |edition=8th |page=1114 |isbn=0-7167-7671-5}}&lt;/ref&gt;

&lt;ref name=sample2005&gt;{{cite web |first1=Sharron |last1=Sample |date=21 June 2005 |url=http://science.hq.nasa.gov/oceans/physical/SST.html |title=Sea Surface Temperature |publisher=NASA |accessdate=21 April 2007}}&lt;/ref&gt;

&lt;ref name=sanders20031210&gt;{{cite news |first1=Robert |last1=Sanders |title=Radioactive potassium may be major heat source in Earth's core |publisher=UC Berkeley News |date=10 December 2003 |url=http://www.berkeley.edu/news/media/releases/2003/12/10_heat.shtml |accessdate=28 February 2007}}&lt;/ref&gt;

&lt;ref name=sci215_4539_1501&gt;{{cite journal |last1=Raup |first1=D. M. |last2=Sepkoski Jr |first2=J. J. |title=Mass Extinctions in the Marine Fossil Record |journal=Science |date=1982 |volume=215 |issue=4539 |pages=150103 |bibcode=1982Sci...215.1501R |doi=10.1126/science.215.4539.1501 |pmid=17788674}}&lt;/ref&gt;

&lt;ref name=sci293_5531_839&gt;{{cite journal |title=Biogenic Methane, Hydrogen Escape, and the Irreversible Oxidation of Early Earth |last1=Catling |first1=David C. |last2=Zahnle |first2=Kevin J. |last3=McKay |first3=Christopher P. |journal=Science |volume=293 |issue=5531 |pages=83943 |url=http://www.sciencemag.org/cgi/content/full/293/5531/839 |doi=10.1126/science.1061976 |date=2001 |pmid=11486082 |bibcode=2001Sci...293..839C}}&lt;/ref&gt;

&lt;ref name=science164_1229&gt;{{cite journal |last1=Hurley |first1=P. M. |last2=Rand |first2=J. R. |date=June 1969 |title=Pre-drift continental nuclei |journal=Science |volume=164 |pages=122942 |doi=10.1126/science.164.3885.1229 |pmid=17772560 |issue=3885 |bibcode=1969Sci...164.1229H}}&lt;/ref&gt;

&lt;ref name=science_241_4872_1441&gt;{{cite journal |last1=May |first1=Robert M. |title=How many species are there on earth? |journal=Science |date=1988 |volume=241 |issue=4872 |pages=144149 |bibcode=1988Sci...241.1441M |doi=10.1126/science.241.4872.1441 |pmid=17790039}}&lt;/ref&gt;

&lt;ref name=science246_4926_103&gt;{{cite journal |last1=Richards |first1=M. A. |last2=Duncan |first2=R. A. |last3=Courtillot |first3=V. E. |title=Flood Basalts and Hot-Spot Tracks: Plume Heads and Tails |journal=Science |date=1989 |volume=246 |issue=4926 |pages=10307 |bibcode=1989Sci...246..103R |doi=10.1126/science.246.4926.103 |pmid=17837768}}&lt;/ref&gt;

&lt;ref name=science299_5607_673&gt;{{cite journal |last1=Rona |first1=Peter A. |title=Resources of the Sea Floor |journal=Science |date=2003 |volume=299 |issue=5607 |pages=67374 |url=http://www.sciencemag.org/cgi/content/full/299/5607/673?ijkey=AHVbRrqUsmdHY&amp;keytype=ref&amp;siteid=sci |accessdate=4 February 2007 |doi=10.1126/science.1080679 |pmid=12560541}}&lt;/ref&gt;

&lt;ref name=science309_5739_1313&gt;{{cite journal |last1=Kerr |first1=Richard A. |title=Earth's Inner Core Is Running a Tad Faster Than the Rest of the Planet |journal=Science |date=26 September 2005 |volume=309 |issue=5739 |page=1313 |doi=10.1126/science.309.5739.1313a |pmid=16123276}}&lt;/ref&gt;

&lt;ref name=science310_5754_1671&gt;{{cite journal |last1=Kleine |first1=Thorsten |last2=Palme |first2=Herbert |last3=Mezger |first3=Klaus |last4=Halliday |first4=Alex N. |title=Hf-W Chronometry of Lunar Metals and the Age and Early Differentiation of the Moon |journal=Science |volume=310 |issue=5754 |date=24 November 2005 |pages=167174 |doi=10.1126/science.1118842 |pmid=16308422 |bibcode=2005Sci...310.1671K}}&lt;/ref&gt;

&lt;ref name=science310_5756_1947&gt;{{cite journal |doi=10.1126/science.1117926 |date=December 2005 |display-authors=1 |last1=Harrison |first1=T. |last2=Blichert-Toft |first2=J. |last3=Mller |first3=W. |last4=Albarede |first4=F. |last5=Holden |first5=P. |last6=Mojzsis |first6=S. |title=Heterogeneous Hadean hafnium: evidence of continental crust at 4.4 to 4.5 ga |volume=310 |issue=5756 |pages=194750 |pmid=16293721 |journal=Science |bibcode=2005Sci...310.1947H}}&lt;/ref&gt;

&lt;ref name=sciweek2004&gt;{{cite web|author=Staff |date=2004 |url=http://scienceweek.com/2004/rmps-23.htm |archiveurl=https://web.archive.org/web/20070713053611/http://scienceweek.com/2004/rmps-23.htm |title=Stratosphere and Weather; Discovery of the Stratosphere |publisher=Science Week |accessdate=14 March 2007 |archivedate=13 July 2007 |deadurl=yes |df= }}&lt;/ref&gt;
&lt;!---
&lt;ref name=sec_nap2008&gt;{{cite book |author=National Academy of Sciences, Institute of Medicine |title=Science, Evolution, and Creationism |url=http://books.nap.edu/openbook.php?record_id=11876&amp;page=R1 |date=2008 |publisher=National Academies Press |location=Washington, D.C |isbn=0-309-10586-2 |accessdate=13 March 2011}}&lt;/ref&gt;
---&gt;
&lt;ref name=seidelmann1992&gt;{{cite book |last1=Seidelmann |first1=P. Kenneth |date=1992 |title=Explanatory Supplement to the Astronomical Almanac |page=48 |publisher=University Science Books |location=Mill Valley, CA |isbn=0-935702-68-7}}&lt;/ref&gt;

&lt;ref name=seligman2008&gt;{{cite web |first1=Courtney |last1=Seligman |date=2008 |url=http://cseligman.com/text/planets/innerstructure.htm |title=The Structure of the Terrestrial Planets |work=Online Astronomy eText Table of Contents |publisher=cseligman.com |accessdate=28 February 2008}}&lt;/ref&gt;

&lt;ref name=shayler_vis2005&gt;{{cite book |first1=David |last1=Shayler |first2=Bert |last2=Vis |date=2005 |title=Russia's Cosmonauts: Inside the Yuri Gagarin Training Center |publisher=Birkhuser |isbn=0-387-21894-7}}&lt;/ref&gt;

&lt;ref name=stern2005&gt;{{cite web |last1=Stern |first1=David P. |date=8 July 2005 |url=http://www-spof.gsfc.nasa.gov/Education/wmap.html |title=Exploration of the Earth's Magnetosphere |publisher=NASA |accessdate=21 March 2007}}&lt;/ref&gt;

&lt;ref name=&quot;sun_future&quot;&gt;{{cite journal |last1=Sackmann |first1=I.-J. |last2=Boothroyd |first2=A. I. |last3=Kraemer |first3=K. E. |title=Our Sun. III. Present and Future |journal=Astrophysical Journal |date=1993 |volume=418 |pages=45768 |doi=10.1086/173407 |bibcode=1993ApJ...418..457S}}&lt;/ref&gt;

&lt;ref name=&quot;sun_future_schroder&quot;&gt;{{cite journal |first1=K.-P. |last1=Schrder |last2=Connon Smith |first2=Robert |date=2008 |title=Distant future of the Sun and Earth revisited |doi=10.1111/j.1365-2966.2008.13022.x |journal=[[Monthly Notices of the Royal Astronomical Society]] |arxiv=0801.4031 |volume=386 |issue=1 |pages=15563 |bibcode=2008MNRAS.386..155S}}&lt;br /&gt;See also {{cite news |first=Jason |last=Palmer |url=https://www.newscientist.com/article/dn13369 |archiveurl=https://web.archive.org/web/20120415105707/http://www.newscientist.com/article/dn13369 |archivedate=15 April 2012 |title=Hope dims that Earth will survive Sun's death |date=22 February 2008 |work=NewScientist.com news service |accessdate=24 March 2008}}&lt;/ref&gt;

&lt;ref name=tall_tales&gt;{{cite web |url=http://www.abc.net.au/science/k2/moments/s1086384.htm |title=Tall Tales about Highest Peaks |publisher=Australian Broadcasting Corporation |accessdate=29 December 2008}}&lt;/ref&gt;

&lt;ref name=tanimoto_ahrens1995&gt;{{cite book |last1=Tanimoto |first1=Toshiro |editor=Thomas J. Ahrens |date=1995 |chapter=Crustal Structure of the Earth |title=Global Earth Physics: A Handbook of Physical Constants |publisher=American Geophysical Union |location=Washington, DC |isbn=0-87590-851-9 |chapter-url=http://www.agu.org/reference/gephys/15_tanimoto.pdf |archiveurl=https://web.archive.org/web/20061016194153/http://www.agu.org/reference/gephys/15_tanimoto.pdf |archivedate=16 October 2006 |chapter-format=PDF |accessdate=3 February 2007}}&lt;/ref&gt;

&lt;ref name=tp322_19&gt;{{cite journal |doi=10.1016/S0040-1951(00)00055-X |title=Early formation and long-term stability of continents resulting from decompression melting in a convecting mantle |date=2000 |last1=De Smet |first1=J. |journal=Tectonophysics |volume=322 |issue=12 |pages=1933 |bibcode=2000Tectp.322...19D |last2=Van Den Berg |first2=A.P. |last3=Vlaar |first3=N.J.}}&lt;/ref&gt;

&lt;ref name=&quot;T&amp;S 137&quot;&gt;{{cite book |last1=Turcotte |first1=D. L. |last2=Schubert |first2=G. |title=Geodynamics |publisher=Cambridge University Press |location=Cambridge, England, UK |date=2002 |edition=2 |page=137 |chapter=4 |isbn=978-0-521-66624-4}}&lt;/ref&gt;

&lt;ref name=&quot;turcotte&quot;&gt;{{cite book |last1=Turcotte |first1=D. L. |last2=Schubert |first2=G. |title=Geodynamics |publisher=Cambridge University Press |location=Cambridge, England, UK |date=2002 |edition=2 |pages=13637 |chapter=4 |isbn=978-0-521-66624-4}}&lt;/ref&gt;

&lt;ref name=&quot;Turner1990&quot;&gt;{{cite book |first1=B. L., II |last1=Turner |title=The Earth As Transformed by Human Action: Global And Regional Changes in the Biosphere Over the Past 300 Years |publisher=CUP Archive |page=164 |date=1990 |isbn=0521363578 |url=https://books.google.com/books?id=7GI0AAAAIAAJ&amp;pg=PA164 |postscript=.}}&lt;/ref&gt;

&lt;ref name=ucs&gt;{{cite web |title=UCS Satellite Database |date=11 August 2016 |work=Nuclear Weapons &amp; Global Security |publisher=[[Union of Concerned Scientists]] |url=http://www.ucsusa.org/nuclear_weapons_and_global_security/space_weapons/technical_issues/ucs-satellite-database.html |accessdate=10 October 2016}}&lt;/ref&gt;

&lt;ref name=un_int_law&gt;{{cite web |author=Staff |url=https://www.un.org/law/ |title=International Law |publisher=United Nations |accessdate=27 March 2007 |archiveurl=https://web.archive.org/web/20081231055149/http://www.un.org/law/ |archivedate=31 December 2008 }}&lt;/ref&gt;

&lt;ref name=un2006&gt;{{cite web |author=Staff |url=https://www.un.org/esa/population/publications/wpp2006/wpp2006.htm |archiveurl=https://web.archive.org/web/20090905200753/http://www.un.org/esa/population/publications/wpp2006/wpp2006.htm |archivedate=5 September 2009 |title=World Population Prospects: The 2006 Revision |publisher=United Nations |accessdate=7 March 2007}}&lt;/ref&gt;

&lt;ref name=un20070202&gt;{{cite web |author=Staff |date=2 February 2007 |url=https://www.un.org/apps/news/story.asp?NewsID=21429&amp;Cr=climate&amp;Cr1=change |title=Evidence is now 'unequivocal' that humans are causing global warming&amp;nbsp; UN report |publisher=United Nations |accessdate=7 March 2007 |archiveurl=https://web.archive.org/web/20081221031717/http://www.un.org/apps/news/story.asp?NewsID=21429&amp;Cr=climate&amp;Cr1=change |archivedate=21 December 2008}}&lt;/ref&gt;

&lt;ref name=uncharter&gt;{{cite web |url=https://www.un.org/aboutun/charter/ |title=U.N. Charter Index |publisher=United Nations |accessdate=23 December 2008 |archiveurl=https://web.archive.org/web/20090220011242/http://www.un.org/aboutun/charter/ |archivedate=20 February 2009}}&lt;/ref&gt;

&lt;ref name=usno&gt;{{cite web |title=Selected Astronomical Constants, 2011 |work=The Astronomical Almanac |url=http://asa.usno.navy.mil/SecK/2011/Astronomical_Constants_2011.txt |archiveurl=https://web.archive.org/web/20130826043456/http://asa.usno.navy.mil/SecK/2011/Astronomical_Constants_2011.txt |archivedate=26 August 2013 |accessdate=25 February 2011}}&lt;/ref&gt;

&lt;ref name=USNO_TSD&gt;{{cite web |title=Leap seconds |publisher=Time Service Department, USNO |url=http://tycho.usno.navy.mil/leapsec.html |archiveurl=https://web.archive.org/web/20150312003149/http://tycho.usno.navy.mil/leapsec.html |accessdate=23 September 2008 |archivedate=12 March 2015}}&lt;/ref&gt;

&lt;ref name=vazquez_etal2006&gt;{{cite web |last1=Vzquez |first1=M. |first2=P. Montas |last2=Rodrguez |last3=Palle |first3=E. |date=2006 |url=http://www.iac.es/folleto/research/preprints/files/PP06024.pdf |title=The Earth as an Object of Astrophysical Interest in the Search for Extrasolar Planets |publisher=Instituto de Astrofsica de Canarias |accessdate=21 March 2007 |format=PDF}}&lt;/ref&gt;

&lt;ref name=VSOP87&gt;{{cite journal |title=Numerical expressions for precession formulae and mean elements for the Moon and planets |journal=Astronomy and Astrophysics |volume=282 |issue=2 |pages=66383 |date=February 1994 |last1=Simon |first1=J.L. |last2=Bretagnon |first2=P. |last3=Chapront |first3=J. |last4=Chapront-Touz |first4=M. |last5=Francou |first5=G. |last6=Laskar |first6=J. |bibcode=1994A&amp;A...282..663S}}&lt;/ref&gt;

&lt;ref name=wade2008&gt;{{cite web |last1=Wade |first1=Mark |date=30 June 2008 |url=http://www.astronautix.com/articles/aststics.htm |accessdate=23 December 2008 |title=Astronaut Statistics |publisher=Encyclopedia Astronautica}}&lt;/ref&gt;

&lt;ref name=walsh2008&gt;{{cite book |first1=Patrick J. |last=Walsh |title=Oceans and human health: risks and remedies from the seas |page=212 |editor1=Sharon L. Smith |editor2=Lora E. Fleming |publisher=Academic Press, 2008 |isbn=0-12-372584-4 |url=https://books.google.com/books?id=c6J5hlcjFaAC&amp;pg=PA212 |date=16 May 1997}}&lt;/ref&gt;

&lt;ref name=ward_brownlee2002&gt;{{cite book |last1=Ward |first1=Peter D. |last2=Brownlee |first2=Donald |date=2002 |title=The Life and Death of Planet Earth: How the New Science of Astrobiology Charts the Ultimate Fate of Our World |publisher=Times Books, Henry Holt and Company |location=New York |isbn=0-8050-6781-7}}&lt;/ref&gt;

&lt;ref name=&quot;watersource&quot;&gt;{{cite journal |display-authors=1 |last1=Morbidelli |first1=A. |last2=Chambers |first2=J. |last3=Lunine |first3=J. I. |last4=Petit |first4=J. M. |last5=Robert |first5=F. |last6=Valsecchi |first6=G. B. |last7=Cyr |first7=K. E. |title=Source regions and time scales for the delivery of water to Earth |journal=Meteoritics &amp; Planetary Science |date=2000 |volume=35 |issue=6 |pages=130920 |bibcode=2000M&amp;PS...35.1309M |doi=10.1111/j.1945-5100.2000.tb01518.x}}&lt;/ref&gt;

&lt;ref name=wekn_bulakh2004&gt;{{cite book |last1=Wenk |first1=Hans-Rudolf |last2=Bulakh |first2=Andre Glebovich |title=Minerals: their constitution and origin |page=359 |publisher=Cambridge University Press |date=2004 |isbn=0-521-52958-1}}&lt;/ref&gt;

&lt;ref name=&quot;WGS-84-2&quot;&gt;{{cite web|first1=Sigurd |last1=Humerfelt |date=26 October 2010 |title=How WGS 84 defines Earth |url=http://home.online.no/~sigurdhu/WGS84_Eng.html |accessdate=29 April 2011 |deadurl=yes |archiveurl=https://web.archive.org/web/20110424104419/http://home.online.no/~sigurdhu/WGS84_Eng.html |archivedate=24 April 2011 |df= }}&lt;/ref&gt;

&lt;ref name=whitehouse20021021&gt;{{cite news |first1=David |last1=Whitehouse |title=Earth's little brother found |publisher=BBC News |date=21 October 2002 |url=http://news.bbc.co.uk/1/hi/sci/tech/2347663.stm |accessdate=31 March 2007}}&lt;/ref&gt;

&lt;ref name=&quot;Williams1994&quot;&gt;{{cite journal |last1=Williams |first1=James G. |title=Contributions to the Earth's obliquity rate, precession, and nutation |journal=The Astronomical Journal |volume=108 |date=1994 |page=711 |issn=0004-6256 |doi=10.1086/117108 |bibcode=1994AJ....108..711W}}&lt;/ref&gt;

&lt;ref name=williams20051230&gt;{{cite web |last1=Williams |first1=Jack |date=20 December 2005 |url=https://www.usatoday.com/weather/tg/wseason/wseason.htm |title=Earth's tilt creates seasons |publisher=USAToday |accessdate=17 March 2007}}&lt;/ref&gt;

&lt;ref name=williams_santosh2004&gt;{{cite book |first1=John James William |last1=Rogers |last2=Santosh |first2=M. |date=2004 |title=Continents and Supercontinents |page=48 |publisher=Oxford University Press US |isbn=0-19-516589-6}}&lt;/ref&gt;

&lt;ref name=yoder1995&gt;{{cite book |last1=Yoder |first1=Charles F. |editor=T. J. Ahrens |date=1995 |chapter=Astrometric and Geodetic Properties of Earth and the Solar System |chapter-url=https://web.archive.org/web/20090707224616/http://www.agu.org/reference/gephys/4_yoder.pdf |chapter-format=PDF |title=Global Earth Physics: A Handbook of Physical Constants |publisher=American Geophysical Union |location=Washington |isbn=0-87590-851-9 |page=8 |deadurl=bot: unknown |archiveurl=https://web.archive.org/web/20090707224616/http://www.agu.org/reference/gephys/4_yoder.pdf |archivedate=7 July 2009 |df=dmy-all |url=http://www.agu.org/reference/gephys/4_yoder.pdf }}&lt;/ref&gt;

&lt;ref name=zeilik1998&gt;{{cite book |last1=Zeilik |first1=M. |last2=Gregory |first2=S. A. |title=Introductory Astronomy &amp; Astrophysics |edition=4th |page=56 |publisher=Saunders College Publishing |isbn=0-03-006228-4 |date=1998}}&lt;/ref&gt;

&lt;ref name=&quot;Luzum2011&quot;&gt;{{cite journal |last1=Luzum |first1=Brian |last2=Capitaine |first2=Nicole |last3=Fienga |first3=Agns |last4=Folkner |first4=William |last5=Fukushima |first5=Toshio |last6=Hilton |first6=James |last7=Hohenkerk |first7=Catherine |last8=Krasinsky |first8=George |last9=Petit |first9=Grard |last10=Pitjeva |first10=Elena |last11=Soffel |first11=Michael |last12=Wallace |first12=Patrick |display-authors=5 |title=The IAU 2009 system of astronomical constants: The report of the IAU working group on numerical standards for Fundamental Astronomy |journal=Celestial Mechanics and Dynamical Astronomy |volume=110 |issue=4 |date=August 2011 |pages=293304 |bibcode=2011CeMDA.110..293L |doi=10.1007/s10569-011-9352-4}}&lt;/ref&gt;

&lt;ref name=Narottam2008&gt;{{citation
 | title=Climate Change and International Politics
 | first1=Narottam | last1=Gaan
 | publisher=Gyan Publishing House
 | year=2008 | isbn=8178356414 | page=40
 | url=https://books.google.com/books?id=i4kASIoKym8C&amp;pg=PA40
 | postscript=. }}&lt;/ref&gt;
}}

==Further reading==
* {{cite book |first=Neil F. |last=Comins |date=2001 |title=Discovering the Essential Universe |url=https://books.google.com/books?id=xwjlZjFNFlAC#v=onepage&amp;q&amp;f=false |edition=2nd |location=New York |publisher=W. H. Freeman |bibcode=2003deu..book.....C |isbn=0-7167-5804-0 |oclc=52082611}}

==External links==
{{Sister project links |Earth |commons=Category:Earth}}
{{Spoken Wikipedia-4|2012-06-13|EARTH_-_WIKIPEDIA_SPOKEN_ARTICLE_(Part_01).ogg|EARTH_-_WIKIPEDIA_SPOKEN_ARTICLE_(Part_02).ogg|EARTH_-_WIKIPEDIA_SPOKEN_ARTICLE_(Part_03).ogg|EARTH_-_WIKIPEDIA_SPOKEN_ARTICLE_(Part_04).ogg}}
* [http://education.nationalgeographic.com/education/encyclopedia/earth/?ar_a=1 ''National Geographic'' encyclopedic entry about Earth]
* [http://solarsystem.nasa.gov/planets/profile.cfm?Object=Earth Earth&amp;nbsp; Profile]&amp;nbsp; [http://solarsystem.nasa.gov/ Solar System Exploration]&amp;nbsp; [[NASA]]
* [http://www.nasa.gov/centers/goddard/earthandsun/earthshape.html Earth&amp;nbsp; Climate Changes Cause Shape to Change]&amp;nbsp; [[NASA]]
* [http://www.usgs.gov/ United States Geological Survey]&amp;nbsp; [[United States Geological Survey|USGS]]
* [https://web.archive.org/web/20090430041323/http://eol.jsc.nasa.gov/Coll/weekly.htm Earth&amp;nbsp; Astronaut Photography Gateway]&amp;nbsp; [[NASA]]
* [http://earthobservatory.nasa.gov/ Earth Observatory]&amp;nbsp; [[NASA]]
* [http://www.astronomycast.com/stars/episode-51-earth/ Earth&amp;nbsp; Audio (29:28)&amp;nbsp; Cain/Gay&amp;nbsp; Astronomy Cast (2007)]
* Earth&amp;nbsp; Videos&amp;nbsp; International Space Station:
** [https://www.youtube.com/watch?v=74mhQyuyELQ Video (01:02)]&amp;nbsp; Earth (time-lapse)
** [https://www.youtube.com/watch?v=l6ahFFFQBZY Video (00:27)]&amp;nbsp; Earth and [[Aurora (astronomy)|Auroras]] (time-lapse)

{{Earth}}
{{Physical Earth}}
{{Navboxes
|title = Other articles related to Earth
|list  =
{{Solar System}}
{{Earth's location}}
{{Earth science}}
{{Nature nav}}
}}
{{Authority control}}

[[Category:Earth| ]]
[[Category:Habitable zone planets]]
[[Category:Planets of the Solar System]]
[[Category:Terrestrial planets]]</text>
      <sha1>7fk17y2jcg1wyg0c9b2ba8v0ntowl75</sha1>
    </revision>
  </page>
  <page>
    <title>Template:About</title>
    <ns>10</ns>
    <id>2468023</id>
    <revision>
      <id>719004975</id>
      <parentid>718032354</parentid>
      <timestamp>2016-05-07T00:02:43Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Major update: reimplemented in Lua (via [[Module:About]]) as tested in sandbox.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="90">&lt;includeonly&gt;{{#invoke:about|about}}&lt;/includeonly&gt;&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>sewwzp1otrriymoi2xy4csy1ag24qbn</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Anchor</title>
    <ns>10</ns>
    <id>2236346</id>
    <revision>
      <id>629642299</id>
      <parentid>586910254</parentid>
      <timestamp>2014-10-14T23:35:24Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>add {{{|safesubst:}}} per talk</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="157">{{{{{|safesubst:}}}#invoke:anchor|main}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>cjfgfxc6tpjgpyvzhnbfkngu6u3spzc</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ang icon</title>
    <ns>10</ns>
    <id>43481682</id>
    <revision>
      <id>788729653</id>
      <parentid>787543857</parentid>
      <timestamp>2017-07-03T03:39:59Z</timestamp>
      <contributor>
        <username>Zyxw</username>
        <id>473593</id>
      </contributor>
      <minor/>
      <comment>Convert unused 2nd parameter to comment. using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="183">{{Link language|ang}}&lt;!--Old English--&gt;&lt;noinclude&gt;
{{Documentation|content={{Link language/Notes|addendum=}}
&lt;!--template categories added by {{Link language/Notes}}--&gt;
}}&lt;/noinclude&gt;</text>
      <sha1>jmfdcnkfb4uaqr66ry19ubn64s6saxz</sha1>
    </revision>
  </page>
  <page>
    <title>Template:As of</title>
    <ns>10</ns>
    <id>16011254</id>
    <revision>
      <id>730881029</id>
      <parentid>702063689</parentid>
      <timestamp>2016-07-21T15:25:05Z</timestamp>
      <contributor>
        <username>GeoffreyT2000</username>
        <id>21491290</id>
      </contributor>
      <minor/>
      <comment>Replaced http with https.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2285">&lt;!--{{As of}} begin--&gt;&lt;includeonly&gt;&lt;!--

## param 1 is the year
## optional param 2 is the month
## optional param 3 is the day of the month
## optional named parameter alt=[text] is alternative display text (may include wiki markup)
## optional named parameter df=US produces American date format in displayed text
## optional named parameter lc=on gives lower-case-first output
## optional named parameter url=[URL] gives statement reference

## displayed text ([A/a]s of [Start date] by default)
--&gt;{{#if: {{{alt|}}} | {{{alt}}} | {{#if:{{{since|}}}|{{#ifeq: {{{lc}}} | {{{lc|}}} | s | S }}ince | {{#ifeq: {{{lc}}} | {{{lc|}}} | a | A }}s of}} {{#if:{{{pre|}}}|{{{pre|}}}}} {{#if: {{{3|}}} | {{#ifeq:{{lc:{{{df|}}}}}|us|{{MONTHNAME|{{{2}}}}} {{#expr:{{{3}}}}},|{{#expr:{{{3}}}}} {{MONTHNAME|{{{2}}}}} }} {{{1}}} | {{#if: {{{2|}}} | {{MONTHNAME|{{{2}}}}} }} {{{1}}} }}}}{{#if:{{{post|}}}|&lt;nowiki /&gt;{{{post}}}}}&lt;!--
#### That nowiki is required or, various characters (:, ;, #, and *} will be parsed as wikisyntax for list items.
## ref/update inline banner (hidden by default)
--&gt;&lt;sup class=&quot;plainlinks noprint asof-tag {{#if:{{{url|}}}|ref|update}}&quot; style=&quot;display:none;&quot;&gt;[{{#if:{{{url|}}}|{{{url}}} &amp;#91;ref&amp;#93;|{{fullurl:{{PAGENAME}}|action=edit}} &amp;#91;update&amp;#93;}}]&lt;/sup&gt;&lt;!--

## categorisation disabled outside main namespace
--&gt;{{DMCA|Articles containing potentially dated statements|from|&lt;!--

## temporal category for template (word method)
--&gt;{{#if: {{#ifexpr: {{{1}}} = 1 }} | {{#ifexpr: {{#time:Y|{{{1}}}}} &gt; 2004 | {{{1}}} | {{#ifexpr: {{#time:Y|{{{1}}}}} &gt; 1989 | {{#time:Y|{{{1}}}}} | before 1990 }}}} | &lt;!--

## temporal category for template (parameter method)
--&gt;{{#ifexpr: {{{1}}} &gt; 2004 | {{#if:{{{2|}}} | {{MONTHNAME|{{{2}}}}} }} {{{1}}} | {{#ifexpr:{{{1}}} &gt; 1989 | {{{1}}} | before 1990 }}}}}}|&lt;!--

## global category for template
--&gt;All articles containing potentially dated statements}}&lt;/includeonly&gt;&lt;!--{{As of}} end--&gt;&lt;noinclude&gt;&lt;!-- 

## dynamic example (as of today, self ref)

--&gt;As of {{Start date|{{CURRENTYEAR}}|{{CURRENTMONTH}}|{{CURRENTDAY}}|df=yes}}&lt;sup class=&quot;plainlinks&quot;&gt;[https://en.wikipedia.org/wiki/Template:As_of &amp;#91;ref&amp;#93;]&lt;/sup&gt;

{{documentation}}

&lt;!-- Add categories and inter-wikis to the /doc subpage, not here! --&gt; 

&lt;/noinclude&gt;</text>
      <sha1>o7ajhjtumunrs0yxbgsheg11xg88ule</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Authority control</title>
    <ns>10</ns>
    <id>23327809</id>
    <revision>
      <id>698202675</id>
      <parentid>698202329</parentid>
      <timestamp>2016-01-04T17:05:10Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>rm spurious period (added by module)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="998">{{#invoke:Authority control|authorityControl}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;&lt;!-- tracking categories to compare with Wikidata 
--&gt;{{#switch:{{NAMESPACE}}||{{ns:14}}=&lt;!-- Only articles and categories. 
--&gt;{{#invoke:Check for unknown parameters|check|unknown=[[Category:Pages using authority control with parameters]]|preview=Page using [[Template:Authority control]] with &quot;_VALUE_&quot;, please move this to Wikidata if possible}}&lt;!--
--&gt;{{#ifeq:{{{VIAF|}}}|
    |&lt;!-- empty or no VIAF in template --&gt;
    |&lt;!-- VIAF in template 
  --&gt;{{#ifeq:{{#property:P214}}|
      |&lt;!-- no property P214 at Wikidata --&gt; [[Category:VIAF not on Wikidata]] &lt;!-- These we still need to import --&gt;
      |&lt;!-- property P214 at Wikidata    --&gt; 
       {{#ifeq:{{{VIAF|}}}|{{#property:P214}}
        |&lt;!-- same ID: We want to end up here --&gt;
        |[[Category:VIAF different on Wikidata]] &lt;!-- Figure out the best link, FIXME: multiple values on Wikidata --&gt;
       }}
     }}
  }}
}}&lt;/includeonly&gt;</text>
      <sha1>hpf5q0aod8ov7l14auaw059lm34vl92</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Big</title>
    <ns>10</ns>
    <id>5816860</id>
    <revision>
      <id>750708882</id>
      <parentid>750708828</parentid>
      <timestamp>2016-11-21T11:09:43Z</timestamp>
      <contributor>
        <username>Materialscientist</username>
        <id>7852030</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Big]]&quot; ([Edit=Require template editor access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="177">&lt;span style=&quot;font-size: 120%;&quot;&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Please add categories to the /doc subpage; interwikis go to Wikidata, thank you. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>h2e0f82fasmre1wg7mmooho2xrnyw8f</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Catalog lookup link</title>
    <ns>10</ns>
    <id>50392128</id>
    <revision>
      <id>796840033</id>
      <parentid>718903401</parentid>
      <timestamp>2017-08-23T10:36:34Z</timestamp>
      <contributor>
        <username>Matthiaspaul</username>
        <id>13467261</id>
      </contributor>
      <comment>added leadout-postfix parameter (to specialcase MR template oddities)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3580">{{#if:{{trim|{{{1|}}}}}|{{#if:{{{article-link|}}}|[[{{{article-link|}}}{{#if:{{{article-name|}}}|{{!}}{{{article-name|}}}}}]]{{{article-postfix|}}}&amp;nbsp;|{{{article-name|}}}{{{article-postfix|}}}{{#if:{{{article-name|}}}|&amp;nbsp;}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{1|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{1|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{1|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{2|}}}}}|{{#if:{{trim|{{{3|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{2|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{2|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{2|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{3|}}}}}|{{#if:{{trim|{{{4|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{3|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{3|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{3|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{4|}}}}}|{{#if:{{trim|{{{5|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{4|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{4|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{4|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{5|}}}}}|{{#if:{{trim|{{{6|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{5|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{5|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{5|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{6|}}}}}|{{#if:{{trim|{{{7|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{6|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{6|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{6|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{7|}}}}}|{{#if:{{trim|{{{8|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{7|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{7|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{7|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{8|}}}}}|{{#if:{{trim|{{{9|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{8|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{8|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{8|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{9|}}}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{9|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{9|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{9|}}}}}{{{item-postfix|}}}}}}}}}}}}}}}}}}}}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>pjazjidcsvxcmpqqpfzz5kqeowvyug7</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Category handler</title>
    <ns>10</ns>
    <id>25084818</id>
    <revision>
      <id>577959188</id>
      <parentid>577959113</parentid>
      <timestamp>2013-10-20T10:48:53Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Category handler: [[WP:High-risk templates|Highly visible template]]: allow template editors to edit ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="148">{{#invoke:Category handler|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories to the /doc subpage, and interwikis to Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>og6fhyj2ssd4fmzpqzuodk12q3cms0z</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Citation</title>
    <ns>10</ns>
    <id>3164016</id>
    <revision>
      <id>690395467</id>
      <parentid>638912098</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Citation: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (indefi...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1955">&lt;includeonly&gt;{{
  #if: {{{inventor-surname|{{{inventor1-surname|{{{inventor-last|{{{inventor1-last|{{{inventor|{{{invent1|{{{invent-1|{{{country-code|{{{3|}}}}}}}}}}}}}}}}}}}}}}}}}}}
&lt;!--
    CITATIONS FOR PATENTS
--&gt;
|{{Citation/patent
 |Surname1 = {{{inventor-surname|{{{inventor1-surname|{{{inventor-last|{{{inventor1-last|{{{inventor|{{{invent-1|{{{invent1|}}}}}}}}}}}}}}}}}}}}}
 |Surname2={{{inventor2-surname|{{{inventor2-last|{{{inventor2|{{{invent2|}}}}}}}}}}}}
 |Surname3={{{inventor3-surname|{{{inventor3-last|{{{inventor3|{{{invent3|}}}}}}}}}}}}
 |Surname4={{{inventor4-surname|{{{inventor4-last|{{{inventor4|{{{invent4|}}}}}}}}}}}}
 |Given1 = {{{inventor-given|{{{inventor1-given|{{{inventor-first|{{{inventor1-first|}}}}}}}}}}}}
 |Given2={{{inventor2-given|{{{inventor2-first|}}}}}}
 |Given3={{{inventor3-given|{{{inventor3-first|}}}}}}
 |Given4={{{inventor4-given|{{{inventor4-first|}}}}}}
 |Inventorlink1={{{inventorlink1|{{{inventorlink|}}}}}}
 |Inventorlink2={{{inventorlink2|}}}
 |Inventorlink3={{{inventorlink3|}}}
 |Inventorlink4={{{inventorlink4|}}}
 |Title={{{title|}}}
 |CountryCode={{{country-code|{{{country|{{{1|}}}}}}}}}
 |PublicationNumber={{{publication-number|{{{patent-number|{{{number|{{{2|}}}}}}}}}}}}
 |Description={{{description|{{{status|{{{3|}}}}}}}}}
 |PublicationDate={{{publication-date|{{{pubdate|}}}}}}
 |IssueDate={{{issue-date|{{{gdate|}}}}}}
 |Year={{{year}}}
 |FilingDate={{{fdate|}}}
 |PriorityDate={{{pridate|}}}
 |Assignee1={{{assign1|}}}
 |Assignee2={{{assign2|}}}
  |Ref={{{ref|harv}}}
  |Sep = {{#ifeq:{{{separator|{{{seperator}}}}}}|;|&amp;#059;|{{{separator|{{{seperator|,}}}}}}}}
  |PS = {{#if:{{{quote|}}}||{{{postscript|}}}|.}}
  |AuthorSep = {{#ifeq:{{{author-separator|}}}|;|&amp;#059;|{{{author-separator|&amp;#059;}}}}}&amp;#32;
}}&lt;!--
    CITATIONS FOR THINGS LIKE BOOKS AND PERIODICALS
--&gt;
|{{#invoke:citation/CS1|citation
|CitationClass=citation
}}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>6dqb1lfxpl27zbelqfuxa721pjppb48</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite EB1911</title>
    <ns>10</ns>
    <id>25134897</id>
    <revision>
      <id>795625844</id>
      <parentid>779381810</parentid>
      <timestamp>2017-08-15T12:47:15Z</timestamp>
      <contributor>
        <username>PBS</username>
        <id>26801</id>
      </contributor>
      <comment>modified access date will not display if wstitle is set</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="5777">{{hide in print|1=
&lt;!--
 optional icon - included by default
--&gt;{{#if:{{{noicon|}}}||[[Image:{{#if:{{{wstitle|}}}|wikisource-logo.svg|PD-icon.svg}}|12px|link=]]&amp;nbsp;}}&lt;!--no white space
--&gt;}}{{cite encyclopedia
    |{{#if:{{{first|}}}  |first  |HIDE_PARAMETER1}}={{{first|}}}
    |{{#if:{{{first1|}}} |first1 |HIDE_PARAMETER2}}={{{first1|}}}
    |{{#if:{{{first2|}}} |first2 |HIDE_PARAMETER3}}={{{first2|}}}
    |{{#if:{{{first3|}}} |first3 |HIDE_PARAMETER4}}={{{first3|}}}

    |{{#if:{{{last|}}}   |last   |HIDE_PARAMETER5}}={{{last|}}}
    |{{#if:{{{last1|}}}  |last1  |HIDE_PARAMETER6}}={{{last1|}}}
    |{{#if:{{{last2|}}}  |last2  |HIDE_PARAMETER7}}={{{last2|}}}
    |{{#if:{{{last3|}}}  |last3  |HIDE_PARAMETER8}}={{{last3|}}}

    |{{#if:{{{author |}}} |author  |HIDE_PARAMETER9}}={{{author|}}}
    |{{#if:{{{author1|}}} |author1 |HIDE_PARAMETER10}}={{{author1|}}}
    |{{#if:{{{author2|}}} |author2 |HIDE_PARAMETER11}}={{{author2|}}}
    |{{#if:{{{author3|}}} |author3 |HIDE_PARAMETER12}}={{{author3|}}}
    |{{#if:{{{authors|}}} |authors |HIDE_PARAMETER13}}={{{authors|}}}
    |{{#if:{{{authorlink|}}} |authorlink |HIDE_PARAMETER14a}}={{{authorlink|}}}
    |{{#if:{{{author-link|}}} |author-link |HIDE_PARAMETER14ab}}={{{author-link|}}}
    |{{#if:{{{author2link|}}} |author2link |HIDE_PARAMETER14b}}={{{author2link|}}}
    |{{#if:{{{author2-link|}}} |author2-link |HIDE_PARAMETER14bb}}={{{author2-link|}}}
    |{{#if:{{{author3link|}}} |author3link |HIDE_PARAMETER14c}}={{{author3link|}}}
    |{{#if:{{{author3-link|}}} |author3-link |HIDE_PARAMETER14cb}}={{{author3-link|}}}
    |{{#if:{{{coauthors|}}}  |coauthors  |HIDE_PARAMETER15}}={{{coauthors|}}}

    | editor-first = {{#if: {{{short|}}}|&lt;!-- eq to empty --&gt;|Hugh}}
    | editor-last = {{#if: {{{short|}}}|&lt;!-- eq to empty --&gt;|Chisholm}}
    | encyclopedia = [[Encyclopdia Britannica Eleventh Edition|Encyclopdia Britannica]]
    | title= {{#ifeq: {{{wstitle|}}}|&lt;!--eq to empty--&gt;
             |&lt;!-- then--&gt;
               {{#ifeq: {{#if: {{{title|}}}|{{{title}}}|{{{article|}}} }} |&lt;!--eq to empty--&gt;
               |&lt;!--then--&gt;&lt;sup&gt;[[Wikisource:1911 Encyclopdia Britannica|&lt;span style=&quot;color:red&quot;&gt;article name needed&lt;/span&gt;]]&lt;/sup&gt;
              |&lt;!--else--&gt;{{{title|{{{article|}}} }}}
              }}&lt;!--end title--&gt;
            |&lt;!--else--&gt;[[Wikisource:1911 Encyclopdia Britannica/{{{wstitle|}}}|{{{display|{{{wstitle|}}}&lt;!-- display --&gt;}}}]]
            }}&lt;!--end wstitle--&gt;
    | url = {{#if:{{{wstitle|}}}|&lt;!--eq to empty--&gt;
             |&lt;!--then set--&gt; {{{url|}}}
             |&lt;!--else leave unset--&gt;
            }}
    | accessdate = {{#if:{{{wstitle|}}}|&lt;!--eq to empty--&gt;
             |&lt;!--then set--&gt; {{{ accessdate|}}}
             |&lt;!--else leave unset--&gt;
            }}
    | edition = {{{edition|11th}}}
    | year = {{{year|1911}}}
    | publisher = {{#if: {{{short|}}}|&lt;!-- eq to empty --&gt;|Cambridge University Press}}
    | volume = {{{volume|}}}
    | page = {{{page|}}}
    | pages = {{{pages|}}}
    | quote = {{{quote|}}}
    | ref = {{{ref|}}}
    | postscript = {{{postscript|}}}
    | separator = {{{separator|}}}
    | mode = {{{mode|}}}
    |{{#if:{{{1|}}} |1 |HIDE_PARAMETER20}}={{{1|}}}
}}&lt;noinclude&gt;
{{Documentation}}&lt;/noinclude&gt;&lt;!--
--&gt;&lt;includeonly&gt;&lt;!--
--&gt;{{#ifeq: {{NAMESPACEE}} |&lt;!--is set--&gt;
     |&lt;!--Sort out the parameters--&gt;
     {{#ifeq: {{#if: {{{wstitle|}}}|{{{wstitle}}}|{{{wikisource|}}} }}|&lt;!--eq to empty--&gt;
     |&lt;!-- then--&gt;
       {{#ifeq: {{#if: {{{title|}}}|{{{title}}}|{{{article|}}} }}|&lt;!--eq to empty--&gt;
       |&lt;!--then--&gt;[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica with no article parameter]]
       |&lt;!--else--&gt;[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica without Wikisource reference]]
       }}&lt;!--end title--&gt;
     |&lt;!--else--&gt;[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica with Wikisource reference]]
     }}&lt;!--end of check wstitle--&gt;
     {{#if:{{{1|}}}|[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica with an unnamed parameter]]}}
     &lt;!-- for the short term three specific tests to allow these parameters to be categorised to allow them to be altered to the standard ones--&gt;
     {{#if:{{{wikisource|}}}|[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica that includes an obsolete parameter]]}}
     {{#if:{{{article|}}}|[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica that includes an obsolete parameter]]}}
     {{#if:{{{footnote|}}}|[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica that includes an obsolete parameter]]}}
     {{#if:{{{coauthors|}}}|[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica that includes an obsolete parameter]]}}
   |&lt;!--else not in NAMESPACE do nothing--&gt;
   }}&lt;!--end NAMESPACE no white space
--&gt;{{#invoke:Check for unknown parameters|check|unknown={{main other|[[Category:Wikipedia articles incorporating a citation from the 1911 Encyclopaedia Britannica with an unknown parameter|_VALUE_{{PAGENAME}}]]}}|preview=Page using [[Template:Cite EB1911]] with unknown parameter &quot;_VALUE_&quot;|ignoreblank=y| 1 |accessdate |article |author |author1 |authorlink |author-link |author2 |author2link |author2-link | author3 | author3link |author3-link  |authors |coauthors |display |edition |first |first1 |first2 |first3 |footnote |last |last1 |last2 |last3 |mode |noicon |page |pages |postscript |quote |ref |separator |short |title |url |volume |wikisource |wstitle |year 
}}&lt;/includeonly&gt;&lt;!--DO NOT PUT A BLANK LINE AFTER THIS COMMENT--&gt;</text>
      <sha1>72suzff5m1hauxkifzxuli7awdp9red</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite book</title>
    <ns>10</ns>
    <id>4086375</id>
    <revision>
      <id>690395469</id>
      <parentid>579832408</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite book: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (indef...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="123">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=book
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>hq4yscm08hccl43rjw83qi7egacgxec</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite conference</title>
    <ns>10</ns>
    <id>4661319</id>
    <revision>
      <id>690395477</id>
      <parentid>579832424</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite conference: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators]...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="129">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=conference
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>72b4nmjtg0tb6m6oofjgdjq9bkhfx1k</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite encyclopedia</title>
    <ns>10</ns>
    <id>1664277</id>
    <revision>
      <id>690395481</id>
      <parentid>579832446</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite encyclopedia: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="166">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=encyclopaedia
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}

[[Category:Lua-based templates]]
&lt;/noinclude&gt;</text>
      <sha1>jdzpxvlfcwjuua45ovk7i5lcp6qre48</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite journal</title>
    <ns>10</ns>
    <id>4740319</id>
    <revision>
      <id>690395473</id>
      <parentid>579832342</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite journal: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (in...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="126">&lt;includeonly&gt;{{#invoke:Citation/CS1|citation
|CitationClass=journal
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>9fcytsszanq7xbwi3p28zsneear9938</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite magazine</title>
    <ns>10</ns>
    <id>7559370</id>
    <revision>
      <id>745413566</id>
      <parentid>693869073</parentid>
      <timestamp>2016-10-21T00:01:16Z</timestamp>
      <contributor>
        <username>Zzuuzz</username>
        <id>365454</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite magazine: [[Wikipedia:High-risk templates|High risk template]] 11k+ transclusions ([Edit=Require template editor access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="127">&lt;includeonly&gt;{{#invoke:Citation/CS1|citation
|CitationClass=magazine
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ihdnkvb90c6voz3z3uc97mmw5bytrkw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite news</title>
    <ns>10</ns>
    <id>4321630</id>
    <revision>
      <id>690395488</id>
      <parentid>579832384</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite news: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (indef...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="123">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=news
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>pbjnspfej5gxihr9izxrzkow3f1uf3i</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite newsletter</title>
    <ns>10</ns>
    <id>51174441</id>
    <redirect title="Template:Cite magazine" />
    <revision>
      <id>731722153</id>
      <timestamp>2016-07-27T03:23:03Z</timestamp>
      <contributor>
        <username>Graham11</username>
        <id>14835592</id>
      </contributor>
      <comment>[[WP:AES|]]Redirected page to [[Template:Cite magazine]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="36">#REDIRECT [[Template:Cite magazine]]</text>
      <sha1>5k77zycf97sbgmupgqbhohj28d0nw1y</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite web</title>
    <ns>10</ns>
    <id>1252907</id>
    <revision>
      <id>753103437</id>
      <parentid>753063659</parentid>
      <timestamp>2016-12-05T05:36:52Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Cite web]]&quot;: restore old protection ([Edit=Require administrator access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="122">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=web
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>rcgmbcxu7hvs583g1f3rzz4c4dkizda</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Clear</title>
    <ns>10</ns>
    <id>1239772</id>
    <revision>
      <id>684162145</id>
      <parentid>683948339</parentid>
      <timestamp>2015-10-04T23:53:36Z</timestamp>
      <contributor>
        <username>Nyttend</username>
        <id>1960810</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Clear: Enable access by template editors; NeilN is okay with this move ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="81">&lt;div style=&quot;clear:{{{1|both}}};&quot;&gt;&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>6mk3e4afot6hzu6tzbljxxk83e14xv6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Clear right</title>
    <ns>10</ns>
    <id>1783269</id>
    <revision>
      <id>646354912</id>
      <parentid>646354891</parentid>
      <timestamp>2015-02-09T15:14:22Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Fix</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="76">{{Clear|right}}&lt;noinclude&gt;
{{Documentation|Template:Clear/doc}}
&lt;/noinclude&gt;</text>
      <sha1>26n2q7knbnfw12rcfbnfnv61rfg4gc2</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Col-begin</title>
    <ns>10</ns>
    <id>3218295</id>
    <revision>
      <id>804281870</id>
      <parentid>769818315</parentid>
      <timestamp>2017-10-07T23:27:31Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>add extra style param</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="299">&lt;div&gt;
{| class=&quot;{{{class|}}} multicol&quot; role=&quot;presentation&quot; style=&quot;{{#if:{{{small|}}}|font-size:90%; }}border-collapse: collapse; padding: 0; border: {{{border|0}}}; background:{{{bgColor|{{{bgcolor|transparent}}}}}}; width:{{{width|100%}}}; {{{style|}}}&quot;&lt;noinclude&gt;
|}
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>t2n0oltuyhbxnx6jczd3g4xrigd37d3</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Col-break</title>
    <ns>10</ns>
    <id>3233169</id>
    <revision>
      <id>804281746</id>
      <parentid>729136970</parentid>
      <timestamp>2017-10-07T23:26:37Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>add extra style param</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="225">&lt;p&gt;&lt;/p&gt;
|  style=&quot;{{#if:{{{width|}}}|width: {{{width}}}; }}text-align: {{{align|left}}}; vertical-align: {{{valign|top}}}; {{#if: {{{gap|}}}|padding-left: {{{gap}}};}} {{{style|}}}&quot; |&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>0biz0ltaa3gl71bwdj8otygmiyg0s8n</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Col-end</title>
    <ns>10</ns>
    <id>3218301</id>
    <revision>
      <id>729213521</id>
      <parentid>729136976</parentid>
      <timestamp>2016-07-10T18:16:50Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>[[Wikipedia:Templates_for_discussion/Log/2016_July_2#Template:Multicol]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="58">&lt;p&gt;&lt;/p&gt;
|}&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>soyg8vmis5frdimag99tw0559531hz9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Column-width</title>
    <ns>10</ns>
    <id>29216399</id>
    <revision>
      <id>638540885</id>
      <parentid>579832996</parentid>
      <timestamp>2014-12-17T20:09:33Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>redundant</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="165">&lt;includeonly&gt;-moz-column-width: {{{1|30em}}}; -webkit-column-width: {{{1|30em}}}; column-width: {{{1|30em}}};&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>sum88q311kc02222mb4cgzbikcx7fqy</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Convert</title>
    <ns>10</ns>
    <id>8387047</id>
    <revision>
      <id>585529792</id>
      <parentid>577834328</parentid>
      <timestamp>2013-12-11T02:15:54Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Upgrade to Lua module;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="116">&lt;includeonly&gt;{{{{{|safesubst:}}}#invoke:convert|convert}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>81befqhh89lu562bonqr8252bepuvfp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:DMCA</title>
    <ns>10</ns>
    <id>23226218</id>
    <revision>
      <id>774491639</id>
      <parentid>296800547</parentid>
      <timestamp>2017-04-08T20:40:50Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:DMCA]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="197">{{Dated maintenance category
 |onlyarticles=yes
 |1={{{1|}}}
 |2={{{2|}}}
 |3={{{3|}}}
 |4={{{4|}}}
 |5={{{5|}}}
}}&lt;noinclude&gt;
{{documentation|Template:Dated maintenance category/doc}}
&lt;/noinclude&gt;</text>
      <sha1>cl1tba6o83bu6hpmnvwvbcse6qwofoo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Dated maintenance category</title>
    <ns>10</ns>
    <id>22598546</id>
    <revision>
      <id>589732290</id>
      <parentid>584337311</parentid>
      <timestamp>2014-01-08T08:14:55Z</timestamp>
      <contributor>
        <username>John of Reading</username>
        <id>11308236</id>
      </contributor>
      <comment>Second attempt. Those spaces upset inline templates such as {{As of}}. Instead, try an unconditional &lt;nowiki/&gt;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="660">&lt;nowiki/&gt;&lt;!--This nowiki helps to prevent whitespace at the top of articles--&gt;{{#ifeq:{{FULLROOTPAGENAME}}|Wikipedia:Template messages|&lt;!--Do not categorize--&gt;|&lt;!--
--&gt;{{#ifexpr:{{#if:{{NAMESPACE}}|0|1}}+{{#ifeq:{{{onlyarticles|no}}}|yes|0|1}}
 |{{#if:{{{3|}}}
  |[[Category:{{{1}}} {{{2}}} {{{3}}}]]&lt;!--
--&gt;{{#ifexist:Category:{{{1}}} {{{2}}} {{{3}}}
    |&lt;!--
 --&gt;|[[Category:Articles with invalid date parameter in template]]&lt;!--
--&gt;}}
  |[[Category:{{#if:{{{5|}}}
               |{{{5}}}&lt;!--
            --&gt;|{{{1}}}&lt;!--
           --&gt;}}]]&lt;!--
--&gt;}}{{#if:{{{4|}}}
      |[[Category:{{{4}}}]]}}&lt;!--
  --&gt;}}&lt;!--
--&gt;}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>7p59j4cq4i8wg65odpv5287yu50sczo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Draw Bar</title>
    <ns>10</ns>
    <id>11693241</id>
    <revision>
      <id>271792278</id>
      <parentid>197472851</parentid>
      <timestamp>2009-02-19T10:06:15Z</timestamp>
      <contributor>
        <ip>88.152.193.207</ip>
      </contributor>
      <comment>fix the red-link&quot;Template:Border-style&quot;-problem at [[Template:Graphical timeline]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1425">&lt;includeonly&gt;&lt;div class=bar
style=&quot;
    font-size:100%;
    background-color:{{{colour|#aaccff}}};
    {{#if:{{{border|}}}|border-width:{{{border|0}}}{{{tl-hu}}};
}}  {{#if:{{{border-colour|}}}|border-colour:{{{border-colour}}};
}}  border-style:{{#if:{{{border-style|}}}|{{{border-style}}}|{{#if:{{{border|{{{border-colour|}}}}}}|solid}}}} none;
    position:absolute;
    text-align:center;
    margin-top:{{#expr:
        {{{tl-height|30}}} *
        ({{{tl-to|30}}}-{{{to|1}}}) /
        ({{{tl-to|30}}}-{{{tl-from|0}}})
    }}{{{tl-hu}}};
    height:{{#expr:
        (
         {{{tl-height|30}}} *
         ({{{to|502}}}-{{{from|5}}}) /
         ({{{tl-to|21}}}-{{{tl-from|10}}})
         ){{#ifeq:{{{border-style}}}|none|| - ( 2*0{{{border|}}} ) }}
    }}{{{tl-hu}}};
    margin-left:{{#expr:{{{left}}}*{{{tl-width}}}}}{{{tl-wu}}};
    width:{{#expr:({{{right}}}-{{{left}}})*{{{tl-width}}}}}{{{tl-wu}}};
&quot;&gt;&lt;div class=nudge style=&quot;
    font-size:100%; 
    position:relative;
    top:{{#expr:{{{nudgedown|0}}}-0.86}}em; 
    left:{{{nudgeright|0}}}em;
&quot;&gt;&lt;span style=&quot;
    position:relative;
    align:center;{{#if:{{{textsize|}}}|
    font-size:{{{textsize}}};}}
    vertical-align:middle;
    bottom:-{{#expr:
        {{{tl-height}}} *
        ({{{to}}}-{{{from}}}) /
        ({{{tl-to}}}-{{{tl-from}}})
        /2}}{{{tl-hu|em}}}; 
&quot;&gt;{{{text}}}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>aw5eunucgse6mg3op1vf88slpewj0uc</sha1>
    </revision>
  </page>
  <page>
    <title>Template:E</title>
    <ns>10</ns>
    <id>2870106</id>
    <revision>
      <id>718030387</id>
      <parentid>654607491</parentid>
      <timestamp>2016-05-01T04:04:30Z</timestamp>
      <contributor>
        <username>KrakatoaKatie</username>
        <id>1570001</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:E: [[WP:High-risk templates|Highly visible template]]: RFPP request ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="398">{{#if:{{{1|}}}
|&lt;span style=&quot;margin:0 .15em 0 .25em&quot;&gt;&lt;/span&gt;10&lt;sup&gt;&lt;!--
--&gt;{{#ifeq:{{{2|}}}|text
  |{{{1}}}
  |{{#ifeq:{{valid|number={{{1}}}}}|false
    |{{{1}}}
    |{{#ifeq:{{{2|}}}|plus
      |&amp;#43;{{val/delimitnum|{{{1}}}}}
      |{{val/delimitnum|{{{1}}}}}
    }}
  }}
}}&lt;/sup&gt;
|{{Main other|[[Category:Articles using E without any arguments]]}}
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>5xgc8xv6w50oftaukbcj6aej28aqk06</sha1>
    </revision>
  </page>
  <page>
    <title>Template:EB1911</title>
    <ns>10</ns>
    <id>392666</id>
    <revision>
      <id>756349560</id>
      <parentid>756076542</parentid>
      <timestamp>2016-12-23T16:54:33Z</timestamp>
      <contributor>
        <username>PBS</username>
        <id>26801</id>
      </contributor>
      <comment>move new test up into area that tests for articles</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="4680">{{hide in print|1=
&lt;!--
sort out the icon to use
--&gt;{{#if: {{{noicon|{{{no-icon|}}}&lt;!--noicon--&gt;}}} |&lt;!--eq to empty--&gt;
    |&lt;!--then--&gt;{{#ifeq: {{{wstitle|}}} |&lt;!--eq to empty--&gt;
                 |&lt;!--then--&gt;{{#ifeq: {{{1|}}}|&lt;!--eq to empty--&gt;
                              |&lt;!--then--&gt;[[File:PD-icon.svg|12px|alt=Public Domain]]&amp;nbsp;
                              |&lt;!--else--&gt;[[File:Wikisource-logo.svg|12px|alt=Wikisource]]&amp;nbsp;
                            }}
                 |&lt;!--else--&gt;[[File:Wikisource-logo.svg|12px|alt=]]&amp;nbsp;
                }}
   }}
}}&lt;!--Sort out the lead string
--&gt;{{#ifeq: {{{no-prescript|{{{noprescript|}}}&lt;!----&gt;}}} |&lt;!--eq to empty--&gt;
    |&lt;!--then display a prescript--&gt;{{#ifeq: {{{inline|{{{footnote|}}}&lt;!--inline--&gt;}}} |&lt;!--eq to empty--&gt;
                                     |&lt;!--then display--&gt;This article
                                     |&lt;!--else display--&gt;One or more of the preceding sentences
                                    }}&lt;!-- no white space
  --&gt;&amp;nbsp;incorporates text from a publication now in the [[public domain]]:&amp;nbsp;
   }}&lt;!--no white space
--&gt;{{Cite EB1911
    | noicon=1
    |{{#if:{{{first|}}}  |first  |HIDE_PARAMETER1}}={{{first|}}}
    |{{#if:{{{first1|}}} |first1 |HIDE_PARAMETER2}}={{{first1|}}}
    |{{#if:{{{first2|}}} |first2 |HIDE_PARAMETER3}}={{{first2|}}}
    |{{#if:{{{first3|}}} |first3 |HIDE_PARAMETER4}}={{{first3|}}}

    |{{#if:{{{last|}}}   |last   |HIDE_PARAMETER5}}={{{last|}}}
    |{{#if:{{{last1|}}}  |last1  |HIDE_PARAMETER6}}={{{last1|}}}
    |{{#if:{{{last2|}}}  |last2  |HIDE_PARAMETER7}}={{{last2|}}}
    |{{#if:{{{last3|}}}  |last3  |HIDE_PARAMETER8}}={{{last3|}}}

    |{{#if:{{{author |}}} |author  |HIDE_PARAMETER9}}={{{author|}}}
    |{{#if:{{{author1|}}} |author1 |HIDE_PARAMETERa}}={{{author1|}}}
    |{{#if:{{{author2|}}} |author2 |HIDE_PARAMETERb}}={{{author2|}}}
    |{{#if:{{{author3|}}} |author3 |HIDE_PARAMETERc}}={{{author3|}}}
    |{{#if:{{{authors|}}} |authors |HIDE_PARAMETERd}}={{{authors|}}}
    |{{#if:{{{author-link|}}} |authorlink |HIDE_PARAMETERe1}}={{{author-link|}}}
    |{{#if:{{{authorlink|}}}  |authorlink |HIDE_PARAMETERe2}}={{{authorlink|}}}
    |{{#if:{{{author2-link|}}}|author2link |HIDE_PARAMETERe3}}={{{author2-link|}}}
    |{{#if:{{{author2link|}}} |author2link |HIDE_PARAMETERe4}}={{{author2link|}}}
    |{{#if:{{{author-3link|}}}|author3link |HIDE_PARAMETERe5}}={{{author3-link|}}}
    |{{#if:{{{author3link|}}} |author3link |HIDE_PARAMETERe6}}={{{author3link|}}}
    |{{#if:{{{coauthors|}}}  |coauthors  |HIDE_PARAMETERf}}={{{coauthors|}}}

    |{{#if:{{{accessdate|}}}  |accessdate  |HIDE_PARAMETERg}}={{{accessdate|}}}
    |{{#if:{{{display|}}} |display |HIDE_PARAMETERh}}={{{display|}}}
    | wstitle =  {{{wstitle|}}}
    | title = {{{title|}}}
    |{{#if:{{{edition|}}} |edition |HIDE_PARAMETERi}}={{{edition|}}}
    |{{#if:{{{year|}}}    |year    |HIDE_PARAMETERj}}={{{year|}}}
    |{{#if:{{{url|}}}     |url     |HIDE_PARAMETERk}}={{{url|}}}
    |{{#if:{{{volume|}}}  |volume  |HIDE_PARAMETERl}}={{{volume|}}}
    |{{#if:{{{page|}}}    |page    |HIDE_PARAMETERm}}={{{page|}}}
    |{{#if:{{{pages|}}}   |pages   |HIDE_PARAMETERn}}={{{pages|}}}
    |{{#if:{{{postscript|}}} |postscript  |HIDE_PARAMETERp}}={{{postscript|}}}
    |{{#if:{{{separator|}}} |separator  |HIDE_PARAMETERq}}={{{separator|}}}
    |{{#if:{{{mode|}}} |mode  |HIDE_PARAMETERr}}={{{mode|}}}
    | ref = {{{ref|harv}}}
    &lt;!--pass through the unnamed parameter--&gt;
    |{{#if:{{{1|}}}  |1  |HIDE_PARAMETERs}}={{{1|}}}  
   }}&lt;!-- no white space
--&gt;{{#ifeq: {{NAMESPACEE}} |&lt;!--is set--&gt;
    |&lt;!-- then--&gt;[[Category:Wikipedia articles incorporating text from the 1911 Encyclopdia Britannica]]&lt;!-- 
     --&gt;{{#if:{{{1|}}}|[[Category:Wikipedia articles incorporating text from the 1911 Encyclopdia Britannica with an unnamed parameter]]}}&lt;!--
     --&gt;{{#invoke:Check for unknown parameters|check|unknown={{main other|[[Category:Pages using EB1911 with unknown parameters|_VALUE_{{PAGENAME}}]]}}|preview=Page using [[Template:EB1911]] with unknown parameter &quot;_VALUE_&quot;|ignoreblank=y| 1 | accessdate | author | author1 | authorlink |author-link | author2 | author2link |author2-link | author3 | author3link | author3-link | authors | coauthors | display | edition | first | first1 | first2 | first3 | footnote | inline | last | last1 | last2 | last3 | mode | no-icon | no-prescript | noicon | noprescript | page | pages | postscript | ref | separator | title | url | volume | wstitle | year }}&lt;!--
     --&gt;|&lt;!--else do nothing--&gt;
   }}&lt;!--no white space
--&gt;&lt;noinclude&gt;
{{Documentation}}&lt;/noinclude&gt;&lt;!--
--&gt;&lt;includeonly&gt;&lt;!--DO NOT PUT A BLANK LINE AFTER THIS COMMENT--&gt;</text>
      <sha1>lc5xcle7c8bb9zoc7jiroov9hjqdo0u</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Earth</title>
    <ns>10</ns>
    <id>12205061</id>
    <revision>
      <id>783701316</id>
      <parentid>778033807</parentid>
      <timestamp>2017-06-04T02:12:25Z</timestamp>
      <contributor>
        <username>Finnusertop</username>
        <id>19089174</id>
      </contributor>
      <minor/>
      <comment>Fixed redirects to preserve display of self-redirecting links in bold in navigational templates ([[WP:BRINT]]).</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2176">{{Navbox
| name = Earth
| title = [[Earth]]-related [[Outline of Earth|topics]]
| state = {{{state&lt;includeonly&gt;|autocollapse&lt;/includeonly&gt;}}}
| bodyclass = hlist
| basestyle = text-align: center;

| group1 = History
| list1 =
* [[Age of the Earth]]
* [[Evolutionary history of life]]
* [[Faint young Sun paradox]]
* [[Formation and evolution of the Solar System]]
* [[Future of Earth]]
* [[Geologic time scale]]
* [[Geological history of Earth]]
* [[History of Earth]]
* [[Timeline of evolutionary history of life|Timeline of evolution]]

| group2 = {{hlist|Geography|Geology}}
| list2 =
* [[Clairaut's theorem]]
* [[Continent]]s
* [[Earthquake]]
* [[Equatorial bulge]]
* [[Extremes on Earth]]
* [[Geology of solar terrestrial planets]]
* [[Geophysics]]
* [[Plate tectonics]]
* [[Structure of the Earth]]
* [[Time zone]]s

| group3 = Ecology
| list3 =
* [[Earth Day]]
* [[Global warming]]
* [[Human impact on the environment]]

| group4 = [[Digital mapping|Imaging]]
| list4 =
* [[Apple Maps]]
* [[Baidu Maps]]
* [[Bhuvan]]
* [[Bing Maps]]
* [[Global Map]]
* [[Google Earth]]
* [[Google Maps]]
* [[MapmyIndia]]
* [[NASA World Wind]]
* [[Here (company)|Here]]
* [[OpenStreetMap]]
* [[Wikimapia]]
* [[Remote sensing]]
&lt;!--* [[WikiMapia]]--&gt;
* [[Yahoo! Maps]]
* [[Yandex| Yandex Maps]]

| group5 = {{hlist|Arts|Culture|Society}}
| list5 =
* [[Earth in culture]]
* [[Earth in science fiction]]
* [[Etymology of the word &quot;Earth&quot;]]
* [[History of the world]]
* [[International law]]
* [[Landscape painting]]
* [[List of sovereign states|List of countries]]
* [[World economy]]

| group7 = Other topics
| list7 =
* [[Biosphere]]
* [[Earth's orbit]]
* [[Earth trojan]]
* [[Ecliptic|The ecliptic]]
* [[Flag of Earth]]
* [[Gravity of Earth|Gravity]]
* [[Earth's magnetic field|Magnetic field]]
* [[Moon|The Moon]]
* [[Claimed moons of Earth]]
* [[2006 RH120]]
* [[Kordylewski cloud]]
* [[Solar System]]
* [[Earth's location in the Universe]]
* [[Theia (planet)|Theia]]

| belowstyle = font-weight:bold;
| below =
* {{icon|Portal}} [[Portal:Earth sciences|Earth sciences portal]]
* {{icon|Portal}} [[Portal:Solar System|Solar System portal]]

}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>5cf7m5ttphj6cxvgyqc0utxwigx0egy</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Earth's location</title>
    <ns>10</ns>
    <id>8204794</id>
    <revision>
      <id>760222880</id>
      <parentid>760131082</parentid>
      <timestamp>2017-01-15T18:23:32Z</timestamp>
      <contributor>
        <username>Randy Kryn</username>
        <id>4796325</id>
      </contributor>
      <comment>Related add 'To the Moon and Beyond (1964 film)'</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="798">{{Navbox
| name = Earth's location
| title = [[Earth's location in the Universe]]
| state = {{{state&lt;includeonly&gt;|autocollapse&lt;/includeonly&gt;}}}
| bodyclass = hlist
| liststyle = &lt;!--line-height:1.3em;--&gt;

| group1 = Included
| list1 = {{Earth's location in the Universe}}

| group2 = Related
| list2 =
* [[Cosmic View|''Cosmic View'' (1957 essay)]]
* [[To the Moon and Beyond|''To the Moon and Beyond'' (1964 film)]]
* [[Cosmic Zoom|''Cosmic Zoom'' (1968 film)]]
* [[Powers of Ten (film)|''Powers of Ten'' (1968 and 1977 films)]]
* [[Cosmic Voyage|''Cosmic Voyage'' (1996 documentary)]]
* [[Cosmic Eye|''Cosmic Eye'' (2012)]]

| below = '''{{icon|Portal}} [[Portal:Astronomy|Astronomy portal]] - {{icon|Portal}} [[Portal:Cosmology|Cosmology portal]]'''

}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>7i0xk71ndjfopl3js5uq09yykwp7aj5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Earth's location in the Universe</title>
    <ns>10</ns>
    <id>42493336</id>
    <revision>
      <id>802080844</id>
      <parentid>709931611</parentid>
      <timestamp>2017-09-23T21:44:07Z</timestamp>
      <contributor>
        <username>J 1982</username>
        <id>777667</id>
      </contributor>
      <comment>someone forgot PiscesCetus Supercluster Complex?</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2307">&lt;!-- 
--&gt;{{#switch:{{lc:{{{1|}}}}} |local group= |&lt;!-- 
--&gt;{{#switch:{{lc:{{{1|}}}}} |milky way= |&lt;!-- 
--&gt;{{#switch:{{lc:{{{1|}}}}} |solar system|solar= |&lt;!-- 
--&gt; [[Earth]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt;&lt;!-- END switch &quot;solar system&quot; --&gt;}}&lt;!--
--&gt; [[Solar System]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Local Interstellar Cloud]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Local Bubble]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Gould Belt]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Orion Arm]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt;&lt;!-- END switch &quot;milky way&quot; --&gt;}}&lt;!--
--&gt; [[Milky Way]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Satellite galaxies of the Milky Way|Milky Way subgroup]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt;&lt;!-- END switch &quot;local group&quot; --&gt;}}&lt;!--
--&gt; [[Local Group]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Virgo Supercluster]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Laniakea Supercluster]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[PiscesCetus Supercluster Complex]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Observable universe]]{{{divider|&amp;nbsp;{{big|}} }}}&lt;!-- 
--&gt; [[Universe]]&lt;!--
--&gt;{{#if:{{{nonote|}}} | |&lt;br/&gt;{{smaller|Each {{{divider|arrow ({{big|}})}}} may be read as &quot;within&quot; or &quot;part of&quot;.}}}}&lt;!--
--&gt;&lt;noinclude&gt;

{{documentation
 | content =
* {{para|1}}
** Set the first parameter as &quot;Solar System&quot;, &quot;Solar system&quot;, &quot;solar system&quot;, &quot;Solar&quot; or &quot;solar&quot; to omit Earth from the start of the list.
** Set the first parameter as &quot;Milky Way&quot;, &quot;Milky way&quot;, &quot;milky way&quot;, &quot;MILKY WAY&quot; to omit Earth through to Orion Arm, inclusive, from the start of the list.
** Set the first parameter as &quot;Local Group&quot;, &quot;Local group&quot;, &quot;local group&quot;, &quot;LOCAL GROUP&quot; to omit Earth through to Milky Way subgroup, inclusive, from the start of the list.
* Use {{para|divider}} to set the divider between links (default &quot;&lt;code&gt;&lt;nowiki&gt;&amp;amp;nbsp;{{big|}}&lt;/nowiki&gt;&amp;nbsp;&lt;/code&gt;&quot;).
* Set {{para|nonote}} to &quot;true&quot; to omit the explanatory note below the list.

{{info| 
This template ({{tl|Earth's location in the Universe}}) is used as a subtemplate in:
* {{tl|Earth's location}}
* {{tl|Solar System}}
* {{tl|Milky Way}}
* {{tl|Andromeda Galaxy}}
* {{tl|Triangulum Galaxy}}
}}

}}
[[Category:Astronomy templates]]
[[Category:Solar System templates]]

&lt;/noinclude&gt;</text>
      <sha1>p3zz4zpo8i6bautja7qfukbqsy2mfg2</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Earth science</title>
    <ns>10</ns>
    <id>4469915</id>
    <revision>
      <id>797900137</id>
      <parentid>687535243</parentid>
      <timestamp>2017-08-29T20:37:08Z</timestamp>
      <contributor>
        <username>Black Rainbow 999</username>
        <id>16889032</id>
      </contributor>
      <comment>Removing 'WikiProject Earth science' as it is defunct since August 17</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="624">{{Navbox
| name      = Earth science
| title     = [[Earth science]]
| bodyclass = hlist

| list1 = 
* [[Atmospheric sciences|Atmospheric science]]
* [[Environmental science]]
* [[Geodesy]]
* [[Geology]]
* [[Geophysics]]
* [[Glaciology]]

* [[Hydrology]]
* [[Meteorology]]
* [[Oceanography]]
* [[Physical geography]]
* [[Soil science]]

| below      = 
* {{icon|category}}'''[[:Category:Earth sciences|Category]]'''
* {{icon|portal}}'''[[Portal:Earth sciences|Portal]]'''
* {{icon|commons}}'''[[commons:Category:Earth sciences|Commons]]'''
}}&lt;noinclude&gt;

[[Category:Science and nature templates|Earth science]]

&lt;/noinclude&gt;</text>
      <sha1>t61c9fgeegw5xzgoq3rkd2f5pet1spe</sha1>
    </revision>
  </page>
  <page>
    <title>Template:En icon</title>
    <ns>10</ns>
    <id>1755678</id>
    <revision>
      <id>788736189</id>
      <parentid>679939322</parentid>
      <timestamp>2017-07-03T05:00:22Z</timestamp>
      <contributor>
        <username>Zyxw</username>
        <id>473593</id>
      </contributor>
      <minor/>
      <comment>Convert unused 2nd parameter to comment. using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="76">{{Link language|en}}&lt;!--English--&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>88esdjaqjsujnswgs9dbuxl8nzt1ehf</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Error-small</title>
    <ns>10</ns>
    <id>55072963</id>
    <revision>
      <id>799379119</id>
      <parentid>797851439</parentid>
      <timestamp>2017-09-07T10:40:18Z</timestamp>
      <contributor>
        <username>The Anome</username>
        <id>76</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Error-small]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">{{#invoke:Error|error|{{{message|{{{1}}}}}}|tag=span}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>mmp4mio3xf3ajmqs6mv2pzi1u0i96x1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Evalns</title>
    <ns>10</ns>
    <id>16925281</id>
    <revision>
      <id>771834929</id>
      <parentid>389561225</parentid>
      <timestamp>2017-03-23T19:59:59Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Evalns]]&quot;: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="180">&lt;includeonly&gt;{{{{{subst|}}}#if:{{{{{subst|}}}#ifexpr:{{{{{subst|}}}#expr:{{{1}}}}}}}|({{{1}}})|{{{{{subst|}}}#expr:{{{1}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>63jtgitqu36oukpzikgpn5hx7kdhwd0</sha1>
    </revision>
  </page>
  <page>
    <title>Template:FULLROOTPAGENAME</title>
    <ns>10</ns>
    <id>34701984</id>
    <revision>
      <id>774489771</id>
      <parentid>476439833</parentid>
      <timestamp>2017-04-08T20:24:42Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:FULLROOTPAGENAME]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="420">{{ {{{|safesubst:}}}#if: {{ {{{|safesubst:}}}Ns has subpages | {{ {{{|safesubst:}}}#if:{{{1|}}}|{{ {{{|safesubst:}}}NAMESPACE:{{{1}}}}}|{{ {{{|safesubst:}}}NAMESPACE}}}} }} 
  | {{ {{{|safesubst:}}}#titleparts:{{ {{{|safesubst:}}}#if:{{{1|}}}|{{{1}}}|{{ {{{|safesubst:}}}FULLPAGENAME}}}}|1}}
  | {{ {{{|safesubst:}}}#if:{{{1|}}}|{{{1}}}|{{ {{{|safesubst:}}}FULLPAGENAME}}}}
}}&lt;noinclude&gt;

{{documentation}}

&lt;/noinclude&gt;</text>
      <sha1>t4jn967jlk6ph7qu71w2b8f5083yjrl</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Featured article</title>
    <ns>10</ns>
    <id>3851900</id>
    <revision>
      <id>720674739</id>
      <parentid>720669800</parentid>
      <timestamp>2016-05-17T08:02:46Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Article-space top icons should not be custom-sortable</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="290">{{Top icon
| imagename    = cscr-featured.svg
| wikilink     = Wikipedia:Featured articles
| description  = This is a featured article. Click here for more information.
| id           = featured-star
| maincat      = [[Category:Featured articles]]
}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>cnsyahv7myhd3aer117jr8juhklsyj1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Font</title>
    <ns>10</ns>
    <id>34978013</id>
    <revision>
      <id>778792479</id>
      <parentid>778792436</parentid>
      <timestamp>2017-05-05T07:41:21Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>redo without nowiki</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="569">&lt;includeonly&gt;&lt;span style=&quot;font-family:{{ {{{|safesubst:}}}#if: {{{font|}}} |{{{font}}}|sans-serif}};font-size:{{ {{{|safesubst:}}}#if: {{{size|}}} |{{{size}}}|100%}};{{ {{{|safesubst:}}}#if: {{{color|}}} |color:{{{color}}}|color:black}};{{ {{{|safesubst:}}}#if: {{{bgcolor|}}} |background-color:{{{bgcolor}}}|background-color:transparent}};{{ {{{|safesubst:}}}#if: {{{title|}}} |title:{{{title}}}|}};{{ {{{|safesubst:}}}#if: {{{css|}}} |{{{css}}}|}}&quot;&gt;{{ {{{|safesubst:}}}#if: {{{1|}}} |{{{1}}}|{{{text}}}}}&lt;/span&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>i1bbj2sg10gw4vizcbvb6jhvpkkyzvf</sha1>
    </revision>
  </page>
  <page>
    <title>Template:For loop</title>
    <ns>10</ns>
    <id>44481616</id>
    <revision>
      <id>804522512</id>
      <parentid>632386457</parentid>
      <timestamp>2017-10-09T15:43:10Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:For loop]]&quot;: [[WP:High-risk templates|Highly visible template]]; 25,000+ transclusions ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="178">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:ForLoop|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>60djvnxye6kcdeagtjwe1j6odk7zovz</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Graphical timeline</title>
    <ns>10</ns>
    <id>11683398</id>
    <revision>
      <id>752398233</id>
      <parentid>729974724</parentid>
      <timestamp>2016-12-01T01:09:54Z</timestamp>
      <contributor>
        <username>MaxSem</username>
        <id>590476</id>
      </contributor>
      <comment>Don't consider this template's contents part of main text flow for search analyzer</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="107644">&lt;includeonly&gt;&lt;div id=Container{{{instance-id|}}} class=&quot;toccolours searchaux&quot; style=&quot;text-align: left; padding:0.5em 0 0 0; border-style:{{#if:{{{embedded|}}}|none|solid}}; {{#if:{{{embedded|}}}||float:{{{align|right}}};clear:{{{align|right}}}}}; padding:0 0.5em; margin:{{#if:{{{embedded|}}}|auto|{{{margin|0.3em}}} {{#ifeq:{{{align|right}}}|right|0|{{{margin|1.4em}}}}} {{{margin|0.8em}}} {{#ifeq:{{{align|right}}}|right|{{{margin|1.4em}}}|0}}}}; overflow: hidden;&quot;&gt;&lt;!--

 #### Title ? ###

--&gt;{{#if:{{{title|}}}|&lt;div id=Title{{{instance-id|}}} style=&quot;background-color:{{{title-colour|{{{title-color|#77bb77}}}}}}; font-weight:bold; padding:0.2em; text-align:center; margin:0.6em 0 1.2em 0&quot;&gt;{{{title}}}&lt;/div&gt;}}&lt;div id=Contains-Timeline-Scale-Notes{{{instance-id|}}}&gt;&lt;!--

 #### View, edit, history ####

--&gt;{{#ifeq:{{BASEPAGENAME}}{{NAMESPACE}}|{{FULLPAGENAME}}|{{#if:{{{link-to|}}}|&lt;div style=&quot;text-align:right; position:relative; top:-1em;&quot;&gt;&lt;small&gt;[[Template:{{{link-to}}}|&lt;span style=&quot;color:#002bb8;&quot; title=&quot;View this timeline in its own page&quot;&gt;view&lt;/span&gt;]]&amp;nbsp;&amp;nbsp;[[Template_talk:{{{link-to}}}|&lt;span style=&quot;color:#002bb8;&quot; title=&quot;Discussion about this template&quot;&gt;discuss&lt;/span&gt;]]&amp;nbsp;&amp;nbsp;&lt;span class=&quot;noprint plainlinksneverexpand&quot; style=&quot;color:#002bb8;&quot; title=&quot;You can edit this timeline. Please use the preview button before saving.&quot;&gt;&lt;span class=&quot;plainlinks&quot;&gt;[{{fullurl:Template:{{{link-to}}}|action=edit}} edit]&lt;/span&gt;&lt;/span&gt;&lt;/small&gt;&lt;/div&gt;}}}}&lt;!-- 

 #### Scale bar ####

--&gt;&lt;div id=Scale{{{instance-id|}}} style=&quot;width:3.1em; position:relative; top:-0.82em; float:left; height:{{{height|36}}}{{{height-unit|{{{unit|em}}}}}}; padding:0px&quot;&gt;{{#ifeq:{{{help|off}}}|off|{{for loop
 || pv=loop
 | pc1n=from|pc1v={{{from}}}
 | pc2n=to|pc2v={{{to}}}
 | pc3n=height|pc3v={{{height|36}}}
 | pc4n=unit|pc4v={{{height-unit|{{{unit|em}}}}}}
 | pc5n=increment|pc5v={{{scale-increment|{{calculate increment|{{{from}}}|{{{to}}}}}}}}
 | call=scalemarkers
|0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30
}}|{{#if:{{{from|}}}{{{to|}}}|{{for loop
 || pv=loop
 | pc1n=from|pc1v={{{from}}}
 | pc2n=to|pc2v={{{to}}}
 | pc3n=height|pc3v={{{height|36}}}
 | pc4n=unit|pc4v={{{height-unit|{{{unit|em}}}}}}
 | pc5n=increment|pc5v={{{scale-increment|{{calculate increment|{{{from}}}|{{{to}}}}}}}}
 | call=scalemarkers
|0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30
}}}}}}&lt;/div Scale&gt;&lt;div id=ScaleBar{{{instance-id|}}} style=&quot;width:1px; float:left; height:{{{height|36}}}{{{height-unit|{{{unit|em}}}}}}; padding:0; background-color:#242020&quot;&gt;&lt;/div&gt;&lt;!--

 #### Graphical timeline ####

--&gt;&lt;div id=Timeline{{{instance-id|}}} class=&quot;toccolours&quot; style=&quot;font-size:100%; width:100%; height:{{{height|36}}}{{{height-unit|{{{unit|em}}}}}}; padding:0px; float:left; width:{{{width|10}}}{{{width-unit|{{{unit|em}}}}}}; border:none; background-color:{{{plot-colour|{{{plot-color|}}}}}};&quot;&gt;&lt;!--

 #### Periods ####

 --&gt;{{#if:{{{period1|}}}|{{Draw Bar|text={{{period1-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period1}}}]]&lt;/span&gt;}}}|nudgedown={{{period1-nudge-down|{{#expr:-{{{period1-nudge-up|0}}}}}}}}|nudgeright={{{period1-nudge-right|{{#expr:-{{{period1-nudge-left|0}}}}}}}}|colour={{{period1-colour|{{period_color|{{{period1}}}}}}}}|border={{{period1-border-width|}}}|border-colour={{{period1-border-colour|}}}|border-style={{{period1-border-style|}}}|left={{{period1-left|0}}}|right={{{period1-right|1}}}|from={{{period1-from|-{{period_start|{{{period1}}}}}}}}|to={{{period1-to|-{{period_end|{{{period1}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period2|}}}|{{Draw Bar|text={{{period2-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period2}}}]]&lt;/span&gt;}}}|nudgedown={{{period2-nudge-down|{{#expr:-{{{period2-nudge-up|0}}}}}}}}|nudgeright={{{period2-nudge-right|{{#expr:-{{{period2-nudge-left|0}}}}}}}}|colour={{{period2-colour|{{period_color|{{{period2}}}}}}}}|border={{{period2-border-width|}}}|border-colour={{{period2-border-colour|}}}|border-style={{{period2-border-style|}}}|left={{{period2-left|0}}}|right={{{period2-right|1}}}|from={{{period2-from|-{{period_start|{{{period2}}}}}}}}|to={{{period2-to|-{{period_end|{{{period2}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period3|}}}|{{Draw Bar|text={{{period3-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period3}}}]]&lt;/span&gt;}}}|nudgedown={{{period3-nudge-down|{{#expr:-{{{period3-nudge-up|0}}}}}}}}|nudgeright={{{period3-nudge-right|{{#expr:-{{{period3-nudge-left|0}}}}}}}}|colour={{{period3-colour|{{period_color|{{{period3}}}}}}}}|border={{{period3-border-width|}}}|border-colour={{{period3-border-colour|}}}|border-style={{{period3-border-style|}}}|left={{{period3-left|0}}}|right={{{period3-right|1}}}|from={{{period3-from|-{{period_start|{{{period3}}}}}}}}|to={{{period3-to|-{{period_end|{{{period3}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period4|}}}|{{Draw Bar|text={{{period4-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period4}}}]]&lt;/span&gt;}}}|nudgedown={{{period4-nudge-down|{{#expr:-{{{period4-nudge-up|0}}}}}}}}|nudgeright={{{period4-nudge-right|{{#expr:-{{{period4-nudge-left|0}}}}}}}}|colour={{{period4-colour|{{period_color|{{{period4}}}}}}}}|border={{{period4-border-width|}}}|border-colour={{{period4-border-colour|}}}|border-style={{{period4-border-style|}}}|left={{{period4-left|0}}}|right={{{period4-right|1}}}|from={{{period4-from|-{{period_start|{{{period4}}}}}}}}|to={{{period4-to|-{{period_end|{{{period4}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period5|}}}|{{Draw Bar|text={{{period5-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period5}}}]]&lt;/span&gt;}}}|nudgedown={{{period5-nudge-down|{{#expr:-{{{period5-nudge-up|0}}}}}}}}|nudgeright={{{period5-nudge-right|{{#expr:-{{{period5-nudge-left|0}}}}}}}}|colour={{{period5-colour|{{period_color|{{{period5}}}}}}}}|border={{{period5-border-width|}}}|border-colour={{{period5-border-colour|}}}|border-style={{{period5-border-style|}}}|left={{{period5-left|0}}}|right={{{period5-right|1}}}|from={{{period5-from|-{{period_start|{{{period5}}}}}}}}|to={{{period5-to|-{{period_end|{{{period5}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period6|}}}|{{Draw Bar|text={{{period6-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period6}}}]]&lt;/span&gt;}}}|nudgedown={{{period6-nudge-down|{{#expr:-{{{period6-nudge-up|0}}}}}}}}|nudgeright={{{period6-nudge-right|{{#expr:-{{{period6-nudge-left|0}}}}}}}}|colour={{{period6-colour|{{period_color|{{{period6}}}}}}}}|border={{{period6-border-width|}}}|border-colour={{{period6-border-colour|}}}|border-style={{{period6-border-style|}}}|left={{{period6-left|0}}}|right={{{period6-right|1}}}|from={{{period6-from|-{{period_start|{{{period6}}}}}}}}|to={{{period6-to|-{{period_end|{{{period6}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period7|}}}|{{Draw Bar|text={{{period7-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period7}}}]]&lt;/span&gt;}}}|nudgedown={{{period7-nudge-down|{{#expr:-{{{period7-nudge-up|0}}}}}}}}|nudgeright={{{period7-nudge-right|{{#expr:-{{{period7-nudge-left|0}}}}}}}}|colour={{{period7-colour|{{period_color|{{{period7}}}}}}}}|border={{{period7-border-width|}}}|border-colour={{{period7-border-colour|}}}|border-style={{{period7-border-style|}}}|left={{{period7-left|0}}}|right={{{period7-right|1}}}|from={{{period7-from|-{{period_start|{{{period7}}}}}}}}|to={{{period7-to|-{{period_end|{{{period7}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period8|}}}|{{Draw Bar|text={{{period8-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period8}}}]]&lt;/span&gt;}}}|nudgedown={{{period8-nudge-down|{{#expr:-{{{period8-nudge-up|0}}}}}}}}|nudgeright={{{period8-nudge-right|{{#expr:-{{{period8-nudge-left|0}}}}}}}}|colour={{{period8-colour|{{period_color|{{{period8}}}}}}}}|border={{{period8-border-width|}}}|border-colour={{{period8-border-colour|}}}|border-style={{{period8-border-style|}}}|left={{{period8-left|0}}}|right={{{period8-right|1}}}|from={{{period8-from|-{{period_start|{{{period8}}}}}}}}|to={{{period8-to|-{{period_end|{{{period8}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period9|}}}|{{Draw Bar|text={{{period9-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period9}}}]]&lt;/span&gt;}}}|nudgedown={{{period9-nudge-down|{{#expr:-{{{period9-nudge-up|0}}}}}}}}|nudgeright={{{period9-nudge-right|{{#expr:-{{{period9-nudge-left|0}}}}}}}}|colour={{{period9-colour|{{period_color|{{{period9}}}}}}}}|border={{{period9-border-width|}}}|border-colour={{{period9-border-colour|}}}|border-style={{{period9-border-style|}}}|left={{{period9-left|0}}}|right={{{period9-right|1}}}|from={{{period9-from|-{{period_start|{{{period9}}}}}}}}|to={{{period9-to|-{{period_end|{{{period9}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period10|}}}|{{Draw Bar|text={{{period10-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period10}}}]]&lt;/span&gt;}}}|nudgedown={{{period10-nudge-down|{{#expr:-{{{period10-nudge-up|0}}}}}}}}|nudgeright={{{period10-nudge-right|{{#expr:-{{{period10-nudge-left|0}}}}}}}}|colour={{{period10-colour|{{period_color|{{{period10}}}}}}}}|border={{{period10-border-width|}}}|border-colour={{{period10-border-colour|}}}|border-style={{{period10-border-style|}}}|left={{{period10-left|0}}}|right={{{period10-right|1}}}|from={{{period10-from|-{{period_start|{{{period10}}}}}}}}|to={{{period10-to|-{{period_end|{{{period10}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period11|}}}|{{Draw Bar|text={{{period11-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period11}}}]]&lt;/span&gt;}}}|nudgedown={{{period11-nudge-down|{{#expr:-{{{period11-nudge-up|0}}}}}}}}|nudgeright={{{period11-nudge-right|{{#expr:-{{{period11-nudge-left|0}}}}}}}}|colour={{{period11-colour|{{period_color|{{{period11}}}}}}}}|border={{{period11-border-width|}}}|border-colour={{{period11-border-colour|}}}|border-style={{{period11-border-style|}}}|left={{{period11-left|0}}}|right={{{period11-right|1}}}|from={{{period11-from|-{{period_start|{{{period11}}}}}}}}|to={{{period11-to|-{{period_end|{{{period11}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period12|}}}|{{Draw Bar|text={{{period12-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period12}}}]]&lt;/span&gt;}}}|nudgedown={{{period12-nudge-down|{{#expr:-{{{period12-nudge-up|0}}}}}}}}|nudgeright={{{period12-nudge-right|{{#expr:-{{{period12-nudge-left|0}}}}}}}}|colour={{{period12-colour|{{period_color|{{{period12}}}}}}}}|border={{{period12-border-width|}}}|border-colour={{{period12-border-colour|}}}|border-style={{{period12-border-style|}}}|left={{{period12-left|0}}}|right={{{period12-right|1}}}|from={{{period12-from|-{{period_start|{{{period12}}}}}}}}|to={{{period12-to|-{{period_end|{{{period12}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period13|}}}|{{Draw Bar|text={{{period13-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period13}}}]]&lt;/span&gt;}}}|nudgedown={{{period13-nudge-down|{{#expr:-{{{period13-nudge-up|0}}}}}}}}|nudgeright={{{period13-nudge-right|{{#expr:-{{{period13-nudge-left|0}}}}}}}}|colour={{{period13-colour|{{period_color|{{{period13}}}}}}}}|border={{{period13-border-width|}}}|border-colour={{{period13-border-colour|}}}|border-style={{{period13-border-style|}}}|left={{{period13-left|0}}}|right={{{period13-right|1}}}|from={{{period13-from|-{{period_start|{{{period13}}}}}}}}|to={{{period13-to|-{{period_end|{{{period13}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period14|}}}|{{Draw Bar|text={{{period14-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period14}}}]]&lt;/span&gt;}}}|nudgedown={{{period14-nudge-down|{{#expr:-{{{period14-nudge-up|0}}}}}}}}|nudgeright={{{period14-nudge-right|{{#expr:-{{{period14-nudge-left|0}}}}}}}}|colour={{{period14-colour|{{period_color|{{{period14}}}}}}}}|border={{{period14-border-width|}}}|border-colour={{{period14-border-colour|}}}|border-style={{{period14-border-style|}}}|left={{{period14-left|0}}}|right={{{period14-right|1}}}|from={{{period14-from|-{{period_start|{{{period14}}}}}}}}|to={{{period14-to|-{{period_end|{{{period14}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period15|}}}|{{Draw Bar|text={{{period15-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period15}}}]]&lt;/span&gt;}}}|nudgedown={{{period15-nudge-down|{{#expr:-{{{period15-nudge-up|0}}}}}}}}|nudgeright={{{period15-nudge-right|{{#expr:-{{{period15-nudge-left|0}}}}}}}}|colour={{{period15-colour|{{period_color|{{{period15}}}}}}}}|border={{{period15-border-width|}}}|border-colour={{{period15-border-colour|}}}|border-style={{{period15-border-style|}}}|left={{{period15-left|0}}}|right={{{period15-right|1}}}|from={{{period15-from|-{{period_start|{{{period15}}}}}}}}|to={{{period15-to|-{{period_end|{{{period15}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period16|}}}|{{Draw Bar|text={{{period16-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period16}}}]]&lt;/span&gt;}}}|nudgedown={{{period16-nudge-down|{{#expr:-{{{period16-nudge-up|0}}}}}}}}|nudgeright={{{period16-nudge-right|{{#expr:-{{{period16-nudge-left|0}}}}}}}}|colour={{{period16-colour|{{period_color|{{{period16}}}}}}}}|border={{{period16-border-width|}}}|border-colour={{{period16-border-colour|}}}|border-style={{{period16-border-style|}}}|left={{{period16-left|0}}}|right={{{period16-right|1}}}|from={{{period16-from|-{{period_start|{{{period16}}}}}}}}|to={{{period16-to|-{{period_end|{{{period16}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period17|}}}|{{Draw Bar|text={{{period17-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period17}}}]]&lt;/span&gt;}}}|nudgedown={{{period17-nudge-down|{{#expr:-{{{period17-nudge-up|0}}}}}}}}|nudgeright={{{period17-nudge-right|{{#expr:-{{{period17-nudge-left|0}}}}}}}}|colour={{{period17-colour|{{period_color|{{{period17}}}}}}}}|border={{{period17-border-width|}}}|border-colour={{{period17-border-colour|}}}|border-style={{{period17-border-style|}}}|left={{{period17-left|0}}}|right={{{period17-right|1}}}|from={{{period17-from|-{{period_start|{{{period17}}}}}}}}|to={{{period17-to|-{{period_end|{{{period17}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period18|}}}|{{Draw Bar|text={{{period18-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period18}}}]]&lt;/span&gt;}}}|nudgedown={{{period18-nudge-down|{{#expr:-{{{period18-nudge-up|0}}}}}}}}|nudgeright={{{period18-nudge-right|{{#expr:-{{{period18-nudge-left|0}}}}}}}}|colour={{{period18-colour|{{period_color|{{{period18}}}}}}}}|border={{{period18-border-width|}}}|border-colour={{{period18-border-colour|}}}|border-style={{{period18-border-style|}}}|left={{{period18-left|0}}}|right={{{period18-right|1}}}|from={{{period18-from|-{{period_start|{{{period18}}}}}}}}|to={{{period18-to|-{{period_end|{{{period18}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period19|}}}|{{Draw Bar|text={{{period19-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period19}}}]]&lt;/span&gt;}}}|nudgedown={{{period19-nudge-down|{{#expr:-{{{period19-nudge-up|0}}}}}}}}|nudgeright={{{period19-nudge-right|{{#expr:-{{{period19-nudge-left|0}}}}}}}}|colour={{{period19-colour|{{period_color|{{{period19}}}}}}}}|border={{{period19-border-width|}}}|border-colour={{{period19-border-colour|}}}|border-style={{{period19-border-style|}}}|left={{{period19-left|0}}}|right={{{period19-right|1}}}|from={{{period19-from|-{{period_start|{{{period19}}}}}}}}|to={{{period19-to|-{{period_end|{{{period19}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period20|}}}|{{Draw Bar|text={{{period20-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period20}}}]]&lt;/span&gt;}}}|nudgedown={{{period20-nudge-down|{{#expr:-{{{period20-nudge-up|0}}}}}}}}|nudgeright={{{period20-nudge-right|{{#expr:-{{{period20-nudge-left|0}}}}}}}}|colour={{{period20-colour|{{period_color|{{{period20}}}}}}}}|border={{{period20-border-width|}}}|border-colour={{{period20-border-colour|}}}|border-style={{{period20-border-style|}}}|left={{{period20-left|0}}}|right={{{period20-right|1}}}|from={{{period20-from|-{{period_start|{{{period20}}}}}}}}|to={{{period20-to|-{{period_end|{{{period20}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period21|}}}|{{Draw Bar|text={{{period21-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period21}}}]]&lt;/span&gt;}}}|nudgedown={{{period21-nudge-down|{{#expr:-{{{period21-nudge-up|0}}}}}}}}|nudgeright={{{period21-nudge-right|{{#expr:-{{{period21-nudge-left|0}}}}}}}}|colour={{{period21-colour|{{period_color|{{{period21}}}}}}}}|border={{{period21-border-width|}}}|border-colour={{{period21-border-colour|}}}|border-style={{{period21-border-style|}}}|left={{{period21-left|0}}}|right={{{period21-right|1}}}|from={{{period21-from|-{{period_start|{{{period21}}}}}}}}|to={{{period21-to|-{{period_end|{{{period21}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period22|}}}|{{Draw Bar|text={{{period22-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period22}}}]]&lt;/span&gt;}}}|nudgedown={{{period22-nudge-down|{{#expr:-{{{period22-nudge-up|0}}}}}}}}|nudgeright={{{period22-nudge-right|{{#expr:-{{{period22-nudge-left|0}}}}}}}}|colour={{{period22-colour|{{period_color|{{{period22}}}}}}}}|border={{{period22-border-width|}}}|border-colour={{{period22-border-colour|}}}|border-style={{{period22-border-style|}}}|left={{{period22-left|0}}}|right={{{period22-right|1}}}|from={{{period22-from|-{{period_start|{{{period22}}}}}}}}|to={{{period22-to|-{{period_end|{{{period22}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period23|}}}|{{Draw Bar|text={{{period23-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period23}}}]]&lt;/span&gt;}}}|nudgedown={{{period23-nudge-down|{{#expr:-{{{period23-nudge-up|0}}}}}}}}|nudgeright={{{period23-nudge-right|{{#expr:-{{{period23-nudge-left|0}}}}}}}}|colour={{{period23-colour|{{period_color|{{{period23}}}}}}}}|border={{{period23-border-width|}}}|border-colour={{{period23-border-colour|}}}|border-style={{{period23-border-style|}}}|left={{{period23-left|0}}}|right={{{period23-right|1}}}|from={{{period23-from|-{{period_start|{{{period23}}}}}}}}|to={{{period23-to|-{{period_end|{{{period23}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period24|}}}|{{Draw Bar|text={{{period24-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period24}}}]]&lt;/span&gt;}}}|nudgedown={{{period24-nudge-down|{{#expr:-{{{period24-nudge-up|0}}}}}}}}|nudgeright={{{period24-nudge-right|{{#expr:-{{{period24-nudge-left|0}}}}}}}}|colour={{{period24-colour|{{period_color|{{{period24}}}}}}}}|border={{{period24-border-width|}}}|border-colour={{{period24-border-colour|}}}|border-style={{{period24-border-style|}}}|left={{{period24-left|0}}}|right={{{period24-right|1}}}|from={{{period24-from|-{{period_start|{{{period24}}}}}}}}|to={{{period24-to|-{{period_end|{{{period24}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period25|}}}|{{Draw Bar|text={{{period25-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period25}}}]]&lt;/span&gt;}}}|nudgedown={{{period25-nudge-down|{{#expr:-{{{period25-nudge-up|0}}}}}}}}|nudgeright={{{period25-nudge-right|{{#expr:-{{{period25-nudge-left|0}}}}}}}}|colour={{{period25-colour|{{period_color|{{{period25}}}}}}}}|border={{{period25-border-width|}}}|border-colour={{{period25-border-colour|}}}|border-style={{{period25-border-style|}}}|left={{{period25-left|0}}}|right={{{period25-right|1}}}|from={{{period25-from|-{{period_start|{{{period25}}}}}}}}|to={{{period25-to|-{{period_end|{{{period25}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period26|}}}|{{Draw Bar|text={{{period26-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period26}}}]]&lt;/span&gt;}}}|nudgedown={{{period26-nudge-down|{{#expr:-{{{period26-nudge-up|0}}}}}}}}|nudgeright={{{period26-nudge-right|{{#expr:-{{{period26-nudge-left|0}}}}}}}}|colour={{{period26-colour|{{period_color|{{{period26}}}}}}}}|border={{{period26-border-width|}}}|border-colour={{{period26-border-colour|}}}|border-style={{{period26-border-style|}}}|left={{{period26-left|0}}}|right={{{period26-right|1}}}|from={{{period26-from|-{{period_start|{{{period26}}}}}}}}|to={{{period26-to|-{{period_end|{{{period26}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period27|}}}|{{Draw Bar|text={{{period27-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period27}}}]]&lt;/span&gt;}}}|nudgedown={{{period27-nudge-down|{{#expr:-{{{period27-nudge-up|0}}}}}}}}|nudgeright={{{period27-nudge-right|{{#expr:-{{{period27-nudge-left|0}}}}}}}}|colour={{{period27-colour|{{period_color|{{{period27}}}}}}}}|border={{{period27-border-width|}}}|border-colour={{{period27-border-colour|}}}|border-style={{{period27-border-style|}}}|left={{{period27-left|0}}}|right={{{period27-right|1}}}|from={{{period27-from|-{{period_start|{{{period27}}}}}}}}|to={{{period27-to|-{{period_end|{{{period27}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{period28|}}}|{{Draw Bar|text={{{period28-text|&lt;span style=&quot;font-size:90%&quot;&gt;[[{{{period28}}}]]&lt;/span&gt;}}}|nudgedown={{{period28-nudge-down|{{#expr:-{{{period28-nudge-up|0}}}}}}}}|nudgeright={{{period28-nudge-right|{{#expr:-{{{period28-nudge-left|0}}}}}}}}|colour={{{period28-colour|{{period_color|{{{period28}}}}}}}}|border={{{period28-border-width|}}}|border-colour={{{period28-border-colour|}}}|border-style={{{period28-border-style|}}}|left={{{period28-left|0}}}|right={{{period28-right|1}}}|from={{{period28-from|-{{period_start|{{{period28}}}}}}}}|to={{{period28-to|-{{period_end|{{{period28}}}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}&lt;!--

 #### Bars ####

 --&gt;{{#if:{{{bar1-left|{{{bar1-right|{{{bar1-from|{{{bar1-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar1-text|&amp;nbsp;}}}|nudgedown={{{bar1-nudge-down|{{#expr:-{{{bar1-nudge-up|0}}}}}}}}|nudgeright={{{bar1-nudge-right|{{#expr:-{{{bar1-nudge-left|0}}}}}}}}|colour={{{bar1-colour|#6ca}}}|border={{{bar1-border-width|}}}|border-colour={{{bar1-border-colour|}}}|border-style={{{bar1-border-style|}}}|left={{{bar1-left|0}}}|right={{{bar1-right|1}}}|from={{{bar1-from|{{{from}}}}}}|to={{{bar1-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar2-left|{{{bar2-right|{{{bar2-from|{{{bar2-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar2-text|&amp;nbsp;}}}|nudgedown={{{bar2-nudge-down|{{#expr:-{{{bar2-nudge-up|0}}}}}}}}|nudgeright={{{bar2-nudge-right|{{#expr:-{{{bar2-nudge-left|0}}}}}}}}|colour={{{bar2-colour|#ff9}}}|border={{{bar2-border-width|}}}|border-colour={{{bar2-border-colour|}}}|border-style={{{bar2-border-style|}}}|left={{{bar2-left|0}}}|right={{{bar2-right|1}}}|from={{{bar2-from|{{{from}}}}}}|to={{{bar2-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar3-left|{{{bar3-right|{{{bar3-from|{{{bar3-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar3-text|&amp;nbsp;}}}|nudgedown={{{bar3-nudge-down|{{#expr:-{{{bar3-nudge-up|0}}}}}}}}|nudgeright={{{bar3-nudge-right|{{#expr:-{{{bar3-nudge-left|0}}}}}}}}|colour={{{bar3-colour|#6cf}}}|border={{{bar3-border-width|}}}|border-colour={{{bar3-border-colour|}}}|border-style={{{bar3-border-style|}}}|left={{{bar3-left|0}}}|right={{{bar3-right|1}}}|from={{{bar3-from|{{{from}}}}}}|to={{{bar3-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar4-left|{{{bar4-right|{{{bar4-from|{{{bar4-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar4-text|&amp;nbsp;}}}|nudgedown={{{bar4-nudge-down|{{#expr:-{{{bar4-nudge-up|0}}}}}}}}|nudgeright={{{bar4-nudge-right|{{#expr:-{{{bar4-nudge-left|0}}}}}}}}|colour={{{bar4-colour|#c96}}}|border={{{bar4-border-width|}}}|border-colour={{{bar4-border-colour|}}}|border-style={{{bar4-border-style|}}}|left={{{bar4-left|0}}}|right={{{bar4-right|1}}}|from={{{bar4-from|{{{from}}}}}}|to={{{bar4-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar5-left|{{{bar5-right|{{{bar5-from|{{{bar5-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar5-text|&amp;nbsp;}}}|nudgedown={{{bar5-nudge-down|{{#expr:-{{{bar5-nudge-up|0}}}}}}}}|nudgeright={{{bar5-nudge-right|{{#expr:-{{{bar5-nudge-left|0}}}}}}}}|colour={{{bar5-colour|#fcc}}}|border={{{bar5-border-width|}}}|border-colour={{{bar5-border-colour|}}}|border-style={{{bar5-border-style|}}}|left={{{bar5-left|0}}}|right={{{bar5-right|1}}}|from={{{bar5-from|{{{from}}}}}}|to={{{bar5-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar6-left|{{{bar6-right|{{{bar6-from|{{{bar6-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar6-text|&amp;nbsp;}}}|nudgedown={{{bar6-nudge-down|{{#expr:-{{{bar6-nudge-up|0}}}}}}}}|nudgeright={{{bar6-nudge-right|{{#expr:-{{{bar6-nudge-left|0}}}}}}}}|colour={{{bar6-colour|#9f9}}}|border={{{bar6-border-width|}}}|border-colour={{{bar6-border-colour|}}}|border-style={{{bar6-border-style|}}}|left={{{bar6-left|0}}}|right={{{bar6-right|1}}}|from={{{bar6-from|{{{from}}}}}}|to={{{bar6-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar7-left|{{{bar7-right|{{{bar7-from|{{{bar7-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar7-text|&amp;nbsp;}}}|nudgedown={{{bar7-nudge-down|{{#expr:-{{{bar7-nudge-up|0}}}}}}}}|nudgeright={{{bar7-nudge-right|{{#expr:-{{{bar7-nudge-left|0}}}}}}}}|colour={{{bar7-colour|#96c}}}|border={{{bar7-border-width|}}}|border-colour={{{bar7-border-colour|}}}|border-style={{{bar7-border-style|}}}|left={{{bar7-left|0}}}|right={{{bar7-right|1}}}|from={{{bar7-from|{{{from}}}}}}|to={{{bar7-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar8-left|{{{bar8-right|{{{bar8-from|{{{bar8-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar8-text|&amp;nbsp;}}}|nudgedown={{{bar8-nudge-down|{{#expr:-{{{bar8-nudge-up|0}}}}}}}}|nudgeright={{{bar8-nudge-right|{{#expr:-{{{bar8-nudge-left|0}}}}}}}}|colour={{{bar8-colour|#cc6}}}|border={{{bar8-border-width|}}}|border-colour={{{bar8-border-colour|}}}|border-style={{{bar8-border-style|}}}|left={{{bar8-left|0}}}|right={{{bar8-right|1}}}|from={{{bar8-from|{{{from}}}}}}|to={{{bar8-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar9-left|{{{bar9-right|{{{bar9-from|{{{bar9-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar9-text|&amp;nbsp;}}}|nudgedown={{{bar9-nudge-down|{{#expr:-{{{bar9-nudge-up|0}}}}}}}}|nudgeright={{{bar9-nudge-right|{{#expr:-{{{bar9-nudge-left|0}}}}}}}}|colour={{{bar9-colour|#ccc}}}|border={{{bar9-border-width|}}}|border-colour={{{bar9-border-colour|}}}|border-style={{{bar9-border-style|}}}|left={{{bar9-left|0}}}|right={{{bar9-right|1}}}|from={{{bar9-from|{{{from}}}}}}|to={{{bar9-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar10-left|{{{bar10-right|{{{bar10-from|{{{bar10-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar10-text|&amp;nbsp;}}}|nudgedown={{{bar10-nudge-down|{{#expr:-{{{bar10-nudge-up|0}}}}}}}}|nudgeright={{{bar10-nudge-right|{{#expr:-{{{bar10-nudge-left|0}}}}}}}}|colour={{{bar10-colour|#f66}}}|border={{{bar10-border-width|}}}|border-colour={{{bar10-border-colour|}}}|border-style={{{bar10-border-style|}}}|left={{{bar10-left|0}}}|right={{{bar10-right|1}}}|from={{{bar10-from|{{{from}}}}}}|to={{{bar10-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar11-left|{{{bar11-right|{{{bar11-from|{{{bar11-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar11-text|&amp;nbsp;}}}|nudgedown={{{bar11-nudge-down|{{#expr:-{{{bar11-nudge-up|0}}}}}}}}|nudgeright={{{bar11-nudge-right|{{#expr:-{{{bar11-nudge-left|0}}}}}}}}|colour={{{bar11-colour|#6c6}}}|border={{{bar11-border-width|}}}|border-colour={{{bar11-border-colour|}}}|border-style={{{bar11-border-style|}}}|left={{{bar11-left|0}}}|right={{{bar11-right|1}}}|from={{{bar11-from|{{{from}}}}}}|to={{{bar11-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar12-left|{{{bar12-right|{{{bar12-from|{{{bar12-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar12-text|&amp;nbsp;}}}|nudgedown={{{bar12-nudge-down|{{#expr:-{{{bar12-nudge-up|0}}}}}}}}|nudgeright={{{bar12-nudge-right|{{#expr:-{{{bar12-nudge-left|0}}}}}}}}|colour={{{bar12-colour|#99f}}}|border={{{bar12-border-width|}}}|border-colour={{{bar12-border-colour|}}}|border-style={{{bar12-border-style|}}}|left={{{bar12-left|0}}}|right={{{bar12-right|1}}}|from={{{bar12-from|{{{from}}}}}}|to={{{bar12-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar13-left|{{{bar13-right|{{{bar13-from|{{{bar13-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar13-text|&amp;nbsp;}}}|nudgedown={{{bar13-nudge-down|{{#expr:-{{{bar13-nudge-up|0}}}}}}}}|nudgeright={{{bar13-nudge-right|{{#expr:-{{{bar13-nudge-left|0}}}}}}}}|colour={{{bar13-colour|#c66}}}|border={{{bar13-border-width|}}}|border-colour={{{bar13-border-colour|}}}|border-style={{{bar13-border-style|}}}|left={{{bar13-left|0}}}|right={{{bar13-right|1}}}|from={{{bar13-from|{{{from}}}}}}|to={{{bar13-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar14-left|{{{bar14-right|{{{bar14-from|{{{bar14-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar14-text|&amp;nbsp;}}}|nudgedown={{{bar14-nudge-down|{{#expr:-{{{bar14-nudge-up|0}}}}}}}}|nudgeright={{{bar14-nudge-right|{{#expr:-{{{bar14-nudge-left|0}}}}}}}}|colour={{{bar14-colour|#f9c}}}|border={{{bar14-border-width|}}}|border-colour={{{bar14-border-colour|}}}|border-style={{{bar14-border-style|}}}|left={{{bar14-left|0}}}|right={{{bar14-right|1}}}|from={{{bar14-from|{{{from}}}}}}|to={{{bar14-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar15-left|{{{bar15-right|{{{bar15-from|{{{bar15-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar15-text|&amp;nbsp;}}}|nudgedown={{{bar15-nudge-down|{{#expr:-{{{bar15-nudge-up|0}}}}}}}}|nudgeright={{{bar15-nudge-right|{{#expr:-{{{bar15-nudge-left|0}}}}}}}}|colour={{{bar15-colour|#396}}}|border={{{bar15-border-width|}}}|border-colour={{{bar15-border-colour|}}}|border-style={{{bar15-border-style|}}}|left={{{bar15-left|0}}}|right={{{bar15-right|1}}}|from={{{bar15-from|{{{from}}}}}}|to={{{bar15-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar16-left|{{{bar16-right|{{{bar16-from|{{{bar16-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar16-text|&amp;nbsp;}}}|nudgedown={{{bar16-nudge-down|{{#expr:-{{{bar16-nudge-up|0}}}}}}}}|nudgeright={{{bar16-nudge-right|{{#expr:-{{{bar16-nudge-left|0}}}}}}}}|colour={{{bar16-colour|#ff3}}}|border={{{bar16-border-width|}}}|border-colour={{{bar16-border-colour|}}}|border-style={{{bar16-border-style|}}}|left={{{bar16-left|0}}}|right={{{bar16-right|1}}}|from={{{bar16-from|{{{from}}}}}}|to={{{bar16-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar17-left|{{{bar17-right|{{{bar17-from|{{{bar17-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar17-text|&amp;nbsp;}}}|nudgedown={{{bar17-nudge-down|{{#expr:-{{{bar17-nudge-up|0}}}}}}}}|nudgeright={{{bar17-nudge-right|{{#expr:-{{{bar17-nudge-left|0}}}}}}}}|colour={{{bar17-colour|#06c}}}|border={{{bar17-border-width|}}}|border-colour={{{bar17-border-colour|}}}|border-style={{{bar17-border-style|}}}|left={{{bar17-left|0}}}|right={{{bar17-right|1}}}|from={{{bar17-from|{{{from}}}}}}|to={{{bar17-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar18-left|{{{bar18-right|{{{bar18-from|{{{bar18-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar18-text|&amp;nbsp;}}}|nudgedown={{{bar18-nudge-down|{{#expr:-{{{bar18-nudge-up|0}}}}}}}}|nudgeright={{{bar18-nudge-right|{{#expr:-{{{bar18-nudge-left|0}}}}}}}}|colour={{{bar18-colour|#963}}}|border={{{bar18-border-width|}}}|border-colour={{{bar18-border-colour|}}}|border-style={{{bar18-border-style|}}}|left={{{bar18-left|0}}}|right={{{bar18-right|1}}}|from={{{bar18-from|{{{from}}}}}}|to={{{bar18-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar19-left|{{{bar19-right|{{{bar19-from|{{{bar19-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar19-text|&amp;nbsp;}}}|nudgedown={{{bar19-nudge-down|{{#expr:-{{{bar19-nudge-up|0}}}}}}}}|nudgeright={{{bar19-nudge-right|{{#expr:-{{{bar19-nudge-left|0}}}}}}}}|colour={{{bar19-colour|#c9c}}}|border={{{bar19-border-width|}}}|border-colour={{{bar19-border-colour|}}}|border-style={{{bar19-border-style|}}}|left={{{bar19-left|0}}}|right={{{bar19-right|1}}}|from={{{bar19-from|{{{from}}}}}}|to={{{bar19-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar20-left|{{{bar20-right|{{{bar20-from|{{{bar20-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar20-text|&amp;nbsp;}}}|nudgedown={{{bar20-nudge-down|{{#expr:-{{{bar20-nudge-up|0}}}}}}}}|nudgeright={{{bar20-nudge-right|{{#expr:-{{{bar20-nudge-left|0}}}}}}}}|colour={{{bar20-colour|#9c6}}}|border={{{bar20-border-width|}}}|border-colour={{{bar20-border-colour|}}}|border-style={{{bar20-border-style|}}}|left={{{bar20-left|0}}}|right={{{bar20-right|1}}}|from={{{bar20-from|{{{from}}}}}}|to={{{bar20-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar21-left|{{{bar21-right|{{{bar21-from|{{{bar21-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar21-text|&amp;nbsp;}}}|nudgedown={{{bar21-nudge-down|{{#expr:-{{{bar21-nudge-up|0}}}}}}}}|nudgeright={{{bar21-nudge-right|{{#expr:-{{{bar21-nudge-left|0}}}}}}}}|colour={{{bar21-colour|#c63}}}|border={{{bar21-border-width|}}}|border-colour={{{bar21-border-colour|}}}|border-style={{{bar21-border-style|}}}|left={{{bar21-left|0}}}|right={{{bar21-right|1}}}|from={{{bar21-from|{{{from}}}}}}|to={{{bar21-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar22-left|{{{bar22-right|{{{bar22-from|{{{bar22-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar22-text|&amp;nbsp;}}}|nudgedown={{{bar22-nudge-down|{{#expr:-{{{bar22-nudge-up|0}}}}}}}}|nudgeright={{{bar22-nudge-right|{{#expr:-{{{bar22-nudge-left|0}}}}}}}}|colour={{{bar22-colour|#c96}}}|border={{{bar22-border-width|}}}|border-colour={{{bar22-border-colour|}}}|border-style={{{bar22-border-style|}}}|left={{{bar22-left|0}}}|right={{{bar22-right|1}}}|from={{{bar22-from|{{{from}}}}}}|to={{{bar22-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar23-left|{{{bar23-right|{{{bar23-from|{{{bar23-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar23-text|&amp;nbsp;}}}|nudgedown={{{bar23-nudge-down|{{#expr:-{{{bar23-nudge-up|0}}}}}}}}|nudgeright={{{bar23-nudge-right|{{#expr:-{{{bar23-nudge-left|0}}}}}}}}|colour={{{bar23-colour|#999}}}|border={{{bar23-border-width|}}}|border-colour={{{bar23-border-colour|}}}|border-style={{{bar23-border-style|}}}|left={{{bar23-left|0}}}|right={{{bar23-right|1}}}|from={{{bar23-from|{{{from}}}}}}|to={{{bar23-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar24-left|{{{bar24-right|{{{bar24-from|{{{bar24-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar24-text|&amp;nbsp;}}}|nudgedown={{{bar24-nudge-down|{{#expr:-{{{bar24-nudge-up|0}}}}}}}}|nudgeright={{{bar24-nudge-right|{{#expr:-{{{bar24-nudge-left|0}}}}}}}}|colour={{{bar24-colour|#c03}}}|border={{{bar24-border-width|}}}|border-colour={{{bar24-border-colour|}}}|border-style={{{bar24-border-style|}}}|left={{{bar24-left|0}}}|right={{{bar24-right|1}}}|from={{{bar24-from|{{{from}}}}}}|to={{{bar24-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar25-left|{{{bar25-right|{{{bar25-from|{{{bar25-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar25-text|&amp;nbsp;}}}|nudgedown={{{bar25-nudge-down|{{#expr:-{{{bar25-nudge-up|0}}}}}}}}|nudgeright={{{bar25-nudge-right|{{#expr:-{{{bar25-nudge-left|0}}}}}}}}|colour={{{bar25-colour|#393}}}|border={{{bar25-border-width|}}}|border-colour={{{bar25-border-colour|}}}|border-style={{{bar25-border-style|}}}|left={{{bar25-left|0}}}|right={{{bar25-right|1}}}|from={{{bar25-from|{{{from}}}}}}|to={{{bar25-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar26-left|{{{bar26-right|{{{bar26-from|{{{bar26-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar26-text|&amp;nbsp;}}}|nudgedown={{{bar26-nudge-down|{{#expr:-{{{bar26-nudge-up|0}}}}}}}}|nudgeright={{{bar26-nudge-right|{{#expr:-{{{bar26-nudge-left|0}}}}}}}}|colour={{{bar26-colour|#939}}}|border={{{bar26-border-width|}}}|border-colour={{{bar26-border-colour|}}}|border-style={{{bar26-border-style|}}}|left={{{bar26-left|0}}}|right={{{bar26-right|1}}}|from={{{bar26-from|{{{from}}}}}}|to={{{bar26-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar27-left|{{{bar27-right|{{{bar27-from|{{{bar27-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar27-text|&amp;nbsp;}}}|nudgedown={{{bar27-nudge-down|{{#expr:-{{{bar27-nudge-up|0}}}}}}}}|nudgeright={{{bar27-nudge-right|{{#expr:-{{{bar27-nudge-left|0}}}}}}}}|colour={{{bar27-colour|#996}}}|border={{{bar27-border-width|}}}|border-colour={{{bar27-border-colour|}}}|border-style={{{bar27-border-style|}}}|left={{{bar27-left|0}}}|right={{{bar27-right|1}}}|from={{{bar27-from|{{{from}}}}}}|to={{{bar27-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar28-left|{{{bar28-right|{{{bar28-from|{{{bar28-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar28-text|&amp;nbsp;}}}|nudgedown={{{bar28-nudge-down|{{#expr:-{{{bar28-nudge-up|0}}}}}}}}|nudgeright={{{bar28-nudge-right|{{#expr:-{{{bar28-nudge-left|0}}}}}}}}|colour={{{bar28-colour|#f69}}}|border={{{bar28-border-width|}}}|border-colour={{{bar28-border-colour|}}}|border-style={{{bar28-border-style|}}}|left={{{bar28-left|0}}}|right={{{bar28-right|1}}}|from={{{bar28-from|{{{from}}}}}}|to={{{bar28-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar28-left|{{{bar28-right|{{{bar28-from|{{{bar28-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar28-text|&amp;nbsp;}}}|nudgedown={{{bar28-nudge-down|{{#expr:-{{{bar28-nudge-up|0}}}}}}}}|nudgeright={{{bar28-nudge-right|{{#expr:-{{{bar28-nudge-left|0}}}}}}}}|colour={{{bar28-colour|#f69}}}|border={{{bar28-border-width|}}}|border-colour={{{bar28-border-colour|}}}|border-style={{{bar28-border-style|}}}|left={{{bar28-left|0}}}|right={{{bar28-right|1}}}|from={{{bar28-from|{{{from}}}}}}|to={{{bar28-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar29-left|{{{bar29-right|{{{bar29-from|{{{bar29-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar29-text|&amp;nbsp;}}}|nudgedown={{{bar29-nudge-down|{{#expr:-{{{bar29-nudge-up|0}}}}}}}}|nudgeright={{{bar29-nudge-right|{{#expr:-{{{bar29-nudge-left|0}}}}}}}}|colour={{{bar29-colour|#f69}}}|border={{{bar29-border-width|}}}|border-colour={{{bar29-border-colour|}}}|border-style={{{bar29-border-style|}}}|left={{{bar29-left|0}}}|right={{{bar29-right|1}}}|from={{{bar29-from|{{{from}}}}}}|to={{{bar29-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar30-left|{{{bar30-right|{{{bar30-from|{{{bar30-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar30-text|&amp;nbsp;}}}|nudgedown={{{bar30-nudge-down|{{#expr:-{{{bar30-nudge-up|0}}}}}}}}|nudgeright={{{bar30-nudge-right|{{#expr:-{{{bar30-nudge-left|0}}}}}}}}|colour={{{bar30-colour|#f69}}}|border={{{bar30-border-width|}}}|border-colour={{{bar30-border-colour|}}}|border-style={{{bar30-border-style|}}}|left={{{bar30-left|0}}}|right={{{bar30-right|1}}}|from={{{bar30-from|{{{from}}}}}}|to={{{bar30-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar31-left|{{{bar31-right|{{{bar31-from|{{{bar31-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar31-text|&amp;nbsp;}}}|nudgedown={{{bar31-nudge-down|{{#expr:-{{{bar31-nudge-up|0}}}}}}}}|nudgeright={{{bar31-nudge-right|{{#expr:-{{{bar31-nudge-left|0}}}}}}}}|colour={{{bar31-colour|#f69}}}|border={{{bar31-border-width|}}}|border-colour={{{bar31-border-colour|}}}|border-style={{{bar31-border-style|}}}|left={{{bar31-left|0}}}|right={{{bar31-right|1}}}|from={{{bar31-from|{{{from}}}}}}|to={{{bar31-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar32-left|{{{bar32-right|{{{bar32-from|{{{bar32-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar32-text|&amp;nbsp;}}}|nudgedown={{{bar32-nudge-down|{{#expr:-{{{bar32-nudge-up|0}}}}}}}}|nudgeright={{{bar32-nudge-right|{{#expr:-{{{bar32-nudge-left|0}}}}}}}}|colour={{{bar32-colour|#f69}}}|border={{{bar32-border-width|}}}|border-colour={{{bar32-border-colour|}}}|border-style={{{bar32-border-style|}}}|left={{{bar32-left|0}}}|right={{{bar32-right|1}}}|from={{{bar32-from|{{{from}}}}}}|to={{{bar32-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar33-left|{{{bar33-right|{{{bar33-from|{{{bar33-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar33-text|&amp;nbsp;}}}|nudgedown={{{bar33-nudge-down|{{#expr:-{{{bar33-nudge-up|0}}}}}}}}|nudgeright={{{bar33-nudge-right|{{#expr:-{{{bar33-nudge-left|0}}}}}}}}|colour={{{bar33-colour|#f69}}}|border={{{bar33-border-width|}}}|border-colour={{{bar33-border-colour|}}}|border-style={{{bar33-border-style|}}}|left={{{bar33-left|0}}}|right={{{bar33-right|1}}}|from={{{bar33-from|{{{from}}}}}}|to={{{bar33-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar34-left|{{{bar34-right|{{{bar34-from|{{{bar34-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar34-text|&amp;nbsp;}}}|nudgedown={{{bar34-nudge-down|{{#expr:-{{{bar34-nudge-up|0}}}}}}}}|nudgeright={{{bar34-nudge-right|{{#expr:-{{{bar34-nudge-left|0}}}}}}}}|colour={{{bar34-colour|#f69}}}|border={{{bar34-border-width|}}}|border-colour={{{bar34-border-colour|}}}|border-style={{{bar34-border-style|}}}|left={{{bar34-left|0}}}|right={{{bar34-right|1}}}|from={{{bar34-from|{{{from}}}}}}|to={{{bar34-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar35-left|{{{bar35-right|{{{bar35-from|{{{bar35-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar35-text|&amp;nbsp;}}}|nudgedown={{{bar35-nudge-down|{{#expr:-{{{bar35-nudge-up|0}}}}}}}}|nudgeright={{{bar35-nudge-right|{{#expr:-{{{bar35-nudge-left|0}}}}}}}}|colour={{{bar35-colour|#f69}}}|border={{{bar35-border-width|}}}|border-colour={{{bar35-border-colour|}}}|border-style={{{bar35-border-style|}}}|left={{{bar35-left|0}}}|right={{{bar35-right|1}}}|from={{{bar35-from|{{{from}}}}}}|to={{{bar35-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar36-left|{{{bar36-right|{{{bar36-from|{{{bar36-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar36-text|&amp;nbsp;}}}|nudgedown={{{bar36-nudge-down|{{#expr:-{{{bar36-nudge-up|0}}}}}}}}|nudgeright={{{bar36-nudge-right|{{#expr:-{{{bar36-nudge-left|0}}}}}}}}|colour={{{bar36-colour|#f69}}}|border={{{bar36-border-width|}}}|border-colour={{{bar36-border-colour|}}}|border-style={{{bar36-border-style|}}}|left={{{bar36-left|0}}}|right={{{bar36-right|1}}}|from={{{bar36-from|{{{from}}}}}}|to={{{bar36-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar37-left|{{{bar37-right|{{{bar37-from|{{{bar37-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar37-text|&amp;nbsp;}}}|nudgedown={{{bar37-nudge-down|{{#expr:-{{{bar37-nudge-up|0}}}}}}}}|nudgeright={{{bar37-nudge-right|{{#expr:-{{{bar37-nudge-left|0}}}}}}}}|colour={{{bar37-colour|#f69}}}|border={{{bar37-border-width|}}}|border-colour={{{bar37-border-colour|}}}|border-style={{{bar37-border-style|}}}|left={{{bar37-left|0}}}|right={{{bar37-right|1}}}|from={{{bar37-from|{{{from}}}}}}|to={{{bar37-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar38-left|{{{bar38-right|{{{bar38-from|{{{bar38-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar38-text|&amp;nbsp;}}}|nudgedown={{{bar38-nudge-down|{{#expr:-{{{bar38-nudge-up|0}}}}}}}}|nudgeright={{{bar38-nudge-right|{{#expr:-{{{bar38-nudge-left|0}}}}}}}}|colour={{{bar38-colour|#f69}}}|border={{{bar38-border-width|}}}|border-colour={{{bar38-border-colour|}}}|border-style={{{bar38-border-style|}}}|left={{{bar38-left|0}}}|right={{{bar38-right|1}}}|from={{{bar38-from|{{{from}}}}}}|to={{{bar38-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar39-left|{{{bar39-right|{{{bar39-from|{{{bar39-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar39-text|&amp;nbsp;}}}|nudgedown={{{bar39-nudge-down|{{#expr:-{{{bar39-nudge-up|0}}}}}}}}|nudgeright={{{bar39-nudge-right|{{#expr:-{{{bar39-nudge-left|0}}}}}}}}|colour={{{bar39-colour|#f69}}}|border={{{bar39-border-width|}}}|border-colour={{{bar39-border-colour|}}}|border-style={{{bar39-border-style|}}}|left={{{bar39-left|0}}}|right={{{bar39-right|1}}}|from={{{bar39-from|{{{from}}}}}}|to={{{bar39-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar40-left|{{{bar40-right|{{{bar40-from|{{{bar40-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar40-text|&amp;nbsp;}}}|nudgedown={{{bar40-nudge-down|{{#expr:-{{{bar40-nudge-up|0}}}}}}}}|nudgeright={{{bar40-nudge-right|{{#expr:-{{{bar40-nudge-left|0}}}}}}}}|colour={{{bar40-colour|#f69}}}|border={{{bar40-border-width|}}}|border-colour={{{bar40-border-colour|}}}|border-style={{{bar40-border-style|}}}|left={{{bar40-left|0}}}|right={{{bar40-right|1}}}|from={{{bar40-from|{{{from}}}}}}|to={{{bar40-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar41-left|{{{bar41-right|{{{bar41-from|{{{bar41-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar41-text|&amp;nbsp;}}}|nudgedown={{{bar41-nudge-down|{{#expr:-{{{bar41-nudge-up|0}}}}}}}}|nudgeright={{{bar41-nudge-right|{{#expr:-{{{bar41-nudge-left|0}}}}}}}}|colour={{{bar41-colour|#f69}}}|border={{{bar41-border-width|}}}|border-colour={{{bar41-border-colour|}}}|border-style={{{bar41-border-style|}}}|left={{{bar41-left|0}}}|right={{{bar41-right|1}}}|from={{{bar41-from|{{{from}}}}}}|to={{{bar41-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar42-left|{{{bar42-right|{{{bar42-from|{{{bar42-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar42-text|&amp;nbsp;}}}|nudgedown={{{bar42-nudge-down|{{#expr:-{{{bar42-nudge-up|0}}}}}}}}|nudgeright={{{bar42-nudge-right|{{#expr:-{{{bar42-nudge-left|0}}}}}}}}|colour={{{bar42-colour|#f69}}}|border={{{bar42-border-width|}}}|border-colour={{{bar42-border-colour|}}}|border-style={{{bar42-border-style|}}}|left={{{bar42-left|0}}}|right={{{bar42-right|1}}}|from={{{bar42-from|{{{from}}}}}}|to={{{bar42-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar43-left|{{{bar43-right|{{{bar43-from|{{{bar43-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar43-text|&amp;nbsp;}}}|nudgedown={{{bar43-nudge-down|{{#expr:-{{{bar43-nudge-up|0}}}}}}}}|nudgeright={{{bar43-nudge-right|{{#expr:-{{{bar43-nudge-left|0}}}}}}}}|colour={{{bar43-colour|#f69}}}|border={{{bar43-border-width|}}}|border-colour={{{bar43-border-colour|}}}|border-style={{{bar43-border-style|}}}|left={{{bar43-left|0}}}|right={{{bar43-right|1}}}|from={{{bar43-from|{{{from}}}}}}|to={{{bar43-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar44-left|{{{bar44-right|{{{bar44-from|{{{bar44-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar44-text|&amp;nbsp;}}}|nudgedown={{{bar44-nudge-down|{{#expr:-{{{bar44-nudge-up|0}}}}}}}}|nudgeright={{{bar44-nudge-right|{{#expr:-{{{bar44-nudge-left|0}}}}}}}}|colour={{{bar44-colour|#f69}}}|border={{{bar44-border-width|}}}|border-colour={{{bar44-border-colour|}}}|border-style={{{bar44-border-style|}}}|left={{{bar44-left|0}}}|right={{{bar44-right|1}}}|from={{{bar44-from|{{{from}}}}}}|to={{{bar44-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar45-left|{{{bar45-right|{{{bar45-from|{{{bar45-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar45-text|&amp;nbsp;}}}|nudgedown={{{bar45-nudge-down|{{#expr:-{{{bar45-nudge-up|0}}}}}}}}|nudgeright={{{bar45-nudge-right|{{#expr:-{{{bar45-nudge-left|0}}}}}}}}|colour={{{bar45-colour|#f69}}}|border={{{bar45-border-width|}}}|border-colour={{{bar45-border-colour|}}}|border-style={{{bar45-border-style|}}}|left={{{bar45-left|0}}}|right={{{bar45-right|1}}}|from={{{bar45-from|{{{from}}}}}}|to={{{bar45-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar46-left|{{{bar46-right|{{{bar46-from|{{{bar46-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar46-text|&amp;nbsp;}}}|nudgedown={{{bar46-nudge-down|{{#expr:-{{{bar46-nudge-up|0}}}}}}}}|nudgeright={{{bar46-nudge-right|{{#expr:-{{{bar46-nudge-left|0}}}}}}}}|colour={{{bar46-colour|#f69}}}|border={{{bar46-border-width|}}}|border-colour={{{bar46-border-colour|}}}|border-style={{{bar46-border-style|}}}|left={{{bar46-left|0}}}|right={{{bar46-right|1}}}|from={{{bar46-from|{{{from}}}}}}|to={{{bar46-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar47-left|{{{bar47-right|{{{bar47-from|{{{bar47-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar47-text|&amp;nbsp;}}}|nudgedown={{{bar47-nudge-down|{{#expr:-{{{bar47-nudge-up|0}}}}}}}}|nudgeright={{{bar47-nudge-right|{{#expr:-{{{bar47-nudge-left|0}}}}}}}}|colour={{{bar47-colour|#f69}}}|border={{{bar47-border-width|}}}|border-colour={{{bar47-border-colour|}}}|border-style={{{bar47-border-style|}}}|left={{{bar47-left|0}}}|right={{{bar47-right|1}}}|from={{{bar47-from|{{{from}}}}}}|to={{{bar47-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar48-left|{{{bar48-right|{{{bar48-from|{{{bar48-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar48-text|&amp;nbsp;}}}|nudgedown={{{bar48-nudge-down|{{#expr:-{{{bar48-nudge-up|0}}}}}}}}|nudgeright={{{bar48-nudge-right|{{#expr:-{{{bar48-nudge-left|0}}}}}}}}|colour={{{bar48-colour|#f69}}}|border={{{bar48-border-width|}}}|border-colour={{{bar48-border-colour|}}}|border-style={{{bar48-border-style|}}}|left={{{bar48-left|0}}}|right={{{bar48-right|1}}}|from={{{bar48-from|{{{from}}}}}}|to={{{bar48-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar49-left|{{{bar49-right|{{{bar49-from|{{{bar49-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar49-text|&amp;nbsp;}}}|nudgedown={{{bar49-nudge-down|{{#expr:-{{{bar49-nudge-up|0}}}}}}}}|nudgeright={{{bar49-nudge-right|{{#expr:-{{{bar49-nudge-left|0}}}}}}}}|colour={{{bar49-colour|#f69}}}|border={{{bar49-border-width|}}}|border-colour={{{bar49-border-colour|}}}|border-style={{{bar49-border-style|}}}|left={{{bar49-left|0}}}|right={{{bar49-right|1}}}|from={{{bar49-from|{{{from}}}}}}|to={{{bar49-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar50-left|{{{bar50-right|{{{bar50-from|{{{bar50-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar50-text|&amp;nbsp;}}}|nudgedown={{{bar50-nudge-down|{{#expr:-{{{bar50-nudge-up|0}}}}}}}}|nudgeright={{{bar50-nudge-right|{{#expr:-{{{bar50-nudge-left|0}}}}}}}}|colour={{{bar50-colour|#f69}}}|border={{{bar50-border-width|}}}|border-colour={{{bar50-border-colour|}}}|border-style={{{bar50-border-style|}}}|left={{{bar50-left|0}}}|right={{{bar50-right|1}}}|from={{{bar50-from|{{{from}}}}}}|to={{{bar50-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar51-left|{{{bar51-right|{{{bar51-from|{{{bar51-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar51-text|&amp;nbsp;}}}|nudgedown={{{bar51-nudge-down|{{#expr:-{{{bar51-nudge-up|0}}}}}}}}|nudgeright={{{bar51-nudge-right|{{#expr:-{{{bar51-nudge-left|0}}}}}}}}|colour={{{bar51-colour|#f69}}}|border={{{bar51-border-width|}}}|border-colour={{{bar51-border-colour|}}}|border-style={{{bar51-border-style|}}}|left={{{bar51-left|0}}}|right={{{bar51-right|1}}}|from={{{bar51-from|{{{from}}}}}}|to={{{bar51-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar52-left|{{{bar52-right|{{{bar52-from|{{{bar52-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar52-text|&amp;nbsp;}}}|nudgedown={{{bar52-nudge-down|{{#expr:-{{{bar52-nudge-up|0}}}}}}}}|nudgeright={{{bar52-nudge-right|{{#expr:-{{{bar52-nudge-left|0}}}}}}}}|colour={{{bar52-colour|#f69}}}|border={{{bar52-border-width|}}}|border-colour={{{bar52-border-colour|}}}|border-style={{{bar52-border-style|}}}|left={{{bar52-left|0}}}|right={{{bar52-right|1}}}|from={{{bar52-from|{{{from}}}}}}|to={{{bar52-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar53-left|{{{bar53-right|{{{bar53-from|{{{bar53-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar53-text|&amp;nbsp;}}}|nudgedown={{{bar53-nudge-down|{{#expr:-{{{bar53-nudge-up|0}}}}}}}}|nudgeright={{{bar53-nudge-right|{{#expr:-{{{bar53-nudge-left|0}}}}}}}}|colour={{{bar53-colour|#f69}}}|border={{{bar53-border-width|}}}|border-colour={{{bar53-border-colour|}}}|border-style={{{bar53-border-style|}}}|left={{{bar53-left|0}}}|right={{{bar53-right|1}}}|from={{{bar53-from|{{{from}}}}}}|to={{{bar53-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar54-left|{{{bar54-right|{{{bar54-from|{{{bar54-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar54-text|&amp;nbsp;}}}|nudgedown={{{bar54-nudge-down|{{#expr:-{{{bar54-nudge-up|0}}}}}}}}|nudgeright={{{bar54-nudge-right|{{#expr:-{{{bar54-nudge-left|0}}}}}}}}|colour={{{bar54-colour|#f69}}}|border={{{bar54-border-width|}}}|border-colour={{{bar54-border-colour|}}}|border-style={{{bar54-border-style|}}}|left={{{bar54-left|0}}}|right={{{bar54-right|1}}}|from={{{bar54-from|{{{from}}}}}}|to={{{bar54-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar55-left|{{{bar55-right|{{{bar55-from|{{{bar55-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar55-text|&amp;nbsp;}}}|nudgedown={{{bar55-nudge-down|{{#expr:-{{{bar55-nudge-up|0}}}}}}}}|nudgeright={{{bar55-nudge-right|{{#expr:-{{{bar55-nudge-left|0}}}}}}}}|colour={{{bar55-colour|#f69}}}|border={{{bar55-border-width|}}}|border-colour={{{bar55-border-colour|}}}|border-style={{{bar55-border-style|}}}|left={{{bar55-left|0}}}|right={{{bar55-right|1}}}|from={{{bar55-from|{{{from}}}}}}|to={{{bar55-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar56-left|{{{bar56-right|{{{bar56-from|{{{bar56-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar56-text|&amp;nbsp;}}}|nudgedown={{{bar56-nudge-down|{{#expr:-{{{bar56-nudge-up|0}}}}}}}}|nudgeright={{{bar56-nudge-right|{{#expr:-{{{bar56-nudge-left|0}}}}}}}}|colour={{{bar56-colour|#f69}}}|border={{{bar56-border-width|}}}|border-colour={{{bar56-border-colour|}}}|border-style={{{bar56-border-style|}}}|left={{{bar56-left|0}}}|right={{{bar56-right|1}}}|from={{{bar56-from|{{{from}}}}}}|to={{{bar56-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar57-left|{{{bar57-right|{{{bar57-from|{{{bar57-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar57-text|&amp;nbsp;}}}|nudgedown={{{bar57-nudge-down|{{#expr:-{{{bar57-nudge-up|0}}}}}}}}|nudgeright={{{bar57-nudge-right|{{#expr:-{{{bar57-nudge-left|0}}}}}}}}|colour={{{bar57-colour|#f69}}}|border={{{bar57-border-width|}}}|border-colour={{{bar57-border-colour|}}}|border-style={{{bar57-border-style|}}}|left={{{bar57-left|0}}}|right={{{bar57-right|1}}}|from={{{bar57-from|{{{from}}}}}}|to={{{bar57-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar58-left|{{{bar58-right|{{{bar58-from|{{{bar58-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar58-text|&amp;nbsp;}}}|nudgedown={{{bar58-nudge-down|{{#expr:-{{{bar58-nudge-up|0}}}}}}}}|nudgeright={{{bar58-nudge-right|{{#expr:-{{{bar58-nudge-left|0}}}}}}}}|colour={{{bar58-colour|#f69}}}|border={{{bar58-border-width|}}}|border-colour={{{bar58-border-colour|}}}|border-style={{{bar58-border-style|}}}|left={{{bar58-left|0}}}|right={{{bar58-right|1}}}|from={{{bar58-from|{{{from}}}}}}|to={{{bar58-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar59-left|{{{bar59-right|{{{bar59-from|{{{bar59-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar59-text|&amp;nbsp;}}}|nudgedown={{{bar59-nudge-down|{{#expr:-{{{bar59-nudge-up|0}}}}}}}}|nudgeright={{{bar59-nudge-right|{{#expr:-{{{bar59-nudge-left|0}}}}}}}}|colour={{{bar59-colour|#f69}}}|border={{{bar59-border-width|}}}|border-colour={{{bar59-border-colour|}}}|border-style={{{bar59-border-style|}}}|left={{{bar59-left|0}}}|right={{{bar59-right|1}}}|from={{{bar59-from|{{{from}}}}}}|to={{{bar59-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar60-left|{{{bar60-right|{{{bar60-from|{{{bar60-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar60-text|&amp;nbsp;}}}|nudgedown={{{bar60-nudge-down|{{#expr:-{{{bar60-nudge-up|0}}}}}}}}|nudgeright={{{bar60-nudge-right|{{#expr:-{{{bar60-nudge-left|0}}}}}}}}|colour={{{bar60-colour|#f69}}}|border={{{bar60-border-width|}}}|border-colour={{{bar60-border-colour|}}}|border-style={{{bar60-border-style|}}}|left={{{bar60-left|0}}}|right={{{bar60-right|1}}}|from={{{bar60-from|{{{from}}}}}}|to={{{bar60-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar61-left|{{{bar61-right|{{{bar61-from|{{{bar61-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar61-text|&amp;nbsp;}}}|nudgedown={{{bar61-nudge-down|{{#expr:-{{{bar61-nudge-up|0}}}}}}}}|nudgeright={{{bar61-nudge-right|{{#expr:-{{{bar61-nudge-left|0}}}}}}}}|colour={{{bar61-colour|#f69}}}|border={{{bar61-border-width|}}}|border-colour={{{bar61-border-colour|}}}|border-style={{{bar61-border-style|}}}|left={{{bar61-left|0}}}|right={{{bar61-right|1}}}|from={{{bar61-from|{{{from}}}}}}|to={{{bar61-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar62-left|{{{bar62-right|{{{bar62-from|{{{bar62-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar62-text|&amp;nbsp;}}}|nudgedown={{{bar62-nudge-down|{{#expr:-{{{bar62-nudge-up|0}}}}}}}}|nudgeright={{{bar62-nudge-right|{{#expr:-{{{bar62-nudge-left|0}}}}}}}}|colour={{{bar62-colour|#f69}}}|border={{{bar62-border-width|}}}|border-colour={{{bar62-border-colour|}}}|border-style={{{bar62-border-style|}}}|left={{{bar62-left|0}}}|right={{{bar62-right|1}}}|from={{{bar62-from|{{{from}}}}}}|to={{{bar62-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar63-left|{{{bar63-right|{{{bar63-from|{{{bar63-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar63-text|&amp;nbsp;}}}|nudgedown={{{bar63-nudge-down|{{#expr:-{{{bar63-nudge-up|0}}}}}}}}|nudgeright={{{bar63-nudge-right|{{#expr:-{{{bar63-nudge-left|0}}}}}}}}|colour={{{bar63-colour|#f69}}}|border={{{bar63-border-width|}}}|border-colour={{{bar63-border-colour|}}}|border-style={{{bar63-border-style|}}}|left={{{bar63-left|0}}}|right={{{bar63-right|1}}}|from={{{bar63-from|{{{from}}}}}}|to={{{bar63-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar64-left|{{{bar64-right|{{{bar64-from|{{{bar64-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar64-text|&amp;nbsp;}}}|nudgedown={{{bar64-nudge-down|{{#expr:-{{{bar64-nudge-up|0}}}}}}}}|nudgeright={{{bar64-nudge-right|{{#expr:-{{{bar64-nudge-left|0}}}}}}}}|colour={{{bar64-colour|#f69}}}|border={{{bar64-border-width|}}}|border-colour={{{bar64-border-colour|}}}|border-style={{{bar64-border-style|}}}|left={{{bar64-left|0}}}|right={{{bar64-right|1}}}|from={{{bar64-from|{{{from}}}}}}|to={{{bar64-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar65-left|{{{bar65-right|{{{bar65-from|{{{bar65-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar65-text|&amp;nbsp;}}}|nudgedown={{{bar65-nudge-down|{{#expr:-{{{bar65-nudge-up|0}}}}}}}}|nudgeright={{{bar65-nudge-right|{{#expr:-{{{bar65-nudge-left|0}}}}}}}}|colour={{{bar65-colour|#f69}}}|border={{{bar65-border-width|}}}|border-colour={{{bar65-border-colour|}}}|border-style={{{bar65-border-style|}}}|left={{{bar65-left|0}}}|right={{{bar65-right|1}}}|from={{{bar65-from|{{{from}}}}}}|to={{{bar65-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar66-left|{{{bar66-right|{{{bar66-from|{{{bar66-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar66-text|&amp;nbsp;}}}|nudgedown={{{bar66-nudge-down|{{#expr:-{{{bar66-nudge-up|0}}}}}}}}|nudgeright={{{bar66-nudge-right|{{#expr:-{{{bar66-nudge-left|0}}}}}}}}|colour={{{bar66-colour|#f69}}}|border={{{bar66-border-width|}}}|border-colour={{{bar66-border-colour|}}}|border-style={{{bar66-border-style|}}}|left={{{bar66-left|0}}}|right={{{bar66-right|1}}}|from={{{bar66-from|{{{from}}}}}}|to={{{bar66-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar67-left|{{{bar67-right|{{{bar67-from|{{{bar67-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar67-text|&amp;nbsp;}}}|nudgedown={{{bar67-nudge-down|{{#expr:-{{{bar67-nudge-up|0}}}}}}}}|nudgeright={{{bar67-nudge-right|{{#expr:-{{{bar67-nudge-left|0}}}}}}}}|colour={{{bar67-colour|#f69}}}|border={{{bar67-border-width|}}}|border-colour={{{bar67-border-colour|}}}|border-style={{{bar67-border-style|}}}|left={{{bar67-left|0}}}|right={{{bar67-right|1}}}|from={{{bar67-from|{{{from}}}}}}|to={{{bar67-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar68-left|{{{bar68-right|{{{bar68-from|{{{bar68-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar68-text|&amp;nbsp;}}}|nudgedown={{{bar68-nudge-down|{{#expr:-{{{bar68-nudge-up|0}}}}}}}}|nudgeright={{{bar68-nudge-right|{{#expr:-{{{bar68-nudge-left|0}}}}}}}}|colour={{{bar68-colour|#f69}}}|border={{{bar68-border-width|}}}|border-colour={{{bar68-border-colour|}}}|border-style={{{bar68-border-style|}}}|left={{{bar68-left|0}}}|right={{{bar68-right|1}}}|from={{{bar68-from|{{{from}}}}}}|to={{{bar68-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar69-left|{{{bar69-right|{{{bar69-from|{{{bar69-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar69-text|&amp;nbsp;}}}|nudgedown={{{bar69-nudge-down|{{#expr:-{{{bar69-nudge-up|0}}}}}}}}|nudgeright={{{bar69-nudge-right|{{#expr:-{{{bar69-nudge-left|0}}}}}}}}|colour={{{bar69-colour|#f69}}}|border={{{bar69-border-width|}}}|border-colour={{{bar69-border-colour|}}}|border-style={{{bar69-border-style|}}}|left={{{bar69-left|0}}}|right={{{bar69-right|1}}}|from={{{bar69-from|{{{from}}}}}}|to={{{bar69-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar70-left|{{{bar70-right|{{{bar70-from|{{{bar70-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar70-text|&amp;nbsp;}}}|nudgedown={{{bar70-nudge-down|{{#expr:-{{{bar70-nudge-up|0}}}}}}}}|nudgeright={{{bar70-nudge-right|{{#expr:-{{{bar70-nudge-left|0}}}}}}}}|colour={{{bar70-colour|#f69}}}|border={{{bar70-border-width|}}}|border-colour={{{bar70-border-colour|}}}|border-style={{{bar70-border-style|}}}|left={{{bar70-left|0}}}|right={{{bar70-right|1}}}|from={{{bar70-from|{{{from}}}}}}|to={{{bar70-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar71-left|{{{bar71-right|{{{bar71-from|{{{bar71-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar71-text|&amp;nbsp;}}}|nudgedown={{{bar71-nudge-down|{{#expr:-{{{bar71-nudge-up|0}}}}}}}}|nudgeright={{{bar71-nudge-right|{{#expr:-{{{bar71-nudge-left|0}}}}}}}}|colour={{{bar71-colour|#f69}}}|border={{{bar71-border-width|}}}|border-colour={{{bar71-border-colour|}}}|border-style={{{bar71-border-style|}}}|left={{{bar71-left|0}}}|right={{{bar71-right|1}}}|from={{{bar71-from|{{{from}}}}}}|to={{{bar71-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar72-left|{{{bar72-right|{{{bar72-from|{{{bar72-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar72-text|&amp;nbsp;}}}|nudgedown={{{bar72-nudge-down|{{#expr:-{{{bar72-nudge-up|0}}}}}}}}|nudgeright={{{bar72-nudge-right|{{#expr:-{{{bar72-nudge-left|0}}}}}}}}|colour={{{bar72-colour|#f69}}}|border={{{bar72-border-width|}}}|border-colour={{{bar72-border-colour|}}}|border-style={{{bar72-border-style|}}}|left={{{bar72-left|0}}}|right={{{bar72-right|1}}}|from={{{bar72-from|{{{from}}}}}}|to={{{bar72-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar73-left|{{{bar73-right|{{{bar73-from|{{{bar73-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar73-text|&amp;nbsp;}}}|nudgedown={{{bar73-nudge-down|{{#expr:-{{{bar73-nudge-up|0}}}}}}}}|nudgeright={{{bar73-nudge-right|{{#expr:-{{{bar3-nudge-left|0}}}}}}}}|colour={{{bar73-colour|#f69}}}|border={{{bar73-border-width|}}}|border-colour={{{bar73-border-colour|}}}|border-style={{{bar73-border-style|}}}|left={{{bar73-left|0}}}|right={{{bar73-right|1}}}|from={{{bar73-from|{{{from}}}}}}|to={{{bar73-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar74-left|{{{bar74-right|{{{bar74-from|{{{bar74-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar74-text|&amp;nbsp;}}}|nudgedown={{{bar74-nudge-down|{{#expr:-{{{bar74-nudge-up|0}}}}}}}}|nudgeright={{{bar74-nudge-right|{{#expr:-{{{bar74-nudge-left|0}}}}}}}}|colour={{{bar74-colour|#f69}}}|border={{{bar74-border-width|}}}|border-colour={{{bar74-border-colour|}}}|border-style={{{bar74-border-style|}}}|left={{{bar74-left|0}}}|right={{{bar74-right|1}}}|from={{{bar74-from|{{{from}}}}}}|to={{{bar74-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar75-left|{{{bar75-right|{{{bar75-from|{{{bar75-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar75-text|&amp;nbsp;}}}|nudgedown={{{bar75-nudge-down|{{#expr:-{{{bar75-nudge-up|0}}}}}}}}|nudgeright={{{bar75-nudge-right|{{#expr:-{{{bar75-nudge-left|0}}}}}}}}|colour={{{bar75-colour|#f69}}}|border={{{bar75-border-width|}}}|border-colour={{{bar75-border-colour|}}}|border-style={{{bar75-border-style|}}}|left={{{bar75-left|0}}}|right={{{bar75-right|1}}}|from={{{bar75-from|{{{from}}}}}}|to={{{bar75-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar76-left|{{{bar76-right|{{{bar76-from|{{{bar76-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar76-text|&amp;nbsp;}}}|nudgedown={{{bar76-nudge-down|{{#expr:-{{{bar76-nudge-up|0}}}}}}}}|nudgeright={{{bar76-nudge-right|{{#expr:-{{{bar76-nudge-left|0}}}}}}}}|colour={{{bar76-colour|#f69}}}|border={{{bar76-border-width|}}}|border-colour={{{bar76-border-colour|}}}|border-style={{{bar76-border-style|}}}|left={{{bar76-left|0}}}|right={{{bar76-right|1}}}|from={{{bar76-from|{{{from}}}}}}|to={{{bar76-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar77-left|{{{bar77-right|{{{bar77-from|{{{bar77-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar77-text|&amp;nbsp;}}}|nudgedown={{{bar77-nudge-down|{{#expr:-{{{bar77-nudge-up|0}}}}}}}}|nudgeright={{{bar77-nudge-right|{{#expr:-{{{bar77-nudge-left|0}}}}}}}}|colour={{{bar77-colour|#f69}}}|border={{{bar77-border-width|}}}|border-colour={{{bar77-border-colour|}}}|border-style={{{bar77-border-style|}}}|left={{{bar77-left|0}}}|right={{{bar77-right|1}}}|from={{{bar77-from|{{{from}}}}}}|to={{{bar77-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar78-left|{{{bar78-right|{{{bar78-from|{{{bar78-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar78-text|&amp;nbsp;}}}|nudgedown={{{bar78-nudge-down|{{#expr:-{{{bar78-nudge-up|0}}}}}}}}|nudgeright={{{bar78-nudge-right|{{#expr:-{{{bar78-nudge-left|0}}}}}}}}|colour={{{bar78-colour|#f69}}}|border={{{bar78-border-width|}}}|border-colour={{{bar78-border-colour|}}}|border-style={{{bar78-border-style|}}}|left={{{bar78-left|0}}}|right={{{bar78-right|1}}}|from={{{bar78-from|{{{from}}}}}}|to={{{bar78-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar79-left|{{{bar79-right|{{{bar79-from|{{{bar79-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar79-text|&amp;nbsp;}}}|nudgedown={{{bar79-nudge-down|{{#expr:-{{{bar79-nudge-up|0}}}}}}}}|nudgeright={{{bar79-nudge-right|{{#expr:-{{{bar79-nudge-left|0}}}}}}}}|colour={{{bar79-colour|#f69}}}|border={{{bar79-border-width|}}}|border-colour={{{bar79-border-colour|}}}|border-style={{{bar79-border-style|}}}|left={{{bar79-left|0}}}|right={{{bar79-right|1}}}|from={{{bar79-from|{{{from}}}}}}|to={{{bar79-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}{{#if:{{{bar80-left|{{{bar80-right|{{{bar80-from|{{{bar80-to|}}}}}}}}}}}}|{{Draw Bar|text={{{bar80-text|&amp;nbsp;}}}|nudgedown={{{bar80-nudge-down|{{#expr:-{{{bar80-nudge-up|0}}}}}}}}|nudgeright={{{bar80-nudge-right|{{#expr:-{{{bar80-nudge-left|0}}}}}}}}|colour={{{bar80-colour|#f69}}}|border={{{bar80-border-width|}}}|border-colour={{{bar80-border-colour|}}}|border-style={{{bar80-border-style|}}}|left={{{bar80-left|0}}}|right={{{bar80-right|1}}}|from={{{bar80-from|{{{from}}}}}}|to={{{bar80-to|{{{to}}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{unit|em}}}}}}|tl-width={{{width|10}}}|tl-wu={{{width-unit|{{{unit|em}}}}}}}}}}&lt;!--
To add more bars, just type {{subst:Timeline Bar|xxx}}, where xxx is the number of the bar you need to accommodate, just before this comment.--&gt;&lt;/div Timeline&gt;&lt;!--

 #### Annotations ####

--&gt;&lt;div id=Annotations{{{instance-id|}}} style=&quot;float:left; position:relative; width:{{#expr:{{{annotations-width|{{#if:{{{note1|{{{note2|{{{note3|}}}}}}}}}|7|-1.25}}}}}+1.25}}em&quot;&gt;{{Timeline Note|noarr={{{note1-remove-arrow|{{{note1-no-arrow|}}}}}}|textsize={{{note1-size|90%}}}|text={{{note1|}}}|nudgedown={{{note1-nudge-down|{{#expr:-{{{note1-nudge-up|0}}}}}}}}|nudgeright={{{note1-nudge-right|{{#expr:-{{{note1-nudge-left|0}}}}}}}}|colour={{{note1-colour|black}}}|at={{{note1-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note2-remove-arrow|{{{note2-no-arrow|}}}}}}|textsize={{{note2-size|90%}}}|text={{{note2|}}}|nudgedown={{{note2-nudge-down|{{#expr:-{{{note2-nudge-up|0}}}}}}}}|nudgeright={{{note2-nudge-right|{{#expr:-{{{note2-nudge-left|0}}}}}}}}|colour={{{note2-colour|black}}}|at={{{note2-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note3-remove-arrow|{{{note3-no-arrow|}}}}}}|textsize={{{note3-size|90%}}}|text={{{note3|}}}|nudgedown={{{note3-nudge-down|{{#expr:-{{{note3-nudge-up|0}}}}}}}}|nudgeright={{{note3-nudge-right|{{#expr:-{{{note3-nudge-left|0}}}}}}}}|colour={{{note3-colour|black}}}|at={{{note3-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note4-remove-arrow|{{{note4-no-arrow|}}}}}}|textsize={{{note4-size|90%}}}|text={{{note4|}}}|nudgedown={{{note4-nudge-down|{{#expr:-{{{note4-nudge-up|0}}}}}}}}|nudgeright={{{note4-nudge-right|{{#expr:-{{{note4-nudge-left|0}}}}}}}}|colour={{{note4-colour|black}}}|at={{{note4-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note5-remove-arrow|{{{note5-no-arrow|}}}}}}|textsize={{{note5-size|90%}}}|text={{{note5|}}}|nudgedown={{{note5-nudge-down|{{#expr:-{{{note5-nudge-up|0}}}}}}}}|nudgeright={{{note5-nudge-right|{{#expr:-{{{note5-nudge-left|0}}}}}}}}|colour={{{note5-colour|black}}}|at={{{note5-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note6-remove-arrow|{{{note6-no-arrow|}}}}}}|textsize={{{note6-size|90%}}}|text={{{note6|}}}|nudgedown={{{note6-nudge-down|{{#expr:-{{{note6-nudge-up|0}}}}}}}}|nudgeright={{{note6-nudge-right|{{#expr:-{{{note6-nudge-left|0}}}}}}}}|colour={{{note6-colour|black}}}|at={{{note6-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note7-remove-arrow|{{{note7-no-arrow|}}}}}}|textsize={{{note7-size|90%}}}|text={{{note7|}}}|nudgedown={{{note7-nudge-down|{{#expr:-{{{note7-nudge-up|0}}}}}}}}|nudgeright={{{note7-nudge-right|{{#expr:-{{{note7-nudge-left|0}}}}}}}}|colour={{{note7-colour|black}}}|at={{{note7-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note8-remove-arrow|{{{note8-no-arrow|}}}}}}|textsize={{{note8-size|90%}}}|text={{{note8|}}}|nudgedown={{{note8-nudge-down|{{#expr:-{{{note8-nudge-up|0}}}}}}}}|nudgeright={{{note8-nudge-right|{{#expr:-{{{note8-nudge-left|0}}}}}}}}|colour={{{note8-colour|black}}}|at={{{note8-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note9-remove-arrow|{{{note9-no-arrow|}}}}}}|textsize={{{note9-size|90%}}}|text={{{note9|}}}|nudgedown={{{note9-nudge-down|{{#expr:-{{{note9-nudge-up|0}}}}}}}}|nudgeright={{{note9-nudge-right|{{#expr:-{{{note9-nudge-left|0}}}}}}}}|colour={{{note9-colour|black}}}|at={{{note9-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note10-remove-arrow|{{{note10-no-arrow|}}}}}}|textsize={{{note10-size|90%}}}|text={{{note10|}}}|nudgedown={{{note10-nudge-down|{{#expr:-{{{note10-nudge-up|0}}}}}}}}|nudgeright={{{note10-nudge-right|{{#expr:-{{{note10-nudge-left|0}}}}}}}}|colour={{{note10-colour|black}}}|at={{{note10-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note11-remove-arrow|{{{note11-no-arrow|}}}}}}|textsize={{{note11-size|90%}}}|text={{{note11|}}}|nudgedown={{{note11-nudge-down|{{#expr:-{{{note11-nudge-up|0}}}}}}}}|nudgeright={{{note11-nudge-right|{{#expr:-{{{note11-nudge-left|0}}}}}}}}|colour={{{note11-colour|black}}}|at={{{note11-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note12-remove-arrow|{{{note12-no-arrow|}}}}}}|textsize={{{note12-size|90%}}}|text={{{note12|}}}|nudgedown={{{note12-nudge-down|{{#expr:-{{{note12-nudge-up|0}}}}}}}}|nudgeright={{{note12-nudge-right|{{#expr:-{{{note12-nudge-left|0}}}}}}}}|colour={{{note12-colour|black}}}|at={{{note12-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note13-remove-arrow|{{{note13-no-arrow|}}}}}}|textsize={{{note13-size|90%}}}|text={{{note13|}}}|nudgedown={{{note13-nudge-down|{{#expr:-{{{note13-nudge-up|0}}}}}}}}|nudgeright={{{note13-nudge-right|{{#expr:-{{{note13-nudge-left|0}}}}}}}}|colour={{{note13-colour|black}}}|at={{{note13-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note14-remove-arrow|{{{note14-no-arrow|}}}}}}|textsize={{{note14-size|90%}}}|text={{{note14|}}}|nudgedown={{{note14-nudge-down|{{#expr:-{{{note14-nudge-up|0}}}}}}}}|nudgeright={{{note14-nudge-right|{{#expr:-{{{note14-nudge-left|0}}}}}}}}|colour={{{note14-colour|black}}}|at={{{note14-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note15-remove-arrow|{{{note15-no-arrow|}}}}}}|textsize={{{note15-size|90%}}}|text={{{note15|}}}|nudgedown={{{note15-nudge-down|{{#expr:-{{{note15-nudge-up|0}}}}}}}}|nudgeright={{{note15-nudge-right|{{#expr:-{{{note15-nudge-left|0}}}}}}}}|colour={{{note15-colour|black}}}|at={{{note15-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note16-remove-arrow|{{{note16-no-arrow|}}}}}}|textsize={{{note16-size|90%}}}|text={{{note16|}}}|nudgedown={{{note16-nudge-down|{{#expr:-{{{note16-nudge-up|0}}}}}}}}|nudgeright={{{note16-nudge-right|{{#expr:-{{{note16-nudge-left|0}}}}}}}}|colour={{{note16-colour|black}}}|at={{{note16-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note17-remove-arrow|{{{note17-no-arrow|}}}}}}|textsize={{{note17-size|90%}}}|text={{{note17|}}}|nudgedown={{{note17-nudge-down|{{#expr:-{{{note17-nudge-up|0}}}}}}}}|nudgeright={{{note17-nudge-right|{{#expr:-{{{note17-nudge-left|0}}}}}}}}|colour={{{note17-colour|black}}}|at={{{note17-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note18-remove-arrow|{{{note18-no-arrow|}}}}}}|textsize={{{note18-size|90%}}}|text={{{note18|}}}|nudgedown={{{note18-nudge-down|{{#expr:-{{{note18-nudge-up|0}}}}}}}}|nudgeright={{{note18-nudge-right|{{#expr:-{{{note18-nudge-left|0}}}}}}}}|colour={{{note18-colour|black}}}|at={{{note18-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note19-remove-arrow|{{{note19-no-arrow|}}}}}}|textsize={{{note19-size|90%}}}|text={{{note19|}}}|nudgedown={{{note19-nudge-down|{{#expr:-{{{note19-nudge-up|0}}}}}}}}|nudgeright={{{note19-nudge-right|{{#expr:-{{{note19-nudge-left|0}}}}}}}}|colour={{{note19-colour|black}}}|at={{{note19-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note20-remove-arrow|{{{note20-no-arrow|}}}}}}|textsize={{{note20-size|90%}}}|text={{{note20|}}}|nudgedown={{{note20-nudge-down|{{#expr:-{{{note20-nudge-up|0}}}}}}}}|nudgeright={{{note20-nudge-right|{{#expr:-{{{note20-nudge-left|0}}}}}}}}|colour={{{note20-colour|black}}}|at={{{note20-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note21-remove-arrow|{{{note21-no-arrow|}}}}}}|textsize={{{note21-size|90%}}}|text={{{note21|}}}|nudgedown={{{note21-nudge-down|{{#expr:-{{{note21-nudge-up|0}}}}}}}}|nudgeright={{{note21-nudge-right|{{#expr:-{{{note21-nudge-left|0}}}}}}}}|colour={{{note21-colour|black}}}|at={{{note21-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note22-remove-arrow|{{{note22-no-arrow|}}}}}}|textsize={{{note22-size|90%}}}|text={{{note22|}}}|nudgedown={{{note22-nudge-down|{{#expr:-{{{note22-nudge-up|0}}}}}}}}|nudgeright={{{note22-nudge-right|{{#expr:-{{{note22-nudge-left|0}}}}}}}}|colour={{{note22-colour|black}}}|at={{{note22-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note23-remove-arrow|{{{note23-no-arrow|}}}}}}|textsize={{{note23-size|90%}}}|text={{{note23|}}}|nudgedown={{{note23-nudge-down|{{#expr:-{{{note23-nudge-up|0}}}}}}}}|nudgeright={{{note23-nudge-right|{{#expr:-{{{note23-nudge-left|0}}}}}}}}|colour={{{note23-colour|black}}}|at={{{note23-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note24-remove-arrow|{{{note24-no-arrow|}}}}}}|textsize={{{note24-size|90%}}}|text={{{note24|}}}|nudgedown={{{note24-nudge-down|{{#expr:-{{{note24-nudge-up|0}}}}}}}}|nudgeright={{{note24-nudge-right|{{#expr:-{{{note24-nudge-left|0}}}}}}}}|colour={{{note24-colour|black}}}|at={{{note24-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note25-remove-arrow|{{{note25-no-arrow|}}}}}}|textsize={{{note25-size|90%}}}|text={{{note25|}}}|nudgedown={{{note25-nudge-down|{{#expr:-{{{note25-nudge-up|0}}}}}}}}|nudgeright={{{note25-nudge-right|{{#expr:-{{{note25-nudge-left|0}}}}}}}}|colour={{{note25-colour|black}}}|at={{{note25-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note26-remove-arrow|{{{note26-no-arrow|}}}}}}|textsize={{{note26-size|90%}}}|text={{{note26|}}}|nudgedown={{{note26-nudge-down|{{#expr:-{{{note26-nudge-up|0}}}}}}}}|nudgeright={{{note26-nudge-right|{{#expr:-{{{note26-nudge-left|0}}}}}}}}|colour={{{note26-colour|black}}}|at={{{note26-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note27-remove-arrow|{{{note27-no-arrow|}}}}}}|textsize={{{note27-size|90%}}}|text={{{note27|}}}|nudgedown={{{note27-nudge-down|{{#expr:-{{{note27-nudge-up|0}}}}}}}}|nudgeright={{{note27-nudge-right|{{#expr:-{{{note27-nudge-left|0}}}}}}}}|colour={{{note27-colour|black}}}|at={{{note27-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note28-remove-arrow|{{{note28-no-arrow|}}}}}}|textsize={{{note28-size|90%}}}|text={{{note28|}}}|nudgedown={{{note28-nudge-down|{{#expr:-{{{note28-nudge-up|0}}}}}}}}|nudgeright={{{note28-nudge-right|{{#expr:-{{{note28-nudge-left|0}}}}}}}}|colour={{{note28-colour|black}}}|at={{{note28-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note29-remove-arrow|{{{note29-no-arrow|}}}}}}|textsize={{{note29-size|90%}}}|text={{{note29|}}}|nudgedown={{{note29-nudge-down|{{#expr:-{{{note29-nudge-up|0}}}}}}}}|nudgeright={{{note29-nudge-right|{{#expr:-{{{note29-nudge-left|0}}}}}}}}|colour={{{note29-colour|black}}}|at={{{note29-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note30-remove-arrow|{{{note30-no-arrow|}}}}}}|textsize={{{note30-size|90%}}}|text={{{note30|}}}|nudgedown={{{note30-nudge-down|{{#expr:-{{{note30-nudge-up|0}}}}}}}}|nudgeright={{{note30-nudge-right|{{#expr:-{{{note30-nudge-left|0}}}}}}}}|colour={{{note30-colour|black}}}|at={{{note30-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note31-remove-arrow|{{{note31-no-arrow|}}}}}}|textsize={{{note31-size|90%}}}|text={{{note31|}}}|nudgedown={{{note31-nudge-down|{{#expr:-{{{note31-nudge-up|0}}}}}}}}|nudgeright={{{note31-nudge-right|{{#expr:-{{{note31-nudge-left|0}}}}}}}}|colour={{{note31-colour|black}}}|at={{{note31-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note32-remove-arrow|{{{note32-no-arrow|}}}}}}|textsize={{{note32-size|90%}}}|text={{{note32|}}}|nudgedown={{{note32-nudge-down|{{#expr:-{{{note32-nudge-up|0}}}}}}}}|nudgeright={{{note32-nudge-right|{{#expr:-{{{note32-nudge-left|0}}}}}}}}|colour={{{note32-colour|black}}}|at={{{note32-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note33-remove-arrow|{{{note33-no-arrow|}}}}}}|textsize={{{note33-size|90%}}}|text={{{note33|}}}|nudgedown={{{note33-nudge-down|{{#expr:-{{{note33-nudge-up|0}}}}}}}}|nudgeright={{{note33-nudge-right|{{#expr:-{{{note33-nudge-left|0}}}}}}}}|colour={{{note33-colour|black}}}|at={{{note33-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note34-remove-arrow|{{{note34-no-arrow|}}}}}}|textsize={{{note34-size|90%}}}|text={{{note34|}}}|nudgedown={{{note34-nudge-down|{{#expr:-{{{note34-nudge-up|0}}}}}}}}|nudgeright={{{note34-nudge-right|{{#expr:-{{{note34-nudge-left|0}}}}}}}}|colour={{{note34-colour|black}}}|at={{{note34-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note35-remove-arrow|{{{note35-no-arrow|}}}}}}|textsize={{{note35-size|90%}}}|text={{{note35|}}}|nudgedown={{{note35-nudge-down|{{#expr:-{{{note35-nudge-up|0}}}}}}}}|nudgeright={{{note35-nudge-right|{{#expr:-{{{note35-nudge-left|0}}}}}}}}|colour={{{note35-colour|black}}}|at={{{note35-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note36-remove-arrow|{{{note36-no-arrow|}}}}}}|textsize={{{note36-size|90%}}}|text={{{note36|}}}|nudgedown={{{note36-nudge-down|{{#expr:-{{{note36-nudge-up|0}}}}}}}}|nudgeright={{{note36-nudge-right|{{#expr:-{{{note36-nudge-left|0}}}}}}}}|colour={{{note36-colour|black}}}|at={{{note36-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note37-remove-arrow|{{{note37-no-arrow|}}}}}}|textsize={{{note37-size|90%}}}|text={{{note37|}}}|nudgedown={{{note37-nudge-down|{{#expr:-{{{note37-nudge-up|0}}}}}}}}|nudgeright={{{note37-nudge-right|{{#expr:-{{{note37-nudge-left|0}}}}}}}}|colour={{{note37-colour|black}}}|at={{{note37-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note38-remove-arrow|{{{note38-no-arrow|}}}}}}|textsize={{{note38-size|90%}}}|text={{{note38|}}}|nudgedown={{{note38-nudge-down|{{#expr:-{{{note38-nudge-up|0}}}}}}}}|nudgeright={{{note38-nudge-right|{{#expr:-{{{note38-nudge-left|0}}}}}}}}|colour={{{note38-colour|black}}}|at={{{note38-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note39-remove-arrow|{{{note39-no-arrow|}}}}}}|textsize={{{note39-size|90%}}}|text={{{note39|}}}|nudgedown={{{note39-nudge-down|{{#expr:-{{{note39-nudge-up|0}}}}}}}}|nudgeright={{{note39-nudge-right|{{#expr:-{{{note39-nudge-left|0}}}}}}}}|colour={{{note39-colour|black}}}|at={{{note39-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note40-remove-arrow|{{{note40-no-arrow|}}}}}}|textsize={{{note40-size|90%}}}|text={{{note40|}}}|nudgedown={{{note40-nudge-down|{{#expr:-{{{note40-nudge-up|0}}}}}}}}|nudgeright={{{note40-nudge-right|{{#expr:-{{{note40-nudge-left|0}}}}}}}}|colour={{{note40-colour|black}}}|at={{{note40-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note41-remove-arrow|{{{note41-no-arrow|}}}}}}|textsize={{{note41-size|90%}}}|text={{{note41|}}}|nudgedown={{{note41-nudge-down|{{#expr:-{{{note41-nudge-up|0}}}}}}}}|nudgeright={{{note41-nudge-right|{{#expr:-{{{note41-nudge-left|0}}}}}}}}|colour={{{note41-colour|black}}}|at={{{note41-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note42-remove-arrow|{{{note42-no-arrow|}}}}}}|textsize={{{note42-size|90%}}}|text={{{note42|}}}|nudgedown={{{note42-nudge-down|{{#expr:-{{{note42-nudge-up|0}}}}}}}}|nudgeright={{{note42-nudge-right|{{#expr:-{{{note42-nudge-left|0}}}}}}}}|colour={{{note42-colour|black}}}|at={{{note42-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note43-remove-arrow|{{{note43-no-arrow|}}}}}}|textsize={{{note43-size|90%}}}|text={{{note43|}}}|nudgedown={{{note43-nudge-down|{{#expr:-{{{note43-nudge-up|0}}}}}}}}|nudgeright={{{note43-nudge-right|{{#expr:-{{{note43-nudge-left|0}}}}}}}}|colour={{{note43-colour|black}}}|at={{{note43-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note44-remove-arrow|{{{note44-no-arrow|}}}}}}|textsize={{{note44-size|90%}}}|text={{{note44|}}}|nudgedown={{{note44-nudge-down|{{#expr:-{{{note44-nudge-up|0}}}}}}}}|nudgeright={{{note44-nudge-right|{{#expr:-{{{note44-nudge-left|0}}}}}}}}|colour={{{note44-colour|black}}}|at={{{note44-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note45-remove-arrow|{{{note45-no-arrow|}}}}}}|textsize={{{note45-size|90%}}}|text={{{note45|}}}|nudgedown={{{note45-nudge-down|{{#expr:-{{{note45-nudge-up|0}}}}}}}}|nudgeright={{{note45-nudge-right|{{#expr:-{{{note45-nudge-left|0}}}}}}}}|colour={{{note45-colour|black}}}|at={{{note45-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note46-remove-arrow|{{{note46-no-arrow|}}}}}}|textsize={{{note46-size|90%}}}|text={{{note46|}}}|nudgedown={{{note46-nudge-down|{{#expr:-{{{note46-nudge-up|0}}}}}}}}|nudgeright={{{note46-nudge-right|{{#expr:-{{{note46-nudge-left|0}}}}}}}}|colour={{{note46-colour|black}}}|at={{{note46-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note47-remove-arrow|{{{note47-no-arrow|}}}}}}|textsize={{{note47-size|90%}}}|text={{{note47|}}}|nudgedown={{{note47-nudge-down|{{#expr:-{{{note47-nudge-up|0}}}}}}}}|nudgeright={{{note47-nudge-right|{{#expr:-{{{note47-nudge-left|0}}}}}}}}|colour={{{note47-colour|black}}}|at={{{note47-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note48-remove-arrow|{{{note48-no-arrow|}}}}}}|textsize={{{note48-size|90%}}}|text={{{note48|}}}|nudgedown={{{note48-nudge-down|{{#expr:-{{{note48-nudge-up|0}}}}}}}}|nudgeright={{{note48-nudge-right|{{#expr:-{{{note48-nudge-left|0}}}}}}}}|colour={{{note48-colour|black}}}|at={{{note48-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note49-remove-arrow|{{{note49-no-arrow|}}}}}}|textsize={{{note49-size|90%}}}|text={{{note49|}}}|nudgedown={{{note49-nudge-down|{{#expr:-{{{note49-nudge-up|0}}}}}}}}|nudgeright={{{note49-nudge-right|{{#expr:-{{{note49-nudge-left|0}}}}}}}}|colour={{{note49-colour|black}}}|at={{{note49-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}|an-w={{{annotations-width|7}}}}}{{Timeline Note|noarr={{{note50-remove-arrow|{{{note50-no-arrow|}}}}}}|textsize={{{note50-size|90%}}}|text={{{note50|}}}|nudgedown={{{note50-nudge-down|{{#expr:-{{{note50-nudge-up|0}}}}}}}}|nudgeright={{{note50-nudge-right|{{#expr:-{{{note50-nudge-left|0}}}}}}}}|colour={{{note50-colour|black}}}|at={{{note50-at|{{#expr:{{{to}}}-(({{{to}}}-{{{from}}})/2)}}}}}|tl-from={{{from}}}|tl-to={{{to}}}|tl-height={{{height|36}}}|tl-hu={{{height-unit|{{{width-unit|em}}}}}}}}&lt;!--To add another note, just paste {{subst:Timeline Notes|x}} before this comment, replacing x with the number of the next note.--&gt;&lt;/div&gt;&lt;/div containsTSN&gt;&lt;!--

 #### Legend ####

--&gt;&lt;div id=Legend{{{instance-id|}}} class=&quot;toccolours&quot; style=&quot;margin-left:3.1em; border-style:none; float:left; clear:both;&quot;&gt;{{Timeline Legend|colour={{{legend1-colour|{{{bar1-colour|#6ca}}}}}}|text={{{legend1|}}}}}{{Timeline Legend|colour={{{legend2-colour|{{{bar2-colour|#ff9}}}}}}|text={{{legend2|}}}}}{{Timeline Legend|colour={{{legend3-colour|{{{bar3-colour|#6cf}}}}}}|text={{{legend3|}}}}}{{Timeline Legend|colour={{{legend4-colour|{{{bar4-colour|#c96}}}}}}|text={{{legend4|}}}}}{{Timeline Legend|colour={{{legend5-colour|{{{bar5-colour|#fcc}}}}}}|text={{{legend5|}}}}}{{Timeline Legend|colour={{{legend3-colour|{{{bar6-colour|#9f9}}}}}}|text={{{legend6|}}}}}{{Timeline Legend|colour={{{legend7-colour|{{{bar7-colour|#96c}}}}}}|text={{{legend7|}}}}}{{Timeline Legend|colour={{{legend8-colour|{{{bar8-colour|#cc6}}}}}}|text={{{legend8|}}}}}{{Timeline Legend|colour={{{legend9-colour|{{{bar9-colour|#ccc}}}}}}|text={{{legend9|}}}}}{{Timeline Legend|colour={{{legend10-colour|{{{bar10-colour|#f66}}}}}}|text={{{legend10|}}}}}{{Timeline Legend|colour={{{legend11-colour|{{{bar11-colour|#6c6}}}}}}|text={{{legend11|}}}}}{{Timeline Legend|colour={{{legend12-colour|{{{bar12-colour|#99f}}}}}}|text={{{legend12|}}}}}{{Timeline Legend|colour={{{legend13-colour|{{{bar13-colour|#c66}}}}}}|text={{{legend13|}}}}}{{Timeline Legend|colour={{{legend14-colour|{{{bar14-colour|#f9c}}}}}}|text={{{legend14|}}}}}{{Timeline Legend|colour={{{legend15-colour|{{{bar15-colour|#396}}}}}}|text={{{legend15|}}}}}{{Timeline Legend|colour={{{legend16-colour|{{{bar16-colour|#ff3}}}}}}|text={{{legend16|}}}}}{{Timeline Legend|colour={{{legend17-colour|{{{bar17-colour|#06c}}}}}}|text={{{legend17|}}}}}{{Timeline Legend|colour={{{legend18-colour|{{{bar18-colour|#963}}}}}}|text={{{legend18|}}}}}{{Timeline Legend|colour={{{legend19-colour|{{{bar19-colour|#c9c}}}}}}|text={{{legend19|}}}}}{{Timeline Legend|colour={{{legend20-colour|{{{bar20-colour|#9c6}}}}}}|text={{{legend20|}}}}}{{Timeline Legend|colour={{{legend21-colour|{{{bar21-colour|#c63}}}}}}|text={{{legend21|}}}}}{{Timeline Legend|colour={{{legend22-colour|{{{bar22-colour|#c96}}}}}}|text={{{legend22|}}}}}{{Timeline Legend|colour={{{legend23-colour|{{{bar23-colour|#999}}}}}}|text={{{legend23|}}}}}{{Timeline Legend|colour={{{legend24-colour|{{{bar24-colour|#c03}}}}}}|text={{{legend24|}}}}}{{Timeline Legend|colour={{{legend25-colour|{{{bar25-colour|#393}}}}}}|text={{{legend25|}}}}}{{Timeline Legend|colour={{{legend26-colour|{{{bar26-colour|#939}}}}}}|text={{{legend26|}}}}}{{Timeline Legend|colour={{{legend27-colour|{{{bar27-colour|#996}}}}}}|text={{{legend27|}}}}}{{Timeline Legend|colour={{{legend28-colour|{{{bar28-colour|#f69}}}}}}|text={{{legend28|}}}}}&lt;!--To add another legend, just paste {{subst:Timeline legend|x}} before this comment, replacing x with the number of the next legend. You may want to modify the default colour.--&gt;&lt;/div Legend&gt;&lt;!--

 #### Caption ####

--&gt;&lt;div id=Caption{{{instance-id|}}} class=&quot;toccolours&quot; style=&quot;margin:0 {{#if:{{{embedded|}}}|auto|0.5em; float:left}}; padding:0 auto; border-style:none; clear:both; text-align:center; width:{{#expr:{{{annotations-width|{{#if:{{{note1|{{{note2|{{{note3|}}}}}}}}}|6|-.25}}}}} + 4.5+{{{width|10}}}}}em&quot;&gt;{{{caption|}}}{{#ifeq:{{{help|off}}}|off||&lt;br&gt;

----

'''Usage instructions'''

----

Copy the text below, adding multiple bars, legends and notes as required.
&lt;br&gt;Comments, enclosed in &lt;tt&gt;&lt;!-&lt;/tt&gt;&lt;tt&gt;- -&lt;/tt&gt;&lt;tt&gt;-&gt;&lt;/tt&gt;, should be removed.

Remember:
* You must use &lt;tt&gt;{&lt;/tt&gt;&lt;tt&gt;{!}&lt;/tt&gt;&lt;tt&gt;}&lt;/tt&gt; wherever you want a {{!}} to be
: rendered in the timeline
* Large borders will displace bars in many browsers
* Text should not be wider than its containing bar,
: as this may cause compatibility issues
* Units default to [[em (typography){{!}}em]], the height and width of an 'M'.

See {{tl|Graphical timeline}} for full documentation.

{{Graphical timeline/blank}}}}&lt;/div caption&gt;&lt;/div Container&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{template doc}}&lt;/noinclude&gt;</text>
      <sha1>tavffvm9dyaeppjs7slq1qkxi4jak5b</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Grc icon</title>
    <ns>10</ns>
    <id>31580484</id>
    <revision>
      <id>788737515</id>
      <parentid>787545887</parentid>
      <timestamp>2017-07-03T05:17:04Z</timestamp>
      <contributor>
        <username>Zyxw</username>
        <id>473593</id>
      </contributor>
      <minor/>
      <comment>Convert unused 2nd parameter to comment. using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="185">{{Link language|grc}}&lt;!--Ancient Greek--&gt;&lt;noinclude&gt;
{{Documentation|content={{Link language/Notes|addendum=}}
&lt;!--template categories added by {{Link language/Notes}}--&gt;
}}&lt;/noinclude&gt;</text>
      <sha1>s6b1wj8gbtp9stnure6fafd52pip73r</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Hide in print</title>
    <ns>10</ns>
    <id>21706434</id>
    <revision>
      <id>774484343</id>
      <parentid>628460954</parentid>
      <timestamp>2017-04-08T19:40:49Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Hide in print]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="109">&lt;includeonly&gt;{{{1|}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
[[Category:Exclude in print|!]]
&lt;/noinclude&gt;</text>
      <sha1>73og27prhvo5g5zugn2d87cnvzb68h8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Hlist</title>
    <ns>10</ns>
    <id>38143620</id>
    <revision>
      <id>669926987</id>
      <parentid>669921219</parentid>
      <timestamp>2015-07-04T15:13:14Z</timestamp>
      <contributor>
        <username>Penwhale</username>
        <id>125125</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Hlist: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="181">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:list|horizontal}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>ihcdy525o8nnmq114czc48dpk6pnojd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:ISBN</title>
    <ns>10</ns>
    <id>51604275</id>
    <revision>
      <id>801657419</id>
      <parentid>798892531</parentid>
      <timestamp>2017-09-21T01:06:26Z</timestamp>
      <contributor>
        <username>MRD2014</username>
        <id>21640150</id>
      </contributor>
      <comment>bypass redirect per talk</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3397">{{#if:{{{1|&lt;noinclude&gt;$&lt;/noinclude&gt;}}}|{{Catalog lookup link|{{{1|}}}|{{{2|}}}|{{{3|}}}|{{{4|}}}|{{{5|}}}|{{{6|}}}|{{{7|}}}|{{{8|}}}|{{{9|}}}|article-link={{#ifeq:{{yesno-no|{{{plainlink|}}}}}|yes||International Standard Book Number}}|article-name={{#ifeq:{{yesno-no|{{{plainlink|}}}}}|yes||ISBN}}|link-prefix=[Special:BookSources/|item-prefix={{!}}|item-postfix=]|list-leadout={{{leadout|}}}}}{{#if:{{trim|{{{1|}}}}}|{{#ifeq:{{yesno-no|{{{invalid1|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{1|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{2|}}}}}|{{#ifeq:{{yesno-no|{{{invalid2|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{2|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{3|}}}}}|{{#ifeq:{{yesno-no|{{{invalid3|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{3|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{4|}}}}}|{{#ifeq:{{yesno-no|{{{invalid4|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{4|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{5|}}}}}|{{#ifeq:{{yesno-no|{{{invalid5|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{5|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{6|}}}}}|{{#ifeq:{{yesno-no|{{{invalid6|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{6|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{7|}}}}}|{{#ifeq:{{yesno-no|{{{invalid7|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{7|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{8|}}}}}|{{#ifeq:{{yesno-no|{{{invalid8|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{8|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{9|}}}}}|{{#ifeq:{{yesno-no|{{{invalid9|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{9|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}}}}}}}}}}}}}}}}}}}|{{error-small|Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Missing [[ISBN]].}}}}&lt;noinclude&gt;{{documentation}}&lt;!-- Add categories and interwiki lines to the /doc subpage, not here! --&gt;&lt;/noinclude&gt;</text>
      <sha1>5bzfl5yo5chykn0se0i9zyszdx18fvs</sha1>
    </revision>
  </page>
  <page>
    <title>Template:ISO 639 name ang</title>
    <ns>10</ns>
    <id>19086471</id>
    <revision>
      <id>789489187</id>
      <parentid>789163271</parentid>
      <timestamp>2017-07-07T17:14:18Z</timestamp>
      <contributor>
        <username>Zyxw</username>
        <id>473593</id>
      </contributor>
      <minor/>
      <comment>update template documentation using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="89">Old English&lt;noinclude&gt;
{{ISO 639 name conversion template doc|redirect=yes}}
&lt;/noinclude&gt;</text>
      <sha1>px5dfkuck0qpokm62lw2u93bylmvh7t</sha1>
    </revision>
  </page>
  <page>
    <title>Template:ISO 639 name en</title>
    <ns>10</ns>
    <id>19089671</id>
    <revision>
      <id>608715222</id>
      <parentid>384136857</parentid>
      <timestamp>2014-05-15T17:42:23Z</timestamp>
      <contributor>
        <username>Ixfd64</username>
        <id>6284</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:ISO 639 name en: allow template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="100">English&lt;noinclude&gt;
{{ISO 639 name conversion template doc|explicitly cited English|en}}
&lt;/noinclude&gt;</text>
      <sha1>nep275d9tsnrcwwrl68qja574uez0xk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:ISO 639 name grc</title>
    <ns>10</ns>
    <id>19086408</id>
    <revision>
      <id>608714720</id>
      <parentid>587338259</parentid>
      <timestamp>2014-05-15T17:38:42Z</timestamp>
      <contributor>
        <username>Ixfd64</username>
        <id>6284</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:ISO 639 name grc: highly visible template, &gt;8k transclusions ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="102">Ancient Greek&lt;noinclude&gt;
{{ISO 639 name conversion template doc|{{ISO 639 name grc}}|grc}}&lt;/noinclude&gt;</text>
      <sha1>1xzr0vzuhtugbhpze6kf8ow5n0847m8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Icon</title>
    <ns>10</ns>
    <id>10964158</id>
    <revision>
      <id>643803499</id>
      <parentid>623318300</parentid>
      <timestamp>2015-01-23T10:29:55Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>switch this to use [[Module:Icon]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="138">{{#invoke:Icon|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>m4ab9noabl8v4ki5cx6t5ksjcjh5u8o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Infobox</title>
    <ns>10</ns>
    <id>891845</id>
    <revision>
      <id>765690941</id>
      <parentid>590143656</parentid>
      <timestamp>2017-02-15T21:41:48Z</timestamp>
      <contributor>
        <username>Andrew Gray</username>
        <id>126457</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Infobox]]&quot;: Degrade to template permission per request, in line with [[WP:PP]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="145">{{#invoke:Infobox|infobox}}&lt;noinclude&gt;

{{documentation}}
&lt;!-- Categories go in the /doc subpage, and interwikis go in Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>kavlqnbr7pew8bhy59a3n9jmoau5jt4</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Infobox planet</title>
    <ns>10</ns>
    <id>971399</id>
    <revision>
      <id>774772340</id>
      <parentid>773632133</parentid>
      <timestamp>2017-04-10T15:59:44Z</timestamp>
      <contributor>
        <username>Tom.Reding</username>
        <id>9784415</id>
      </contributor>
      <minor/>
      <comment>Edit request [[Template talk:Infobox planet#Template-protected edit request on 10 April 2017 (change mp_name to mpc_name)]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12887">{{infobox
| class       = vcard
| titleclass  = fn org
| title       = {{{name|&lt;includeonly&gt;{{PAGENAMEBASE}}&lt;/includeonly&gt;}}} {{{symbol|}}}
| image       = {{#invoke:InfoboxImage|InfoboxImage|image={{{image|}}}|size={{{image_size|}}}|sizedefault=225x225px|alt={{{image_alt|}}}}}
| caption     = {{{caption|}}}
| headerstyle = {{#if:{{{background|{{{bgcolour|}}}}}}|background-color:{{{background|{{{bgcolour|}}}}}}}}
| labelstyle  = max-width:{{#if:{{{label_width|}}}|{{{label_width|}}}|11em}};

| header1     = {{#if:{{{discoverer|}}}{{{discovery_site|}}}{{{discovered|}}}{{{discovery_method|}}}|Discovery{{{discovery_ref|}}} }}

| label2      = Discovered&amp;nbsp;by
|  data2      = {{{discoverer|}}}
| label3      = Discovery&amp;nbsp;site
|  data3      = {{{discovery_site|}}}
| label4      = Discovery&amp;nbsp;date
|  data4      = {{{discovered|}}}
| label5      = {{longitem|[[Methods of detecting extrasolar planets|Detection method]]}}
|  data5      = {{{discovery_method|}}}

| header10    = {{#if:{{{mpc_name|{{{mp_name|}}}}}}{{{named_after|}}}{{{alt_names|}}}{{{mp_category|}}}{{{pronounce|}}}{{{pronounced|}}}{{{adjective|}}}{{{adjectives|}}}|{{#if:{{{extrasolarplanet|{{{exosolar planets|}}}}}}|[[Extrasolar planet#Nomenclature|Designations]]|Designations}} }}

| label11     = [[Minor planet designation|MPC&amp;nbsp;designation]]
|  data11     = {{{mpc_name|{{{mp_name|}}}}}}
| label12     = Pronunciation
|  data12     = {{{pronounce|{{{pronounced|}}}}}}
| label13     = {{longitem|Named after}}
|  data13     = {{{named_after|}}}
| label14     = {{longitem|{{#if:{{{minorplanet|}}}|[[Provisional designation in astronomy|Alternative designations]]|[[Provisional designation in astronomy|Alternative names]]}}}}
|  data14     = {{{alt_names|}}}
| label15     = {{longitem|[[Minor planet#Populations|Minor&amp;nbsp;planet category]]}}
|  data15     = {{{mp_category|}}}
| label16     = [[List of adjectivals and demonyms of astronomical bodies|Adjectives]]
|  data16     = {{{adjectives|{{{adjective|}}}}}}

| header20    = {{#if:{{{orbit_diagram|}}}{{{epoch|}}}{{{uncertainty|}}}{{{observation_arc|}}}{{{aphelion|}}}{{{perihelion|}}}{{{periapsis|}}}{{{apoapsis|}}}{{{semimajor|}}}{{{mean_orbit_radius|}}}{{{eccentricity|}}}{{{period|}}}{{{synodic_period|}}}{{{avg_speed|}}}{{{mean_anomaly|}}}{{{inclination|}}}{{{angular_dist|}}}{{{asc_node|}}}{{{long_periastron|}}}{{{time_periastron|}}}{{{arg_peri|}}}{{{semi-amplitude|}}}{{{satellite_of|}}}{{{satellites|}}}{{{moid|}}}{{{mercury_moid|}}}{{{venus_moid|}}}{{{mars_moid|}}}{{{jupiter_moid|}}}{{{saturn_moid|}}}{{{uranus_moid|}}}{{{neptune_moid|}}}|[[Osculating orbit|Orbital characteristics]]{{{orbit_ref|}}} }}

|  data21     = {{{orbit_diagram|}}}
|  data22     = {{#if:{{{epoch|}}} |[[Epoch (astronomy)|Epoch]] {{{epoch}}}}}
|  data23     = {{#if:{{{uncertainty|}}} | [[Uncertainty Parameter U|Uncertainty parameter]] {{{uncertainty}}}}}
| label24     = [[Observation arc]]
|  data24     = {{{observation_arc|}}}
| label25     = {{#switch:{{{apsis}}} |apsis|gee|(apsis)=[[Apsis|Apo{{{apsis}}}]] |[[Aphelion|Ap{{#if:{{{apsis|}}}|{{{apsis}}}|helion}}]]}}
|  data25     = {{{aphelion|}}}
| label26     = [[Perihelion|Peri{{#if:{{{apsis|}}}|{{{apsis}}}|helion}}]]
|  data26     = {{{perihelion|}}}
| label27     = [[Apsis|Peri{{#if:{{{apsis|}}}|{{{apsis}}}|apsis}}]]
|  data27     = {{{periapsis|}}}
| label28     = {{#switch:{{{apsis}}} |helion|astron=[[Apsis|Ap{{{apsis}}}]] |[[Apsis|Apo{{#if:{{{apsis|}}}|{{{apsis}}}|apsis}}]]}}
|  data28     = {{{apoapsis|}}}
| label29     = {{longitem|[[Semi-major axis]]}}
|  data29     = {{{semimajor|}}}
| label30     = {{longitem|Mean orbit [[radius]]}}
|  data30     = {{{mean_orbit_radius|}}}
| label31     = [[Orbital eccentricity|Eccentricity]]
|  data31     = {{{eccentricity|}}}
| label32     = {{longitem|[[Orbital period]]}}
|  data32     = {{{period|}}}
| label33     = {{longitem|[[Orbital period|Synodic period]]}}
|  data33     = {{{synodic_period|}}}
| label34     = {{longitem|Average [[orbital speed]]}}
|  data34     = {{{avg_speed|}}}
| label35     = {{longitem|[[Mean anomaly]]}}
|  data35     = {{{mean_anomaly|}}}
| label36     = {{longitem|[[Mean motion]]}}
|  data36     = {{{mean_motion|}}}
| label37     = [[Orbital inclination|Inclination]]
|  data37     = {{{inclination|}}}
| label38     = {{longitem|[[Angular distance]]}}
|  data38     = {{{angular_dist|}}}
| label39     = {{longitem|[[Longitude of the ascending node|Longitude&amp;nbsp;of ascending&amp;nbsp;node]]}}
|  data39     = {{{asc_node|}}}
| label40     = {{longitem|[[Longitude of the periapsis|Longitude&amp;nbsp;of]] [[Apsis|periastron]]}}
|  data40     = {{{long_periastron|}}}
| label41     = {{longitem|[[Apsis|Time&amp;nbsp;of periastron]]}}
|  data41     = {{{time_periastron|}}}
| label42     = {{longitem|[[Argument of periapsis|Argument&amp;nbsp;of peri{{#if:{{{apsis|}}}|{{{apsis}}}|helion}}]]}}
|  data42     = {{{arg_peri|}}}
| label43     = {{nowrap|[[Amplitude|Semi-amplitude]]}}
|  data43     = {{{semi-amplitude|}}}
| label44     = [[Natural satellite|Satellite&amp;nbsp;of]]
|  data44     = {{{satellite_of|}}}
| label45     = {{#switch:{{{allsatellites|}}} |yes|true=[[Natural satellite|Satellite]]s |Known [[Natural satellite|satellite]]s}}
|  data45     = {{{satellites|}}}
| label46     = Earth&amp;nbsp;[[Minimum orbit intersection distance|MOID]]
|  data46     = {{{moid|}}}
| label47     = Mercury&amp;nbsp;[[Minimum orbit intersection distance|MOID]]
|  data47     = {{{mercury_moid|}}}
| label48     = Venus&amp;nbsp;[[Minimum orbit intersection distance|MOID]]
|  data48     = {{{venus_moid|}}}
| label49     = Mars&amp;nbsp;[[Minimum orbit intersection distance|MOID]]
|  data49     = {{{mars_moid|}}}
| label50     = Jupiter&amp;nbsp;[[Minimum orbit intersection distance|MOID]]
|  data50     = {{{jupiter_moid|}}}
| label51     = Saturn&amp;nbsp;[[Minimum orbit intersection distance|MOID]]
|  data51     = {{{saturn_moid|}}}
| label52     = Uranus&amp;nbsp;[[Minimum orbit intersection distance|MOID]]
|  data52     = {{{uranus_moid|}}}
| label53     = Neptune&amp;nbsp;[[Minimum orbit intersection distance|MOID]]
|  data53     = {{{neptune_moid|}}}
| label54     = Jupiter [[Tisserand's parameter|Tisserand parameter]]
|  data54     = {{{tisserand|}}}

| header56    = {{#if:{{{p_semimajor|}}}{{{p_eccentricity|}}}{{{p_mean_motion|}}}{{{p_inclination|}}}{{{node_rate|}}}{{{perihelion_rate|}}}|[[Proper orbital elements]]{{{p_orbit_ref|}}} }}

| label57     = {{longitem|Proper [[semi-major axis]]}}
|  data57     = {{#if:{{{p_semimajor|}}} |{{{p_semimajor}}}&amp;nbsp;[[Astronomical unit|AU]]}}
| label58     = {{longitem|Proper [[Orbital eccentricity|eccentricity]]}}
|  data58     = {{{p_eccentricity|}}}
| label59     = {{longitem|Proper [[inclination]]}}
|  data59     = {{{p_inclination|}}}
| label60     = {{longitem|Proper [[mean motion]]}}
|  data60     = {{#if:{{{p_mean_motion|}}} |{{{p_mean_motion}}}&amp;nbsp;[[Degree (angle)|deg]]{{\}}[[Julian year (astronomy)|yr]]}}
| label61     = {{longitem|Proper [[orbital period]]}}
|  data61     = {{#if:{{{p_mean_motion|}}}|{{#expr:360/{{{p_mean_motion|1}}} round 5}} [[Julian year (astronomy)|yr]]&lt;br /&gt;({{#expr:365.25*360/{{{p_mean_motion|1}}} round 3}} [[day|d]]) }}
| label62     = {{longitem|Precession of [[Apsis|perihelion]]}}
|  data62     = {{#if:{{{perihelion_rate|}}}|{{{perihelion_rate}}}&amp;nbsp;[[Arcsecond|arcsec]]{{\}}[[Julian year (astronomy)|yr]] }}
| label63     = {{longitem|Precession&amp;nbsp;of the [[Longitude of the ascending node|ascending&amp;nbsp;node]]}}
|  data63     = {{#if:{{{node_rate|}}}|{{{node_rate}}}&amp;nbsp;[[Arcsecond|arcsec]]{{\}}[[Julian year (astronomy)|yr]]}}

| header66    = {{#if:{{{dimensions|}}}{{{mean_radius|}}}{{{equatorial_radius|}}}{{{polar_radius|}}}{{{flattening|}}}{{{circumference|}}}{{{surface_area|}}}{{{volume|}}}{{{mass|}}}{{{density|}}}{{{surface_grav|}}}{{{moment_of_inertia_factor|}}}{{{escape_velocity|}}}{{{rotation|}}}{{{sidereal_day|}}}{{{rot_velocity|}}}{{{axial_tilt|}}}{{{right_asc_north_pole|}}}{{{declination|}}}{{{pole_ecliptic_lat|}}}{{{pole_ecliptic_lon|}}}{{{albedo|}}}{{{single_temperature|}}}{{{temp_name1|}}}{{{temp_name2|}}}{{{temp_name3|}}}{{{temp_name4|}}}{{{spectral_type|}}}{{{magnitude|}}}{{{abs_magnitude|}}}{{{angular_size|}}}|{{#if:{{{minorplanet|}}}| [[Standard asteroid physical characteristics|Physical characteristics]]|Physical characteristics}}{{{physical_ref|}}} }}

| label67     = Dimensions
|  data67     = {{{dimensions|}}}
| label68     = {{longitem|Mean radius}}
|  data68     = {{{mean_radius|}}}
| label69     = {{longitem|[[Equator]]ial radius}}
|  data69     = {{{equatorial_radius|}}}
| label70     = {{longitem|[[Geographical pole|Polar]] radius}}
|  data70     = {{{polar_radius|}}}
| label71     = [[Flattening]]
|  data71     = {{{flattening|}}}
| label72     = Circumference
|  data72     = {{{circumference|}}}
| label73     = {{longitem|[[Spheroid#Surface area|Surface area]]}}
|  data73     = {{{surface_area|}}}
| label74     = [[Volume]]
|  data74     = {{{volume|}}}
| label75     = [[Mass]]
|  data75     = {{{mass|}}}
| label76     = {{longitem|Mean [[density]]}}
|  data76     = {{{density|}}}
| label77     = {{longitem|{{#if:{{{minorplanet|}}}|Equatorial [[Standard asteroid physical characteristics#Surface gravity|surface&amp;nbsp;gravity]]|[[Surface gravity]]}}}}
|  data77     = {{{surface_grav|}}}
| label78     = {{longitem|[[Moment of inertia factor]]}}
|  data78     = {{{moment_of_inertia_factor|}}}
| label79     = {{longitem|{{#if:{{{minorplanet|}}} |Equatorial [[escape velocity]] |[[Escape velocity]]}}}}
|  data79     = {{{escape_velocity|}}}
| label80     = {{longitem|[[Rotation period]]}}
|  data80     = {{{rotation|}}}
| label81     = {{longitem|Sidereal [[rotation period]]}}
|  data81     = {{{sidereal_day|}}}
| label82     = {{longitem|Equatorial rotation&amp;nbsp;velocity}}
|  data82     = {{{rot_velocity|}}}
| label83     = {{longitem|[[Axial tilt]]}}
|  data83     = {{{axial_tilt|}}}
| label84     = {{longitem|North&amp;nbsp;pole {{nowrap|[[right ascension]]}}}}
|  data84     = {{{right_asc_north_pole|}}}
| label85     = {{longitem|North&amp;nbsp;pole [[declination]]}}
|  data85     = {{{declination|}}}
| label86     = {{longitem|Pole [[ecliptic latitude]]}}
|  data86     = {{{pole_ecliptic_lat|}}}
| label87     = {{longitem|Pole [[ecliptic longitude]]}}
|  data87     = {{{pole_ecliptic_lon|}}}
| label88     = {{#if:{{{minorplanet|}}} |{{longitem|[[Geometric albedo]]}} |[[Albedo]]}}
|  data88     = {{{albedo|}}}
| label89     = [[Temperature]]
|  data89     = {{{single_temperature|}}}

|  data90     = {{#if:{{{temp_name1|}}}{{{temp_name2|}}}{{{temp_name3|}}}{{{temp_name4|}}}|
&lt;table style=&quot;border-spacing: 0px; width:100%; border:none; background-color:#f9f9f9; margin:0; text-align:left; line-height:1.2em; white-space:nowrap&quot;&gt;&lt;tr&gt;
&lt;th style=&quot;width:33%; padding-right:0.25em; text-align:left&quot;&gt;Surface [[temperature|temp.]]&lt;/th&gt;
&lt;th style=&quot;padding-right:0.25em; text-align:left&quot;&gt;min&lt;/th&gt;
&lt;th style=&quot;padding-right:0.25em; text-align:left&quot;&gt;mean&lt;/th&gt;
&lt;th style=&quot;padding-right:0.25em; text-align:left&quot;&gt;max&lt;/th&gt;
&lt;/tr&gt;{{#if:{{{temp_name1|}}}|&lt;tr&gt;
&lt;th style=&quot;padding-left:1.0em&quot;&gt;{{{temp_name1}}}&lt;/th&gt;
&lt;td&gt;{{{min_temp_1|}}}&lt;/td&gt;
&lt;td&gt;{{{mean_temp_1|}}}&lt;/td&gt;
&lt;td&gt;{{{max_temp_1|}}}&lt;/td&gt;
&lt;/tr&gt;}}{{#if:{{{temp_name2|}}}|&lt;tr&gt;
&lt;th style=&quot;padding-left:1.0em&quot;&gt;{{{temp_name2}}}&lt;/th&gt;
&lt;td&gt;{{{min_temp_2|}}}&lt;/td&gt;
&lt;td&gt;{{{mean_temp_2|}}}&lt;/td&gt;
&lt;td&gt;{{{max_temp_2|}}}&lt;/td&gt;
&lt;/tr&gt;}}{{#if:{{{temp_name3|}}}|&lt;tr&gt;
&lt;th style=&quot;padding-left:1.0em&quot;&gt;{{{temp_name3}}}&lt;/th&gt;
&lt;td&gt;{{{min_temp_3|}}}&lt;/td&gt;
&lt;td&gt;{{{mean_temp_3|}}}&lt;/td&gt;
&lt;td&gt;{{{max_temp_3|}}}&lt;/td&gt;
&lt;/tr&gt;}}{{#if:{{{temp_name4|}}}|&lt;tr&gt;
&lt;th style=&quot;padding-left:1.0em&quot;&gt;{{{temp_name4}}}&lt;/th&gt;
&lt;td&gt;{{{min_temp_4|}}}&lt;/td&gt;
&lt;td&gt;{{{mean_temp_4|}}}&lt;/td&gt;
&lt;td&gt;{{{max_temp_4|}}}&lt;/td&gt;
&lt;/tr&gt;}}
&lt;/table&gt;}}

| label91     = {{longitem|{{#if:{{{minorplanet|}}}|[[Asteroid spectral types|Spectral type]]|Spectral type}}}}
|  data91     = {{{spectral_type|}}}
| label92     = {{longitem|[[Asteroid family]]}}
|  data92     = {{{family|}}}
| label93     = {{longitem|[[Apparent magnitude]]}}
|  data93     = {{{magnitude|}}}
| label94     = {{longitem|[[Absolute magnitude#Solar System bodies (H)|Absolute magnitude&amp;nbsp;''(H)'']]}}
|  data94     = {{{abs_magnitude|}}}
| label95     = {{longitem|[[Angular diameter]]}}
|  data95     = {{{angular_size|}}}

| header97    = {{#if:{{{atmosphere|}}}{{{scale_height|}}}{{{atmosphere_composition|}}}|Atmosphere{{{atmosphere_ref|}}} }}

| label98     = {{longitem|Surface [[Atmospheric pressure|pressure]]}}
|  data98     = {{{surface_pressure|}}}
| label99     = {{longitem|[[Scale height]]}}
|  data99     = {{{scale_height|}}}
| label100     = [[Atmospheric chemistry#Atmospheric composition|Composition by volume]]
|  data100     = {{{atmosphere_composition|}}}

| below       = &lt;includeonly&gt;{{#if:{{{note|}}}||{{reflist|group=&quot;note&quot;}} }}&lt;/includeonly&gt;

}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>b8s0w112zdxnqqu9yxcfvqywwz2a5ac</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Legend</title>
    <ns>10</ns>
    <id>3298325</id>
    <revision>
      <id>798333230</id>
      <parentid>661973491</parentid>
      <timestamp>2017-09-01T08:29:41Z</timestamp>
      <contributor>
        <username>TheDJ</username>
        <id>244887</id>
      </contributor>
      <minor/>
      <comment>avoid line breaks due to columns</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="552">&lt;includeonly&gt;&lt;div class=&quot;legend&quot; style=&quot;-webkit-column-break-inside: avoid;page-break-inside: avoid;break-inside: avoid-column&quot;&gt;&lt;span class=&quot;legend-color&quot; style=&quot;display:inline-block; width:1.5em; height:1.5em; margin:1px 0; border:{{{border|1px solid {{{outline|black}}}}}}; background-color:{{trim|{{{1|transparent}}}}}; color:{{{textcolor|black}}}; font-size:{{{size|100%}}}; text-align:center;&quot;&gt;{{#if:{{{text|}}}|&lt;span class=&quot;legend-text&quot;&gt;{{{text}}}&lt;/span&gt;|&amp;nbsp;}}&lt;/span&gt;&amp;nbsp;{{{2|}}}&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>7z93si7bw28byf8pshmxj4v6e92d1k0</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Legend2</title>
    <ns>10</ns>
    <id>9155261</id>
    <revision>
      <id>797214583</id>
      <parentid>734810892</parentid>
      <timestamp>2017-08-25T16:58:34Z</timestamp>
      <contributor>
        <username>Izno</username>
        <id>2927383</id>
      </contributor>
      <comment>[[Special:LintErrors/tidy-whitespace-bug]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="357">&lt;span style=&quot;margin:0; font-size:90%; white-space:nowrap;&quot;&gt;&lt;span class=&quot;legend-text&quot; style=&quot;border:{{{border|none}}}; padding:1px .6em; background-color:{{{1|none}}}; color:{{{textcolor|black}}}; font-size:95%; line-height:1.25; text-align:center;&quot;&gt;{{{text|&amp;nbsp;}}}&lt;/span&gt;{{#if:{{{text|}}}||&amp;nbsp;}}{{{2|}}}&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>3za6nxloftzxwbahgar19bxxib81cqp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Life timeline</title>
    <ns>10</ns>
    <id>11830440</id>
    <revision>
      <id>806065335</id>
      <parentid>803484769</parentid>
      <timestamp>2017-10-19T13:12:49Z</timestamp>
      <contributor>
        <username>Drbogdan</username>
        <id>202725</id>
      </contributor>
      <comment>wl adj</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="8868">&lt;!---
NOTE: PLEASE MAINTAIN SIMPLE WORDING WIKILINKED TO DETAILS - SEE =&gt; &quot;[[Template talk:Nature timeline#Best wording]]&quot; (or see =&gt; https://en.wikipedia.org/wiki/Template_talk:Nature_timeline#Best_wording_for_.22.7B.7BNature_timeline.7D.7D.22_events.3F ) - Enjoy! :) [[User:Drbogdan|Drbogdan]] ([[User talk:Drbogdan|talk]]) 01:00, 20 August 2016 (UTC)
---&gt;
{{Graphical timeline
 | &lt;!--- you MUST remove any lines you don't need ---&gt;

 | help=off
 | link-to=Life timeline

 | scale-increment=500
 | plot-colour=#e5cc7f
 | from=-4540
 | to=0

 | title=[[Timeline of the evolutionary history of life|Life timeline]]

 | bar1-from=-4412
 | bar1-text='''''&lt;small&gt;[[water]]&lt;/small&gt;'''''
 | bar1-colour=#99ccff
 | bar1-left=0.01
 | bar1-nudge-right=0.5
 | bar1-nudge-down=16.9

 | bar2-from=-4280
 | bar2-text='''[[Unicellular organism|&lt;!--- Simple life ---&gt;Single-celled&lt;br&gt;life]]'''
 | bar2-colour=#b3d9ff
 | bar2-left=0.01
 | bar2-nudge-right=0.4
 | bar2-nudge-down=13.2

 | bar3-from=-3500
 | bar3-text='''''&lt;small&gt;[[Evolution of photosynthesis|&lt;span style=&quot;color:green;&quot;&gt;photosynthesis&lt;/span&gt;]]&lt;/small&gt;'''''
 | bar3-colour=#99ffff
 | bar3-left=0.07
 | bar3-nudge-right=0.2
 | bar3-nudge-down=9.5

 | bar4-from=-2100
 | bar4-text='''[[Eukaryote|Eukaryotes]]'''
 | bar4-colour=#b3ffea
 | bar4-left=0.14
 | bar4-nudge-down=6

 | bar5-from=-1500
 | bar5-text='''[[Multicellular organism|&lt;!--- Complex life ---&gt;Multicellular&lt;br&gt;life]]'''
 | bar5-colour=#ccffe7
 | bar5-left=0.14
 | bar5-nudge-down=0.8

 | bar6-from=-443.8
 | bar6-text=
 | bar6-colour=#cc9900
 | bar6-left=0.2
 | bar6-nudge-down=2.0

 | bar7-from=-360
 | bar7-text='''[[Silurian#Flora and fauna|&lt;span style=&quot;color:white;&quot;&gt;Land life&lt;/span&gt;]]'''
 | bar7-colour=
 | bar7-left=0.25
 | bar7-nudge-down=1.55

 | bar8-from=-300
 | bar8-to=-65.5
 | bar8-text=&lt;small&gt;'''[[Dinosaur|Dinosaurs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;]]'''&lt;/small&gt;
 | bar8-colour=#e6b800
 | bar8-left=0.25
 | bar8-nudge-down=0.58

 | bar9-from=-200
 | bar9-text=&lt;small&gt;'''[[Mammal|Mammals]]'''&lt;/small&gt;
 | bar9-colour=#ffcc00
 | bar9-left=0.3 
 | bar9-nudge-down=0.5

 | bar10-from=-140 &lt;!--- see =&gt; http://www.bbc.com/news/science-environment-40780491 - and =&gt;  https://www.nature.com/articles/ncomms16047 ---&gt;
 | bar10-text=&lt;small&gt;'''[[Flowering plant|Flowers]]'''&lt;/small&gt;
 | bar10-colour=#ffff00
 | bar10-left=0.367
 | bar10-nudge-down=0.0 

 | bar11-from=-2
 | bar11-colour=blue
 | bar11-left=0.45

 | note1-at=-4540 &lt;!--- Estimated age of [[Earth]] is 4540 mya - also, see [[Age of the Earth]] ---&gt;
 | note1=&lt;div style=&quot;line-height:9pt&quot;&gt;[[History of Earth|Earliest Earth]] ([[Age of the Earth|4540]])&lt;/div&gt;

 | note2-at=-4412 &lt;!--- Water present on early Earth at least 4404  8 mya - see [[Origin of water on Earth#Water in the development of the Earth]] - and =&gt; http://www.geology.wisc.edu/~valley/zircons/Wilde2001Nature.pdf ---&gt;
 | note2=&lt;div style=&quot;line-height:9pt&quot;&gt;[[Origin of water on Earth#Water in the development of Earth|Earliest water]]&lt;/div&gt;

 | note3-at=-4280 &lt;!--- Earliest evidence of Life on Earth is as early as 4280 mya - see [[Abiogenesis]] - and =&gt; http://www.nature.com/nature/journal/v543/n7643/full/nature21377.html ---&gt;
 | note3=&lt;div style=&quot;line-height:9pt&quot;&gt;[[&lt;!--- Abiogenesis ---&gt;Earliest known life forms|Earliest life&lt;!--- &lt;br&gt;(4280) ---&gt;]]&lt;/div&gt;

 | note4-at=-3900
 | note4=&lt;div style=&quot;line-height:9pt&quot;&gt;&lt;small&gt;[[Late Heavy Bombardment|LHB meteorites]]&lt;/small&gt;&lt;/div&gt;

 | note5-at=-3500
 | note5=&lt;div style=&quot;line-height:9pt&quot;&gt;[[Geological history of oxygen|Earliest oxygen]]&lt;/div&gt;

 | note6-at=-2500
 | note6=&lt;div style=&quot;line-height:9pt&quot;&gt;&lt;small&gt;[[Geological history of oxygen|Atmospheric oxygen]]&lt;/small&gt;&lt;/div&gt; 

 | note7-at=-2300
 | note7=&lt;div style=&quot;line-height:9pt&quot;&gt;&lt;small&gt;[[Great Oxygenation Event|Oxygen crisis]]&lt;/small&gt;&lt;/div&gt;

 | note8-at=-1200 &lt;!--- earliest evidence of sexual reproduction is 1200 mya - see [[Evolution of sexual reproduction#Origin of sexual reproduction]] ---&gt;
 | note8=&lt;div style=&quot;line-height:9pt&quot;&gt;[[Evolution of sexual reproduction#Origin of sexual reproduction|Earliest sexual reproduction]]&lt;/div&gt;

 | note9-at=-630
 | note9=&lt;div style=&quot;line-height:9pt&quot;&gt;&lt;small&gt;[[Ediacaran biota|Ediacara biota]]&lt;/small&gt;&lt;/div&gt;
 | note9-nudge-down=0.0

 | note10-at=-541
 | note10=&lt;div style=&quot;line-height:9pt&quot;&gt;&lt;small&gt;[[Cambrian explosion|{{font|size=90%|color=#0645ad|Cambrian explosion}}]]&lt;/small&gt;&lt;/div&gt;
 | note10-nudge-up=0.0

 | note11-at=-1
 | note11=&lt;div style=&quot;line-height:9pt&quot;&gt;[[Human|Earliest humans]]&lt;/div&gt;

 | note12=&lt;center&gt;&lt;span style=&quot;display:block&quot;&gt;[[Phanerozoic|P&lt;br&gt;h&lt;br&gt;a&lt;br&gt;n&lt;br&gt;e&lt;br&gt;r&lt;br&gt;o&lt;br&gt;z&lt;br&gt;o&lt;br&gt;i&lt;br&gt;c]]&lt;/span&gt;&lt;/center&gt;&lt;!--- from Present to -0541 mya ---&gt; 
 | note12-size=70%
 | note12-at={{#expr:-{{period end|Phanerozoic}}-110}}
 | note12-nudge-left=13
 | note12-nudge-down=0
 | note12-remove-arrow=yes
 
 | note13=&lt;center&gt;&lt;span style=&quot;display:block&quot;&gt;[[Proterozoic|&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;P&lt;br&gt;r&lt;br&gt;o&lt;br&gt;t&lt;br&gt;e&lt;br&gt;r&lt;br&gt;o&lt;br&gt;z&lt;br&gt;o&lt;br&gt;i&lt;br&gt;c]]&lt;/span&gt;&lt;/center&gt;&lt;!--- from -0541 to -2500 mya ---&gt; 
 | note13-size=70%
 | note13-at={{#expr:-{{period end|Proterozoic}}-90}}
 | note13-nudge-left=13 
 | note13-nudge-down=1.25
 | note13-remove-arrow=yes

 | note14=&lt;center&gt;&lt;span style=&quot;display:block&quot;&gt;[[Archean|&lt;br&gt;&lt;br&gt;&lt;br&gt;A&lt;br&gt;r&lt;br&gt;c&lt;br&gt;h&lt;br&gt;e&lt;br&gt;a&lt;br&gt;n]]&lt;/span&gt;&lt;/center&gt;&lt;!--- from -2500 to -4000 mya ---&gt;  
 | note14-size=70%
 | note14-at={{#expr:-{{period end|Archean}}-90}}
 | note14-nudge-left=13 
 | note14-nudge-down=1.5
 | note14-remove-arrow=yes

 | note15=&lt;center&gt;&lt;span style=&quot;display:block&quot;&gt;[[Hadean|H&lt;br&gt;a&lt;br&gt;d&lt;br&gt;e&lt;br&gt;a&lt;br&gt;n]]&lt;/span&gt;&lt;/center&gt;&lt;!--- from -4000 to -4600 mya ---&gt; 
 | note15-size=70%
 | note15-at={{#expr:-{{period end|Hadean}}-30}}
 | note15-nudge-left=13
 | note15-nudge-down=0.5
 | note15-remove-arrow=yes

 | note30-at=-2850&lt;!--- -2800 to -2900 mya - Pongola glaciation ---&gt;
 | note30=&lt;div style=&quot;position: absolute; left: -000px; top: 000px&quot;&gt;&lt;span style=&quot;font:bold 10px Arial;display:inline;background-color:rgba(255,165,0,0.5);padding:3.537px 10px 3.537px 10px;&quot;&gt;[[Mesoarchean|&lt;span style=&quot;color:black;&quot;&gt;&lt;small&gt;Pongola&lt;/small&gt;&lt;/span&gt;]]&lt;/span&gt;&lt;/div&gt;
 | note30-nudge-left=14.0
 | note30-nudge-up=0.1
 | note30-remove-arrow=yes

 | note31-at=-2250&lt;!--- -2100 to -2400 mya - Huronian glaciation ---&gt;
 | note31=&lt;div style=&quot;position: absolute; left: 002px; top: 000px&quot;&gt;&lt;span style=&quot;font:bold 10px Arial;display:inline;background-color:rgba(255,165,0,0.5);padding:14px 4px 14px 4px;&quot;&gt;[[Huronian glaciation|&lt;span style=&quot;color:black;&quot;&gt;&lt;small&gt;Huronian&lt;/small&gt;&lt;/span&gt;]]&lt;/span&gt;&lt;/div&gt;
 | note31-nudge-left=13.9 
 | note31-nudge-up=0.1
 | note31-remove-arrow=yes

 | note32-at=-677.5&lt;!--- -635 to -720 (-850 &lt; 2015) mya - Cryogenian glaciation ---&gt;
 | note32=&lt;div style=&quot;position: absolute; left: -003px; top: 000px&quot;&gt;&lt;span style=&quot;font:bold 9px Arial;display:inline;background-color:rgba(255,165,0,0.5);padding:3px 4px 3px 4px;&quot;&gt;[[Cryogenian|&lt;span style=&quot;color:black;&quot;&gt;&lt;small&gt;Cryogenian&lt;/small&gt;&lt;/span&gt;]]&lt;/span&gt;&lt;/div&gt;
 | note32-nudge-left=13.5
 | note32-nudge-up=0.4
 | note32-remove-arrow=yes

 | note33-at=-435&lt;!--- -430 to -460 mya - Andean-Saharan glaciation ---&gt;
 | note33=&lt;div style=&quot;position: absolute; left: 009px; top: 000px&quot;&gt;&lt;span style=&quot;font:bold 10px Arial;display:inline;background-color:rgba(255,165,0,0.5);padding:0px 4px 0px 4px;&quot;&gt;[[Andean-Saharan glaciation|&lt;span style=&quot;color:black;&quot;&gt;&lt;small&gt;Andean&lt;/small&gt;&lt;/span&gt;]]&lt;/span&gt;&lt;/div&gt;
 | note33-nudge-left=13.7
 | note33-nudge-up=0.40
 | note33-remove-arrow=yes

 | note34-at=-310&lt;!--- -260 to -360 mya - Karoo glaciation ---&gt;
 | note34=&lt;div style=&quot;position: absolute; left: 015px; top: 000px&quot;&gt;&lt;span style=&quot;font:bold 10px Arial;display:inline;background-color:rgba(255,165,0,0.5);padding:0px 4px 0px 4px;&quot;&gt;[[Karoo Ice Age|&lt;span style=&quot;color:black;&quot;&gt;&lt;small&gt;Karoo&lt;/small&gt;&lt;/span&gt;]]&lt;/span&gt;&lt;/div&gt;
 | note34-nudge-left=13.8 
 | note34-nudge-up=0.25
 | note34-remove-arrow=yes

 | note35-at=-1.3&lt;!--- 0 to -2.588 mya - Quaternary glaciation ---&gt;
 | note35=&lt;div style=&quot;position: absolute; left: 000px; top: -001px&quot;&gt;&lt;span style=&quot;font:bold 9px Arial;display:inline;background-color:rgba(255,165,0,0.5);padding:0px 4px 0px 4px;&quot;&gt;[[Quaternary glaciation|&lt;span style=&quot;color:black;&quot;&gt;&lt;small&gt;Quaternary&lt;/small&gt;&lt;/span&gt;]]&lt;/span&gt;&lt;/div&gt;
 | note35-nudge-left=13.55 
 | note35-nudge-down=0.47
 | note35-remove-arrow=yes

 | caption=[[Cartesian coordinate system#One dimension|Axis scale]]: [[Geologic time scale|millions of years]].&lt;br&gt;&lt;small&gt;&lt;span style=&quot;font:bold 10px Arial;display:inline;background-color:rgba(255,165,0,0.5);padding:0px 4px 0px 4px;&quot;&gt;&lt;span style=&quot;color:black;&quot;&gt;Orange labels: &lt;/span&gt;[[Timeline of glaciation|&lt;span style=&quot;color:black;&quot;&gt;&lt;!--- periods of ---&gt;known '''''ice ages'''''&lt;!--- glaciations ---&gt;.&lt;/span&gt;]]&lt;/span&gt;&lt;/small&gt;&lt;br&gt;&lt;small&gt;Also see: ''[[Template:Human timeline|Human timeline]]'' and ''[[Template:Nature timeline|Nature timeline]]''&lt;/small&gt;

}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ilip2absj8f6jwxf13j0ggdbk559pd9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Link language</title>
    <ns>10</ns>
    <id>3483283</id>
    <revision>
      <id>788232056</id>
      <parentid>788214928</parentid>
      <timestamp>2017-06-30T07:55:51Z</timestamp>
      <contributor>
        <username>Zyxw</username>
        <id>473593</id>
      </contributor>
      <comment>Add parameter to specify a language name for category, for cases where it is different than name generated by Template:ISO 639 name XX. Tested first with /sandbox.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="411">{{#ifexist:Template:ISO 639 name {{{1&lt;noinclude&gt;|&lt;/noinclude&gt;}}}
 |&lt;span class=&quot;languageicon&quot;&gt;{{#invoke:Link language|lang_render|{{ISO 639 name {{{1}}}}}}}&lt;/span&gt;{{category handler
  |main={{#ifeq:{{{1|}}}|en||[[Category:Articles with {{#if:{{{cat-lang|}}}|{{{cat-lang}}}|{{ISO 639 name {{{1}}}}}}}-language external links]]}}
 }}
 |{{error|Invalid language code.}}
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>jgu6xkdobklifktsq443n8udqf4pv9g</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Linktext</title>
    <ns>10</ns>
    <id>22315152</id>
    <revision>
      <id>688769884</id>
      <parentid>282305177</parentid>
      <timestamp>2015-11-02T23:09:48Z</timestamp>
      <contributor>
        <username>CambridgeBayWeather</username>
        <id>294180</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Linktext: Not available at the time ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1594">&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;{{#if:{{{lang|}}}|&lt;span lang=&quot;{{{lang}}}&quot;&gt;}}[[{{{pref|wikt}}}:{{{1}}}|{{{1}}}]]{{{n1|}}}{{#if: {{{2|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{2}}}|{{{2}}}]]}}{{{n2|}}}{{#if: {{{3|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{3}}}|{{{3}}}]]}}{{{n3|}}}{{#if: {{{4|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{4}}}|{{{4}}}]]}}{{{n4|}}}{{#if: {{{5|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{5}}}|{{{5}}}]]}}{{{n5|}}}{{#if: {{{6|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{6}}}|{{{6}}}]]}}{{{n6|}}}{{#if: {{{7|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{7}}}|{{{7}}}]]}}{{{n7|}}}{{#if: {{{8|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{8}}}|{{{8}}}]]}}{{{n8|}}}{{#if: {{{9|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{9}}}|{{{9}}}]]}}{{{n9|}}}{{#if: {{{10|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{10}}}|{{{10}}}]]}}{{{n10|}}}{{#if: {{{11|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{11}}}|{{{11}}}]]}}{{{n11|}}}{{#if: {{{12|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{12}}}|{{{12}}}]]}}{{{n12|}}}{{#if: {{{13|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{13}}}|{{{13}}}]]}}{{{n13|}}}{{#if: {{{14|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{14}}}|{{{14}}}]]}}{{{n14|}}}{{#if: {{{15|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{15}}}|{{{15}}}]]}}{{{n15|}}}{{#if: {{{16|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{16}}}|{{{16}}}]]}}{{{n16|}}}{{#if: {{{17|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{17}}}|{{{17}}}]]}}{{{n17|}}}{{#if: {{{18|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{18}}}|{{{18}}}]]}}{{{n18|}}}{{#if: {{{19|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{19}}}|{{{19}}}]]}}{{{n19|}}}{{#if: {{{20|}}}|{{{lim|}}}[[{{{pref|wikt}}}:{{{20}}}|{{{20}}}]]}}{{{n20|}}}{{#if:{{{lang|}}}|&lt;/span&gt;}}&lt;/includeonly&gt;</text>
      <sha1>jyraq6o8rj6imfluieufk2thvw386hu</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Longitem</title>
    <ns>10</ns>
    <id>38040101</id>
    <revision>
      <id>718758673</id>
      <parentid>718071292</parentid>
      <timestamp>2016-05-05T12:44:24Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>I have to sort this out; adding tracking category.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="230">&lt;div style=&quot;padding:0.1em 0;line-height:1.2em;{{{style|}}}&quot;&gt;{{{1}}}&lt;/div&gt;&lt;includeonly&gt;{{#if:{{{2|}}}|[[Category:Pages using Template:Longitem with unnamed style parameter]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>druaduufanfoh3rf6p66canulwflngz</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Lower</title>
    <ns>10</ns>
    <id>8871184</id>
    <revision>
      <id>680227781</id>
      <parentid>617176686</parentid>
      <timestamp>2015-09-09T14:39:51Z</timestamp>
      <contributor>
        <username>NeilN</username>
        <id>409043</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Lower: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="135">&lt;span style=&quot;position: relative; top: {{#if:{{{2|}}}|{{{1}}}|0.6em}};&quot;&gt;{{{2|{{{1}}}}}}&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>6tpt2r5c740uplp9d5a3i5mo5ejtdxk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:MONTHNAME</title>
    <ns>10</ns>
    <id>4858813</id>
    <revision>
      <id>772147331</id>
      <parentid>388698949</parentid>
      <timestamp>2017-03-25T16:04:13Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:MONTHNAME]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indefi...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="387">&lt;includeonly&gt;{{#if:{{{1|}}}|{{#switch:{{MONTHNUMBER|{{{1}}}}}|1=January|2=February|3=March|4=April|5=May|6=June|7=July|8=August|9=September|10=October|11=November|12=December|Incorrect required parameter 1=''month''!}}|Missing required parameter 1=''month''!}}&lt;/includeonly&gt;&lt;noinclude&gt;

{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>4cf5sge5nt8b4gwjre9u8yifa3kstt2</sha1>
    </revision>
  </page>
  <page>
    <title>Template:MONTHNUMBER</title>
    <ns>10</ns>
    <id>4859929</id>
    <restrictions>edit=sysop:move=sysop</restrictions>
    <revision>
      <id>388698933</id>
      <parentid>383624540</parentid>
      <timestamp>2010-10-04T15:40:33Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>remove {{pp-template}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="655">&lt;includeonly&gt;{{#if:{{{1|}}}
 |{{#switch:{{lc:{{{1}}}}}
  |january|jan=1
  |february|feb=2
  |march|mar=3
  |apr|april=4
  |may=5
  |june|jun=6
  |july|jul=7
  |august|aug=8
  |september|sep|sept=9
  |october|oct=10
  |november|nov=11
  |december|dec=12
  |{{#ifexpr:{{{1}}}&lt;0
   |{{#ifexpr:(({{{1}}})round 0)!=({{{1}}})
    |{{#expr:12-(((0.5-({{{1}}}))round 0)mod 12)}}
    |{{#expr:12-(((11.5-({{{1}}}))round 0)mod 12)}}
   }}
  |{{#expr:(((10.5+{{{1}}})round 0)mod 12)+1}}
  }}
 }}
 |Missing required parameter 1=''month''!
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>mqnyq8bnd6mmrrl70a3uwqgeo8aevfc</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main</title>
    <ns>10</ns>
    <id>1208356</id>
    <revision>
      <id>771512324</id>
      <parentid>697196828</parentid>
      <timestamp>2017-03-21T23:21:15Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <minor/>
      <comment>Anthony Appleyard moved page [[Template:Main article]] to [[Template:Main]]: [https://en.wikipedia.org/wiki/Template_talk:Main_article#edittemplateprotected]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="138">{{#invoke:main|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>jkpvpyms818jhpg2lkzsq5qur195qbr</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main article</title>
    <ns>10</ns>
    <id>53560346</id>
    <redirect title="Template:Main" />
    <revision>
      <id>771512326</id>
      <timestamp>2017-03-21T23:21:16Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <comment>Anthony Appleyard moved page [[Template:Main article]] to [[Template:Main]]: [https://en.wikipedia.org/wiki/Template_talk:Main_article#edittemplateprotected]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="44">#REDIRECT [[Template:Main]]

{{R from move}}</text>
      <sha1>jyxj6hsq03mwmz6m8pkogauxy595atk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main other</title>
    <ns>10</ns>
    <id>17220251</id>
    <revision>
      <id>388689011</id>
      <parentid>334818505</parentid>
      <timestamp>2010-10-04T14:46:48Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>remove {{pp-template}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="409">{{#switch:
  &lt;!--If no or empty &quot;demospace&quot; parameter then detect namespace--&gt;
  {{#if:{{{demospace|}}} 
  | {{lc: {{{demospace}}} }}    &lt;!--Use lower case &quot;demospace&quot;--&gt;
  | {{#ifeq:{{NAMESPACE}}|{{ns:0}}
    | main
    | other
    }} 
  }}
| main     = {{{1|}}}
| other
| #default = {{{2|}}}
}}&lt;noinclude&gt;

{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>ngt28vb1n5t4bh1su57btnqyofkd1d5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Mpl</title>
    <ns>10</ns>
    <id>2370000</id>
    <revision>
      <id>634513664</id>
      <parentid>634513430</parentid>
      <timestamp>2014-11-19T10:01:55Z</timestamp>
      <contributor>
        <username>JorisvS</username>
        <id>801435</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1186">{{#switch:{{{1}}}
 | s = 
 | S = {{nowrap
        |[[&lt;!---link:---&gt;S/{{{2}}} ({{{3}}}&lt;!----&gt;{{#if:{{{5|}}}|&lt;!--then:--&gt;{{{4}}}) {{{5}}}|&lt;!--else:--&gt;) {{{4}}}&lt;!--end#if:--&gt;}}&lt;!--
             linkname:--&gt;|S/{{{2}}} ({{{3}}}&lt;!----&gt;{{#if:{{{5|}}}|&lt;!--then:--&gt;{{lower|0.3em|{{resize|80%|{{{4}}}}}}}) {{{5}}}|&lt;!--else:--&gt;) {{{4}}}&lt;!--end#if:--&gt;}}&lt;!--
       --&gt;]]&lt;!--
    --&gt;}}
 | {{#expr:{{{1}}}*1}} = {{nowrap
                          |[[&lt;!---link:---&gt;({{{1}}}) {{{2}}}{{#if:{{{3|}}}|&lt;!--then:--&gt;{{{3}}}|&lt;!--else:(nothing)--&gt;}}&lt;!--
                               linkname:--&gt;|({{{1}}}) {{{2}}}{{#if:{{{3|}}}|&lt;!--then:--&gt;{{lower|0.3em|{{resize|80%|{{{3}}}}}}}|&lt;!--else:(nothing)--&gt;}}&lt;!--
                         --&gt;]]&lt;!--
                      --&gt;}}
 | #default = {{nowrap
               |[[&lt;!---link:---&gt;{{{1}}}{{#if:{{{2|}}}|&lt;!--then:--&gt;{{{2}}}|&lt;!--else:(nothing)--&gt;}}&lt;!--
                    linkname:--&gt;|{{{1}}}{{#if:{{{2|}}}|&lt;!--then:--&gt;{{lower|0.3em|{{resize|80%|{{{2}}}}}}}|&lt;!--else:(nothing)--&gt;}}&lt;!--
              --&gt;]]&lt;!--
           --&gt;}}
}}&lt;noinclude&gt;
{{pp-template}}

{{documentation|Template:mp/doc}}

[[Category:Minor planet formatting and function templates]]
&lt;/noinclude&gt;</text>
      <sha1>nxwsnn40un7prw7n3crbqwzocewxtj1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:MultiReplace</title>
    <ns>10</ns>
    <id>51070198</id>
    <revision>
      <id>804521654</id>
      <parentid>749661841</parentid>
      <timestamp>2017-10-09T15:36:57Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:MultiReplace]]&quot;: [[WP:High-risk templates|Highly visible template]]; 34,000+ transclusions ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="48">{{#invoke:MultiReplace|main}}&lt;noinclude&gt;
{{doc}}</text>
      <sha1>kznka24wfwqv2zkdbiggnftsf5n8ixo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Multiple image</title>
    <ns>10</ns>
    <id>16911774</id>
    <revision>
      <id>634254991</id>
      <parentid>634097939</parentid>
      <timestamp>2014-11-17T18:41:05Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>use lua version as discussed on the talk page (please do revert though if this causes serious problems)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="131">{{#invoke:Multiple image|render}}&lt;noinclude&gt;{{documentation}}&lt;!-- PLEASE ADD CATEGORIES TO THE /doc SUBPAGE, THANKS --&gt;&lt;/noinclude&gt;</text>
      <sha1>q9oxjh8m7wtojz4v77x8mc2nmpowt0r</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Nature</title>
    <ns>10</ns>
    <id>12174033</id>
    <revision>
      <id>804163886</id>
      <parentid>747418162</parentid>
      <timestamp>2017-10-07T05:02:59Z</timestamp>
      <contributor>
        <username>Plantdrew</username>
        <id>14423536</id>
      </contributor>
      <comment>timeline template spam</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1883">{{Navbox
| name = Nature
| state = {{{state&lt;includeonly&gt;|{{{1|autocollapse}}}&lt;/includeonly&gt;}}}
| bodyclass = hlist
| title = Elements of [[nature]]
| groupstyle = text-align:center; 

| group1 = [[Universe]]
| list1 =
* [[Space]]
* [[Time]]
* [[Energy]]
* [[Matter]]
* [[Mathematics#Change|Change]]

| group2 = [[Earth]]
| list2 =
* [[Earth science]]
* [[History of Earth|History]]&amp;nbsp;([[Geological history of Earth|geological]])
* [[Structure of the Earth|Structure]]
* [[Geology]]
* [[Plate tectonics]]
* [[Ocean]]s
* [[Gaia hypothesis]]
* [[Future of Earth|Future]]

| group3 = [[Weather]]
| list3 =
* [[Meteorology]]
&lt;!--(Alphabetical:)--&gt;
* [[Atmosphere of Earth|Atmosphere {{smaller|(Earth)}}]]
* [[Climate]]
* [[Cloud]]s
* [[Sunlight]]
* [[Tide]]s
* [[Wind]]

| group4 = [[Natural environment]]
| list4 =
* [[Ecology]]
* [[Ecosystem]]
* [[Field (physics)|Field]]
* [[Radiation]]
* [[Wilderness]]
* [[Wildfire]]s

| group5 = [[Life]]
| list5 =
 {{Navbox |child
  |groupstyle=text-align:center;
  | list1 =
* [[Abiogenesis|Origin {{smaller|(abiogenesis)}}]]
* [[Evolutionary history of life|Evolutionary history]]
* [[Biosphere]]
* [[Biological organisation|Hierarchy]]
* [[Biology]]&amp;nbsp;([[Astrobiology|astrobiology]])

  | list2 =
* [[Organism]]
* [[Eukaryote|Eukaryota]]
&lt;!--Lowercase (sublists):--&gt;
** [[flora]]
*** [[plant]]s 
** [[fauna]]
*** [[animal]]s
** [[Fungus|fungi]]
** [[protist]]a
* [[Prokaryote]]s
** [[archaea]]
** [[bacteria]]
* ''[[Virus]]es''&lt;!--(italics as not universally considered to be alive)--&gt;
 }}

| belowstyle = font-weight:bold;
| below =
* {{icon|Category}} '''[[:Category:Nature]]'''
* {{icon|Portal}} '''[[Portal:Science]]'''

}}&lt;noinclude&gt;
{{Documentation
 | content =
{{Collapsible option |statename=optional}}

[[Category:Science and nature templates]]
[[Category:Environment navigational boxes]]
}}&lt;!--(end Documentation)--&gt;
&lt;/noinclude&gt;</text>
      <sha1>b7zjlrzmbzdzg2hyitckyrx6dc4zins</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Nature nav</title>
    <ns>10</ns>
    <id>38958856</id>
    <redirect title="Template:Nature" />
    <revision>
      <id>547699263</id>
      <timestamp>2013-03-29T22:16:09Z</timestamp>
      <contributor>
        <username>CsDix</username>
        <id>17959194</id>
      </contributor>
      <comment>CsDix moved page [[Template:Nature nav]] to [[Template:Nature]]: &quot;nav&quot; not necessary</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="29">#REDIRECT [[Template:Nature]]</text>
      <sha1>jelgp10bv00tdbysc7wnxhdlwq2lmq6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Navbar</title>
    <ns>10</ns>
    <id>5277509</id>
    <revision>
      <id>776701623</id>
      <parentid>776701469</parentid>
      <timestamp>2017-04-22T18:49:17Z</timestamp>
      <contributor>
        <username>Plastikspork</username>
        <id>5075409</id>
      </contributor>
      <comment>Closed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">&lt;includeonly&gt;{{#invoke:Navbar|navbar}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>fptzky4feeh5ybkj9wgkbuuk3emtln7</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Navbox</title>
    <ns>10</ns>
    <id>995954</id>
    <revision>
      <id>630098073</id>
      <parentid>622579838</parentid>
      <timestamp>2014-10-18T12:29:00Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>linebreaks</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">&lt;includeonly&gt;{{#invoke:Navbox|navbox}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>tqodcaa2vvhehqaod229udlla0wimek</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Navboxes</title>
    <ns>10</ns>
    <id>17110335</id>
    <revision>
      <id>798233244</id>
      <parentid>753718313</parentid>
      <timestamp>2017-08-31T18:30:44Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="872">{{#invoke:navbox|navbox
|navbar = {{#ifeq:{{{state|}}}|off |off |plain}}
|title = {{{title|Links to related articles}}}
|list1 = {{{list1|{{{list|}}}}}}
|state = {{{state|&lt;includeonly&gt;collapsed&lt;/includeonly&gt;}}}
|titlestyle = background:{{{bg|#e8e8ff}}};{{#if:{{{fg|}}}|color:{{{fg}}};}}{{#if:{{{bordercolor|}}}|border: 1px solid {{{bordercolor}}};}}{{{titlestyle|}}}
|liststyle = font-size:114%;
|listpadding = 0px;
|tracking = no
}}{{#if:{{{list1|{{{list|}}}}}}||{{main other|[[Category:Navboxes template with no content]]}}}}{{#invoke:Check for unknown parameters|check|unknown={{main other|[[Category:Pages using navboxes with unknown parameters|_VALUE_{{PAGENAME}}]]}}|preview=Page using [[Template:Navboxes]] with unknown parameter &quot;_VALUE_&quot;|ignoreblank=y| bg | bordercolor | fg | list | list1 | state | title | titlestyle }}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ripoyqkx6v32bwgv7p2zuzla7y4u6qk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Next period</title>
    <ns>10</ns>
    <id>17129593</id>
    <revision>
      <id>784255100</id>
      <parentid>577842274</parentid>
      <timestamp>2017-06-07T09:03:07Z</timestamp>
      <contributor>
        <username>Smith609</username>
        <id>846901</id>
      </contributor>
      <comment>Add informal Ediacaran subdivisions</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="8491">{{#switch:{{lc:{{{1|{{PAGENAME}}}}}}}
|hadean=archean 
|isuan=swazian
|archean=proterozoic 
|proterozoic|precambrian=phanerozoic

|eoarchean=palaeoarchean
|palaeoarchean|paleoarchean=mesoarchean
|mesoarchean=neoarchean
|neoarchean=paleoproterozoic 
|paleoproterozoic=mesoproterozoic 
|mesoproterozoic=neoproterozoic 
|neoproterozoic=paleozoic 
|proterozoic=paleozoic
|sinian=paleozoic
|sturtian=vendian
|paleozoic=mesozoic 
|mesozoic=cenozoic 

|siderian=rhyacian
|rhyacian=orosirian
|orosirian=statherian
|statherian=calymmian
|calymmian=ectasian
|ectasian=stenian
|stenian=tonian
|tonian=cryogenian
|baikalian=vendian
|riphean=aimchanian
|aimchanian=mayanian
|cryogenian=ediacaran
|ediacaran=cambrian 
|vendian=cambrian
|merioneth=ordovician
|cambrian=ordovician 
|ordovician=silurian 
|silurian=devonian 
|devonian=mississippian
|mississippian=pennsylvanian
|pennsylvanian|carboniferous=permian 
|permian=triassic 
|triassic=jurassic 
|jurassic=cretaceous 
|cretaceous=paleogene 
|paleogene=neogene 

|neoarchean=statherian
|statherian=tonian
|early ediacaran|lower ediacaran=mid ediacaran
|mid ediacaran|middle ediacaran=late ediacaran
|terminal ediacaran|late ediacaran|tonian=early cambrian

|terreneuvian|tommotian=series 2
|atdabanian=botomian
|series 2|cambrian series 2=series 3
|series 3|cambrian series 3=upper cambrian
|middle cambrian|mid cambrian|st davids=late cambrian
|manykaian|nemakit-daldynian=caerfai
|early cambrian|lower cambrian|caerfai=middle cambrian
|mayan=nganasanian
|nganasanian|mindyallan=merioneth
|late cambrian|upper cambrian|franconian|furongian|mansian=lower ordovician&lt;!--Franconian doesn't really belong here but this'll do for a crude approximation--&gt;

|early ordovician|lower ordovician|late early ordovician=middle ordovician
|middle ordovician|mid ordovician = late ordovician
|late ordovician|upper ordovician=llandovery|llandovery=wenlock
|wenlock=ludlow
|ludlow=pridoli
|pridoli|unnamed pridoli stage=lochkovian
|early silurian|lower silurian=late silurian 
|late silurian|upper silurian=early devonian
|early devonian|lower devonian=middle devonian
|middle devonian|mid devonian=late devonian
|late devonian|upper devonian=mississippian
|early carboniferous|lower carboniferous|mississippian=pennsylvanian
|early mississippian|lower mississippian=middle mississippian
|middle mississippian|mid mississippian=late mississippian
|late mississippian|upper mississippian=early pennsylvanian
|early pennsylvanian|lower pennsylvanian=middle pennsylvanian
|middle pennsylvanian|mid pennsylvanian=late pennsylvanian
|late pennsylvanian|upper pennsylvanian=early permian
|late carboniferous|upper carboniferous|pennsylvanian=permian
|early permian|lower permian|cisuralian=middle permian
|middle permian|mid permian|guadalupian=late permian
|late permian|upper permian|lopingian=early triassic
|early triassic|lower triassic=middle triassic
|middle triassic|mid triassic=late triassic
|late triassic|upper triassic=early jurassic
|early jurassic|lower jurassic=middle jurassic
|middle jurassic|mid jurassic=late jurassic
|late jurassic|upper jurassic=early cretaceous
|early cretaceous|lower cretaceous=late cretaceous
|late cretaceous|upper cretaceous|senonian=paleocene
|paleocene=eocene
|eocene=oligocene 
|oligocene=miocene 
|miocene=pliocene 
|pliocene=pleistocene
|pleistocene|rancholabrean=holocene

&lt;!-- these are duplicated below, and the last one is wrong --&gt;
&lt;!--
|early paleocene|lower paleocene=middle paleocene
|middle paleocene|mid paleocene=late paleocene
|late paleocene|upper paleocene=early eocene
|early eocene|lower eocene=middle eocene
|middle eocene|mid eocene=late eocene
|late eocene|upper eocene=early oligocene
|early oligocene|lower oligocene=late oligocene
|late oligocene|upper oligocene=early miocene
|early miocene|lower miocene=middle miocene
|middle miocene|mid miocene=late miocene
|late miocene|upper miocene=early pliocene
|early pliocene|lower pliocene=late pliocene
|late pliocene|upper pliocene=holocene
--&gt;

|fortunean|earliest cambrian=stage 2
|cambrian stage 2|stage 2=stage 3
|cambrian stage 3|stage 3=stage 4
|cambrian stage 4|stage 4|late early cambrian=stage 5
|cambrian stage 5|stage 5|early middle cambrian=drumian
|drumian=guzhangian
|guzhangian=paibian
|late middle cambrian|paibian=jiangshanian
|jiangshanian=stage 10
|cambrian stage 10|stage 10=tremadocian
|tremadocian=floian
|arenig|floian=dapingian
|ordovician iii|dapingian|early middle ordovician=darriwilian
|darriwilian=sandbian
|ordovician v|sandbian=katian
|early late ordovician=middle late ordovician
|ordovician vi|katian|middle late ordovician=hirnantian
|hirnantian=llandovery 
|llandovery=wenlock 
|wenlock=ludlow 
|ludlow=pridoli
|pridoli=lochkovian
|lochkovian=pragian
|pragian|praghian=emsian
|emsian=eifelian
|eifelian=givetian
|givetian=frasnian
|frasnian=famennian
|famennian=early mississippian
|early mississippian|lower mississippian=middle mississippian 
|middle mississippian|mid mississippian=late mississippian 
|late mississippian|upper mississippian=early pennsylvanian 
|early pennsylvanian|lower pennsylvanian=middle pennsylvanian 
|middle pennsylvanian|mid pennsylvanian=late pennsylvanian 
|late pennsylvanian|upper pennsylvanian=asselian
|namurian=westphalian
|westphalian=stephanian
|stephanian=permian
|asselian=sakmarian
|sakmarian=artinskian
|artinskian=kungurian
|kungurian=roadian
|roadian|ufimian=wordian
|wordian=capitanian
|capitanian=wuchiapingian
|wuchiapingian|longtanian=changhsingian
|changhsingian=induan
|induan=olenekian
|olenekian|spathian=anisian
|hydaspian=pelsonian
|pelsonian=illirian
|anisian|illirian=ladinian
|lower ladinian=middle ladinian
|middle ladinian=upper ladinian
|ladinian|upper ladinian=carnian
|carnian=norian
|norian=rhaetian
|rhaetian=hettangian
|hettangian=sinemurian
|sinemurian=pliensbachian
|pliensbachian=toarcian
|toarcian=aalenian
|aalenian=bajocian
|bajocian=bathonian
|bathonian=callovian
|callovian=oxfordian
|oxfordian=kimmeridgian
|kimmeridgian=tithonian
|tithonian=berriasian
|berriasian=valanginian
|valanginian=hauterivian
|hauterivian|neocomian=barremian
|barremian=aptian
|aptian=albian
|albian=cenomanian
|cenomanian=turonian
|turonian|gallic=coniacian
|coniacian=santonian
|santonian=campanian
|campanian=maastrichtian
|maastrichtian=early paleocene 
|early paleocene|lower paleocene=middle paleocene 
|middle paleocene|mid paleocene=late paleocene 
|late paleocene|upper paleocene=early eocene 
|early eocene|lower eocene=middle eocene 
|middle eocene|mid eocene=late eocene 
|late eocene|upper eocene=early oligocene 
|early oligocene|lower oligocene=late oligocene 
|late oligocene|upper oligocene=early miocene 
|early miocene|lower miocene=middle miocene 
|middle miocene|mid miocene=late miocene 
|late miocene|upper miocene=early pliocene 
|early pliocene|lower pliocene=late pliocene 
|late pliocene|upper pliocene=early pleistocene
|early pleistocene|lower pleistocene=middle pleistocene
|middle pleistocene|mid pleistocene=late pleistocene
|late pleistocene=holocene

|rhuddanian=aeronian
|aeronian=telychian
|telychian=sheinwoodian
|sheinwoodian=homerian
|homerian=gorstian
|gorstian=ludfordian
|ludfordian=pridoli

|famennian=tournaisian
|tournaisian=visean
|visean=serpukhovian
|serpukhovian=bashkirian
|bashkirian=moscovian
|moscovian=kasimovian
|kasimovian=gzhelian
|gzhelian=asselian
|asselian=sakmarian
|sakmarian=artinskian
|artinskian=kungurian
|kungurian=roadian
|roadian=wordian
|wordian=capitanian
|capitanian=wuchiapingian
|wuchiapingian=changhsingian

|puercan=torrejonian
|torrejonian=tiffanian
|tiffanian=clarkforkian
|clarkforkian=wasatchian
|wasatchian=bridgerian
|bridgerian=uintan
|uintan=duchesnean
|duchesnean=chadronian
|chadronian=orellan
|orellan=whitneyan
|whitneyan=arikareean
|arikareean=hemingfordian
|hemingfordian=barstovian
|barstovian=clarendonian
|clarendonian=hemphillian
|hemphillian=blancan
|blancan=irvingtonian
|irvingtonian=rancholabrean


|danian=selandian
|selandian=thanetian
|thanetian=ypresian
|ypresian=lutetian
|mp 10=mp 11
|lutetian|mp 11=bartonian
|bartonian=priabonian
|priabonian=rupelian
|rupelian=chattian
|chattian=aquitanian
|aquitanian=burdigalian
|burdigalian=langhian
|langhian=serravallian
|serravallian=tortonian
|tortonian=messinian
|messinian=zanclean
|zanclean=piacenzian
|piacenzian=gelasian
|gelasian=calabrian

|tertiary=quaternary
|neogene=quaternary
|holocene|quaternary|cenozoic|phanerozoic|now|recent|present=now
|{{{1|{{PAGENAME}} }}} }}&lt;noinclude&gt;{{template doc}}&lt;/noinclude&gt;</text>
      <sha1>hf6999fb24tg7m8c7odtb26w166mq1u</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Nobold</title>
    <ns>10</ns>
    <id>10981056</id>
    <revision>
      <id>772147408</id>
      <parentid>224914185</parentid>
      <timestamp>2017-03-25T16:04:17Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Nobold]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indefinit...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="164">&lt;span style=&quot;font-weight:normal;&quot;&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- PLEASE ADD CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS --&gt;
&lt;/noinclude&gt;</text>
      <sha1>jd091g26r8rrz2i74pnanvl0wum30wj</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Nowrap</title>
    <ns>10</ns>
    <id>1627975</id>
    <restrictions>edit=sysop:move=sysop</restrictions>
    <revision>
      <id>692794261</id>
      <parentid>462345338</parentid>
      <timestamp>2015-11-28T10:13:53Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Adapt comment; edits inside noinclude blocks should not affect job queue, but won't kill parser either way.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="145">&lt;span class=&quot;nowrap&quot;&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc page; interwikis go to Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>avb5tcymgupik1ikutqclidkj9tnitx</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ns has subpages</title>
    <ns>10</ns>
    <id>22589696</id>
    <revision>
      <id>637438114</id>
      <parentid>637437596</parentid>
      <timestamp>2014-12-10T06:37:09Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>convert this to use [[Module:Ns has subpages]] - this gets the subpage status directly from MediaWiki, avoiding the need to update the template when namespaces change</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="185">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:Ns has subpages|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>0pg457y46td6p53rdt8tyc76jeg9pa8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Period end</title>
    <ns>10</ns>
    <id>17126181</id>
    <revision>
      <id>772147419</id>
      <parentid>433647208</parentid>
      <timestamp>2017-03-25T16:04:18Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Period end]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indef...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="122">&lt;includeonly&gt;{{Period start|{{next period|{{{1|{{PAGENAME}}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ggu56mt27u35n5ddg6fdrq8zc6iav8e</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Period id</title>
    <ns>10</ns>
    <id>50980396</id>
    <revision>
      <id>734737683</id>
      <parentid>734737682</parentid>
      <timestamp>2016-08-16T11:14:03Z</timestamp>
      <contributor>
        <username>NeilN</username>
        <id>409043</id>
      </contributor>
      <comment>Adding {{pp-template}} ([[WP:TW|TW]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="485">&lt;noinclude&gt;{{pp-template|small=yes}}&lt;/noinclude&gt;{{#switch: {{lc:{{{1}}}}}
| series 2 = cambrian series 2
| series 3 = cambrian series 3
| stage 2  = cambrian stage 2
| stage 3  = cambrian stage 3
| stage 4  = cambrian stage 4
| stage 5  = cambrian stage 5
| stage 10 = cambrian stage 10
| {{MultiReplace|{{lc:{{{1}}}}}&lt;!--
  --&gt;|-| &lt;!--
  --&gt;|%f[%w]palaeo|paleo&lt;!--
  --&gt;|%f[%w]early%f[%W]|lower&lt;!--
  --&gt;|%f[%w]mid%f[%W]|middle&lt;!--
  --&gt;|%f[%w]late%f[%W]|upper}}
}}&lt;noinclude&gt;
{{doc}}</text>
      <sha1>so03zyzf5uvt7kgdbt6mvnxqmiw89s9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Period start</title>
    <ns>10</ns>
    <id>17126152</id>
    <revision>
      <id>802883274</id>
      <parentid>786823379</parentid>
      <timestamp>2017-09-29T01:41:03Z</timestamp>
      <contributor>
        <username>Primefac</username>
        <id>11508456</id>
      </contributor>
      <comment>update from sandbox per TPER</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="9361">&lt;includeonly&gt;{{#expr:{{#switch: {{Period id|{{{1|{{PAGENAME}}}}}}}

&lt;!-- Some other notable dates --&gt;

|burgess shale|middle middle cambrian&lt;!--Middle middle is approximate; cf. Burgess Shale--&gt;=508
|chengjiang=520
|sirius passet=518
|doushantou=570

&lt;!-- Data from ICS chart

| Supereon
|   Eon
|     Era
|       Period
|         Epoch/Series
|           Age/Stage
|             other division (other sources - not in ICS chart)
The names from the ICS chart are always first on the line.
--&gt;
| precambrian
|   hadean              = 4600
|   archean
|     eoarchean | isuan = 4000
|     paleoarchean      = 3600
|     mesoarchean       = 3200
|     neoarchean        = 2800
|   proterozoic
|     paleoproterozoic
|       siderian        = 2500
|       rhyacian        = 2300
|       orosirian       = 2050
|       statherian      = 1800
|     mesoproterozoic
|       calymmian       = 1600
|       ectasian | riphean
                        = 1400
|       stenian         = 1200
|             mayanian  = 1100
|             sinian | sturtian
                        = 1050
|     neoproterozoic
|       tonian          = 1000
|             baikalian = 850 
|       cryogenian      = 720
|       ediacaran | vendian
                        = 635
  &lt;!-- end of precambrian --&gt;
|   phanerozoic
|     paleozoic
|       cambrian
|        lower cambrian &lt;!-- group of two epochs, not in ICS chart --&gt;
|         terreneuvian | lowest cambrian | earliest cambrian
|           fortunian
|             manykaian | nemakit daldynian
                         = 541.0
|             caerfai | tommotian
                         = 530
|           cambrian stage 2
                         = 529
|         cambrian series 2
|           cambrian stage 3 | middle lower cambrian
|             atdabanian = 521
|             botomian   = 522
|             toyonian | upper lower cambrian
                         = 516
|           cambrian stage 4
                         = 514
         &lt;!-- end of lower cambrian --&gt;
|         cambrian series 3 | middle cambrian
|           cambrian stage 5 | lower middle cambrian | st davids
                         = 509
|           drumian      = 504.5
|           guzhangian | nganasanian | mindyallan
                         = 500.5
|         furongian | upper cambrian | merioneth
|           paibian | franconian&lt;!--unofficial and approximate!--&gt;
                         = 497
|           jiangshanian = 494
|             upper upper cambrian | mansian
                         = 490&lt;!--Arbritary number.--&gt;
|           cambrian stage 10     = 489.5
|       ordovician
|         lower ordovician
|           tremadocian  = 485.4
|             upper lower ordovician
                         = 479
|           floian | arenig
                         = 477.7
|         middle ordovician
|           dapingian | ordovician iii | lower middle ordovician
                         = 470.0
|           darriwilian  = 467.3
|         upper ordovician
|           sandbian | ordovician v | lower upper ordovician
                         = 458.4
|             middle upper ordovician
                         = 455
|           katian | ordovician vi
                         = 453.0
|           hirnantian   = 445.2
|       silurian
|         llandovery | lower silurian
|           rhuddanian   = 443.8
|           aeronian     = 440.8
|           telychian    = 438.5
|         wenlock
|           sheinwoodian = 433.4
|           homerian     = 430.5
|         ludlow | upper silurian
|           gorstian     = 427.4
|           ludfordian   = 425.6
|         pridoli
|           unnamed pridoli stage
                         = 423.0
|       devonian
|         lower devonian
|           lochkovian | downtonian&lt;!--approx--&gt;
                         = 419.2
|           pragian | praghian
                         = 410.8
|           emsian       = 407.6
|         middle devonian
|           eifelian     = 393.3
|           givetian     = 387.7
|         upper devonian
|           frasnian     = 382.7
|           famennian    = 372.2
|       carboniferous
|        mississippian | lower carboniferous &lt;!-- Subperiod from ICS chart --&gt;
|         lower mississippian
|           tournaisian  = 358.9
|         middle mississippian
|           visean       = 346.7
|         upper mississippian
|           serpukhovian = 330.9
|             namurian   = 326
|        pennsylvanian | upper carboniferous &lt;!-- Subperiod from ICS chart --&gt;
|         lower pennsylvanian
|           bashkirian   = 323.2
|             westphalian= 313
|         middle pennsylvanian
|           moscovian    = 315.2
|         upper pennsylvanian
|           kasimovian   = 307.0
|             stephanian = 304
|           gzhelian     = 303.7
|       permian
|         cisuralian | lower permian
|           asselian     = 298.9
|           sakmarian    = 295.0
|           artinskian   = 290.1
|           kungurian    = 283.5
|         guadalupian | middle permian
|           roadian | ufimian
                         = 272.95
|           wordian      = 268.8
|           capitanian   = 265.1
|         lopingian | upper permian
|           wuchiapingian | longtanian
                         = 259.1
|           changhsingian= 254.14
|     mesozoic
|       triassic
|         lower triassic
|           induan       = 251.902
|           olenekian | spathian
                         = 251.2
|         middle triassic 
|           anisian      = 247.2
|           ladinian     = 242
|         upper triassic
|           carnian      = 237
|           norian       = 227
|           rhaetian     = 208.5
|       jurassic
|         lower jurassic
|           hettangian   = 201.3
|           sinemurian   = 199.3
|           pliensbachian= 190.8
|           toarcian     = 182.7
|         middle jurassic
|           aalenian     = 174.1
|           bajocian     = 170.3
|           bathonian    = 168.3
|           callovian    = 166.1
|         upper jurassic
|           oxfordian    = 163.5
|           kimmeridgian = 157.3
|           tithonian    = 152.1
|       cretaceous
|         lower cretaceous
|           berriasian | neocomian
                         = 145.0
|           valanginian  = 139.8
|           hauterivian  = 132.9
|           barremian | gallic
                         = 129.4
|           aptian       = 125.0
|           albian       = 113.0
|         upper cretaceous
|           cenomanian   = 100.5
|           turonian     = 93.9
|           coniacian | senonian
                         = 89.8
|           santonian    = 86.3
|           campanian    = 83.6
|           maastrichtian= 72.1
|     cenozoic
|      tertiary &lt;!-- Group of 2 periods, former term --&gt;
|       paleogene
|         paleocene
|           danian | lower paleocene
                         = 66.0
|             puercan    = 65
|             torrejonian= 63.3
|           selandian | middle paleocene
                         = 61.6
|             tiffanian  = 60.2
|           thanetian | upper paleocene
                         = 59.2
|             clarkforkian
                         = 56.8
|         eocene
|           ypresian | lower eocene | mp 10
                         = 56.0
|             wasatchian = 55.4
|             bridgerian = 50.3
|          middle eocene &lt;!-- Group of two stages, not in ICS chart --&gt;
|           lutetian | mp 11
                         = 47.8
|             uintan     = 46.2
|             duchesnean = 42
|           bartonian    = 41.2
|             chadronian = 38
           &lt;!-- end of middle eocene --&gt;
|           priabonian | upper eocene
                         = 37.8
|         oligocene
|           rupelian | lower oligocene
|             orellan    = 33.9
|             whitneyan  = 33.3
|             arikeean   = 30.6
|           chattian | upper oligocene
                         = 28.1
|       neogene
|         miocene
|          lower miocene &lt;!-- Group of 2 stages, not in ICS chart --&gt;
|           aquitanian   = 23.03
|             hemingfordian
                         = 20.6
|           burdigalian  = 20.44
|             barstovian = 16.3
|          middle miocene &lt;!-- Group of 2 stages, not in ICS chart --&gt;
|           langhian     = 15.97
|           serravallian = 13.82
|             clarendonian
                         = 13.6
|          upper miocene &lt;!-- Group of 2 stages, not in ICS chart --&gt;
|           tortonian    = 11.63
|             hemphillian= 10.3
|           messinian    = 7.246
|         pliocene
|           zanclean | lower pliocene
                         = 5.333
|             blancan    = 4.75
|           piacenzian | upper pliocene
                         = 3.600
       &lt;!-- end of tertiary --&gt;
|       quaternary
|         pleistocene
|          lower pleistocene &lt;!-- Group of 2 stages, implied from ICS chart --&gt;
|           gelasian     = 2.58
|           calabrian    = 1.80
|             irvingtonian
                         = 1.8
           &lt;!-- end of lower pleistocene --&gt;
|           middle pleistocene
                         = 0.781
|             rancholabrean
                         = 0.24
|           upper pleistocene
                         = 0.126
|         holocene       = 0.0117
| now | recent | present | current
                         = 0

}} round {{{2|5}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>dbxxxou9splactuj9hb4jp3nefchdxk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Physical Earth</title>
    <ns>10</ns>
    <id>21590279</id>
    <revision>
      <id>790602197</id>
      <parentid>789055234</parentid>
      <timestamp>2017-07-14T20:42:46Z</timestamp>
      <contributor>
        <username>Ferret</username>
        <id>4358157</id>
      </contributor>
      <comment>Reverted 1 edit by [[Special:Contributions/Nixinova|Nixinova]] ([[User talk:Nixinova|talk]]): But it's not a continent. . ([[WP:TW|TW]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1782">{{Navbox
| name = Physical Earth
| title = [[Earth|&lt;span style=&quot;color:white;&quot;&gt;Earth&lt;/span&gt;]]
| bodyclass = hlist
| titlestyle = background:#0009ff; color:#ffffff;
| state = {{{state&lt;includeonly&gt;|autocollapse&lt;/includeonly&gt;}}}
| image = [[File:Earth Western Hemisphere.jpg|75px|link=Earth]]
| groupstyle = background:#ffffff; color:#0009ff;
| belowstyle = background:#0009ff; color:#ffffff

| group1 = [[Continent|&lt;span style=&quot;color:#0009ff;&quot;&gt;Continents&lt;/span&gt;]]
| list1  =
* [[Africa]]
* [[Antarctica]]
* [[Asia]]
* [[Australia (continent)|Australia]]
* [[Europe]]
* [[North America]]
* [[South America]]

| group2 = [[Ocean|&lt;span style=&quot;color:#0009ff;&quot;&gt;Oceans&lt;/span&gt;]]
| list2  =
* [[Arctic Ocean]]
* [[Atlantic Ocean]]
* [[Indian Ocean]]
* [[Pacific Ocean]]
* [[Southern Ocean]]

| group3 = [[Earth|&lt;span style=&quot;color:#0009ff;&quot;&gt;Earth&lt;/span&gt;]]
| list3  =
* [[Geography]]
* [[Geology]]
* [[Future of Earth]]
* [[Geological history of Earth]]
* [[History of Earth]]
* [[Plate tectonics]]
* [[Structure of the Earth]]

| group4 = [[Natural environment|&lt;span style=&quot;color:#0009ff;&quot;&gt;Environment&lt;/span&gt;]]
| list4  =
* [[Biome]]
* [[Ecology]]
* [[Ecosystem]]
* [[Nature]]
* [[Wilderness]]

| group5 = Related
| list5  =
* [[Earth Day]]
* [[Earth science]]
* [[Geologic record]]
* [[Geology of solar terrestrial planets]]
* [[Earth's location in the Universe|Location in Universe]]
* [[Solar System]]
* [[World]]

| below  =
* '''[[:Category:Nature|&lt;span style=&quot;color:#ffffff;&quot;&gt;Category&lt;/span&gt;]]'''
* '''[[Portal:Science|&lt;span style=&quot;color:#ffffff;&quot;&gt;Portal&lt;/span&gt;]]'''
* '''[[Portal:Earth sciences|&lt;span style=&quot;color:#ffffff;&quot;&gt;Earth sciences&lt;/span&gt;]]'''

}}&lt;noinclude&gt;
{{doc|content=
{{collapsible option}}

[[Category:Geology templates]]
[[Category:Solar System templates]]
}}
&lt;/noinclude&gt;</text>
      <sha1>b35f3urn5410uz47qhv5ps1tkuhbyc5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Portal bar</title>
    <ns>10</ns>
    <id>30675152</id>
    <revision>
      <id>754105365</id>
      <parentid>573112947</parentid>
      <timestamp>2016-12-10T22:05:10Z</timestamp>
      <contributor>
        <username>BU Rob13</username>
        <id>25420061</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Portal bar]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="144">{{#invoke:Portal bar|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>2e7c1lv0yixzmy178249a9kefzw3mbg</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Pp</title>
    <ns>10</ns>
    <id>43132240</id>
    <revision>
      <id>761735106</id>
      <parentid>695624743</parentid>
      <timestamp>2017-01-24T15:07:04Z</timestamp>
      <contributor>
        <username>Xaosflux</username>
        <id>502540</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Pp]]&quot;: is linked from cascaded main page, moving would be very disruptive ([Edit=Require template editor access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="76">{{#invoke:Protection banner|main}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>8rt1snyv5yit3jnuzrbl00negaj27e5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Pp-semi</title>
    <ns>10</ns>
    <id>10596961</id>
    <redirect title="Template:Pp" />
    <revision>
      <id>774346835</id>
      <parentid>667569400</parentid>
      <timestamp>2017-04-07T20:34:19Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Pp-semi]]&quot;: Matching redirect target ([Edit=Require autoconfirmed or confirmed access] (indefinite) [Move=Require autoconfirmed or confirmed access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="81">#REDIRECT [[Template:Pp]]
[[Category:Top icon protection templates|{{PAGENAME}}]]</text>
      <sha1>dmjz94i05ph4b95q6wjtqxnd2h9bph5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Reflist</title>
    <ns>10</ns>
    <id>7585648</id>
    <revision>
      <id>794499661</id>
      <parentid>794499298</parentid>
      <timestamp>2017-08-08T12:05:27Z</timestamp>
      <contributor>
        <username>Anomie</username>
        <id>301903</id>
      </contributor>
      <comment>Please stop, you apparently don't know what you're doing here and shouldn't fool around with heavily-used live templates. I'll post an explanation to the talk page momentarily.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1008">&lt;div class=&quot;reflist &lt;!--
 --&gt;{{#if: {{{1|}}} {{{colwidth|}}}
    | columns references-column-width
	}}&quot; style=&quot;&lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | {{column-width|1={{{1}}}}}
      | {{#switch:{{{1|}}}|1=|2={{column-width|1=30em}}|#default={{column-width|1=25em}}}} }}
    | {{#if: {{{colwidth|}}}
      | {{column-width|1={{{colwidth}}}}} }} }} list-style-type: &lt;!--
 --&gt;{{{liststyle|{{#switch: {{{group|}}}
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group}}}
    | #default = decimal}}}}};&quot;&gt;
{{#tag:references|{{{refs|}}}|group={{{group|}}}|responsive={{#if:{{{1|}}}{{{colwidth|}}}|0|1}}}}&lt;/div&gt;{{#invoke:Check for unknown parameters|check|unknown={{main other|[[Category:Pages using reflist with unknown parameters|_VALUE_{{PAGENAME}}]]}}|preview=Page using [[Template:Reflist]] with unknown parameter &quot;_VALUE_&quot;|ignoreblank=y| 1 | colwidth | group | liststyle | refs }}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2k096ppl7lxbcjqmfluu9x2sc91rmzl</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Refn</title>
    <ns>10</ns>
    <id>26246329</id>
    <revision>
      <id>663472049</id>
      <parentid>663469874</parentid>
      <timestamp>2015-05-21T23:50:56Z</timestamp>
      <contributor>
        <username>Izkala</username>
        <id>23051379</id>
      </contributor>
      <comment>Reverted 2 edits by [[Special:Contributions/Gadget850|Gadget850]] ([[User talk:Gadget850|talk]]): Recursion. ([[WP:TW|TW]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="207">&lt;includeonly&gt;{{#if:{{{name|}}}|{{#tag:ref|{{{1|{{{refn|}}}}}}|name={{{name|}}}|group={{{group|}}}}}|{{#tag:ref|{{{1|{{{refn|}}}}}}|group={{{group|}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>jmj0k7xkh2piz2ntrs87tukrll5ki3h</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Resize</title>
    <ns>10</ns>
    <id>7736359</id>
    <revision>
      <id>772120884</id>
      <parentid>634340879</parentid>
      <timestamp>2017-03-25T12:38:46Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Resize]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (ind...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="251">{{#if:{{{2|}}}
|&lt;span style=&quot;font-size:{{{1|}}};&quot;&gt;{{{2|}}}&lt;/span&gt;
|&lt;span style=&quot;font-size:90%;&quot;&gt;{{{1}}}&lt;/span&gt;
}}&lt;noinclude&gt;
{{documentation}}
{{Resize/TemplateData}}
&lt;!--PLEASE ADD CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS--&gt;
&lt;/noinclude&gt;</text>
      <sha1>8vlkuf84dyzx2md9so6zxdwn47bheg6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Scalemarkers</title>
    <ns>10</ns>
    <id>11693487</id>
    <revision>
      <id>258424661</id>
      <parentid>231483880</parentid>
      <timestamp>2008-12-16T20:44:30Z</timestamp>
      <contributor>
        <username>Eastlaw</username>
        <id>1046972</id>
      </contributor>
      <comment>Documentation template</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1821">&lt;includeonly&gt;{{#ifexpr:({{{from|0}}}+({{{increment|3}}}*{{{loop|3}}})+({{{from|0}}}-({{{from|0}}} round 1 ) - ((({{{from|0}}}*10) mod ({{{increment|3}}}*10))/10))) &lt;= {{{to|3}}}|&lt;!-- Decide: Ought we to print this label?

.then--&gt;&lt;div style=&quot;float:right; position:absolute; right:-1px; top:{{#expr: 
{{{height|3}}} - 
(
   {{{height|3}}} * (({{{loop|3}}}  *  {{{increment|3}}}) + ({{{from|0}}}-({{{from|0}}} round 3 ) - ((({{{from|0}}}*1000) mod ({{{increment|3}}}*1000))/1000)))
   / 
  (
    (
      {{{to|3}}}-{{{from|0}}}
    )
  )
)
}}{{{unit}}};&quot;&gt;&lt;span name=Number style=&quot;font-size:86%;white-space:nowrap;&quot;&gt;{{#ifexpr:abs ({{{from|0}}}+ ( {{{increment|3}}}*{{{loop|3}}} ) + ({{{from|0}}}-({{{from|0}}} round 3 ) - ((({{{from|0}}}*1000) mod ({{{increment|3}}}*1000))/1000)))&gt;0.000000001|{{#expr: {{{from|0}}}+ ( {{{increment|3}}}*{{{loop|3}}} ) + ({{{from|0}}}-({{{from|0}}} round 3 ) - ((({{{from|0}}}*1000) mod ({{{increment|3}}}*1000))/1000))}}|0}}&amp;nbsp;&amp;mdash;&lt;/span&gt;&lt;/div&gt;|}}&lt;!--

That's got the numbered markers printed. But it would be nice to have dashes half way between them:

--&gt;{{#ifexpr:({{{from|0}}}+({{{increment|3}}}*{{{loop|3}}})+({{{increment|3}}}/2)+({{{from|0}}}-({{{from|0}}} round 3 ) - ((({{{from|0}}}*1000) mod ({{{increment|3}}}*1000))/1000))) &lt;= {{{to|3}}}|&lt;!-- Decide: Ought we to print this label?

.then--&gt;&lt;div style=&quot;float:right; position:absolute; right:-1px; top:{{#expr: 
{{{height|3}}} - 
(
   {{{height|3}}} * (({{{loop|3}}}  *  {{{increment|3}}}) + ({{{increment|3}}}/2) + ({{{from|0}}}-({{{from|0}}} round 3 ) - ((({{{from|0}}}*1000) mod ({{{increment|3}}}*1000))/1000)))
   / 
  (
    (
      {{{to|3}}}-{{{from|0}}}
    )
  )
)
}}{{{unit}}};&quot;&gt;&lt;span name=Tick style=&quot;font-size:86%;white-space:nowrap;&quot;&gt;&amp;ndash;&lt;/span&gt;&lt;/div&gt;|}}&lt;/includeonly&gt;&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>sqayr50n9srw2viogaog9toev6fvfla</sha1>
    </revision>
  </page>
  <page>
    <title>Template:See also</title>
    <ns>10</ns>
    <id>1721254</id>
    <revision>
      <id>763260609</id>
      <parentid>725632232</parentid>
      <timestamp>2017-02-02T05:40:25Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Updated from sandbox to use [[Module:Labelled list hatnote]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="199">&lt;includeonly&gt;{{#invoke:Labelled list hatnote|labelledList|See also}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>dn9i3dv2bt8lqifr6vkbycoya78rnav</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sfrac</title>
    <ns>10</ns>
    <id>34054911</id>
    <revision>
      <id>804535677</id>
      <parentid>667555912</parentid>
      <timestamp>2017-10-09T17:16:26Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Sfrac]]&quot;: [[WP:High-risk templates|Highly visible template]]; 2,000+ transclusions ([Edit=Require autoconfirmed or confirmed access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="678">{{ {{{|safesubst:}}}#invoke:Unsubst||$B=&lt;span class=&quot;sfrac nowrap&quot;{{#if:{{{3|}}}|&gt;{{{1}}}&lt;span class=&quot;visualhide&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span}} &lt;!--
 --&gt;style=&quot;display:inline-block; vertical-align:-0.5em; font-size:85%; text-align:center;&quot;&gt;&lt;!--
  --&gt;&lt;span style=&quot;display:block; line-height:1em; margin:0 0.1em;&quot;&gt;{{#if:{{{3|}}}|{{{2}}}|{{#if:{{{2|}}}|{{{1}}}|1}}}}&lt;/span&gt;&lt;!--
  --&gt;&lt;span class=&quot;visualhide&quot;&gt;/&lt;/span&gt;&lt;!--
  --&gt;&lt;span style=&quot;display:block; line-height:1em; margin:0 0.1em; border-top:1px solid;&quot;&gt;{{{3|{{{2|{{{1}}}}}}}}}&lt;/span&gt;&lt;!--
 --&gt;{{#if:{{{3|}}}|&lt;/span&gt;}}&lt;!--
--&gt;&lt;/span&gt;}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- PLEASE ADD CATEGORIES TO /doc SUBPAGE - NOT HERE.--&gt;
&lt;/noinclude&gt;</text>
      <sha1>rthz8fmqqb9glz74z5v2ajkwx8x2mqn</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sister project links</title>
    <ns>10</ns>
    <id>2226074</id>
    <revision>
      <id>777214822</id>
      <parentid>750098032</parentid>
      <timestamp>2017-04-25T21:53:25Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <minor/>
      <comment>overflow trick unnecessary (no floats inside)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="9361">&lt;includeonly&gt;&lt;div role=&quot;navigation&quot; aria-labelledby=&quot;sister-projects&quot; class=&quot;metadata plainlinks plainlist mbox-small{{#ifeq:{{lc:{{{position|}}}}}|left|-left}} {{#if:{{{collapsible|}}}|mw-collapsible {{#ifeq:{{{collapsible|}}}|collapsed |mw-collapsed}}}}&quot; style=&quot;border:1px solid #aaa; padding:0.75em; background:#f9f9f9; {{{style|}}}&quot;&gt;
    &lt;div style=&quot;{{#if:{{{collapsible|}}}|clear: both;}} padding-bottom: 0.75em; text-align: center;&quot;&gt;&lt;!--
     --&gt;Find more about&lt;!--
     --&gt;&lt;b style=&quot;display:block;&quot;&gt;{{{display|{{{1|{{PAGENAME}}}}}}}}&lt;/b&gt;&lt;!--
     --&gt;at Wikipedia's [[Wikipedia:Wikimedia sister projects|&lt;span id=&quot;sister-projects&quot;&gt;sister projects&lt;/span&gt;]]
    &lt;/div&gt;
    &lt;ul {{#if:{{{collapsible|}}}|class=&quot;mw-collapsible-content&quot;}} style=&quot;border-top:1px solid #aaa; padding-top: 0.75em;&quot;&gt;
        {{#ifeq:{{{wikt|}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wiktionary-logo-v2.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[wikt:{{{wikt|Special:Search/{{{1|{{PAGENAME}}}}}}}}|Definitions]] from Wiktionary&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{c|{{{commons|}}}}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;{{#ifeq:{{{commonscat|no}}}|yes|
                    &lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Commons-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
                 --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[c:Special:Search/Category:{{{c|{{{commons|{{{1|{{PAGENAME}}}}}}}}}}}|Media]] from Commons&lt;/span&gt;
                |
                    &lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Commons-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
                 --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[c:{{{c|{{{commons|Special:Search/{{{1|{{PAGENAME}}}}}}}}}}}|Media]] from Commons&lt;/span&gt;
                }}
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{n|}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikinews-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[n:Special:Search/{{{1|{{PAGENAME}}}}}|News]] from Wikinews&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{q|}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikiquote-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[q:{{{q|Special:Search/{{{1|{{PAGENAME}}}}}}}}|Quotations]] from Wikiquote&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{s|}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;{{#ifeq:{{{author|no}}}|yes|
                    &lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikisource-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
                 --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[s:Special:Search/Author:{{{s|{{{1|{{PAGENAME}}}}}}}}|Texts]] from Wikisource&lt;/span&gt;
                |
                    &lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikisource-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
                 --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[s:{{{s|Special:Search/{{{1|{{PAGENAME}}}}}}}}|Texts]] from Wikisource&lt;/span&gt;
                }}
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{b|}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikibooks-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[b:{{{b|Special:Search/{{{1|{{PAGENAME}}}}}}}}|Textbooks]] from Wikibooks&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:
            &lt;!-- Show Wikivoyage if the &quot;voy&quot; parameter is anything other than blank, empty or &quot;no&quot; --&gt;
            {{#switch: {{{voy|&lt;noinclude&gt;yes&lt;/noinclude&gt;}}}
            | | no     = false
            | #default = true
            }}
            | true |
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikivoyage-Logo-v3-icon.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[voy:{{#if:{{{voy|}}}|{{{voy}}}#{{#invoke:Wikidata|pageId}}|Special:Search/{{{1|{{PAGENAME}}}}}}}|Travel {{#if: {{{voy|}}}| guide| information}}]] from Wikivoyage&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{v|}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikiversity-logo-Snorky.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[v:{{{v|Special:Search/{{{1|{{PAGENAME}}}}}}}}|Learning resources]] from Wikiversity&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{d|no}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikidata-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[d:{{{d&lt;noinclude&gt;|{{{1|Special:ItemByTitle/enwiki/{{PAGENAME}}}}}&lt;/noinclude&gt;}}}|Data]] from Wikidata&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{species|no}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikispecies-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[species:{{{species&lt;noinclude&gt;|Special:Search/{{{1|{{PAGENAME}}}}}&lt;/noinclude&gt;}}}|Taxonomy]] from Wikispecies&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{species_author|no}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikispecies-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[species:{{{species_author&lt;noinclude&gt;|Special:Search/{{{1|{{PAGENAME}}}}}&lt;/noinclude&gt;}}}|Species author {{{species_author&lt;noinclude&gt;|&lt;/noinclude&gt;}}}]] on Wikispecies&lt;/span&gt;
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{lc:{{{m|no}}}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;{{#ifeq:{{lc:{{{m}}}}}|yes|
                    &lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikimedia Community Logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
                 --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[m:Special:Search/{{{1|{{PAGENAME}}}}}|Discussion]] from Meta-Wiki&lt;/span&gt;
                |
                    &lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:Wikimedia Community Logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
                 --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[m:{{{m}}}|Discussion]] from Meta-Wiki&lt;/span&gt;
                }}
            &lt;/li&gt;
        }}&lt;!--
     --&gt;{{#ifeq:{{{mw|no}}}|no||
            &lt;li style=&quot;min-height: 31px;&quot;&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; width: 31px; line-height: 31px; vertical-align: middle; text-align: center;&quot;&gt;[[File:MediaWiki-logo.svg|27x27px|middle|link=|alt=]]&lt;/span&gt;&lt;!--
             --&gt;&lt;span style=&quot;display: inline-block; margin-left: 4px; width: 182px; vertical-align: middle;&quot;&gt;[[mw:{{{mw&lt;noinclude&gt;|{{{1|Special:Search/{{PAGENAME}}}}}&lt;/noinclude&gt;}}}|Documentation]] from MediaWiki&lt;/span&gt;
            &lt;/li&gt;
        }}
    &lt;/ul&gt;
&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>sz2lde6xs7mty48r87cp7ionhbg7329</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Smaller</title>
    <ns>10</ns>
    <id>5117873</id>
    <revision>
      <id>668584667</id>
      <parentid>662442951</parentid>
      <timestamp>2015-06-25T07:36:48Z</timestamp>
      <contributor>
        <username>Salix alba</username>
        <id>212526</id>
      </contributor>
      <comment>needs a separate TemplateData page so works with VE</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="102">{{Resize|90%|{{{1}}}}}&lt;noinclude&gt;
{{Documentation|Template:Resize/doc}}
{{/TemplateData}}
&lt;/noinclude&gt;</text>
      <sha1>k1qtrx9lyxt4z46c4w03964r8vs2pzc</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Smallsub</title>
    <ns>10</ns>
    <id>41837525</id>
    <revision>
      <id>593872468</id>
      <timestamp>2014-02-04T11:23:48Z</timestamp>
      <contributor>
        <username>Sardanaphalus</username>
        <id>427947</id>
      </contributor>
      <comment>created as complement to {{smallsup}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="102">&lt;includeonly&gt;&lt;sub&gt;&lt;small&gt;{{{1}}}&lt;/small&gt;&lt;/sub&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>a301pj00q29nirqf6zpi3ie8rrfo350</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Smallsup</title>
    <ns>10</ns>
    <id>5673485</id>
    <revision>
      <id>772120913</id>
      <parentid>558575990</parentid>
      <timestamp>2017-03-25T12:38:47Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Smallsup]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (i...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="102">&lt;includeonly&gt;&lt;sup&gt;&lt;small&gt;{{{1}}}&lt;/small&gt;&lt;/sup&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>mlix1y93be7qpylydjn1k0t69oyvr6i</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Solar System</title>
    <ns>10</ns>
    <id>471412</id>
    <revision>
      <id>805020573</id>
      <parentid>788801795</parentid>
      <timestamp>2017-10-12T15:28:50Z</timestamp>
      <contributor>
        <username>RSStockdale</username>
        <id>4504002</id>
      </contributor>
      <comment>Rings: added Haumea</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6326">{{Navbox 
| name = Solar System
| state = {{{state|{{{1&lt;includeonly&gt;|autocollapse&lt;/includeonly&gt;}}}}}}
| title = The [[Solar System]]
| basestyle = text-align:center;
| bodyclass = hlist

| above = 
{{Solar System navmap}}
* [[Sun|The Sun]]
* [[Mercury (planet)|Mercury]]
* [[Venus]]
* [[Earth]]
* [[Mars]]
* ''[[Ceres (dwarf planet)|Ceres]]''
* [[Jupiter]]
* [[Saturn]]
* [[Uranus]]
* [[Neptune]]
* ''[[Pluto]]''
* ''[[Haumea]]''
* ''[[Makemake]]''
* ''[[Eris (dwarf planet)|Eris]]''

    | group1 = [[Planet]]s
    | list1 =
* [[Terrestrial planet]]s
** [[Mercury (planet)|Mercury]]
** [[Venus]]
** [[Earth]]
** [[Mars]]
* [[Giant planet]]s
** [[Jupiter]]
** [[Saturn]]
** [[Uranus]]
** [[Neptune]]
* [[Dwarf planet]]s
** [[Ceres (dwarf planet)|Ceres]]
** [[Pluto]]
** [[Haumea]]
** [[Makemake]]
** [[Eris (dwarf planet)|Eris]]

    | group2 = [[Ring system|Ring]]s
    | list2 =
* [[Rings of Jupiter|Jovian]]
* [[Rings of Saturn|Saturnian]]&amp;nbsp;{{smaller|([[Rings of Rhea|Rhean]])}}
* [[Rings of Chariklo|Charikloan]]
* [[2060 Chiron#Rings|Chironean]]
* [[Rings of Uranus|Uranian]]
* [[Rings of Neptune|Neptunian]]
* [[Haumea#Ring|Haumean]]

    | group3 = [[Natural satellite|Moon]]s
    | list3 =
* [[Moon|1 Terrestrial (Moon)]]
* [[Claimed moons of Earth|Other near-Earth objects]]
* [[Moons of Mars|2 Martian]]
** [[Phobos (moon)|Phobos]]
** [[Deimos (moon)|Deimos]]
* [[Moons of Jupiter|69 Jovian]]
** [[Ganymede (moon)|Ganymede]]
** [[Callisto (moon)|Callisto]]
** [[Io (moon)|Io]]
** [[Europa (moon)|Europa]]
** [[Moons of Jupiter#List|all]]
* [[Moons of Saturn|62 Saturnian]]
** [[Titan (moon)|Titan]]
** [[Rhea (moon)|Rhea]]
** [[Iapetus (moon)|Iapetus]]
** [[Dione (moon)|Dione]]
** [[Tethys (moon)|Tethys]]
** [[Enceladus]]
** [[Mimas (moon)|Mimas]]
** [[Hyperion (moon)|Hyperion]]
** [[Phoebe (moon)|Phoebe]]
** [[Moons of Saturn#List|all]]
* [[Moons of Uranus|27 Uranian]]
** [[Titania (moon)|Titania]]
** [[Oberon (moon)|Oberon]]
** [[Umbriel (moon)|Umbriel]]
** [[Ariel (moon)|Ariel]]
** [[Miranda (moon)|Miranda]]
** [[Moons of Uranus#List|all]]
* [[Moons of Neptune|14 Neptunian]]
** [[Triton (moon)|Triton]]
** [[Proteus (moon)|Proteus]]
** [[Nereid (moon)|Nereid]]
** [[Moons of Neptune#List|all]]
* [[Moons of Pluto|5 Plutonian]]
** [[Charon (moon)|Charon]]
** [[Nix (moon)|Nix]]
** [[Hydra (moon)|Hydra]]
** [[Kerberos (moon)|Kerberos]]
** [[Styx (moon)|Styx]]
* [[Moons of Haumea|2 Haumean]]
** [[Hiiaka (moon)|Hiiaka]]
** [[Namaka (moon)|Namaka]]
* [[S/2015 (136472) 1|1 Makemakean (S/2015 (136472) 1)]]
* [[Dysnomia (moon)|1 Eridian (Dysnomia)]]

    | group4 = Lists
    | list4 =
* [[List of Solar System objects|Solar System objects]]
** [[List of Solar System objects by size|By size]]
** [[Timeline of discovery of Solar System planets and their moons|By discovery date]]
* [[List of minor planets|Minor planets]]
* [[List of gravitationally rounded objects of the Solar System|Gravitationally rounded objects]]
* [[List of possible dwarf planets|Possible dwarf planets]]
* [[List of natural satellites|Natural satellites]]
* [[Lists of comets|Comets]]

    | group5 = [[Small Solar System body|Small Solar&lt;br&gt;System bodies]]
    | list5 =
* [[Meteoroid]]s
* [[Minor planet]]s
** [[Minor-planet moon|moons]]
* [[Comet]]s
* [[Damocloid]]s
* [[List of Mercury-crossing minor planets|Mercury-crossers]]
* [[List of Venus-crossing minor planets|Venus-crossers]]
* [[2013 ND15|Venus trojans]]
* [[Near-Earth object]]s
* [[List of Earth-crossing minor planets|Earth-crossers]]
* [[Earth trojan]]s
* [[List of Mars-crossing minor planets|Mars-crossers]]
* [[Mars trojan]]s
* [[Asteroid belt]]
* [[Asteroid]]s
** first discovered: [[Ceres (dwarf planet)|Ceres]]
** [[2 Pallas|Pallas]]
** [[3 Juno|Juno]]
** [[4 Vesta|Vesta]]
* [[Asteroid family|Families]]
* [[List of exceptional asteroids|Notable asteroids]]
* [[Kirkwood gap]]
* [[Main-belt comet]]s
* [[Jupiter trojan]]s
* [[List of Jupiter-crossing minor planets|Jupiter-crossers]]
* [[Centaur (minor planet)|Centaur]]s
* [[List of Saturn-crossing minor planets|Saturn-crossers]]
* [[2011 QF99|Uranus trojans]]
* [[List of Uranus-crossing minor planets|Uranus-crossers]]
* [[Neptune trojan]]s
* [[Cis-Neptunian object]]s
* [[Trans-Neptunian object]]s
* [[List of Neptune-crossing minor planets|Neptune-crossers]]
* [[Plutoid]]s
* [[Kuiper belt]]
** [[Plutino]]s
** [[Classical Kuiper belt object|Cubewanos]]
* [[Scattered disc]]
* [[Detached object]]s
* [[Sednoid]]s
* [[Hills cloud]]
* [[Oort cloud]]

    | group6 = [[List of hypothetical Solar System objects|Hypothetical&lt;br&gt;objects]]
    | list6 =
* [[Vulcan (hypothetical planet)|Vulcan]]
* [[Vulcanoid]]s
* [[Phaeton (hypothetical planet)|Phaeton]]
* [[Planet V]]
* [[Theia (planet)|Theia]]
* [[Five-planet Nice model|Fifth giant]]
* [[Planets beyond Neptune]]
* [[Tyche (hypothetical planet)|Tyche]]
* [[Nemesis (hypothetical star)|Nemesis]]
* [[Planet Nine]]

    | group7 = [[Space exploration|Exploration]] &lt;br/&gt; ([[Outline of space exploration|outline]])
    | list7 =
* [[Discovery and exploration of the Solar System|Discovery]]
** [[Astronomy]]
** [[Timeline of discovery of Solar System planets and their moons|Timeline]]
* [[Spaceflight]]
* [[Robotic spacecraft]]
* [[Human spaceflight]]
* [[Space colonization|Colonization]]
* [[List of Solar System probes|List of probes]]
* [[Timeline of Solar System exploration|Timeline]]

* [[Exploration of Mercury|Mercury]]
* [[Observations and explorations of Venus|Venus]]
* [[Exploration of the Moon|Moon]]
* [[Exploration of Mars|Mars]]
* [[Ceres (dwarf planet)#Exploration|Ceres]]
* [[Asteroid#Exploration|Asteroids]]
** [[Asteroid mining|Mining]]
* [[List of missions to comets|Comets]]
* [[Exploration of Jupiter|Jupiter]]
* [[Exploration of Saturn|Saturn]]
* [[Exploration of Uranus|Uranus]]
* [[Exploration of Neptune|Neptune]]
* [[Exploration of Pluto|Pluto]]
* [[Deep space exploration|Deep space]]

| below = 
: [[Outline of the Solar System]]
;{{icon|Portal}} {{nobold|[[Wikipedia:Portal|Portal]]s}}
: [[Portal:Solar System|Solar System]]
: [[Portal:Astronomy|Astronomy]]
: [[Portal:Earth sciences|Earth sciences]]
: [[Portal:Mars|Mars]]
: [[Portal:Jupiter|Jupiter]]
: [[Portal:Uranus|Uranus]]
: [[Portal:Cosmology|Cosmology]]
{{Earth's location in the Universe |Solar System}}

}}&lt;noinclude&gt;

{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ghnd512rj69aqjgxwmnzlj1n8db4xfz</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Solar System navmap</title>
    <ns>10</ns>
    <id>26826995</id>
    <revision>
      <id>738642111</id>
      <parentid>738641992</parentid>
      <timestamp>2016-09-10T06:10:50Z</timestamp>
      <contributor>
        <username>Exoplanetaryscience</username>
        <id>19326957</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3818">&lt;imagemap&gt;
File:Solar System Template Final.png
#The Sun
rect 0 0 90 35 [[Sun|The Sun]]
#Mercury
circle 112 18 6 [[Mercury (planet)|Mercury]]
#Venus
circle 153 18 8 [[Venus]]
#Earth and the Moon
circle 204 10 4 [[Moon|The Moon]]
circle 195 18 8 [[Earth]]
#Mars and satellites
circle 233 18 8 [[Mars]]
circle 241 13 3 [[Moons of Mars|Phobos and Deimos]]
#Ceres and the asteroid belt
# - by placing the rectangle code for the asteroid belt AFTER Ceres, Ceres is &quot;on top&quot; (and can co-exist)
circle 271 18 5 [[Ceres (dwarf planet)|Ceres]]
rect 256 0 288 35 [[Asteroid belt|The main asteroid belt]]
#Jupiter and satellites
# - by placing the rectangle code for the Rings of Jupiter AFTER Jupiter, Jupiter is &quot;on top&quot; (and can co-exist)
circle 316 19 15 [[Jupiter]]
circle 329 6 6 [[Moons of Jupiter]]
rect 298 18 335 20 [[Rings of Jupiter]]
#Saturn and satellites
# - by placing the rectangle code for the Rings of Saturn AFTER Saturn, Saturn is &quot;on top&quot; (and can co-exist)
circle 372 18 12 [[Saturn]]
circle 381 7 6 [[Moons of Saturn]]
rect 353 5 389 31 [[Rings of Saturn]]
#Uranus and satellites
# - by placing the rectangle code for the Rings of Uranus AFTER Uranus, Uranus is &quot;on top&quot; (and can co-exist)
circle 418 18 12 [[Uranus]]
circle 427 10 6 [[Moons of Uranus]]
rect 408 4 429 34 [[Rings of Uranus]]
#Neptune and satellites
# - by placing the rectangle code for the Rings of Neptune AFTER Neptune, Neptune is &quot;on top&quot; (and can co-exist)
circle 462 18 12 [[Neptune]]
circle 471 10 5 [[Moons of Neptune]]
rect 441 9 485 28 [[Rings of Neptune]]
#Pluto, satellites, and the Kuiper belt
# - by placing the rectangle code for the Kuiper belt AFTER Pluto, Pluto is &quot;on top&quot; (and can co-exist)
circle 504 18 12 [[Pluto]]
circle 510 13 8 [[Moons of Pluto]]
#Haumea and satellites
# - by placing the rectangle code for the Kuiper Belt AFTER Haumea, Haumea is &quot;on top&quot; (and can co-exist)
circle 534 18 12 [[Haumea]]
circle 540 13 8 [[Moons of Haumea]]
#Makemake
# - by placing the rectangle code for the Kuiper Belt AFTER Makemake, Makemake is &quot;on top&quot; (and can co-exist)
circle 567 18 12 [[Makemake]]
circle 571 13 8 [[S/2015 (136472) 1]]
rect 490 0 580 35 [[Kuiper belt|The Kuiper Belt]]
#Eris, Dysnomia, and the Scattered disc
# - by placing the rectangle code for the Scattered disc AFTER Eris, Eris is &quot;on top&quot; (and can co-exist)
circle 596 18 12 [[Eris (dwarf planet)|Eris]]
circle 602 13 8 [[Dysnomia (moon)|Dysnomia]]
rect 581 0 610 35 [[Scattered disc|The Scattered Disc]]
rect 623 0 640 35 [[Hills cloud|The Hills Cloud]]
rect 641 0 666 35 [[Oort cloud|The Oort Cloud]]

desc none
# - setting this to &quot;bottom-right&quot; will display a (rather large) icon linking to the graphic, if desired

#Notes:
#Details on the new coding for clickable images is here: [http://www.mediawiki.org/wiki/Extension:ImageMap]
#The smaller planets have a bit of an overlap just to ensure they're locatable, especially in the belts.
#While it may look strange, it's important to keep the codes for a particular system in order. The clickable coding treats the first object created in an area as the one on top.
# - I've placed moons on &quot;top&quot; so that their smaller circles won't disappear &quot;under&quot; their respective planets or dwarf planets.
#The &quot;poly&quot; code would be more appropriate for the moons of Jupiter, Saturn, and Uranus. However, there appears to be a bug with that aspect of the code.
# - I've compensated by using oversized circles for those moon groups, and tucking them UNDER their planets for now.
#The Sun is a rectangle as that approximates the edge closely enough for the purposes of this template.
#I've guessed as to the boundaries for the KB, SD, and OC - if they need adjustment, load the image into Paint and use the pencil tool to find the appropriate coordinates.
&lt;/imagemap&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>pyct2gpyqavpspeg3hhpm72pqb1ror2</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Spoken Wikipedia-4</title>
    <ns>10</ns>
    <id>1775912</id>
    <revision>
      <id>804354225</id>
      <parentid>567202130</parentid>
      <timestamp>2017-10-08T12:54:05Z</timestamp>
      <contributor>
        <username>Nardog</username>
        <id>5908908</id>
      </contributor>
      <comment>implement a tracking category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="903">&lt;div id=&quot;section_SpokenWikipedia&quot; class=&quot;infobox sisterproject noprint&quot;&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;'''Listen to this article (4 parts){{}} [[:File:{{{2}}}|(info)]]'''&lt;/div&gt;
&lt;div style=&quot;text-align:center; font-size:90%; margin-bottom:.4em;&quot;&gt;''[[Media:{{{2}}}|Part 1]]&amp;nbsp; [[Media:{{{3}}}|Part 2]]&amp;nbsp; [[Media:{{{4}}}|Part 3]]&amp;nbsp; [[Media:{{{5}}}|Part 4]]''&lt;/div&gt;
{{Spoken Wikipedia boilerplate|{{{1}}}|{{{2}}} }}&lt;!-- tracking category begin --&gt;{{#if:{{{2|}}}|{{#ifexist:Media:{{{2}}}||[[Category:Pages linking to missing files]]}}{{#ifexist:Media:{{{3}}}||[[Category:Pages linking to missing files]]}}{{#ifexist:Media:{{{4}}}||[[Category:Pages linking to missing files]]}}{{#ifexist:Media:{{{5}}}||[[Category:Pages linking to missing files]]}}}}&lt;!-- tracking category end --&gt;&lt;noinclude&gt;

[[Category:Title templates]]
[[Category:Templates that add a tracking category]]
&lt;/noinclude&gt;</text>
      <sha1>0mm0mcnkt63d0qe7zkz3lpip17aqoio</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Spoken Wikipedia boilerplate</title>
    <ns>10</ns>
    <id>4112363</id>
    <revision>
      <id>799467576</id>
      <parentid>799467527</parentid>
      <timestamp>2017-09-07T22:16:45Z</timestamp>
      <contributor>
        <username>Ahecht</username>
        <id>2016996</id>
      </contributor>
      <comment>rm extra &quot;article&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="887">&lt;div style=&quot;float: left; margin-left: 5px;&quot;&gt;[[Image:Sound-icon.svg|45px|none|alt=|link=|Spoken Wikipedia]]&lt;/div&gt;
&lt;div style=&quot;font-size: xx-small; line-height: 1.6em; margin-left: 60px;&quot;&gt;This audio file was created from a revision of the article &quot;&lt;span class=&quot;fn&quot;&gt;{{PAGENAME}}&lt;/span&gt;&quot; dated {{{1}}}, and does not reflect subsequent edits to the {{#if:{{NAMESPACE}}|page|article}}. ([[Wikipedia:Media help|Audio help]])&lt;/div&gt;
&lt;div style=&quot;text-align: center; clear: both&quot;&gt;'''[[{{SITENAME}}:Spoken articles|More spoken {{#if:{{NAMESPACE}}|page|article}}s]]'''&lt;/div&gt;
{{#if:{{NAMESPACE}}||[[Category:Spoken articles]]}}
&lt;/div&gt;
{{#if:{{NAMESPACE}}
 |
 | {{Top icon
  | imagename = Sound-icon.svg
  | wikilink  = {{#if:{{{2|}}}|File:{{{2}}}|Wikipedia:WikiProject Spoken Wikipedia}}
  | text      = Listen to this article
  | id        = spoken-icon
}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>g1ph7twevxiwfv8p4is35iyvbtbbp66</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Timeline Legend</title>
    <ns>10</ns>
    <id>11686417</id>
    <revision>
      <id>207890476</id>
      <parentid>207890312</parentid>
      <timestamp>2008-04-24T16:23:18Z</timestamp>
      <contributor>
        <username>Smith609</username>
        <id>846901</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="305">{{#if:{{{text|}}}|
&lt;span style=&quot;background:{{{colour|transparent}}}; padding:0em .1em; border:solid 1px #242020; height:1.5em; margin:.25em .9em .25em .25em;&quot;&gt;&amp;emsp;&lt;/span&gt;{{{text}}}{{-}}}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- PLEASE ADD CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS --&gt;
&lt;/noinclude&gt;</text>
      <sha1>k73c7wnn3stzbopng956mnow8wyiw8a</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Timeline Note</title>
    <ns>10</ns>
    <id>11714903</id>
    <revision>
      <id>482963691</id>
      <parentid>225783840</parentid>
      <timestamp>2012-03-20T20:33:08Z</timestamp>
      <contributor>
        <username>Smith609</username>
        <id>846901</id>
      </contributor>
      <comment>z-index</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1081">&lt;includeonly&gt;&lt;div 
class=&quot;annot-bar&quot; style=&quot;
    width:auto;
    font-size:100%;
    position:absolute;
    text-align:center;
    margin-top:{{#expr:
        {{{tl-height}}} *
        ({{{tl-to}}}-{{{at}}}) /
        ({{{tl-to}}}-{{{tl-from}}})
    }}{{{tl-hu}}};
&quot;&gt;{{#if:{{{noarr|}}}||{{#if:{{{text|}}}|&lt;div class=&quot;annot-arrow&quot; style=&quot;position:relative; text-size:100%; top:-0.86em; left:{{{nudgeright|0}}}em; float:left;&quot;&gt;&lt;span style=&quot;color:{{{colour|{{{color|black}}}}}};&quot;&gt;&lt;/span&gt;&lt;/div&gt;}}}}&lt;div 
class=&quot;annot-nudge&quot; style=&quot;
    text-size:100%;
    float:left;
    position:relative; 
    text-align:left;
    top:{{#expr:{{{nudgedown|0}}}-0.75}}em;
    left:{{{nudgeright|0}}}em;
    width:{{{an-w|7}}}em;
&quot;&gt;&lt;span style=&quot;
    position:relative;
    width:auto;
    z-index:10;
    font-size:{{{textsize}}};
    color:{{{colour|{{{color|black}}}}}};
    vertical-align:middle;
    line-height:100%;
    bottom:0; 
&quot;&gt;{{{text}}}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- PLEASE ADD CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS --&gt;
&lt;/noinclude&gt;</text>
      <sha1>hbaat31g6y24swciu7ottbbuwr4kd1h</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Tl</title>
    <ns>10</ns>
    <id>1487430</id>
    <revision>
      <id>776260390</id>
      <parentid>622723682</parentid>
      <timestamp>2017-04-19T22:28:34Z</timestamp>
      <contributor>
        <username>Lectonar</username>
        <id>128863</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Tl]]&quot;: request at rfp ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="168">&amp;#123;&amp;#123;[[Template:{{{1}}}|{{{1}}}]]&amp;#125;&amp;#125;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>h0vr3yvr9jdyd17x82vnav21ngwmxuk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Top icon</title>
    <ns>10</ns>
    <id>20101811</id>
    <revision>
      <id>723232837</id>
      <parentid>721870988</parentid>
      <timestamp>2016-06-01T20:45:03Z</timestamp>
      <contributor>
        <username>Debresser</username>
        <id>6999039</id>
      </contributor>
      <comment>Category detection not needed any more. About 1,000 userpages (and even a few articles!) fixes, only 3 left and their users have a message on their page.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="670">&lt;includeonly&gt;&lt;nowiki /&gt;&lt;!-- This nowiki tag helps prevent whitespace at the top of articles. --&gt;{{#tag:indicator
|[[File:{{{image|{{{imagename|}}}}}}|{{#if:{{{width|}}}|{{{width}}}|20}}x{{#if:{{{height|}}}|{{{height}}}|20}}px
 |{{#if:{{{link|{{{wikilink|}}}}}}|link={{{link|{{{wikilink}}}}}}}}
 |{{#if:{{{alt|}}}|alt={{{alt}}}}}
 |{{{text|{{{description|}}}}}}]]
|name = {{#if:{{{sortkey|}}}|{{{sortkey}}}-}}{{#if:{{{name|}}}|{{{name}}}|{{#if:{{{id|}}}|{{{id}}}|{{{image|{{{imagename|}}}}}}}}}}
}}{{Category handler
|user = {{{usercat|}}}
|main = {{{maincat|}}}
|subpage = {{{subpage|no}}}
|nocat = {{{nocat|}}}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>amdag3f7v9n3xfy83qtymnk8ejlp8qv</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Trim</title>
    <ns>10</ns>
    <id>21815705</id>
    <revision>
      <id>668935791</id>
      <parentid>412919929</parentid>
      <timestamp>2015-06-27T18:27:45Z</timestamp>
      <contributor>
        <username>Plastikspork</username>
        <id>5075409</id>
      </contributor>
      <comment>Merging [[Template:Strip whitespace]] per TfD</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="114">&lt;includeonly&gt;{{ {{{|safesubst:}}}#if:1|{{{x|{{{1|}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;

{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>h9devvk8f6nt34tp7zb17s39ge5wquh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ublist</title>
    <ns>10</ns>
    <id>42192100</id>
    <redirect title="Template:Unbulleted list" />
    <revision>
      <id>747011359</id>
      <parentid>714274517</parentid>
      <timestamp>2016-10-30T22:58:48Z</timestamp>
      <contributor>
        <username>Cenarium</username>
        <id>5711305</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Ublist]]&quot;: [[WP:High-risk templates|Highly visible template]]: high risk redirect ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="66">#REDIRECT [[Template:Unbulleted list]]{{R from template shortcut}}</text>
      <sha1>9lbqdff1vwgcz6n5t9oe90f8wgi2e0x</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Unbulleted list</title>
    <ns>10</ns>
    <id>27486458</id>
    <revision>
      <id>610144010</id>
      <parentid>581683946</parentid>
      <timestamp>2014-05-26T01:21:32Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>switch to using [[Module:List]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="181">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:list|unbulleted}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>g28jpumica8ycuimxbfi2qlrcbowsb3</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Use American English</title>
    <ns>10</ns>
    <id>32028446</id>
    <revision>
      <id>784071067</id>
      <parentid>778228827</parentid>
      <timestamp>2017-06-06T09:05:19Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="196">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{DMCA|Use American English|from|{{{date|}}}|All Wikipedia articles written in American English}}
}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>2x37o7g1hmclvzsql7ciggmq0v57r0m</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Use dmy dates</title>
    <ns>10</ns>
    <id>21044097</id>
    <revision>
      <id>784071134</id>
      <parentid>778226301</parentid>
      <timestamp>2017-06-06T09:05:49Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="138">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{DMCA|Use dmy dates|from|{{{date|}}}}}
}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>bp7zcbjc9uasbebcc8ijm5fqmeb3052</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Val</title>
    <ns>10</ns>
    <id>16592146</id>
    <revision>
      <id>674925404</id>
      <parentid>667661385</parentid>
      <timestamp>2015-08-07T01:44:19Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>replace with copy of [[Template:Val/sandboxlua]] to implement [[Module:Val]] per discussions on talk</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="109">&lt;includeonly&gt;{{{{{|safesubst:}}}#invoke:val|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>8c8rno90y3r62xfltvitd5mej4s5cnx</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Val/delimitnum</title>
    <ns>10</ns>
    <id>16925590</id>
    <revision>
      <id>671661338</id>
      <parentid>671660652</parentid>
      <timestamp>2015-07-16T05:06:28Z</timestamp>
      <contributor>
        <username>Cpiral</username>
        <id>2517237</id>
      </contributor>
      <comment>Undid revision 671660652 by [[Special:Contributions/Cpiral|Cpiral]] ([[User talk:Cpiral|talk]]) fix</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2182">&lt;includeonly&gt;&lt;!--
--&gt;{{#ifeq: &lt;!-- compare &quot;04&quot; to 4, and if so, output 4-digits pure
  What might be &quot;04&quot; is composed of three outputs: dot, len, and fmt --&gt;
  {{#invoke:String|find|{{{1}}}|.}}&lt;!-- Output the zero if no dot.
  --&gt;{{#invoke:String|len &lt;!-- Length of 4 with sign and spaces filtered? --&gt;
    |{{#invoke:String|replace|{{{1}}}|[-+ ]|plain=false}}}}&lt;!-- 
    That replace just filtered out any and all spaces, + or - characters.
    But it's gotta have the minus sign first in the [-charclass].
    Any fmt given?  If so comparison to &quot;4&quot; will fail --&gt;{{{fmt|}}}
| 4 |{{#invoke:String|replace|{{{1}}}|-|&amp;minus;}}&lt;!-- 
If fmt is nil, found . is 0, and filtered len is 4, then 04=4, 
and we have just output the number, replacing any - with a minus sign

Else: 
--&gt;|{{#switch: &lt;!-- its not a pure 4-digit number with no fmt options given--&gt;
{{#invoke:String|sub|{{{1|0}}}|1|1}}
  &lt;!-- If the first char is ... --&gt;

  |- &lt;!-- ... one kind of dash, or another --&gt;
  | = {{#ifeq:{{{nosign|off}}}|off|}}&lt;!-- output a &amp;minus; sign unless nosign
     --&gt;{{#ifeq:
          {{#invoke:String|sub|{{{1|0}}}|2|2}}|.|0}}&lt;!--And then 
          then if next char is . then output a zero, else do || nothing.
     --&gt;{{#switch: {{{fmt}}} &lt;!-- Format the rest of the number. --&gt;
       |commas={{formatnum:{{#invoke:String|sub|{{{1|0}}}|2}}}}
       |#default = {{#invoke:Gapnum|main|{{#invoke:String|sub|{{{1|0}}}|2}}}}
   }} 

  &lt;!-- follow same logic for leading + char --&gt;
  |+={{#ifeq:{{{nosign|off}}}|off|+}}&lt;!--
    --&gt;{{#ifeq:{{#invoke:String|sub|{{{1|0}}}|2|2}}|.|0}}&lt;!--
      --&gt;{{#switch:{{{fmt}}}
        |commas = {{formatnum:{{#invoke:String|sub|{{{1|0}}}|2}}}}
        |#default = {{#invoke:Gapnum|main|{{#invoke:String|sub|{{{1|0}}}|2}}}}
     }} &lt;!-- follow similar logic for leading . char --&gt;
  |.=0&lt;!--
    --&gt;{{#switch:{{{fmt}}}
      |commas={{{1|0}}}
      |#default = {{#invoke:Gapnum|main|{{{1|0}}}}}
    }}

  &lt;!-- Else if first char is not . or - or + --&gt;
  |#default = {{#switch:{{{fmt}}} 
     |commas={{formatnum:{{{1|0}}}}}
     |#default = {{#invoke:Gapnum|main|{{{1|0}}}}}
      }}
   }}
}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>6cdte7zqnczj8b11n1q6pxy3npwcz1b</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Valid</title>
    <ns>10</ns>
    <id>16962896</id>
    <revision>
      <id>772121014</id>
      <parentid>389560191</parentid>
      <timestamp>2017-03-25T12:38:51Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Valid]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (inde...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="253">&lt;includeonly&gt;{{#if:{{{number|}}}|{{#ifeq:{{{number}}}|{{evalns|{{{number}}}}}|true|{{#ifeq:{{{number}}}|+{{evalns|{{{number}}}}}|true|{{#ifeq:{{{number}}}|({{evalns|{{{number}}}}})|true|false}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>19oro4spa2bbej297wjeh8t6ipscju7</sha1>
    </revision>
  </page>
  <page>
    <title>Template:World map indicating continents</title>
    <ns>10</ns>
    <id>42814889</id>
    <revision>
      <id>769286637</id>
      <parentid>764239939</parentid>
      <timestamp>2017-03-08T16:35:16Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1440">[[File:Continents vide couleurs.png|thumb|{{{align|right}}}|{{{size|300px}}}&lt;!--
   --&gt;| {{resize|105%|'''{{{heading|The seven [[continent]]s of [[Earth]]}}}'''}}&lt;ref name=&quot;NatlGeo&quot;&gt;[http://www.nationalgeographic.com/xpeditions/atlas/index.html?Parent=world&amp;Mode=d&amp;SubMode=w World] at the [http://www.nationalgeographic.com/xpeditions/ Xpeditions Atlas]'', [[National Geographic Society]], Washington D.C., 2006.&lt;/ref&gt;
{{col-begin}}
{{col-break}}
{{unbulleted list
|{{legend2|#0c0|[[North America]]}}
|{{legend2|green|[[South America]]}}
|{{legend2|#0040ff|[[Antarctica]]}}
}}
{{col-break}}
{{unbulleted list
|{{legend2|#c10000|[[Europe]]}}
|{{legend2|#fed52e|[[Africa]]}}
}}
{{col-break}}
{{unbulleted list
|{{legend2|#f33e01|[[Asia]]}}
|{{legend2|#c04080|[[Australia (continent)|Australia]]}}
}}
{{navbar|style=float:right;|mini=true|World map indicating continents}}
{{col-end}}
]]&lt;noinclude&gt;
{{Documentation
 | content =
The parameters ''align'' (left, center, or, by default, right) and ''size'' (default 300px width) may be used to set the template's horizontal position and the image's size per, respectively, the '''''Location''''' and '''''Size''''' entries [[Wikipedia:Extended image syntax|here]].

The parameter ''heading'' may be used to replace the default &quot;The seven continents of Earth&quot; heading.

== See also ==
{{Continent-based templates |collapsed}}

{{Template reflist}}
}}

[[Category:Continent templates]]
&lt;/noinclude&gt;</text>
      <sha1>3oc6l1ifwpv5zhxem2ivc1bb30zboa9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Yesno</title>
    <ns>10</ns>
    <id>22255088</id>
    <revision>
      <id>669640856</id>
      <parentid>391649268</parentid>
      <timestamp>2015-07-02T14:46:21Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <comment>add support for true/false, per request</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="355">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#switch: {{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;lc: {{{1|}}} }}
 |no
 |n
 |false
 |0        = {{{no|&lt;!-- null --&gt;}}}
 |         = {{{blank|{{{no|&lt;!-- null --&gt;}}}}}}
 |        = {{{|}}}
 |yes
 |y
 |true
 |1        = {{{yes|yes}}}
 |#default = {{{def|{{{yes|yes}}}}}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2mck1f9936qc4xwrhvyhyan994ced9o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Yesno-no</title>
    <ns>10</ns>
    <id>48375573</id>
    <revision>
      <id>804450734</id>
      <parentid>772215751</parentid>
      <timestamp>2017-10-09T02:26:13Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Yesno-no]]&quot;: [[WP:High-risk templates|Highly visible template]]; 282,000+ transclusions ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="317">&lt;noinclude&gt;{{pp-template|small=yes}}&lt;/noinclude&gt;{{safesubst:&lt;noinclude /&gt;yesno|{{{1}}}|yes={{{yes|yes}}}|no={{{no|no}}}|blank={{{blank|no}}}|={{{|no}}}|def={{{def|no}}}}}&lt;noinclude&gt;
{{Documentation|Template:Yesno/doc}}
&lt;!--Categories go in the doc page referenced above; interwikis go in Wikidata.--&gt;
&lt;/noinclude&gt;</text>
      <sha1>axdkqes1fzx1wl8jcihjv6i0yujbx8h</sha1>
    </revision>
  </page>
  <page>
    <title>Template:</title>
    <ns>10</ns>
    <id>7599646</id>
    <revision>
      <id>636441209</id>
      <parentid>612824946</parentid>
      <timestamp>2014-12-03T10:06:52Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>move bold tag</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="139">&amp;nbsp;&lt;b&gt;&amp;middot;&lt;/b&gt;&amp;#32;&lt;noinclude&gt;

{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>m6es8khirlfrhpczjy4j6v6cxs2jadq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:About</title>
    <ns>828</ns>
    <id>50080208</id>
    <revision>
      <id>730125083</id>
      <parentid>719003202</parentid>
      <timestamp>2016-07-16T21:33:40Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Updated from sandbox with support for otherText option passthrough</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1563">local mArguments --initialize lazily
local mHatnote = require('Module:Hatnote')
local mHatList = require('Module:Hatnote list')
local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local p = {}

function p.about (frame)
	-- A passthrough that gets args from the frame and all

	mArguments = require('Module:Arguments')
	args = mArguments.getArgs(frame)
	return p._about(args)
end


function p._about (args, options)
	-- Produces &quot;about&quot; hatnote.

	-- Type checks and defaults
	checkType('_about', 1, args, 'table', true)
	args = args or {}
	checkType('_about', 2, options, 'table', true)
	options = options or {}
	local defaultOptions = {
		aboutForm = 'This %s is about %s. ',
		defaultPageType = 'page',
		namespace = mw.title.getCurrentTitle().namespace,
		otherText = nil, --included for complete list
		pageTypesByNamespace = {
			[0] = 'article',
			[14] = 'category'
		},
		sectionString = 'section'
	}
	for k, v in pairs(defaultOptions) do
		if options[k] == nil then options[k] = v end
	end

	-- Set initial &quot;about&quot; string
	local pageType = (args.section and options.sectionString) or
		options.pageTypesByNamespace[options.namespace] or
		options.defaultPageType
	local about = ''
	if args[1] then
		about = string.format(options.aboutForm, pageType, args[1])
	end
	
	--Allow passing through certain options
	local fsOptions = {
		otherText = options.otherText
	}

	-- Set for-see list
	local forSee = mHatList._forSee(args, 2, fsOptions)

	-- Concatenate and return
	return mHatnote._hatnote(about .. forSee)
end

return p</text>
      <sha1>dljvn3yousnkg58p45o8yxrkev89jqt</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Anchor</title>
    <ns>828</ns>
    <id>41372338</id>
    <revision>
      <id>586910342</id>
      <parentid>586194472</parentid>
      <timestamp>2013-12-20T06:14:24Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Anchor: [[Wikipedia:Lua/Modules|High-risk Lua module]]: 20,000 transclusions ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="632">-- This module implements {{anchor}}.

local getArgs = require('Module:Arguments').getArgs
local tableTools = require('Module:TableTools')

local p = {}

function p.main(frame)
	-- Get the positional arguments from #invoke, remove any nil values,
	-- and pass them to p._main.
	local args = getArgs(frame)
	local argArray = tableTools.compressSparseArray(args)
	return p._main(unpack(argArray))
end

function p._main(...)
	-- Generate the list of anchors.
	local anchors = {...}
	local ret = {}
	for _, anchor in ipairs(anchors) do
		ret[#ret + 1] = '&lt;span id=&quot;' .. anchor .. '&quot;&gt;&lt;/span&gt;'
	end
	return table.concat(ret)
end

return p</text>
      <sha1>na5loe2ne1o9yhs2k5p73tr355hey7t</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Arguments</title>
    <ns>828</ns>
    <id>41298065</id>
    <revision>
      <id>696500078</id>
      <parentid>668829606</parentid>
      <timestamp>2015-12-23T16:07:27Z</timestamp>
      <contributor>
        <username>Xaosflux</username>
        <id>502540</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Module:Arguments: used in the mediawiki interface ex: [[MediaWiki:Watchlist-details]] ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10054">-- This module provides easy processing of arguments passed to Scribunto from
-- #invoke. It is intended for use by other Lua modules, and should not be
-- called from #invoke directly.

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType

local arguments = {}

-- Generate four different tidyVal functions, so that we don't have to check the
-- options every time we call it.

local function tidyValDefault(key, val)
	if type(val) == 'string' then
		val = val:match('^%s*(.-)%s*$')
		if val == '' then
			return nil
		else
			return val
		end
	else
		return val
	end
end

local function tidyValTrimOnly(key, val)
	if type(val) == 'string' then
		return val:match('^%s*(.-)%s*$')
	else
		return val
	end
end

local function tidyValRemoveBlanksOnly(key, val)
	if type(val) == 'string' then
		if val:find('%S') then
			return val
		else
			return nil
		end
	else
		return val
	end
end

local function tidyValNoChange(key, val)
	return val
end

local function matchesTitle(given, title)
	local tp = type( given )
	return (tp == 'string' or tp == 'number') and mw.title.new( given ).prefixedText == title
end

local translate_mt = { __index = function(t, k) return k end }

function arguments.getArgs(frame, options)
	checkType('getArgs', 1, frame, 'table', true)
	checkType('getArgs', 2, options, 'table', true)
	frame = frame or {}
	options = options or {}

	--[[
	-- Set up argument translation.
	--]]
	options.translate = options.translate or {}
	if getmetatable(options.translate) == nil then
		setmetatable(options.translate, translate_mt)
	end
	if options.backtranslate == nil then
		options.backtranslate = {}
		for k,v in pairs(options.translate) do
			options.backtranslate[v] = k
		end
	end
	if options.backtranslate and getmetatable(options.backtranslate) == nil then
		setmetatable(options.backtranslate, {
			__index = function(t, k)
				if options.translate[k] ~= k then
					return nil
				else
					return k
				end
			end
		})
	end

	--[[
	-- Get the argument tables. If we were passed a valid frame object, get the
	-- frame arguments (fargs) and the parent frame arguments (pargs), depending
	-- on the options set and on the parent frame's availability. If we weren't
	-- passed a valid frame object, we are being called from another Lua module
	-- or from the debug console, so assume that we were passed a table of args
	-- directly, and assign it to a new variable (luaArgs).
	--]]
	local fargs, pargs, luaArgs
	if type(frame.args) == 'table' and type(frame.getParent) == 'function' then
		if options.wrappers then
			--[[
			-- The wrappers option makes Module:Arguments look up arguments in
			-- either the frame argument table or the parent argument table, but
			-- not both. This means that users can use either the #invoke syntax
			-- or a wrapper template without the loss of performance associated
			-- with looking arguments up in both the frame and the parent frame.
			-- Module:Arguments will look up arguments in the parent frame
			-- if it finds the parent frame's title in options.wrapper;
			-- otherwise it will look up arguments in the frame object passed
			-- to getArgs.
			--]]
			local parent = frame:getParent()
			if not parent then
				fargs = frame.args
			else
				local title = parent:getTitle():gsub('/sandbox$', '')
				local found = false
				if matchesTitle(options.wrappers, title) then
					found = true
				elseif type(options.wrappers) == 'table' then
					for _,v in pairs(options.wrappers) do
						if matchesTitle(v, title) then
							found = true
							break
						end
					end
				end

				-- We test for false specifically here so that nil (the default) acts like true.
				if found or options.frameOnly == false then
					pargs = parent.args
				end
				if not found or options.parentOnly == false then
					fargs = frame.args
				end
			end
		else
			-- options.wrapper isn't set, so check the other options.
			if not options.parentOnly then
				fargs = frame.args
			end
			if not options.frameOnly then
				local parent = frame:getParent()
				pargs = parent and parent.args or nil
			end
		end
		if options.parentFirst then
			fargs, pargs = pargs, fargs
		end
	else
		luaArgs = frame
	end

	-- Set the order of precedence of the argument tables. If the variables are
	-- nil, nothing will be added to the table, which is how we avoid clashes
	-- between the frame/parent args and the Lua args.
	local argTables = {fargs}
	argTables[#argTables + 1] = pargs
	argTables[#argTables + 1] = luaArgs

	--[[
	-- Generate the tidyVal function. If it has been specified by the user, we
	-- use that; if not, we choose one of four functions depending on the
	-- options chosen. This is so that we don't have to call the options table
	-- every time the function is called.
	--]]
	local tidyVal = options.valueFunc
	if tidyVal then
		if type(tidyVal) ~= 'function' then
			error(
				&quot;bad value assigned to option 'valueFunc'&quot;
					.. '(function expected, got '
					.. type(tidyVal)
					.. ')',
				2
			)
		end
	elseif options.trim ~= false then
		if options.removeBlanks ~= false then
			tidyVal = tidyValDefault
		else
			tidyVal = tidyValTrimOnly
		end
	else
		if options.removeBlanks ~= false then
			tidyVal = tidyValRemoveBlanksOnly
		else
			tidyVal = tidyValNoChange
		end
	end

	--[[
	-- Set up the args, metaArgs and nilArgs tables. args will be the one
	-- accessed from functions, and metaArgs will hold the actual arguments. Nil
	-- arguments are memoized in nilArgs, and the metatable connects all of them
	-- together.
	--]]
	local args, metaArgs, nilArgs, metatable = {}, {}, {}, {}
	setmetatable(args, metatable)

	local function mergeArgs(tables)
		--[[
		-- Accepts multiple tables as input and merges their keys and values
		-- into one table. If a value is already present it is not overwritten;
		-- tables listed earlier have precedence. We are also memoizing nil
		-- values, which can be overwritten if they are 's' (soft).
		--]]
		for _, t in ipairs(tables) do
			for key, val in pairs(t) do
				if metaArgs[key] == nil and nilArgs[key] ~= 'h' then
					local tidiedVal = tidyVal(key, val)
					if tidiedVal == nil then
						nilArgs[key] = 's'
					else
						metaArgs[key] = tidiedVal
					end
				end
			end
		end
	end

	--[[
	-- Define metatable behaviour. Arguments are memoized in the metaArgs table,
	-- and are only fetched from the argument tables once. Fetching arguments
	-- from the argument tables is the most resource-intensive step in this
	-- module, so we try and avoid it where possible. For this reason, nil
	-- arguments are also memoized, in the nilArgs table. Also, we keep a record
	-- in the metatable of when pairs and ipairs have been called, so we do not
	-- run pairs and ipairs on the argument tables more than once. We also do
	-- not run ipairs on fargs and pargs if pairs has already been run, as all
	-- the arguments will already have been copied over.
	--]]

	metatable.__index = function (t, key)
		--[[
		-- Fetches an argument when the args table is indexed. First we check
		-- to see if the value is memoized, and if not we try and fetch it from
		-- the argument tables. When we check memoization, we need to check
		-- metaArgs before nilArgs, as both can be non-nil at the same time.
		-- If the argument is not present in metaArgs, we also check whether
		-- pairs has been run yet. If pairs has already been run, we return nil.
		-- This is because all the arguments will have already been copied into
		-- metaArgs by the mergeArgs function, meaning that any other arguments
		-- must be nil.
		--]]
		if type(key) == 'string' then
			key = options.translate[key]
		end
		local val = metaArgs[key]
		if val ~= nil then
			return val
		elseif metatable.donePairs or nilArgs[key] then
			return nil
		end
		for _, argTable in ipairs(argTables) do
			local argTableVal = tidyVal(key, argTable[key])
			if argTableVal ~= nil then
				metaArgs[key] = argTableVal
				return argTableVal
			end
		end
		nilArgs[key] = 'h'
		return nil
	end

	metatable.__newindex = function (t, key, val)
		-- This function is called when a module tries to add a new value to the
		-- args table, or tries to change an existing value.
		if type(key) == 'string' then
			key = options.translate[key]
		end
		if options.readOnly then
			error(
				'could not write to argument table key &quot;'
					.. tostring(key)
					.. '&quot;; the table is read-only',
				2
			)
		elseif options.noOverwrite and args[key] ~= nil then
			error(
				'could not write to argument table key &quot;'
					.. tostring(key)
					.. '&quot;; overwriting existing arguments is not permitted',
				2
			)
		elseif val == nil then
			--[[
			-- If the argument is to be overwritten with nil, we need to erase
			-- the value in metaArgs, so that __index, __pairs and __ipairs do
			-- not use a previous existing value, if present; and we also need
			-- to memoize the nil in nilArgs, so that the value isn't looked
			-- up in the argument tables if it is accessed again.
			--]]
			metaArgs[key] = nil
			nilArgs[key] = 'h'
		else
			metaArgs[key] = val
		end
	end

	local function translatenext(invariant)
		local k, v = next(invariant.t, invariant.k)
		invariant.k = k
		if k == nil then
			return nil
		elseif type(k) ~= 'string' or not options.backtranslate then
			return k, v
		else
			local backtranslate = options.backtranslate[k]
			if backtranslate == nil then
				-- Skip this one. This is a tail call, so this won't cause stack overflow
				return translatenext(invariant)
			else
				return backtranslate, v
			end
		end
	end

	metatable.__pairs = function ()
		-- Called when pairs is run on the args table.
		if not metatable.donePairs then
			mergeArgs(argTables)
			metatable.donePairs = true
		end
		return translatenext, { t = metaArgs }
	end

	local function inext(t, i)
		-- This uses our __index metamethod
		local v = t[i + 1]
		if v ~= nil then
			return i + 1, v
		end
	end

	metatable.__ipairs = function (t)
		-- Called when ipairs is run on the args table.
		return inext, t, 0
	end

	return args
end

return arguments</text>
      <sha1>5qx9tzlul9ser30uxj9nbasjt92cevn</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Authority control</title>
    <ns>828</ns>
    <id>39028170</id>
    <revision>
      <id>806800815</id>
      <parentid>800916723</parentid>
      <timestamp>2017-10-24T06:49:37Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from [[Module:Authority control/sandbox]] using more efficient code from [[User:/Module:Authority control]] by [[User:|Eran]] per [[Template talk:Authority control#Technical improvement]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="15394">require('Module:No globals')

local function getCatForId( id )
	local title = mw.title.getCurrentTitle()
	local namespace = title.namespace
	if namespace == 0 then
		return '[[Category:Wikipedia articles with ' .. id .. ' identifiers]]'
	elseif namespace == 2 and not title.isSubpage then
		return '[[Category:User pages with ' .. id .. ' identifiers]]'
	else
		return '[[Category:Miscellaneous pages with ' .. id .. ' identifiers]]'
	end
end

local function viafLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[https://viaf.org/viaf/' .. id .. ' ' .. id .. ']' .. getCatForId( 'VIAF' )
end

local function kulturnavLink( id )
	return '[http://kulturnav.org/language/en/' .. id .. ' id]'
end

local function sikartLink( id )
	return '[http://www.sikart.ch/KuenstlerInnen.aspx?id=' .. id .. '&amp;lng=en ' .. id .. ']'
end

local function tlsLink( id )
	local id2 = id:gsub(' +', '_')
	return '[http://tls.theaterwissenschaft.ch/wiki/' .. id2 .. ' ' .. id .. ']'
end

local function ciniiLink( id )
	return '[http://ci.nii.ac.jp/author/' .. id .. '?l=en ' .. id .. ']'
end

local function bneLink( id )
	return '[http://catalogo.bne.es/uhtbin/authoritybrowse.cgi?action=display&amp;authority_id=' .. id .. ' ' .. id .. ']'
end

local function uscongressLink( id )
	return '[http://bioguide.congress.gov/scripts/biodisplay.pl?index=' .. id .. ' ' .. id .. ']'
end

local function narapersonLink( id )
	return '[https://research.archives.gov/person/' .. id .. ' ' .. id .. ']'
end

local function naraorganizationLink( id )
	return '[https://research.archives.gov/organization/' .. id .. ' ' .. id .. ']'
end

local function botanistLink( id )
	local id2 = id:gsub(' +', '%20')
	return '[http://www.ipni.org/ipni/advAuthorSearch.do?find_abbreviation=' .. id2 .. ' ' .. id .. ']'
end

local function mgpLink( id )
	-- TODO Implement some sanity checking regex
	return '[http://www.genealogy.ams.org/id.php?id=' .. id .. ' ' .. id .. ']'
end

local function rslLink( id )
	-- TODO Implement some sanity checking regex
	return '[http://aleph.rsl.ru/F?func=find-b&amp;find_code=SYS&amp;adjacent=Y&amp;local_base=RSL11&amp;request=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function leonoreLink( id )
-- Identifiants allant de LH/1/1  LH/2794/54 (lgionnaires)
-- Identifiants allant de C/0/1  C/0/84 (84 lgionnaires clbres)
-- Identifiants allant de 19800035/1/1  19800035/385/51670 (lgionnaires dcds entre 1954 et 1977, et quelques dossiers de lgionnaires dcds avant 1954)
	if not string.match( id, '^LH/%d%d?%d?%d?/%d%d?%d?$' ) and
	   not string.match( id, '^C/0/%d%d?$' ) and
	   not string.match( id, '^19800035/%d%d?%d?%d?/%d%d?%d?%d?%d?$' ) then
		return false
	end
	return '[http://www.culture.gouv.fr/public/mistral/leonore_fr?ACTION=CHERCHER&amp;FIELD_1=COTE&amp;VALUE_1=' .. id .. ' ' .. id .. ']'
end

local function sbnLink( id )
	if not string.match( id, '^IT\\ICCU\\%d%d%d%d%d%d%d%d%d%d$' ) and not string.match( id, '^IT\\ICCU\\%u%u[%d%u]%u\\%d%d%d%d%d%d$' ) then
		return false
	end
	return '[http://opac.sbn.it/opacsbn/opac/iccu/scheda_authority.jsp?bid=' .. id .. ' ' .. id .. ']' .. getCatForId( 'SBN' )
end

local function nkcLink( id )
	return '[http://aleph.nkp.cz/F/?func=find-c&amp;local_base=aut&amp;ccl_term=ica=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function nclLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://aleweb.ncl.edu.tw/F/?func=accref&amp;acc_sequence=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function ndlLink( id )
	return '[https://id.ndl.go.jp/auth/ndlna/' .. id .. ' ' .. id .. ']'
end

local function sudocLink( id )
	if not string.match( id, '^%d%d%d%d%d%d%d%d[%dxX]$' ) then
		return false
	end
	return '[https://www.idref.fr/' .. id .. ' ' .. id .. ']'
end

local function hlsLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.hls-dhs-dss.ch/textes/f/F' .. id .. '.php ' .. id .. ']'
end

local function lirLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.e-lir.ch/e-LIR___Lexicon.' .. id .. '.450.0.html ' .. id .. ']'
end

local function splitLccn( id )
	if id:match( '^%l%l?%l?%d%d%d%d%d%d%d%d%d?%d?$' ) then
		id = id:gsub( '^(%l+)(%d+)(%d%d%d%d%d%d)$', '%1/%2/%3' )
	end
	if id:match( '^%l%l?%l?/%d%d%d?%d?/%d+$' ) then
		return mw.text.split( id, '/' )
	end
	return false
end

local function append(str, c, length)
	while str:len() &lt; length do
		str = c .. str
	end
	return str
end

local function lccnLink( id )
	local parts = splitLccn( id )
	if not parts then
		return false
	end
	local lccnType = parts[1] ~= 'sh' and 'names' or 'subjects'
	id = parts[1] .. parts[2] .. append( parts[3], '0', 6 )
	return '[http://id.loc.gov/authorities/' .. lccnType .. '/' .. id .. ' ' .. id .. ']' .. getCatForId( 'LCCN' )
end

local function mbLink( id )
	-- TODO Implement some sanity checking regex
	return '[https://musicbrainz.org/artist/' .. id .. ' ' .. id .. ']' .. getCatForId( 'MusicBrainz' )
end

--Returns the ISNI check digit isni must be a string where the 15 first elements are digits
local function getIsniCheckDigit( isni )
	local total = 0
	for i = 1, 15 do
		local digit = isni:byte( i ) - 48 --Get integer value
		total = (total + digit) * 2
	end
	local remainder = total % 11
	local result = (12 - remainder) % 11
	if result == 10 then
		return &quot;X&quot;
	end
	return tostring( result )
end

--Validate ISNI (and ORCID) and retuns it as a 16 characters string or returns false if it's invalid
--See http://support.orcid.org/knowledgebase/articles/116780-structure-of-the-orcid-identifier
local function validateIsni( id )
	id = id:gsub( '[ %-]', '' ):upper()
	if not id:match( '^%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d[%dX]$' ) then
		return false
	end
	if getIsniCheckDigit( id ) ~= string.char( id:byte( 16 ) ) then
		return false
	end
	return id
end

local function isniLink( id )
	id = validateIsni( id )
	if not id then
		return false
	end
	return '[http://isni.org/isni/' .. id .. ' ' .. id:sub( 1, 4 ) .. ' ' .. id:sub( 5, 8 ) .. ' '  .. id:sub( 9, 12 ) .. ' '  .. id:sub( 13, 16 ) .. ']' .. getCatForId( 'ISNI' )
end

local function orcidLink( id )
	id = validateIsni( id )
	if not id then
		return false
	end
	id = id:sub( 1, 4 ) .. '-' .. id:sub( 5, 8 ) .. '-'  .. id:sub( 9, 12 ) .. '-'  .. id:sub( 13, 16 )
	return '[https://orcid.org/' .. id .. ' ' .. id .. ']' .. getCatForId( 'ORCID' )
end

local function gndLink( id )
	return '[http://d-nb.info/gnd/' .. id .. ' ' .. id .. ']' .. getCatForId( 'GND' )
end

local function selibrLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[https://libris.kb.se/auth/' .. id .. ' ' .. id .. ']' .. getCatForId( 'SELIBR' )
end

local function bnfLink( id )
	--Add cb prefix if it has been removed
	if not string.match( id, '^cb.+$' ) then
		id = 'cb' .. id
	end

	return '[http://catalogue.bnf.fr/ark:/12148/' .. id .. ' ' .. id .. '] [http://data.bnf.fr/ark:/12148/' .. id .. ' (data)]' .. getCatForId( 'BNF' )
end

local function bpnLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.biografischportaal.nl/en/persoon/' .. id .. ' ' .. id .. ']' .. getCatForId( 'BPN' )
end

local function ridLink( id )
	return '[https://www.researcherid.com/rid/' .. id .. ' ' .. id .. ']' .. getCatForId( 'RID' )
end

local function bibsysLink( id )
	return '[https://authority.bibsys.no/authority/rest/authorities/html/' .. id .. ' ' .. id .. ']' .. getCatForId( 'BIBSYS' )
end

local function ulanLink( id )
	return '[https://www.getty.edu/vow/ULANFullDisplay?find=&amp;role=&amp;nation=&amp;subjectid=' .. id .. ' ' .. id .. ']' .. getCatForId( 'ULAN' )
end

local function nlaLink( id )
	return '[https://nla.gov.au/anbd.aut-an' .. id .. ' ' .. id .. ']' .. getCatForId( 'NLA' )
end

local function rkdartistsLink( id )
	return '[https://rkd.nl/en/explore/artists/' .. id .. ' ' .. id .. ']' .. getCatForId( 'RKDartists' )
end

local function snacLink( id )
	return '[http://socialarchive.iath.virginia.edu/ark:/99166/' .. id .. ' ' .. id .. ']' .. getCatForId( 'SNAC-ID' )
end

local function dblpLink( id )
	return '[http://dblp.org/pid/' .. id .. ' ' .. id .. ']' .. getCatForId( 'DBLP' )
end

local function acmLink( id )
	return '[https://dl.acm.org/author_page.cfm?id=' .. id .. ' ' .. id .. ']' .. getCatForId( 'ACM-DL' )
end

local function autoresuyLink( id )
	return '[http://autores.uy/autor/' .. id .. ' ' .. id .. ']' ..  getCatForId( 'autores.uy' )
end

local function picLink( id )
	return '[https://pic.nypl.org/constituents/' .. id .. ' ' .. id .. ']' .. getCatForId( 'PIC' )
end

local function getIdsFromWikidata( itemId, property )
	local ids = {}
	local statements = mw.wikibase.getBestStatements( itemId, property )
	if statements then
		for _, statement in ipairs( statements ) do
			if statement.mainsnak.datavalue then
				table.insert( ids, statement.mainsnak.datavalue.value )
			end
		end
	end
	return ids
end

local function matchesWikidataRequirements( itemId, reqs )
	for _, group in ipairs( reqs ) do
		local property = 'P' .. group[1]
		local qid = group[2]
		local statements = mw.wikibase.getBestStatements( itemId, property )
		if statements ~= nil then
			for _, statement in ipairs( statements ) do
				if statement.mainsnak.datavalue ~= nil then
					if statement.mainsnak.datavalue.value['numeric-id'] == qid then
						return true
					end
				end
			end
		end
	end
	return false
end

local function createRow( id, label, rawValue, link, withUid )
	if link then
		if withUid then
			return '*&lt;span class=&quot;nowrap&quot;&gt;' .. label .. ' &lt;span class=&quot;uid&quot;&gt;' .. link .. '&lt;/span&gt;&lt;/span&gt;\n'
		else
			return '*&lt;span class=&quot;nowrap&quot;&gt;' .. label .. ' ' .. link .. '&lt;/span&gt;\n'
		end
	else
		return '* &lt;span class=&quot;error&quot;&gt;The ' .. id .. ' id ' .. rawValue .. ' is not valid.&lt;/span&gt;[[Category:Wikipedia articles with faulty authority control identifiers (' .. id .. ')]]\n'
	end
end

--In this order: name of the parameter, label, propertyId in Wikidata, formatting function
local conf = {
	{ 'VIAF', '[[Virtual International Authority File|VIAF]]', 214, viafLink },
	{ 'LCCN', '[[Library of Congress Control Number|LCCN]]', 244, lccnLink },
	{ 'ISNI', '[[International Standard Name Identifier|ISNI]]', 213, isniLink },
	{ 'ORCID', '[[ORCID]]', 496, orcidLink },
	{ 'GND', '[[Integrated Authority File|GND]]', 227, gndLink },
	{ 'SELIBR', '[[LIBRIS|SELIBR]]', 906, selibrLink },
	{ 'SUDOC', '[[Systme universitaire de documentation|SUDOC]]', 269, sudocLink },
	{ 'BNF', '[[Bibliothque nationale de France|BNF]]', 268, bnfLink },
	{ 'BPN', '[[Biografisch Portaal|BPN]]', 651, bpnLink },
	{ 'RID', '[[ResearcherID]]', 1053, ridLink },
	{ 'BIBSYS', '[[BIBSYS]]', 1015, bibsysLink },
	{ 'ULAN', '[[Union List of Artist Names|ULAN]]', 245, ulanLink },
	{ 'HDS', '[[Historical Dictionary of Switzerland|HDS]]', 902, hlsLink },
	{ 'LIR', '[[Historical Dictionary of Switzerland#Lexicon_Istoric_Retic|LIR]]', 886, lirLink },
	{ 'MBA', '[[MusicBrainz]]', 434, mbLink },
	{ 'MGP', '[[Mathematics Genealogy Project|MGP]]', 549, mgpLink },
	{ 'NLA', '[[National Library of Australia|NLA]]', 409, nlaLink },
	{ 'NDL', '[[National Diet Library|NDL]]', 349, ndlLink },
	{ 'NCL', '[[National Central Library|NCL]]', 1048, nclLink },
	{ 'NKC', '[[National Library of the Czech Republic|NKC]]', 691, nkcLink },
	{ 'Lonore', '[[Base Lonore|Lonore]]', 640, leonoreLink },
	{ 'SBN', '[[Istituto Centrale per il Catalogo Unico|ICCU]]', 396, sbnLink },
	{ 'RLS', '[[Russian State Library|RLS]]', 947, rslLink },
	{ 'Botanist', '[[Author citation (botany)|Botanist]]', 428, botanistLink },
	{ 'NARA-person', '[[National Archives and Records Administration|NARA]]', 1222, narapersonLink },
	{ 'NARA-organization', '[[National Archives and Records Administration|NARA]]', 1223, naraorganizationLink },
	{ 'USCongress', '[[Biographical Directory of the United States Congress|US Congress]]', 1157, uscongressLink },
	{ 'BNE', '[[Biblioteca Nacional de Espaa|BNE]]', 950, bneLink },
	{ 'CINII', '[[CiNii]]', 271, ciniiLink },
	{ 'TLS', '[[Theaterlexikon der Schweiz|TLS]]', 1362, tlsLink },
	{ 'SIKART', '[[SIKART]]', 781, sikartLink },
	{ 'KULTURNAV', '[[KulturNav]]', 1248, kulturnavLink },
	{ 'RKDartists', '[[Netherlands Institute for Art History#Online artist pages|RKD]]', 650, rkdartistsLink },
	{ 'SNAC-ID', '[[Institute for Advanced Technology in the Humanities|IATH]]', 3430, snacLink },
	{ 'DBLP', '[[DBLP]]', 2456, dblpLink },
	{ 'ACM-DL', '[[ACM Digital Library|ACM DL]]', 864, acmLink },
	{ 'autores.uy', '[[autores.uy]]', 2558, autoresuyLink },
	{ 'PIC', '[[:d:Q23892012|PIC]]', 2750, picLink },
}

-- Check that the Wikidata item has this property--&gt;value before adding it
local reqs = {}

local p = {}

function p.authorityControl( frame )
	local parentArgs = frame:getParent().args
	--Create rows
	local elements = {}

	--redirect PND to GND
	if (parentArgs.GND == nil or parentArgs.GND == '') and parentArgs.PND ~= nil and parentArgs.PND ~= '' then
		parentArgs.GND = parentArgs.PND
	end

	--Wikidata fallback if requested
	local itemId = mw.wikibase.getEntityIdForCurrentPage()
	if itemId ~= nil then
		for _, params in ipairs( conf ) do
			if params[3] ~= 0 then
				local val = parentArgs[params[1]]
				if not val or val == '' then
					local canUseWikidata = nil
					if reqs[params[1]] ~= nil then
						canUseWikidata = matchesWikidataRequirements( itemId, reqs[params[1]] )
					else
						canUseWikidata = true
					end
					if canUseWikidata then
						local wikidataIds = getIdsFromWikidata( itemId, 'P' .. params[3] )
						if wikidataIds[1] then
							parentArgs[params[1]] = wikidataIds[1]
						end
					end
				end
			end
		end
	end

	--Worldcat
	if parentArgs['WORLDCATID'] and parentArgs['WORLDCATID'] ~= '' then
		table.insert( elements, createRow( 'WORLDCATID', '', parentArgs['WORLDCATID'], '[https://www.worldcat.org/identities/' .. parentArgs['WORLDCATID'] .. ' WorldCat Identities]', false ) ) --Validation?
	elseif parentArgs['VIAF'] and string.match( parentArgs['VIAF'], '^%d+$' ) then -- Hackishly copy the validation code; this should go away when we move to using P1793 and P1630
		table.insert( elements, createRow( 'VIAF', '', parentArgs['VIAF'], '[https://www.worldcat.org/identities/containsVIAFID/' .. parentArgs['VIAF'] .. ' WorldCat Identities]', false ) )
	elseif parentArgs['LCCN'] and parentArgs['LCCN'] ~= '' then
		local lccnParts = splitLccn( parentArgs['LCCN'] )
		if lccnParts and lccnParts[1] ~= 'sh' then
			table.insert( elements, createRow( 'LCCN', '', parentArgs['LCCN'], '[https://www.worldcat.org/identities/lccn-' .. lccnParts[1] .. lccnParts[2] .. '-' .. lccnParts[3] .. ' WorldCat Identities]', false ) )
		end
	end

	--Configured rows
	local rct = 0
	for _, params in ipairs( conf ) do
		local val = parentArgs[params[1]]
		if val and val ~= '' then
			table.insert( elements, createRow( params[1], params[2] .. ':', val, params[4]( val ), true ) )
			rct = rct + 1
		end
	end
	local Navbox = require('Module:Navbox')
	local elementscats = ''
	if rct &gt; 13 then
		elementscats  = '[[Category:AC with ' .. rct .. ' elements]]'
	end

	if #elements ~= 0 then
		return Navbox._navbox( {
			name  = 'Authority control',
			bodyclass = 'hlist',
			group1 = '[[Help:Authority control|Authority control]]' .. elementscats,
			list1 = table.concat( elements )
			} )
	else
		return &quot;&quot;
	end
end

return p</text>
      <sha1>q2m0aw21lfndledhk1dbf0493olqwrg</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler</title>
    <ns>828</ns>
    <id>39772274</id>
    <revision>
      <id>617942873</id>
      <parentid>616811662</parentid>
      <timestamp>2014-07-22T05:08:26Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>allow invocations specifying the page parameter to use the mw.loadData optimisations, and don't call mw.title.new every time</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7871">--------------------------------------------------------------------------------
--                                                                            --
--                              CATEGORY HANDLER                              --
--                                                                            --
--      This module implements the {{category handler}} template in Lua,      --
--      with a few improvements: all namespaces and all namespace aliases     --
--      are supported, and namespace names are detected automatically for     --
--      the local wiki. This module requires [[Module:Namespace detect]]      --
--      and [[Module:Yesno]] to be available on the local wiki. It can be     --
--      configured for different wikis by altering the values in              --
--      [[Module:Category handler/config]], and pages can be blacklisted      --
--      from categorisation by using [[Module:Category handler/blacklist]].   --
--                                                                            --
--------------------------------------------------------------------------------

-- Load required modules
local yesno = require('Module:Yesno')

-- Lazily load things we don't always need
local mShared, mappings

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function trimWhitespace(s, removeBlanks)
	if type(s) ~= 'string' then
		return s
	end
	s = s:match('^%s*(.-)%s*$')
	if removeBlanks then
		if s ~= '' then
			return s
		else
			return nil
		end
	else
		return s
	end
end

--------------------------------------------------------------------------------
-- CategoryHandler class
--------------------------------------------------------------------------------

local CategoryHandler = {}
CategoryHandler.__index = CategoryHandler

function CategoryHandler.new(data, args)
	local obj = setmetatable({ _data = data, _args = args }, CategoryHandler)
	
	-- Set the title object
	do
		local pagename = obj:parameter('demopage')
		local success, titleObj
		if pagename then
			success, titleObj = pcall(mw.title.new, pagename)
		end
		if success and titleObj then
			obj.title = titleObj
			if titleObj == mw.title.getCurrentTitle() then
				obj._usesCurrentTitle = true
			end
		else
			obj.title = mw.title.getCurrentTitle()
			obj._usesCurrentTitle = true
		end
	end

	-- Set suppression parameter values
	for _, key in ipairs{'nocat', 'categories'} do
		local value = obj:parameter(key)
		value = trimWhitespace(value, true)
		obj['_' .. key] = yesno(value)
	end
	do
		local subpage = obj:parameter('subpage')
		local category2 = obj:parameter('category2')
		if type(subpage) == 'string' then
			subpage = mw.ustring.lower(subpage)
		end
		if type(category2) == 'string' then
			subpage = mw.ustring.lower(category2)
		end
		obj._subpage = trimWhitespace(subpage, true)
		obj._category2 = trimWhitespace(category2) -- don't remove blank values
	end
	return obj
end

function CategoryHandler:parameter(key)
	local parameterNames = self._data.parameters[key]
	local pntype = type(parameterNames)
	if pntype == 'string' or pntype == 'number' then
		return self._args[parameterNames]
	elseif pntype == 'table' then
		for _, name in ipairs(parameterNames) do
			local value = self._args[name]
			if value ~= nil then
				return value
			end
		end
		return nil
	else
		error(string.format(
			'invalid config key &quot;%s&quot;',
			tostring(key)
		), 2)
	end
end

function CategoryHandler:isSuppressedByArguments()
	return
		-- See if a category suppression argument has been set.
		self._nocat == true
		or self._categories == false
		or (
			self._category2
			and self._category2 ~= self._data.category2Yes
			and self._category2 ~= self._data.category2Negative
		)

		-- Check whether we are on a subpage, and see if categories are
		-- suppressed based on our subpage status.
		or self._subpage == self._data.subpageNo and self.title.isSubpage
		or self._subpage == self._data.subpageOnly and not self.title.isSubpage
end

function CategoryHandler:shouldSkipBlacklistCheck()
	-- Check whether the category suppression arguments indicate we
	-- should skip the blacklist check.
	return self._nocat == false
		or self._categories == true
		or self._category2 == self._data.category2Yes
end

function CategoryHandler:matchesBlacklist()
	if self._usesCurrentTitle then
		return self._data.currentTitleMatchesBlacklist
	else
		mShared = mShared or require('Module:Category handler/shared')
		return mShared.matchesBlacklist(
			self.title.prefixedText,
			mw.loadData('Module:Category handler/blacklist')
		)
	end
end

function CategoryHandler:isSuppressed()
	-- Find if categories are suppressed by either the arguments or by
	-- matching the blacklist.
	return self:isSuppressedByArguments()
		or not self:shouldSkipBlacklistCheck() and self:matchesBlacklist()
end

function CategoryHandler:getNamespaceParameters()
	if self._usesCurrentTitle then
		return self._data.currentTitleNamespaceParameters
	else
		if not mappings then
			mShared = mShared or require('Module:Category handler/shared')
			mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
		end
		return mShared.getNamespaceParameters(
			self.title,
			mappings
		)
	end
end

function CategoryHandler:namespaceParametersExist()
	-- Find whether any namespace parameters have been specified.
	-- We use the order &quot;all&quot; --&gt; namespace params --&gt; &quot;other&quot; as this is what
	-- the old template did.
	if self:parameter('all') then
		return true
	end
	if not mappings then
		mShared = mShared or require('Module:Category handler/shared')
		mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
	end
	for ns, params in pairs(mappings) do
		for i, param in ipairs(params) do
			if self._args[param] then
				return true
			end
		end
	end
	if self:parameter('other') then
		return true
	end
	return false
end

function CategoryHandler:getCategories()
	local params = self:getNamespaceParameters()
	local nsCategory
	for i, param in ipairs(params) do
		local value = self._args[param]
		if value ~= nil then
			nsCategory = value
			break
		end
	end
	if nsCategory ~= nil or self:namespaceParametersExist() then
		-- Namespace parameters exist - advanced usage.
		if nsCategory == nil then
			nsCategory = self:parameter('other')
		end
		local ret = {self:parameter('all')}
		local numParam = tonumber(nsCategory)
		if numParam and numParam &gt;= 1 and math.floor(numParam) == numParam then
			-- nsCategory is an integer
			ret[#ret + 1] = self._args[numParam]
		else
			ret[#ret + 1] = nsCategory
		end
		if #ret &lt; 1 then
			return nil
		else
			return table.concat(ret)
		end
	elseif self._data.defaultNamespaces[self.title.namespace] then
		-- Namespace parameters don't exist, simple usage.
		return self._args[1]
	end
	return nil
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- Used for testing purposes.
	return {
		CategoryHandler = CategoryHandler
	}
end

function p._main(args, data)
	data = data or mw.loadData('Module:Category handler/data')
	local handler = CategoryHandler.new(data, args)
	if handler:isSuppressed() then
		return nil
	end
	return handler:getCategories()
end

function p.main(frame, data)
	data = data or mw.loadData('Module:Category handler/data')
	local args = require('Module:Arguments').getArgs(frame, {
		wrappers = data.wrappers,
		valueFunc = function (k, v)
			v = trimWhitespace(v)
			if type(k) == 'number' then
				if v ~= '' then
					return v
				else
					return nil
				end
			else
				return v
			end
		end
	})
	return p._main(args, data)
end

return p</text>
      <sha1>letwavu3yvlayfzew66uuwixmwebq5b</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/blacklist</title>
    <ns>828</ns>
    <id>43232926</id>
    <revision>
      <id>757409491</id>
      <parentid>757402070</parentid>
      <timestamp>2016-12-30T14:53:53Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>on second thoughts, blacklisting sandboxes for all templates is probably a bad idea</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="764">-- This module contains the blacklist used by [[Module:Category handler]].
-- Pages that match Lua patterns in this list will not be categorised unless
-- categorisation is explicitly requested.

return {
	'^Main Page$', -- don't categorise the main page.

	-- Don't categorise the following pages or their subpages.
	-- &quot;%f[/\0]&quot; matches if the next character is &quot;/&quot; or the end of the string.
	'^Wikipedia:Cascade%-protected items%f[/\0]',
	'^User:UBX%f[/\0]', -- The userbox &quot;template&quot; space.
	'^User talk:UBX%f[/\0]',

	-- Don't categorise subpages of these pages, but allow
	-- categorisation of the base page.
	'^Wikipedia:Template messages/.*$',

	-- Don't categorise archives.
	'/[aA]rchive',
	&quot;^Wikipedia:Administrators' noticeboard/IncidentArchive%d+$&quot;,
}</text>
      <sha1>hwue3i1eua4tsdxlsbcs4f5syudywbe</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/config</title>
    <ns>828</ns>
    <id>42291997</id>
    <revision>
      <id>616764079</id>
      <parentid>616045566</parentid>
      <timestamp>2014-07-13T09:05:36Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/config: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5755">--------------------------------------------------------------------------------
--            [[Module:Category handler]] configuration data                  --
--       Language-specific parameter names and values can be set here.        --
--       For blacklist config, see [[Module:Category handler/blacklist]].     --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                       Start configuration data                             --
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names.                  --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- foo = 'parameter name',                                                    --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'},        --
--------------------------------------------------------------------------------

cfg.parameters = {
	
	-- The nocat and categories parameter suppress
	-- categorisation. They are used with Module:Yesno, and work as follows:
	--
	-- cfg.nocat:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is suppressed
	-- false                                    Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- nil                                      Categorisation is allowed
	--
	-- cfg.categories:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- false                                    Categorisation is suppressed
	-- nil                                      Categorisation is allowed
	nocat = 'nocat',
	categories = 'categories',
	
	-- The parameter name for the legacy &quot;category2&quot; parameter. This skips the
	-- blacklist if set to the cfg.category2Yes value, and suppresses
	-- categorisation if present but equal to anything other than
	-- cfg.category2Yes or cfg.category2Negative.
	category2 = 'category2',
	
	-- cfg.subpage is the parameter name to specify how to behave on subpages.
	subpage = 'subpage',
	
	-- The parameter for data to return in all namespaces.
	all = 'all',
	
	-- The parameter name for data to return if no data is specified for the
	-- namespace that is detected.
	other = 'other',
	
	-- The parameter name used to specify a page other than the current page;
	-- used for testing and demonstration.
	demopage = 'page',
}

--------------------------------------------------------------------------------
--                              Parameter values                              --
-- These are set values that can be used with certain parameters. Only one    --
-- value can be specified, like this:                                         --
--                                                                            --
-- cfg.foo = 'value name'                                                     --                                               --
--------------------------------------------------------------------------------

-- The following settings are used with the cfg.category2 parameter. Setting
-- cfg.category2 to cfg.category2Yes skips the blacklist, and if cfg.category2
-- is present but equal to anything other than cfg.category2Yes or
-- cfg.category2Negative then it supresses cateogrisation.
cfg.category2Yes = 'yes'
cfg.category2Negative = ''

-- The following settings are used with the cfg.subpage parameter.
-- cfg.subpageNo is the value to specify to not categorise on subpages;
-- cfg.subpageOnly is the value to specify to only categorise on subpages.
cfg.subpageNo = 'no'
cfg.subpageOnly = 'only'

--------------------------------------------------------------------------------
--                           Default namespaces                               --
-- This is a table of namespaces to categorise by default. The keys are the   --
-- namespace numbers.                                                         --
--------------------------------------------------------------------------------

cfg.defaultNamespaces = {
	[  0] = true, -- main
	[  6] = true, -- file
	[ 12] = true, -- help
	[ 14] = true, -- category
	[100] = true, -- portal
	[108] = true, -- book
}

--------------------------------------------------------------------------------
--                                Wrappers                                    --
-- This is a wrapper template or a list of wrapper templates to be passed to  --
-- [[Module:Arguments]].                                                      --
--------------------------------------------------------------------------------

cfg.wrappers = 'Template:Category handler'

--------------------------------------------------------------------------------
--                           End configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>6ga9hbq2pdwalsvx68i53dmbr421rq5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/data</title>
    <ns>828</ns>
    <id>43233647</id>
    <revision>
      <id>616764105</id>
      <parentid>616020360</parentid>
      <timestamp>2014-07-13T09:05:55Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/data: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="631">-- This module assembles data to be passed to [[Module:Category handler]] using
-- mw.loadData. This includes the configuration data and whether the current
-- page matches the title blacklist.

local data = require('Module:Category handler/config')
local mShared = require('Module:Category handler/shared')
local blacklist = require('Module:Category handler/blacklist')
local title = mw.title.getCurrentTitle()

data.currentTitleMatchesBlacklist = mShared.matchesBlacklist(
	title.prefixedText,
	blacklist
)

data.currentTitleNamespaceParameters = mShared.getNamespaceParameters(
	title,
	mShared.getParamMappings()
)

return data</text>
      <sha1>k26mwixuaeijisfddb0sxkg82iux8v4</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/shared</title>
    <ns>828</ns>
    <id>43232937</id>
    <revision>
      <id>616764145</id>
      <parentid>616020201</parentid>
      <timestamp>2014-07-13T09:06:15Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/shared: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="888">-- This module contains shared functions used by [[Module:Category handler]]
-- and its submodules.

local p = {}

function p.matchesBlacklist(page, blacklist)
	for i, pattern in ipairs(blacklist) do
		local match = mw.ustring.match(page, pattern)
		if match then
			return true
		end
	end
	return false
end

function p.getParamMappings(useLoadData)
	local dataPage = 'Module:Namespace detect/data'
	if useLoadData then
		return mw.loadData(dataPage).mappings
	else
		return require(dataPage).mappings
	end
end

function p.getNamespaceParameters(titleObj, mappings)
	-- We don't use title.nsText for the namespace name because it adds
	-- underscores.
	local mappingsKey
	if titleObj.isTalkPage then
		mappingsKey = 'talk'
	else
		mappingsKey = mw.site.namespaces[titleObj.namespace].name
	end
	mappingsKey = mw.ustring.lower(mappingsKey)
	return mappings[mappingsKey] or {}
end

return p</text>
      <sha1>omlsnhudxz6juptvtxz7ns97jutbzc5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Check for unknown parameters</title>
    <ns>828</ns>
    <id>42286729</id>
    <revision>
      <id>726655795</id>
      <parentid>726655742</parentid>
      <timestamp>2016-06-23T14:41:43Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2400">-- This module may be used to compare the arguments passed to the parent
-- with a list of arguments, returning a specified result if an argument is
-- not on the list
local p = {}

local function trim(s)
	return s:match('^%s*(.-)%s*$')
end

local function isnotempty(s)
	return s and trim(s) ~= ''
end

function p.check (frame)
	local args = frame.args
	local pargs = frame:getParent().args
	local ignoreblank = isnotempty(frame.args['ignoreblank'])
	local showblankpos = isnotempty(frame.args['showblankpositional'])
	local knownargs = {}
	local unknown = frame.args['unknown'] or 'Found _VALUE_, '
	local preview = frame.args['preview']

	local values = {}
	local res = {}
	local regexps = {}

	-- create the list of known args, regular expressions, and the return string
	for k, v in pairs(args) do
		if type(k) == 'number' then
			v = trim(v)
			knownargs[v] = 1
		elseif k:find('^regexp[1-9][0-9]*$') then
			table.insert(regexps, '^' .. v .. '$')
		end
	end
	if isnotempty(preview) then 
		preview = '&lt;div class=&quot;hatnote&quot; style=&quot;color:red&quot;&gt;&lt;strong&gt;Warning:&lt;/strong&gt; ' .. preview .. ' (this message is shown only in preview).&lt;/div&gt;'
	elseif preview == nil then
		preview = unknown
	end

	-- loop over the parent args, and make sure they are on the list
	for k, v in pairs(pargs) do
		if type(k) == 'string' and knownargs[k] == nil then
			local knownflag = false
			for i, regexp in ipairs(regexps) do
				if mw.ustring.match(k, regexp) then
					knownflag = true
					break
				end
			end
			if not knownflag and ( not ignoreblank or isnotempty(v) )  then
				k = mw.ustring.gsub(k, '[^%w\-_ ]', '?')
				table.insert(values, k)
			end
		elseif type(k) == 'number' and 
			knownargs[tostring(k)] == nil and
			( showblankpos or isnotempty(v) )
		then
			local vlen = mw.ustring.len(v)
			v = mw.ustring.sub(v, 1, (vlen &lt; 25) and vlen or 25) 
			v = mw.ustring.gsub(v, '[^%w\-_ ]', '?')
			table.insert(values, k .. ' = ' .. v .. ((vlen &gt;= 25) and ' ...' or ''))
		end
	end

	-- add resuls to the output tables
	if #values &gt; 0 then
		if frame:preprocess( &quot;{{REVISIONID}}&quot; ) == &quot;&quot; then
			unknown = preview
		end
		for k, v in pairs(values) do
			if v == '' then
			-- Fix odd bug for | = which gets stripped to the empty string and
			-- breaks category links
			v = ' '
			end
			local r =  unknown:gsub('_VALUE_', v)
			table.insert(res, r)
		end
	end

	return table.concat(res)
end

return p</text>
      <sha1>hrayw1t1r2ij1wg65qi0jh0x6y31ba4</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Check isxn</title>
    <ns>828</ns>
    <id>47420247</id>
    <revision>
      <id>783139241</id>
      <parentid>712698918</parentid>
      <timestamp>2017-05-31T10:38:54Z</timestamp>
      <contributor>
        <username>The Anome</username>
        <id>76</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:Check isxn]]&quot;: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5972">-- This template is a copy of the ISXN validation code from [[Module:Citation/CS1]]
-- which allows for validating ISBN, ISMN, and ISSN without invoking a citation template

local p = {}

--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------

ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit. ISBN-13 is checked in check_isbn().
If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length and stripped of dashes,
spaces and other non-isxn characters.

]]

local function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of byte values '0'  0x30 .. '9'   0x39, 'X'  0x58
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( &quot;X&quot; ) then		-- if checkdigit is X (compares the byte value of 'X' which is 0x58)
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N  _ 1 3 &gt;----------------------------------------------

ISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.
If the number is valid, the result will be 0. Before calling this function, isbn-13/ismn must be checked for length
and stripped of dashes, spaces and other non-isxn-13 characters.

]]

local function is_valid_isxn_13 (isxn_str)
	local temp=0;
	
	isxn_str = { isxn_str:byte(1, 13) };										-- make a table of byte values '0'  0x30 .. '9'   0x39
	for i, v in ipairs( isxn_str ) do
		temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );				-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit
	end
	return temp % 10 == 0;														-- sum modulo 10 is zero when isbn-13/ismn is correct
end

--[[--------------------------&lt; C H E C K _ I S B N &gt;------------------------------------------------------------

Determines whether an ISBN string is valid

]]

local function check_isbn( isbn_str, error_string )
	if nil ~= isbn_str:match(&quot;[^%s-0-9X]&quot;) then -- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
		return error_string;
	end
	isbn_str = isbn_str:gsub( &quot;-&quot;, &quot;&quot; ):gsub( &quot; &quot;, &quot;&quot; );	-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return error_string;
	end

	if len == 10 then
		if isbn_str:match( &quot;^%d*X?$&quot; ) == nil then 
			return error_string; 
		end
		return is_valid_isxn(isbn_str, 10) and '' or error_string;
	else
		local temp = 0;
		if isbn_str:match( &quot;^97[89]%d*$&quot; ) == nil then -- isbn13 begins with 978 or 979; ismn begins with 979
			return error_string; 
		end
		return is_valid_isxn_13 (isbn_str) and '' or error_string;
	end
end

--[[--------------------------&lt; C H E C K _ I S M N &gt;------------------------------------------------------------

Determines whether an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the
same check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf
section 2, pages 912.

]]

local function check_ismn (id, error_string)
	local text;
	local valid_ismn = true;

	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );													-- strip spaces, hyphens, and endashes from the ismn

	if 13 ~= id:len() or id:match( &quot;^9790%d*$&quot; ) == nil then					-- ismn must be 13 digits and begin 9790
		valid_ismn = false;
	else
		valid_ismn=is_valid_isxn_13 (id);										-- validate ismn
	end

	return valid_ismn and '' or error_string
end

--[[--------------------------&lt; I S S N &gt;----------------------------------------------------------------------

Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but has separated the two groups of four
digits with a space.  When that condition occurred, the resulting link looked like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length and makes sure that the checkdigit agrees
with the calculated value.  Incorrect length (8 digits), characters other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn
error message.

]]

local function check_issn(id, error_string)
	local issn_copy = id;		-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local text;
	local valid_issn = true;

	if not id:match ('^%d%d%d%d%-%d%d%d[%dX]$') then
		return error_string;
	end
	
	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );									-- strip spaces, hyphens, and endashes from the issn

	if 8 ~= id:len() or nil == id:match( &quot;^%d*X?$&quot; ) then		-- validate the issn: 8 digits long, containing only 0-9 or X in the last position
		valid_issn=false;										-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);						-- validate issn
	end

	return valid_issn and '' or error_string
end


------------------------------&lt; E N T R Y   P O I N T S &gt;--------------------------------------------------====

function p.check_isbn(frame)
	return check_isbn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

function p.check_ismn(frame)
	return check_ismn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

function p.check_issn(frame)
	return check_issn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

return p</text>
      <sha1>m39a8k5gmtbg6x3k2f7rizj3jk5on20</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1</title>
    <ns>828</ns>
    <id>38573037</id>
    <revision>
      <id>782677680</id>
      <parentid>777958692</parentid>
      <timestamp>2017-05-28T13:34:26Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>interim fix to kern_quotes(); see [[Help_talk:Citation_Style_1#single_quote_for_an_ASCII_quote|discussion]];</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="167324">
local cs1 ={};

--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local dates, year_date_check, reformat_dates, date_hyphen_to_dash				-- functions in Module:Citation/CS1/Date_validation

local is_set, in_array, substitute, error_comment, set_error, select_one,		-- functions in Module:Citation/CS1/Utilities
	add_maint_cat, wrap_style, safe_for_italics, remove_wiki_link;

local z ={};																	-- tables in Module:Citation/CS1/Utilities

local extract_ids, extract_id_access_levels, build_id_list, is_embargoed;		-- functions in Module:Citation/CS1/Identifiers

local make_coins_title, get_coins_pages, COinS;									-- functions in Module:Citation/CS1/COinS

local cfg = {};																	-- table of configuration tables that are defined in Module:Citation/CS1/Configuration
local whitelist = {};															-- table of tables listing valid template parameter names; defined in Module:Citation/CS1/Whitelist


--[[--------------------------&lt; P A G E   S C O P E   V A R I A B L E S &gt;--------------------------------------

delare variables here that have page-wide scope that are not brought in from other modules; thatare created here
and used here

]]

local added_deprecated_cat;														-- boolean flag so that the category is added only once
local added_prop_cats = {};														-- list of property categories that have been added to z.properties_cats
local added_vanc_errs;															-- boolean flag so we only emit one Vancouver error / category

local Frame;																	-- holds the module's frame table


--[[--------------------------&lt; F I R S T _ S E T &gt;------------------------------------------------------------

Locates and returns the first set value in a table of values where the order established in the table,
left-to-right (or top-to-bottom), is the order in which the values are evaluated.  Returns nil if none are set.

This version replaces the original 'for _, val in pairs do' and a similar version that used ipairs.  With the pairs
version the order of evaluation could not be guaranteed.  With the ipairs version, a nil value would terminate
the for-loop before it reached the actual end of the list.

]]

local function first_set (list, count)
	local i = 1;
	while i &lt;= count do															-- loop through all items in list
		if is_set( list[i] ) then
			return list[i];														-- return the first set list member
		end
		i = i + 1;																-- point to next
	end
end

--[[--------------------------&lt; A D D _ P R O P _ C A T &gt;--------------------------------------------------------

Adds a category to z.properties_cats using names from the configuration file with additional text if any.

added_prop_cats is a table declared in page scope variables above

]]

local function add_prop_cat (key, arguments)
	if not added_prop_cats [key] then
		added_prop_cats [key] = true;											-- note that we've added this category
		table.insert( z.properties_cats, substitute (cfg.prop_cats [key], arguments));		-- make name then add to table
	end
end

--[[--------------------------&lt; A D D _ V A N C _ E R R O R &gt;----------------------------------------------------

Adds a single Vancouver system error message to the template's output regardless of how many error actually exist.
To prevent duplication, added_vanc_errs is nil until an error message is emitted.

added_vanc_errs is a boolean declared in page scope variables above

]]

local function add_vanc_error (source)
	if not added_vanc_errs then
		added_vanc_errs = true;													-- note that we've added this category
		table.insert( z.message_tail, { set_error( 'vancouver', {source}, true ) } );
	end
end


--[[--------------------------&lt; I S _ S C H E M E &gt;------------------------------------------------------------

does this thing that purports to be a uri scheme seem to be a valid scheme?  The scheme is checked to see if it
is in agreement with http://tools.ietf.org/html/std66#section-3.1 which says:
	Scheme names consist of a sequence of characters beginning with a
   letter and followed by any combination of letters, digits, plus
   (&quot;+&quot;), period (&quot;.&quot;), or hyphen (&quot;-&quot;).

returns true if it does, else false

]]

local function is_scheme (scheme)
	return scheme and scheme:match ('^%a[%a%d%+%.%-]*:');						-- true if scheme is set and matches the pattern
end


--[=[-------------------------&lt; I S _ D O M A I N _ N A M E &gt;--------------------------------------------------

Does this thing that purports to be a domain name seem to be a valid domain name?

Syntax defined here: http://tools.ietf.org/html/rfc1034#section-3.5
BNF defined here: https://tools.ietf.org/html/rfc4234
Single character names are generally reserved; see https://tools.ietf.org/html/draft-ietf-dnsind-iana-dns-01#page-15;
	see also [[Single-letter second-level domain]]
list of tlds: https://www.iana.org/domains/root/db

rfc952 (modified by rfc 1123) requires the first and last character of a hostname to be a letter or a digit.  Between
the first and last characters the name may use letters, digits, and the hyphen.

Also allowed are IPv4 addresses. IPv6 not supported

domain is expected to be stripped of any path so that the last character in the last character of the tld.  tld
is two or more alpha characters.  Any preceding '//' (from splitting a url with a scheme) will be stripped
here.  Perhaps not necessary but retained incase it is necessary for IPv4 dot decimal.

There are several tests:
	the first character of the whole domain name including subdomains must be a letter or a digit
	internationalized domain name (ascii characters with .xn-- ASCII Compatible Encoding (ACE) prefix xn-- in the tld) see https://tools.ietf.org/html/rfc3490
	single-letter/digit second-level domains in the .org TLD
	q, x, and z SL domains in the .com TLD
	i and q SL domains in the .net TLD
	single-letter SL domains in the ccTLDs (where the ccTLD is two letters)
	two-character SL domains in gTLDs (where the gTLD is two or more letters)
	three-plus-character SL domains in gTLDs (where the gTLD is two or more letters)
	IPv4 dot-decimal address format; TLD not allowed

returns true if domain appears to be a proper name and tld or IPv4 address, else false

]=]

local function is_domain_name (domain)
	if not domain then
		return false;															-- if not set, abandon
	end
	
	domain = domain:gsub ('^//', '');											-- strip '//' from domain name if present; done here so we only have to do it once
	
	if not domain:match ('^[%a%d]') then										-- first character must be letter or digit
		return false;
	end
																				-- Do most common case first
	if domain:match ('%f[%a%d][%a%d][%a%d%-]+[%a%d]%.%a%a+$') then				-- three or more character hostname.hostname or hostname.tld
		return true;
	elseif domain:match ('%f[%a%d][%a%d][%a%d%-]+[%a%d]%.xn%-%-[%a%d]+$') then	-- internationalized domain name with ACE prefix
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.org$') then							-- one character .org hostname
		return true;
	elseif domain:match ('%f[%a][qxz]%.com$') then								-- assigned one character .com hostname (x.com times out 2015-12-10)
		return true;
	elseif domain:match ('%f[%a][iq]%.net$') then								-- assigned one character .net hostname (q.net registered but not active 2015-12-10)
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.%a%a$') then							-- one character hostname and cctld (2 chars)
		return true;
	elseif domain:match ('%f[%a%d][%a%d][%a%d]%.%a%a+$') then					-- two character hostname and tld
		return true;
	elseif domain:match ('^%d%d?%d?%.%d%d?%d?%.%d%d?%d?%.%d%d?%d?') then		-- IPv4 address
		return true;
	else
		return false;
	end
end


--[[--------------------------&lt; I S _ U R L &gt;------------------------------------------------------------------

returns true if the scheme and domain parts of a url appear to be a valid url; else false.

This function is the last step in the validation process.  This function is separate because there are cases that
are not covered by split_url(), for example is_parameter_ext_wikilink() which is looking for bracketted external
wikilinks.

]]

local function is_url (scheme, domain)
	if is_set (scheme) then														-- if scheme is set check it and domain
		return is_scheme (scheme) and is_domain_name (domain);
	else
		return is_domain_name (domain);											-- scheme not set when url is protocol relative
	end
end


--[[--------------------------&lt; S P L I T _ U R L &gt;------------------------------------------------------------

Split a url into a scheme, authority indicator, and domain.

First remove Fully Qualified Domain Name terminator (a dot following tld) (if any) and any path(/), query(?) or fragment(#).

If protocol relative url, return nil scheme and domain else return nil for both scheme and domain.

When not protocol relative, get scheme, authority indicator, and domain.  If there is an authority indicator (one
or more '/' characters immediately following the scheme's colon), make sure that there are only 2.

Strip off any port and path;

]]

local function split_url (url_str)
	local scheme, authority, domain;
	
	url_str = url_str:gsub ('([%a%d])%.?[/%?#].*$', '%1');						-- strip FQDN terminator and path(/), query(?), fragment (#) (the capture prevents false replacement of '//')

	if url_str:match ('^//%S*') then											-- if there is what appears to be a protocol relative url
		domain = url_str:match ('^//(%S*)')
	elseif url_str:match ('%S-:/*%S+') then										-- if there is what appears to be a scheme, optional authority indicator, and domain name
		scheme, authority, domain = url_str:match ('(%S-:)(/*)(%S+)');			-- extract the scheme, authority indicator, and domain portions
		authority = authority:gsub ('//', '', 1);								-- replace place 1 pair of '/' with nothing;
		if is_set(authority) then												-- if anything left (1 or 3+ '/' where authority should be) then
			return scheme;														-- return scheme only making domain nil which will cause an error message
		end
		domain = domain:gsub ('(%a):%d+', '%1');								-- strip port number if present
	end
	
	return scheme, domain;
end


--[[--------------------------&lt; L I N K _ P A R A M _ O K &gt;---------------------------------------------------

checks the content of |title-link=, |series-link=, |author-link= etc for properly formatted content: no wikilinks, no urls

Link parameters are to hold the title of a wikipedia article so none of the WP:TITLESPECIALCHARACTERS are allowed:
	# &lt; &gt; [ ] | { } _
except the underscore which is used as a space in wiki urls and # which is used for section links

returns false when the value contains any of these characters.

When there are no illegal characters, this function returns TRUE if value DOES NOT appear to be a valid url (the
|&lt;param&gt;-link= parameter is ok); else false when value appears to be a valid url (the |&lt;param&gt;-link= parameter is NOT ok).

]]

local function link_param_ok (value)
	local scheme, domain;
	if value:find ('[&lt;&gt;%[%]|{}]') then											-- if any prohibited characters
		return false;
	end

	scheme, domain = split_url (value);											-- get scheme or nil and domain or nil from url; 
	return not is_url (scheme, domain);											-- return true if value DOES NOT appear to be a valid url
end

--[[--------------------------&lt; L I N K _ T I T L E _ O K &gt;---------------------------------------------------

Use link_param_ok() to validate |&lt;param&gt;-link= value and its matching |&lt;title&gt;= value.

|&lt;title&gt;= may be wikilinked but not when |&lt;param&gt;-link= has a value.  This function emits an error message when
that condition exists

]]

local function link_title_ok (link, lorig, title, torig)
local orig;

	if is_set (link) then 														-- don't bother if &lt;param&gt;-link doesn't have a value
		if not link_param_ok (link) then										-- check |&lt;param&gt;-link= markup
			orig = lorig;														-- identify the failing link parameter
		elseif title:find ('%[%[') then											-- check |title= for wikilink markup
			orig = torig;														-- identify the failing |title= parameter
		end
	end

	if is_set (orig) then
		table.insert( z.message_tail, { set_error( 'bad_paramlink', orig)});	-- url or wikilink in |title= with |title-link=;
	end
end


--[[--------------------------&lt; C H E C K _ U R L &gt;------------------------------------------------------------

Determines whether a URL string appears to be valid.

First we test for space characters.  If any are found, return false.  Then split the url into scheme and domain
portions, or for protocol relative (//example.com) urls, just the domain.  Use is_url() to validate the two
portions of the url.  If both are valid, or for protocol relative if domain is valid, return true, else false.

Because it is different from a standard url, and because this module used external_link() to make external links
that work for standard and news: links, we validate newsgroup names here.  The specification for a newsgroup name
is at https://tools.ietf.org/html/rfc5536#section-3.1.4

]]

local function check_url( url_str )
	if nil == url_str:match (&quot;^%S+$&quot;) then										-- if there are any spaces in |url=value it can't be a proper url
		return false;
	end
	local scheme, domain;

	scheme, domain = split_url (url_str);										-- get scheme or nil and domain or nil from url;
	
	if 'news:' == scheme then													-- special case for newsgroups
		return domain:match('^[%a%d%+%-_]+%.[%a%d%+%-_%.]*[%a%d%+%-_]$');
	end
	
	return is_url (scheme, domain);												-- return true if value appears to be a valid url
end


--[=[-------------------------&lt; I S _ P A R A M E T E R _ E X T _ W I K I L I N K &gt;----------------------------

Return true if a parameter value has a string that begins and ends with square brackets [ and ] and the first
non-space characters following the opening bracket appear to be a url.  The test will also find external wikilinks
that use protocol relative urls. Also finds bare urls.

The frontier pattern prevents a match on interwiki links which are similar to scheme:path urls.  The tests that
find bracketed urls are required because the parameters that call this test (currently |title=, |chapter=, |work=,
and |publisher=) may have wikilinks and there are articles or redirects like '//Hus' so, while uncommon, |title=[[//Hus]]
is possible as might be [[en://Hus]].

]=]

local function is_parameter_ext_wikilink (value)
local scheme, domain;

	if value:match ('%f[%[]%[%a%S*:%S+.*%]') then								-- if ext wikilink with scheme and domain: [xxxx://yyyyy.zzz]
		scheme, domain = split_url (value:match ('%f[%[]%[(%a%S*:%S+).*%]'));
	elseif value:match ('%f[%[]%[//%S+.*%]') then								-- if protocol relative ext wikilink: [//yyyyy.zzz]
		scheme, domain = split_url (value:match ('%f[%[]%[(//%S+).*%]'));
	elseif value:match ('%a%S*:%S+') then										-- if bare url with scheme; may have leading or trailing plain text
		scheme, domain = split_url (value:match ('(%a%S*:%S+)'));
	elseif value:match ('//%S+') then											-- if protocol relative bare url: //yyyyy.zzz; may have leading or trailing plain text
		scheme, domain = split_url (value:match ('(//%S+)'));					-- what is left should be the domain
	else
		return false;															-- didn't find anything that is obviously a url
	end

	return is_url (scheme, domain);												-- return true if value appears to be a valid url
end


--[[-------------------------&lt; C H E C K _ F O R _ U R L &gt;-----------------------------------------------------

loop through a list of parameters and their values.  Look at the value and if it has an external link, emit an error message.

]]

local function check_for_url (parameter_list)
local error_message = '';
	for k, v in pairs (parameter_list) do										-- for each parameter in the list
		if is_parameter_ext_wikilink (v) then									-- look at the value; if there is a url add an error message
			if is_set(error_message) then										-- once we've added the first portion of the error message ...
				error_message=error_message .. &quot;, &quot;;							-- ... add a comma space separator
			end
			error_message=error_message .. &quot;&amp;#124;&quot; .. k .. &quot;=&quot;;				-- add the failed parameter
		end
	end
	if is_set (error_message) then												-- done looping, if there is an error message, display it
		table.insert( z.message_tail, { set_error( 'param_has_ext_link', {error_message}, true ) } );
	end
end


--[[--------------------------&lt; S A F E _ F O R _ U R L &gt;------------------------------------------------------

Escape sequences for content that will be used for URL descriptions

]]

local function safe_for_url( str )
	if str:match( &quot;%[%[.-%]%]&quot; ) ~= nil then 
		table.insert( z.message_tail, { set_error( 'wikilink_in_url', {}, true ) } );
	end
	
	return str:gsub( '[%[%]\n]', {	
		['['] = '&amp;#91;',
		[']'] = '&amp;#93;',
		['\n'] = ' ' } );
end

--[[--------------------------&lt; E X T E R N A L _ L I N K &gt;----------------------------------------------------

Format an external link with error checking

]]

local function external_link( URL, label, source, access)
	local error_str = &quot;&quot;;
	local domain;
	local path;
	local base_url;
	
	if not is_set( label ) then
		label = URL;
		if is_set( source ) then
			error_str = set_error( 'bare_url_missing_title', { wrap_style ('parameter', source) }, false, &quot; &quot; );
		else
			error( cfg.messages[&quot;bare_url_no_origin&quot;] );
		end			
	end
	if not check_url( URL ) then
		error_str = set_error( 'bad_url', {wrap_style ('parameter', source)}, false, &quot; &quot; ) .. error_str;
	end
	
	domain, path = URL:match ('^([/%.%-%+:%a%d]+)([/%?#].*)$');					-- split the url into scheme plus domain and path
	if path then																-- if there is a path portion
		path = path:gsub ('[%[%]]', {['[']='%5b',[']']='%5d'});					-- replace '[' and ']' with their percent encoded values
		URL=domain..path;														-- and reassemble
	end
	
	if is_set (access) then														-- access level (subscription, registration, limited)
		local label_head = '';
		local label_tail;
		local markup = '';														-- can't start a span inside italic markup and end it outside the italic markup

		label = safe_for_url (label);											-- replace square brackets and newlines (is this necessary? already done above?)
		if label:match (&quot;(.*)%s+(.+)('''?)$&quot;) then								-- for italicized titles (cite book, etc)
			label_head, label_tail, markup = label:match (&quot;(.*)%s+(.+)('''?)$&quot;);	-- split the label at the right-most space; separate the markup
		elseif label:match (&quot;(.*)%s+(.+)$&quot;) then								-- for upright titles (journal, news, magazine, etc)
			label_head, label_tail = label:match (&quot;(.*)%s+(.+)$&quot;);				-- split the label at the right-most space; no markup 
		elseif label:match (&quot;(.+)('''?)$&quot;) then									-- single word label with markup
			label_tail, markup = label:match (&quot;(.+)('''?)$&quot;);					-- save label text as label tail; separate the markup
		else
			label_tail = label;
		end

		base_url = table.concat (
			{
			'&lt;span class=&quot;plainlinks&quot;&gt;[',										-- opening css
			URL,																-- the url
			' ',																-- the required space
			label_head,															-- all but the last word of the label
			' &lt;span class=&quot;nowrap&quot;&gt;',											-- nowrap css for the last word and the signal icon
			label_tail,															-- last (or only) word of the label inside the span
			'&lt;span style=&quot;padding-left:0.15em&quot;&gt;',								-- signal spacing css
			cfg.presentation[access],											-- the appropriate icon
			'&lt;/span&gt;&lt;/span&gt;',													-- close signal spacing and nowrap spans
			markup,																-- insert italic markup if any
			']&lt;/span&gt;'															-- close the plain links span
			});
	else
		base_url = table.concat({ &quot;[&quot;, URL, &quot; &quot;, safe_for_url( label ), &quot;]&quot; });	-- no signal markup
	end
	
	return table.concat({ base_url, error_str });
end


--[[--------------------------&lt; D E P R E C A T E D _ P A R A M E T E R &gt;--------------------------------------

Categorize and emit an error message when the citation contains one or more deprecated parameters.  The function includes the
offending parameter name to the error message.  Only one error message is emitted regardless of the number of deprecated
parameters in the citation.

added_deprecated_cat is a boolean declared in page scope variables above

]]

local function deprecated_parameter(name)
	if not added_deprecated_cat then
		added_deprecated_cat = true;											-- note that we've added this category
		table.insert( z.message_tail, { set_error( 'deprecated_params', {name}, true ) } );		-- add error message
	end
end

--[[--------------------------&lt; K E R N _ Q U O T E S &gt;--------------------------------------------------------

Apply kerning to open the space between the quote mark provided by the Module and a leading or trailing quote mark contained in a |title= or |chapter= parameter's value.
This function will positive kern either single or double quotes:
	&quot;'Unkerned title with leading and trailing single quote marks'&quot;
	&quot; 'Kerned title with leading and trailing single quote marks' &quot; (in real life the kerning isn't as wide as this example)
Double single quotes (italic or bold wikimarkup) are not kerned.

Replaces unicode quotemarks with typewriter quote marks regardless of the need for kerning.

Call this function for chapter titles, for website titles, etc; not for book titles.

]]

local function kern_quotes (str)
	local cap='';
	local cap2='';
																				-- TODO: move this elswhere so that all title-holding elements get these quote marks replaced?
--	str= mw.ustring.gsub (str, '[]', '\&quot;');									-- replace  (U+201C &amp; U+201D) with &quot; (typewriter double quote mark)
--	str= mw.ustring.gsub (str, '[]', '\'');									-- replace  (U+2018 &amp; U+2019) with ' (typewriter single quote mark)
	
	cap, cap2 = str:match (&quot;^([\&quot;\'])([^\'].+)&quot;);								-- match leading double or single quote but not double single quotes
	if is_set (cap) then
		str = substitute (cfg.presentation['kern-left'], {cap, cap2});
	end

	cap, cap2 = str:match (&quot;^(.+[^\'])([\&quot;\'])$&quot;)
	if is_set (cap) then
		str = substitute (cfg.presentation['kern-right'], {cap, cap2});
	end
	return str;
end

--[[--------------------------&lt; F O R M A T _ S C R I P T _ V A L U E &gt;----------------------------------------

|script-title= holds title parameters that are not written in Latin based scripts: Chinese, Japanese, Arabic, Hebrew, etc. These scripts should
not be italicized and may be written right-to-left.  The value supplied by |script-title= is concatenated onto Title after Title has been wrapped
in italic markup.

Regardless of language, all values provided by |script-title= are wrapped in &lt;bdi&gt;...&lt;/bdi&gt; tags to isolate rtl languages from the English left to right.

|script-title= provides a unique feature.  The value in |script-title= may be prefixed with a two-character ISO639-1 language code and a colon:
	|script-title=ja:*** *** (where * represents a Japanese character)
Spaces between the two-character code and the colon and the colon and the first script character are allowed:
	|script-title=ja : *** ***
	|script-title=ja: *** ***
	|script-title=ja :*** ***
Spaces preceding the prefix are allowed: |script-title = ja:*** ***

The prefix is checked for validity.  If it is a valid ISO639-1 language code, the lang attribute (lang=&quot;ja&quot;) is added to the &lt;bdi&gt; tag so that browsers can
know the language the tag contains.  This may help the browser render the script more correctly.  If the prefix is invalid, the lang attribute
is not added.  At this time there is no error message for this condition.

Supports |script-title= and |script-chapter=

TODO: error messages when prefix is invalid ISO639-1 code; when script_value has prefix but no script;
]]

local function format_script_value (script_value)
	local lang='';																-- initialize to empty string
	local name;
	if script_value:match('^%l%l%s*:') then										-- if first 3 non-space characters are script language prefix
		lang = script_value:match('^(%l%l)%s*:%s*%S.*');						-- get the language prefix or nil if there is no script
		if not is_set (lang) then
			return '';															-- script_value was just the prefix so return empty string
		end
																				-- if we get this far we have prefix and script
		name = mw.language.fetchLanguageName( lang, &quot;en&quot; );						-- get language name so that we can use it to categorize
		if is_set (name) then													-- is prefix a proper ISO 639-1 language code?
			script_value = script_value:gsub ('^%l%l%s*:%s*', '');				-- strip prefix from script
																				-- is prefix one of these language codes?
			if in_array (lang, cfg.script_lang_codes) then
				add_prop_cat ('script_with_name', {name, lang})
			else
				add_prop_cat ('script')
			end
			lang = ' lang=&quot;' .. lang .. '&quot; ';									-- convert prefix into a lang attribute
		else
			lang = '';															-- invalid so set lang to empty string
		end
	end
	script_value = substitute (cfg.presentation['bdi'], {lang, script_value});	-- isolate in case script is rtl

	return script_value;
end

--[[--------------------------&lt; S C R I P T _ C O N C A T E N A T E &gt;------------------------------------------

Initially for |title= and |script-title=, this function concatenates those two parameter values after the script value has been 
wrapped in &lt;bdi&gt; tags.
]]

local function script_concatenate (title, script)
	if is_set (script) then
		script = format_script_value (script);									-- &lt;bdi&gt; tags, lang atribute, categorization, etc; returns empty string on error
		if is_set (script) then
			title = title .. ' ' .. script;										-- concatenate title and script title
		end
	end
	return title;
end


--[[--------------------------&lt; W R A P _ M S G &gt;--------------------------------------------------------------

Applies additional message text to various parameter values. Supplied string is wrapped using a message_list
configuration taking one argument.  Supports lower case text for {{citation}} templates.  Additional text taken
from citation_config.messages - the reason this function is similar to but separate from wrap_style().

]]

local function wrap_msg (key, str, lower)
	if not is_set( str ) then
		return &quot;&quot;;
	end
	if true == lower then
		local msg;
		msg = cfg.messages[key]:lower();										-- set the message to lower case before 
		return substitute( msg, str );										-- including template text
	else
		return substitute( cfg.messages[key], str );
	end		
end


--[[--------------------------&lt; F O R M A T _ C H A P T E R _ T I T L E &gt;--------------------------------------

Format the four chapter parameters: |script-chapter=, |chapter=, |trans-chapter=, and |chapter-url= into a single Chapter meta-
parameter (chapter_url_source used for error messages).

]]

local function format_chapter_title (scriptchapter, chapter, transchapter, chapterurl, chapter_url_source, no_quotes)
	local chapter_error = '';
	
	if not is_set (chapter) then
		chapter = '';															-- to be safe for concatenation
	else
		if false == no_quotes then
			chapter = kern_quotes (chapter);										-- if necessary, separate chapter title's leading and trailing quote marks from Module provided quote marks
			chapter = wrap_style ('quoted-title', chapter);
		end
	end

	chapter = script_concatenate (chapter, scriptchapter)						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped

	if is_set (transchapter) then
		transchapter = wrap_style ('trans-quoted-title', transchapter);
		if is_set (chapter) then
			chapter = chapter ..  ' ' .. transchapter;
		else																	-- here when transchapter without chapter or script-chapter
			chapter = transchapter;												-- 
			chapter_error = ' ' .. set_error ('trans_missing_title', {'chapter'});
		end
	end

	if is_set (chapterurl) then
		chapter = external_link (chapterurl, chapter, chapter_url_source, nil);		-- adds bare_url_missing_title error if appropriate
	end

	return chapter .. chapter_error;
end

--[[--------------------------&lt; H A S _ I N V I S I B L E _ C H A R S &gt;----------------------------------------

This function searches a parameter's value for nonprintable or invisible characters.  The search stops at the
first match.

This function will detect the visible replacement character when it is part of the wikisource.

Detects but ignores nowiki and math stripmarkers.  Also detects other named stripmarkers (gallery, math, pre, ref)
and identifies them with a slightly different error message.  See also coins_cleanup().

Detects but ignores the character pattern that results from the transclusion of {{'}} templates.

Output of this function is an error message that identifies the character or the Unicode group, or the stripmarker
that was detected along with its position (or, for multi-byte characters, the position of its first byte) in the
parameter value.

]]

local function has_invisible_chars (param, v)
	local position = '';														-- position of invisible char or starting position of stripmarker
	local dummy;																-- end of matching string; not used but required to hold end position when a capture is returned
	local capture;																-- used by stripmarker detection to hold name of the stripmarker
	local i=1;
	local stripmarker, apostrophe;
	
	capture = string.match (v, '[%w%p ]*');										-- Test for values that are simple ASCII text and bypass other tests if true
	if capture == v then														-- if same there are no unicode characters
		return;
	end

	while cfg.invisible_chars[i] do
		local char=cfg.invisible_chars[i][1]									-- the character or group name
		local pattern=cfg.invisible_chars[i][2]									-- the pattern used to find it
		position, dummy, capture = mw.ustring.find (v, pattern)					-- see if the parameter value contains characters that match the pattern
		
		if position then
			if 'nowiki' == capture or 'math' == capture then 					-- nowiki, math stripmarker (not an error condition)
				stripmarker = true;												-- set a flag
			elseif true == stripmarker and 'delete' == char then				-- because stripmakers begin and end with the delete char, assume that we've found one end of a stripmarker
				position = nil;													-- unset
			else
				local err_msg;
				if capture then
					err_msg = capture .. ' ' .. char;
				else
					err_msg = char .. ' ' .. 'character';
				end

				table.insert( z.message_tail, { set_error( 'invisible_char', {err_msg, wrap_style ('parameter', param), position}, true ) } );	-- add error message
				return;															-- and done with this parameter
			end
		end
		i=i+1;																	-- bump our index
	end
end


--[[--------------------------&lt; A R G U M E N T _ W R A P P E R &gt;----------------------------------------------

Argument wrapper.  This function provides support for argument mapping defined in the configuration file so that
multiple names can be transparently aliased to single internal variable.

]]

local function argument_wrapper( args )
	local origin = {};
	
	return setmetatable({
		ORIGIN = function( self, k )
			local dummy = self[k]; --force the variable to be loaded.
			return origin[k];
		end
	},
	{
		__index = function ( tbl, k )
			if origin[k] ~= nil then
				return nil;
			end
			
			local args, list, v = args, cfg.aliases[k];
			
			if type( list ) == 'table' then
				v, origin[k] = select_one( args, list, 'redundant_parameters' );
				if origin[k] == nil then
					origin[k] = ''; -- Empty string, not nil
				end
			elseif list ~= nil then
				v, origin[k] = args[list], list;
			else
				-- maybe let through instead of raising an error?
				-- v, origin[k] = args[k], k;
				error( cfg.messages['unknown_argument_map'] );
			end
			
			-- Empty strings, not nil;
			if v == nil then
				v = cfg.defaults[k] or '';
				origin[k] = '';
			end
			
			tbl = rawset( tbl, k, v );
			return v;
		end,
	});
end

--[[--------------------------&lt; V A L I D A T E &gt;--------------------------------------------------------------

Looks for a parameter's name in one of several whitelists.

Parameters in the whitelist can have three values:
	true - active, supported parameters
	false - deprecated, supported parameters
	nil - unsupported parameters
	
]]

--local function validate( name )
local function validate( name, cite_class )
	local name = tostring( name );
	local state;
	
	if in_array (cite_class, {'arxiv', 'biorxiv', 'citeseerx'}) then				-- limited parameter sets allowed for these templates
		state = whitelist.limited_basic_arguments[ name ];
		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end

		if 'arxiv' == cite_class then											-- basic parameters unique to these templates
			state = whitelist.arxiv_basic_arguments[name];
		end
		if 'biorxiv' == cite_class then
			state = whitelist.biorxiv_basic_arguments[name];
		end
		if 'citeseerx' == cite_class then
			state = whitelist.citeseerx_basic_arguments[name];
		end

		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end
																				-- limited enumerated parameters list
		name = name:gsub( &quot;%d+&quot;, &quot;#&quot; );											-- replace digit(s) with # (last25 becomes last#)
		state = whitelist.limited_numbered_arguments[ name ];
		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end

		return false;															-- not supported because not found or name is set to nil
	end																			-- end limited parameter-set templates
		
	state = whitelist.basic_arguments[ name ];									-- all other templates; all normal parameters allowed
											
	if true == state then return true; end										-- valid actively supported parameter
	if false == state then
		deprecated_parameter (name);											-- parameter is deprecated but still supported
		return true;
	end
																				-- all enumerated parameters allowed
	name = name:gsub( &quot;%d+&quot;, &quot;#&quot; );												-- replace digit(s) with # (last25 becomes last#
	state = whitelist.numbered_arguments[ name ];

	if true == state then return true; end										-- valid actively supported parameter
	if false == state then
		deprecated_parameter (name);											-- parameter is deprecated but still supported
		return true;
	end
	
	return false;																-- not supported because not found or name is set to nil
end


--[[--------------------------&lt; N O W R A P _ D A T E &gt;--------------------------------------------------------

When date is YYYY-MM-DD format wrap in nowrap span: &lt;span ...&gt;YYYY-MM-DD&lt;/span&gt;.  When date is DD MMMM YYYY or is
MMMM DD, YYYY then wrap in nowrap span: &lt;span ...&gt;DD MMMM&lt;/span&gt; YYYY or &lt;span ...&gt;MMMM DD,&lt;/span&gt; YYYY

DOES NOT yet support MMMM YYYY or any of the date ranges.

]]

local function nowrap_date (date)
	local cap='';
	local cap2='';

	if date:match(&quot;^%d%d%d%d%-%d%d%-%d%d$&quot;) then
		date = substitute (cfg.presentation['nowrap1'], date);
	
	elseif date:match(&quot;^%a+%s*%d%d?,%s+%d%d%d%d$&quot;) or date:match (&quot;^%d%d?%s*%a+%s+%d%d%d%d$&quot;) then
		cap, cap2 = string.match (date, &quot;^(.*)%s+(%d%d%d%d)$&quot;);
		date = substitute (cfg.presentation['nowrap2'], {cap, cap2});
	end
	
	return date;
end

--[[--------------------------&lt; S E T _ T I T L E T Y P E &gt;----------------------------------------------------

This function sets default title types (equivalent to the citation including |type=&lt;default value&gt;) for those templates that have defaults.
Also handles the special case where it is desirable to omit the title type from the rendered citation (|type=none).

]]

local function set_titletype (cite_class, title_type)
	if is_set(title_type) then
		if &quot;none&quot; == title_type then
			title_type = &quot;&quot;;													-- if |type=none then type parameter not displayed
		end
		return title_type;														-- if |type= has been set to any other value use that value
	end

	return cfg.title_types [cite_class] or '';									-- set template's default title type; else empty string for concatenation
end


--[[--------------------------&lt; H Y P H E N _ T O _ D A S H &gt;--------------------------------------------------

Converts a hyphen to a dash

]]

local function hyphen_to_dash( str )
	if not is_set(str) or str:match( &quot;[%[%]{}&lt;&gt;]&quot; ) ~= nil then
		return str;
	end	
	return str:gsub( '-', '' );
end


--[[--------------------------&lt; S A F E _ J O I N &gt;------------------------------------------------------------

Joins a sequence of strings together while checking for duplicate separation characters.

]]

local function safe_join( tbl, duplicate_char )
	--[[
	Note: we use string functions here, rather than ustring functions.
	
	This has considerably faster performance and should work correctly as 
	long as the duplicate_char is strict ASCII.  The strings
	in tbl may be ASCII or UTF8.
	]]
	
	local str = '';																-- the output string
	local comp = '';															-- what does 'comp' mean?
	local end_chr = '';
	local trim;
	for _, value in ipairs( tbl ) do
		if value == nil then value = ''; end
		
		if str == '' then														-- if output string is empty
			str = value;														-- assign value to it (first time through the loop)
		elseif value ~= '' then
			if value:sub(1,1) == '&lt;' then										-- Special case of values enclosed in spans and other markup.
				comp = value:gsub( &quot;%b&lt;&gt;&quot;, &quot;&quot; );								-- remove html markup (&lt;span&gt;string&lt;/span&gt; -&gt; string)
			else
				comp = value;
			end
																				-- typically duplicate_char is sepc
			if comp:sub(1,1) == duplicate_char then								-- is first charactier same as duplicate_char? why test first character?
																				--   Because individual string segments often (always?) begin with terminal punct for th
																				--   preceding segment: 'First element' .. 'sepc next element' .. etc?
				trim = false;
				end_chr = str:sub(-1,-1);										-- get the last character of the output string
				-- str = str .. &quot;&lt;HERE(enchr=&quot; .. end_chr.. &quot;)&quot;					-- debug stuff?
				if end_chr == duplicate_char then								-- if same as separator
					str = str:sub(1,-2);										-- remove it
				elseif end_chr == &quot;'&quot; then										-- if it might be wikimarkup
					if str:sub(-3,-1) == duplicate_char .. &quot;''&quot; then			-- if last three chars of str are sepc'' 
						str = str:sub(1, -4) .. &quot;''&quot;;							-- remove them and add back ''
					elseif str:sub(-5,-1) == duplicate_char .. &quot;]]''&quot; then		-- if last five chars of str are sepc]]'' 
						trim = true;											-- why? why do this and next differently from previous?
					elseif str:sub(-4,-1) == duplicate_char .. &quot;]''&quot; then		-- if last four chars of str are sepc]'' 
						trim = true;											-- same question
					end
				elseif end_chr == &quot;]&quot; then										-- if it might be wikimarkup
					if str:sub(-3,-1) == duplicate_char .. &quot;]]&quot; then			-- if last three chars of str are sepc]] wikilink 
						trim = true;
					elseif str:sub(-2,-1) == duplicate_char .. &quot;]&quot; then			-- if last two chars of str are sepc] external link
						trim = true;
					elseif str:sub(-4,-1) == duplicate_char .. &quot;'']&quot; then		-- normal case when |url=something &amp; |title=Title.
						trim = true;
					end
				elseif end_chr == &quot; &quot; then										-- if last char of output string is a space
					if str:sub(-2,-1) == duplicate_char .. &quot; &quot; then				-- if last two chars of str are &lt;sepc&gt;&lt;space&gt;
						str = str:sub(1,-3);									-- remove them both
					end
				end

				if trim then
					if value ~= comp then 										-- value does not equal comp when value contains html markup
						local dup2 = duplicate_char;
						if dup2:match( &quot;%A&quot; ) then dup2 = &quot;%&quot; .. dup2; end		-- if duplicate_char not a letter then escape it
						
						value = value:gsub( &quot;(%b&lt;&gt;)&quot; .. dup2, &quot;%1&quot;, 1 )			-- remove duplicate_char if it follows html markup
					else
						value = value:sub( 2, -1 );								-- remove duplicate_char when it is first character
					end
				end
			end
			str = str .. value;													--add it to the output string
		end
	end
	return str;
end  


--[[--------------------------&lt; I S _ S U F F I X &gt;------------------------------------------------------------

returns true is suffix is properly formed Jr, Sr, or ordinal in the range 29.  Puncutation not allowed.

]]

local function is_suffix (suffix)
	if in_array (suffix, {'Jr', 'Sr', '2nd', '3rd'}) or suffix:match ('^%dth$') then
		return true;
	end
	return false;
end

--[[--------------------------&lt; I S _ G O O D _ V A N C _ N A M E &gt;--------------------------------------------

For Vancouver Style, author/editor names are supposed to be rendered in Latin (read ASCII) characters.  When a name
uses characters that contain diacritical marks, those characters are to converted to the corresponding Latin character.
When a name is written using a non-Latin alphabet or logogram, that name is to be transliterated into Latin characters.
These things are not currently possible in this module so are left to the editor to do.

This test allows |first= and |last= names to contain any of the letters defined in the four Unicode Latin character sets
	[http://www.unicode.org/charts/PDF/U0000.pdf C0 Controls and Basic Latin] 0041005A, 0061007A
	[http://www.unicode.org/charts/PDF/U0080.pdf C1 Controls and Latin-1 Supplement] 00C000D6, 00D800F6, 00F800FF
	[http://www.unicode.org/charts/PDF/U0100.pdf Latin Extended-A] 0100017F
	[http://www.unicode.org/charts/PDF/U0180.pdf Latin Extended-B] 018001BF, 01C4024F

|lastn= also allowed to contain hyphens, spaces, and apostrophes. (http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35029/)
|firstn= also allowed to contain hyphens, spaces, apostrophes, and periods

This original test:
	if nil == mw.ustring.find (last, &quot;^[A-Za-z----%-%s%']*$&quot;) or nil == mw.ustring.find (first, &quot;^[A-Za-z----%-%s%'%.]+[2-6%a]*$&quot;) then
was written ouside of the code editor and pasted here because the code editor gets confused between character insertion point and cursor position.
The test has been rewritten to use decimal character escape sequence for the individual bytes of the unicode characters so that it is not necessary
to use an external editor to maintain this code.

	\195\128-\195\150  - (U+00C0U+00D6  C0 controls)
	\195\152-\195\182  - (U+00D8-U+00F6  C0 controls)
	\195\184-\198\191  - (U+00F8-U+01BF  C0 controls, Latin extended A &amp; B)
	\199\132-\201\143  - (U+01C4-U+024F  Latin extended B)

]]

local function is_good_vanc_name (last, first)
	local first, suffix = first:match ('(.-),?%s*([%dJS][%drndth]+)%.?$') or first;		-- if first has something that looks like a generational suffix, get it

	if is_set (suffix) then
		if not is_suffix (suffix) then
			add_vanc_error ('suffix');
			return false;														-- not a name with an appropriate suffix
		end
	end
	if nil == mw.ustring.find (last, &quot;^[A-Za-z\195\128-\195\150\195\152-\195\182\195\184-\198\191\199\132-\201\143%-%s%']*$&quot;) or
		nil == mw.ustring.find (first, &quot;^[A-Za-z\195\128-\195\150\195\152-\195\182\195\184-\198\191\199\132-\201\143%-%s%'%.]*$&quot;) then
			add_vanc_error ('non-Latin character');
			return false;														-- not a string of latin characters; Vancouver requires Romanization
	end;
	return true;
end

--[[--------------------------&lt; R E D U C E _ T O _ I N I T I A L S &gt;------------------------------------------

Attempts to convert names to initials in support of |name-list-format=vanc.  

Names in |firstn= may be separated by spaces or hyphens, or for initials, a period. See http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35062/.

Vancouver style requires family rank designations (Jr, II, III, etc) to be rendered as Jr, 2nd, 3rd, etc.  See http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35085/.
This code only accepts and understands generational suffix in the Vancouver format because Roman numerals look like, and can be mistaken for, initials.

This function uses ustring functions because firstname initials may be any of the unicode Latin characters accepted by is_good_vanc_name ().

]]

local function reduce_to_initials(first)
	local name, suffix = mw.ustring.match(first, &quot;^(%u+) ([%dJS][%drndth]+)$&quot;);

	if not name then															-- if not initials and a suffix
		name = mw.ustring.match(first, &quot;^(%u+)$&quot;);								-- is it just intials?
	end

	if name then																-- if first is initials with or without suffix
		if 3 &gt; mw.ustring.len (name) then										-- if one or two initials
			if suffix then														-- if there is a suffix
				if is_suffix (suffix) then										-- is it legitimate?
					return first;												-- one or two initials and a valid suffix so nothing to do
				else
					add_vanc_error ('suffix');									-- one or two initials with invalid suffix so error message
					return first;												-- and return first unmolested
				end
			else
				return first;													-- one or two initials without suffix; nothing to do
			end
		end
	end																			-- if here then name has 3 or more uppercase letters so treat them as a word


	local initials, names = {}, {};												-- tables to hold name parts and initials
	local i = 1;																-- counter for number of initials

	names = mw.text.split (first, '[%s,]+');									-- split into a table of names and possible suffix

	while names[i] do															-- loop through the table
		if 1 &lt; i and names[i]:match ('[%dJS][%drndth]+%.?$') then				-- if not the first name, and looks like a suffix (may have trailing dot)
			names[i] = names[i]:gsub ('%.', '');								-- remove terminal dot if present
			if is_suffix (names[i]) then										-- if a legitimate suffix
				table.insert (initials, ' ' .. names[i]);						-- add a separator space, insert at end of initials table
				break;															-- and done because suffix must fall at the end of a name
			end																	-- no error message if not a suffix; possibly because of Romanization
		end
		if 3 &gt; i then
			table.insert (initials, mw.ustring.sub(names[i],1,1));				-- insert the intial at end of initials table
		end
		i = i+1;																-- bump the counter
	end
			
	return table.concat(initials)												-- Vancouver format does not include spaces.
end

--[[--------------------------&lt; L I S T  _ P E O P L E &gt;-------------------------------------------------------

Formats a list of people (e.g. authors / editors) 

]]

local function list_people(control, people, etal)
	local sep;
	local namesep;
	local format = control.format
	local maximum = control.maximum
	local lastauthoramp = control.lastauthoramp;
	local text = {}

	if 'vanc' == format then													-- Vancouver-like author/editor name styling?
		sep = ',';																-- name-list separator between authors is a comma
		namesep = ' ';															-- last/first separator is a space
	elseif 'mla' == control.mode then
		sep = ',';																-- name-list separator between authors is a comma
		namesep = ', '															-- last/first separator is &lt;comma&gt;&lt;space&gt;
	else
		sep = ';'																-- name-list separator between authors is a semicolon
		namesep = ', '															-- last/first separator is &lt;comma&gt;&lt;space&gt;
	end
	
	if sep:sub(-1,-1) ~= &quot; &quot; then sep = sep .. &quot; &quot; end
	if is_set (maximum) and maximum &lt; 1 then return &quot;&quot;, 0; end					-- returned 0 is for EditorCount; not used for authors
	
	for i,person in ipairs(people) do
		if is_set(person.last) then
			local mask = person.mask
			local one
			local sep_one = sep;
			if is_set (maximum) and i &gt; maximum then
				etal = true;
				break;
			elseif (mask ~= nil) then
				local n = tonumber(mask)
				if (n ~= nil) then
					one = string.rep(&quot;&amp;mdash;&quot;,n)
				else
					one = mask;
					sep_one = &quot; &quot;;
				end
			else
				one = person.last
				local first = person.first
				if is_set(first) then
					if 'mla' == control.mode then 
						if i == 1 then											-- for mla
							one = one .. namesep .. first;						-- first name last, first
						else													-- all other names
							one = first .. ' ' .. one;							-- first last
						end
					else
						if ( &quot;vanc&quot; == format ) then								-- if vancouver format
							one = one:gsub ('%.', '');								-- remove periods from surnames (http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35029/)
							if not person.corporate and is_good_vanc_name (one, first) then					-- and name is all Latin characters; corporate authors not tested
								first = reduce_to_initials(first)					-- attempt to convert first name(s) to initials
							end
						end
						one = one .. namesep .. first;
					end
				end
				if is_set(person.link) and person.link ~= control.page_name then
					one = &quot;[[&quot; .. person.link .. &quot;|&quot; .. one .. &quot;]]&quot;				-- link author/editor if this page is not the author's/editor's page
				end
			end
			table.insert( text, one )
			table.insert( text, sep_one )
		end
	end

	local count = #text / 2;													-- (number of names + number of separators) divided by 2
	if count &gt; 0 then 
		if count &gt; 1 and is_set(lastauthoramp) and not etal then
			if 'mla' == control.mode then
				text[#text-2] = &quot;, and &quot;;										-- replace last separator with ', and ' text
			else
				text[#text-2] = &quot; &amp; &quot;;											-- replace last separator with ampersand text
			end
		end
		text[#text] = nil;														-- erase the last separator
	end
	
	local result = table.concat(text)											-- construct list
	if etal and is_set (result) then											-- etal may be set by |display-authors=etal but we might not have a last-first list
		result = result .. sep .. ' ' .. cfg.messages['et al'];					-- we've go a last-first list and etal so add et al.
	end
	
	return result, count
end

--[[--------------------------&lt; A N C H O R _ I D &gt;------------------------------------------------------------

Generates a CITEREF anchor ID if we have at least one name or a date.  Otherwise returns an empty string.

namelist is one of the contributor-, author-, or editor-name lists chosen in that order.  year is Year or anchor_year.

]]
local function anchor_id (namelist, year)
	local names={};																-- a table for the one to four names and year
	for i,v in ipairs (namelist) do												-- loop through the list and take up to the first four last names
		names[i] = v.last 
		if i == 4 then break end												-- if four then done
	end
	table.insert (names, year);													-- add the year at the end
	local id = table.concat(names);												-- concatenate names and year for CITEREF id
	if is_set (id) then															-- if concatenation is not an empty string
		return &quot;CITEREF&quot; .. id;													-- add the CITEREF portion
	else
		return '';																-- return an empty string; no reason to include CITEREF id in this citation
	end
end


--[[--------------------------&lt; N A M E _ H A S _ E T A L &gt;----------------------------------------------------

Evaluates the content of author and editor name parameters for variations on the theme of et al.  If found,
the et al. is removed, a flag is set to true and the function returns the modified name and the flag.

This function never sets the flag to false but returns it's previous state because it may have been set by
previous passes through this function or by the parameters |display-authors=etal or |display-editors=etal

]]

local function name_has_etal (name, etal, nocat)

	if is_set (name) then														-- name can be nil in which case just return
		local etal_pattern = &quot;[;,]? *[\&quot;']*%f[%a][Ee][Tt] *[Aa][Ll][%.\&quot;']*$&quot;	-- variations on the 'et al' theme
		local others_pattern = &quot;[;,]? *%f[%a]and [Oo]thers&quot;;					-- and alternate to et al.
		
		if name:match (etal_pattern) then										-- variants on et al.
			name = name:gsub (etal_pattern, '');								-- if found, remove
			etal = true;														-- set flag (may have been set previously here or by |display-authors=etal)
			if not nocat then													-- no categorization for |vauthors=
				add_maint_cat ('etal');											-- and add a category if not already added
			end
		elseif name:match (others_pattern) then									-- if not 'et al.', then 'and others'?
			name = name:gsub (others_pattern, '');								-- if found, remove
			etal = true;														-- set flag (may have been set previously here or by |display-authors=etal)
			if not nocat then													-- no categorization for |vauthors=
				add_maint_cat ('etal');											-- and add a category if not already added
			end
		end
	end
	return name, etal;															-- 
end


--[[--------------------------&lt; N A M E _ H A S _ E D _ M A R K U P &gt;------------------------------------------

Evaluates the content of author and editor parameters for extranious editor annotations: ed, ed., eds, (Ed.), etc.
These annotation do not belong in author parameters and are redundant in editor parameters.  If found, the function
adds the editor markup maintenance category.

]]

local function name_has_ed_markup (name, list_name)
	local _, pattern;
	local patterns = {															-- these patterns match annotations at end of name
		'%f[%(%[][%(%[]%s*[Ee][Dd][Ss]?%.?%s*[%)%]]?$',							-- (ed) or (eds): leading '(', case insensitive 'ed', optional 's', '.' and/or ')'
		'[,%.%s]%f[e]eds?%.?$',													-- ed or eds: without '('or ')'; case sensitive (ED could be initials Ed could be name)
		'%f[%(%[][%(%[]%s*[Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%.?%s*[%)%]]?$',			-- (editor) or (editors): leading '(', case insensitive, optional '.' and/or ')'
		'[,%.%s]%f[Ee][Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%.?$',						-- editor or editors: without '('or ')'; case insensitive
		
																				-- these patterns match annotations at beginning of name
		'^eds?[%.,;]',															-- ed. or eds.: lower case only, optional 's', requires '.'
		'^[%(%[]%s*[Ee][Dd][Ss]?%.?%s*[%)%]]',									-- (ed) or (eds): also sqare brackets, case insensitive, optional 's', '.'
		'^[%(%[]?%s*[Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%A',							-- (editor or (editors: also sq brackets, case insensitive, optional brackets, 's'
		'^[%(%[]?%s*[Ee][Dd][Ii][Tt][Ee][Dd]%A',								-- (edited: also sq brackets, case insensitive, optional brackets

		}

	if is_set (name) then
		for _, pattern in ipairs (patterns) do									-- spin through patterns table and
			if name:match (pattern) then
				add_maint_cat ('extra_text_names', cfg.special_case_translation [list_name]);	-- add a maint cat for this template
				break;
			end
		end
	end
	return name;																-- and done
end


--[[--------------------------&lt; N A M E _ H A S _ M U L T _ N A M E S &gt;----------------------------------------

Evaluates the content of author and editor (surnames only) parameters for multiple names.  Multiple names are
indicated if there is more than one comma and or semicolon.  If found, the function adds the multiple name
(author or editor) maintenance category.

]]

local function name_has_mult_names (name, list_name)
local count, _;
	if is_set (name) then
		_, count = name:gsub ('[;,]', '');										-- count the number of separator-like characters
		
		if 1 &lt; count then														-- param could be |author= or |editor= so one separator character is acceptable
			add_maint_cat ('mult_names', cfg.special_case_translation [list_name]);	-- more than one separator indicates multiple names so add a maint cat for this template
		end
	end
	return name;																-- and done
end


--[[--------------------------&lt; N A M E _ C H E C K S &gt;--------------------------------------------------------
This function calls various name checking functions used to validate the content of the various name-holding
parameters.

]]

local function name_checks (last, first, list_name)
	if is_set (last) then
		if last:match ('^%(%(.*%)%)$') then										-- if wrapped in doubled parentheses, accept as written 
			last = last:match ('^%(%((.*)%)%)$');								-- strip parens
		else
			last = name_has_mult_names (last, list_name);						-- check for multiple names in the parameter (last only)
			last = name_has_ed_markup (last, list_name);						-- check for extraneous 'editor' annotation
		end
	end
	if is_set (first) then
		if first:match ('^%(%(.*%)%)$') then									-- if wrapped in doubled parentheses, accept as written 
			first = first:match ('^%(%((.*)%)%)$');								-- strip parens
		else
			first = name_has_ed_markup (first, list_name);						-- check for extraneous 'editor' annotation
		end
	end
	return last, first;															-- done
	end


--[[--------------------------&lt; E X T R A C T _ N A M E S &gt;----------------------------------------------------
Gets name list from the input arguments

Searches through args in sequential order to find |lastn= and |firstn= parameters (or their aliases), and their matching link and mask parameters.
Stops searching when both |lastn= and |firstn= are not found in args after two sequential attempts: found |last1=, |last2=, and |last3= but doesn't
find |last4= and |last5= then the search is done.

This function emits an error message when there is a |firstn= without a matching |lastn=.  When there are 'holes' in the list of last names, |last1= and |last3=
are present but |last2= is missing, an error message is emitted. |lastn= is not required to have a matching |firstn=.

When an author or editor parameter contains some form of 'et al.', the 'et al.' is stripped from the parameter and a flag (etal) returned
that will cause list_people() to add the static 'et al.' text from Module:Citation/CS1/Configuration.  This keeps 'et al.' out of the 
template's metadata.  When this occurs, the page is added to a maintenance category.

]]

local function extract_names(args, list_name)
	local names = {};			-- table of names
	local last;					-- individual name components
	local first;
	local link;
	local mask;
	local i = 1;				-- loop counter/indexer
	local n = 1;				-- output table indexer
	local count = 0;			-- used to count the number of times we haven't found a |last= (or alias for authors, |editor-last or alias for editors)
	local etal=false;			-- return value set to true when we find some form of et al. in an author parameter

	local err_msg_list_name = list_name:match (&quot;(%w+)List&quot;) .. 's list';		-- modify AuthorList or EditorList for use in error messages if necessary
	while true do
		last = select_one( args, cfg.aliases[list_name .. '-Last'], 'redundant_parameters', i );		-- search through args for name components beginning at 1
		first = select_one( args, cfg.aliases[list_name .. '-First'], 'redundant_parameters', i );
		link = select_one( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i );
		mask = select_one( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i );

		last, etal = name_has_etal (last, etal, false);							-- find and remove variations on et al.
		first, etal = name_has_etal (first, etal, false);						-- find and remove variations on et al.
		last, first= name_checks (last, first, list_name);						-- multiple names, extraneous annotation, etc checks
		
		if first and not last then												-- if there is a firstn without a matching lastn
			table.insert( z.message_tail, { set_error( 'first_missing_last', {err_msg_list_name, i}, true ) } );	-- add this error message
		elseif not first and not last then										-- if both firstn and lastn aren't found, are we done?
			count = count + 1;													-- number of times we haven't found last and first
			if 2 &lt;= count then													-- two missing names and we give up
				break;															-- normal exit or there is a two-name hole in the list; can't tell which
			end
		else																	-- we have last with or without a first
			link_title_ok (link, list_name:match (&quot;(%w+)List&quot;):lower() .. '-link' .. i, last, list_name:match (&quot;(%w+)List&quot;):lower() .. '-last' .. i);	-- check for improper wikimarkup

			names[n] = {last = last, first = first, link = link, mask = mask, corporate=false};	-- add this name to our names list (corporate for |vauthors= only)
			n = n + 1;															-- point to next location in the names table
			if 1 == count then													-- if the previous name was missing
				table.insert( z.message_tail, { set_error( 'missing_name', {err_msg_list_name, i-1}, true ) } );		-- add this error message
			end
			count = 0;															-- reset the counter, we're looking for two consecutive missing names
		end
		i = i + 1;																-- point to next args location
	end
	
	return names, etal;															-- all done, return our list of names
end

--[[--------------------------&lt; G E T _ I S O 6 3 9 _ C O D E &gt;------------------------------------------------

Validates language names provided in |language= parameter if not an ISO639-1 or 639-2 code.

Returns the language name and associated two- or three-character code.  Because case of the source may be incorrect
or different from the case that WikiMedia uses, the name comparisons are done in lower case and when a match is
found, the Wikimedia version (assumed to be correct) is returned along with the code.  When there is no match, we
return the original language name string.

mw.language.fetchLanguageNames(&lt;local wiki language&gt;, 'all') return a list of languages that in some cases may include
extensions. For example, code 'cbk-zam' and its associated name 'Chavacano de Zamboanga' (MediaWiki does not support
code 'cbk' or name 'Chavacano'.

Names but that are included in the list will be found if that name is provided in the |language= parameter.  For example,
if |language=Chavacano de Zamboanga, that name will be found with the associated code 'cbk-zam'.  When names are found
and the associated code is not two or three characters, this function returns only the Wikimedia language name.

Adapted from code taken from Module:Check ISO 639-1.

]]

local function get_iso639_code (lang, this_wiki_code)
	if 'bangla' == lang:lower() then											-- special case related to Wikimedia remap of code 'bn' at mw:Extension:CLDR
		return 'Bengali', 'bn';													-- make sure rendered version is properly capitalized
	end

	local languages = mw.language.fetchLanguageNames(this_wiki_code, 'all')		-- get a list of language names known to Wikimedia
																				-- ('all' is required for North Ndebele, South Ndebele, and Ojibwa)
	local langlc = mw.ustring.lower(lang);										-- lower case version for comparisons
	
	for code, name in pairs(languages) do										-- scan the list to see if we can find our language
		if langlc == mw.ustring.lower(name) then
			if 2 ~= code:len() and 3 ~= code:len() then							-- two- or three-character codes only; extensions not supported
				return name;													-- so return the name but not the code
			end
			return name, code;													-- found it, return name to ensure proper capitalization and the the code
		end
	end
	return lang;																-- not valid language; return language in original case and nil for the code
end


--[[--------------------------&lt; L A N G U A G E _ P A R A M E T E R &gt;------------------------------------------

Gets language name from a provided two- or three-character ISO 639 code.  If a code is recognized by MediaWiki,
use the returned name; if not, then use the value that was provided with the language parameter.

When |language= contains a recognized language (either code or name), the page is assigned to the category for
that code: Category:Norwegian-language sources (no).  For valid three-character code languages, the page is assigned
to the single category for '639-2' codes: Category:CS1 ISO 639-2 language sources.

Languages that are the same as the local wiki are not categorized.  MediaWiki does not recognize three-character
equivalents of two-character codes: code 'ar' is recognized bit code 'ara' is not.

This function supports multiple languages in the form |language=nb, French, th where the language names or codes are
separated from each other by commas.

]]

local function language_parameter (lang)
	local code;																	-- the two- or three-character language code
	local name;																	-- the language name
	local language_list = {};													-- table of language names to be rendered
	local names_table = {};														-- table made from the value assigned to |language=

	local this_wiki = mw.getContentLanguage();									-- get a language object for this wiki
	local this_wiki_code = this_wiki:getCode()									-- get this wiki's language code
	local this_wiki_name = mw.language.fetchLanguageName(this_wiki_code, this_wiki_code);	-- get this wiki's language name

	names_table = mw.text.split (lang, '%s*,%s*');								-- names should be a comma separated list

	for _, lang in ipairs (names_table) do										-- reuse lang

		if lang:match ('^%a%a%-') then											-- strip ietf language tags from code; TODO: is there a need to support 3-char with tag?
			lang = lang:match ('(%a%a)%-')										-- keep only 639-1 code portion to lang; TODO: do something with 3166 alpha 2 country code?
		end
		if 2 == lang:len() or 3 == lang:len() then								-- if two-or three-character code
			name = mw.language.fetchLanguageName( lang:lower(), this_wiki_code);	-- get language name if |language= is a proper code
		end
	
		if is_set (name) then													-- if |language= specified a valid code
			code = lang:lower();												-- save it
		else
			name, code = get_iso639_code (lang, this_wiki_code);				-- attempt to get code from name (assign name here so that we are sure of proper capitalization)
		end
	
		if is_set (code) then													-- only 2- or 3-character codes
			if 'bn' == code then name = 'Bengali' end;							-- override wikimedia when code is 'bn'
			if this_wiki_code ~= code then										-- when the language is not the same as this wiki's language
				if 2 == code:len() then											-- and is a two-character code
					add_prop_cat ('foreign_lang_source', {name, code})			-- categorize it
				else															-- or is a recognized language (but has a three-character code)
					add_prop_cat ('foreign_lang_source_2', {code})				-- categorize it differently TODO: support mutliple three-character code categories per cs1|2 template
				end
			end
		else
			add_maint_cat ('unknown_lang');										-- add maint category if not already added
		end
		
		table.insert (language_list, name);
		name = '';																-- so we can reuse it
	end
	
	code = #language_list														-- reuse code as number of languages in the list
	if 2 &gt;= code then
		name = table.concat (language_list, ' and ')							-- insert '&lt;space&gt;and&lt;space&gt;' between two language names
	elseif 2 &lt; code then
		language_list[code] = 'and ' .. language_list[code];					-- prepend last name with 'and&lt;space&gt;'
		name = table.concat (language_list, ', ')								-- and concatenate with '&lt;comma&gt;&lt;space&gt;' separators
	end
	if this_wiki_name == name then
		return '';																-- if one language and that language is this wiki's return an empty string (no annotation)
	end
	return (&quot; &quot; .. wrap_msg ('language', name));								-- otherwise wrap with '(in ...)'
	--[[ TODO: should only return blank or name rather than full list
	so we can clean up the bunched parenthetical elements Language, Type, Format
	]]
end

--[[--------------------------&lt; S E T _ C S 1 _ S T Y L E &gt;----------------------------------------------------

Set style settings for CS1 citation templates. Returns separator and postscript settings

]]

local function set_cs1_style (ps)
	if not is_set (ps) then														-- unless explicitely set to something
		ps = '.';																-- terminate the rendered citation with a period
	end
	return '.', ps;																-- separator is a full stop
end

--[[--------------------------&lt; S E T _ C S 2 _ S T Y L E &gt;----------------------------------------------------

Set style settings for CS2 citation templates. Returns separator, postscript, ref settings

]]

local function set_cs2_style (ps, ref)
	if not is_set (ps) then														-- if |postscript= has not been set, set cs2 default
		ps = '';																-- make sure it isn't nil
	end
	if not is_set (ref) then													-- if |ref= is not set
		ref = &quot;harv&quot;;															-- set default |ref=harv
	end
	return ',', ps, ref;														-- separator is a comma
end

--[[--------------------------&lt; G E T _ S E T T I N G S _ F R O M _ C I T E _ C L A S S &gt;----------------------

When |mode= is not set or when its value is invalid, use config.CitationClass and parameter values to establish
rendered style.

]]

local function get_settings_from_cite_class (ps, ref, cite_class)
	local sep;
	if (cite_class == &quot;citation&quot;) then											-- for citation templates (CS2)
		sep, ps, ref = set_cs2_style (ps, ref);
	else																		-- not a citation template so CS1
		sep, ps = set_cs1_style (ps);
	end

	return sep, ps, ref															-- return them all
end

--[[--------------------------&lt; S E T _ S T Y L E &gt;------------------------------------------------------------

Establish basic style settings to be used when rendering the citation.  Uses |mode= if set and valid or uses
config.CitationClass from the template's #invoke: to establish style.

]]

local function set_style (mode, ps, ref, cite_class)
	local sep;
	if 'cs2' == mode then														-- if this template is to be rendered in CS2 (citation) style
		sep, ps, ref = set_cs2_style (ps, ref);
	elseif 'cs1' == mode then													-- if this template is to be rendered in CS1 (cite xxx) style
		sep, ps = set_cs1_style (ps);
	elseif 'mla' == mode then													-- if this template is to be rendered in mla style use cs1 for bot cs1 &amp; cs2 templates
		sep, ps = set_cs1_style (ps);
	else																		-- anything but cs1 or cs2
		sep, ps, ref = get_settings_from_cite_class (ps, ref, cite_class);		-- get settings based on the template's CitationClass
	end
	if 'none' == ps:lower() then												-- if assigned value is 'none' then
		ps = '';																-- set to empty string
	end
	
	return sep, ps, ref
end

--[=[-------------------------&lt; I S _ P D F &gt;------------------------------------------------------------------

Determines if a url has the file extension that is one of the pdf file extensions used by [[MediaWiki:Common.css]] when
applying the pdf icon to external links.

returns true if file extension is one of the recognized extension, else false

]=]

local function is_pdf (url)
	return url:match ('%.pdf[%?#]?') or url:match ('%.PDF[%?#]?');
end

--[[--------------------------&lt; S T Y L E _ F O R M A T &gt;------------------------------------------------------

Applies css style to |format=, |chapter-format=, etc.  Also emits an error message if the format parameter does
not have a matching url parameter.  If the format parameter is not set and the url contains a file extension that
is recognized as a pdf document by MediaWiki's commons.css, this code will set the format parameter to (PDF) with
the appropriate styling.

]]

local function style_format (format, url, fmt_param, url_param)
	if is_set (format) then
		format = wrap_style ('format', format);									-- add leading space, parenthases, resize
		if not is_set (url) then
			format = format .. set_error( 'format_missing_url', {fmt_param, url_param} );	-- add an error message
		end
	elseif is_pdf (url) then													-- format is not set so if url is a pdf file then
		format = wrap_style ('format', 'PDF');									-- set format to pdf
	else
		format = '';															-- empty string for concatenation
	end
	return format;
end

--[[--------------------------&lt; G E T _ D I S P L A Y _ A U T H O R S _ E D I T O R S &gt;------------------------

Returns a number that defines the number of names displayed for author and editor name lists and a boolean flag
to indicate when et al. should be appended to the name list.

When the value assigned to |display-xxxxors= is a number greater than or equal to zero, return the number and
the previous state of the 'etal' flag (false by default but may have been set to true if the name list contains
some variant of the text 'et al.').

When the value assigned to |display-xxxxors= is the keyword 'etal', return a number that is one greater than the
number of authors in the list and set the 'etal' flag true.  This will cause the list_people() to display all of
the names in the name list followed by 'et al.'

In all other cases, returns nil and the previous state of the 'etal' flag.

inputs:
	max: A['DisplayAuthors'] or A['DisplayEditors']; a number or some flavor of etal
	count: #a or #e
	list_name: 'authors' or 'editors'
	etal: author_etal or editor_etal

]]

local function get_display_authors_editors (max, count, list_name, etal)
	if is_set (max) then
		if 'etal' == max:lower():gsub(&quot;[ '%.]&quot;, '') then						-- the :gsub() portion makes 'etal' from a variety of 'et al.' spellings and stylings
			max = count + 1;													-- number of authors + 1 so display all author name plus et al.
			etal = true;														-- overrides value set by extract_names()
		elseif max:match ('^%d+$') then											-- if is a string of numbers
			max = tonumber (max);												-- make it a number
			if max &gt;= count then												-- if |display-xxxxors= value greater than or equal to number of authors/editors
				add_maint_cat ('disp_auth_ed', cfg.special_case_translation [list_name]);
			end
		else																	-- not a valid keyword or number
			table.insert( z.message_tail, { set_error( 'invalid_param_val', {'display-' .. list_name, max}, true ) } );		-- add error message
			max = nil;															-- unset; as if |display-xxxxors= had not been set
		end
	end
	
	return max, etal;
end

--[[--------------------------&lt; E X T R A _ T E X T _ I N _ P A G E _ C H E C K &gt;------------------------------

Adds page to Category:CS1 maint: extra text if |page= or |pages= has what appears to be some form of p. or pp. 
abbreviation in the first characters of the parameter content.

check Page and Pages for extraneous p, p., pp, and pp. at start of parameter value:
	good pattern: '^P[^%.P%l]' matches when |page(s)= begins PX or P# but not Px where x and X are letters and # is a dgiit
	bad pattern: '^[Pp][Pp]' matches matches when |page(s)= begins pp or pP or Pp or PP

]]

local function extra_text_in_page_check (page)
--	local good_pattern = '^P[^%.P%l]';
	local good_pattern = '^P[^%.Pp]';											-- ok to begin with uppercase P: P7 (pg 7 of section P) but not p123 (page 123) TODO: add Gg for PG or Pg?
--	local bad_pattern = '^[Pp][Pp]';
	local bad_pattern = '^[Pp]?[Pp]%.?[ %d]';

	if not page:match (good_pattern) and (page:match (bad_pattern) or  page:match ('^[Pp]ages?')) then
		add_maint_cat ('extra_text');
	end
--		if Page:match ('^[Pp]?[Pp]%.?[ %d]') or  Page:match ('^[Pp]ages?[ %d]') or
--			Pages:match ('^[Pp]?[Pp]%.?[ %d]') or  Pages:match ('^[Pp]ages?[ %d]') then
--				add_maint_cat ('extra_text');
--		end
end

--[[--------------------------&lt; G E T _ V _ N A M E _ T A B L E &gt;----------------------------------------------

split apart a |vautthors= or |veditors= parameter.  This function allows for corporate names, wrapped in doubled
parentheses to also have commas; in the old version of the code, the doubled parnetheses were included in the
rendered citation and in the metadata.

	|vauthors=Jones AB, White EB, ((Black, Brown, and Co.))

This code is experimental and may not be retained.

]]
local function get_v_name_table (vparam, output_table)
	local name_table = mw.text.split(vparam, &quot;%s*,%s*&quot;);						-- names are separated by commas
	
	local i = 1;
	
	while name_table[i] do
		if name_table[i]:match ('^%(%(.*[^%)][^%)]$') then						-- first segment of corporate with one or more commas; this segment has the opening doubled parens
			local name = name_table[i];
			i=i+1;																-- bump indexer to next segment
			while name_table[i] do
				name = name .. ', ' .. name_table[i];							-- concatenate with previous segments
				if name_table[i]:match ('^.*%)%)$') then						-- if this table member has the closing doubled parens
					break;														-- and done reassembling so
				end
				i=i+1;															-- bump indexer
			end
			table.insert (output_table, name);									-- and add corporate name to the output table
		else
			table.insert (output_table, name_table[i]);							-- add this name 
		end
		i = i+1;
	end	
	return output_table;
end

--[[--------------------------&lt; P A R S E _ V A U T H O R S _ V E D I T O R S &gt;--------------------------------

This function extracts author / editor names from |vauthors= or |veditors= and finds matching |xxxxor-maskn= and
|xxxxor-linkn= in args.  It then returns a table of assembled names just as extract_names() does.

Author / editor names in |vauthors= or |veditors= must be in Vancouver system style. Corporate or institutional names
may sometimes be required and because such names will often fail the is_good_vanc_name() and other format compliance
tests, are wrapped in doubled paranethese ((corporate name)) to suppress the format tests.

Supports generational suffixes Jr, 2nd, 3rd, 4th6th.

This function sets the vancouver error when a reqired comma is missing and when there is a space between an author's initials.

]]

local function parse_vauthors_veditors (args, vparam, list_name)
	local names = {};															-- table of names assembled from |vauthors=, |author-maskn=, |author-linkn=
	local v_name_table = {};
	local etal = false;															-- return value set to true when we find some form of et al. vauthors parameter
	local last, first, link, mask, suffix;
	local corporate = false;

	vparam, etal = name_has_etal (vparam, etal, true);							-- find and remove variations on et al. do not categorize (do it here because et al. might have a period)
	if vparam:find ('%[%[') or vparam:find ('%]%]')	then						-- no wikilinking vauthors names
		add_vanc_error ('wikilink');
	end
	v_name_table = get_v_name_table (vparam, v_name_table);						-- names are separated by commas

	for i, v_name in ipairs(v_name_table) do
		if v_name:match ('^%(%(.+%)%)$') then									-- corporate authors are wrapped in doubled parentheses to supress vanc formatting and error detection
			first = '';															-- set to empty string for concatenation and because it may have been set for previous author/editor
			last = v_name:match ('^%(%((.+)%)%)$')								-- remove doubled parntheses
			corporate = true;													-- flag used in list_people()
		elseif string.find(v_name, &quot;%s&quot;) then
			if v_name:find('[;%.]') then										-- look for commonly occurring punctuation characters; 
				add_vanc_error ('punctuation');
			end
			local lastfirstTable = {}
			lastfirstTable = mw.text.split(v_name, &quot;%s&quot;)
			first = table.remove(lastfirstTable);								-- removes and returns value of last element in table which should be author intials
			if is_suffix (first) then											-- if a valid suffix
				suffix = first													-- save it as a suffix and
				first = table.remove(lastfirstTable);							-- get what should be the initials from the table
			end																	-- no suffix error message here because letter combination may be result of Romanization; check for digits?
			last = table.concat(lastfirstTable, &quot; &quot;)							-- returns a string that is the concatenation of all other names that are not initials
			if mw.ustring.match (last, '%a+%s+%u+%s+%a+') then
				add_vanc_error ('missing comma');								-- matches last II last; the case when a comma is missing
			end
			if mw.ustring.match (v_name, ' %u %u$') then						-- this test is in the wrong place TODO: move or replace with a more appropriate test
				add_vanc_error ('name');										-- matches a space between two intiials
			end
		else
			first = '';															-- set to empty string for concatenation and because it may have been set for previous author/editor
			last = v_name;														-- last name or single corporate name?  Doesn't support multiword corporate names? do we need this?
		end
																
		if is_set (first) then
			if not mw.ustring.match (first, &quot;^%u?%u$&quot;) then						-- first shall contain one or two upper-case letters, nothing else
				add_vanc_error ('initials');									-- too many initials; mixed case initials (which may be ok Romanization); hyphenated initials
			end
			is_good_vanc_name (last, first);									-- check first and last before restoring the suffix which may have a non-Latin digit
			if is_set (suffix) then
				first = first .. ' ' .. suffix;									-- if there was a suffix concatenate with the initials
				suffix = '';													-- unset so we don't add this suffix to all subsequent names
			end
		else
			if not corporate then
				is_good_vanc_name (last, '');
			end
		end
																				-- this from extract_names ()
		link = select_one( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i );
		mask = select_one( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i );
		names[i] = {last = last, first = first, link = link, mask = mask, corporate=corporate};		-- add this assembled name to our names list
	end
	return names, etal;															-- all done, return our list of names
end


--[[--------------------------&lt; S E L E C T _ A U T H O R _ E D I T O R _ S O U R C E &gt;------------------------

Select one of |authors=, |authorn= / |lastn / firstn=, or |vauthors= as the source of the author name list or
select one of |editors=, |editorn= / editor-lastn= / |editor-firstn= or |veditors= as the source of the editor name list.

Only one of these appropriate three will be used.  The hierarchy is: |authorn= (and aliases) highest and |authors= lowest and
similarly, |editorn= (and aliases) highest and |editors= lowest

When looking for |authorn= / |editorn= parameters, test |xxxxor1= and |xxxxor2= (and all of their aliases); stops after the second
test which mimicks the test used in extract_names() when looking for a hole in the author name list.  There may be a better
way to do this, I just haven't discovered what that way is.

Emits an error message when more than one xxxxor name source is provided.

In this function, vxxxxors = vauthors or veditors; xxxxors = authors or editors as appropriate.

]]

local function select_author_editor_source (vxxxxors, xxxxors, args, list_name)
local lastfirst = false;
	if select_one( args, cfg.aliases[list_name .. '-Last'], 'none', 1 ) or		-- do this twice incase we have a |first1= without a |last1=; this ...
		select_one( args, cfg.aliases[list_name .. '-First'], 'none', 1 ) or	-- ... also catches the case where |first= is used with |vauthors=
		select_one( args, cfg.aliases[list_name .. '-Last'], 'none', 2 ) or
		select_one( args, cfg.aliases[list_name .. '-First'], 'none', 2 ) then
			lastfirst=true;
	end

	if (is_set (vxxxxors) and true == lastfirst) or								-- these are the three error conditions
		(is_set (vxxxxors) and is_set (xxxxors)) or
		(true == lastfirst and is_set (xxxxors)) then
			local err_name;
			if 'AuthorList' == list_name then									-- figure out which name should be used in error message
				err_name = 'author';
			else
				err_name = 'editor';
			end
			table.insert( z.message_tail, { set_error( 'redundant_parameters',
				{err_name .. '-name-list parameters'}, true ) } );				-- add error message
	end

	if true == lastfirst then return 1 end;										-- return a number indicating which author name source to use
	if is_set (vxxxxors) then return 2 end;
	if is_set (xxxxors) then return 3 end;
	return 1;																	-- no authors so return 1; this allows missing author name test to run in case there is a first without last 
end


--[[--------------------------&lt; I S _ V A L I D _ P A R A M E T E R _ V A L U E &gt;------------------------------

This function is used to validate a parameter's assigned value for those parameters that have only a limited number
of allowable values (yes, y, true, no, etc).  When the parameter value has not been assigned a value (missing or empty
in the source template) the function refurns true.  If the parameter value is one of the list of allowed values returns
true; else, emits an error message and returns false.

]]

local function is_valid_parameter_value (value, name, possible, cite_class)
-- begin hack to limit |mode=mla to a specific set of templates
	if ('mode' == name) and ('mla' == value) and not in_array (cite_class, {'book', 'journal', 'news'}) then
		table.insert( z.message_tail, { set_error( 'invalid_param_val', {name, value}, true ) } );	-- not an allowed value so add error message
		return false
	end
-- end hack

	if not is_set (value) then
		return true;															-- an empty parameter is ok
	elseif in_array(value:lower(), possible) then
		return true;
	else
		table.insert( z.message_tail, { set_error( 'invalid_param_val', {name, value}, true ) } );	-- not an allowed value so add error message
		return false
	end
end


--[[--------------------------&lt; T E R M I N A T E _ N A M E _ L I S T &gt;----------------------------------------

This function terminates a name list (author, contributor, editor) with a separator character (sepc) and a space
when the last character is not a sepc character or when the last three characters are not sepc followed by two
closing square brackets (close of a wikilink).  When either of these is true, the name_list is terminated with a
single space character.

]]

local function terminate_name_list (name_list, sepc)
	if (string.sub (name_list,-3,-1) == sepc .. '. ') then						-- if already properly terminated
		return name_list;														-- just return the name list
	elseif (string.sub (name_list,-1,-1) == sepc) or (string.sub (name_list,-3,-1) == sepc .. ']]') then	-- if last name in list ends with sepc char
		return name_list .. &quot; &quot;;												-- don't add another
	else
		return name_list .. sepc .. ' ';										-- otherwise terninate the name list
	end
end


--[[-------------------------&lt; F O R M A T _ V O L U M E _ I S S U E &gt;----------------------------------------

returns the concatenation of the formatted volume and issue parameters as a single string; or formatted volume
or formatted issue, or an empty string if neither are set.

]]
	
local function format_volume_issue (volume, issue, cite_class, origin, sepc, lower, mode)
	if not is_set (volume) and not is_set (issue) then
		return '';
	end
	
	if ('mla' == mode) and ('journal' == cite_class) then						-- same as cs1 for magazines
		lower = true;															-- mla 8th edition; force these to lower case
		if is_set (volume) and is_set (issue) then
			return wrap_msg ('vol-no', {sepc, volume, issue}, lower);
		elseif is_set (volume) then
			return wrap_msg ('vol', {sepc, volume}, lower);
		else
			return '';
		end
	end

	if 'magazine' == cite_class or (in_array (cite_class, {'citation', 'map'}) and 'magazine' == origin) then
		if is_set (volume) and is_set (issue) then
			return wrap_msg ('vol-no', {sepc, volume, issue}, lower);
		elseif is_set (volume) then
			return wrap_msg ('vol', {sepc, volume}, lower);
		else
			return wrap_msg ('issue', {sepc, issue}, lower);
		end
	end

	local vol = '';
		
	if is_set (volume) then
		if (4 &lt; mw.ustring.len(volume)) then
			vol = substitute (cfg.messages['j-vol'], {sepc, volume});
		else
			vol = substitute (cfg.presentation['vol-bold'], {sepc, hyphen_to_dash(volume)});
		end
	end
	if is_set (issue) then
		return vol .. substitute (cfg.messages['j-issue'], issue);
	end
	return vol;
end


--[[-------------------------&lt; N O R M A L I Z E _ P A G E _ L I S T &gt;-----------------------------------------

not currently used

normalizes a comma, ampersand, and/or space separated list to be '&lt;value&gt;, &lt;value&gt;, ..., &lt;value&gt;'
returns list unchanged if there are no commas else strips whitespace and then reformats the list

]]
--[[
local function normalize_page_list (list)
	if not list:find ('[,&amp; ]') then return list end								-- if list is not delimited with commas, ampersands, or spaces; done
	
	list = mw.text.split (list, '[,&amp;%s]+');										-- make a table of values
	list = table.concat (list, ', ');											-- and now make a normalized list
	return list;
end
]]


--[[-------------------------&lt; F O R M A T _ P A G E S _ S H E E T S &gt;-----------------------------------------

adds static text to one of |page(s)= or |sheet(s)= values and returns it with all of the others set to empty strings.
The return order is:
	page, pages, sheet, sheets

Singular has priority over plural when both are provided.

]]

local function format_pages_sheets (page, pages, sheet, sheets, cite_class, origin, sepc, nopp, lower, mode)
	if 'map' == cite_class then													-- only cite map supports sheet(s) as in-source locators
		if is_set (sheet) then
			if 'journal' == origin then
				return '', '', wrap_msg ('j-sheet', sheet, lower), '';
			else
				return '', '', wrap_msg ('sheet', {sepc, sheet}, lower), '';
			end
		elseif is_set (sheets) then
			if 'journal' == origin then
				return '', '', '', wrap_msg ('j-sheets', sheets, lower);
			else
				return '', '', '', wrap_msg ('sheets', {sepc, sheets}, lower);
			end
		end
	end

	local is_journal = 'journal' == cite_class or (in_array (cite_class, {'citation', 'map'}) and 'journal' == origin);
	
	if is_journal and 'mla' == mode then
		is_journal = false;														-- mla always uses p &amp; pp
	end

	if is_set (page) then
		if is_journal then
			return substitute (cfg.messages['j-page(s)'], page), '', '', '';
		elseif not nopp then
			return substitute (cfg.messages['p-prefix'], {sepc, page}), '', '', '';
		else
			return substitute (cfg.messages['nopp'], {sepc, page}), '', '', '';
		end
	elseif is_set(pages) then
		if is_journal then
			return substitute (cfg.messages['j-page(s)'], pages), '', '', '';
		elseif tonumber(pages) ~= nil and not nopp then										-- if pages is only digits, assume a single page number
			return '', substitute (cfg.messages['p-prefix'], {sepc, pages}), '', '';
		elseif not nopp then
			return '', substitute (cfg.messages['pp-prefix'], {sepc, pages}), '', '';
		else
			return '', substitute (cfg.messages['nopp'], {sepc, pages}), '', '';
		end
	end
	
	return '', '', '', '';														-- return empty strings
end


--[=[-------------------------&lt; A R C H I V E _ U R L _ C H E C K &gt;--------------------------------------------

Check archive.org urls to make sure they at least look like they are pointing at valid archives and not to the 
save snapshot url or to calendar pages.  When the archive url is 'https://web.archive.org/save/' (or http://...)
archive.org saves a snapshot of the target page in the url.  That is something that Wikipedia should not allow
unwitting readers to do.

When the archive.org url does not have a complete timestamp, archive.org chooses a snapshot according to its own
algorithm or provides a calendar 'search' result.  [[WP:ELNO]] discourages links to search results.

This function looks at the value assigned to |archive-url= and returns empty strings for |archive-url= and
|archive-date= and an error message when:
	|archive-url= holds an archive.org save command url
	|archive-url= is an archive.org url that does not have a complete timestamp (YYYYMMDDhhmmss 14 digits) in the
		correct place
otherwise returns |archive-url= and |archive-date=

There are two mostly compatible archive.org urls:
	//web.archive.org/&lt;timestamp&gt;...		-- the old form
	//web.archive.org/web/&lt;timestamp&gt;...	-- the new form

The old form does not support or map to the new form when it contains a display flag.  There are four identified flags
('id_', 'js_', 'cs_', 'im_') but since archive.org ignores others following the same form (two letters and an underscore)
we don't check for these specific flags but we do check the form.

This function supports a preview mode.  When the article is rendered in preview mode, this funct may return a modified
archive url:
	for save command errors, return undated wildcard (/*/)
	for timestamp errors when the timestamp has a wildcard, return the url unmodified
	for timestamp errors when the timestamp does not have a wildcard, return with timestamp limited to six digits plus wildcard (/yyyymm*/)

]=]

local function archive_url_check (url, date)
	local err_msg = '';															-- start with the error message empty
	local path, timestamp, flag;												-- portions of the archive.or url
	
	if (not url:match('//web%.archive%.org/')) and (not url:match('//liveweb%.archive%.org/')) then		-- also deprecated liveweb Wayback machine url
		return url, date;														-- not an archive.org archive, return ArchiveURL and ArchiveDate
	end

	if url:match('//web%.archive%.org/save/') then								-- if a save command url, we don't want to allow saving of the target page 
		err_msg = 'save command';
		url = url:gsub ('(//web%.archive%.org)/save/', '%1/*/', 1);				-- for preview mode: modify ArchiveURL
	elseif url:match('//liveweb%.archive%.org/') then
		err_msg = 'liveweb';
	else
		path, timestamp, flag = url:match('//web%.archive%.org/([^%d]*)(%d+)([^/]*)/');		-- split out some of the url parts for evaluation
		
		if not is_set(timestamp) or 14 ~= timestamp:len() then					-- path and flag optional, must have 14-digit timestamp here
			err_msg = 'timestamp';
			if '*' ~= flag then
				url=url:gsub ('(//web%.archive%.org/[^%d]*%d?%d?%d?%d?%d?%d?)[^/]*', '%1*', 1)	-- for preview, modify ts to be yearmo* max (0-6 digits plus splat)
			end
		elseif is_set(path) and 'web/' ~= path then								-- older archive urls do not have the extra 'web/' path element
			err_msg = 'path';
		elseif is_set (flag) and not is_set (path) then							-- flag not allowed with the old form url (without the 'web/' path element)
			err_msg = 'flag';
		elseif is_set (flag) and not flag:match ('%a%a_') then					-- flag if present must be two alpha characters and underscore (requires 'web/' path element)
			err_msg = 'flag';
		else
			return url, date;													-- return archiveURL and ArchiveDate
		end
	end
																				-- if here, something not right so
	table.insert( z.message_tail, { set_error( 'archive_url', {err_msg}, true ) } );	-- add error message and
	if is_set (Frame:preprocess('{{REVISIONID}}')) then
		return '', '';															-- return empty strings for archiveURL and ArchiveDate
	else
		return url, date;														-- preview mode so return archiveURL and ArchiveDate
	end
end


--[[--------------------------&lt; M I S S I N G _ P I P E _ C H E C K &gt;------------------------------------------

Look at the contents of a parameter. If the content has a string of characters and digits followed by an equal
sign, compare the alphanumeric string to the list of cs1|2 parameters.  If found, then the string is possibly a
parameter that is missing its pipe:
	{{cite ... |title=Title access-date=2016-03-17}}

cs1|2 shares some parameter names with xml/html atributes: class=, title=, etc.  To prevent false positives xml/html
tags are removed before the search.

If a missing pipe is detected, this function adds the missing pipe maintenance category.

]]

local function missing_pipe_check (value)
	local capture;
	value = value:gsub ('%b&lt;&gt;', '');											-- remove xml/html tags because attributes: class=, title=, etc 

	capture = value:match ('%s+(%a[%a%d]+)%s*=') or value:match ('^(%a[%a%d]+)%s*=');	-- find and categorize parameters with possible missing pipes
	if capture and validate (capture) then								-- if the capture is a valid parameter name
		add_maint_cat ('missing_pipe');
	end
end


--[[--------------------------&lt; C I T A T I O N 0 &gt;------------------------------------------------------------

This is the main function doing the majority of the citation formatting.

]]

local function citation0( config, args)
	--[[ 
	Load Input Parameters
	The argument_wrapper facilitates the mapping of multiple aliases to single internal variable.
	]]
	local A = argument_wrapper( args );
	local i 

	-- Pick out the relevant fields from the arguments.  Different citation templates
	-- define different field names for the same underlying things.	

-- set default parameter values defined by |mode= parameter.  If |mode= is empty or omitted, use CitationClass to set these values
	local Mode = A['Mode'];
	if not is_valid_parameter_value (Mode, 'mode', cfg.keywords['mode'], config.CitationClass) then
		Mode = '';
	end

	local author_etal;
	local a	= {};																-- authors list from |lastn= / |firstn= pairs or |vauthors=
	local Authors;
	local NameListFormat = A['NameListFormat'];
	local Collaboration = A['Collaboration'];

	do																			-- to limit scope of selected
		local selected = select_author_editor_source (A['Vauthors'], A['Authors'], args, 'AuthorList');
		if 1 == selected then
			a, author_etal = extract_names (args, 'AuthorList');				-- fetch author list from |authorn= / |lastn= / |firstn=, |author-linkn=, and |author-maskn=
		elseif 2 == selected then
			NameListFormat = 'vanc';											-- override whatever |name-list-format= might be
			a, author_etal = parse_vauthors_veditors (args, args.vauthors, 'AuthorList');	-- fetch author list from |vauthors=, |author-linkn=, and |author-maskn=
		elseif 3 == selected then
			Authors = A['Authors'];												-- use content of |authors=
			if 'authors' == A:ORIGIN('Authors') then							-- but add a maint cat if the parameter is |authors=
				add_maint_cat ('authors');										-- because use of this parameter is discouraged; what to do about the aliases is a TODO:
			end
		end
		if is_set (Collaboration) then
			author_etal = true;													-- so that |display-authors=etal not required
		end
	end

	local Others = A['Others'];

	local editor_etal;
	local e	= {};																-- editors list from |editor-lastn= / |editor-firstn= pairs or |veditors=
	local Editors;

	do																			-- to limit scope of selected
		local selected = select_author_editor_source (A['Veditors'], A['Editors'], args, 'EditorList');
		if 1 == selected then
			e, editor_etal = extract_names (args, 'EditorList');				-- fetch editor list from |editorn= / |editor-lastn= / |editor-firstn=, |editor-linkn=, and |editor-maskn=
		elseif 2 == selected then
			NameListFormat = 'vanc';											-- override whatever |name-list-format= might be
			e, editor_etal = parse_vauthors_veditors (args, args.veditors, 'EditorList');	-- fetch editor list from |veditors=, |editor-linkn=, and |editor-maskn=
		elseif 3 == selected then
			Editors = A['Editors'];												-- use content of |editors=
			add_maint_cat ('editors');											-- but add a maint cat because use of this parameter is discouraged
		end
	end

	local t = {};																-- translators list from |translator-lastn= / translator-firstn= pairs
	local Translators;															-- assembled translators name list
	t = extract_names (args, 'TranslatorList');									-- fetch translator list from |translatorn= / |translator-lastn=, -firstn=, -linkn=, -maskn=
	

	local interviewers_list = {};
	local Interviewers = A['Interviewers']
	if is_set (Interviewers) then												-- add a maint cat if the |interviewers= is used
		add_maint_cat ('interviewers');											-- because use of this parameter is discouraged
	else
		interviewers_list = extract_names (args, 'InterviewerList');			-- else, process preferred interviewers parameters
	end

	local c = {};																-- contributors list from |contributor-lastn= / contributor-firstn= pairs
	local Contributors;															-- assembled contributors name list
	local Contribution = A['Contribution'];
	if in_array(config.CitationClass, {&quot;book&quot;,&quot;citation&quot;}) and not is_set(A['Periodical']) then	-- |contributor= and |contribution= only supported in book cites
		c = extract_names (args, 'ContributorList');							-- fetch contributor list from |contributorn= / |contributor-lastn=, -firstn=, -linkn=, -maskn=
		
		if 0 &lt; #c then
			if not is_set (Contribution) then									-- |contributor= requires |contribution=
				table.insert( z.message_tail, { set_error( 'contributor_missing_required_param', 'contribution')});	-- add missing contribution error message
				c = {};															-- blank the contributors' table; it is used as a flag later
			end
			if 0 == #a then														-- |contributor= requires |author=
				table.insert( z.message_tail, { set_error( 'contributor_missing_required_param', 'author')});	-- add missing author error message
				c = {};															-- blank the contributors' table; it is used as a flag later
			end
		end
	else																		-- if not a book cite
		if select_one (args, cfg.aliases['ContributorList-Last'], 'redundant_parameters', 1 ) then	-- are there contributor name list parameters?
			table.insert( z.message_tail, { set_error( 'contributor_ignored')});	-- add contributor ignored error message
		end
		Contribution = nil;														-- unset
	end

	if not is_valid_parameter_value (NameListFormat, 'name-list-format', cfg.keywords['name-list-format']) then			-- only accepted value for this parameter is 'vanc'
		NameListFormat = '';													-- anything else, set to empty string
	end

	local Year = A['Year'];
	local PublicationDate = A['PublicationDate'];
	local OrigYear = A['OrigYear'];
	local Date = A['Date'];
	local LayDate = A['LayDate'];
	------------------------------------------------- Get title data
	local Title = A['Title'];
	local ScriptTitle = A['ScriptTitle'];
	local BookTitle = A['BookTitle'];
	local Conference = A['Conference'];
	local TransTitle = A['TransTitle'];
	local TitleNote = A['TitleNote'];
	local TitleLink = A['TitleLink'];
			link_title_ok (TitleLink, A:ORIGIN ('TitleLink'), Title, 'title');	-- check for wikimarkup in |title-link= or wikimarkup in |title= when |title-link= is set

	local Chapter = A['Chapter'];
	local ScriptChapter = A['ScriptChapter'];
	local ChapterLink	-- = A['ChapterLink'];									-- deprecated as a parameter but still used internally by cite episode
	local TransChapter = A['TransChapter'];
	local TitleType = A['TitleType'];
	local Degree = A['Degree'];
	local Docket = A['Docket'];
	local ArchiveFormat = A['ArchiveFormat'];

	local ArchiveDate;
	local ArchiveURL;

	ArchiveURL, ArchiveDate = archive_url_check (A['ArchiveURL'], A['ArchiveDate'])
	
	local DeadURL = A['DeadURL']
		if not is_valid_parameter_value (DeadURL, 'dead-url', cfg.keywords ['deadurl']) then	-- set in config.defaults to 'yes'
			DeadURL = '';														-- anything else, set to empty string
		end

	local URL = A['URL']
	local URLorigin = A:ORIGIN('URL');											-- get name of parameter that holds URL
	local ChapterURL = A['ChapterURL'];
	local ChapterURLorigin = A:ORIGIN('ChapterURL');							-- get name of parameter that holds ChapterURL
	local ConferenceFormat = A['ConferenceFormat'];
	local ConferenceURL = A['ConferenceURL'];
	local ConferenceURLorigin = A:ORIGIN('ConferenceURL');						-- get name of parameter that holds ConferenceURL
	local Periodical = A['Periodical'];
	local Periodical_origin = A:ORIGIN('Periodical');							-- get the name of the periodical parameter

	local Series = A['Series'];
	
	local Volume;
	local Issue;
	local Page;
	local Pages;
	local At;
																				-- previously conference books did not support volume
--	if in_array (config.CitationClass, cfg.templates_using_volume) and not ('conference' == config.CitationClass and not is_set (Periodical)) then
	if in_array (config.CitationClass, cfg.templates_using_volume) then
		Volume = A['Volume'];
	end
																				-- conference &amp; map books do not support issue
	if in_array (config.CitationClass, cfg.templates_using_issue) and not (in_array (config.CitationClass, {'conference', 'map'}) and not is_set (Periodical))then
		Issue = A['Issue'];
	end
	local Position = '';
	if not in_array (config.CitationClass, cfg.templates_not_using_page) then
		Page = A['Page'];
		Pages = hyphen_to_dash( A['Pages'] );	
		At = A['At'];
	end

	local Edition = A['Edition'];
	local PublicationPlace = A['PublicationPlace']
	local Place = A['Place'];
	
	local PublisherName = A['PublisherName'];
	local RegistrationRequired = A['RegistrationRequired'];
		if not is_valid_parameter_value (RegistrationRequired, 'registration', cfg.keywords ['yes_true_y']) then
			RegistrationRequired=nil;
		end
	local SubscriptionRequired = A['SubscriptionRequired'];
		if not is_valid_parameter_value (SubscriptionRequired, 'subscription', cfg.keywords ['yes_true_y']) then
			SubscriptionRequired=nil;
		end
	local UrlAccess = A['UrlAccess'];
		if not is_valid_parameter_value (UrlAccess, 'url-access', cfg.keywords ['url-access']) then
			UrlAccess = nil;
		end
		if not is_set(URL) and is_set(UrlAccess) then
			UrlAccess = nil;
			table.insert( z.message_tail, { set_error( 'param_access_requires_param', {'url'}, true ) } );
		end

		if is_set (UrlAccess) and is_set (SubscriptionRequired) then			-- while not aliases, these are much the same so if both are set
			table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'url-access') .. ' and ' .. wrap_style ('parameter', 'subscription')}, true ) } );		-- add error message
			SubscriptionRequired = nil;											-- unset; prefer |access= over |subscription=
		end
		if is_set (UrlAccess) and is_set (RegistrationRequired) then			-- these are not the same but contradictory so if both are set
			table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'url-access') .. ' and ' .. wrap_style ('parameter', 'registration')}, true ) } );		-- add error message
			RegistrationRequired = nil;											-- unset; prefer |access= over |registration=
		end


	local Via = A['Via'];
	local AccessDate = A['AccessDate'];
	local Agency = A['Agency'];

	local Language = A['Language'];
	local Format = A['Format'];
	local ChapterFormat = A['ChapterFormat'];
	local DoiBroken = A['DoiBroken'];
	local ID = A['ID'];
	local ASINTLD = A['ASINTLD'];
	local IgnoreISBN = A['IgnoreISBN'];
		if not is_valid_parameter_value (IgnoreISBN, 'ignore-isbn-error', cfg.keywords ['yes_true_y']) then
			IgnoreISBN = nil;													-- anything else, set to empty string
		end
	local Embargo = A['Embargo'];
	local Class = A['Class'];													-- arxiv class identifier

	local ID_list = extract_ids( args );
	local ID_access_levels = extract_id_access_levels( args, ID_list );

	local Quote = A['Quote'];

	local LayFormat = A['LayFormat'];
	local LayURL = A['LayURL'];
	local LaySource = A['LaySource'];
	local Transcript = A['Transcript'];
	local TranscriptFormat = A['TranscriptFormat'];
	local TranscriptURL = A['TranscriptURL'] 
	local TranscriptURLorigin = A:ORIGIN('TranscriptURL');						-- get name of parameter that holds TranscriptURL

	local LastAuthorAmp = A['LastAuthorAmp'];
		if not is_valid_parameter_value (LastAuthorAmp, 'last-author-amp', cfg.keywords ['yes_true_y']) then
			LastAuthorAmp = nil;												-- set to empty string
		end
		if 'mla' == Mode then												
			LastAuthorAmp = 'yes';												-- replaces last author/editor separator with ' and ' text
		end
	local no_tracking_cats = A['NoTracking'];
		if not is_valid_parameter_value (no_tracking_cats, 'no-tracking', cfg.keywords ['yes_true_y']) then
			no_tracking_cats = nil;												-- set to empty string
		end

--local variables that are not cs1 parameters
	local use_lowercase;														-- controls capitalization of certain static text
	local this_page = mw.title.getCurrentTitle();								-- also used for COinS and for language
	local anchor_year;															-- used in the CITEREF identifier
	local COinS_date = {};														-- holds date info extracted from |date= for the COinS metadata by Module:Date verification

	local DF = A['DF'];															-- date format set in cs1|2 template
	if not is_valid_parameter_value (DF, 'df', cfg.keywords['date-format']) then	-- validate reformatting keyword
		DF = '';																-- not valid, set to empty string
	end

	local sepc;											-- separator between citation elements for CS1 a period, for CS2, a comma
	local PostScript;
	local Ref;
	sepc, PostScript, Ref = set_style (Mode:lower(), A['PostScript'], A['Ref'], config.CitationClass);
	use_lowercase = ( sepc == ',' );					-- used to control capitalization for certain static text

--check this page to see if it is in one of the namespaces that cs1 is not supposed to add to the error categories
	if not is_set (no_tracking_cats) then										-- ignore if we are already not going to categorize this page
		if in_array (this_page.nsText, cfg.uncategorized_namespaces) then
			no_tracking_cats = &quot;true&quot;;											-- set no_tracking_cats
		end
		for _,v in ipairs (cfg.uncategorized_subpages) do						-- cycle through page name patterns
			if this_page.text:match (v) then									-- test page name against each pattern
				no_tracking_cats = &quot;true&quot;;										-- set no_tracking_cats
				break;															-- bail out if one is found
			end
		end
	end

-- check for extra |page=, |pages= or |at= parameters. (also sheet and sheets while we're at it)
	select_one( args, {'page', 'p', 'pp', 'pages', 'at', 'sheet', 'sheets'}, 'redundant_parameters' );		-- this is a dummy call simply to get the error message and category

	local NoPP = A['NoPP'] 
	if is_set (NoPP) and is_valid_parameter_value (NoPP, 'nopp', cfg.keywords ['yes_true_y']) then
		NoPP = true;
	else
		NoPP = nil;																-- unset, used as a flag later
	end

	if is_set(Page) then
		if is_set(Pages) or is_set(At) then
			Pages = '';															-- unset the others
			At = '';
		end
		extra_text_in_page_check (Page);										-- add this page to maint cat if |page= value begins with what looks like p. or pp.
	elseif is_set(Pages) then
		if is_set(At) then
			At = '';															-- unset
		end
		extra_text_in_page_check (Pages);										-- add this page to maint cat if |pages= value begins with what looks like p. or pp.
	end	

-- both |publication-place= and |place= (|location=) allowed if different
	if not is_set(PublicationPlace) and is_set(Place) then
		PublicationPlace = Place;							-- promote |place= (|location=) to |publication-place
	end
	
	if PublicationPlace == Place then Place = ''; end		-- don't need both if they are the same
	
--[[
Parameter remapping for cite encyclopedia:
When the citation has these parameters:
	|encyclopedia and |title then map |title to |article and |encyclopedia to |title
	|encyclopedia and |article then map |encyclopedia to |title
	|encyclopedia then map |encyclopedia to |title

	|trans_title maps to |trans_chapter when |title is re-mapped
	|url maps to |chapterurl when |title is remapped

All other combinations of |encyclopedia, |title, and |article are not modified

]]

local Encyclopedia = A['Encyclopedia'];

	if ( config.CitationClass == &quot;encyclopaedia&quot; ) or ( config.CitationClass == &quot;citation&quot; and is_set (Encyclopedia)) then	-- test code for citation
		if is_set(Periodical) then												-- Periodical is set when |encyclopedia is set
			if is_set(Title) or is_set (ScriptTitle) then
				if not is_set(Chapter) then
					Chapter = Title;											-- |encyclopedia and |title are set so map |title to |article and |encyclopedia to |title
					ScriptChapter = ScriptTitle;
					TransChapter = TransTitle;
					ChapterURL = URL;
					if not is_set (ChapterURL) and is_set (TitleLink) then
						Chapter= '[[' .. TitleLink .. '|' .. Chapter .. ']]';
					end
					Title = Periodical;
					ChapterFormat = Format;
					Periodical = '';											-- redundant so unset
					TransTitle = '';
					URL = '';
					Format = '';
					TitleLink = '';
					ScriptTitle = '';
				end
			else																-- |title not set
				Title = Periodical;												-- |encyclopedia set and |article set or not set so map |encyclopedia to |title
				Periodical = '';												-- redundant so unset
			end
		end
	end

-- Special case for cite techreport.
	if (config.CitationClass == &quot;techreport&quot;) then								-- special case for cite techreport
		if is_set(A['Number']) then												-- cite techreport uses 'number', which other citations alias to 'issue'
			if not is_set(ID) then												-- can we use ID for the &quot;number&quot;?
				ID = A['Number'];												-- yes, use it
			else																-- ID has a value so emit error message
				table.insert( z.message_tail, { set_error('redundant_parameters', {wrap_style ('parameter', 'id') .. ' and ' .. wrap_style ('parameter', 'number')}, true )});
			end
		end	
	end

-- special case for cite mailing list
	if (config.CitationClass == &quot;mailinglist&quot;) then
		Periodical = A ['MailingList'];
	elseif 'mailinglist' == A:ORIGIN('Periodical') then
		Periodical = '';														-- unset because mailing list is only used for cite mailing list
	end

-- Account for the oddity that is {{cite conference}}, before generation of COinS data.
	if 'conference' == config.CitationClass then
		if is_set(BookTitle) then
			Chapter = Title;
--			ChapterLink = TitleLink;											-- |chapterlink= is deprecated
			ChapterURL = URL;
			ChapterURLorigin = URLorigin;
			URLorigin = '';
			ChapterFormat = Format;
			TransChapter = TransTitle;
			Title = BookTitle;
			Format = '';
--			TitleLink = '';
			TransTitle = '';
			URL = '';
		end
	elseif 'speech' ~= config.CitationClass then
		Conference = '';														-- not cite conference or cite speech so make sure this is empty string
	end

-- cite map oddities
	local Cartography = &quot;&quot;;
	local Scale = &quot;&quot;;
	local Sheet = A['Sheet'] or '';
	local Sheets = A['Sheets'] or '';
	if config.CitationClass == &quot;map&quot; then
		Chapter = A['Map'];
		ChapterURL = A['MapURL'];
		TransChapter = A['TransMap'];
		ChapterURLorigin = A:ORIGIN('MapURL');
		ChapterFormat = A['MapFormat'];
		
		Cartography = A['Cartography'];
		if is_set( Cartography ) then
			Cartography = sepc .. &quot; &quot; .. wrap_msg ('cartography', Cartography, use_lowercase);
		end		
		Scale = A['Scale'];
		if is_set( Scale ) then
			Scale = sepc .. &quot; &quot; .. Scale;
		end
	end

-- Account for the oddities that are {{cite episode}} and {{cite serial}}, before generation of COinS data.
	if 'episode' == config.CitationClass or 'serial' == config.CitationClass then
		local AirDate = A['AirDate'];
		local SeriesLink = A['SeriesLink'];

		link_title_ok (SeriesLink, A:ORIGIN ('SeriesLink'), Series, 'series');	-- check for wikimarkup in |series-link= or wikimarkup in |series= when |series-link= is set

		local Network = A['Network'];
		local Station = A['Station'];
		local s, n = {}, {};
																				-- do common parameters first
		if is_set(Network) then table.insert(n, Network); end
		if is_set(Station) then table.insert(n, Station); end
		ID = table.concat(n, sepc .. ' ');
		
		if not is_set (Date) and is_set (AirDate) then							-- promote airdate to date
			Date = AirDate;
		end

		if 'episode' == config.CitationClass then								-- handle the oddities that are strictly {{cite episode}}
			local Season = A['Season'];
			local SeriesNumber = A['SeriesNumber'];

			if is_set (Season) and is_set (SeriesNumber) then					-- these are mutually exclusive so if both are set
				table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'season') .. ' and ' .. wrap_style ('parameter', 'seriesno')}, true ) } );		-- add error message
				SeriesNumber = '';												-- unset; prefer |season= over |seriesno=
			end
																				-- assemble a table of parts concatenated later into Series
			if is_set(Season) then table.insert(s, wrap_msg ('season', Season, use_lowercase)); end
			if is_set(SeriesNumber) then table.insert(s, wrap_msg ('series', SeriesNumber, use_lowercase)); end
			if is_set(Issue) then table.insert(s, wrap_msg ('episode', Issue, use_lowercase)); end
			Issue = '';															-- unset because this is not a unique parameter
	
			Chapter = Title;													-- promote title parameters to chapter
			ScriptChapter = ScriptTitle;
			ChapterLink = TitleLink;											-- alias episodelink
			TransChapter = TransTitle;
			ChapterURL = URL;
			ChapterURLorigin = A:ORIGIN('URL');
			
			Title = Series;														-- promote series to title
			TitleLink = SeriesLink;
			Series = table.concat(s, sepc .. ' ');								-- this is concatenation of season, seriesno, episode number

			if is_set (ChapterLink) and not is_set (ChapterURL) then			-- link but not URL
				Chapter = '[[' .. ChapterLink .. '|' .. Chapter .. ']]';		-- ok to wikilink
			elseif is_set (ChapterLink) and is_set (ChapterURL) then			-- if both are set, URL links episode;
				Series = '[[' .. ChapterLink .. '|' .. Series .. ']]';			-- series links with ChapterLink (episodelink -&gt; TitleLink -&gt; ChapterLink) ugly
			end
			URL = '';															-- unset
			TransTitle = '';
			ScriptTitle = '';
			
		else																	-- now oddities that are cite serial
			Issue = '';															-- unset because this parameter no longer supported by the citation/core version of cite serial
			Chapter = A['Episode'];												-- TODO: make |episode= available to cite episode someday?
			if is_set (Series) and is_set (SeriesLink) then
				Series = '[[' .. SeriesLink .. '|' .. Series .. ']]';
			end
			Series = wrap_style ('italic-title', Series);						-- series is italicized
		end	
	end
-- end of {{cite episode}} stuff

-- Account for the oddities that are {{cite arxiv}}, {{cite biorxiv}}, {{cite citeseerx}}, before generation of COinS data.
	do
		if in_array (config.CitationClass, {'arxiv', 'biorxiv', 'citeseerx'}) then
			if not is_set (ID_list[config.CitationClass:upper()]) then			-- |arxiv= or |eprint= required for cite arxiv; |biorxiv= &amp; |citeseerx= required for their templates
				table.insert( z.message_tail, { set_error( config.CitationClass .. '_missing', {}, true ) } );		-- add error message
			end
			
			if 'arxiv' == config.CitationClass then
				Periodical = 'arXiv';											-- set to arXiv for COinS; after that, must be set to empty string
			end
			if 'biorxiv' == config.CitationClass then
				Periodical = 'bioRxiv';											-- set to bioRxiv for COinS; after that, must be set to empty string
			end
			if 'citeseerx' == config.CitationClass then
				Periodical = 'CiteSeerX';										-- set to CiteSeerX for COinS; after that, must be set to empty string
			end
		end
	end

-- handle type parameter for those CS1 citations that have default values
	if in_array(config.CitationClass, {&quot;AV-media-notes&quot;, &quot;interview&quot;, &quot;mailinglist&quot;, &quot;map&quot;, &quot;podcast&quot;, &quot;pressrelease&quot;, &quot;report&quot;, &quot;techreport&quot;, &quot;thesis&quot;}) then
		TitleType = set_titletype (config.CitationClass, TitleType);
		if is_set(Degree) and &quot;Thesis&quot; == TitleType then						-- special case for cite thesis
			TitleType = Degree .. ' ' .. cfg.title_types ['thesis']:lower();
		end
	end

	if is_set(TitleType) then													-- if type parameter is specified
		TitleType = substitute( cfg.messages['type'], TitleType);				-- display it in parentheses
	-- TODO: Hack on TitleType to fix bunched parentheses problem
	end

-- legacy: promote PublicationDate to Date if neither Date nor Year are set.
	if not is_set (Date) then
		Date = Year;															-- promote Year to Date
		Year = nil;																-- make nil so Year as empty string isn't used for CITEREF
		if not is_set (Date) and is_set(PublicationDate) then					-- use PublicationDate when |date= and |year= are not set
			Date = PublicationDate;												-- promote PublicationDate to Date
			PublicationDate = '';												-- unset, no longer needed
		end
	end

	if PublicationDate == Date then PublicationDate = ''; end					-- if PublicationDate is same as Date, don't display in rendered citation

--[[
Go test all of the date-holding parameters for valid MOS:DATE format and make sure that dates are real dates. This must be done before we do COinS because here is where
we get the date used in the metadata.

Date validation supporting code is in Module:Citation/CS1/Date_validation
]]
	do	-- create defined block to contain local variables error_message, date_parameters_list, mismatch
		local error_message = '';
																				-- AirDate has been promoted to Date so not necessary to check it
		local date_parameters_list = {['access-date']=AccessDate, ['archive-date']=ArchiveDate, ['date']=Date, ['doi-broken-date']=DoiBroken,
				['embargo']=Embargo, ['lay-date']=LayDate, ['publication-date']=PublicationDate, ['year']=Year};

		anchor_year, Embargo, error_message = dates(date_parameters_list, COinS_date);

		if is_set (Year) and is_set (Date) then									-- both |date= and |year= not normally needed; 
			local mismatch = year_date_check (Year, Date)
			if 0 == mismatch then												-- |year= does not match a year-value in |date=
				if is_set (error_message) then									-- if there is already an error message
					error_message = error_message .. ', ';						-- tack on this additional message
				end
				error_message = error_message .. '&amp;#124;year= / &amp;#124;date= mismatch';
			elseif 1 == mismatch then											-- |year= matches year-value in |date=
				add_maint_cat ('date_year');
			end
		end
		
		if not is_set(error_message) then										-- error free dates only
			local modified = false;												-- flag
			if is_set (DF) then													-- if we need to reformat dates
				modified = reformat_dates (date_parameters_list, DF, false);	-- reformat to DF format, use long month names if appropriate
			end

			if true == date_hyphen_to_dash (date_parameters_list) then					-- convert hyphens to dashes where appropriate
				modified = true;
				add_maint_cat ('date_format');									-- hyphens were converted so add maint category
			end
			
			if modified then													-- if the date_parameters_list values were modified
				AccessDate = date_parameters_list['access-date'];				-- overwrite date holding parameters with modified values
				ArchiveDate = date_parameters_list['archive-date'];
				Date = date_parameters_list['date'];
				DoiBroken = date_parameters_list['doi-broken-date'];
				LayDate = date_parameters_list['lay-date'];
				PublicationDate = date_parameters_list['publication-date'];
			end
		else
			table.insert( z.message_tail, { set_error( 'bad_date', {error_message}, true ) } );	-- add this error message
		end
	end	-- end of do

-- Account for the oddity that is {{cite journal}} with |pmc= set and |url= not set.  Do this after date check but before COInS.
-- Here we unset Embargo if PMC not embargoed (|embargo= not set in the citation) or if the embargo time has expired. Otherwise, holds embargo date
	Embargo = is_embargoed (Embargo);											-- 

	if config.CitationClass == &quot;journal&quot; and not is_set(URL) and is_set(ID_list['PMC']) then
		if not is_set (Embargo) then											-- if not embargoed or embargo has expired
			URL=cfg.id_handlers['PMC'].prefix .. ID_list['PMC'];				-- set url to be the same as the PMC external link if not embargoed
			URLorigin = cfg.id_handlers['PMC'].parameters[1];					-- set URLorigin to parameter name for use in error message if citation is missing a |title=
			if is_set(AccessDate) then											-- access date requires |url=; pmc created url is not |url=
				table.insert( z.message_tail, { set_error( 'accessdate_missing_url', {}, true ) } );
				AccessDate = '';												-- unset
			end

		end
	end

-- At this point fields may be nil if they weren't specified in the template use.  We can use that fact.
	-- Test if citation has no title
	if	not is_set(Title) and
		not is_set(TransTitle) and
		not is_set(ScriptTitle) then
			if 'episode' == config.CitationClass then							-- special case for cite episode; TODO: is there a better way to do this?
				table.insert( z.message_tail, { set_error( 'citation_missing_title', {'series'}, true ) } );
			else
				table.insert( z.message_tail, { set_error( 'citation_missing_title', {'title'}, true ) } );
			end
	end
	
	if 'none' == Title and in_array (config.CitationClass, {'journal', 'citation'}) and is_set (Periodical) and 'journal' == A:ORIGIN('Periodical') then	-- special case for journal cites
		Title = '';																-- set title to empty string
		add_maint_cat ('untitled');
	end

	check_for_url ({															-- add error message when any of these parameters contains a URL
		['title']=Title,
		[A:ORIGIN('Chapter')]=Chapter,
		[A:ORIGIN('Periodical')]=Periodical,
		[A:ORIGIN('PublisherName')] = PublisherName
		});

	-- COinS metadata (see &lt;http://ocoins.info/&gt;) for automated parsing of citation information.
	-- handle the oddity that is cite encyclopedia and {{citation |encyclopedia=something}}. Here we presume that
	-- when Periodical, Title, and Chapter are all set, then Periodical is the book (encyclopedia) title, Title
	-- is the article title, and Chapter is a section within the article.  So, we remap 
	
	local coins_chapter = Chapter;												-- default assuming that remapping not required
	local coins_title = Title;													-- et tu
	if 'encyclopaedia' == config.CitationClass or ('citation' == config.CitationClass and is_set (Encyclopedia)) then
		if is_set (Chapter) and is_set (Title) and is_set (Periodical) then		-- if all are used then
			coins_chapter = Title;												-- remap
			coins_title = Periodical;
		end
	end
	local coins_author = a;														-- default for coins rft.au 
	if 0 &lt; #c then																-- but if contributor list
		coins_author = c;														-- use that instead
	end

	-- this is the function call to COinS()
	local OCinSoutput = COinS({
		['Periodical'] = Periodical,
		['Encyclopedia'] = Encyclopedia,
		['Chapter'] = make_coins_title (coins_chapter, ScriptChapter),			-- Chapter and ScriptChapter stripped of bold / italic wikimarkup
		['Degree'] = Degree;													-- cite thesis only
		['Title'] = make_coins_title (coins_title, ScriptTitle),				-- Title and ScriptTitle stripped of bold / italic wikimarkup
		['PublicationPlace'] = PublicationPlace,
		['Date'] = COinS_date.rftdate,											-- COinS_date has correctly formatted date if Date is valid;
		['Season'] = COinS_date.rftssn,
		['Chron'] =  COinS_date.rftchron or (not COinS_date.rftdate and Date) or '',	-- chron but if not set and invalid date format use Date; keep this last bit?
		['Series'] = Series,
		['Volume'] = Volume,
		['Issue'] = Issue,
		['Pages'] = get_coins_pages (first_set ({Sheet, Sheets, Page, Pages, At}, 5)),				-- pages stripped of external links
		['Edition'] = Edition,
		['PublisherName'] = PublisherName,
		['URL'] = first_set ({ChapterURL, URL}, 2),
		['Authors'] = coins_author,
		['ID_list'] = ID_list,
		['RawPage'] = this_page.prefixedText,
	}, config.CitationClass);

-- Account for the oddities that are {{cite arxiv}}, AFTER generation of COinS data.
--	if 'arxiv' == config.CitationClass then										-- we have set rft.jtitle in COinS to arXiv, now unset so it isn't displayed
	if in_array (config.CitationClass, {'arxiv', 'biorxiv', 'citeseerx'}) then	-- we have set rft.jtitle in COinS to arXiv, bioRxiv, or CiteSeerX now unset so it isn't displayed
		Periodical = '';														-- periodical not allowed in these templates; if article has been published, use cite journal
	end

-- special case for cite newsgroup.  Do this after COinS because we are modifying Publishername to include some static text
	if 'newsgroup' == config.CitationClass then
		if is_set (PublisherName) then
			PublisherName = substitute (cfg.messages['newsgroup'], external_link( 'news:' .. PublisherName, PublisherName, A:ORIGIN('PublisherName'), nil ));
		end
	end



	-- Now perform various field substitutions.
	-- We also add leading spaces and surrounding markup and punctuation to the
	-- various parts of the citation, but only when they are non-nil.
	local EditorCount;															-- used only for choosing {ed.) or (eds.) annotation at end of editor name-list
	do
		local last_first_list;
		local control = { 
			format = NameListFormat,											-- empty string or 'vanc'
			maximum = nil,														-- as if display-authors or display-editors not set
			lastauthoramp = LastAuthorAmp,
			page_name = this_page.text,											-- get current page name so that we don't wikilink to it via editorlinkn
			mode = Mode
		};

		do																		-- do editor name list first because the now unsupported coauthors used to modify control table
			control.maximum , editor_etal = get_display_authors_editors (A['DisplayEditors'], #e, 'editors', editor_etal);
			last_first_list, EditorCount = list_people(control, e, editor_etal);

			if is_set (Editors) then
				if editor_etal then
					Editors = Editors .. ' ' .. cfg.messages['et al'];			-- add et al. to editors parameter beause |display-editors=etal
					EditorCount = 2;											-- with et al., |editors= is multiple names; spoof to display (eds.) annotation
				else
					EditorCount = 2;											-- we don't know but assume |editors= is multiple names; spoof to display (eds.) annotation
				end
			else
				Editors = last_first_list;										-- either an author name list or an empty string
			end

			if 1 == EditorCount and (true == editor_etal or 1 &lt; #e) then		-- only one editor displayed but includes etal then 
				EditorCount = 2;												-- spoof to display (eds.) annotation
			end
		end
		do																		-- now do interviewers
			control.maximum = #interviewers_list;							-- number of interviewerss
			Interviewers = list_people(control, interviewers_list, false);	-- et al not currently supported
		end
		do																		-- now do translators
			control.maximum = #t;												-- number of translators
			Translators = list_people(control, t, false);						-- et al not currently supported
		end
		do																		-- now do contributors
			control.maximum = #c;												-- number of contributors
			Contributors = list_people(control, c, false);						-- et al not currently supported
		end
		do																		-- now do authors
			control.maximum , author_etal = get_display_authors_editors (A['DisplayAuthors'], #a, 'authors', author_etal);

			last_first_list = list_people(control, a, author_etal);

			if is_set (Authors) then
				Authors, author_etal = name_has_etal (Authors, author_etal, false);	-- find and remove variations on et al.
				if author_etal then
					Authors = Authors .. ' ' .. cfg.messages['et al'];			-- add et al. to authors parameter
				end
			else
				Authors = last_first_list;										-- either an author name list or an empty string
			end
		end																		-- end of do
	
		if is_set (Authors) and is_set (Collaboration) then
			Authors = Authors .. ' (' .. Collaboration .. ')';					-- add collaboration after et al.
		end

	end

-- apply |[xx-]format= styling; at the end, these parameters hold correctly styled format annotation,
-- an error message if the associated url is not set, or an empty string for concatenation
	ArchiveFormat = style_format (ArchiveFormat, ArchiveURL, 'archive-format', 'archive-url');
	ConferenceFormat = style_format (ConferenceFormat, ConferenceURL, 'conference-format', 'conference-url');
	Format = style_format (Format, URL, 'format', 'url');
	LayFormat = style_format (LayFormat, LayURL, 'lay-format', 'lay-url');
	TranscriptFormat = style_format (TranscriptFormat, TranscriptURL, 'transcript-format', 'transcripturl');

-- special case for chapter format so no error message or cat when chapter not supported
	if not (in_array(config.CitationClass, {'web', 'news', 'journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'arxiv', 'biorxiv', 'citeseerx'}) or
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia))) then
			ChapterFormat = style_format (ChapterFormat, ChapterURL, 'chapter-format', 'chapter-url');
	end

	if not is_set(URL) then
		if in_array(config.CitationClass, {&quot;web&quot;,&quot;podcast&quot;, &quot;mailinglist&quot;}) then	-- |url= required for cite web, cite podcast, and cite mailinglist
			table.insert( z.message_tail, { set_error( 'cite_web_url', {}, true ) } );
		end
		
		-- do we have |accessdate= without either |url= or |chapter-url=?
		if is_set(AccessDate) and not is_set(ChapterURL)then					-- ChapterURL may be set when URL is not set;
			table.insert( z.message_tail, { set_error( 'accessdate_missing_url', {}, true ) } );
			AccessDate = '';
		end
	end

	local OriginalURL, OriginalURLorigin, OriginalFormat, OriginalAccess;
	DeadURL = DeadURL:lower();													-- used later when assembling archived text
	if is_set( ArchiveURL ) then
		if is_set (ChapterURL) then 											-- URL not set so if chapter-url is set apply archive url to it
			OriginalURL = ChapterURL;											-- save copy of source chapter's url for archive text
			OriginalURLorigin = ChapterURLorigin;								-- name of chapter-url parameter for error messages
			OriginalFormat = ChapterFormat;										-- and original |format=
			if 'no' ~= DeadURL then
				ChapterURL = ArchiveURL											-- swap-in the archive's url
				ChapterURLorigin = A:ORIGIN('ArchiveURL')						-- name of archive-url parameter for error messages
				ChapterFormat = ArchiveFormat or '';							-- swap in archive's format
			end
		elseif is_set (URL) then
			OriginalURL = URL;													-- save copy of original source URL
			OriginalURLorigin = URLorigin;										-- name of url parameter for error messages
			OriginalFormat = Format; 											-- and original |format=
			OriginalAccess = UrlAccess;
			if 'no' ~= DeadURL then												-- if URL set then archive-url applies to it
				URL = ArchiveURL												-- swap-in the archive's url
				URLorigin = A:ORIGIN('ArchiveURL')								-- name of archive url parameter for error messages
				Format = ArchiveFormat or '';									-- swap in archive's format
				UrlAccess = nil;												-- restricted access levels do not make sense for archived urls
			end
 		end
	end

	if in_array(config.CitationClass, {'web','news','journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'arxiv', 'biorxiv', 'citeseerx'}) or	-- if any of the 'periodical' cites except encyclopedia
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia)) then
			local chap_param;
			if is_set (Chapter) then											-- get a parameter name from one of these chapter related meta-parameters
				chap_param = A:ORIGIN ('Chapter')
			elseif is_set (TransChapter) then
				chap_param = A:ORIGIN ('TransChapter')
			elseif is_set (ChapterURL) then
				chap_param = A:ORIGIN ('ChapterURL')
			elseif is_set (ScriptChapter) then
				chap_param = A:ORIGIN ('ScriptChapter')
			else is_set (ChapterFormat)
				chap_param = A:ORIGIN ('ChapterFormat')
			end

			if is_set (chap_param) then											-- if we found one
				table.insert( z.message_tail, { set_error( 'chapter_ignored', {chap_param}, true ) } );		-- add error message
				Chapter = '';													-- and set them to empty string to be safe with concatenation
				TransChapter = '';
				ChapterURL = '';
				ScriptChapter = '';
				ChapterFormat = '';
			end
	else																		-- otherwise, format chapter / article title
		local no_quotes = false;												-- default assume that we will be quoting the chapter parameter value
		if is_set (Contribution) and 0 &lt; #c then								-- if this is a contribution with contributor(s)
			if in_array (Contribution:lower(), cfg.keywords.contribution) then	-- and a generic contribution title
				no_quotes = true;												-- then render it unquoted
			end
		end

		Chapter = format_chapter_title (ScriptChapter, Chapter, TransChapter, ChapterURL, ChapterURLorigin, no_quotes);		-- Contribution is also in Chapter
		if is_set (Chapter) then
			Chapter = Chapter .. ChapterFormat ;
			if 'map' == config.CitationClass and is_set (TitleType) then
				Chapter = Chapter .. ' ' .. TitleType;							-- map annotation here; not after title
			end
			Chapter = Chapter.. sepc .. ' ';
		elseif is_set (ChapterFormat) then										-- |chapter= not set but |chapter-format= is so ...
			Chapter = ChapterFormat .. sepc .. ' ';								-- ... ChapterFormat has error message, we want to see it
		end
	end

	-- Format main title.
	if is_set(TitleLink) and is_set(Title) then
		Title = &quot;[[&quot; .. TitleLink .. &quot;|&quot; .. Title .. &quot;]]&quot;
	end

	if in_array(config.CitationClass, {'web', 'news', 'journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'mailinglist', 'interview', 'arxiv', 'biorxiv', 'citeseerx'}) or
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia)) or
		('map' == config.CitationClass and is_set (Periodical)) then			-- special case for cite map when the map is in a periodical treat as an article
			Title = kern_quotes (Title);										-- if necessary, separate title's leading and trailing quote marks from Module provided quote marks
			Title = wrap_style ('quoted-title', Title);
			Title = script_concatenate (Title, ScriptTitle);					-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
			TransTitle= wrap_style ('trans-quoted-title', TransTitle );
	elseif 'report' == config.CitationClass then								-- no styling for cite report
		Title = script_concatenate (Title, ScriptTitle);						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
		TransTitle= wrap_style ('trans-quoted-title', TransTitle );				-- for cite report, use this form for trans-title
	else
		Title = wrap_style ('italic-title', Title);
		Title = script_concatenate (Title, ScriptTitle);						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
		TransTitle = wrap_style ('trans-italic-title', TransTitle);
	end

	local TransError = &quot;&quot;;
	if is_set(TransTitle) then
		if is_set(Title) then
			TransTitle = &quot; &quot; .. TransTitle;
		else
			TransError = &quot; &quot; .. set_error( 'trans_missing_title', {'title'} );
		end
	end
	
	if is_set(Title) then
		if not is_set(TitleLink) and is_set(URL) then
			
			Title = external_link( URL, Title, URLorigin, UrlAccess ) .. TransTitle .. TransError .. Format;
-- this experiment hidden 2016-04-10; see Help_talk:Citation_Style_1#Recycled_urls
--			local temp_title = external_link( URL, Title, URLorigin ) .. TransError .. Format;	-- do this so we get error message even if url is usurped no archive
--			if in_array (DeadURL, {'unfit no archive', 'usurped no archive'}) then	-- when url links to inappropriate location and there is no archive of original source available
--				local err_msg
--				if temp_title:match ('%[%S+%s+(.+)%](&lt;.+)') then				-- if there is an error message
--					Title, err_msg = temp_title:match ('%[%S+%s+(.+)%](&lt;.+)');	-- strip off external link; TODO: find a better to do this
--					Title = Title .. (err_msg or '');
--				end
--			else
--				Title = temp_title;
--			end

			URL = '';															-- unset these because no longer needed
			Format = &quot;&quot;;
		else
			Title = Title .. TransTitle .. TransError;
		end
	end

	if is_set(Place) then
		Place = &quot; &quot; .. wrap_msg ('written', Place, use_lowercase) .. sepc .. &quot; &quot;;
	end

	if is_set (Conference) then
		if is_set (ConferenceURL) then
			Conference = external_link( ConferenceURL, Conference, ConferenceURLorigin, nil );
		end
		Conference = sepc .. &quot; &quot; .. Conference .. ConferenceFormat;
	elseif is_set(ConferenceURL) then
		Conference = sepc .. &quot; &quot; .. external_link( ConferenceURL, nil, ConferenceURLorigin, nil );
	end

	if not is_set(Position) then
		local Minutes = A['Minutes'];
		local Time = A['Time'];

		if is_set(Minutes) then
			if is_set (Time) then
				table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'minutes') .. ' and ' .. wrap_style ('parameter', 'time')}, true ) } );
			end
			Position = &quot; &quot; .. Minutes .. &quot; &quot; .. cfg.messages['minutes'];
		else
			if is_set(Time) then
				local TimeCaption = A['TimeCaption']
				if not is_set(TimeCaption) then
					TimeCaption = cfg.messages['event'];
					if sepc ~= '.' then
						TimeCaption = TimeCaption:lower();
					end
				end
				Position = &quot; &quot; .. TimeCaption .. &quot; &quot; .. Time;
			end
		end
	else
		Position = &quot; &quot; .. Position;
		At = '';
	end

	Page, Pages, Sheet, Sheets = format_pages_sheets (Page, Pages, Sheet, Sheets, config.CitationClass, Periodical_origin, sepc, NoPP, use_lowercase, Mode);

	At = is_set(At) and (sepc .. &quot; &quot; .. At) or &quot;&quot;;
	Position = is_set(Position) and (sepc .. &quot; &quot; .. Position) or &quot;&quot;;
	if config.CitationClass == 'map' then
		local Section = A['Section'];
		local Sections = A['Sections'];
		local Inset = A['Inset'];
		
		if is_set( Inset ) then
			Inset = sepc .. &quot; &quot; .. wrap_msg ('inset', Inset, use_lowercase);
		end			

		if is_set( Sections ) then
			Section = sepc .. &quot; &quot; .. wrap_msg ('sections', Sections, use_lowercase);
		elseif is_set( Section ) then
			Section = sepc .. &quot; &quot; .. wrap_msg ('section', Section, use_lowercase);
		end
		At = At .. Inset .. Section;		
	end	

	if is_set (Language) then
		Language = language_parameter (Language);								-- format, categories, name from ISO639-1, etc
	else
		Language=&quot;&quot;;															-- language not specified so make sure this is an empty string;
	--[[ TODO: need to extract the wrap_msg from language_parameter
	so that we can solve parentheses bunching problem with Format/Language/TitleType
	]]
	end

	Others = is_set(Others) and (sepc .. &quot; &quot; .. Others) or &quot;&quot;;
	
	if is_set (Translators) then
		if 'mla' == Mode then
			Others = sepc .. ' Trans. ' .. Translators .. Others;
		else
			Others = sepc .. ' ' .. wrap_msg ('translated', Translators, use_lowercase) .. Others;
		end
	end
	if is_set (Interviewers) then
		Others = sepc .. ' ' .. wrap_msg ('interview', Interviewers, use_lowercase) .. Others;
	end
	
	TitleNote = is_set(TitleNote) and (sepc .. &quot; &quot; .. TitleNote) or &quot;&quot;;
	if is_set (Edition) then
		if Edition:match ('%f[%a][Ee]d%.?$') or Edition:match ('%f[%a][Ee]dition$') then
			add_maint_cat ('extra_text', 'edition');
		end
		if 'mla' == Mode then
			Edition = '. ' .. Edition .. ' ed.';
		else
			Edition = &quot; &quot; .. wrap_msg ('edition', Edition);
		end
	else
		Edition = '';
	end

	Series = is_set(Series) and (sepc .. &quot; &quot; .. Series) or &quot;&quot;;
	if 'mla' == Mode then														-- not in brackets for mla
		OrigYear = is_set(OrigYear) and (&quot;. &quot; .. OrigYear) or &quot;&quot;;
	else
		OrigYear = is_set(OrigYear) and (&quot; [&quot; .. OrigYear .. &quot;]&quot;) or &quot;&quot;;
	end
	Agency = is_set(Agency) and (sepc .. &quot; &quot; .. Agency) or &quot;&quot;;

	Volume = format_volume_issue (Volume, Issue, config.CitationClass, Periodical_origin, sepc, use_lowercase, Mode);

	------------------------------------ totally unrelated data
	if is_set(Via) then
		Via = &quot; &quot; .. wrap_msg ('via', Via);
	end

--[[
Subscription implies paywall; Registration does not.  If both are used in a citation, the subscription required link
note is displayed. There are no error messages for this condition.

]]
	if is_set (SubscriptionRequired) then
		SubscriptionRequired = sepc .. &quot; &quot; .. cfg.messages['subscription'];		-- subscription required message
	elseif is_set (RegistrationRequired) then
		SubscriptionRequired = sepc .. &quot; &quot; .. cfg.messages['registration'];		-- registration required message
	else
		SubscriptionRequired = '';												-- either or both might be set to something other than yes true y
	end

	if is_set(AccessDate) then
		local retrv_text = &quot; &quot; .. cfg.messages['retrieved']

		AccessDate = nowrap_date (AccessDate);									-- wrap in nowrap span if date in appropriate format
		if 'mla' == Mode then													-- retrieved text not used in mla
			AccessDate = ' ' .. AccessDate;
		else
			if (sepc ~= &quot;.&quot;) then retrv_text = retrv_text:lower() end			-- if mode is cs2, lower case
			AccessDate = substitute (retrv_text, AccessDate);					-- add retrieved text
		end
		AccessDate = substitute (cfg.presentation['accessdate'], {sepc, AccessDate});	-- allow editors to hide accessdates
	end
	
	if is_set(ID) then ID = sepc ..&quot; &quot;.. ID; end
   	if &quot;thesis&quot; == config.CitationClass and is_set(Docket) then
		ID = sepc ..&quot; Docket &quot;.. Docket .. ID;
	end
   	if &quot;report&quot; == config.CitationClass and is_set(Docket) then					-- for cite report when |docket= is set
		ID = sepc .. ' ' .. Docket;												-- overwrite ID even if |id= is set
	end

	ID_list = build_id_list( ID_list, {IdAccessLevels=ID_access_levels, DoiBroken = DoiBroken, ASINTLD = ASINTLD, IgnoreISBN = IgnoreISBN, Embargo=Embargo, Class = Class} );

	if is_set(URL) then
		URL = &quot; &quot; .. external_link( URL, nil, URLorigin, UrlAccess );
	end

	if is_set(Quote) then
		if Quote:sub(1,1) == '&quot;' and Quote:sub(-1,-1) == '&quot;' then				-- if first and last characters of quote are quote marks
			Quote = Quote:sub(2,-2);											-- strip them off
		end
		Quote = sepc ..&quot; &quot; .. wrap_style ('quoted-text', Quote ); 				-- wrap in &lt;q&gt;...&lt;/q&gt; tags
		PostScript = &quot;&quot;;														-- cs1|2 does not supply terminal punctuation when |quote= is set
	end
	
	local Archived
	if is_set(ArchiveURL) then
		if not is_set(ArchiveDate) then
			ArchiveDate = set_error('archive_missing_date');
		end
		if &quot;no&quot; == DeadURL then
			local arch_text = cfg.messages['archived'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			Archived = sepc .. &quot; &quot; .. substitute( cfg.messages['archived-not-dead'],
				{ external_link( ArchiveURL, arch_text, A:ORIGIN('ArchiveURL'), nil ) .. ArchiveFormat, ArchiveDate } );
			if not is_set(OriginalURL) then
				Archived = Archived .. &quot; &quot; .. set_error('archive_missing_url');							   
			end
		elseif is_set(OriginalURL) then											-- DeadURL is empty, 'yes', 'true', 'y', 'unfit', 'usurped'
			local arch_text = cfg.messages['archived-dead'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			if in_array (DeadURL, {'unfit', 'usurped', 'bot: unknown'}) then
				Archived = sepc .. &quot; &quot; .. 'Archived from the original on ' .. ArchiveDate;	-- format already styled
				if 'bot: unknown' == DeadURL then
					add_maint_cat ('bot:_unknown');								-- and add a category if not already added
				else
					add_maint_cat ('unfit');									-- and add a category if not already added
				end
			else																-- DeadURL is empty, 'yes', 'true', or 'y'
				Archived = sepc .. &quot; &quot; .. substitute( arch_text,
					{ external_link( OriginalURL, cfg.messages['original'], OriginalURLorigin, OriginalAccess ) .. OriginalFormat, ArchiveDate } );	-- format already styled
			end	
		else
			local arch_text = cfg.messages['archived-missing'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			Archived = sepc .. &quot; &quot; .. substitute( arch_text, 
				{ set_error('archive_missing_url'), ArchiveDate } );
		end
	elseif is_set (ArchiveFormat) then
		Archived = ArchiveFormat;												-- if set and ArchiveURL not set ArchiveFormat has error message
	else
		Archived = &quot;&quot;
	end
	
	local Lay = '';
	if is_set(LayURL) then
		if is_set(LayDate) then LayDate = &quot; (&quot; .. LayDate .. &quot;)&quot; end
		if is_set(LaySource) then 
			LaySource = &quot; &amp;ndash; ''&quot; .. safe_for_italics(LaySource) .. &quot;''&quot;;
		else
			LaySource = &quot;&quot;;
		end
		if sepc == '.' then
			Lay = sepc .. &quot; &quot; .. external_link( LayURL, cfg.messages['lay summary'], A:ORIGIN('LayURL'), nil ) .. LayFormat .. LaySource .. LayDate
		else
			Lay = sepc .. &quot; &quot; .. external_link( LayURL, cfg.messages['lay summary']:lower(), A:ORIGIN('LayURL'), nil ) .. LayFormat .. LaySource .. LayDate
		end			
	elseif is_set (LayFormat) then												-- Test if |lay-format= is given without giving a |lay-url=
		Lay = sepc .. LayFormat;												-- if set and LayURL not set, then LayFormat has error message
	end

	if is_set(Transcript) then
		if is_set(TranscriptURL) then
			Transcript = external_link( TranscriptURL, Transcript, TranscriptURLorigin, nil );
		end
		Transcript = sepc .. ' ' .. Transcript .. TranscriptFormat;
	elseif is_set(TranscriptURL) then
		Transcript = external_link( TranscriptURL, nil, TranscriptURLorigin, nil );
	end

	local Publisher;
	if is_set(PublicationDate) then
		PublicationDate = wrap_msg ('published', PublicationDate);
	end
	if is_set(PublisherName) then
		if is_set(PublicationPlace) then
			Publisher = sepc .. &quot; &quot; .. PublicationPlace .. &quot;: &quot; .. PublisherName .. PublicationDate;
		else
			Publisher = sepc .. &quot; &quot; .. PublisherName .. PublicationDate;  
		end			
	elseif is_set(PublicationPlace) then 
		Publisher= sepc .. &quot; &quot; .. PublicationPlace .. PublicationDate;
	else 
		Publisher = PublicationDate;
	end
	
	-- Several of the above rely upon detecting this as nil, so do it last.
	if is_set(Periodical) then
		if is_set(Title) or is_set(TitleNote) then 
			Periodical = sepc .. &quot; &quot; .. wrap_style ('italic-title', Periodical) 
		else 
			Periodical = wrap_style ('italic-title', Periodical)
		end
	end

--[[
Handle the oddity that is cite speech.  This code overrides whatever may be the value assigned to TitleNote (through |department=) and forces it to be &quot; (Speech)&quot; so that
the annotation directly follows the |title= parameter value in the citation rather than the |event= parameter value (if provided).
]]
	if &quot;speech&quot; == config.CitationClass then				-- cite speech only
		TitleNote = &quot; (Speech)&quot;;							-- annotate the citation
		if is_set (Periodical) then							-- if Periodical, perhaps because of an included |website= or |journal= parameter 
			if is_set (Conference) then						-- and if |event= is set
				Conference = Conference .. sepc .. &quot; &quot;;		-- then add appropriate punctuation to the end of the Conference variable before rendering
			end
		end
	end

	-- Piece all bits together at last.  Here, all should be non-nil.
	-- We build things this way because it is more efficient in LUA
	-- not to keep reassigning to the same string variable over and over.

	local tcommon;
	local tcommon2;																-- used for book cite when |contributor= is set
	
	if in_array(config.CitationClass, {&quot;journal&quot;,&quot;citation&quot;}) and is_set(Periodical) then
		if is_set(Others) then Others = Others .. sepc .. &quot; &quot; end
		if 'mla' == Mode then
			tcommon = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Edition, Publisher, Agency, Volume}, sepc );
		else
			tcommon = safe_join( {Others, Title, TitleNote, Conference, Periodical, Format, TitleType, Series, 
				Language, Edition, Publisher, Agency, Volume}, sepc );
		end		
	elseif in_array(config.CitationClass, {&quot;book&quot;,&quot;citation&quot;}) and not is_set(Periodical) then		-- special cases for book cites
		if is_set (Contributors) then											-- when we are citing foreword, preface, introduction, etc
			tcommon = safe_join( {Title, TitleNote}, sepc );					-- author and other stuff will come after this and before tcommon2
			if 'mla' == Mode then
				tcommon2 = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Volume, Edition, Publisher, Agency}, sepc );
			else
				tcommon2 = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Volume, Others, Edition, Publisher, Agency}, sepc );
			end
		elseif 'mla' == Mode then
			tcommon = safe_join( {TitleNote, Conference, Periodical, Format, TitleType, Series, Language, Volume, Publisher, Agency}, sepc );
		else
			tcommon = safe_join( {Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, Volume, Others, Edition, Publisher, Agency}, sepc );
		end

	elseif 'map' == config.CitationClass then									-- special cases for cite map
		if is_set (Chapter) then												-- map in a book; TitleType is part of Chapter
			tcommon = safe_join( {Title, Format, Edition, Scale, Series, Language, Cartography, Others, Publisher, Volume}, sepc );
		elseif is_set (Periodical) then											-- map in a periodical
			tcommon = safe_join( {Title, TitleType, Format, Periodical, Scale, Series, Language, Cartography, Others, Publisher, Volume}, sepc );
		else																	-- a sheet or stand-alone map
			tcommon = safe_join( {Title, TitleType, Format, Edition, Scale, Series, Language, Cartography, Others, Publisher}, sepc );
		end
		
	elseif 'episode' == config.CitationClass then								-- special case for cite episode
		tcommon = safe_join( {Title, TitleNote, TitleType, Series, Transcript, Language, Edition, Publisher}, sepc );

	elseif ('news' == config.CitationClass) and ('mla' == Mode) then			-- special case for cite news in MLA mode
		tcommon = safe_join( {Periodical, Format, TitleType, Series, Language, Edition, Agency}, sepc );

	elseif ('web' == config.CitationClass) and ('mla' == Mode) then				-- special case for cite web in MLA mode
		tcommon = safe_join( {Periodical, Format, TitleType, Series, Language, 
			Edition, Publisher, Agency}, sepc );

	else																		-- all other CS1 templates
		tcommon = safe_join( {Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, 
			Volume, Others, Edition, Publisher, Agency}, sepc );
	end
	
	if #ID_list &gt; 0 then
		ID_list = safe_join( { sepc .. &quot; &quot;,  table.concat( ID_list, sepc .. &quot; &quot; ), ID }, sepc );
	else
		ID_list = ID;
	end
	
	local idcommon = safe_join( { ID_list, URL, Archived, AccessDate, Via, SubscriptionRequired, Lay, Quote }, sepc );
	local text;
	local pgtext = Position .. Sheet .. Sheets .. Page .. Pages .. At;

	if is_set(Date) then
		if ('mla' == Mode) then
			if in_array (config.CitationClass, {'book', 'news', 'web'}) then
				Date = ', ' .. Date;											-- origyear follows title in mla
			elseif 'journal' == config.CitationClass then
				Date = ', (' .. Date .. ')';
			end
		elseif is_set (Authors) or is_set (Editors) then						-- date follows authors or editors when authors not set
			Date = &quot; (&quot; .. Date ..&quot;)&quot; .. OrigYear .. sepc .. &quot; &quot;;				-- in paranetheses
		else																	-- neither of authors and editors set
			if (string.sub(tcommon,-1,-1) == sepc) then							-- if the last character of tcommon is sepc
				Date = &quot; &quot; .. Date .. OrigYear;									-- Date does not begin with sepc
			else
				Date = sepc .. &quot; &quot; .. Date .. OrigYear;							-- Date begins with sepc
			end
		end
	end	
	if is_set(Authors) then
		if (not is_set (Date)) or ('mla' == Mode) then							-- when date is set it's in parentheses; no Authors termination
			Authors = terminate_name_list (Authors, sepc);						-- when no date, terminate with 0 or 1 sepc and a space
		end
		if is_set(Editors) then
			local in_text = &quot; &quot;;
			local post_text = &quot;&quot;;
			if is_set(Chapter) and 0 == #c and 'mla' ~= Mode then
				in_text = in_text .. cfg.messages['in'] .. &quot; &quot;
				if (sepc ~= '.') then in_text = in_text:lower() end				-- lowercase for cs2
			elseif is_set(Chapter) and 'mla' == Mode then
				if EditorCount &lt;= 1 then
					in_text = '. Ed. ';
				else
					in_text = '. Eds. ';
				end
			else
				if EditorCount &lt;= 1 then
					post_text = &quot;, &quot; .. cfg.messages['editor'];
				else
					post_text = &quot;, &quot; .. cfg.messages['editors'];
				end
			end 
			Editors = terminate_name_list (in_text .. Editors .. post_text, sepc);	-- terminate with 0 or 1 sepc and a space
		end
		if is_set (Contributors) then											-- book cite and we're citing the intro, preface, etc
			local by_text = sepc .. ' ' .. cfg.messages['by'] .. ' ';
			if (sepc ~= '.') then by_text = by_text:lower() end					-- lowercase for cs2
			Authors = by_text .. Authors;										-- author follows title so tweak it here
			if is_set (Editors) and is_set (Date) and ('mla' ~= Mode) then		-- when Editors make sure that Authors gets terminated
				Authors = terminate_name_list (Authors, sepc);					-- terminate with 0 or 1 sepc and a space
			end
			if (not is_set (Date)) or ('mla' == Mode) then											-- when date is set it's in parentheses; no Contributors termination
				Contributors = terminate_name_list (Contributors, sepc);		-- terminate with 0 or 1 sepc and a space
			end
			if 'mla' == Mode then
				text = safe_join( {Contributors, Chapter, tcommon, OrigYear, Authors, Place, Others, Editors, tcommon2, Date, pgtext, idcommon }, sepc );
			else
				text = safe_join( {Contributors, Date, Chapter, tcommon, Authors, Place, Editors, tcommon2, pgtext, idcommon }, sepc );
			end
		elseif 'mla' == Mode then
			tcommon = tcommon .. Date;											-- hack to avoid duplicate separators
			text = safe_join( {Authors, Chapter, Title, OrigYear, Others, Editors, Edition, Place, tcommon, pgtext, idcommon }, sepc );
		else
			text = safe_join( {Authors, Date, Chapter, Place, Editors, tcommon, pgtext, idcommon }, sepc );
		end
	elseif is_set(Editors) then
		if is_set(Date) then
			if EditorCount &lt;= 1 then
				Editors = Editors .. &quot;, &quot; .. cfg.messages['editor'];
			else
				Editors = Editors .. &quot;, &quot; .. cfg.messages['editors'];
			end
		else
			if EditorCount &lt;= 1 then
				Editors = Editors .. &quot; (&quot; .. cfg.messages['editor'] .. &quot;)&quot; .. sepc .. &quot; &quot;
			else
				Editors = Editors .. &quot; (&quot; .. cfg.messages['editors'] .. &quot;)&quot; .. sepc .. &quot; &quot;
			end
		end
		if 'mla' == Mode then
			if in_array(config.CitationClass, {'journal', 'news', 'web'}) and is_set(Periodical) then
				text = safe_join( {Editors, Title, Place, tcommon, pgtext, Date, idcommon}, sepc );
			else
				text = safe_join( {Editors, Chapter, Title, Place, tcommon, Date, pgtext, idcommon}, sepc );
			end
		else
			text = safe_join( {Editors, Date, Chapter, Place, tcommon, pgtext, idcommon}, sepc );
		end
	elseif 'mla' == Mode then
		if in_array(config.CitationClass, {'journal', 'news', 'web'}) and is_set(Periodical) then
			text = safe_join( {Title, Place, tcommon, pgtext, Date, idcommon}, sepc );
		else
			text = safe_join( {Chapter, Title, Place, tcommon, Date, pgtext, idcommon}, sepc );
		end
	else
		if in_array(config.CitationClass, {&quot;journal&quot;,&quot;citation&quot;}) and is_set(Periodical) then
			text = safe_join( {Chapter, Place, tcommon, pgtext, Date, idcommon}, sepc );
		else
			text = safe_join( {Chapter, Place, tcommon, Date, pgtext, idcommon}, sepc );
		end
	end
	
	if is_set(PostScript) and PostScript ~= sepc then
		text = safe_join( {text, sepc}, sepc );  --Deals with italics, spaces, etc.
		text = text:sub(1,-sepc:len()-1);
	end	
	
	text = safe_join( {text, PostScript}, sepc );

	-- Now enclose the whole thing in a &lt;cite/&gt; element
	local options = {};
	
	if is_set(config.CitationClass) and config.CitationClass ~= &quot;citation&quot; then
		options.class = config.CitationClass;
		options.class = &quot;citation &quot; .. config.CitationClass;					-- class=citation required for blue highlight when used with |ref=
	else
		options.class = &quot;citation&quot;;
	end
	
	if is_set(Ref) and Ref:lower() ~= &quot;none&quot; then								-- set reference anchor if appropriate
		local id = Ref
		if ('harv' == Ref ) then
			local namelist = {};												-- holds selected contributor, author, editor name list
			local year = first_set ({Year, anchor_year}, 2);					-- Year first for legacy citations and for YMD dates that require disambiguation

			if #c &gt; 0 then														-- if there is a contributor list
				namelist = c;													-- select it
			elseif #a &gt; 0 then													-- or an author list
				namelist = a;
			elseif #e &gt; 0 then													-- or an editor list
				namelist = e;
			end
			if #namelist &gt; 0 then												-- if there are names in namelist
				id = anchor_id (namelist, year);								-- go make the CITEREF anchor
			else
				id = '';														-- unset
			end
		end
		options.id = id;
	end
	
	if string.len(text:gsub(&quot;&lt;span[^&gt;/]*&gt;(.-)&lt;/span&gt;&quot;, &quot;%1&quot;):gsub(&quot;%b&lt;&gt;&quot;,&quot;&quot;)) &lt;= 2 then	-- remove &lt;span&gt; tags and other html-like markup; then get length of what remains
		z.error_categories = {};
		text = set_error('empty_citation');
		z.message_tail = {};
	end
	
	if is_set(options.id) then													-- here we wrap the rendered citation in &lt;cite ...&gt;...&lt;/cite&gt; tags
		text = substitute (cfg.presentation['cite-id'], {mw.uri.anchorEncode(options.id), mw.text.nowiki(options.class), text});	-- when |ref= is set
	else
		text = substitute (cfg.presentation['cite'], {mw.text.nowiki(options.class), text});	-- all other cases
	end		

	text = text .. substitute (cfg.presentation['ocins'], {OCinSoutput});		-- append metadata to the citation
	
	if #z.message_tail ~= 0 then
		text = text .. &quot; &quot;;
		for i,v in ipairs( z.message_tail ) do
			if is_set(v[1]) then
				if i == #z.message_tail then
					text = text .. error_comment( v[1], v[2] );
				else
					text = text .. error_comment( v[1] .. &quot;; &quot;, v[2] );
				end
			end
		end
	end

	if #z.maintenance_cats ~= 0 then
		text = text .. '&lt;span class=&quot;citation-comment&quot; style=&quot;display:none; color:#33aa33; margin-left:0.3em&quot;&gt;';
		for _, v in ipairs( z.maintenance_cats ) do								-- append maintenance categories
			text = text .. v .. ' ([[:Category:' .. v ..'|link]])';
		end
		text = text .. '&lt;/span&gt;';												-- maintenance mesages (realy just the names of the categories for now)
	end
	
	no_tracking_cats = no_tracking_cats:lower();
	if in_array(no_tracking_cats, {&quot;&quot;, &quot;no&quot;, &quot;false&quot;, &quot;n&quot;}) then
		for _, v in ipairs( z.error_categories ) do
			text = text .. '[[Category:' .. v ..']]';
		end
		for _, v in ipairs( z.maintenance_cats ) do								-- append maintenance categories
			text = text .. '[[Category:' .. v ..']]';
		end
		for _, v in ipairs( z.properties_cats ) do								-- append maintenance categories
			text = text .. '[[Category:' .. v ..']]';
		end
	end
	
	return text
end


--[[--------------------------&lt; C S 1 . C I T A T I O N &gt;------------------------------------------------------

This is used by templates such as {{cite book}} to create the actual citation text.

]]

function cs1.citation(frame)
	Frame = frame;																-- save a copy incase we need to display an error message in preview mode
	local pframe = frame:getParent()
	local validation, utilities, identifiers, metadata;
	
	if nil ~= string.find (frame:getTitle(), 'sandbox', 1, true) then			-- did the {{#invoke:}} use sandbox version?
		cfg = mw.loadData ('Module:Citation/CS1/Configuration/sandbox');		-- load sandbox versions of support modules
		whitelist = mw.loadData ('Module:Citation/CS1/Whitelist/sandbox');
		utilities = require ('Module:Citation/CS1/Utilities/sandbox');
		validation = require ('Module:Citation/CS1/Date_validation/sandbox');
		identifiers = require ('Module:Citation/CS1/Identifiers/sandbox');
		metadata = require ('Module:Citation/CS1/COinS/sandbox');
		
	else																		-- otherwise
		cfg = mw.loadData ('Module:Citation/CS1/Configuration');				-- load live versions of support modules
		whitelist = mw.loadData ('Module:Citation/CS1/Whitelist');
		utilities = require ('Module:Citation/CS1/Utilities');
		validation = require ('Module:Citation/CS1/Date_validation');
		identifiers = require ('Module:Citation/CS1/Identifiers');
		metadata = require ('Module:Citation/CS1/COinS');
	end

	utilities.set_selected_modules (cfg);										-- so that functions in Utilities can see the cfg tables
	identifiers.set_selected_modules (cfg, utilities);							-- so that functions in Identifiers can see the selected cfg tables and selected Utilities module
	validation.set_selected_modules (utilities);								-- so that functions in Date validataion can see the selected Utilities module
	metadata.set_selected_modules (cfg, utilities);								-- so that functions in COinS can see the selected cfg tables and selected Utilities module

	dates = validation.dates;													-- imported functions from Module:Citation/CS1/Date validation
	year_date_check = validation.year_date_check;
	reformat_dates = validation.reformat_dates;
	date_hyphen_to_dash = validation.date_hyphen_to_dash;
	
	is_set = utilities.is_set;													-- imported functions from Module:Citation/CS1/Utilities
	in_array = utilities.in_array;
	substitute = utilities.substitute;
	error_comment = utilities.error_comment;
	set_error = utilities.set_error;
	select_one = utilities.select_one;
	add_maint_cat = utilities.add_maint_cat;
	wrap_style = utilities.wrap_style;
	safe_for_italics = utilities.safe_for_italics;
	remove_wiki_link = utilities.remove_wiki_link;

	z = utilities.z;															-- table of error and category tables in Module:Citation/CS1/Utilities

	extract_ids = identifiers.extract_ids;										-- imported functions from Module:Citation/CS1/Identifiers
	build_id_list = identifiers.build_id_list;
	is_embargoed = identifiers.is_embargoed;
	extract_id_access_levels = identifiers.extract_id_access_levels;
	
	make_coins_title = metadata.make_coins_title;								-- imported functions from Module:Citation/CS1/COinS
	get_coins_pages = metadata.get_coins_pages;
	COinS = metadata.COinS;

	local args = {};															-- table where we store all of the template's arguments
	local suggestions = {};														-- table where we store suggestions if we need to loadData them
	local error_text, error_state;

	local config = {};															-- table to store parameters from the module {{#invoke:}}
	for k, v in pairs( frame.args ) do
		config[k] = v;
--		args[k] = v;															-- debug tool that allows us to render a citation from module {{#invoke:}}
	end	

	local capture;																-- the single supported capture when matching unknown parameters using patterns
	for k, v in pairs( pframe.args ) do
		if v ~= '' then
			if not validate( k, config.CitationClass ) then			
				error_text = &quot;&quot;;
				if type( k ) ~= 'string' then
					-- Exclude empty numbered parameters
					if v:match(&quot;%S+&quot;) ~= nil then
						error_text, error_state = set_error( 'text_ignored', {v}, true );
					end
				elseif validate( k:lower(), config.CitationClass ) then 
					error_text, error_state = set_error( 'parameter_ignored_suggest', {k, k:lower()}, true );
				else
					if nil == suggestions.suggestions then						-- if this table is nil then we need to load it
						if nil ~= string.find (frame:getTitle(), 'sandbox', 1, true) then			-- did the {{#invoke:}} use sandbox version?
							suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions/sandbox' );	-- use the sandbox version
						else
							suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions' );			-- use the live version
						end
					end
					for pattern, param in pairs (suggestions.patterns) do		-- loop through the patterns to see if we can suggest a proper parameter
						capture = k:match (pattern);							-- the whole match if no caputre in pattern else the capture if a match
						if capture then											-- if the pattern matches 
							param = substitute( param, capture );				-- add the capture to the suggested parameter (typically the enumerator)
							error_text, error_state = set_error( 'parameter_ignored_suggest', {k, param}, true );	-- set the error message
						end
					end
					if not is_set (error_text) then								-- couldn't match with a pattern, is there an expicit suggestion?
						if suggestions.suggestions[ k:lower() ] ~= nil then
							error_text, error_state = set_error( 'parameter_ignored_suggest', {k, suggestions.suggestions[ k:lower() ]}, true );
						else
							error_text, error_state = set_error( 'parameter_ignored', {k}, true );
							v = '';												-- unset value assigned to unrecognized parameters (this for the limited parameter lists)
						end
					end
				end				  
				if error_text ~= '' then
					table.insert( z.message_tail, {error_text, error_state} );
				end				
			end
			missing_pipe_check (v);												-- do we think that there is a parameter that is missing a pipe?
			
			args[k] = v;
		elseif args[k] ~= nil or (k == 'postscript') then
			args[k] = v;
		end		
	end	

	for k, v in pairs( args ) do
		if 'string' == type (k) then											-- don't evaluate positional parameters
			has_invisible_chars (k, v);
		end
	end
	return citation0( config, args)
end

return cs1;</text>
      <sha1>3f3q4btal4dccpz3fgm2gs5lzro4q94</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/COinS</title>
    <ns>828</ns>
    <id>48828620</id>
    <revision>
      <id>778352763</id>
      <parentid>777799217</parentid>
      <timestamp>2017-05-02T16:22:11Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>long-time corrupted-metadata bug fixed;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="16669">
local coins = {};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array, remove_wiki_link;										-- functions in Module:Citation/CS1/Utilities

local cfg;																		-- table of configuration tables that are defined in Module:Citation/CS1/Configuration


--[[--------------------------&lt; S T R I P _ A P O S T R O P H E _ M A R K U P &gt;--------------------------------

Strip wiki italic and bold markup from argument so that it doesn't contaminate COinS metadata.
This function strips common patterns of apostrophe markup.  We presume that editors who have taken the time to
markup a title have, as a result, provided valid markup. When they don't, some single apostrophes are left behind.

]]

local function strip_apostrophe_markup (argument)
	if not is_set (argument) then return argument; end

	if argument:find ( &quot;''&quot;, 1, true ) == nil then								-- Is there at least one double apostrophe?  If not, exit.
		return argument;
	end

	while true do
		if argument:find ( &quot;'''''&quot;, 1, true ) then								-- bold italic (5)
			argument=argument:gsub(&quot;%'%'%'%'%'&quot;, &quot;&quot;);							-- remove all instances of it
		elseif argument:find ( &quot;''''&quot;, 1, true ) then							-- italic start and end without content (4)
			argument=argument:gsub(&quot;%'%'%'%'&quot;, &quot;&quot;);
		elseif argument:find ( &quot;'''&quot;, 1, true ) then							-- bold (3)
			argument=argument:gsub(&quot;%'%'%'&quot;, &quot;&quot;);
		elseif argument:find ( &quot;''&quot;, 1, true ) then								-- italic (2)
			argument=argument:gsub(&quot;%'%'&quot;, &quot;&quot;);
		else
			break;
		end
	end
	return argument;															-- done
end


--[[--------------------------&lt; M A K E _ C O I N S _ T I T L E &gt;----------------------------------------------

Makes a title for COinS from Title and / or ScriptTitle (or any other name-script pairs)

Apostrophe markup (bold, italics) is stripped from each value so that the COinS metadata isn't corrupted with strings
of %27%27...

]]

local function make_coins_title (title, script)
	if is_set (title) then
		title = strip_apostrophe_markup (title);								-- strip any apostrophe markup
	else
		title='';																-- if not set, make sure title is an empty string
	end
	if is_set (script) then
		script = script:gsub ('^%l%l%s*:%s*', '');								-- remove language prefix if present (script value may now be empty string)
		script = strip_apostrophe_markup (script);								-- strip any apostrophe markup
	else
		script='';																-- if not set, make sure script is an empty string
	end
	if is_set (title) and is_set (script) then
		script = ' ' .. script;													-- add a space before we concatenate
	end
	return title .. script;														-- return the concatenation
end


--[[--------------------------&lt; E S C A P E _ L U A _ M A G I C _ C H A R S &gt;----------------------------------

Returns a string where all of lua's magic characters have been escaped.  This is important because functions like
string.gsub() treat their pattern and replace strings as patterns, not literal strings.
]]

local function escape_lua_magic_chars (argument)
	argument = argument:gsub(&quot;%%&quot;, &quot;%%%%&quot;);										-- replace % with %%
	argument = argument:gsub(&quot;([%^%$%(%)%.%[%]%*%+%-%?])&quot;, &quot;%%%1&quot;);				-- replace all other lua magic pattern characters
	return argument;
end


--[[--------------------------&lt; G E T _ C O I N S _ P A G E S &gt;------------------------------------------------

Extract page numbers from external wikilinks in any of the |page=, |pages=, or |at= parameters for use in COinS.

]]

local function get_coins_pages (pages)
	local pattern;
	if not is_set (pages) then return pages; end								-- if no page numbers then we're done
	
	while true do
		pattern = pages:match(&quot;%[(%w*:?//[^ ]+%s+)[%w%d].*%]&quot;);					-- pattern is the opening bracket, the url and following space(s): &quot;[url &quot;
		if nil == pattern then break; end										-- no more urls
		pattern = escape_lua_magic_chars (pattern);								-- pattern is not a literal string; escape lua's magic pattern characters
		pages = pages:gsub(pattern, &quot;&quot;);										-- remove as many instances of pattern as possible
	end
	pages = pages:gsub(&quot;[%[%]]&quot;, &quot;&quot;);											-- remove the brackets
	pages = pages:gsub(&quot;&quot;, &quot;-&quot; );							-- replace endashes with hyphens
	pages = pages:gsub(&quot;&amp;%w+;&quot;, &quot;-&quot; );						-- and replace html entities (&amp;ndash; etc.) with hyphens; do we need to replace numerical entities like &amp;#32; and the like?
	return pages;
end


--[=[-------------------------&lt; C O I N S _ R E P L A C E _ M A T H _ S T R I P M A R K E R &gt;------------------

There are three options for math markup rendering that depend on the editor's math preference settings.  These
settings are at [[Special:Preferences#mw-prefsection-rendering]] and are
	PNG images
	TeX source
	MathML with SVG or PNG fallback

All three are heavy with html and css which doesn't belong in the metadata.

Without this function, the metadata saved in the raw wikitext contained the rendering determined by the settings
of the last editor to save the page.

This function gets the rendered form of an equation according to the editor's preference before the page is saved.  It
then searches the rendering for the text equivalent of the rendered equation and replaces the rendering with that so
that the page is saved without extraneous html/css markup and with a reasonably readable text form of the equation.

When a replacement is made, this function returns true and the value with replacement; otherwise false and the intital
value.  To replace multipe equations it is necesary to call this function from within a loop.

]=]

local function coins_replace_math_stripmarker (value)
	local stripmarker = cfg.stripmarkers['math'];
	local rendering = value:match (stripmarker);								-- is there a math stripmarker

	if not rendering then														-- when value doesn't have a math stripmarker, abandon this test
		return false, value;
	end
	
	rendering = mw.text.unstripNoWiki (rendering);								-- convert stripmarker into rendered value (or nil? ''? when math render error)
	
	if rendering:match ('alt=&quot;[^&quot;]+&quot;') then										-- if PNG math option
		rendering = rendering:match ('alt=&quot;([^&quot;]+)&quot;');							-- extract just the math text
	elseif rendering:match ('$%s+.+%s+%$') then									-- if TeX math option; $ is legit character that is escapes as \$
		rendering = rendering:match ('$%s+(.+)%s+%$')							-- extract just the math text
	elseif rendering:match ('&lt;annotation[^&gt;]+&gt;.+&lt;/annotation&gt;') then			-- if MathML math option
		rendering = rendering:match ('&lt;annotation[^&gt;]+&gt;(.+)&lt;/annotation&gt;')		-- extract just the math text
	else
		return false, value;													-- had math stripmarker but not one of the three defined forms
	end
	
	return true, value:gsub (stripmarker, rendering, 1);
end


--[[--------------------------&lt; C O I N S _ C L E A N U P &gt;----------------------------------------------------

Cleanup parameter values for the metadata by removing or replacing invisible characters and certain html entities.

2015-12-10: there is a bug in mw.text.unstripNoWiki ().  It replaces math stripmarkers with the appropriate content
when it shouldn't.  See https://phabricator.wikimedia.org/T121085 and Wikipedia_talk:Lua#stripmarkers_and_mw.text.unstripNoWiki.28.29

TODO: move the replacement patterns and replacement values into a table in /Configuration similar to the invisible
characters table?

]]

local function coins_cleanup (value)
	local replaced = true;														-- default state to get the do loop running

	while replaced do															-- loop until all math stripmarkers replaced
		replaced, value = coins_replace_math_stripmarker (value);				-- replace math stripmarker with text representation of the equation
	end

	value = value:gsub (cfg.stripmarkers['math'], &quot;MATH RENDER ERROR&quot;);						-- one or more couldn't be replaced; insert vague error message
	
	value = mw.text.unstripNoWiki (value);										-- replace nowiki stripmarkers with their content
	value = value:gsub ('&lt;span class=&quot;nowrap&quot; style=&quot;padding%-left:0%.1em;&quot;&gt;&amp;#39;(s?)&lt;/span&gt;', &quot;'%1&quot;);	-- replace {{'}} or {{'s}} with simple apostrophe or apostrophe-s
	value = value:gsub ('&amp;nbsp;', ' ');											-- replace &amp;nbsp; entity with plain space
	value = value:gsub ('\226\128\138', ' ');									-- replace hair space with plain space
	value = value:gsub ('&amp;zwj;', '');											-- remove &amp;zwj; entities
	value = mw.ustring.gsub (value, '[\226\128\141\226\128\139\194\173]', '');	-- remove zero-width joiner, zero-width space, soft hyphen
	value = value:gsub ('[\009\010\013]', ' ');									-- replace horizontal tab, line feed, carriage return with plain space
	return value;
end


--[[--------------------------&lt; C O I N S &gt;--------------------------------------------------------------------

COinS metadata (see &lt;http://ocoins.info/&gt;) allows automated tools to parse the citation information.

]]

local function COinS(data, class)
	if 'table' ~= type(data) or nil == next(data) then
		return '';
	end

	for k, v in pairs (data) do													-- spin through all of the metadata parameter values
		if 'ID_list' ~= k and 'Authors' ~= k then								-- except the ID_list and Author tables (author nowiki stripmarker done when Author table processed)
			data[k] = coins_cleanup (v);
		end
	end

	local ctx_ver = &quot;Z39.88-2004&quot;;
	
	-- treat table strictly as an array with only set values.
	local OCinSoutput = setmetatable( {}, {
		__newindex = function(self, key, value)
			if is_set(value) then
				rawset( self, #self+1, table.concat{ key, '=', mw.uri.encode( remove_wiki_link( value ) ) } );
			end
		end
	});
	
	if in_array (class, {'arxiv', 'biorxiv', 'citeseerx', 'journal', 'news'}) or (in_array (class, {'conference', 'interview', 'map', 'press release', 'web'}) and is_set(data.Periodical)) or 
		('citation' == class and is_set(data.Periodical) and not is_set (data.Encyclopedia)) then
			OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:journal&quot;;			-- journal metadata identifier
			if in_array (class, {'arxiv', 'biorxiv', 'citeseerx'}) then			-- set genre according to the type of citation template we are rendering
				OCinSoutput[&quot;rft.genre&quot;] = &quot;preprint&quot;;							-- cite arxiv, cite biorxiv, cite citeseerx
			elseif 'conference' == class then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;conference&quot;;						-- cite conference (when Periodical set)
			elseif 'web' == class then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;unknown&quot;;							-- cite web (when Periodical set)
			else
				OCinSoutput[&quot;rft.genre&quot;] = &quot;article&quot;;							-- journal and other 'periodical' articles
			end
			OCinSoutput[&quot;rft.jtitle&quot;] = data.Periodical;						-- journal only
			OCinSoutput[&quot;rft.atitle&quot;] = data.Title;								-- 'periodical' article titles

																				-- these used only for periodicals
			OCinSoutput[&quot;rft.ssn&quot;] = data.Season;								-- keywords: winter, spring, summer, fall
			OCinSoutput[&quot;rft.chron&quot;] = data.Chron;								-- free-form date components
			OCinSoutput[&quot;rft.volume&quot;] = data.Volume;							-- does not apply to books
			OCinSoutput[&quot;rft.issue&quot;] = data.Issue;
			OCinSoutput[&quot;rft.pages&quot;] = data.Pages;								-- also used in book metadata

	elseif 'thesis' ~= class then												-- all others except cite thesis are treated as 'book' metadata; genre distinguishes
		OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:book&quot;;					-- book metadata identifier
		if 'report' == class or 'techreport' == class then						-- cite report and cite techreport
			OCinSoutput[&quot;rft.genre&quot;] = &quot;report&quot;;
		elseif 'conference' == class then										-- cite conference when Periodical not set
			OCinSoutput[&quot;rft.genre&quot;] = &quot;conference&quot;;
			OCinSoutput[&quot;rft.atitle&quot;] = data.Chapter;							-- conference paper as chapter in proceedings (book)
		elseif in_array (class, {'book', 'citation', 'encyclopaedia', 'interview', 'map'}) then
			if is_set (data.Chapter) then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;bookitem&quot;;
				OCinSoutput[&quot;rft.atitle&quot;] = data.Chapter;						-- book chapter, encyclopedia article, interview in a book, or map title
			else
				if 'map' == class or 'interview' == class then
					OCinSoutput[&quot;rft.genre&quot;] = 'unknown';						-- standalone map or interview
				else
					OCinSoutput[&quot;rft.genre&quot;] = 'book';							-- book and encyclopedia
				end
			end
		else	--{'audio-visual', 'AV-media-notes', 'DVD-notes', 'episode', 'interview', 'mailinglist', 'map', 'newsgroup', 'podcast', 'press release', 'serial', 'sign', 'speech', 'web'}
			OCinSoutput[&quot;rft.genre&quot;] = &quot;unknown&quot;;
		end
		OCinSoutput[&quot;rft.btitle&quot;] = data.Title;									-- book only
		OCinSoutput[&quot;rft.place&quot;] = data.PublicationPlace;						-- book only
		OCinSoutput[&quot;rft.series&quot;] = data.Series;								-- book only
		OCinSoutput[&quot;rft.pages&quot;] = data.Pages;									-- book, journal
		OCinSoutput[&quot;rft.edition&quot;] = data.Edition;								-- book only
		OCinSoutput[&quot;rft.pub&quot;] = data.PublisherName;							-- book and dissertation
		
	else																		-- cite thesis
		OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:dissertation&quot;;			-- dissertation metadata identifier
		OCinSoutput[&quot;rft.title&quot;] = data.Title;									-- dissertation (also patent but that is not yet supported)
		OCinSoutput[&quot;rft.degree&quot;] = data.Degree;								-- dissertation only
		OCinSoutput['rft.inst'] = data.PublisherName;							-- book and dissertation
	end
																				-- and now common parameters (as much as possible)
	OCinSoutput[&quot;rft.date&quot;] = data.Date;										-- book, journal, dissertation
	
	for k, v in pairs( data.ID_list ) do										-- what to do about these? For now assume that they are common to all?
--		if k == 'ISBN' then v = clean_isbn( v ) end
		if k == 'ISBN' then v = v:gsub( &quot;[^-0-9X]&quot;, &quot;&quot; ); end
		local id = cfg.id_handlers[k].COinS;
		if string.sub( id or &quot;&quot;, 1, 4 ) == 'info' then							-- for ids that are in the info:registry
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ id, &quot;/&quot;, v };
		elseif string.sub (id or &quot;&quot;, 1, 3 ) == 'rft' then						-- for isbn, issn, eissn, etc that have defined COinS keywords
			OCinSoutput[ id ] = v;
		elseif id then															-- when cfg.id_handlers[k].COinS is not nil
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ cfg.id_handlers[k].prefix, v };	-- others; provide a url
		end
	end

--[[	
	for k, v in pairs( data.ID_list ) do										-- what to do about these? For now assume that they are common to all?
		local id, value = cfg.id_handlers[k].COinS;
		if k == 'ISBN' then value = clean_isbn( v ); else value = v; end
		if string.sub( id or &quot;&quot;, 1, 4 ) == 'info' then
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ id, &quot;/&quot;, v };
		else
			OCinSoutput[ id ] = value;
		end
	end
]]
	local last, first;
	for k, v in ipairs( data.Authors ) do
		last, first = coins_cleanup (v.last), coins_cleanup (v.first or '');	-- replace any nowiki strip markers, non-printing or invisible characers
		if k == 1 then															-- for the first author name only
			if is_set(last)  and is_set(first) then								-- set these COinS values if |first= and |last= specify the first author name
				OCinSoutput[&quot;rft.aulast&quot;] = last;								-- book, journal, dissertation
				OCinSoutput[&quot;rft.aufirst&quot;] = first;								-- book, journal, dissertation
			elseif is_set(last) then 
				OCinSoutput[&quot;rft.au&quot;] = last;									-- book, journal, dissertation -- otherwise use this form for the first name
			end
		else																	-- for all other authors
			if is_set(last) and is_set(first) then
				OCinSoutput[&quot;rft.au&quot;] = table.concat{ last, &quot;, &quot;, first };		-- book, journal, dissertation
			elseif is_set(last) then
				OCinSoutput[&quot;rft.au&quot;] = last;									-- book, journal, dissertation
			end
		end
	end

	OCinSoutput.rft_id = data.URL;
	OCinSoutput.rfr_id = table.concat{ &quot;info:sid/&quot;, mw.site.server:match( &quot;[^/]*$&quot; ), &quot;:&quot;, data.RawPage };
	OCinSoutput = setmetatable( OCinSoutput, nil );
	
	-- sort with version string always first, and combine.
	table.sort( OCinSoutput );
	table.insert( OCinSoutput, 1, &quot;ctx_ver=&quot; .. ctx_ver );  -- such as &quot;Z39.88-2004&quot;
	return table.concat(OCinSoutput, &quot;&amp;&quot;);
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table and imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	cfg = cfg_table_ptr;

	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;
	remove_wiki_link = utilities_page_ptr.remove_wiki_link;
end



return {
	make_coins_title = make_coins_title,
	get_coins_pages = get_coins_pages,
	COinS = COinS,
	set_selected_modules = set_selected_modules,
	}</text>
      <sha1>4995qhrt3cjizstwz85s4vt36gml0uj</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Configuration</title>
    <ns>828</ns>
    <id>39043527</id>
    <revision>
      <id>777956985</id>
      <parentid>777799228</parentid>
      <timestamp>2017-04-30T09:19:32Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>unsupport |ARXIV= and |BIBCODE=;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="43304">
local citation_config = {};

-- override &lt;code&gt;...&lt;/code&gt; styling to remove color, border, and padding.  &lt;code&gt; css is specified here:
-- https://git.wikimedia.org/blob/mediawiki%2Fcore.git/69cd73811f7aadd093050dbf20ed70ef0b42a713/skins%2Fcommon%2FcommonElements.css#L199
local code_style=&quot;color:inherit; border:inherit; padding:inherit;&quot;;

--[[--------------------------&lt; U N C A T E G O R I Z E D _ N A M E S P A C E S &gt;------------------------------

List of namespaces that should not be included in citation error categories.  Same as setting notracking = true by default

Note: Namespace names should use underscores instead of spaces.

]]
local uncategorized_namespaces = { 'User', 'Talk', 'User_talk', 'Wikipedia_talk', 'File_talk', 'Template_talk',
	'Help_talk', 'Category_talk', 'Portal_talk', 'Book_talk', 'Draft', 'Draft_talk', 'Education_Program_talk',
	'Module_talk', 'MediaWiki_talk' };

local uncategorized_subpages = {'/[Ss]andbox', '/[Tt]estcases'};		-- list of Lua patterns found in page names of pages we should not categorize

--[[--------------------------&lt; M E S S A G E S &gt;--------------------------------------------------------------

Translation table

The following contains fixed text that may be output as part of a citation.
This is separated from the main body to aid in future translations of this
module.

]]

local messages = {
	['archived-dead'] = 'Archived from $1 on $2',
	['archived-not-dead'] = '$1 from the original on $2',
	['archived-missing'] = 'Archived from the original$1 on $2',
	['archived'] = 'Archived',
	['by'] = 'By',																-- contributions to authored works: introduction, foreword, afterword
	['cartography'] = 'Cartography by $1',
	['editor'] = 'ed.',
	['editors'] = 'eds.',
	['edition'] = '($1 ed.)',
	['episode'] = 'Episode $1',
	['et al'] = 'et al.',
	['in'] = 'In',																-- edited works
	['inactive'] = 'inactive',
	['inset'] = '$1 inset',
	['interview'] = 'Interview with $1',										
	['lay summary'] = 'Lay summary',
	['newsgroup'] = '[[Usenet newsgroup|Newsgroup]]:&amp;nbsp;$1',
	['original'] = 'the original',
	['published'] = ' (published $1)',
	['retrieved'] = 'Retrieved $1',
	['season'] = 'Season $1',
	['section'] = ' $1',
	['sections'] = ' $1',
	['series'] = 'Series $1',
	['translated'] = 'Translated by $1',
	['type'] = ' ($1)',															-- for titletype
	['written'] = 'Written at $1',

	['vol'] = '$1 Vol.&amp;nbsp;$2',												-- $1 is sepc; bold journal style volume is in presentation{}
	['vol-no'] = '$1 Vol.&amp;nbsp;$2 no.&amp;nbsp;$3',									-- sepc, volume, issue
	['issue'] = '$1 No.&amp;nbsp;$2',												-- $1 is sepc

	['j-vol'] = '$1 $2',														-- sepc, volume; bold journal volume is in presentation{}
	['j-issue'] = ' ($1)',

	['nopp'] = '$1 $2';															-- page(s) without prefix; $1 is sepc

	['p-prefix'] = &quot;$1 p.&amp;nbsp;$2&quot;,												-- $1 is sepc
	['pp-prefix'] = &quot;$1 pp.&amp;nbsp;$2&quot;,											-- $1 is sepc
	['j-page(s)'] = ': $1',														-- same for page and pages

	['sheet'] = '$1 Sheet&amp;nbsp;$2',												-- $1 is sepc
	['sheets'] = '$1 Sheets&amp;nbsp;$2',											-- $1 is sepc
	['j-sheet'] = ': Sheet&amp;nbsp;$1',
	['j-sheets'] = ': Sheets&amp;nbsp;$1',
	
	['subscription'] = '&lt;span style=&quot;font-size:90%; color:#555&quot;&gt;(Subscription required (&lt;span title=&quot;The site requires a paid subscription to access this page.&quot; style=&quot;border-bottom:1px dotted;cursor:help&quot;&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
		'[[Category:Pages containing links to subscription-only content]]',
	
	['registration']='&lt;span style=&quot;font-size:90%; color:#555&quot;&gt;(Registration required (&lt;span title=&quot;The site requires registration to access this page.&quot; style=&quot;border-bottom:1px dotted;cursor:help&quot;&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
		'[[Category:Pages with login required references or sources]]',
	
	['language'] = '(in $1)',
	['via'] = &quot; &amp;ndash; via $1&quot;,
	['event'] = 'Event occurs at',
	['minutes'] = 'minutes in',
	
	['parameter-separator'] = ', ',
	['parameter-final-separator'] = ', and ',
	['parameter-pair-separator'] = ' and ',
	
	-- Determines the location of the help page
	['help page link'] = 'Help:CS1 errors',
	['help page label'] = 'help',
	
	-- Internal errors (should only occur if configuration is bad)
	['undefined_error'] = 'Called with an undefined error condition',
	['unknown_manual_ID'] = 'Unrecognized manual ID mode',
	['unknown_ID_mode'] = 'Unrecognized ID mode',
	['unknown_argument_map'] = 'Argument map not defined for this variable',
	['bare_url_no_origin'] = 'Bare url found but origin indicator is nil or empty',
}

--[[--------------------------&lt; P R E S E N T A T I O N &gt;------------------------------------------------------

Fixed presentation markup.  Originally part of citation_config.messages it has been moved into its own, more semantically
correct place.

]]
local presentation = 
	{
	-- Error output
	-- .error class is specified at https://git.wikimedia.org/blob/mediawiki%2Fcore.git/9553bd02a5595da05c184f7521721fb1b79b3935/skins%2Fcommon%2Fshared.css#L538
	-- .citation-comment class is specified at Help:CS1_errors#Controlling_error_message_display
	['hidden-error'] = '&lt;span style=&quot;display:none;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;$1&lt;/span&gt;',
	['visible-error'] = '&lt;span style=&quot;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;$1&lt;/span&gt;',

	['accessdate'] = '&lt;span class=&quot;reference-accessdate&quot;&gt;$1$2&lt;/span&gt;',			-- to allow editors to hide accessdate using personal css

	['bdi'] = '&lt;bdi$1&gt;$2&lt;/bdi&gt;',												-- bidirectional isolation used with |script-title= and the like

	['cite'] = '&lt;cite class=&quot;$1&quot;&gt;$2&lt;/cite&gt;';									-- |ref= not set so no id=&quot;...&quot; attribute
	['cite-id'] = '&lt;cite id=&quot;$1&quot; class=&quot;$2&quot;&gt;$3&lt;/cite&gt;';							-- for use when |ref= is set

	['format'] = ' &lt;span style=&quot;font-size:85%;&quot;&gt;($1)&lt;/span&gt;',					-- for |format=, |chapter-format=, etc
	
																				-- various access levels, for |access=, |doi-access=, |arxiv=, ...
																				-- narrow no-break space &amp;#8239; may work better than nowrap css. Or not? browser support?

	['access-signal'] = '&lt;span class=&quot;plainlinks&quot;&gt;$1&amp;#8239;$2&lt;/span&gt;',			-- external link with appropriate lock icon
		['free'] = '[[File:Lock-green.svg|9px|link=|alt=Freely accessible|Freely accessible]]',
		['registration'] = '[[File:Lock-blue-alt-2.svg|9px|link=|alt=Free registration required|Free registration required]]',
		['limited'] = '[[File:Lock-blue-alt-2.svg|9px|link=|alt=Free access subject to limited trial, subscription normally required|Free access subject to limited trial, subscription normally required]]',
		['subscription'] = '[[File:Lock-red-alt.svg|9px|link=|alt=Paid subscription required|Paid subscription required]]',

	['italic-title'] = &quot;''$1''&quot;,

	['kern-left'] = '&lt;span style=&quot;padding-left:0.2em;&quot;&gt;$1&lt;/span&gt;$2',			-- spacing to use when title contains leading single or double quote mark
	['kern-right'] = '$1&lt;span style=&quot;padding-right:0.2em;&quot;&gt;$2&lt;/span&gt;',			-- spacing to use when title contains trailing single or double quote mark

	['nowrap1'] = '&lt;span class=&quot;nowrap&quot;&gt;$1&lt;/span&gt;',								-- for nowrapping an item: &lt;span ...&gt;yyyy-mm-dd&lt;/span&gt;
	['nowrap2'] = '&lt;span class=&quot;nowrap&quot;&gt;$1&lt;/span&gt; $2',							-- for nowrapping portions of an item: &lt;span ...&gt;dd mmmm&lt;/span&gt; yyyy (note white space)

	['ocins'] = '&lt;span title=&quot;$1&quot; class=&quot;Z3988&quot;&gt;&lt;span style=&quot;display:none;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;',		-- Note: Using display: none on the COinS span breaks some clients

	['parameter'] = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',

	['quoted-text'] = '&lt;q&gt;$1&lt;/q&gt;',												-- for wrapping |quote= content
	['quoted-title'] = '&quot;$1&quot;',

	['trans-italic-title'] = &quot;&amp;#91;''$1''&amp;#93;&quot;,
	['trans-quoted-title'] = &quot;&amp;#91;$1&amp;#93;&quot;,
	['vol-bold'] = '$1 &lt;b&gt;$2&lt;/b&gt;',												-- sepc, volume; for bold journal cites; for other cites ['vol'] in messages{}
	}

	
--[[--------------------------&lt; A L I A S E S &gt;----------------------------------------------------------------

Aliases table for commonly passed parameters

]]

local aliases = {
	['AccessDate'] = {'access-date', 'accessdate'},
	['Agency'] = 'agency',
	['AirDate'] = {'air-date', 'airdate'},
	['ArchiveDate'] = {'archive-date', 'archivedate'},
	['ArchiveFormat'] = 'archive-format',
	['ArchiveURL'] = {'archive-url', 'archiveurl'},
	['ASINTLD'] = {'ASIN-TLD', 'asin-tld'},
	['At'] = 'at',
	['Authors'] = {'authors', 'people', 'host', 'credits'},
	['BookTitle'] = {'book-title', 'booktitle'},
	['Cartography'] = 'cartography',
	['Chapter'] = {'chapter', 'contribution', 'entry', 'article', 'section'},
	['ChapterFormat'] = {'chapter-format', 'contribution-format', 'section-format'};
	['ChapterURL'] = {'chapter-url', 'chapterurl', 'contribution-url', 'contributionurl', 'section-url', 'sectionurl'},
	['Class'] = 'class',														-- cite arxiv and arxiv identifiers
	['Collaboration'] = 'collaboration',
	['Conference'] = {'conference', 'event'},
	['ConferenceFormat'] = {'conference-format', 'event-format'},
	['ConferenceURL'] = {'conference-url', 'conferenceurl', 'event-url', 'eventurl'},
	['Contribution'] = 'contribution',											-- introduction, foreword, afterword, etc; required when |contributor= set
	['Date'] = 'date',
	['DeadURL'] = {'dead-url', 'deadurl'},
	['Degree'] = 'degree',
	['DF'] = 'df',
	['DisplayAuthors'] = {'display-authors', 'displayauthors'},
	['DisplayEditors'] = {'display-editors', 'displayeditors'},
	['Docket'] = 'docket',
	['DoiBroken'] = {'doi-broken', 'doi-broken-date', 'doi-inactive-date', 'doi_brokendate', 'doi_inactivedate'},
	['Edition'] = 'edition',
	['Editors'] = 'editors',
	['Embargo'] = 'embargo',
	['Encyclopedia'] = {'encyclopedia', 'encyclopaedia'},						-- this one only used by citation
	['Episode'] = 'episode',													-- cite serial only TODO: make available to cite episode?
	['Format'] = 'format',
	['ID'] = {'id', 'ID'},
	['IgnoreISBN'] = {'ignore-isbn-error', 'ignoreisbnerror'},
	['Inset'] = 'inset',
	['Issue'] = {'issue', 'number'},
	['Interviewers'] = 'interviewers',
	['Language'] = {'language', 'in'},
	['LastAuthorAmp'] = {'last-author-amp', 'lastauthoramp'},
	['LayDate'] = {'lay-date', 'laydate'},
	['LayFormat'] = 'lay-format',
	['LaySource'] = {'lay-source', 'laysource'},
	['LayURL'] = {'lay-url', 'lay-summary', 'layurl', 'laysummary'},
	['MailingList'] = {'mailinglist', 'mailing-list'},							-- cite mailing list only
	['Map'] = 'map',															-- cite map only
	['MapFormat'] = 'map-format',												-- cite map only
	['MapURL'] = {'mapurl', 'map-url'},											-- cite map only
	['MessageID'] = 'message-id',
	['Minutes'] = 'minutes',
	['Mode'] = 'mode',
	['NameListFormat'] = 'name-list-format',
	['Network'] = 'network',
	['NoPP'] = {'no-pp', 'nopp'},
	['NoTracking'] = {'template-doc-demo', 'template doc demo', 'no-cat', 'nocat',
		'no-tracking', 'notracking'},
	['Number'] = 'number',														-- this case only for cite techreport
	['OrigYear'] = {'orig-year', 'origyear'},
	['Others'] = 'others',
	['Page'] = {'p', 'page'},
	['Pages'] = {'pp', 'pages'},
	['Periodical'] = {'journal', 'newspaper', 'magazine', 'work',
		'website',  'periodical', 'encyclopedia', 'encyclopaedia', 'dictionary', 'mailinglist'},
	['Place'] = {'place', 'location'},
	['PostScript'] = 'postscript',
	['PublicationDate'] = {'publicationdate', 'publication-date'},
	['PublicationPlace'] = {'publication-place', 'publicationplace'},
	['PublisherName'] = {'publisher', 'distributor', 'institution', 'newsgroup'},
	['Quote'] = {'quote', 'quotation'},
	['Ref'] = 'ref',
	['RegistrationRequired'] = 'registration',
	['Scale'] = 'scale',
	['ScriptChapter'] = 'script-chapter',
	['ScriptTitle'] = 'script-title',
	['Section'] = 'section',
	['Season'] = 'season',
	['Sections'] = 'sections',													-- cite map only
	['Series'] = {'series', 'version'},
	['SeriesSeparator'] = 'series-separator',
	['SeriesLink'] = {'series-link', 'serieslink'},
	['SeriesNumber'] = {'series-number', 'series-no', 'seriesnumber', 'seriesno'},
	['Sheet'] = 'sheet',														-- cite map only
	['Sheets'] = 'sheets',														-- cite map only
	['Station'] = 'station',
	['SubscriptionRequired'] = 'subscription',
	['Time'] = 'time',
	['TimeCaption'] = {'time-caption', 'timecaption'},
	['Title'] = 'title',
	['TitleLink'] = {'title-link', 'episode-link', 'titlelink', 'episodelink'},
	['TitleNote'] = 'department',
	['TitleType'] = {'type', 'medium'},
	['TransChapter'] = {'trans-chapter', 'trans_chapter'},
	['TransMap'] = 'trans-map',													-- cite map only
	['Transcript'] = 'transcript',
	['TranscriptFormat'] = 'transcript-format',
	['TranscriptURL'] = {'transcript-url', 'transcripturl'},
	['TransTitle'] = {'trans-title', 'trans_title'},
	['URL'] = {'url', 'URL'},
	['UrlAccess'] = {'url-access'},
	['Vauthors'] = 'vauthors',
	['Veditors'] = 'veditors',
	['Via'] = 'via',
	['Volume'] = 'volume',
	['Year'] = 'year',

	['AuthorList-First'] = {&quot;first#&quot;, &quot;given#&quot;, &quot;author-first#&quot;, &quot;author#-first&quot;},
	['AuthorList-Last'] = {&quot;last#&quot;, &quot;author#&quot;, &quot;surname#&quot;, &quot;author-last#&quot;, &quot;author#-last&quot;, &quot;subject#&quot;},
	['AuthorList-Link'] = {&quot;authorlink#&quot;, &quot;author-link#&quot;, &quot;author#-link&quot;, &quot;subjectlink#&quot;, &quot;author#link&quot;, &quot;subject-link#&quot;, &quot;subject#-link&quot;, &quot;subject#link&quot;},
	['AuthorList-Mask'] = {&quot;author-mask#&quot;, &quot;authormask#&quot;, &quot;author#mask&quot;, &quot;author#-mask&quot;},
	
	['ContributorList-First'] = {'contributor-first#', 'contributor#-first', 'contributor-given#', 'contributor#-given'},
	['ContributorList-Last'] = {'contributor#', 'contributor-last#', 'contributor#-last', 'contributor-surname#', 'contributor#-surname'},
	['ContributorList-Link'] = {'contributor-link#', 'contributor#-link'},
	['ContributorList-Mask'] = {'contributor-mask#', 'contributor#-mask'},

	['EditorList-First'] = {&quot;editor-first#&quot;, &quot;editor#-first&quot;, &quot;editor-given#&quot;, &quot;editor#-given&quot;},
	['EditorList-Last'] = {&quot;editor#&quot;, &quot;editor-last#&quot;, &quot;editor#-last&quot;, &quot;editor-surname#&quot;, &quot;editor#-surname&quot;},
	['EditorList-Link'] = {&quot;editor-link#&quot;, &quot;editor#-link&quot;, &quot;editorlink#&quot;, &quot;editor#link&quot;},
	['EditorList-Mask'] = {&quot;editor-mask#&quot;, &quot;editor#-mask&quot;, &quot;editormask#&quot;, &quot;editor#mask&quot;},
	
	['InterviewerList-First'] = {'interviewer-first#', 'interviewer#-first'},
	['InterviewerList-Last'] = {'interviewer#', 'interviewer-last#', 'interviewer#-last'},
	['InterviewerList-Link'] = {'interviewer-link#', 'interviewer#-link'},
	['InterviewerList-Mask'] = {'interviewer-mask#', 'interviewer#-mask'},

	['TranslatorList-First'] = {'translator-first#', 'translator#-first', 'translator-given#', 'translator#-given'},
	['TranslatorList-Last'] = {'translator#', 'translator-last#', 'translator#-last', 'translator-surname#', 'translator#-surname'},
	['TranslatorList-Link'] = {'translator-link#', 'translator#-link'},
	['TranslatorList-Mask'] = {'translator-mask#', 'translator#-mask'},
}

--[[--------------------------&lt; S P E C I A L   C A S E   T R A N S L A T I O N S &gt;----------------------------

This table is primarily here to support internationalization.  Translations in this table are used, for example,
when an error message, category name, etc is extracted from the English alias key.  There may be other cases where
this translation table may be useful.

]]

local special_case_translation = {
	['AuthorList'] = &quot;authors list&quot;,											-- these for multiple names maint categories
	['ContributorList'] = &quot;contributors list&quot;,
	['EditorList'] = &quot;editors list&quot;,
	['InterviewerList'] = &quot;interviewers list&quot;,
	['TranslatorList'] = &quot;translators list&quot;,
	
	['authors'] = &quot;authors&quot;,													-- used in get_display_authors_editors()
	['editors'] = &quot;editors&quot;,
	}

--[[--------------------------&lt; D E F A U L T S &gt;--------------------------------------------------------------

Default parameter values

TODO: keep this?  Only one default?
]]

local defaults = {
	['DeadURL'] = 'yes',
}


--[[--------------------------&lt; V O L U M E ,  I S S U E ,  P A G E S &gt;----------------------------------------

These tables hold cite class values (from the template invocation) and identify those templates that support
|volume=, |issue=, and |page(s)= parameters.  Cite conference and cite map require further qualification which
is handled in the main module.

]]

local templates_using_volume = {'citation', 'audio-visual', 'book', 'conference', 'encyclopaedia', 'interview', 'journal', 'magazine', 'map', 'news', 'report', 'techreport', 'thesis'}
local templates_using_issue = {'citation', 'conference', 'episode', 'interview', 'journal', 'magazine', 'map', 'news'}
local templates_not_using_page = {'audio-visual', 'episode', 'mailinglist', 'newsgroup', 'podcast', 'serial', 'sign', 'speech'}



--[[--------------------------&lt; K E Y W O R D S &gt;--------------------------------------------------------------

This table holds keywords for those parameters that have defined sets of acceptible keywords.

]]

local keywords = {
	['yes_true_y'] = {'yes', 'true', 'y'},										-- ignore-isbn-error, last-author-amp, no-tracking, nopp, registration, subscription
--	['deadurl'] = {'yes', 'true', 'y', 'no', 'unfit', 'usurped', 'unfit no archive', 'usurped no archive'},		-- hidden 2016-04-10; see Help_talk:Citation_Style_1#Recycled_urls
	['deadurl'] = {'yes', 'true', 'y', 'no', 'unfit', 'usurped', 'bot: unknown'},
	['mode'] = {'cs1', 'cs2', 'mla'},
	['name-list-format'] = {'vanc'},
	['contribution'] = {'afterword', 'foreword', 'introduction', 'preface'},	-- generic contribution titles that are rendered unquoted in the 'chapter' position
	['date-format'] = {'dmy', 'dmy-all', 'mdy', 'mdy-all', 'ymd', 'ymd-all'},
	['url-access'] = {'subscription', 'limited', 'registration'}, 	   -- access level of a URL (subscription required, limited access, free registration required), free to read by default
    ['id-access'] = {'free'},                                          -- access level of an identifier (free to read), subscription required (or no full text) by default
}


--[[--------------------------&lt; S T R I P M A R K E R S &gt;------------------------------------------------------

Common pattern definition location for stripmarkers so that we don't have to go hunting for them if (when)
MediaWiki changes their form.

]]

local stripmarkers = {
	['any'] = '\127[^\127]*UNIQ%-%-(%a+)%-[%a%d]+%-QINU[^\127]*\127',			-- capture returns name of stripmarker
	['math'] = '\127[^\127]*UNIQ%-%-math%-[%a%d]+%-QINU[^\127]*\127'			-- math stripmarkers used in coins_cleanup() and coins_replace_math_stripmarker()
	}


--[[--------------------------&lt; I N V I S I B L E _ C H A R A C T E R S &gt;--------------------------------------

This table holds non-printing or invisible characters indexed either by name or by Unicode group. Values are decimal
representations of UTF-8 codes.  The table is organized as a table of tables because the lua pairs keyword returns
table data in an arbitrary order.  Here, we want to process the table from top to bottom because the entries at
the top of the table are also found in the ranges specified by the entries at the bottom of the table.

This list contains patterns for templates like {{'}} which isn't an error but transcludes characters that are
invisible.  These kinds of patterns must be recognized by the functions that use this list.

Also here is a pattern that recognizes stripmarkers that begin and end with the delete characters.  The nowiki
stripmarker is not an error but some others are because the parameter values that include them become part of the
template's metadata before stripmarker replacement.

]]

local invisible_chars = {
	{'replacement', '\239\191\189'},											-- U+FFFD, EF BF BD
	{'zero width joiner', '\226\128\141'},										-- U+200D, E2 80 8D
	{'zero width space', '\226\128\139'},										-- U+200B, E2 80 8B
	{'hair space', '\226\128\138'},												-- U+200A, E2 80 8A
	{'soft hyphen', '\194\173'},												-- U+00AD, C2 AD
	{'horizontal tab', '\009'},													-- U+0009 (HT), 09
	{'line feed', '\010'},														-- U+000A (LF), 0A
	{'carriage return', '\013'},												-- U+000D (CR), 0D
	{'stripmarker', stripmarkers.any},											-- stripmarker; may or may not be an error; capture returns the stripmaker type
	{'delete', '\127'},															-- U+007F (DEL), 7F; must be done after stripmarker test
	{'C0 control', '[\000-\008\011\012\014-\031]'},								-- U+0000U+001F (NULLUS), 001F (except HT, LF, CR (09, 0A, 0D))
	{'C1 control', '[\194\128-\194\159]'},										-- U+0080U+009F (XXXAPC), C2 80  C2 9F
--	{'Specials', '[\239\191\185-\239\191\191]'},								-- U+FFF9-U+FFFF, EF BF B9  EF BF BF
--	{'Private use area', '[\238\128\128-\239\163\191]'},						-- U+E000U+F8FF, EE 80 80  EF A3 BF
--	{'Supplementary Private Use Area-A', '[\243\176\128\128-\243\191\191\189]'},	-- U+F0000U+FFFFD, F3 B0 80 80  F3 BF BF BD
--	{'Supplementary Private Use Area-B', '[\244\128\128\128-\244\143\191\189]'},	-- U+100000U+10FFFD, F4 80 80 80  F4 8F BF BD
}


--[[--------------------------&lt; L A N G U A G E S &gt;------------------------------------------------------------

This table is used to hold ISO 639-1 two-character language codes that apply only to |script-title= and |script-chapter=

]]

local script_lang_codes = {'am', 'ar', 'be', 'bg', 'bn', 'bs', 'dv', 'el',		-- ISO 639-1 codes only for |script-title= and |script-chapter=
	'fa', 'he', 'hy', 'ja', 'ka', 'kn', 'ko', 'ku',
	'mk', 'ml', 'mr', 'my', 'ps', 'ru', 'sd', 'sr',
	'th', 'uk', 'ug', 'ur', 'yi', 'zh'};


--[[--------------------------&lt; M A I N T E N A N C E _ C A T E G O R I E S &gt;----------------------------------

Here we name maintenance categories to be used in maintenance messages.

]]

local maint_cats = {
	['ASIN'] = 'CS1 maint: ASIN uses ISBN',
	['authors'] = 'CS1 maint: Uses authors parameter',
	['bot:_unknown'] = 'CS1 maint: BOT: original-url status unknown',
	['date_format'] = 'CS1 maint: Date format',
	['date_year'] = 'CS1 maint: Date and year',
	['disp_auth_ed'] = 'CS1 maint: display-$1',									-- $1 is authors or editors; gets value from special_case_translation table
	['editors'] = 'CS1 maint: Uses editors parameter',
	['embargo'] = 'CS1 maint: PMC embargo expired',
	['english'] = 'CS1 maint: English language specified',
	['etal'] = 'CS1 maint: Explicit use of et al.',
	['extra_text'] = 'CS1 maint: Extra text',
	['extra_text_names'] = 'CS1 maint: Extra text: $1',							-- $1 is &lt;name&gt;s list; gets value from special_case_translation table
	['ignore_isbn_err'] = 'CS1 maint: Ignored ISBN errors',
	['interviewers'] = 'CS1 maint: Uses interviewers parameter',
	['missing_pipe'] = 'CS1 maint: Missing pipe',
	['mult_names'] = 'CS1 maint: Multiple names: $1',							-- $1 is &lt;name&gt;s list; gets value from special_case_translation table
	['pmc_format'] = 'CS1 maint: PMC format',
	['unfit'] = 'CS1 maint: Unfit url',
	['unknown_lang'] = 'CS1 maint: Unrecognized language',
	['untitled'] = 'CS1 maint: Untitled periodical',
	}

--[[--------------------------&lt; P R O P E R T I E S _ C A T E G O R I E S &gt;------------------------------------

Here we name properties categories

]]

local prop_cats = {
	['foreign_lang_source'] = 'CS1 $1-language sources ($2)',					-- |language= categories; $1 is language name, $2 is ISO639-1 code
	['foreign_lang_source_2'] = 'CS1 foreign language sources (ISO 639-2)|$1',	-- |language= category; a cat for ISO639-2 languages; $1 is the ISO 639-2 code
	['script'] = 'CS1 uses foreign language script',							-- when language specified by |script-title=xx: doesn't have its own category
	['script_with_name'] = 'CS1 uses $1-language script ($2)',					-- |script-title=xx: has matching category; $1 is language name, $2 is ISO639-1 code
	}



--[[--------------------------&lt; T I T L E _ T Y P E S &gt;--------------------------------------------------------

Here we map a template's CitationClass to TitleType (default values for |type= parameter)

]]

local title_types = {
	['AV-media-notes'] = 'Media notes',
	['interview'] = 'Interview',
	['mailinglist'] = 'Mailing list',
	['map'] = 'Map',
	['podcast'] = 'Podcast',
	['pressrelease'] = 'Press release',
	['report'] = 'Report',
	['techreport'] = 'Technical report',
	['thesis'] = 'Thesis',
	}

--[[--------------------------&lt; E R R O R _ C O N D I T I O N S &gt;----------------------------------------------

Error condition table

The following contains a list of IDs for various error conditions defined in the code.  For each ID, we specify a
text message to display, an error category to include, and whether the error message should be wrapped as a hidden comment.

Anchor changes require identical changes to matching anchor in Help:CS1 errors

]]

local error_conditions = {
	accessdate_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;access-date=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'accessdate_missing_url',
		category = 'Pages using citations with accessdate and no URL',
		hidden = true },
	archive_missing_date = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-date=&lt;/code&gt;',
		anchor = 'archive_missing_date',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'archive_missing_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; is malformed: $1',
		anchor = 'archive_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	arxiv_missing = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;arxiv=&lt;/code&gt; required',
		anchor = 'arxiv_missing',
		category = 'CS1 errors: arXiv',											-- same as bad arxiv
		hidden = false },
	arxiv_params_not_supported = {
		message = 'Unsupported parameter(s) in cite arXiv',
		anchor = 'arxiv_params_not_supported',
		category = 'CS1 errors: arXiv',											-- same as bad arxiv
		hidden = false },
	bad_arxiv = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;arxiv=&lt;/code&gt; value',
		anchor = 'bad_arxiv',
		category = 'CS1 errors: arXiv',
		hidden = false },
	bad_asin = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;asin=&lt;/code&gt; value',
		anchor = 'bad_asin',
		category ='CS1 errors: ASIN',
		hidden = false },
	bad_bibcode = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;bibcode=&lt;/code&gt; $1',
		anchor = 'bad_bibcode',
		category = 'CS1 errors: bibcode',
		hidden = false },
	bad_biorxiv = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;biorxiv=&lt;/code&gt; value',
		anchor = 'bad_biorxiv',
		category = 'CS1 errors: bioRxiv',
		hidden = false },
	bad_citeseerx = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;citeseerx=&lt;/code&gt; value',
		anchor = 'bad_citeseerx',
		category = 'CS1 errors: citeseerx',
		hidden = false },
	bad_date = {
		message = 'Check date values in: &lt;code style=&quot;'..code_style..'&quot;&gt;$1&lt;/code&gt;',
		anchor = 'bad_date',
		category = 'CS1 errors: dates',
		hidden = false },
	bad_doi = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;doi=&lt;/code&gt; value',
		anchor = 'bad_doi',
		category = 'CS1 errors: DOI',
		hidden = false },
	bad_hdl = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;hdl=&lt;/code&gt; value',
		anchor = 'bad_hdl',
		category = 'CS1 errors: HDL',
		hidden = false },
	bad_isbn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;isbn=&lt;/code&gt; value: $1',
		anchor = 'bad_isbn',
		category = 'CS1 errors: ISBN',
		hidden = false },
	bad_ismn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ismn=&lt;/code&gt; value',
		anchor = 'bad_ismn',
		category = 'CS1 errors: ISMN',
		hidden = false },
	bad_issn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1issn=&lt;/code&gt; value',
		anchor = 'bad_issn',
		category = 'CS1 errors: ISSN',
		hidden = false },
	bad_lccn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;lccn=&lt;/code&gt; value',
		anchor = 'bad_lccn',
		category = 'CS1 errors: LCCN',
		hidden = false },
	bad_message_id = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;message-id=&lt;/code&gt; value',
		anchor = 'bad_message_id',
		category = 'CS1 errors: message-id',
		hidden = false },
	bad_ol = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ol=&lt;/code&gt; value',
		anchor = 'bad_ol',
		category = 'CS1 errors: OL',
		hidden = false },
	bad_paramlink = {															-- for |title-link=, |author/editor/translator-link=, |series-link=, |episode-link=
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; value',
		anchor = 'bad_paramlink',
		category = 'CS1 errors: parameter link',
		hidden = false },
	bad_pmc = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;pmc=&lt;/code&gt; value',
		anchor = 'bad_pmc',
		category = 'CS1 errors: PMC',
		hidden = false },
	bad_pmid = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;pmid=&lt;/code&gt; value',
		anchor = 'bad_pmid',
		category = 'CS1 errors: PMID',
		hidden = false },
	bad_oclc = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;oclc=&lt;/code&gt; value',
		anchor = 'bad_oclc',
		category = 'CS1 errors: OCLC',
		hidden = false },
	bad_ssrn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ssrn=&lt;/code&gt; value',
		anchor = 'bad_ssrn',
		category = 'CS1 errors: SSRN',
		hidden = false },
	bad_url = {
		message = 'Check $1 value',
		anchor = 'bad_url',
		category = 'Pages with URL errors',
		hidden = false },
	bare_url_missing_title = {
		message = '$1 missing title',
		anchor = 'bare_url_missing_title',
		category = 'Pages with citations having bare URLs',
		hidden = false },
	chapter_ignored = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'chapter_ignored',
		category = 'CS1 errors: chapter ignored',
		hidden = false },
	citation_missing_title = {
		message = 'Missing or empty &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'citation_missing_title',
		category = 'Pages with citations lacking titles',
		hidden = false },
	cite_web_url = {															-- this error applies to cite web and to cite podcast
		message = 'Missing or empty &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'cite_web_url',
		category = 'Pages using web citations with no URL',
		hidden = true },
	contributor_ignored = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;contributor=&lt;/code&gt; ignored&lt;/code&gt;',
		anchor = 'contributor_ignored',
		category = 'CS1 errors: contributor',
		hidden = false },
	contributor_missing_required_param = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;contributor=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'contributor_missing_required_param',
		category = 'CS1 errors: contributor',
		hidden = false },
	deprecated_params = {
		message = 'Cite uses deprecated parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'deprecated_params',
		category = 'CS1 errors: deprecated parameters',
		hidden = false },
	empty_citation = {
		message = 'Empty citation',
		anchor = 'empty_citation',
		category = 'Pages with empty citations',
		hidden = false },
	first_missing_last = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;first$2=&lt;/code&gt; missing &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;last$2=&lt;/code&gt; in $1',
		anchor = 'first_missing_last',
		category = 'CS1 errors: missing author or editor',
		hidden = false },
	format_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$2=&lt;/code&gt;',
		anchor = 'format_missing_url',
		category = 'Pages using citations with format and no URL',
		hidden = true },
	invalid_param_val = {
		message = 'Invalid &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=$2&lt;/code&gt;',
		anchor = 'invalid_param_val',
		category = 'CS1 errors: invalid parameter value',
		hidden = false },
	invisible_char = {
		message = '$1 in $2 at position $3',
		anchor = 'invisible_char',
		category = 'CS1 errors: invisible characters',
		hidden = false },
	missing_name = {
		message = 'Missing &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;last$2=&lt;/code&gt; in $1',
		anchor = 'missing_name',
		category = 'CS1 errors: missing author or editor',
		hidden = false },
	param_access_requires_param = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1-access=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'param_access_requires_param',
		category = 'CS1 errors: param-access',
		hidden = false },
	param_has_ext_link = {
		message = 'External link in &lt;code style=&quot;'..code_style..'&quot;&gt;$1&lt;/code&gt;',
		anchor = 'param_has_ext_link',
		category = 'CS1 errors: external links',
		hidden = false },
	parameter_ignored = {
		message = 'Unknown parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'parameter_ignored',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	parameter_ignored_suggest = {
		message = 'Unknown parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored (&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$2=&lt;/code&gt; suggested)',
		anchor = 'parameter_ignored_suggest',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	redundant_parameters = {
		message = 'More than one of $1 specified',
		anchor = 'redundant_parameters',
		category = 'Pages with citations having redundant parameters',
		hidden = false },
	text_ignored = {
		message = 'Text &quot;$1&quot; ignored',
		anchor = 'text_ignored',
		category = 'Pages with citations using unnamed parameters',
		hidden = false },
	trans_missing_title = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;trans-$1=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'trans_missing_title',
		category = 'CS1 errors: translated title',
		hidden = false },
	vancouver = {
		message = 'Vancouver style error: $1',
		anchor = 'vancouver',
		category = 'CS1 errors: Vancouver style',
		hidden = false },
	wikilink_in_url = {
		message = 'URLwikilink conflict',										-- uses ndash
		anchor = 'wikilink_in_url',
		category = 'CS1 errors: URLwikilink conflict',							-- uses ndash
		hidden = false },
}

--[[--------------------------&lt; I D _ H A N D L E R S &gt;--------------------------------------------------------

The following contains a list of values for various defined identifiers.  For each identifier we specify a
variety of information necessary to properly render the identifier in the citation.

	parameters: a list of parameter aliases for this identifier
	link: Wikipedia article name
	label: the alternate name to apply to link
	mode: 	'manual' when there is a specific function in the code to handle the identifier;
			'external' for identifiers that link outside of Wikipedia;
	prefix: the first part of a url that will be concatenated with a second part which usually contains the identifier
	encode: true if uri should be percent encoded; otherwise false
	COinS: identifier link or keyword for use in COinS:
		for identifiers registered at info-uri.info use: info:....
		for identifiers that have COinS keywords, use the keyword: rft.isbn, rft.issn, rft.eissn
		for others make a url using the value in prefix, use the keyword: pre (not checked; any text other than 'info' or 'rft' works here)
		set to nil to leave the identifier out of the COinS
	separator: character or text between label and the identifier in the rendered citation
	access: use this parameter to set the access level for all instances of this identifier.
			the value must be a valid access level for an identifier (see ['id-access'] in this file).
	custom_access: to enable custom access level for an identifier, set this parameter
			to the parameter that should control it (normally 'id-access')
]]

local id_handlers = {
	['ARXIV'] = {
		parameters = {'arxiv', 'eprint'},
		link = 'arXiv',
		label = 'arXiv',
		mode = 'manual',
		prefix = '//arxiv.org/abs/', 											-- protocol relative tested 2013-09-04
		encode = false,
		COinS = 'info:arxiv',
		separator = ':',
		access = 'free',														-- free to read
	},
	['ASIN'] = {
		parameters = { 'asin', 'ASIN' },
		link = 'Amazon Standard Identification Number',
		label = 'ASIN',
		mode = 'manual',
		prefix = '//www.amazon.',
		COinS = nil,															-- no COinS for this id (needs thinking on implementation because |asin-tld=)
		separator = '&amp;nbsp;',
		encode = false;
	},
	['BIBCODE'] = {
		parameters = {'bibcode'},
		link = 'Bibcode',
		label = 'Bibcode',
--		mode = 'external',
		mode = 'manual',
		prefix = 'http://adsabs.harvard.edu/abs/',
		encode = false,
		COinS = 'info:bibcode',
		separator = ':',
		custom_access = 'bibcode-access',
	},
	['BIORXIV'] = {
		parameters = {'biorxiv'},
		link = 'bioRxiv',
		label = 'bioRxiv',
		mode = 'manual',
		prefix = '//doi.org/10.1101/',
		COinS = 'pre',															-- use prefix value
		access = 'free',														-- free to read
		encode = true,
		separator = '&amp;nbsp;',
	},
	['CITESEERX'] = {
		parameters = {'citeseerx'},
		link = 'CiteSeerX',
		label = 'CiteSeerX',
		mode = 'manual',														-- manual for custom validation of the &quot;doi&quot;
		prefix = '//citeseerx.ist.psu.edu/viewdoc/summary?doi=',
		COinS =  'pre',															-- use prefix value
		access = 'free',														-- free to read
		encode = true,
		separator = '&amp;nbsp;',
	},
	['DOI'] = {
		parameters = { 'doi', 'DOI' },
		link = 'Digital object identifier',
		label = 'doi',
		mode = 'manual',
		prefix = '//doi.org/',
		COinS = 'info:doi',
		separator = ':',
		encode = true,
		custom_access = 'doi-access',
	},
	['EISSN'] = {
		parameters = {'eissn', 'EISSN'},
		link = 'International_Standard_Serial_Number#Electronic_ISSN',
		label = 'eISSN',
		mode = 'manual',
		prefix = '//www.worldcat.org/issn/',
		COinS = 'rft.eissn',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['HDL'] = {
		parameters = { 'hdl', 'HDL' },
		link = 'Handle System',
		label = 'hdl',
		mode = 'manual',
		prefix = '//hdl.handle.net/',
		COinS = 'info:hdl',
		separator = ':',
		encode = true,
		custom_access = 'hdl-access',
	},
	['ISBN'] = {
		parameters = {'isbn', 'ISBN', 'isbn13', 'ISBN13'},
		link = 'International Standard Book Number',
		label = 'ISBN',
		mode = 'manual',
		prefix = 'Special:BookSources/',
		COinS = 'rft.isbn',
		separator = '&amp;nbsp;',
	},
	['ISMN'] = {
		parameters = {'ismn', 'ISMN'},
		link = 'International Standard Music Number',
		label = 'ISMN',
		mode = 'manual',
		prefix = '',															-- not currently used;
		COinS = 'nil',															-- nil because we can't use pre or rft or info:
		separator = '&amp;nbsp;',
	},
	['ISSN'] = {
		parameters = {'issn', 'ISSN'},
		link = 'International Standard Serial Number',
		label = 'ISSN',
		mode = 'manual',
		prefix = '//www.worldcat.org/issn/',
		COinS = 'rft.issn',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['JFM'] = {
		parameters = {'jfm', 'JFM'},
		link = 'Jahrbuch ber die Fortschritte der Mathematik',
		label = 'JFM',
		mode = 'external',
		prefix = '//zbmath.org/?format=complete&amp;q=an:',
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	['JSTOR'] = {
		parameters = {'jstor', 'JSTOR'},
		link = 'JSTOR',
		label = 'JSTOR',
		mode = 'external',
		prefix = '//www.jstor.org/stable/', 									-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
		custom_access = 'jstor-access',
	},
	['LCCN'] = {
		parameters = {'LCCN', 'lccn'},
		link = 'Library of Congress Control Number',
		label = 'LCCN',
		mode = 'manual',
		prefix = '//lccn.loc.gov/', 											-- protocol relative tested 2015-12-28
		COinS = 'info:lccn',													-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
	},
	['MR'] = {
		parameters = {'MR', 'mr'},
		link = 'Mathematical Reviews',
		label = 'MR',
		mode = 'external',
		prefix = '//www.ams.org/mathscinet-getitem?mr=', 						-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	['OCLC'] = {
		parameters = {'OCLC', 'oclc'},
		link = 'OCLC',
		label = 'OCLC',
		mode = 'manual',
		prefix = '//www.worldcat.org/oclc/',
		COinS = 'info:oclcnum',
		encode = true,
		separator = '&amp;nbsp;',
	},
	['OL'] = {
		parameters = { 'ol', 'OL' },
		link = 'Open Library',
		label = 'OL',
		mode = 'manual',
		prefix = '//openlibrary.org/',
		COinS = nil,															-- no COinS for this id (needs thinking on implementation because /authors/books/works/OL)
		separator = '&amp;nbsp;',
		encode = true,
		custom_access = 'ol-access',
	},
	['OSTI'] = {
		parameters = {'OSTI', 'osti'},
		link = 'Office of Scientific and Technical Information',
		label = 'OSTI',
		mode = 'external',
		prefix = '//www.osti.gov/energycitations/product.biblio.jsp?osti_id=',	-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		custom_access = 'osti-access',
	},
	['PMC'] = {
		parameters = {'PMC', 'pmc'},
		link = 'PubMed Central',
		label = 'PMC',
		mode = 'manual',
		prefix = '//www.ncbi.nlm.nih.gov/pmc/articles/PMC',
		suffix = &quot; &quot;,
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		access = 'free',														-- free to read
	},
	['PMID'] = {
		parameters = {'PMID', 'pmid'},
		link = 'PubMed Identifier',
		label = 'PMID',
		mode = 'manual',
		prefix = '//www.ncbi.nlm.nih.gov/pubmed/',
		COinS = 'info:pmid',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['RFC'] = {
		parameters = {'RFC', 'rfc'},
		link = 'Request for Comments',
		label = 'RFC',
		mode = 'external',
		prefix = '//tools.ietf.org/html/rfc',
		COinS = 'pre',															-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
		access = 'free',														-- free to read
	},
	['SSRN'] = {
		parameters = {'SSRN', 'ssrn'},
		link = 'Social Science Research Network',
		label = 'SSRN',
		mode = 'manual',
		prefix = '//ssrn.com/abstract=', 										-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		access = 'free',														-- always free to read
	},
	['USENETID'] = {
		parameters = {'message-id'},
		link = 'Usenet',
		label = 'Usenet:',
		mode = 'manual',
		prefix = 'news:',
		encode = false,
		COinS = 'pre',															-- use prefix value
		separator = '&amp;nbsp;',
	},
	['ZBL'] = {
		parameters = {'ZBL', 'zbl'},
		link = 'Zentralblatt MATH',
		label = 'Zbl',
		mode = 'external',
		prefix = '//zbmath.org/?format=complete&amp;q=an:',
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
}

return 	{
	aliases = aliases,
	special_case_translation = special_case_translation,
	defaults = defaults,
	error_conditions = error_conditions,
	id_handlers = id_handlers,
	keywords = keywords,
	stripmarkers=stripmarkers,
	invisible_chars = invisible_chars,
	maint_cats = maint_cats,
	messages = messages,
	presentation = presentation,
	prop_cats = prop_cats,
	script_lang_codes = script_lang_codes,
	title_types = title_types,
	uncategorized_namespaces = uncategorized_namespaces,
	uncategorized_subpages = uncategorized_subpages,
	templates_using_volume = templates_using_volume,
	templates_using_issue = templates_using_issue,
	templates_not_using_page = templates_not_using_page,
	}</text>
      <sha1>9geurrccsx2nykua36cseygw8s5xo1h</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Date validation</title>
    <ns>828</ns>
    <id>42164542</id>
    <revision>
      <id>732205419</id>
      <parentid>723701925</parentid>
      <timestamp>2016-07-30T09:55:09Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Synch from sandbox;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="41095">
local p = {}


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array;																	-- imported function from selected Module:Citation/CS1/Utilities


--[=[-------------------------&lt; I S _ V A L I D _ A C C E S S D A T E &gt;----------------------------------------

returns true if:
	Wikipedia start date &lt;= accessdate &lt; today + 2 days

Wikipedia start date is 2001-01-15T00:00:00 UTC which is 979516800 seconds after 1970-01-01T00:00:00 UTC (the start of Unix time)
accessdate is the date provided in |accessdate= at time 00:00:00 UTC
today is the current date at time 00:00:00 UTC plus 48 hours
	if today is 2015-01-01T00:00:00 then
		adding 24 hours gives 2015-01-02T00:00:00  one second more than today
		adding 24 hours gives 2015-01-03T00:00:00  one second more than tomorrow

This function does not work if it is fed month names for languages other than English.  Wikimedia #time: parser
apparently doesn't understand non-Engish date month names. This function will always return false when the date
contains a non-English month name because good1 is false after the call to lang.formatDate().  To get around that
call this function with YYYY-MM-DD format dates.

]=]

local function is_valid_accessdate (accessdate)
	local lang = mw.getContentLanguage();
	local good1, good2;
	local access_ts, tomorrow_ts;												-- to hold unix time stamps representing the dates
		
	good1, access_ts = pcall( lang.formatDate, lang, 'U', accessdate );			-- convert accessdate value to unix timesatmp 
	good2, tomorrow_ts = pcall( lang.formatDate, lang, 'U', 'today + 2 days' );	-- today midnight + 2 days is one second more than all day tomorrow
	
	if good1 and good2 then
		access_ts = tonumber (access_ts);										-- convert to numbers for the comparison
		tomorrow_ts = tonumber (tomorrow_ts);
	else
		return false;															-- one or both failed to convert to unix time stamp
	end

	if 979516800 &lt;= access_ts and access_ts &lt; tomorrow_ts then					-- Wikipedia start date &lt;= accessdate &lt; tomorrow's date
		return true;
	else
		return false;															-- accessdate out of range
	end
end


--[[--------------------------&lt; G E T _ M O N T H _ N U M B E R &gt;----------------------------------------------

returns a number according to the month in a date: 1 for January, etc.  Capitalization and spelling must be correct. If not a valid month, returns 0

]]

local function get_month_number (month)
local long_months = {['January']=1, ['February']=2, ['March']=3, ['April']=4, ['May']=5, ['June']=6, ['July']=7, ['August']=8, ['September']=9, ['October']=10, ['November']=11, ['December']=12};
local short_months = {['Jan']=1, ['Feb']=2, ['Mar']=3, ['Apr']=4, ['May']=5, ['Jun']=6, ['Jul']=7, ['Aug']=8, ['Sep']=9, ['Oct']=10, ['Nov']=11, ['Dec']=12};
	return long_months[month] or												-- if month is the long-form name
		short_months[month] or													-- if month is the short-form name
		0;																		-- misspelled, improper case, or not a month name
end


--[[--------------------------&lt; I S _ V A L I D _ E M B A R G O _ D A T E &gt;------------------------------------

returns true and date value if that value has proper dmy, mdy, ymd format.

returns false and 9999 (embargoed forever) when date value is not proper format; assumes that when |embargo= is
set, the editor intended to embargo a pmc but |embargo= does not hold a single date.

]]

local function is_valid_embargo_date (v)
	if v:match ('^%d%d%d%d%-%d%d%-%d%d$') or									-- ymd
		v:match ('^%d%d?%s+%a+%s+%d%d%d%d$') or									-- dmy
		v:match ('^%a+%s+%d%d?%s*,%s*%d%d%d%d$') then							-- mdy
			return true, v;
	end
	return false, '9999';														-- if here not good date so return false and set embargo date to long time in future
end


--[[--------------------------&lt; G E T _ S E A S O N _ N U M B E R &gt;--------------------------------------------

returns a number according to the sequence of seasons in a year: 1 for Winter, etc.  Capitalization and spelling must be correct. If not a valid season, returns 0

]]

local function get_season_number (season)
local season_list = {['Winter']=21, ['Spring']=22, ['Summer']=23, ['Fall']=24, ['Autumn']=24};	-- make sure these numbers do not overlap month numbers
local temp;
	temp=season_list[season];
	if temp then return temp; end												-- if season is a valid name return its number
	return 0;																	-- misspelled, improper case, or not a season name
end

--[[--------------------------&lt; I S _ P R O P E R _ N A M E &gt;--------------------------------------------------

returns a non-zero number if date contains a recognized proper name.  Capitalization and spelling must be correct.

]]

local function is_proper_name (name)
local name_list = {['Christmas']=31}
local temp;
	temp=name_list[name];
	if temp then return temp; end				-- if name is a valid name return its number
	return 0;									-- misspelled, improper case, or not a proper name
end

--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ O R _ S E A S O N &gt;------------------------------

--returns true if month or season is valid (properly spelled, capitalized, abbreviated)

]]

local function is_valid_month_or_season (month_season)
	if 0 == get_month_number (month_season) then		-- if month text isn't one of the twelve months, might be a season
		if 0 == get_season_number (month_season) then	-- not a month, is it a season?
			return false;								-- return false not a month or one of the five seasons
		end
	end
	return true;
end

--[[--------------------------&lt; I S _ V A L I D _ Y E A R &gt;----------------------------------------------------

Function gets current year from the server and compares it to year from a citation parameter.  Years more than one year in the future are not acceptable.

]]
local year_limit;
local function is_valid_year(year)
	if not is_set(year_limit) then
		year_limit = tonumber(os.date(&quot;%Y&quot;))+1;			-- global variable so we only have to fetch it once
	end
	return tonumber(year) &lt;= year_limit;				-- false if year is in the future more than one year
end

--[[--------------------------&lt; I S _ V A L I D _ D A T E &gt;----------------------------------------------------
Returns true if day is less than or equal to the number of days in month and year is no farther into the future
than next year; else returns false.

Assumes Julian calendar prior to year 1582 and Gregorian calendar thereafter. Accounts for Julian calendar leap
years before 1582 and Gregorian leap years after 1582. Where the two calendars overlap (1582 to approximately
1923) dates are assumed to be Gregorian.

]]

local function is_valid_date (year, month, day)
local days_in_month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
local month_length;
	if not is_valid_year(year) then												-- no farther into the future than next year
		return false;
	end
	
	month = tonumber(month);													-- required for YYYY-MM-DD dates
	
	if (2==month) then															-- if February
		month_length = 28;														-- then 28 days unless
		if 1582 &gt; tonumber(year) then											-- Julian calendar
			if 0==(year%4) then
				month_length = 29;
			end
		else																	-- Gregorian calendar
			if (0==(year%4) and (0~=(year%100) or 0==(year%400))) then			-- is a leap year?
				month_length = 29;												-- if leap year then 29 days in February
			end
		end
	else
		month_length=days_in_month[month];
	end

	if tonumber (day) &gt; month_length then
		return false;
	end
	return true;
end

--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ R A N G E _ S T Y L E &gt;--------------------------

Months in a range are expected to have the same style: JanMar or OctoberDecember but not FebruaryMar or JulAugust. 
There is a special test for May because it can be either short or long form.

Returns true when style for both months is the same

]]

local function is_valid_month_range_style (month1, month2)
local len1 = month1:len();
local len2 = month2:len();
	if len1 == len2 then
		return true;															-- both months are short form so return true
	elseif 'May' == month1 or 'May'== month2 then
		return true;															-- both months are long form so return true
	elseif 3 == len1 or 3 == len2 then
		return false;															-- months are mixed form so return false
	else
		return true;															-- both months are long form so return true
	end
end


--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ S E A S O N _ R A N G E &gt;------------------------

Check a pair of months or seasons to see if both are valid members of a month or season pair.

Month pairs are expected to be left to right, earliest to latest in time.

Similarly, seasons are also left to right, earliest to latest in time.  There is an oddity with seasons: winter is assigned a value of 1, spring 2, ...,
fall and autumn 4.  Because winter can follow fall/autumn at the end of a calender year, a special test is made to see if |date=Fall-Winter yyyy (4-1) is the date.

]]

local function is_valid_month_season_range(range_start, range_end)
	local range_start_number = get_month_number (range_start);
	local range_end_number;
	
	if 0 == range_start_number then												-- is this a month range?
		local range_start_number = get_season_number (range_start);				-- not a month; is it a season? get start season number
		range_end_number = get_season_number (range_end);						-- get end season number

		if 0 ~= range_start_number then											-- is start of range a season?
			if range_start_number &lt; range_end_number then						-- range_start is a season
				return true;													-- return true when range_end is also a season and follows start season; else false
			end
			if 24 == range_start_number and 21 == range_end_number then			-- special case when season range is Fall-Winter or Autumn-Winter
				return true;
			end
		end
		return false;		-- range_start is not a month or a season; or range_start is a season and range_end is not; or improper season sequence
	end

	range_end_number = get_month_number (range_end);							-- get end month number
	if range_start_number &lt; range_end_number then								-- range_start is a month; does range_start precede range_end?
		if is_valid_month_range_style (range_start, range_end) then				-- do months have the same style?
			return true;														-- proper order and same style
		end
	end
	return false;																-- range_start month number is greater than or equal to range end number; or range end isn't a month
end


--[[--------------------------&lt; M A K E _ C O I N S _ D A T E &gt;------------------------------------------------

This function receives a table of date parts for one or two dates and an empty table reference declared in
Module:Citation/CS1.  The function is called only for |date= parameters and only if the |date=&lt;value&gt; is 
determined to be a valid date format.  The question of what to do with invalid date formats is not answered here.

The date parts in the input table are converted to an ISO 8601 conforming date string:
	single whole dates:		yyyy-mm-dd
	month and year dates:	yyyy-mm
	year dates:				yyyy
	ranges:					yyyy-mm-dd/yyyy-mm-dd
							yyyy-mm/yyyy-mm
							yyyy/yyyy

Dates in the Julian calendar are reduced to year or year/year so that we don't have to do calendar conversion from
Julian to Proleptic Gregorian.

The input table has:
	year, year2  always present; if before 1582, ignore months and days if present
	month, month2  0 if not provided, 1-12 for months, 21-24 for seasons; 31 proper name dates
	day, day2   0 if not provided, 1-31 for days
	
the output table receives:
	rftdate:	an IS8601 formatted date
	rftchron:	a free-form version of the date, usually without year which is in rftdate (season ranges and propername dates)
	rftssn:		one of four season keywords: winter, spring, summer, fall (lowercase)

]]

local function make_COinS_date (input, tCOinS_date)
	local date;																	-- one date or first date in a range
	local date2 = '';															-- end of range date
	
	if 1582 &gt; tonumber(input.year) or 20 &lt; tonumber(input.month) then			-- Julian calendar or season so &amp;rft.date gets year only
		date = input.year;
		if 0 ~= input.year2 and input.year ~= input.year2 then					-- if a range, only the second year portion when not the same as range start year
			date = string.format ('%.4d/%.4d', tonumber(input.year), tonumber(input.year2))		-- assemble the date range
		end
		if 20 &lt; tonumber(input.month) then										-- if season or propername date
			local season = {[21]='winter', [22]='spring', [23]='summer', [24]='fall', [31]='Christmas'};	-- seasons lowercase, no autumn; proper names use title case
			if 0 == input.month2 then											-- single season date
				if 30 &lt;tonumber(input.month) then
					tCOinS_date.rftchron = season[input.month];					-- proper name dates
				else
					tCOinS_date.rftssn = season[input.month];					-- seasons
				end
			else																-- season range with a second season specified
				if input.year ~= input.year2 then								-- season year  season year range or season yearyear
					tCOinS_date.rftssn = season[input.month];					-- start of range season; keep this?
					if 0~= input.month2 then
						tCOinS_date.rftchron = string.format ('%s %s  %s %s', season[input.month], input.year, season[input.month2], input.year2);
					end
				else															-- seasonseason year range
					tCOinS_date.rftssn = season[input.month];					-- start of range season; keep this?
					tCOinS_date.rftchron = season[input.month] .. '' .. season[input.month2];	-- seasonseason year range
				end
			end
		end
		tCOinS_date.rftdate = date;
		return;																	-- done
	end
	
	if 0 ~= input.day then
		date = string.format ('%s-%.2d-%.2d', input.year, tonumber(input.month), tonumber(input.day));	-- whole date
	elseif 0 ~= input.month then
		date = string.format ('%s-%.2d', input.year, tonumber(input.month));	-- year and month
	else
		date = string.format ('%s', input.year);								-- just year
	end

	if 0 ~= input.year2 then
		if 0 ~= input.day2 then
			date2 = string.format ('/%s-%.2d-%.2d', input.year2, tonumber(input.month2), tonumber(input.day2));		-- whole date
		elseif 0 ~= input.month2 then
			date2 = string.format ('/%s-%.2d', input.year2, tonumber(input.month2));	-- year and month
		else
			date2 = string.format ('/%s', input.year2);							-- just year
		end
	end
	
	tCOinS_date.rftdate = date .. date2;										-- date2 has the '/' separator
	return;
end


--[[--------------------------&lt; C H E C K _ D A T E &gt;----------------------------------------------------------

Check date format to see that it is one of the formats approved by WP:DATESNO or WP:DATERANGE. Exception: only
allowed range separator is endash.  Additionally, check the date to see that it is a real date: no 31 in 30-day
months; no 29 February when not a leap year.  Months, both long-form and three character abbreviations, and seasons
must be spelled correctly.  Future years beyond next year are not allowed.

If the date fails the format tests, this function returns false and does not return values for anchor_year and
COinS_date.  When this happens, the date parameter is used in the COinS metadata and the CITEREF identifier gets
its year from the year parameter if present otherwise CITEREF does not get a date value.

Inputs:
	date_string - date string from date-holding parameters (date, year, accessdate, embargo, archivedate, etc.)

Returns:
	false if date string is not a real date; else
	true, anchor_year, COinS_date
		anchor_year can be used in CITEREF anchors
		COinS_date is ISO 8601 format date; see make_COInS_date()

]]

local function check_date (date_string, tCOinS_date, test_accessdate)
	local year;			-- assume that year2, months, and days are not used;
	local year2=0;		-- second year in a year range
	local month=0;
	local month2=0;		-- second month in a month range
	local day=0;
	local day2=0;		-- second day in a day range
	local anchor_year;
	local coins_date;

	if date_string:match(&quot;^%d%d%d%d%-%d%d%-%d%d$&quot;) then										-- year-initial numerical year month day format
		year, month, day=string.match(date_string, &quot;(%d%d%d%d)%-(%d%d)%-(%d%d)&quot;);
		if 12 &lt; tonumber(month) or 1 &gt; tonumber(month) or 1582 &gt; tonumber(year) or 0 == tonumber(day) then return false; end	-- month or day number not valid or not Gregorian calendar
		anchor_year = year;

	elseif date_string:match(&quot;^%a+ +[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then						-- month-initial: month day, year
		month, day, anchor_year, year=string.match(date_string, &quot;(%a+)%s*(%d%d?),%s*((%d%d%d%d)%a?)&quot;);
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
				
	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d?[%-][1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then				-- month-initial day range: month dayday, year; days are separated by endash
		month, day, day2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?)[%-](%d%d?), +((%d%d%d%d)%a?)&quot;);
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
		month2=month;																		-- for metadata
		year2=year;

	elseif date_string:match(&quot;^[1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then						-- day-initial: day month year
		day, month, anchor_year, year=string.match(date_string, &quot;(%d%d*)%s*(%a+)%s*((%d%d%d%d)%a?)&quot;);
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d?[%-][1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then				-- day-range-initial: dayday month year; days are separated by endash
		day, day2, month, anchor_year, year=mw.ustring.match(date_string, &quot;(%d%d?)[%-](%d%d?) +(%a+) +((%d%d%d%d)%a?)&quot;);
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
		month2=month;																		-- for metadata
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d? +%a+ [%-] [1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then		-- day initial month-day-range: day month - day month year; uses spaced endash
		day, month, day2, month2, anchor_year, year=mw.ustring.match(date_string, &quot;(%d%d?) +(%a+) [%-] (%d%d?) +(%a+) +((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end	-- date range order is left to right: earlier to later;
		month = get_month_number (month);													-- for metadata
		month2 = get_month_number (month2);
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d? [%-] %a+ +[1-9]%d?, +[1-9]%d%d%d?%a?$&quot;) then		-- month initial month-day-range: month day  month day, year;  uses spaced endash
		month, day, month2, day2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?) [%-] (%a+) +(%d%d?), +((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end
		month = get_month_number (month);													-- for metadata
		month2 = get_month_number (month2);
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d? +%a+ +[1-9]%d%d%d [%-] [1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then		-- day initial month-day-year-range: day month year - day month year; uses spaced endash
		day, month, year, day2, month2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%d%d?) +(%a+) +(%d%d%d%d?) [%-] (%d%d?) +(%a+) +((%d%d%d%d?)%a?)&quot;);
		if tonumber(year2) &lt;= tonumber(year) then return false; end												-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) or not is_valid_month_range_style(month, month2) then return false; end		-- year2 no more than one year in the future; months same style
		month = get_month_number (month);																		-- for metadata
		month2 = get_month_number (month2);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d?, +[1-9]%d%d%d [%-] %a+ +[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then		-- month initial month-day-year-range: month day, year  month day, year;  uses spaced endash
		month, day, year, month2, day2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?), +(%d%d%d%d) [%-] (%a+) +(%d%d?), +((%d%d%d%d)%a?)&quot;);
		if tonumber(year2) &lt;= tonumber(year) then return false; end												-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) or not is_valid_month_range_style(month, month2) then return false; end		-- year2 no more than one year in the future; months same style
		month = get_month_number (month);																		-- for metadata
		month2 = get_month_number (month2);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d[%-]%d%d%a?$&quot;) then								-- special case Winter/Summer year-year (YYYY-YY); year separated with unspaced endash
		local century;
		month, year, century, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +((%d%d)%d%d)[%-]((%d%d)%a?)&quot;);
		if 'Winter' ~= month and 'Summer' ~= month then return false end;					-- 'month' can only be Winter or Summer
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		year2 = century..year2;																-- add the century to year2 for comparisons
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		month = get_season_number (month);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d[%-][1-9]%d%d%d%a?$&quot;) then						-- special case Winter/Summer year-year; year separated with unspaced endash
		month, year, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d%d%d)[%-]((%d%d%d%d)%a?)&quot;);
		if 'Winter' ~= month and 'Summer' ~= month then return false end;					-- 'month' can only be Winter or Summer
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		month = get_season_number (month);													-- for metadata

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d +[%-] +%a+ +[1-9]%d%d%d%a?$&quot;) then				-- month/season year - month/season year; separated by spaced endash
		month, year, month2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d%d%d) +[%-] +(%a+) +((%d%d%d%d)%a?)&quot;);
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end							-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		if 0 ~= get_month_number(month) and 0 ~= get_month_number(month2) and is_valid_month_range_style(month, month2) then 	-- both must be month year, same month style
			month = get_month_number(month);
			month2 = get_month_number(month2);
		elseif 0 ~= get_season_number(month) and 0 ~= get_season_number(month2) then		-- both must be or season year, not mixed
			month = get_season_number(month);
			month2 = get_season_number(month2);
		else
			 return false;
		end

	elseif mw.ustring.match(date_string, &quot;^%a+[%-]%a+ +[1-9]%d%d%d%a?$&quot;) then					-- month/season range year; months separated by endash 
		month, month2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+)[%-](%a+)%s*((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or (not is_valid_year(year)) then return false; end
		if 0 ~= get_month_number(month) then									-- determined to be a valid range so just check this one to know if month or season
			month = get_month_number(month);
			month2 = get_month_number(month2);
		else
			month = get_season_number(month);
			month2 = get_season_number(month2);
		end
		year2=year;
		
	elseif date_string:match(&quot;^%a+ +%d%d%d%d%a?$&quot;) then							-- month/season year or proper-name year
		month, anchor_year, year=date_string:match(&quot;(%a+)%s*((%d%d%d%d)%a?)&quot;);
		if not is_valid_year(year) then return false; end
		if not is_valid_month_or_season (month) and 0 == is_proper_name (month) then return false; end
		if 0 ~= get_month_number(month) then									-- determined to be a valid range so just check this one to know if month or season
			month = get_month_number(month);
		elseif 0 ~= get_season_number(month) then
			month = get_season_number(month);
		else
			month = is_proper_name (month);										-- must be proper name; not supported in COinS
		end

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d%d%d?[%-][1-9]%d%d%d?%a?$&quot;) then				-- Year range: YYY-YYY or YYY-YYYY or YYYYYYYY; separated by unspaced endash; 100-9999
		year, anchor_year, year2=mw.ustring.match(date_string, &quot;(%d%d%d%d?)[%-]((%d%d%d%d?)%a?)&quot;);
		anchor_year=year..''..anchor_year;										-- assemble anchor year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d%d%d[%-]%d%d%a?$&quot;) then						-- Year range: YYYYYY; separated by unspaced endash
		local century;
		year, century, anchor_year, year2=mw.ustring.match(date_string, &quot;((%d%d)%d%d)[%-]((%d%d)%a?)&quot;);
		anchor_year=year..''..anchor_year;										-- assemble anchor year from both years
		if 13 &gt; tonumber(year2) then return false; end							-- don't allow 2003-05 which might be May 2003
		year2 = century..year2;													-- add the century to year2 for comparisons
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif date_string:match(&quot;^[1-9]%d%d%d?%a?$&quot;) then							-- year; here accept either YYY or YYYY
		anchor_year, year=date_string:match(&quot;((%d%d%d%d?)%a?)&quot;);
		if false == is_valid_year(year) then
			return false;
		end

	else
		return false;															-- date format not one of the MOS:DATE approved formats
	end

	if test_accessdate then														-- test accessdate here because we have numerical date parts
		if 0 ~= year and 0 ~= month and 0 ~= day and 							-- all parts of a single date required
			0 == year2 and 0 == month2 and 0 == day2 then						-- none of these; accessdate must not be a range
				if not is_valid_accessdate (year..'-'..month..'-'..day) then	
					return false;												-- return false when accessdate out of bounds
				end
		else
			return false;														-- return false when accessdate is a range of two dates
		end
	end

	local result=true;															-- check whole dates for validity; assume true because not all dates will go through this test
	if 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 == day2 then		-- YMD (simple whole date)
		result=is_valid_date(year,month,day);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 ~= day2 then	-- YMD-d (day range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-md (day month range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month2,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 ~= year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-ymd (day month year range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year2,month2,day2);
	end
	
	if false == result then return false; end

	if nil ~= tCOinS_date then													-- this table only passed into this function when testing |date= parameter values
		make_COinS_date ({year=year, month=month, day=day, year2=year2, month2=month2, day2=day2}, tCOinS_date);	-- make an ISO 8601 date string for COinS
	end
	
	return true, anchor_year;													-- format is good and date string represents a real date
end	


--[[--------------------------&lt; D A T E S &gt;--------------------------------------------------------------------

Cycle the date-holding parameters in passed table date_parameters_list through check_date() to check compliance with MOS:DATE. For all valid dates, check_date() returns
true. The |date= parameter test is unique, it is the only date holding parameter from which values for anchor_year (used in CITEREF identifiers) and COinS_date (used in
the COinS metadata) are derived.  The |date= parameter is the only date-holding parameter that is allowed to contain the no-date keywords &quot;n.d.&quot; or &quot;nd&quot; (without quotes).

Unlike most error messages created in this module, only one error message is created by this function. Because all of the date holding parameters are processed serially,
a single error message is created as the dates are tested.

]]

local function dates(date_parameters_list, tCOinS_date)
	local anchor_year;		-- will return as nil if the date being tested is not |date=
	local COinS_date;		-- will return as nil if the date being tested is not |date=
	local embargo_date;															-- if embargo date is a good dmy, mdy, ymd date then holds original value else reset to 9999
	local error_message = &quot;&quot;;
	local good_date = false;
	
	for k, v in pairs(date_parameters_list) do									-- for each date-holding parameter in the list
		if is_set(v) then														-- if the parameter has a value
			if v:match(&quot;^c%. [1-9]%d%d%d?%a?$&quot;) then							-- special case for c. year or with or without CITEREF disambiguator - only |date= and |year=
				local year = v:match(&quot;c%. ([1-9]%d%d%d?)%a?&quot;);					-- get the year portion so it can be tested
				if 'date'==k then
					anchor_year, COinS_date = v:match(&quot;((c%. [1-9]%d%d%d?)%a?)&quot;);	-- anchor year and COinS_date only from |date= parameter
					good_date = is_valid_year(year);
				elseif 'year'==k then
					good_date = is_valid_year(year);
				end
			elseif 'date'==k then												-- if the parameter is |date=
				if v:match(&quot;^n%.d%.%a?$&quot;) then									-- if |date=n.d. with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((n%.d%.)%a?)&quot;);	--&quot;n.d.&quot;; no error when date parameter is set to no date
				elseif v:match(&quot;^nd%a?$&quot;) then									-- if |date=nd with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((nd)%a?)&quot;);	--&quot;nd&quot;;	no error when date parameter is set to no date
				else
					good_date, anchor_year, COinS_date = check_date (v, tCOinS_date);	-- go test the date
				end
			elseif 'year'==k then												-- if the parameter is |year= it should hold only a year value
				if v:match(&quot;^[1-9]%d%d%d?%a?$&quot;) then							-- if |year= 3 or 4 digits only with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((%d+)%a?)&quot;);
				end
			elseif 'access-date'==k then										-- if the parameter is |date=
				good_date = check_date (v, nil, true);							-- go test the date; nil is a placeholder; true is the test_accessdate flag
			elseif 'embargo'==k then											-- if the parameter is |embargo=
				good_date = check_date (v);										-- go test the date
				if true == good_date then										-- if the date is a valid date
					good_date, embargo_date = is_valid_embargo_date (v);		-- is |embargo= date a single dmy, mdy, or ymd formatted date? yes:returns embargo; no: returns 9999
				end
			else																-- any other date-holding parameter
				good_date = check_date (v);										-- go test the date
			end
			if false==good_date then											-- assemble one error message so we don't add the tracking category multiple times
				if is_set(error_message) then									-- once we've added the first portion of the error message ...
					error_message=error_message .. &quot;, &quot;;						-- ... add a comma space separator
				end
				error_message=error_message .. &quot;&amp;#124;&quot; .. k .. &quot;=&quot;;			-- add the failed parameter
			end
		end
	end
	return anchor_year, embargo_date, error_message;											-- and done
end


--[[--------------------------&lt; Y E A R _ D A T E _ C H E C K &gt;------------------------------------------------

Compare the value provided in |year= with the year value(s) provided in |date=.  This function returns a numeric value:
	0 - year value does not match the year value in date
	1 - (default) year value matches the year value in date or one of the year values when date contains two years
	2 - year value matches the year value in date when date is in the form YYYY-MM-DD and year is disambiguated (|year=YYYYx)

]]

local function year_date_check (year_string, date_string)
	local year;
	local date1;
	local date2;
	local result = 1;															-- result of the test; assume that the test passes
	
	year = year_string:match ('(%d%d%d%d?)');

	if date_string:match ('%d%d%d%d%-%d%d%-%d%d') and year_string:match ('%d%d%d%d%a') then	--special case where both date and year are required YYYY-MM-DD and YYYYx
		date1 = date_string:match ('(%d%d%d%d)');
		year = year_string:match ('(%d%d%d%d)');
		if year ~= date1 then
			result = 0;															-- years don't match
		else
			result = 2;															-- years match; but because disambiguated, don't add to maint cat
		end
		
	elseif date_string:match (&quot;%d%d%d%d?.-%d%d%d%d?&quot;) then						-- any of the standard range formats of date with two three- or four-digit years
		date1, date2 = date_string:match (&quot;(%d%d%d%d?).-(%d%d%d%d?)&quot;);
		if year ~= date1 and year ~= date2 then
			result = 0;
		end

	elseif mw.ustring.match(date_string, &quot;%d%d%d%d[%-]%d%d&quot;) then								-- YYYY-YY date ranges
		local century;
		date1, century, date2 = mw.ustring.match(date_string, &quot;((%d%d)%d%d)[%-]+(%d%d)&quot;);
		date2 = century..date2;													-- convert YY to YYYY
		if year ~= date1 and year ~= date2 then
			result = 0;
		end

	elseif date_string:match (&quot;%d%d%d%d?&quot;) then									-- any of the standard formats of date with one year
		date1 = date_string:match (&quot;(%d%d%d%d?)&quot;);
		if year ~= date1 then
			result = 0;
		end
	else
		result = 0;																-- no recognizable year in date
	end
	return result;
end


--[[-------------------------&lt; R E F O R M A T   T A B L E S &gt;------------------------------------------------

These table are used exclusively for reformatting dates

]]

local source_patterns = {						-- this table holds patterns that match allowed date formats used to extract date components
	['dmy'] = '(%d%d?)%s+(%a+)%s+(%d%d%d%d)',
	['mdy'] = '(%a+)%s+(%d%d?),%s+(%d%d%d%d)',
	['ymd'] = '(%d%d%d%d)%-(%d%d)-(%d%d)',
	}

local short_formats = {							-- this table holds format strings used by os.date() for short month names
	['dmy'] = '%e %b %Y',
	['mdy'] = '%b %e, %Y',
	['ymd'] = '%F',
	}

local long_formats = {							-- this table holds format strings used by os.date() for long month names
	['dmy'] = '%e %B %Y',
	['mdy'] = '%B %e, %Y',
	['ymd'] = '%F',
	}


--[[-------------------------&lt; G E T _ D M Y _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from DMY formatted date, places them in the source_date table, and returns.

]]

local function get_dmy_date_parts (date, source_date)
	source_date.day, source_date.month, source_date.year = date:match (source_patterns['dmy']);	-- get date components as strings
	source_date.month = get_month_number (source_date.month);					-- get month number
end


--[[-------------------------&lt; G E T _ M D Y _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from MDY formatted date, places them in the source_date table, and returns.

]]

local function get_mdy_date_parts (date, source_date)
	source_date.month, source_date.day, source_date.year = date:match (source_patterns['mdy']);	-- get date components as strings
	source_date.month = get_month_number (source_date.month);					-- get month number
end


--[[-------------------------&lt; G E T _ Y M D _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from YMD formatted date, places them in the source_date table, and returns.

]]

local function get_ymd_date_parts (date, source_date)
	source_date.year, source_date.month, source_date.day = date:match (source_patterns['ymd']);	-- get date components as strings
end


--[[-------------------------&lt; R E F O R M A T _ D A T E S &gt;--------------------------------------------------

Reformats existing dates into the format specified by format and short.

format is one of several keywords: dmy, dmy-all, mdy, mdy-all, ymd, ymd-all.  The all version includes access- and
archive-dates; otherwise these dates are not reformatted

Date ranges, season dates, proper name dates are not currently supported.

]]

local function reformat_dates (date_parameters_list, format, short)
	local all = false;															-- set to false to skip access- and archive-dates
	local format_str;
	local source_date = {};
	
	if format:match('%a+%-all') then
		format = format:match('(%a+)%-all');									-- extract the format
		all = true;																-- set to true to format access- and archive-dates
	end
	
	for param_name, param_val in pairs(date_parameters_list) do					-- for each date-holding parameter in the list
		if is_set(param_val) then												-- if the parameter has a value
			if not all and in_array (param_name, {'access-date', 'archive-date'}) then	-- if access- or archive-date and format not xxx-all
				param_val = '';													-- set to empty string so we don't process this date
			end
			for source, pattern in pairs(source_patterns) do
				if param_val:match(pattern) then
					if 'ymd' == source then
						get_ymd_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					elseif 'dmy' == source then
						get_dmy_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					elseif 'mdy' == source then
						get_mdy_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					end

					if 'ymd' == format and 1582 &gt; tonumber(source_date.year) then	-- ymd format dates not allowed before 1582
						return false;											-- abandon reformatting
					end
					
					if short then
						format_str = short_formats[format];
					else
						format_str = long_formats[format];
					end
																				-- convert date and save;
					date_parameters_list[param_name] = mw.text.trim (os.date (format_str, os.time(source_date)));	-- strip leading space when single digit day and %e is first format
				end
			end
		end
	end
	return true;																-- declare success and done
end


--[[--------------------------&lt; D A T E _ H Y P H E N _ T O _ D A S H &gt;----------------------------------------

Loops through the list of date-holding parameters and converts any hyphen to an ndash.  Not called if the cs1|2
template has any date errors.

Modifies the date_parameters_list and returns true if hyphens are replaced, else returns false.

]]

local function date_hyphen_to_dash (date_parameters_list)
	local result = false;
	local n;
	for param_name, param_val in pairs(date_parameters_list) do					-- for each date-holding parameter in the list
		if not param_val:match ('%d%d%d%d%-%d%d%-%d%d') then					-- for those that are not ymd dates
			param_val, n = param_val:gsub ('%-', '');							-- replace any hyphen with ndash
			if 0 ~= n then
				date_parameters_list[param_name] = param_val;					-- update the list
				result = true;
			end
		end
	end
	return result;																-- so we know if 
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (utilities_page_ptr)
	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;											-- import functions from select Module:Citation/CS1/Utilities module
end



return {																		-- return exported functions
	dates = dates,
	year_date_check = year_date_check,
	reformat_dates = reformat_dates,
	date_hyphen_to_dash = date_hyphen_to_dash,
	set_selected_modules = set_selected_modules
	}</text>
      <sha1>i1fv7pqohu4tjsyxsm6wr9x4cy0aoey</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Identifiers</title>
    <ns>828</ns>
    <id>48812124</id>
    <revision>
      <id>803686721</id>
      <parentid>777799222</parentid>
      <timestamp>2017-10-04T00:50:45Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <minor/>
      <comment>ssrn limit -&gt; 3500000;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="42381">
local identifiers = {};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array, set_error, select_one, add_maint_cat, substitute;					-- functions in Module:Citation/CS1/Utilities

local z;																		-- table of tables defined in Module:Citation/CS1/Utilities

local cfg;																		-- table of configuration tables that are defined in Module:Citation/CS1/Configuration


--[[--------------------------&lt; E X T E R N A L _ L I N K _ I D &gt;----------------------------------------------

Formats a wiki style external link

]]

local function external_link_id(options)
	local url_string = options.id;
	local ext_link;
	
	if options.encode == true or options.encode == nil then
		url_string = mw.uri.encode( url_string );
	end
	
	ext_link = mw.ustring.format ('[%s%s%s %s]', options.prefix, url_string, options.suffix or &quot;&quot;, mw.text.nowiki(options.id));
	if is_set(options.access) then
		ext_link = substitute (cfg.presentation['access-signal'], {ext_link, cfg.presentation[options.access]});	-- add the free-to-read / paywall lock
	end
	
	return mw.ustring.format( '[[%s|%s]]%s%s', options.link, options.label, options.separator or &quot;&amp;nbsp;&quot;, ext_link);
end


--[[--------------------------&lt; I N T E R N A L _ L I N K _ I D &gt;----------------------------------------------

Formats a wiki style internal link

]]

local function internal_link_id(options)
	return mw.ustring.format( '[[%s|%s]]%s[[%s%s%s|%s]]',
		options.link, options.label, options.separator or &quot;&amp;nbsp;&quot;,
		options.prefix, options.id, options.suffix or &quot;&quot;,
		mw.text.nowiki(options.id)
	);
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------

ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit.
ISBN-13 is checked in check_isbn().

If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length
and stripped of dashes, spaces and other non-isxn characters.

]]

local function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of byte values '0'  0x30 .. '9'   0x39, 'X'  0x58
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( &quot;X&quot; ) then		-- if checkdigit is X (compares the byte value of 'X' which is 0x58)
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N  _ 1 3 &gt;----------------------------------------------

ISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.
If the number is valid, the result will be 0. Before calling this function, isbn-13/ismn must be checked for length
and stripped of dashes, spaces and other non-isxn-13 characters.

]]

local function is_valid_isxn_13 (isxn_str)
	local temp=0;
	
	isxn_str = { isxn_str:byte(1, 13) };										-- make a table of byte values '0'  0x30 .. '9'   0x39
	for i, v in ipairs( isxn_str ) do
		temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );				-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit
	end
	return temp % 10 == 0;														-- sum modulo 10 is zero when isbn-13/ismn is correct
end


--[[--------------------------&lt; C H E C K _ I S B N &gt;------------------------------------------------------------

Determines whether an ISBN string is valid

]]

local function check_isbn( isbn_str )
	if nil ~= isbn_str:match(&quot;[^%s-0-9X]&quot;) then
		return false, 'invalid character';										-- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
	end
	isbn_str = isbn_str:gsub( &quot;-&quot;, &quot;&quot; ):gsub( &quot; &quot;, &quot;&quot; );						-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return false, 'length';													-- fail if incorrect length
	end

	if len == 10 then
		if isbn_str:match( &quot;^%d*X?$&quot; ) == nil then								-- fail if isbn_str has 'X' anywhere but last position
			return false, 'invalid form';									
		end
		return is_valid_isxn(isbn_str, 10), 'checksum';
	else
		if isbn_str:match( &quot;^%d+$&quot; ) == nil then
			return false, 'invalid character';									-- fail if isbn13 is not all digits
		end
		if isbn_str:match( &quot;^97[89]%d*$&quot; ) == nil then
			return false, 'invalid prefix';										-- fail when isbn13 does not begin with 978 or 979
		end
		return is_valid_isxn_13 (isbn_str), 'checksum';
	end
end


--[[--------------------------&lt; I S M N &gt;----------------------------------------------------------------------

Determines whether an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the
same check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf
section 2, pages 912.

]]

local function ismn (id)
	local handler = cfg.id_handlers['ISMN'];
	local text;
	local valid_ismn = true;
	local id_copy;

	id_copy = id;																-- save a copy because this testing is destructive
	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );													-- strip spaces, hyphens, and endashes from the ismn

	if 13 ~= id:len() or id:match( &quot;^9790%d*$&quot; ) == nil then					-- ismn must be 13 digits and begin 9790
		valid_ismn = false;
	else
		valid_ismn=is_valid_isxn_13 (id);										-- validate ismn
	end

--	text = internal_link_id({link = handler.link, label = handler.label,		-- use this (or external version) when there is some place to link to
--		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	text=&quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]&quot; .. handler.separator .. id_copy;		-- because no place to link to yet

	if false == valid_ismn then
		text = text .. ' ' .. set_error( 'bad_ismn' )							-- add an error message if the ismn is invalid
	end 
	
	return text;
end


--[[--------------------------&lt; I S S N &gt;----------------------------------------------------------------------

Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but
has separated the two groups of four digits with a space.  When that condition occurred, the resulting link looked
like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length
and makes sure that the checkdigit agrees with the calculated value.  Incorrect length (8 digits), characters
other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn error message.  The
issn is always displayed with a hyphen, even if the issn was given as a single group of 8 digits.

]]

local function issn(id, e)
	local issn_copy = id;		-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local handler;
	local text;
	local valid_issn = true;
	
	if e then
		 handler = cfg.id_handlers['EISSN'];
	else
		 handler = cfg.id_handlers['ISSN'];
	end

	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );									-- strip spaces, hyphens, and endashes from the issn

	if 8 ~= id:len() or nil == id:match( &quot;^%d*X?$&quot; ) then		-- validate the issn: 8 digits long, containing only 0-9 or X in the last position
		valid_issn=false;										-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);						-- validate issn
	end

	if true == valid_issn then
		id = string.sub( id, 1, 4 ) .. &quot;-&quot; .. string.sub( id, 5 );	-- if valid, display correctly formatted version
	else
		id = issn_copy;											-- if not valid, use the show the invalid issn with error message
	end
	
	text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if false == valid_issn then
		text = text .. ' ' .. set_error( 'bad_issn', e and 'e' or '' )			-- add an error message if the issn is invalid
	end 
	
	return text
end


--[[--------------------------&lt; A M A Z O N &gt;------------------------------------------------------------------

Formats a link to Amazon.  Do simple error checking: asin must be mix of 10 numeric or uppercase alpha
characters.  If a mix, first character must be uppercase alpha; if all numeric, asins must be 10-digit
isbn. If 10-digit isbn, add a maintenance category so a bot or awb script can replace |asin= with |isbn=.
Error message if not 10 characters, if not isbn10, if mixed and first character is a digit.

]]

local function amazon(id, domain)
	local err_cat = &quot;&quot;

	if not id:match(&quot;^[%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u]$&quot;) then
		err_cat =  ' ' .. set_error ('bad_asin');								-- asin is not a mix of 10 uppercase alpha and numeric characters
	else
		if id:match(&quot;^%d%d%d%d%d%d%d%d%d[%dX]$&quot;) then								-- if 10-digit numeric (or 9 digits with terminal X)
			if check_isbn( id ) then												-- see if asin value is isbn10
				add_maint_cat ('ASIN');
			elseif not is_set (err_cat) then
				err_cat =  ' ' .. set_error ('bad_asin');						-- asin is not isbn10
			end
		elseif not id:match(&quot;^%u[%d%u]+$&quot;) then
			err_cat =  ' ' .. set_error ('bad_asin');							-- asin doesn't begin with uppercase alpha
		end
	end
	if not is_set(domain) then 
		domain = &quot;com&quot;;
	elseif in_array (domain, {'jp', 'uk'}) then			-- Japan, United Kingdom
		domain = &quot;co.&quot; .. domain;
	elseif in_array (domain, {'au', 'br', 'mx'}) then	-- Australia, Brazil, Mexico
		domain = &quot;com.&quot; .. domain;
	end
	local handler = cfg.id_handlers['ASIN'];
	return external_link_id({link=handler.link,
		label=handler.label, prefix=handler.prefix .. domain .. &quot;/dp/&quot;,
		id=id, encode=handler.encode, separator = handler.separator}) .. err_cat;
end


--[[--------------------------&lt; A R X I V &gt;--------------------------------------------------------------------

See: http://arxiv.org/help/arxiv_identifier

format and error check arXiv identifier.  There are three valid forms of the identifier:
the first form, valid only between date codes 9108 and 0703 is:
	arXiv:&lt;archive&gt;.&lt;class&gt;/&lt;date code&gt;&lt;number&gt;&lt;version&gt;
where:
	&lt;archive&gt; is a string of alpha characters - may be hyphenated; no other punctuation
	&lt;class&gt; is a string of alpha characters - may be hyphenated; no other punctuation
	&lt;date code&gt; is four digits in the form YYMM where YY is the last two digits of the four-digit year and MM is the month number January = 01
		first digit of YY for this form can only 9 and 0
	&lt;number&gt; is a three-digit number
	&lt;version&gt; is a 1 or more digit number preceded with a lowercase v; no spaces (undocumented)
	
the second form, valid from April 2007 through December 2014 is:
	arXiv:&lt;date code&gt;.&lt;number&gt;&lt;version&gt;
where:
	&lt;date code&gt; is four digits in the form YYMM where YY is the last two digits of the four-digit year and MM is the month number January = 01
	&lt;number&gt; is a four-digit number
	&lt;version&gt; is a 1 or more digit number preceded with a lowercase v; no spaces

the third form, valid from January 2015 is:
	arXiv:&lt;date code&gt;.&lt;number&gt;&lt;version&gt;
where:
	&lt;date code&gt; and &lt;version&gt; are as defined for 0704-1412
	&lt;number&gt; is a five-digit number
]]

local function arxiv (id, class)
	local handler = cfg.id_handlers['ARXIV'];
	local year, month, version;
	local err_cat = '';
	local text;
	
	if id:match(&quot;^%a[%a%.%-]+/[90]%d[01]%d%d%d%d$&quot;) or id:match(&quot;^%a[%a%.%-]+/[90]%d[01]%d%d%d%dv%d+$&quot;) then	-- test for the 9108-0703 format w/ &amp; w/o version
		year, month = id:match(&quot;^%a[%a%.%-]+/([90]%d)([01]%d)%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((not (90 &lt; year or 8 &gt; year)) or (1 &gt; month or 12 &lt; month)) or		-- if invalid year or invalid month
			((91 == year and 7 &gt; month) or (7 == year and 3 &lt; month)) then		-- if years ok, are starting and ending months ok?
				err_cat = ' ' .. set_error( 'bad_arxiv' );						-- set error message
		end
	elseif id:match(&quot;^%d%d[01]%d%.%d%d%d%d$&quot;) or id:match(&quot;^%d%d[01]%d%.%d%d%d%dv%d+$&quot;) then	-- test for the 0704-1412 w/ &amp; w/o version
		year, month = id:match(&quot;^(%d%d)([01]%d)%.%d%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((7 &gt; year) or (14 &lt; year) or (1 &gt; month or 12 &lt; month)) or			-- is year invalid or is month invalid? (doesn't test for future years)
			((7 == year) and (4 &gt; month)) then --or									-- when year is 07, is month invalid (before April)?
				err_cat = ' ' .. set_error( 'bad_arxiv' );						-- set error message
		end
	elseif id:match(&quot;^%d%d[01]%d%.%d%d%d%d%d$&quot;) or id:match(&quot;^%d%d[01]%d%.%d%d%d%d%dv%d+$&quot;) then	-- test for the 1501- format w/ &amp; w/o version
		year, month = id:match(&quot;^(%d%d)([01]%d)%.%d%d%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((15 &gt; year) or (1 &gt; month or 12 &lt; month)) then						-- is year invalid or is month invalid? (doesn't test for future years)
			err_cat = ' ' .. set_error( 'bad_arxiv' );							-- set error message
		end
	else
		err_cat = ' ' .. set_error( 'bad_arxiv' );								-- arXiv id doesn't match any format
	end

	text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;

	if is_set (class) then
		class = ' [[' .. '//arxiv.org/archive/' .. class .. ' ' .. class .. ']]';	-- external link within square brackets, not wikilink
	else
		class = '';																-- empty string for concatenation
	end
	
	return text .. class;
end


--[[--------------------------&lt; B I O R X I V &gt;-----------------------------------------------------------------

Format bioRxiv id and do simple error checking.  BiorXiv ids are exactly 6 digits.
The bioRxiv id is the number following the last slash in the bioRxiv-issued DOI:
https://doi.org/10.1101/078733 -&gt; 078733

]]

local function biorxiv(id)
	local handler = cfg.id_handlers['BIORXIV'];
	local err_cat =  '';								-- presume that bioRxiv id is valid
	
	if nil == id:match(&quot;^%d%d%d%d%d%d$&quot;) then				-- if bioRxiv id has anything but six digits
		err_cat = ' ' .. set_error( 'bad_biorxiv');	-- set an error message
    end
	
	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator,
			encode=handler.encode, access=handler.access}) .. err_cat;
end


--[[--------------------------&lt; N O R M A L I Z E _ L C C N &gt;--------------------------------------------------

lccn normalization (http://www.loc.gov/marc/lccn-namespace.html#normalization)
1. Remove all blanks.
2. If there is a forward slash (/) in the string, remove it, and remove all characters to the right of the forward slash.
3. If there is a hyphen in the string:
	a. Remove it.
	b. Inspect the substring following (to the right of) the (removed) hyphen. Then (and assuming that steps 1 and 2 have been carried out):
		1. All these characters should be digits, and there should be six or less. (not done in this function)
		2. If the length of the substring is less than 6, left-fill the substring with zeroes until the length is six.

Returns a normalized lccn for lccn() to validate.  There is no error checking (step 3.b.1) performed in this function.
]]

local function normalize_lccn (lccn)
	lccn = lccn:gsub (&quot;%s&quot;, &quot;&quot;);									-- 1. strip whitespace

	if nil ~= string.find (lccn,'/') then
		lccn = lccn:match (&quot;(.-)/&quot;);								-- 2. remove forward slash and all character to the right of it
	end

	local prefix
	local suffix
	prefix, suffix = lccn:match (&quot;(.+)%-(.+)&quot;);						-- 3.a remove hyphen by splitting the string into prefix and suffix

	if nil ~= suffix then											-- if there was a hyphen
		suffix=string.rep(&quot;0&quot;, 6-string.len (suffix)) .. suffix;	-- 3.b.2 left fill the suffix with 0s if suffix length less than 6
		lccn=prefix..suffix;										-- reassemble the lccn
	end
	
	return lccn;
	end


--[[--------------------------&lt; L C C N &gt;----------------------------------------------------------------------

Format LCCN link and do simple error checking.  LCCN is a character string 8-12 characters long. The length of
the LCCN dictates the character type of the first 1-3 characters; the rightmost eight are always digits.
http://info-uri.info/registry/OAIHandler?verb=GetRecord&amp;metadataPrefix=reg&amp;identifier=info:lccn/

length = 8 then all digits
length = 9 then lccn[1] is lower case alpha
length = 10 then lccn[1] and lccn[2] are both lower case alpha or both digits
length = 11 then lccn[1] is lower case alpha, lccn[2] and lccn[3] are both lower case alpha or both digits
length = 12 then lccn[1] and lccn[2] are both lower case alpha

]]

local function lccn(lccn)
	local handler = cfg.id_handlers['LCCN'];
	local err_cat =  '';								-- presume that LCCN is valid
	local id = lccn;									-- local copy of the lccn

	id = normalize_lccn (id);							-- get canonical form (no whitespace, hyphens, forward slashes)
	local len = id:len();								-- get the length of the lccn

	if 8 == len then
		if id:match(&quot;[^%d]&quot;) then						-- if LCCN has anything but digits (nil if only digits)
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- set an error message
		end
	elseif 9 == len then								-- LCCN should be adddddddd
		if nil == id:match(&quot;%l%d%d%d%d%d%d%d%d&quot;) then			-- does it match our pattern?
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- set an error message
		end
	elseif 10 == len then								-- LCCN should be aadddddddd or dddddddddd
		if id:match(&quot;[^%d]&quot;) then							-- if LCCN has anything but digits (nil if only digits) ...
			if nil == id:match(&quot;^%l%l%d%d%d%d%d%d%d%d&quot;) then	-- ... see if it matches our pattern
				err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
			end
		end
	elseif 11 == len then								-- LCCN should be aaadddddddd or adddddddddd
		if not (id:match(&quot;^%l%l%l%d%d%d%d%d%d%d%d&quot;) or id:match(&quot;^%l%d%d%d%d%d%d%d%d%d%d&quot;)) then	-- see if it matches one of our patterns
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
		end
	elseif 12 == len then								-- LCCN should be aadddddddddd
		if not id:match(&quot;^%l%l%d%d%d%d%d%d%d%d%d%d&quot;) then	-- see if it matches our pattern
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
		end
	else
		err_cat = ' ' .. set_error( 'bad_lccn' );		-- wrong length, set an error message
	end

	if not is_set (err_cat) and nil ~= lccn:find ('%s') then
		err_cat = ' ' .. set_error( 'bad_lccn' );		-- lccn contains a space, set an error message
	end

	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=lccn,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; P M I D &gt;----------------------------------------------------------------------

Format PMID and do simple error checking.  PMIDs are sequential numbers beginning at 1 and counting up.  This
code checks the PMID to see that it contains only digits and is less than test_limit; the value in local variable
test_limit will need to be updated periodically as more PMIDs are issued.

]]

local function pmid(id)
	local test_limit = 30000000;						-- update this value as PMIDs approach
	local handler = cfg.id_handlers['PMID'];
	local err_cat =  '';								-- presume that PMID is valid
	
	if id:match(&quot;[^%d]&quot;) then							-- if PMID has anything but digits
		err_cat = ' ' .. set_error( 'bad_pmid' );		-- set an error message
	else												-- PMID is only digits
		local id_num = tonumber(id);					-- convert id to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then		-- if PMID is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_pmid' );	-- set an error message
		end
	end
	
	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; I S _ E M B A R G O E D &gt;------------------------------------------------------

Determines if a PMC identifier's online version is embargoed. Compares the date in |embargo= against today's date.  If embargo date is
in the future, returns the content of |embargo=; otherwise, returns and empty string because the embargo has expired or because
|embargo= was not set in this cite.

]]

local function is_embargoed (embargo)
	if is_set (embargo) then
		local lang = mw.getContentLanguage();
		local good1, embargo_date, good2, todays_date;
		good1, embargo_date = pcall( lang.formatDate, lang, 'U', embargo );
		good2, todays_date = pcall( lang.formatDate, lang, 'U' );
	
		if good1 and good2 then													-- if embargo date and today's date are good dates
			if tonumber( embargo_date ) &gt;= tonumber( todays_date ) then			-- is embargo date is in the future?
				return embargo;													-- still embargoed
			else
				add_maint_cat ('embargo')
				return '';														-- unset because embargo has expired
			end
		end
	end
	return '';																	-- |embargo= not set return empty string
end


--[[--------------------------&lt; P M C &gt;------------------------------------------------------------------------

Format a PMC, do simple error checking, and check for embargoed articles.

The embargo parameter takes a date for a value. If the embargo date is in the future the PMC identifier will not
be linked to the article.  If the embargo date is today or in the past, or if it is empty or omitted, then the
PMC identifier is linked to the article through the link at cfg.id_handlers['PMC'].prefix.

PMC embargo date testing is done in function is_embargoed () which is called earlier because when the citation
has |pmc=&lt;value&gt; but does not have a |url= then |title= is linked with the PMC link.  Function is_embargoed ()
returns the embargo date if the PMC article is still embargoed, otherwise it returns an empty string.

PMCs are sequential numbers beginning at 1 and counting up.  This code checks the PMC to see that it contains only digits and is less
than test_limit; the value in local variable test_limit will need to be updated periodically as more PMCs are issued.

]]

local function pmc(id, embargo)
	local test_limit = 6000000;													-- update this value as PMCs approach
	local handler = cfg.id_handlers['PMC'];
	local err_cat =  '';														-- presume that PMC is valid
	local id_num;
	local text;
	
	id_num = id:match ('^[Pp][Mm][Cc](%d+)$');                                  -- identifier with pmc prefix

	if is_set (id_num) then
		add_maint_cat ('pmc_format');
	else																        -- plain number without pmc prefix
		id_num = id:match ('^%d+$');											-- if here id is all digits
	end

	if is_set (id_num) then														-- id_num has a value so test it
		id_num = tonumber(id_num);												-- convert id_num to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then								-- if PMC is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_pmc' );							-- set an error message
		else
			id = tostring (id_num);												-- make sure id is a string
		end
	else																		-- when id format incorrect
		err_cat = ' ' .. set_error( 'bad_pmc' );								-- set an error message
	end
	
	if is_set (embargo) then													-- is PMC is still embargoed?
		text=&quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]&quot; .. handler.separator .. id .. err_cat;	-- still embargoed so no external link
	else
		text = external_link_id({link = handler.link, label = handler.label,	-- no embargo date or embargo has expired, ok to link to article
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;
	end
	return text;
end


--[[--------------------------&lt; D O I &gt;------------------------------------------------------------------------

Formats a DOI and checks for DOI errors.

DOI names contain two parts: prefix and suffix separated by a forward slash.
	Prefix: directory indicator '10.' followed by a registrant code
	Suffix: character string of any length chosen by the registrant

This function checks a DOI name for: prefix/suffix.  If the doi name contains spaces or endashes, or, if it ends
with a period or a comma, this function will emit a bad_doi error message.

DOI names are case-insensitive and can incorporate any printable Unicode characters so the test for spaces, endash,
and terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely
if ever used in doi names.

]]

local function doi(id, inactive, access)
	local cat = &quot;&quot;
	local handler = cfg.id_handlers['DOI'];
	
	local text;
	if is_set(inactive) then
		local inactive_year = inactive:match(&quot;%d%d%d%d&quot;) or '';		-- try to get the year portion from the inactive date
		text = &quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]:&quot; .. id;
		if is_set(inactive_year) then
			table.insert( z.error_categories, &quot;Pages with DOIs inactive since &quot; .. inactive_year );
		else
			table.insert( z.error_categories, &quot;Pages with inactive DOIs&quot; );	-- when inactive doesn't contain a recognizable year
		end
		inactive = &quot; (&quot; .. cfg.messages['inactive'] .. &quot; &quot; .. inactive .. &quot;)&quot; 
	else 
		text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=access})
		inactive = &quot;&quot; 
	end

	if nil == id:match(&quot;^10%.[^%s]-/[^%s]-[^%.,]$&quot;) then	-- doi must begin with '10.', must contain a fwd slash, must not contain spaces or endashes, and must not end with period or comma
		cat = ' ' .. set_error( 'bad_doi' );
	end
	return text .. inactive .. cat 
end


--[[--------------------------&lt; H D L &gt;------------------------------------------------------------------------

Formats an HDL with minor error checking.

HDL names contain two parts: prefix and suffix separated by a forward slash.
	Prefix: character string using any character in the UCS-2 character set except '/'
	Suffix: character string of any length using any character in the UCS-2 character set chosen by the registrant

This function checks a HDL name for: prefix/suffix.  If the HDL name contains spaces, endashes, or, if it ends
with a period or a comma, this function will emit a bad_hdl error message.

HDL names are case-insensitive and can incorporate any printable Unicode characters so the test for endashes and
terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely
if ever used in HDLs.

]]

local function hdl(id, access)
	local handler = cfg.id_handlers['HDL'];
	
	local text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=access})

	if nil == id:match(&quot;^[^%s]-/[^%s]-[^%.,]$&quot;) then							-- hdl must contain a fwd slash, must not contain spaces, endashes, and must not end with period or comma
		text = text .. ' ' .. set_error( 'bad_hdl' );
	end
	return text;
end


--[[--------------------------&lt; O P E N L I B R A R Y &gt;--------------------------------------------------------

Formats an OpenLibrary link, and checks for associated errors.

]]

local function openlibrary(id, access)
	local code = id:match(&quot;^%d+([AMW])$&quot;);										-- only digits followed by 'A', 'M', or 'W'
	local handler = cfg.id_handlers['OL'];

	if ( code == &quot;A&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'authors/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	elseif ( code == &quot;M&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'books/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	elseif ( code == &quot;W&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'works/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	else
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access}) .. ' ' .. set_error( 'bad_ol' );
	end
end


--[[--------------------------&lt; M E S S A G E _ I D &gt;----------------------------------------------------------

Validate and format a usenet message id.  Simple error checking, looks for 'id-left@id-right' not enclosed in
'&lt;' and/or '&gt;' angle brackets.

]]

local function message_id (id)
	local handler = cfg.id_handlers['USENETID'];

	local text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if not id:match('^.+@.+$') or not id:match('^[^&lt;].*[^&gt;]$')then				-- doesn't have '@' or has one or first or last character is '&lt; or '&gt;'
		text = text .. ' ' .. set_error( 'bad_message_id' )						-- add an error message if the message id is invalid
	end 
	
	return text
end


--[[--------------------------&lt; O C L C &gt;----------------------------------------------------------------------

Validate and format an oclc id.  https://www.oclc.org/batchload/controlnumber.en.html

]]

local function oclc (id)
	local handler = cfg.id_handlers['OCLC'];
	local number;
	local err_msg = '';															-- empty string for concatenation
	
	if id:match('^ocm%d%d%d%d%d%d%d%d$') then									-- ocm prefix and 8 digits; 001 field (12 characters)
		number = id:match('ocm(%d+)');											-- get the number
	elseif id:match('^ocn%d%d%d%d%d%d%d%d%d$') then								-- ocn prefix and 9 digits; 001 field (12 characters)
		number = id:match('ocn(%d+)');											-- get the number
	elseif id:match('^on%d%d%d%d%d%d%d%d%d%d+$') then							-- on prefix and 10 or more digits; 001 field (12 characters)
		number = id:match('^on(%d%d%d%d%d%d%d%d%d%d+)$');						-- get the number
	elseif id:match('^%(OCoLC%)[1-9]%d*$') then									-- (OCoLC) prefix and variable number digits; no leading zeros; 035 field
		number = id:match('%(OCoLC%)([1-9]%d*)');								-- get the number
		if 9 &lt; number:len() then
			number = nil;														-- contrain to 1 to 9 digits; change this when oclc issues 10-digit numbers
		end
	elseif id:match('^%d+$') then												-- no prefix
		number = id;															-- get the number
		if 10 &lt; number:len() then
			number = nil;														-- contrain to 1 to 10 digits; change this when oclc issues 11-digit numbers
		end
	end

	if number then																-- proper format
		id = number;															-- exclude prefix, if any, from external link
	else
		err_msg = ' ' .. set_error( 'bad_oclc' )								-- add an error message if the id is malformed
	end
	
	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode}) .. err_msg;

	return text;
end


--[[--------------------------&lt; B I B C O D E &gt;--------------------------------------------------------------------

Validates (sort of) and formats a bibcode id.

Format for bibcodes is specified here: http://adsabs.harvard.edu/abs_doc/help_pages/data.html#bibcodes

But, this: 2015arXiv151206696F is apparently valid so apparently, the only things that really matter are length, 19 characters
and first four digits must be a year.  This function makes these tests:
	length must be 19 characters
	characters in position
		14 must be digits and must represent a year in the range of 1000  next year
		5 must be a letter
		6 must be letter, ampersand, or dot (ampersand cannot directly precede a dot; &amp;. )
		78 must be letter, digit, ampersand, or dot (ampersand cannot directly precede a dot; &amp;. )
		918 must be letter, digit, or dot
		19 must be a letter or dot

]]

local function bibcode (id, access)
	local handler = cfg.id_handlers['BIBCODE'];
	local err_type;
	local year;

	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode,
		access=access});
	
	if 19 ~= id:len() then
		err_type = 'length';
	else
		year = id:match (&quot;^(%d%d%d%d)[%a][%a&amp;%.][%a&amp;%.%d][%a&amp;%.%d][%a%d%.]+[%a%.]$&quot;)	-- 
		if not year then														-- if nil then no pattern match
			err_type = 'value';													-- so value error
		else
			local next_year = tonumber(os.date ('%Y'))+1;						-- get the current year as a number and add one for next year
			year = tonumber (year);												-- convert year portion of bibcode to a number
			if (1000 &gt; year) or (year &gt; next_year) then
				err_type = 'year';												-- year out of bounds
			end
			if id:find('&amp;%.') then
				err_type = 'journal';											-- journal abbreviation must not have '&amp;.' (if it does its missing a letter)
			end
		end
	end

	if is_set (err_type) then													-- if there was an error detected
		text = text .. ' ' .. set_error( 'bad_bibcode', {err_type});
	end
	return text;
end


--[[--------------------------&lt; C I T E S E E R X &gt;------------------------------------------------------------

CiteSeerX use their own notion of &quot;doi&quot; (not to be confused with the identifiers resolved via doi.org).

The description of the structure of this identifier can be found at Help_talk:Citation_Style_1/Archive_26#CiteSeerX_id_structure
]]

local function citeseerx (id)
	local handler = cfg.id_handlers['CITESEERX'];
	local matched;
	
	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode,
		access=handler.access});
	
	matched = id:match (&quot;^10%.1%.1%.[1-9]%d?%d?%d?%.[1-9]%d?%d?%d?$&quot;);
	if not matched then
		text = text .. ' ' .. set_error( 'bad_citeseerx' );
	end
	return text;
end


--[[--------------------------&lt; S S R N &gt;----------------------------------------------------------------------

Format an ssrn, do simple error checking

SSRNs are sequential numbers beginning at 100? and counting up.  This code checks the ssrn to see that it is
only digits and is greater than 99 and less than test_limit; the value in local variable test_limit will need
to be updated periodically as more SSRNs are issued.

]]

local function ssrn (id)
	local test_limit = 3500000;													-- update this value as SSRNs approach
	local handler = cfg.id_handlers['SSRN'];
	local err_cat =  '';														-- presume that SSRN is valid
	local id_num;
	local text;
	
	id_num = id:match ('^%d+$');												-- id must be all digits

	if is_set (id_num) then														-- id_num has a value so test it
		id_num = tonumber(id_num);												-- convert id_num to a number for range testing
		if 100 &gt; id_num or test_limit &lt; id_num then								-- if SSRN is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_ssrn' );							-- set an error message
		end
	else																		-- when id format incorrect
		err_cat = ' ' .. set_error( 'bad_ssrn' );								-- set an error message
	end
	
	text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;

	return text;
end


--[[--------------------------&lt; B U I L D _ I D _ L I S T &gt;--------------------------------------------------------

Takes a table of IDs created by extract_ids() and turns it into a table of formatted ID outputs.

inputs:
	id_list  table of identifiers built by extract_ids()
	options  table of various template parameter values used to modify some manually handled identifiers

]]

local function build_id_list( id_list, options )
	local new_list, handler = {};

	local function fallback(k) return { __index = function(t,i) return cfg.id_handlers[k][i] end } end;
	
	for k, v in pairs( id_list ) do												-- k is uc identifier name as index to cfg.id_handlers; e.g. cfg.id_handlers['ISBN'], v is a table
		
		-- fallback to read-only cfg
		handler = setmetatable( { ['id'] = v, ['access'] = options.IdAccessLevels[k] }, fallback(k) );

		if handler.mode == 'external' then
			table.insert( new_list, {handler.label, external_link_id( handler ) } );
		elseif handler.mode == 'internal' then
			table.insert( new_list, {handler.label, internal_link_id( handler ) } );
		elseif handler.mode ~= 'manual' then
			error( cfg.messages['unknown_ID_mode'] );
		elseif k == 'BIBCODE' then
			table.insert( new_list, {handler.label, bibcode( v, handler.access ) } );
		elseif k == 'BIORXIV' then
			table.insert( new_list, {handler.label, biorxiv( v ) } );
		elseif k == 'CITESEERX' then
			table.insert( new_list, {handler.label, citeseerx( v ) } );
		elseif k == 'DOI' then
			table.insert( new_list, {handler.label, doi( v, options.DoiBroken, handler.access ) } );
		elseif k == 'HDL' then
			table.insert( new_list, {handler.label, hdl( v, handler.access ) } );
		elseif k == 'ARXIV' then
			table.insert( new_list, {handler.label, arxiv( v, options.Class ) } ); 
		elseif k == 'ASIN' then
			table.insert( new_list, {handler.label, amazon( v, options.ASINTLD ) } ); 
		elseif k == 'LCCN' then
			table.insert( new_list, {handler.label, lccn( v ) } );
		elseif k == 'OL' or k == 'OLA' then
			table.insert( new_list, {handler.label, openlibrary( v, handler.access ) } );
		elseif k == 'PMC' then
			table.insert( new_list, {handler.label, pmc( v, options.Embargo ) } );
		elseif k == 'PMID' then
			table.insert( new_list, {handler.label, pmid( v ) } );
		elseif k == 'OCLC' then
			table.insert( new_list, {handler.label, oclc( v ) } );
		elseif k == 'SSRN' then
			table.insert( new_list, {handler.label, ssrn( v ) } );
		elseif k == 'ISMN' then
			table.insert( new_list, {handler.label, ismn( v ) } );
		elseif k == 'ISSN' then
			table.insert( new_list, {handler.label, issn( v ) } );
		elseif k == 'EISSN' then
			table.insert( new_list, {handler.label, issn( v, true ) } );		-- true distinguishes eissn from issn
		elseif k == 'ISBN' then
			local ISBN = internal_link_id( handler );
			local check;
			local err_type = '';
			check, err_type = check_isbn( v );
			if not check then
				if is_set(options.IgnoreISBN) then								-- ISBN is invalid; if |ignore-isbn-error= set
					add_maint_cat ('ignore_isbn_err');							-- ad a maint category
				else
					ISBN = ISBN .. set_error( 'bad_isbn', {err_type}, false, &quot; &quot;, &quot;&quot; );	-- else display an error message
				end
			elseif is_set(options.IgnoreISBN) then								-- ISBN is OK; if |ignore-isbn-error= set
					add_maint_cat ('ignore_isbn_err');							-- because |ignore-isbn-error= unnecessary
			end
			table.insert( new_list, {handler.label, ISBN } );				
		elseif k == 'USENETID' then
			table.insert( new_list, {handler.label, message_id( v ) } );
		else
			error( cfg.messages['unknown_manual_ID'] );
		end
	end
	
	local function comp( a, b )	-- used in following table.sort()
		return a[1] &lt; b[1];
	end
	
	table.sort( new_list, comp );
	for k, v in ipairs( new_list ) do
		new_list[k] = v[2];
	end
	
	return new_list;
end


--[[--------------------------&lt; E X T R A C T _ I D S &gt;------------------------------------------------------------

Populates ID table from arguments using configuration settings. Loops through cfg.id_handlers and searches args for
any of the parameters listed in each cfg.id_handlers['...'].parameters.  If found, adds the parameter and value to
the identifier list.  Emits redundant error message is more than one alias exists in args

]]

local function extract_ids( args )
	local id_list = {};															-- list of identifiers found in args
	for k, v in pairs( cfg.id_handlers ) do										-- k is uc identifier name as index to cfg.id_handlers; e.g. cfg.id_handlers['ISBN'], v is a table
		v = select_one( args, v.parameters, 'redundant_parameters' );			-- v.parameters is a table of aliases for k; here we pick one from args if present
		if is_set(v) then id_list[k] = v; end									-- if found in args, add identifier to our list
	end
	return id_list;
end


--[[--------------------------&lt; E X T R A C T _ I D _ A C C E S S _ L E V E L S &gt;--------------------------------------

Fetches custom id access levels from arguments using configuration settings.
Parameters which have a predefined access level (e.g. arxiv) do not use this
function as they are directly rendered as free without using an additional parameter.

]]

local function extract_id_access_levels( args, id_list )
	local id_accesses_list = {};
	for k, v in pairs( cfg.id_handlers ) do
		local access_param = v.custom_access;
		local k_lower = string.lower(k);
		if is_set(access_param) then
			local access_level = args[access_param];
			if is_set(access_level) then
				if not in_array (access_level:lower(), cfg.keywords['id-access']) then
					table.insert( z.message_tail, { set_error( 'invalid_param_val', {access_param, access_level}, true ) } );	
					access_level = nil;
				end
				if not is_set(id_list[k]) then
					table.insert( z.message_tail, { set_error( 'param_access_requires_param', {k_lower}, true ) } );
				end
				if is_set(access_level) then
					access_level = access_level:lower();
				end
				id_accesses_list[k] = access_level;
			end
		end
	end
	return id_accesses_list;
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table and imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	cfg = cfg_table_ptr;

	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;
	set_error = utilities_page_ptr.set_error;
	select_one = utilities_page_ptr.select_one;
	add_maint_cat = utilities_page_ptr.add_maint_cat;
	substitute = utilities_page_ptr.substitute;

	z = utilities_page_ptr.z;													-- table of tables in Module:Citation/CS1/Utilities
end


return {
	build_id_list = build_id_list,
	extract_ids = extract_ids,
	extract_id_access_levels = extract_id_access_levels,
	is_embargoed = is_embargoed;
	set_selected_modules = set_selected_modules;
	}</text>
      <sha1>bhgirhnotg5ivjt09o7i94bxtg9i1rp</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Utilities</title>
    <ns>828</ns>
    <id>48808487</id>
    <revision>
      <id>729837287</id>
      <parentid>699961606</parentid>
      <timestamp>2016-07-14T22:01:43Z</timestamp>
      <contributor>
        <username>Redrose64</username>
        <id>9612106</id>
      </contributor>
      <comment>this kind of markup is no longer allowed, and puts pages in [[Category:Pages using invalid self-closed HTML tags]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="11004">local u = {}

local z = {
	error_categories = {};														-- for categorizing citations that contain errors
	error_ids = {};
	message_tail = {};
	maintenance_cats = {};														-- for categorizing citations that aren't erroneous per se, but could use a little work
	properties_cats = {};														-- for categorizing citations based on certain properties, language of source for instance
};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local cfg;																		-- table of tables imported from slected Module:Citation/CS1/Configuration


--[[--------------------------&lt; I S _ S E T &gt;------------------------------------------------------------------

Returns true if argument is set; false otherwise. Argument is 'set' when it exists (not nil) or when it is not an empty string.
This function is global because it is called from both this module and from Date validation

]]
local function is_set( var )
	return not (var == nil or var == '');
end


--[[--------------------------&lt; I N _ A R R A Y &gt;--------------------------------------------------------------

Whether needle is in haystack

]]

local function in_array( needle, haystack )
	if needle == nil then
		return false;
	end
	for n,v in ipairs( haystack ) do
		if v == needle then
			return n;
		end
	end
	return false;
end


--[[--------------------------&lt; S U B S T I T U T E &gt;----------------------------------------------------------

Populates numbered arguments in a message string using an argument table.

]]

local function substitute( msg, args )
	return args and mw.message.newRawMessage( msg, args ):plain() or msg;
end


--[[--------------------------&lt; E R R O R _ C O M M E N T &gt;----------------------------------------------------

Wraps error messages with css markup according to the state of hidden.

]]
local function error_comment( content, hidden )
	return substitute( hidden and cfg.presentation['hidden-error'] or cfg.presentation['visible-error'], content );
end


--[[--------------------------&lt; S E T _ E R R O R &gt;--------------------------------------------------------------

Sets an error condition and returns the appropriate error message.  The actual placement of the error message in the output is
the responsibility of the calling function.

]]
local function set_error( error_id, arguments, raw, prefix, suffix )
	local error_state = cfg.error_conditions[ error_id ];
	
	prefix = prefix or &quot;&quot;;
	suffix = suffix or &quot;&quot;;
	
	if error_state == nil then
		error( cfg.messages['undefined_error'] );
	elseif is_set( error_state.category ) then
		table.insert( z.error_categories, error_state.category );
	end
	
	local message = substitute( error_state.message, arguments );
	
	message = message .. &quot; ([[&quot; .. cfg.messages['help page link'] .. 
		&quot;#&quot; .. error_state.anchor .. &quot;|&quot; ..
		cfg.messages['help page label'] .. &quot;]])&quot;;
	
	z.error_ids[ error_id ] = true;
	if in_array( error_id, { 'bare_url_missing_title', 'trans_missing_title' } )
			and z.error_ids['citation_missing_title'] then
		return '', false;
	end
	
	message = table.concat({ prefix, message, suffix });
	
	if raw == true then
		return message, error_state.hidden;
	end		
		
	return error_comment( message, error_state.hidden );
end


--[[-------------------------&lt; I S _ A L I A S _ U S E D &gt;-----------------------------------------------------

This function is used by select_one() to determine if one of a list of alias parameters is in the argument list
provided by the template.

Input:
	args  pointer to the arguments table from calling template
	alias  one of the list of possible aliases in the aliases lists from Module:Citation/CS1/Configuration
	index  for enumerated parameters, identifies which one
	enumerated  true/false flag used choose how enumerated aliases are examined
	value  value associated with an alias that has previously been selected; nil if not yet selected
	selected  the alias that has previously been selected; nil if not yet selected
	error_list  list of aliases that are duplicates of the alias already selected

Returns:
	value  value associated with alias we selected or that was previously selected or nil if an alias not yet selected
	selected  the alias we selected or the alias that was previously selected or nil if an alias not yet selected

]]

local function is_alias_used (args, alias, index, enumerated, value, selected, error_list)
	if enumerated then															-- is this a test for an enumerated parameters?
		alias = alias:gsub ('#', index);										-- replace '#' with the value in index
	else
		alias = alias:gsub ('#', '');											-- remove '#' if it exists
	end

	if is_set(args[alias]) then													-- alias is in the template's argument list
		if value ~= nil and selected ~= alias then								-- if we have already selected one of the aliases
			local skip;
			for _, v in ipairs(error_list) do									-- spin through the error list to see if we've added this alias
				if v == alias then
					skip = true;
					break;														-- has been added so stop looking 
				end
			end
			if not skip then													-- has not been added so
				table.insert( error_list, alias );								-- add error alias to the error list
			end
		else
			value = args[alias];												-- not yet selected an alias, so select this one
			selected = alias;
		end
	end
	return value, selected;														-- return newly selected alias, or previously selected alias
end


--[[--------------------------&lt; A D D _ M A I N T _ C A T &gt;------------------------------------------------------

Adds a category to z.maintenance_cats using names from the configuration file with additional text if any.
To prevent duplication, the added_maint_cats table lists the categories by key that have been added to z.maintenance_cats.

]]

local added_maint_cats = {}														-- list of maintenance categories that have been added to z.maintenance_cats
local function add_maint_cat (key, arguments)
	if not added_maint_cats [key] then
		added_maint_cats [key] = true;											-- note that we've added this category
		table.insert( z.maintenance_cats, substitute (cfg.maint_cats [key], arguments));	-- make name then add to table
	end
end


--[[--------------------------&lt; S A F E _ F O R _ I T A L I C S &gt;----------------------------------------------

Protects a string that will be wrapped in wiki italic markup '' ... ''

Note: We cannot use &lt;i&gt; for italics, as the expected behavior for italics specified by ''...'' in the title is that
they will be inverted (i.e. unitalicized) in the resulting references.  In addition, &lt;i&gt; and '' tend to interact
poorly under Mediawiki's HTML tidy.

]]

local function safe_for_italics( str )
	if not is_set(str) then
		return str;
	else
		if str:sub(1,1) == &quot;'&quot; then str = &quot;&lt;span&gt;&lt;/span&gt;&quot; .. str; end
		if str:sub(-1,-1) == &quot;'&quot; then str = str .. &quot;&lt;span&gt;&lt;/span&gt;&quot;; end
		
		-- Remove newlines as they break italics.
		return str:gsub( '\n', ' ' );
	end
end


--[[--------------------------&lt; W R A P _ S T Y L E &gt;----------------------------------------------------------

Applies styling to various parameters.  Supplied string is wrapped using a message_list configuration taking one
argument; protects italic styled parameters.  Additional text taken from citation_config.presentation - the reason
this function is similar to but separate from wrap_msg().

]]

local function wrap_style (key, str)
	if not is_set( str ) then
		return &quot;&quot;;
	elseif in_array( key, { 'italic-title', 'trans-italic-title' } ) then
		str = safe_for_italics( str );
	end

	return substitute( cfg.presentation[key], {str} );
end


--[[--------------------------&lt; S E L E C T _ O N E &gt;----------------------------------------------------------

Chooses one matching parameter from a list of parameters to consider.  The list of parameters to consider is just
names.  For parameters that may be enumerated, the position of the numerator in the parameter name is identified
by the '#' so |author-last1= and |author1-last= are represented as 'author-last#' and 'author#-last'.

Because enumerated parameter |&lt;param&gt;1= is an alias of |&lt;param&gt;= we must test for both possibilities.


Generates an error if more than one match is present.

]]

local function select_one( args, aliases_list, error_condition, index )
	local value = nil;															-- the value assigned to the selected parameter
	local selected = '';														-- the name of the parameter we have chosen
	local error_list = {};

	if index ~= nil then index = tostring(index); end

	for _, alias in ipairs( aliases_list ) do									-- for each alias in the aliases list
		if alias:match ('#') then												-- if this alias can be enumerated
			if '1' == index then												-- when index is 1 test for enumerated and non-enumerated aliases
				value, selected = is_alias_used (args, alias, index, false, value, selected, error_list);	-- first test for non-enumerated alias
			end
			value, selected = is_alias_used (args, alias, index, true, value, selected, error_list);		-- test for enumerated alias
		else
			value, selected = is_alias_used (args, alias, index, false, value, selected, error_list);		--test for non-enumerated alias
		end
	end

	if #error_list &gt; 0 and 'none' ~= error_condition then						-- for cases where this code is used outside of extract_names()
		local error_str = &quot;&quot;;
		for _, k in ipairs( error_list ) do
			if error_str ~= &quot;&quot; then error_str = error_str .. cfg.messages['parameter-separator'] end
			error_str = error_str .. wrap_style ('parameter', k);
		end
		if #error_list &gt; 1 then
			error_str = error_str .. cfg.messages['parameter-final-separator'];
		else
			error_str = error_str .. cfg.messages['parameter-pair-separator'];
		end
		error_str = error_str .. wrap_style ('parameter', selected);
		table.insert( z.message_tail, { set_error( error_condition, {error_str}, true ) } );
	end
	
	return value, selected;
end


--[=[-------------------------&lt; R E M O V E _ W I K I _ L I N K &gt;----------------------------------------------

Gets the display text from a wikilink like [[A|B]] or [[B]] gives B

]=]

local function remove_wiki_link (str)
	return (str:gsub( &quot;%[%[([^%[%]]*)%]%]&quot;, function(l)
		return l:gsub( &quot;^[^|]*|(.*)$&quot;, &quot;%1&quot; ):gsub(&quot;^%s*(.-)%s*$&quot;, &quot;%1&quot;);
	end));
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr)
	cfg = cfg_table_ptr;
end



return {																		-- return exported functions and tables
	is_set = is_set,
	in_array = in_array,
	substitute = substitute,
	error_comment = error_comment,
	set_error = set_error,
	select_one = select_one,
	add_maint_cat = add_maint_cat,
	wrap_style = wrap_style;
	safe_for_italics = safe_for_italics;
	remove_wiki_link = remove_wiki_link;
	set_selected_modules = set_selected_modules;
	z = z,
	}</text>
      <sha1>pvch8640xcg83okjfikzjpcsn9567i3</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Whitelist</title>
    <ns>828</ns>
    <id>39013723</id>
    <revision>
      <id>777956977</id>
      <parentid>777799226</parentid>
      <timestamp>2017-04-30T09:19:28Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>unsupport |ARXIV= and |BIBCODE=;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="18820">
--[[--------------------------&lt; P A R A M E T E R S   N O T   S U P P O R T E D &gt;------------------------------

This is a list of parameters that once were but now are no longer supported:

	['albumlink'] = nil,			-- unique alias of titlelink used by old cite AV media notes
	['albumtype'] = nil,			-- controled inappropriate functionality in the old cite AV media notes
	['artist'] = nil,				-- unique alias of others used by old cite AV media notes
	['ARXIV'] = nil,				-- not an initialization
	['Author'] = nil,				-- non-standard capitalization
	['authorformat'] = nil,			-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-format'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-name-separator'] = nil,-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['began'] = nil,				-- module handles date ranges; cite episode and cite series
	['BIBCODE'] = nil,				-- not an initialization
	['callsign'] = nil,				-- cite interview removed
	['call-sign'] = nil,			-- cite interview removed
	['chapterlink'] = nil,			-- if ever necessary to link to a chapter article, |chapter= can be wikilinked 
	['chapter-link'] = nil,			-- 
	['city'] = nil,					-- cite interview removed
	['coauthor'] = nil,				-- redundant to |authorn=; not made part of metadata
	['coauthors'] = nil,			-- redundant to |authorn=; not made part of metadata
	['cointerviewers'] = nil,		-- unique alias of others used by old cite interview
	['day'] = nil,					-- deprecated in {{citation/core}} and somehow undeprecated in Module:Citation/CS1 and now finally removed
	['director'] = nil,				-- unique alias of author used by old cite DVD-notes
	['DoiBroken'] = nil,			-- not used, non-standard captialization
	['Editor'] = nil,				-- non-standard capitalization
	['editorformat'] = nil,			-- primarily used to support Vancouver format which functionality now part of name-list-format
	['EditorSurname'] = nil,		-- non-standard capitalization
	['editor-format'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['EditorGiven'] = nil,			-- non-standard capitalization
	['editor-name-separator'] = nil,-- primarily used to support Vancouver format which functionality now part of name-list-format
	['editor-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['Embargo'] = nil,				-- not used, non-standard capitalization
	['ended'] = nil,				-- module handles date ranges; cite episode and cite series
	['month'] = nil,				-- functionality supported by |date=
	['name-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['notestitle'] = nil,			-- unique alias of chapter used by old cite AV media notes
	['PPrefix'] = nil,				-- non-standard capitalization
	['PPPrefix'] = nil,				-- not used, non-standard capitalization
	['pp-prefix'] = nil,			-- not used, not documented
	['p-prefix'] = nil,				-- not used, not documented
	['program'] = nil,				-- cite interview removed
	['publisherid'] = nil,			-- unique alias of id used by old cite AV media notes and old cite DVD-notes
	['Ref'] = nil,					-- non-standard capitalization
	['separator'] = nil,			-- this functionality now provided by |mode=
	['titleyear'] = nil,			-- unique alias of origyear used by old cite DVD-notes

	['Author#'] = nil,				-- non-standard capitalization
	['authors#'] = nil,				-- no need for multiple lists of author names
	['Editor#'] = nil,				-- non-standard capitalization
	['editors#'] = nil,				-- no need for multiple lists of editor names
	['EditorGiven#'] = nil,			-- non-standard capitalization
	['EditorSurname#'] = nil,		-- non-standard capitalization

]]

--[[--------------------------&lt; S U P P O R T E D   P A R A M E T E R S &gt;--------------------------------------

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local whitelist = {}

local basic_arguments = {
	['accessdate'] = true,
	['access-date'] = true,
	['agency'] = true,
	['airdate'] = true,
	['air-date'] = true,
	['archivedate'] = true,
	['archive-date'] = true,
	['archive-format'] = true,
	['archiveurl'] = true,
	['archive-url'] = true,
	['article'] = true,
	['arxiv'] = true,
	['asin'] = true,
	['ASIN'] = true,
	['asin-tld'] = true,
	['ASIN-TLD'] = true,
	['at'] = true,
	['author'] = true,
	['author-first'] = true,
	['author-last'] = true,
	['authorlink'] = true,
	['author-link'] = true,
	['authormask'] = true,
	['author-mask'] = true,
	['authors'] = true,
	['bibcode'] = true,
	['bibcode-access'] = true,
	['biorxiv'] = true,
	['booktitle'] = true,
	['book-title'] = true,
	['cartography'] = true,
	['chapter'] = true,
	['chapter-format'] = true,
	['chapterurl'] = true,
	['chapter-url'] = true,
	['citeseerx'] = true,
	['class'] = true,				-- cite arxiv and arxiv identifiers
	['collaboration'] = true,
	['conference'] = true,
	['conference-format'] = true,
	['conferenceurl'] = true,
	['conference-url'] = true,
	['contribution'] = true,
	['contribution-format'] = true,
	['contributionurl'] = true,
	['contribution-url'] = true,
	['contributor'] = true,
	['contributor-first'] = true,
	['contributor-last'] = true,
	['contributor-given'] = true,
	['contributor-surname'] = true,
	['contributor-link'] = true,
	['contributor-mask'] = true,
	['credits'] = true,				-- cite episode, cite serial
	['date'] = true,
	['deadurl'] = true,
	['dead-url'] = true,
	['degree'] = true,
	['department'] = true,
	['df'] = true,
	['dictionary'] = true,
	['displayauthors'] = true,
	['display-authors'] = true,
	['displayeditors'] = true,
	['display-editors'] = true,
	['docket'] = true,
	['doi'] = true,
	['DOI'] = true,
	['doi-access'] = true,
	['doi-broken'] = true,
	['doi_brokendate'] = true,					-- @TODO deprecate underscore version?
	['doi-broken-date'] = true,
	['doi_inactivedate'] = true,				-- @TODO deprecate underscore version?
	['doi-inactive-date'] = true,
	['edition'] = true,
	['editor'] = true,
	['editor-first'] = true,
	['editor-given'] = true,
	['editor-last'] = true,
	['editorlink'] = true,
	['editor-link'] = true,
	['editormask'] = true,
	['editor-mask'] = true,
	['editors'] = true,
	['editor-surname'] = true,
	['eissn'] = true,
	['EISSN'] = true,
	['embargo'] = true,
	['encyclopaedia'] = true,
	['encyclopedia'] = true,
	['entry'] = true,
	['episode'] = true,															-- cite serial only TODO: make available to cite episode?
	['episodelink'] = true,														-- cite episode and cite serial
	['episode-link'] = true,													-- cite episode and cite serial
	['eprint'] = true,															-- cite arxiv and arxiv identifiers
	['event'] = true,
	['event-format'] = true,
	['eventurl'] = true,
	['event-url'] = true,
	['first'] = true,
	['format'] = true,
	['given'] = true,
	['hdl'] = true,
	['HDL'] = true,
	['hdl-access'] = true,
	['host'] = true,
	['id'] = true,
	['ID'] = true,
	['ignoreisbnerror'] = true,
	['ignore-isbn-error'] = true,
	['in'] = true,
	['inset'] = true,
	['institution'] = true,
	['interviewer'] = true,
	['interviewer-first'] = true,
	['interviewer-last'] = true,
	['interviewerlink'] = true,
	['interviewer-link'] = true,
	['interviewermask'] = true,
	['interviewer-mask'] = true,
	['interviewers'] = true,
	['isbn'] = true,
	['ISBN'] = true,
	['isbn13'] = true,
	['ISBN13'] = true,
	['ismn'] = true,
	['ISMN'] = true,
	['issn'] = true,
	['ISSN'] = true,
	['issue'] = true,
	['jfm'] = true,
	['JFM'] = true,
	['journal'] = true,
	['jstor'] = true,
	['JSTOR'] = true,
	['jstor-access'] = true,
	['language'] = true,
	['last'] = true,
	['lastauthoramp'] = true,
	['last-author-amp'] = true,
	['laydate'] = true,
	['lay-date'] = true,
	['laysource'] = true,
	['lay-source'] = true,
	['laysummary'] = true,
	['lay-summary'] = true,
	['lay-format'] = true,
	['layurl'] = true,
	['lay-url'] = true,
	['lccn'] = true,
	['LCCN'] = true,
	['location'] = true,
	['magazine'] = true,
	['mailinglist'] = true,				-- cite mailing list only
	['mailing-list'] = true,			-- cite mailing list only
	['map'] = true,						-- cite map only
	['map-format'] = true,				-- cite map only
	['mapurl'] = true,					-- cite map only
	['map-url'] = true,					-- cite map only
	['medium'] = true,
	['message-id'] = true,			-- cite newsgroup
	['minutes'] = true,
	['mode'] = true,
	['mr'] = true,
	['MR'] = true,
	['name-list-format'] = true,
	['network'] = true,
	['newsgroup'] = true,
	['newspaper'] = true,
	['nocat'] = true,
	['no-cat'] = true,
	['nopp'] = true,
	['no-pp'] = true,
	['notracking'] = true,
	['no-tracking'] = true,
	['number'] = true,
	['oclc'] = true,
	['OCLC'] = true,
	['ol'] = true,
	['OL'] = true,
	['ol-access'] = true,
	['origyear'] = true,
	['orig-year'] = true,
	['osti'] = true,
	['OSTI'] = true,
	['osti-access'] = true,
	['others'] = true,
	['p'] = true,
	['page'] = true,
	['pages'] = true,
	['people'] = true,
	['periodical'] = true,
	['place'] = true,
	['pmc'] = true,
	['PMC'] = true,
	['pmid'] = true,
	['PMID'] = true,
	['postscript'] = true,
	['pp'] = true,
	['publicationdate'] = true,
	['publication-date'] = true,
	['publicationplace'] = true,
	['publication-place'] = true,
	['publisher'] = true,
	['quotation'] = true,
	['quote'] = true,
	['ref'] = true,
	['registration'] = true,
	['rfc'] = true,
	['RFC'] = true,
	['scale'] = true,
	['script-chapter'] = true,
	['script-title'] = true,
	['season'] = true,
	['section'] = true,
	['section-format'] = true,
	['sections'] = true,					-- cite map only
	['sectionurl'] = true,
	['section-url'] = true,
	['series'] = true,
	['serieslink'] = true,
	['series-link'] = true,
	['seriesno'] = true,
	['series-no'] = true,
	['seriesnumber'] = true,
	['series-number'] = true,
	['series-separator'] = true,
	['sheet'] = true,															-- cite map only
	['sheets'] = true,															-- cite map only
	['ssrn'] = true,
	['SSRN'] = true,
	['station'] = true,
	['subject'] = true,
	['subjectlink'] = true,
	['subject-link'] = true,
	['subscription'] = true,
	['surname'] = true,
	['template doc demo'] = true,
	['template-doc-demo'] = true,
	['time'] = true,
	['timecaption'] = true,
	['time-caption'] = true,
	['title'] = true,
	['titlelink'] = true,
	['title-link'] = true,
	['trans_chapter'] = true,
	['trans-chapter'] = true,
	['trans-map'] = true,
	['transcript'] = true,
	['transcript-format'] = true,
	['transcripturl'] = true,
	['transcript-url'] = true,
	['trans_title'] = true,
	['trans-title'] = true,
	['translator'] = true,
	['translator-first'] = true,
	['translator-last'] = true,
	['translator-given'] = true,
	['translator-surname'] = true,
	['translator-link'] = true,
	['translator-mask'] = true,
	['type'] = true,
	['url'] = true,
	['URL'] = true,
	['url-access'] = true,
	['vauthors'] = true,
	['veditors'] = true,
	['version'] = true,
	['via'] = true,
	['volume'] = true,
	['website'] = true,
	['work'] = true,
	['year'] = true,
	['zbl'] = true,
	['ZBL'] = true,
}

local numbered_arguments = {
	['author#'] = true,
	['author-first#'] = true,
	['author#-first'] = true,
	['author-last#'] = true,
	['author#-last'] = true,
	['author-link#'] = true,
	['author#link'] = true,
	['author#-link'] = true,
	['authorlink#'] = true,
	['author-mask#'] = true,
	['author#mask'] = true,
	['author#-mask'] = true,
	['authormask#'] = true,
	['contributor#'] = true,
	['contributor-first#'] = true,
	['contributor#-first'] = true,
	['contributor-last#'] = true,
	['contributor#-last'] = true,
	['contributor-given#'] = true,
	['contributor#-given'] = true,
	['contributor-surname#'] = true,
	['contributor#-surname'] = true,
	['contributor-link#'] = true,
	['contributor#-link'] = true,
	['contributor-mask#'] = true,
	['contributor#-mask'] = true,
	['editor#'] = true,
	['editor-first#'] = true,
	['editor#-first'] = true,
	['editor#-given'] = true,
	['editor-given#'] = true,
	['editor-last#'] = true,
	['editor#-last'] = true,
	['editor-link#'] = true,
	['editor#link'] = true,
	['editor#-link'] = true,
	['editorlink#'] = true,
	['editor-mask#'] = true,
	['editor#mask'] = true,
	['editor#-mask'] = true,
	['editormask#'] = true,
	['editor#-surname'] = true,
	['editor-surname#'] = true,
	['first#'] = true,
	['given#'] = true,
	['interviewer#'] = true,
	['interviewer-first#'] = true,
	['interviewer#-first'] = true,
	['interviewer-last#'] = true,
	['interviewer#-last'] = true,
	['interviewer-link#'] = true,
	['interviewer#-link'] = true,
	['interviewer-mask#'] = true,
	['interviewer#-mask'] = true,
	['last#'] = true,
	['subject#'] = true,
	['subject-link#'] = true,
	['subject#link'] = true,
	['subject#-link'] = true,
	['subjectlink#'] = true,
	['surname#'] = true,
	['translator#'] = true,
	['translator-first#'] = true,
	['translator#-first'] = true,
	['translator-last#'] = true,
	['translator#-last'] = true,
	['translator-given#'] = true,
	['translator#-given'] = true,
	['translator-surname#'] = true,
	['translator#-surname'] = true,
	['translator-link#'] = true,
	['translator#-link'] = true,
	['translator-mask#'] = true,
	['translator#-mask'] = true,
}

--[[--------------------------&lt; C I T E   A R X I V   S U P P O R T E D   P A R A M E T E R S &gt;----------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite arxiv template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

--[[
This is a list of parameters that once were but now are no longer supported:
	['ARXIV'] = nil,				-- not an initialization
	['version'] = nil,				-- this is the cite arxiv parameter; |version= still supported by other cs1|2 templates

]]

local arxiv_basic_arguments = {
	['arxiv'] = true,
	['class'] = true,															-- cite arxiv and arxiv identifiers
	['eprint'] = true,															-- cite arxiv and arxiv identifiers
}


--[[--------------------------&lt; C I T E   B I O R X I V   S U P P O R T E D   P A R A M E T E R S &gt;------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite biorxiv template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local biorxiv_basic_arguments = {
	['biorxiv'] = true,
}


--[[--------------------------&lt; C I T E   C I T E S E E R X   S U P P O R T E D   P A R A M E T E R S &gt;--------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite citeseerx template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local citeseerx_basic_arguments = {
	['citeseerx'] = true,
}


--[[--------------------------&lt; L I M I T E D   S U P P O R T E D   P A R A M E T E R S &gt;----------------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite arxiv, cite biorxiv, or cite citeseerx templates.  These parameters are common to
all three templates

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local limited_basic_arguments = {
	['at'] = true,
	['author'] = true,
	['author-first'] = true,
	['author-last'] = true,
	['authorlink'] = true,
	['author-link'] = true,
	['authormask'] = true,
	['author-mask'] = true,
	['authors'] = true,
	['collaboration'] = true,
	['date'] = true,
	['df'] = true,
	['display-authors'] = true,
	['first'] = true,
	['given'] = true,
	['language'] = true,
	['last'] = true,
	['lastauthoramp'] = true,
	['last-author-amp'] = true,
	['mode'] = true,
	['name-list-format'] = true,
	['nocat'] = true,
	['no-cat'] = true,
	['notracking'] = true,
	['no-tracking'] = true,
	['p'] = true,
	['page'] = true,
	['pages'] = true,
	['postscript'] = true,
	['pp'] = true,
	['quotation'] = true,
	['quote'] = true,
	['ref'] = true,
	['surname'] = true,
	['template doc demo'] = true,
	['template-doc-demo'] = true,
	['title'] = true,
	['url'] = true,
	['URL'] = true,
	['vauthors'] = true,
	['year'] = true,
}
local limited_numbered_arguments = {
	['author#'] = true,
	['author-first#'] = true,
	['author#-first'] = true,
	['author-last#'] = true,
	['author#-last'] = true,
	['author-link#'] = true,
	['author#link'] = true,
	['author#-link'] = true,
	['authorlink#'] = true,
	['author-mask#'] = true,
	['author#mask'] = true,
	['author#-mask'] = true,
	['authormask#'] = true,
	['first#'] = true,
	['given#'] = true,
	['last#'] = true,
	['surname#'] = true,
}

return {
	basic_arguments = basic_arguments,
	numbered_arguments = numbered_arguments,
	limited_basic_arguments = limited_basic_arguments,
	limited_numbered_arguments = limited_numbered_arguments,
	arxiv_basic_arguments = arxiv_basic_arguments,
	biorxiv_basic_arguments = biorxiv_basic_arguments,
	citeseerx_basic_arguments = citeseerx_basic_arguments
};</text>
      <sha1>jofaptxmpph8fnllpe14li5b6y100zo</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert</title>
    <ns>828</ns>
    <id>38570716</id>
    <revision>
      <id>795876376</id>
      <parentid>788386378</parentid>
      <timestamp>2017-08-17T01:39:24Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="133739">-- Convert a value from one unit of measurement to another.
-- Example: {{convert|123|lb|kg}} --&gt; 123 pounds (56 kg)
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.

local MINUS = ''  -- Unicode U+2212 MINUS SIGN (UTF-8: e2 88 92)
local abs = math.abs
local floor = math.floor
local format = string.format
local log10 = math.log10
local ustring = mw.ustring
local ulen = ustring.len
local usub = ustring.sub

-- Configuration options to keep magic values in one location.
-- Conversion data and message text are defined in separate modules.
local config, maxsigfig
local numdot  -- must be '.' or ',' or a character which works in a regex
local numsep, numsep_remove, numsep_remove2
local data_code, all_units
local text_code
local varname        -- can be a code to use variable names that depend on value
local from_en_table  -- to translate an output string of en digits to local language
local to_en_table    -- to translate an input string of digits in local language to en
-- Use translation_table in convert/text to change the following.
local en_default           -- true uses lang=en unless convert has lang=local or local digits
local group_method = 3     -- code for how many digits are in a group
local per_word = 'per'     -- for units like &quot;liters per kilometer&quot;
local plural_suffix = 's'  -- only other useful value is probably '' to disable plural unit names
local omitsep              -- true to omit separator before local symbol/name

-- All units should be defined in the data module. However, to cater for quick changes
-- and experiments, any unknown unit is looked up in an extra data module, if it exists.
-- That module would be transcluded in only a small number of pages, so there should be
-- little server overhead from making changes, and changes should propagate quickly.
local extra_module  -- name of module with extra units
local extra_units   -- nil or table of extra units from extra_module

-- Some options in the invoking template can set variables used later in the module.
local currency_text  -- for a user-defined currency symbol: {{convert|12|$/ha|$=}} (euro replaces dollar)

local function from_en(text)
	-- Input is a string representing a number in en digits with '.' decimal mark,
	-- without digit grouping (which is done just after calling this).
	-- Return the translation of the string with numdot and digits in local language.
	if numdot ~= '.' then
		text = text:gsub('%.', numdot)
	end
	if from_en_table then
		text = text:gsub('%d', from_en_table)
	end
	return text
end

local function to_en(text)
	-- Input is a string representing a number in the local language with
	-- an optional numdot decimal mark and numsep digit grouping.
	-- Return the translation of the string with '.' mark and en digits,
	-- and no separators (they have to be removed here to handle cases like
	-- numsep = '.' and numdot = ',' with input &quot;1.234.567,8&quot;).
	if to_en_table then
		text = ustring.gsub(text, '%d', to_en_table)
	end
	if numsep_remove then
		text = text:gsub(numsep_remove, '')
	end
	if numsep_remove2 then
		text = text:gsub(numsep_remove2, '')
	end
	if numdot ~= '.' then
		text = text:gsub(numdot, '.')
	end
	return text
end

local function decimal_mark(text)
	-- Return ',' if text probably is using comma for decimal mark, or has no decimal mark.
	-- Return '.' if text probably is using dot for decimal mark.
	-- Otherwise return nothing (decimal mark not known).
	if not text:find('[.,]') then return ',' end
	text = text:gsub('^%-', ''):gsub('%+%d+/%d+$', ''):gsub('[Ee]%-?%d+$', '')
	local decimal =
		text:match('^0?([.,])%d+$') or
		text:match('%d([.,])%d?%d?$') or
		text:match('%d([.,])%d%d%d%d+$')
	if decimal then return decimal end
	if text:match('%.%d+%.') then return ',' end
	if text:match('%,%d+,') then return '.' end
end

local add_warning, with_separator  -- forward declarations
local function to_en_with_check(text, parms)
	-- Version of to_en() for a wiki using numdot = ',' and numsep = '.' to check
	-- text (an input number as a string) which might have been copied from enwiki.
	-- For example, in '1.234' the '.' could be a decimal mark or a group separator.
	-- From viwiki.
	if to_en_table then
		text = ustring.gsub(text, '%d', to_en_table)
	end
	if decimal_mark(text) == '.' then
		local original = text
		text = text:gsub(',', '')  -- for example, interpret &quot;1,234.5&quot; as an enwiki value
		if parms then
			add_warning(parms, 0, 'cvt_enwiki_num', original, with_separator({}, text))
		end
	else
		if numsep_remove then
			text = text:gsub(numsep_remove, '')
		end
		if numsep_remove2 then
			text = text:gsub(numsep_remove2, '')
		end
		if numdot ~= '.' then
			text = text:gsub(numdot, '.')
		end
	end
	return text
end

local function omit_separator(id)
	-- Return true if there should be no separator before id (a unit symbol or name).
	-- For zhwiki, there should be no separator if id uses local characters.
	-- The following kludge should be a sufficient test.
	if omitsep then
		if id:sub(1, 2) == '-{' then  -- for &quot;-{...}-&quot; content language variant
			return true
		end
		if id:byte() &gt; 127 then
			local first = usub(id, 1, 1)
			if first ~= '' and first ~= '' and first ~= '' then
				return true
			end
		end
	end
	return id:sub(1, 1) == '/'  -- no separator before units like &quot;/ha&quot;
end

local spell_module  -- name of module that can spell numbers
local speller       -- function from that module to handle spelling (set if needed)
local wikidata_module, wikidata_data_module  -- names of Wikidata modules
local wikidata_code, wikidata_data  -- exported tables from those modules (set if needed)

local function set_config(args)
	-- Set configuration options from template #invoke or defaults.
	config = args
	maxsigfig = config.maxsigfig or 14  -- maximum number of significant figures
	local data_module, text_module
	local sandbox = config.sandbox and ('/' .. config.sandbox) or ''
	data_module = &quot;Module:Convert/data&quot; .. sandbox
	text_module = &quot;Module:Convert/text&quot; .. sandbox
	extra_module = &quot;Module:Convert/extra&quot; .. sandbox
	wikidata_module = &quot;Module:Convert/wikidata&quot; .. sandbox
	wikidata_data_module = &quot;Module:Convert/wikidata/data&quot; .. sandbox
	spell_module = &quot;Module:ConvertNumeric&quot;
	data_code = mw.loadData(data_module)
	text_code = mw.loadData(text_module)
	all_units = data_code.all_units
	local translation = text_code.translation_table
	if translation then
		numdot = translation.numdot
		numsep = translation.numsep
		if numdot == ',' and numsep == '.' then
			if text_code.all_messages.cvt_enwiki_num then
				to_en = to_en_with_check
			end
		end
		if translation.group then
			group_method = translation.group
		end
		if translation.per_word then
			per_word = translation.per_word
		end
		if translation.plural_suffix then
			plural_suffix = translation.plural_suffix
		end
		varname = translation.varname
		from_en_table = translation.from_en
		local use_workaround = true
		if use_workaround then
			-- 2013-07-05 workaround bug by making a copy of the required table.
			-- mw.ustring.gsub fails with a table (to_en_table) as the replacement,
			-- if the table is accessed via mw.loadData.
			local source = translation.to_en
			if source then
				to_en_table = {}
				for k, v in pairs(source) do
					to_en_table[k] = v
				end
			end
		else
			to_en_table = translation.to_en
		end
		if translation.lang == 'en default' then
			en_default = true  -- for hiwiki
		end
		omitsep = translation.omitsep  -- for zhwiki
	end
	numdot = config.numdot or numdot or '.'  -- decimal mark before fractional digits
	numsep = config.numsep or numsep or ','  -- group separator for numbers
	-- numsep should be ',' or '.' or '' or '&amp;nbsp;' or a Unicode character.
	-- numsep_remove must work in a regex to identify separators to be removed.
	if numsep ~= '' then
		numsep_remove = (numsep == '.') and '%.' or numsep
	end
	if numsep ~= ',' and numdot ~= ',' then
		numsep_remove2 = ','  -- so numbers copied from enwiki will work
	end
end

local function collection()
	-- Return a table to hold items.
	return {
		n = 0,
		add = function (self, item)
			self.n = self.n + 1
			self[self.n] = item
		end,
	}
end

local function divide(numerator, denominator)
	-- Return integers quotient, remainder resulting from dividing the two
	-- given numbers, which should be unsigned integers.
	local quotient, remainder = floor(numerator / denominator), numerator % denominator
	if not (0 &lt;= remainder and remainder &lt; denominator) then
		-- Floating point limits may need this, as in {{convert|160.02|Ym|ydftin}}.
		remainder = 0
	end
	return quotient, remainder
end

local function split(text, delimiter)
	-- Return a numbered table with fields from splitting text.
	-- The delimiter is used in a regex without escaping (for example, '.' would fail).
	-- Each field has any leading/trailing whitespace removed.
	local t = {}
	text = text .. delimiter  -- to get last item
	for item in text:gmatch('%s*(.-)%s*' .. delimiter) do
		table.insert(t, item)
	end
	return t
end

local function strip(text)
	-- If text is a string, return its content with no leading/trailing
	-- whitespace. Otherwise return nil (a nil argument gives a nil result).
	if type(text) == 'string' then
		return text:match(&quot;^%s*(.-)%s*$&quot;)
	end
end

local function table_len(t)
	-- Return length (&lt;100) of a numbered table to replace #t which is
	-- documented to not work if t is accessed via mw.loadData().
	for i = 1, 100 do
		if t[i] == nil then
			return i - 1
		end
	end
end

local function wanted_category(catkey, catsort, want_warning)
	-- Return message category if it is wanted in current namespace,
	-- otherwise return ''.
	local cat
	local title = mw.title.getCurrentTitle()
	if title then
		local nsdefault = '0'  -- default namespace: '0' = article; '0,10' = article and template
		local namespace = title.namespace
		for _, v in ipairs(split(config.nscat or nsdefault, ',')) do
			if namespace == tonumber(v) then
				cat = text_code.all_categories[want_warning and 'warning' or catkey]
				if catsort and catsort ~= '' and cat:sub(-2) == ']]' then
					cat = cat:sub(1, -3) .. '|' .. mw.text.nowiki(usub(catsort, 1, 20)) .. ']]'
				end
				break
			end
		end
	end
	return cat or ''
end

local function message(parms, mcode, is_warning)
	-- Return wikitext for an error message, including category if specified
	-- for the message type.
	-- mcode = numbered table specifying the message:
	--    mcode[1] = 'cvt_xxx' (string used as a key to get message info)
	--    mcode[2] = 'parm1' (string to replace '$1' if any in message)
	--    mcode[3] = 'parm2' (string to replace '$2' if any in message)
	--    mcode[4] = 'parm3' (string to replace '$3' if any in message)
	local msg
	if type(mcode) == 'table' then
		if mcode[1] == 'cvt_no_output' then
			-- Some errors should cause convert to output an empty string,
			-- for example, for an optional field in an infobox.
			return ''
		end
		msg = text_code.all_messages[mcode[1]]
	end
	parms.have_problem = true
	local function subparm(fmt, ...)
		local rep = {}
		for i, v in ipairs({...}) do
			rep['$' .. i] = v
		end
		return (fmt:gsub('$%d+', rep))
	end
	if msg then
		local parts = {}
		local regex, replace = msg.regex, msg.replace
		for i = 1, 3 do
			local limit = 40
			local s = mcode[i + 1]
			if s then
				if regex and replace then
					s = s:gsub(regex, replace)
					limit = nil  -- allow long &quot;should be&quot; messages
				end
				-- Escape user input so it does not break the message.
				-- To avoid tags (like {{convert|1&lt;math&gt;23&lt;/math&gt;|m}}) breaking
				-- the mouseover title, any strip marker starting with char(127) is
				-- replaced with '...' (text not needing i18n).
				local append
				local pos = s:find(string.char(127), 1, true)
				if pos then
					append = '...'
					s = s:sub(1, pos - 1)
				end
				if limit and ulen(s) &gt; limit then
					s = usub(s, 1, limit)
					append = '...'
				end
				s = mw.text.nowiki(s) .. (append or '')
			else
				s = '?'
			end
			parts['$' .. i] = s
		end
		local function ispreview()
			-- Return true if a prominent message should be shown.
			if parms.test == 'preview' or parms.test == 'nopreview' then
				-- For testing, can preview a real message or simulate a preview
				-- when running automated tests.
				return parms.test == 'preview'
			end
			local success, revid = pcall(function ()
				return (parms.frame):preprocess('{{REVISIONID}}') end)
			return success and (revid == '')
		end
		local want_warning = is_warning and
			not config.warnings and  -- show unobtrusive warnings if config.warnings not configured
			not msg.nowarn           -- but use msg settings, not standard warning, if specified
		local title = string.gsub(msg[1] or 'Missing message', '$%d+', parts)
		local text = want_warning and '*' or msg[2] or 'Missing message'
		local cat = wanted_category(msg[3], mcode[2], want_warning)
		local anchor = msg[4] or ''
		local fmtkey = ispreview() and 'cvt_format_preview' or
			(want_warning and 'cvt_format2' or msg.format or 'cvt_format')
		local fmt = text_code.all_messages[fmtkey] or 'convert: bug'
		return subparm(fmt, title:gsub('&quot;', '&amp;quot;'), text, cat, anchor)
	end
	return 'Convert internal error: unknown message'
end

function add_warning(parms, level, key, text1, text2)  -- for forward declaration above
	-- If enabled, add a warning that will be displayed after the convert result.
	-- A higher level is more verbose: more kinds of warnings are displayed.
	-- To reduce output noise, only the first warning is displayed.
	if level &lt;= (tonumber(config.warnings) or 1) then
		if parms.warnings == nil then
			parms.warnings = message(parms, { key, text1, text2 }, true)
		end
	end
end

local function spell_number(parms, inout, number, numerator, denominator)
	-- Return result of spelling (number, numerator, denominator), or
	-- return nil if spelling is not available or not supported for given text.
	-- Examples (each value must be a string or nil):
	--   number  numerator  denominator  output
	--   ------  ---------  -----------  -------------------
	--   &quot;1.23&quot;    nil        nil        one point two three
	--    &quot;1&quot;      &quot;2&quot;        &quot;3&quot;        one and two thirds
	--    nil      &quot;2&quot;        &quot;3&quot;        two thirds
	if not speller then
		local function get_speller(module)
			return require(module).spell_number
		end
		local success
		success, speller = pcall(get_speller, spell_module)
		if not success or type(speller) ~= 'function' then
			add_warning(parms, 1, 'cvt_no_spell', 'spell')
			return nil
		end
	end
	local case
	if parms.spell_upper == inout then
		case = true
		parms.spell_upper = nil  -- only uppercase first word in a multiple unit
	end
	local sp = not parms.opt_sp_us
	local adj = parms.opt_adjectival
	return speller(number, numerator, denominator, case, sp, adj)
end

------------------------------------------------------------------------
-- BEGIN: Code required only for built-in units.
-- LATER: If need much more code, move to another module to simplify this module.
local function speed_of_sound(altitude)
	-- This is for the Mach built-in unit of speed.
	-- Return speed of sound in metres per second at given altitude in feet.
	-- If no altitude given, use default (zero altitude = sea level).
	-- Table gives speed of sound in miles per hour at various altitudes:
	--   altitude = -17,499 to 302,499 feet
	-- mach_table[a + 4] = s where
	--   a = (altitude / 5000) rounded to nearest integer (-3 to 60)
	--   s = speed of sound (mph) at that altitude
	-- LATER: Should calculate result from an interpolation between the next
	-- lower and higher altitudes in table, rather than rounding to nearest.
	-- From: http://www.aerospaceweb.org/question/atmosphere/q0112.shtml
	local mach_table = {                                                       -- a =
		799.5, 787.0, 774.2, 761.207051,                                       -- -3 to  0
		748.0, 734.6, 721.0, 707.0, 692.8, 678.3, 663.5, 660.1, 660.1, 660.1,  --  1 to 10
		660.1, 660.1, 660.1, 662.0, 664.3, 666.5, 668.9, 671.1, 673.4, 675.6,  -- 11 to 20
		677.9, 683.7, 689.9, 696.0, 702.1, 708.1, 714.0, 719.9, 725.8, 731.6,  -- 21 to 30
		737.3, 737.7, 737.7, 736.2, 730.5, 724.6, 718.8, 712.9, 707.0, 701.1,  -- 31 to 40
		695.0, 688.9, 682.8, 676.6, 670.4, 664.1, 657.8, 652.9, 648.3, 643.7,  -- 41 to 50
		639.1, 634.4, 629.6, 624.8, 620.0, 615.2, 613.2, 613.2, 613.2, 613.5,  -- 51 to 60
	}
	altitude = altitude or 0
	local a = (altitude &lt; 0) and -altitude or altitude
	a = floor(a / 5000 + 0.5)
	if altitude &lt; 0 then
		a = -a
	end
	if a &lt; -3 then
		a = -3
	elseif a &gt; 60 then
		a = 60
	end
	return mach_table[a + 4] * 0.44704  -- mph converted to m/s
end
-- END: Code required only for built-in units.
------------------------------------------------------------------------

local function get_range(word)
	-- Return a range (string or table) corresponding to word (like &quot;to&quot;),
	-- or return nil if not a range word.
	local ranges = text_code.ranges
	return ranges.types[word] or ranges.types[ranges.aliases[word]]
end

local function check_mismatch(unit1, unit2)
	-- If unit1 cannot be converted to unit2, return an error message table.
	-- This allows conversion between units of the same type, and between
	-- Nm (normally torque) and ftlb (energy), as in gun-related articles.
	-- This works because Nm is the base unit (scale = 1) for both the
	-- primary type (torque), and the alternate type (energy, where Nm = J).
	-- A match occurs if the primary types are the same, or if unit1 matches
	-- the alternate type of unit2, and vice versa. That provides a whitelist
	-- of which conversions are permitted between normally incompatible types.
	if unit1.utype == unit2.utype or
		(unit1.utype == unit2.alttype and unit1.alttype == unit2.utype) then
		return nil
	end
	return { 'cvt_mismatch', unit1.utype, unit2.utype }
end

local function override_from(out_table, in_table, fields)
	-- Copy the specified fields from in_table to out_table, but do not
	-- copy nil fields (keep any corresponding field in out_table).
	for _, field in ipairs(fields) do
		if in_table[field] then
			out_table[field] = in_table[field]
		end
	end
end

local function shallow_copy(t)
	-- Return a shallow copy of table t.
	-- Do not need the features and overhead of the Scribunto mw.clone().
	local result = {}
	for k, v in pairs(t) do
		result[k] = v
	end
	return result
end

local unit_mt = {
	-- Metatable to get missing values for a unit that does not accept SI prefixes.
	-- Warning: The boolean value 'false' is returned for any missing field
	-- so __index is not called twice for the same field in a given unit.
	__index = function (self, key)
		local value
		if key == 'name1' or key == 'sym_us' then
			value = self.symbol
		elseif key == 'name2' then
			value = self.name1 .. plural_suffix
		elseif key == 'name1_us' then
			value = self.name1
			if not rawget(self, 'name2_us') then
				-- If name1_us is 'foot', do not make name2_us by appending plural_suffix.
				self.name2_us = self.name2
			end
		elseif key == 'name2_us' then
			local raw1_us = rawget(self, 'name1_us')
			if raw1_us then
				value = raw1_us .. plural_suffix
			else
				value = self.name2
			end
		elseif key == 'link' then
			value = self.name1
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local function prefixed_name(unit, name, index)
	-- Return unit name with SI prefix inserted at correct position.
	-- index = 1 (name1), 2 (name2), 3 (name1_us), 4 (name2_us).
	-- The position is a byte (not character) index, so use Lua's sub().
	local pos = rawget(unit, 'prefix_position')
	if type(pos) == 'string' then
		pos = tonumber(split(pos, ',')[index])
	end
	if pos then
		return name:sub(1, pos - 1) .. unit.si_name .. name:sub(pos)
	end
	return unit.si_name .. name
end

local unit_prefixed_mt = {
	-- Metatable to get missing values for a unit that accepts SI prefixes.
	-- Before use, fields si_name, si_prefix must be defined.
	-- The unit must define _symbol, _name1 and
	-- may define _sym_us, _name1_us, _name2_us
	-- (_sym_us, _name2_us may be defined for a language using sp=us
	-- to refer to a variant unrelated to U.S. units).
	__index = function (self, key)
		local value
		if key == 'symbol' then
			value = self.si_prefix .. self._symbol
		elseif key == 'sym_us' then
			value = rawget(self, '_sym_us')
			if value then
				value = self.si_prefix .. value
			else
				value = self.symbol
			end
		elseif key == 'name1' then
			value = prefixed_name(self, self._name1, 1)
		elseif key == 'name2' then
			value = rawget(self, '_name2')
			if value then
				value = prefixed_name(self, value, 2)
			else
				value = self.name1 .. plural_suffix
			end
		elseif key == 'name1_us' then
			value = rawget(self, '_name1_us')
			if value then
				value = prefixed_name(self, value, 3)
			else
				value = self.name1
			end
		elseif key == 'name2_us' then
			value = rawget(self, '_name2_us')
			if value then
				value = prefixed_name(self, value, 4)
			elseif rawget(self, '_name1_us') then
				value = self.name1_us .. plural_suffix
			else
				value = self.name2
			end
		elseif key == 'link' then
			value = self.name1
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local unit_per_mt = {
	-- Metatable to get values for a per unit of form &quot;x/y&quot;.
	-- This is never called to determine a unit name or link because per units
	-- are handled as a special case.
	-- Similarly, the default output is handled elsewhere.
	__index = function (self, key)
		local value
		if key == 'symbol' then
			local per = self.per
			local unit1, unit2 = per[1], per[2]
			if unit1 then
				value = unit1[key] .. '/' .. unit2[key]
			else
				value = '/' .. unit2[key]
			end
		elseif key == 'sym_us' then
			value = self.symbol
		elseif key == 'scale' then
			local per = self.per
			local unit1, unit2 = per[1], per[2]
			value = (unit1 and unit1.scale or 1) * self.scalemultiplier / unit2.scale
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local function make_per(unitcode, unit_table, ulookup)
	-- Return true, t where t is a per unit with unit codes expanded to unit tables,
	-- or return false, t where t is an error message table.
	local result = {
		unitcode = unitcode,
		utype = unit_table.utype,
		per = {}
	}
	override_from(result, unit_table, { 'invert', 'iscomplex', 'default', 'link', 'symbol', 'symlink' })
	result.symbol_raw = (result.symbol or false)  -- to distinguish between a defined exception and a metatable calculation
	local prefix
	for i, v in ipairs(unit_table.per) do
		if i == 1 and v == '' then
			-- First unit symbol can be empty; that gives a nil first unit table.
		elseif i == 1 and text_code.currency[v] then
			prefix = currency_text or v
		else
			local success, t = ulookup(v)
			if not success then return false, t end
			result.per[i] = t
		end
	end
	local multiplier = unit_table.multiplier
	if not result.utype then
		-- Creating an automatic per unit.
		local unit1 = result.per[1]
		local utype = (unit1 and unit1.utype or prefix or '') .. '/' .. result.per[2].utype
		local t = data_code.per_unit_fixups[utype]
		if t then
			if type(t) == 'table' then
				utype = t.utype or utype
				result.link = result.link or t.link
				multiplier = multiplier or t.multiplier
			else
				utype = t
			end
		end
		result.utype = utype
	end
	result.scalemultiplier = multiplier or 1
	result.vprefix = prefix or false  -- set to non-nil to avoid calling __index
	return true, setmetatable(result, unit_per_mt)
end

local function lookup(parms, unitcode, what, utable, fails, depth)
	-- Return true, t where t is a copy of the unit's converter table,
	-- or return false, t where t is an error message table.
	-- Parameter 'what' determines whether combination units are accepted:
	--   'no_combination'  : single unit only
	--   'any_combination' : single unit or combination or output multiple
	--   'only_multiple'   : single unit or output multiple only
	-- Parameter unitcode is a symbol (like 'g'), with an optional SI prefix (like 'kg').
	-- If, for example, 'kg' is in this table, that entry is used;
	-- otherwise the prefix ('k') is applied to the base unit ('g').
	-- If unitcode is a known combination code (and if allowed by what),
	-- a table of output multiple unit tables is included in the result.
	-- For compatibility with the old template, an underscore in a unitcode is
	-- replaced with a space so usage like {{convert|350|board_feet}} works.
	-- Wikignomes may also put two spaces or &quot;&amp;nbsp;&quot; in combinations, so
	-- replace underscore, &quot;&amp;nbsp;&quot;, and multiple spaces with a single space.
	utable = utable or parms.unittable or all_units
	fails = fails or {}
	depth = depth and depth + 1 or 1
	if depth &gt; 9 then
		-- There are ways to mistakenly define units which result in infinite
		-- recursion when lookup() is called. That gives a long delay and very
		-- confusing error messages, so the depth parameter is used as a guard.
		return false, { 'cvt_lookup', unitcode }
	end
	if unitcode == nil or unitcode == '' then
		return false, { 'cvt_no_unit' }
	end
	unitcode = unitcode:gsub('_', ' '):gsub('&amp;nbsp;', ' '):gsub('  +', ' ')
	local function call_make_per(t)
		return make_per(unitcode, t,
			function (ucode) return lookup(parms, ucode, 'no_combination', utable, fails, depth) end
		)
	end
	local t = utable[unitcode]
	if t then
		if t.shouldbe then
			return false, { 'cvt_should_be', t.shouldbe }
		end
		if t.sp_us then
			parms.opt_sp_us = true
		end
		local target = t.target  -- nil, or unitcode is an alias for this target
		if target then
			local success, result = lookup(parms, target, what, utable, fails, depth)
			if not success then return false, result end
			override_from(result, t, { 'customary', 'default', 'link', 'symbol', 'symlink' })
			local multiplier = t.multiplier
			if multiplier then
				result.multiplier = tostring(multiplier)
				result.scale = result.scale * multiplier
			end
			return true, result
		end
		if t.per then
			return call_make_per(t)
		end
		local combo = t.combination  -- nil or a table of unitcodes
		if combo then
			local multiple = t.multiple
			if what == 'no_combination' or (what == 'only_multiple' and not multiple) then
				return false, { 'cvt_bad_unit', unitcode }
			end
			-- Recursively create a combination table containing the
			-- converter table of each unitcode.
			local result = { utype = t.utype, multiple = multiple, combination = {} }
			local cvt = result.combination
			for i, v in ipairs(combo) do
				local success, t = lookup(parms, v, multiple and 'no_combination' or 'only_multiple', utable, fails, depth)
				if not success then return false, t end
				cvt[i] = t
			end
			return true, result
		end
		local result = shallow_copy(t)
		result.unitcode = unitcode
		if result.prefixes then
			result.si_name = ''
			result.si_prefix = ''
			return true, setmetatable(result, unit_prefixed_mt)
		end
		return true, setmetatable(result, unit_mt)
	end
	local SIprefixes = text_code.SIprefixes
	for plen = SIprefixes[1] or 2, 1, -1 do
		-- Look for an SI prefix; should never occur with an alias.
		-- Check for longer prefix first ('dam' is decametre).
		-- SIprefixes[1] = prefix maximum #characters (as seen by mw.ustring.sub).
		local prefix = usub(unitcode, 1, plen)
		local si = SIprefixes[prefix]
		if si then
			local t = utable[usub(unitcode, plen+1)]
			if t and t.prefixes then
				local result = shallow_copy(t)
				result.unitcode = unitcode
				result.si_name = parms.opt_sp_us and si.name_us or si.name
				result.si_prefix = si.prefix or prefix
				result.scale = t.scale * 10 ^ (si.exponent * t.prefixes)
				return true, setmetatable(result, unit_prefixed_mt)
			end
		end
	end
	-- Accept any unit with an engineering notation prefix like &quot;e6cuft&quot;
	-- (million cubic feet), but not chained prefixes like &quot;e3e6cuft&quot;,
	-- and not if the unit is a combination or multiple,
	-- and not if the unit has an offset or is a built-in.
	-- Only en digits are accepted.
	local has_plus = unitcode:find('+', 1, true)
	if not has_plus then
		local exponent, baseunit = unitcode:match('^e(%d+)(.*)')
		if exponent then
			local engscale = text_code.eng_scales[exponent]
			if engscale then
				local success, result = lookup(parms, baseunit, 'no_combination', utable, fails, depth)
				if success and not (result.offset or result.builtin or result.engscale) then
					result.unitcode = unitcode  -- 'e6cuft' not 'cuft'
					result.defkey = unitcode  -- key to lookup default exception
					result.engscale = engscale
					result.scale = result.scale * 10 ^ tonumber(exponent)
					return true, result
				end
			end
		end
	end
	-- Accept user-defined combinations like &quot;acre+m2+ha&quot; or &quot;acre m2 ha&quot; for output.
	-- If '+' is used, each unit code can include a space, and any error is fatal.
	-- If ' ' is used and if each space-separated word is a unit code, it is a combo,
	-- but errors are not fatal so the unit code can be looked up as an extra unit.
	local err_is_fatal
	local combo = collection()
	if has_plus then
		err_is_fatal = true
		for item in (unitcode .. '+'):gmatch('%s*(.-)%s*%+') do
			if item ~= '' then
				combo:add(item)
			end
		end
	elseif unitcode:find('%s') then
		for item in unitcode:gmatch('%S+') do
			combo:add(item)
		end
	end
	if combo.n &gt; 1 then
		local function lookup_combo()
			if what == 'no_combination' or what == 'only_multiple' then
				return false, { 'cvt_bad_unit', unitcode }
			end
			local result = { combination = {} }
			local cvt = result.combination
			for i, v in ipairs(combo) do
				local success, t = lookup(parms, v, 'only_multiple', utable, fails, depth)
				if not success then return false, t end
				if i == 1 then
					result.utype = t.utype
				else
					local mismatch = check_mismatch(result, t)
					if mismatch then
						return false, mismatch
					end
				end
				cvt[i] = t
			end
			return true, result
		end
		local success, result = lookup_combo()
		if success or err_is_fatal then
			return success, result
		end
	end
	-- Look for x/y; split on right-most slash to get scale correct (x/y/z is x/y per z).
	local top, bottom = unitcode:match('^(.-)/([^/]+)$')
	if top and not unitcode:find('e%d') then
		-- If valid, create an automatic per unit for an &quot;x/y&quot; unit code.
		-- The unitcode must not include extraneous spaces.
		-- Engineering notation (apart from at start and which has been stripped before here),
		-- is not supported so do not make a per unit if find text like 'e3' in unitcode.
		local success, result = call_make_per({ per = {top, bottom} })
		if success then
			return true, result
		end
	end
	if not parms.opt_ignore_error and not get_range(unitcode) then
		-- Want the &quot;what links here&quot; list for the extra_module to show only cases
		-- where an extra unit is used, so do not require it if invoked from {{val}}
		-- or if looking up a range word which cannot be a unit.
		if not extra_units then
			local success, extra = pcall(function () return require(extra_module).extra_units end)
			if success and type(extra) == 'table' then
				extra_units = extra
			end
		end
		if extra_units then
			-- A unit in one data table might refer to a unit in the other table, so
			-- switch between them, relying on fails or depth to terminate loops.
			if not fails[unitcode] then
				fails[unitcode] = true
				local other = (utable == all_units) and extra_units or all_units
				local success, result = lookup(parms, unitcode, what, other, fails, depth)
				if success then
					return true, result
				end
			end
		end
	end
	if to_en_table then
		-- At fawiki it is common to translate all digits so a unit like &quot;km2&quot; becomes &quot;km&quot;.
		local en_code = ustring.gsub(unitcode, '%d', to_en_table)
		if en_code ~= unitcode then
			return lookup(parms, en_code, what, utable, fails, depth)
		end
	end
	return false, { 'cvt_unknown', unitcode }
end

local function valid_number(num)
	-- Return true if num is a valid number.
	-- In Scribunto (different from some standard Lua), when expressed as a string,
	-- overflow or other problems are indicated with text like &quot;inf&quot; or &quot;nan&quot;
	-- which are regarded as invalid here (each contains &quot;n&quot;).
	if type(num) == 'number' and tostring(num):find('n', 1, true) == nil then
		return true
	end
end

local function hyphenated(name, parts)
	-- Return a hyphenated form of given name (for adjectival usage).
	-- The name may be linked and the target of the link must not be changed.
	-- Hypothetical examples:
	--   [[long ton|ton]]           [[long ton|ton]]          (no change)
	--   [[tonne|long ton]]         [[tonne|long-ton]]
	--   [[metric ton|long ton]]    [[metric ton|long-ton]]
	--   [[long ton]]               [[long ton|long-ton]]
	-- Input can also have multiple links in a single name like:
	--   [[United States customary units|U.S.]] [[US gallon|gallon]]
	--   [[mile]]s per [[United States customary units|U.S.]] [[quart]]
	--   [[long ton]]s per [[short ton]]
	-- Assume that links cannot be nested (never like &quot;[[abc[[def]]ghi]]&quot;).
	-- This uses a simple and efficient procedure that works for most cases.
	-- Some units (if used) would require more, and can later think about
	-- adding a method to handle exceptions.
	-- The procedure is to replace each space with a hyphen, but
	-- not a space after ')' [for &quot;(pre-1954&amp;nbsp;US) nautical mile&quot;], and
	-- not spaces immediately before '(' or in '(...)' [for cases like
	-- &quot;British thermal unit (ISO)&quot; and &quot;Calorie (International Steam Table)&quot;].
	if name:find(' ', 1, true) then
		if parts then
			local pos
			if name:sub(1, 1) == '(' then
				pos = name:find(')', 1, true)
				if pos then
					return name:sub(1, pos+1) .. name:sub(pos+2):gsub(' ', '-')
				end
			elseif name:sub(-1) == ')' then
				pos = name:find('(', 1, true)
				if pos then
					return name:sub(1, pos-2):gsub(' ', '-') .. name:sub(pos-1)
				end
			end
			return name:gsub(' ', '-')
		end
		parts = collection()
		for before, item, after in name:gmatch('([^[]*)(%[%[[^[]*%]%])([^[]*)') do
			if item:find(' ', 1, true) then
				local prefix
				local plen = item:find('|', 1, true)
				if plen then
					prefix = item:sub(1, plen)
					item = item:sub(plen + 1, -3)
				else
					prefix = item:sub(1, -3) .. '|'
					item = item:sub(3, -3)
				end
				item = prefix .. hyphenated(item, parts) .. ']]'
			end
			parts:add(before:gsub(' ', '-') .. item .. after:gsub(' ', '-'))
		end
		if parts.n == 0 then
			-- No link like &quot;[[...]]&quot; was found in the original name.
			parts:add(hyphenated(name, parts))
		end
		return table.concat(parts)
	end
	return name
end

local function hyphenated_maybe(parms, want_name, sep, id, inout)
	-- Return s, f where
	--   s = id, possibly modified
	--   f = true if hyphenated
	-- Possible modifications: hyphenate; prepend '-'; append mid text.
	if id == nil or id == '' then
		return ''
	end
	local mid = (inout == (parms.opt_flip and 'out' or 'in')) and parms.mid or ''
	if want_name then
		if parms.opt_adjectival then
			return '-' .. hyphenated(id) .. mid, true
		end
		if parms.opt_add_s and id:sub(-1) ~= 's' then
			id = id .. 's'  -- for nowiki
		end
	end
	return sep .. id .. mid
end

local function use_minus(text)
	-- Return text with Unicode minus instead of '-', if present.
	if text:sub(1, 1) == '-' then
		return MINUS .. text:sub(2)
	end
	return text
end

local function digit_groups(parms, text, method)
	-- Return a numbered table of groups of digits (left-to-right, in local language).
	-- Parameter method is a number or nil:
	--   3 for 3-digit grouping (default), or
	--   2 for 3-then-2 grouping (only for digits before decimal mark).
	local len_right
	local len_left = text:find('.', 1, true)
	if len_left then
		len_right = #text - len_left
		len_left = len_left - 1
	else
		len_left = #text
	end
	local twos = method == 2 and len_left &gt; 5
	local groups = collection()
	local run = len_left
	local n
	if run &lt; 4 or (run == 4 and parms.opt_comma5) then
		if parms.opt_gaps then
			n = run
		else
			n = #text
		end
	elseif twos then
		n = run % 2 == 0 and 1 or 2
	else
		n = run % 3 == 0 and 3 or run % 3
	end
	while run &gt; 0 do
		groups:add(n)
		run = run - n
		n = (twos and run &gt; 3) and 2 or 3
	end
	if len_right then
		if groups.n == 0 then
			groups:add(0)
		end
		if parms.opt_gaps and len_right &gt; 3 then
			local want4 = not parms.opt_gaps3  -- true gives no gap before trailing single digit
			local isfirst = true
			run = len_right
			while run &gt; 0 do
				n = (want4 and run == 4) and 4 or (run &gt; 3 and 3 or run)
				if isfirst then
					isfirst = false
					groups[groups.n] = groups[groups.n] + 1 + n
				else
					groups:add(n)
				end
				run = run - n
			end
		else
			groups[groups.n] = groups[groups.n] + 1 + len_right
		end
	end
	local pos = 1
	for i, length in ipairs(groups) do
		groups[i] = from_en(text:sub(pos, pos + length - 1))
		pos = pos + length
	end
	return groups
end

function with_separator(parms, text)  -- for forward declaration above
	-- Input text is a number in en digits with optional '.' decimal mark.
	-- Return an equivalent, formatted for display:
	--   with a custom decimal mark instead of '.', if wanted
	--   with thousand separators inserted, if wanted
	--   digits in local language
	-- The given text is like '123' or '123.' or '12345.6789'.
	-- The text has no sign (caller inserts that later, if necessary).
	-- When using gaps, they are inserted before and after the decimal mark.
	-- Separators are inserted only before the decimal mark.
	-- A trailing dot (as in '123.') is removed because their use appears to
	-- be accidental, and such a number should be shown as '123' or '123.0'.
	-- It is useful for convert to suppress the dot so, for example, '4000.'
	-- is a simple way of indicating that all the digits are significant.
	if text:sub(-1) == '.' then
		text = text:sub(1, -2)
	end
	if #text &lt; 4 or parms.opt_nocomma or numsep == '' then
		return from_en(text)
	end
	local groups = digit_groups(parms, text, group_method)
	if parms.opt_gaps then
		if groups.n &lt;= 1 then
			return groups[1] or ''
		end
		local nowrap = '&lt;span style=&quot;white-space: nowrap&quot;&gt;'
		local gap = '&lt;span style=&quot;margin-left: 0.25em&quot;&gt;'
		local close = '&lt;/span&gt;'
		return nowrap .. groups[1] .. gap .. table.concat(groups, close .. gap, 2, groups.n) .. close .. close
	end
	return table.concat(groups, numsep)
end

-- An input value like 1.23e12 is displayed using scientific notation (1.2310).
-- That also makes the output use scientific notation, except for small values.
-- In addition, very small or very large output values use scientific notation.
-- Use format(fmtpower, significand, '10', exponent) where each argument is a string.
local fmtpower = '%s&lt;span style=&quot;margin:0 .15em 0 .25em&quot;&gt;&lt;/span&gt;%s&lt;sup&gt;%s&lt;/sup&gt;'

local function with_exponent(parms, show, exponent)
	-- Return wikitext to display the implied value in scientific notation.
	-- Input uses en digits; output uses digits in local language.
	return format(fmtpower, with_separator(parms, show), from_en('10'), use_minus(from_en(tostring(exponent))))
end

local function make_sigfig(value, sigfig)
	-- Return show, exponent that are equivalent to the result of
	-- converting the number 'value' (where value &gt;= 0) to a string,
	-- rounded to 'sigfig' significant figures.
	-- The returned items are:
	--   show: a string of digits; no sign and no dot;
	--         there is an implied dot before show.
	--   exponent: a number (an integer) to shift the implied dot.
	-- Resulting value = tonumber('.' .. show) * 10^exponent.
	-- Examples:
	--   make_sigfig(23.456, 3) returns '235', 2 (.235 * 10^2).
	--   make_sigfig(0.0023456, 3) returns '235', -2 (.235 * 10^-2).
	--   make_sigfig(0, 3) returns '000', 1 (.000 * 10^1).
	if sigfig &lt;= 0 then
		sigfig = 1
	elseif sigfig &gt; maxsigfig then
		sigfig = maxsigfig
	end
	if value == 0 then
		return string.rep('0', sigfig), 1
	end
	local exp, fracpart = math.modf(log10(value))
	if fracpart &gt;= 0 then
		fracpart = fracpart - 1
		exp = exp + 1
	end
	local digits = format('%.0f', 10^(fracpart + sigfig))
	if #digits &gt; sigfig then
		-- Overflow (for sigfig=3: like 0.9999 rounding to &quot;1000&quot;; need &quot;100&quot;).
		digits = digits:sub(1, sigfig)
		exp = exp + 1
	end
	assert(#digits == sigfig, 'Bug: rounded number has wrong length')
	return digits, exp
end

-- Fraction output format.
local fracfmt = {
	{ -- Like {{frac}} (fraction slash).
		-- 1/2    : sign, numerator, denominator
		-- 1+2/3  : signed_wholenumber, numerator, denominator
		'&lt;span class=&quot;frac nowrap&quot;&gt;%s&lt;sup&gt;%s&lt;/sup&gt;&amp;frasl;&lt;sub&gt;%s&lt;/sub&gt;&lt;/span&gt;',
		'&lt;span class=&quot;frac nowrap&quot;&gt;%s&lt;span class=&quot;visualhide&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;sup&gt;%s&lt;/sup&gt;&amp;frasl;&lt;sub&gt;%s&lt;/sub&gt;&lt;/span&gt;',
	},
	{ -- Like {{sfrac}} (fraction horizontal bar).
		-- 1//2   : sign, numerator, denominator (sign should probably be before the fraction, but then it can wrap, and html is already too long)
		-- 1+2//3 : signed_wholenumber, numerator, denominator
		'&lt;span class=&quot;sfrac nowrap&quot; style=&quot;display:inline-block; vertical-align:-0.5em; font-size:85%%; text-align:center;&quot;&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em;&quot;&gt;%s%s&lt;/span&gt;&lt;span class=&quot;visualhide&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em; border-top:1px solid;&quot;&gt;%s&lt;/span&gt;&lt;/span&gt;',
		'&lt;span class=&quot;sfrac nowrap&quot;&gt;%s&lt;span class=&quot;visualhide&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;display:inline-block; vertical-align:-0.5em; font-size:85%%; text-align:center;&quot;&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em;&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;visualhide&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em; border-top:1px solid;&quot;&gt;%s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;',
	},
}

local function format_fraction(parms, inout, negative, wholestr, numstr, denstr, do_spell, style)
	-- Return wikitext for a fraction, possibly spelled.
	-- Inputs use en digits and have no sign; output uses digits in local language.
	local wikitext
	if not style then
		style = parms.opt_fraction_horizontal and 2 or 1
	end
	if wholestr == '' then
		wholestr = nil
	end
	if wholestr then
		local decorated = with_separator(parms, wholestr)
		if negative then
			decorated = MINUS .. decorated
		end
		local fmt = fracfmt[style][2]
		wikitext = format(fmt, decorated, from_en(numstr), from_en(denstr))
	else
		local sign = negative and MINUS or ''
		wikitext = format(fracfmt[style][1], sign, from_en(numstr), from_en(denstr))
	end
	if do_spell then
		if negative then
			if wholestr then
				wholestr = '-' .. wholestr
			else
				numstr = '-' .. numstr
			end
		end
		wikitext = spell_number(parms, inout, wholestr, numstr, denstr) or wikitext
	end
	return wikitext
end

local function format_number(parms, show, exponent, isnegative)
	-- Parameter show is a string or a table containing strings.
	-- Each string is a formatted number in en digits and optional '.' decimal mark.
	-- A table represents a fraction: integer, numerator, denominator;
	-- if a table is given, exponent must be nil.
	-- Return t where t is a table with fields:
	--   show = wikitext formatted to display implied value
	--          (digits in local language)
	--   is_scientific = true if show uses scientific notation
	--   clean = unformatted show (possibly adjusted and with inserted '.')
	--          (en digits)
	--   sign = '' or MINUS
	--   exponent = exponent (possibly adjusted)
	-- The clean and exponent fields can be used to calculate the
	-- rounded absolute value, if needed.
	--
	-- The value implied by the arguments is found from:
	--   exponent is nil; and
	--   show is a string of digits (no sign), with an optional dot;
	--   show = '123.4' is value 123.4, '1234' is value 1234.0;
	-- or:
	--   exponent is an integer indicating where dot should be;
	--   show is a string of digits (no sign and no dot);
	--   there is an implied dot before show;
	--   show does not start with '0';
	--   show = '1234', exponent = 3 is value 0.1234*10^3 = 123.4.
	--
	-- The formatted result:
	-- * Is for an output value and is spelled if wanted and possible.
	-- * Includes a Unicode minus if isnegative and not spelled.
	-- * Uses a custom decimal mark, if wanted.
	-- * Has digits grouped where necessary, if wanted.
	-- * Uses scientific notation if requested, or for very small or large values
	--   (which forces result to not be spelled).
	-- * Has no more than maxsigfig significant digits
	--   (same as old template and {{#expr}}).
	local xhi, xlo  -- these control when scientific notation (exponent) is used
	if parms.opt_scientific then
		xhi, xlo = 4, 2  -- default for output if input uses e-notation
	elseif parms.opt_scientific_always then
		xhi, xlo = 0, 0  -- always use scientific notation (experimental)
	else
		xhi, xlo = 10, 4  -- default
	end
	local sign = isnegative and MINUS or ''
	local maxlen = maxsigfig
	local tfrac
	if type(show) == 'table' then
		tfrac = show
		show = tfrac.wholestr
		assert(exponent == nil, 'Bug: exponent given with fraction')
	end
	if not tfrac and not exponent then
		local integer, dot, decimals = show:match('^(%d*)(%.?)(.*)')
		if integer == '0' or integer == '' then
			local zeros, figs = decimals:match('^(0*)([^0]?.*)')
			if #figs == 0 then
				if #zeros &gt; maxlen then
					show = '0.' .. zeros:sub(1, maxlen)
				end
			elseif #zeros &gt;= xlo then
				show = figs
				exponent = -#zeros
			elseif #figs &gt; maxlen then
				show = '0.' .. zeros .. figs:sub(1, maxlen)
			end
		elseif #integer &gt;= xhi then
			show = integer .. decimals
			exponent = #integer
		else
			maxlen = maxlen + #dot
			if #show &gt; maxlen then
				show = show:sub(1, maxlen)
			end
		end
	end
	if exponent then
		local function zeros(n)
			return string.rep('0', n)
		end
		if #show &gt; maxlen then
			show = show:sub(1, maxlen)
		end
		if exponent &gt; xhi or exponent &lt;= -xlo or (exponent == xhi and show ~= '1' .. zeros(xhi - 1)) then
			-- When xhi, xlo = 10, 4 (the default), scientific notation is used if the
			-- rounded value satisfies: value &gt;= 1e9 or value &lt; 1e-4 (1e9 = 0.1e10),
			-- except if show is '1000000000' (1e9), for example:
			-- {{convert|1000000000|m|m|sigfig=10}}  1,000,000,000 metres (1,000,000,000 m)
			local significand
			if #show &gt; 1 then
				significand = show:sub(1, 1) .. '.' .. show:sub(2)
			else
				significand = show
			end
			return {
				clean = '.' .. show,
				exponent = exponent,
				sign = sign,
				show = sign .. with_exponent(parms, significand, exponent-1),
				is_scientific = true,
			}
		end
		if exponent &gt;= #show then
			show = show .. zeros(exponent - #show)  -- result has no dot
		elseif exponent &lt;= 0 then
			show = '0.' .. zeros(-exponent) .. show
		else
			show = show:sub(1, exponent) .. '.' .. show:sub(exponent+1)
		end
	end
	local formatted_show
	if tfrac then
		show = tostring(tfrac.value)  -- to set clean in returned table
		formatted_show = format_fraction(parms, 'out', isnegative, tfrac.wholestr, tfrac.numstr, tfrac.denstr, parms.opt_spell_out)
	else
		if isnegative and show:match('^0.?0*$') then
			sign = ''  -- don't show minus if result is negative but rounds to zero
		end
		formatted_show = sign .. with_separator(parms, show)
		if parms.opt_spell_out then
			formatted_show = spell_number(parms, 'out', sign .. show) or formatted_show
		end
	end
	return {
		clean = show,
		sign = sign,
		show = formatted_show,
		is_scientific = false,  -- to avoid calling __index
	}
end

local function extract_fraction(parms, text, negative)
	-- If text represents a fraction, return
	--   value, altvalue, show, denominator
	-- where
	--   value is a number (value of the fraction in argument text)
	--   altvalue is an alternate interpretation of any fraction for the hands
	--        unit where &quot;12.1+3/4&quot; means 12 hands 1.75 inches
	--   show is a string (formatted text for display of an input value,
	--        and is spelled if wanted and possible)
	--   denominator is value of the denominator in the fraction
	-- Otherwise, return nil.
	-- Input uses en digits and '.' decimal mark (input has been translated).
	-- Output uses digits in local language and local decimal mark, if any.
	------------------------------------------------------------------------
	-- Originally this function accepted x+y/z where x, y, z were any valid
	-- numbers, possibly with a sign. For example '1.23e+2+1.2/2.4' = 123.5,
	-- and '2-3/8' = 1.625. However, such usages were found to be errors or
	-- misunderstandings, so since August 2014 the following restrictions apply:
	--   x (if present) is an integer or has a single digit after decimal mark
	--   y and z are unsigned integers
	--   e-notation is not accepted
	-- The overall number can start with '+' or '-' (so '12+3/4' and '+12+3/4'
	-- and '-12-3/4' are valid).
	-- Any leading negative sign is removed by the caller, so only inputs
	-- like the following are accepted here (may have whitespace):
	--   negative = false       false        true (there was a leading '-')
	--   text     = '2/3'       '+2/3'       '2/3'
	--   text     = '1+2/3'     '+1+2/3'     '1-2/3'
	--   text     = '12.3+1/2'  '+12.3+1/2'  '12.3-1/2'
	-- Values like '12.3+1/2' are accepted, but are intended only for use
	-- with the hands unit (not worth adding code to enforce that).
	------------------------------------------------------------------------
	local leading_plus, prefix, numstr, slashes, denstr =
		text:match('^%s*(%+?)%s*(.-)%s*(%d+)%s*(/+)%s*(%d+)%s*$')
	if not leading_plus then
		-- Accept a single U+2044 fraction slash because that may be pasted.
		leading_plus, prefix, numstr, denstr =
			text:match('^%s*(%+?)%s*(.-)%s*(%d+)%s*%s*(%d+)%s*$')
		slashes = '/'
	end
	local numerator = tonumber(numstr)
	local denominator = tonumber(denstr)
	if numerator == nil or denominator == nil or (negative and leading_plus ~= '') then
		return nil
	end
	local whole, wholestr
	if prefix == '' then
		wholestr = ''
		whole = 0
	else
		-- Any prefix must be like '12+' or '12-' (whole number and fraction sign);
		-- '12.3+' and '12.3-' are also accepted (single digit after decimal point)
		-- because '12.3+1/2 hands' is valid (12 hands 3 inches).
		local num1, num2, frac_sign = prefix:match('^(%d+)(%.?%d?)%s*([+%-])$')
		if num1 == nil then return nil end
		if num2 == '' then  -- num2 must be '' or like '.1' but not '.' or '.12'
			wholestr = num1
		else
			if #num2 ~= 2 then return nil end
			wholestr = num1 .. num2
		end
		if frac_sign ~= (negative and '-' or '+') then return nil end
		whole = tonumber(wholestr)
		if whole == nil then return nil end
	end
	local value = whole + numerator / denominator
	if not valid_number(value) then return nil end
	local altvalue = whole + numerator / (denominator * 10)
	local style = #slashes  -- kludge: 1 or 2 slashes can be used to select style
	if style &gt; 2 then style = 2 end
	local wikitext = format_fraction(parms, 'in', negative, leading_plus .. wholestr, numstr, denstr, parms.opt_spell_in, style)
	return value, altvalue, wikitext, denominator
end

local function extract_number(parms, text, another, no_fraction)
	-- Return true, info if can extract a number from text,
	-- where info is a table with the result,
	-- or return false, t where t is an error message table.
	-- Input can use en digits or digits in local language and can
	-- have references at the end. Accepting references is intended
	-- for use in infoboxes with a field for a value passed to convert.
	-- Parameter another = true if the expected value is not the first.
	-- Before processing, the input text is cleaned:
	-- * Any thousand separators (valid or not) are removed.
	-- * Any sign (and optional following whitespace) is replaced with
	--   '-' (if negative) or '' (otherwise).
	--   That replaces Unicode minus with '-'.
	-- If successful, the returned info table contains named fields:
	--   value    = a valid number
	--   altvalue = a valid number, usually same as value but different
	--              if fraction used (for hands unit)
	--   singular = true if value is 1 or -1 (to use singular form of units)
	--   clean    = cleaned text with any separators and sign removed
	--              (en digits and '.' decimal mark)
	--   show     = text formatted for output, possibly with ref strip markers
	--              (digits in local language and custom decimal mark)
	-- The resulting show:
	-- * Is for an input value and is spelled if wanted and possible.
	-- * Has a rounded value, if wanted.
	-- * Has digits grouped where necessary, if wanted.
	-- * If negative, a Unicode minus is used; otherwise the sign is
	--   '+' (if the input text used '+'), or is '' (if no sign in input).
	text = strip(text or '')
	local reference
	local pos = text:find('\127', 1, true)
	if pos then
		local before = text:sub(1, pos - 1)
		local remainder = text:sub(pos)
		local refs = {}
		while #remainder &gt; 0 do
			local ref, spaces
			ref, spaces, remainder = remainder:match('^(\127[^\127]*UNIQ[^\127]*%-ref[^\127]*\127)(%s*)(.*)')
			if ref then
				table.insert(refs, ref)
			else
				refs = {}
				break
			end
		end
		if #refs &gt; 0 then
			text = strip(before)
			reference = table.concat(refs)
		end
	end
	local clean = to_en(text, parms)
	if clean == '' then
		return false, { another and 'cvt_no_num2' or 'cvt_no_num' }
	end
	local isnegative, propersign = false, ''  -- most common case
	local singular, show, denominator
	local value = tonumber(clean)
	local altvalue
	if value then
		local sign = clean:sub(1, 1)
		if sign == '+' or sign == '-' then
			propersign = (sign == '+') and '+' or MINUS
			clean = clean:sub(2)
		end
		if value &lt; 0 then
			isnegative = true
			value = -value
		end
	else
		local valstr
		for _, prefix in ipairs({ '-', MINUS, '&amp;minus;' }) do
			-- Including '-' means inputs like '- 2' (with space) are accepted as -2.
			-- It also sets isnegative in case input is a fraction like '-2-3/4'.
			local plen = #prefix
			if clean:sub(1, plen) == prefix then
				valstr = clean:sub(plen + 1)
				break
			end
		end
		if valstr then
			isnegative = true
			propersign = MINUS
			clean = valstr
			value = tonumber(clean)
		end
		if value == nil then
			if not no_fraction then
				value, altvalue, show, denominator = extract_fraction(parms, clean, isnegative)
			end
			if value == nil then
				return false, { 'cvt_bad_num', text }
			end
			if value &lt;= 1 then
				singular = true  -- for example, &quot; mile&quot; or &quot;one half mile&quot; (singular unit)
			end
		end
	end
	if not valid_number(value) then  -- for example, &quot;1e310&quot; may overflow
		return false, { 'cvt_invalid_num' }
	end
	if show == nil then
		-- clean is a non-empty string with no spaces, and does not represent a fraction,
		-- and value = tonumber(clean) is a number &gt;= 0.
		-- If the input uses e-notation, show will be displayed using a power of ten, but
		-- we use the number as given so it might not be normalized scientific notation.
		-- The input value is spelled if specified so any e-notation is ignored;
		-- that allows input like 2e6 to be spelled as &quot;two million&quot; which works
		-- because the spell module converts '2e6' to '2000000' before spelling.
		local function rounded(value, default, exponent)
			local precision = parms.opt_ri
			if precision then
				local fmt = '%.' .. format('%d', precision) .. 'f'
				local result = fmt:format(tonumber(value) + 2e-14)  -- fudge for some common cases of bad rounding
				if not exponent then
					singular = (tonumber(result) == 1)
				end
				return result
			end
			return default
		end
		singular = (value == 1)
		local scientific
		local significand, exponent = clean:match('^([%d.]+)[Ee]([+%-]?%d+)')
		if significand then
			show = with_exponent(parms, rounded(significand, significand, exponent), exponent)
			scientific = true
		else
			show = with_separator(parms, rounded(value, clean))
		end
		show = propersign .. show
		if parms.opt_spell_in then
			show = spell_number(parms, 'in', propersign .. rounded(value, clean)) or show
			scientific = false
		end
		if scientific then
			parms.opt_scientific = true
		end
	end
	if isnegative and (value ~= 0) then
		value = -value
		altvalue = -(altvalue or value)
	end
	return true, {
		value = value,
		altvalue = altvalue or value,
		singular = singular,
		clean = clean,
		show = show .. (reference or ''),
		denominator = denominator,
	}
end

local function get_number(text)
	-- Return v, f where:
	--   v = nil (text is not a number)
	-- or
	--   v = value of text (text is a number)
	--   f = true if value is an integer
	-- Input can use en digits or digits in local language,
	-- but no separators, no Unicode minus, and no fraction.
	if text then
		local number = tonumber(to_en(text))
		if number then
			local _, fracpart = math.modf(number)
			return number, (fracpart == 0)
		end
	end
end

local function gcd(a, b)
	-- Return the greatest common denominator for the given values,
	-- which are known to be positive integers.
	if a &gt; b then
		a, b = b, a
	end
	if a &lt;= 0 then
		return b
	end
	local r = b % a
	if r &lt;= 0 then
		return a
	end
	if r == 1 then
		return 1
	end
	return gcd(r, a)
end

local function fraction_table(value, denominator)
	-- Return value as a string or a table:
	-- * If result is a string, there is no fraction, and the result
	--   is value formatted as a string of en digits.
	-- * If result is a table, it represents a fraction with named fields:
	--   wholestr, numstr, denstr (strings of en digits for integer, numerator, denominator).
	-- The result is rounded to the nearest multiple of (1/denominator).
	-- If the multiple is zero, no fraction is included.
	-- No fraction is included if value is very large as the fraction would
	-- be unhelpful, particularly if scientific notation is required.
	-- Input value is a non-negative number.
	-- Input denominator is a positive integer for the desired fraction.
	if value &lt;= 0 then
		return '0'
	end
	if denominator &lt;= 0 or value &gt; 1e8 then
		return format('%.2f', value)
	end
	local integer, decimals = math.modf(value)
	local numerator = floor((decimals * denominator) +
		0.5 + 2e-14)  -- add fudge for some common cases of bad rounding
	if numerator &gt;= denominator then
		integer = integer + 1
		numerator = 0
	end
	local wholestr = tostring(integer)
	if numerator &gt; 0 then
		local div = gcd(numerator, denominator)
		if div &gt; 1 then
			numerator = numerator / div
			denominator = denominator / div
		end
		return {
			wholestr = (integer &gt; 0) and wholestr or '',
			numstr = tostring(numerator),
			denstr = tostring(denominator),
			value = value,
		}
	end
	return wholestr
end

local function preunits(count, preunit1, preunit2)
	-- If count is 1:
	--     ignore preunit2
	--     return p1
	-- else:
	--     preunit1 is used for preunit2 if the latter is empty
	--     return p1, p2
	-- where:
	--     p1 is text to insert before the input unit
	--     p2 is text to insert before the output unit
	--     p1 or p2 may be nil to mean &quot;no preunit&quot;
	-- Using '+ ' gives output like &quot;5+ feet&quot; (no preceding space).
	local function withspace(text, i)
		-- Insert space at beginning if i == 1, or at end if i == -1.
		-- However, no space is inserted if there is a space or '&amp;nbsp;'
		-- or '-' at that position ('-' is for adjectival text).
		local current = text:sub(i, i)
		if current == ' ' or current == '-' then
			return text
		end
		if i == 1 then
			current = text:sub(1, 6)
		else
			current = text:sub(-6, -1)
		end
		if current == '&amp;nbsp;' then
			return text
		end
		if i == 1 then
			return ' ' .. text
		end
		return text .. ' '
	end
	preunit1 = preunit1 or ''
	local trim1 = strip(preunit1)
	if count == 1 then
		if trim1 == '' then
			return nil
		end
		return withspace(withspace(preunit1, 1), -1)
	end
	preunit2 = preunit2 or ''
	local trim2 = strip(preunit2)
	if trim1 == '' and trim2 == '' then
		return nil, nil
	end
	if trim1 ~= '+' then
		preunit1 = withspace(preunit1, 1)
	end
	if trim2 == '&amp;#32;' then  -- trick to make preunit2 empty
		preunit2 = nil
	elseif trim2 == '' then
		preunit2 = preunit1
	elseif trim2 ~= '+' then
		preunit2 = withspace(preunit2, 1)
	end
	return preunit1, preunit2
end

local function range_text(range, want_name, parms, before, after, inout)
	-- Return before .. rtext .. after
	-- where rtext is the text that separates two values in a range.
	local rtext, adj_text, exception
	if type(range) == 'table' then
		-- Table must specify range text for ('off' and 'on') or ('input' and 'output'),
		-- and may specify range text for 'adj=on',
		-- and may specify exception = true.
		rtext = range[want_name and 'off' or 'on'] or
				range[((inout == 'in') == (parms.opt_flip == true)) and 'output' or 'input']
		adj_text = range['adj']
		exception = range['exception']
	else
		rtext = range
	end
	if parms.opt_adjectival then
		if want_name or (exception and parms.abbr_org == 'on') then
			rtext = adj_text or rtext:gsub(' ', '-'):gsub('&amp;nbsp;', '-')
		end
	end
	if rtext == '' and after:sub(1, #MINUS) == MINUS then
		rtext = '&amp;nbsp; '
	end
	return before .. rtext .. after
end

local function get_composite(parms, iparm, in_unit_table)
	-- Look for a composite input unit. For example, {{convert|1|yd|2|ft|3|in}}
	-- would result in a call to this function with
	--   iparm = 3 (parms[iparm] = &quot;2&quot;, just after the first unit)
	--   in_unit_table = (unit table for &quot;yd&quot;; contains value 1 for number of yards)
	-- Return true, iparm, unit where
	--   iparm = index just after the composite units (7 in above example)
	--   unit = composite unit table holding all input units,
	-- or return true if no composite unit is present in parms,
	-- or return false, t where t is an error message table.
	local default, subinfo
	local composite_units, count = { in_unit_table }, 1
	local fixups = {}
	local total = in_unit_table.valinfo[1].value
	local subunit = in_unit_table
	while subunit.subdivs do  -- subdivs is nil or a table of allowed subdivisions
		local subcode = strip(parms[iparm+1])
		local subdiv = subunit.subdivs[subcode] or subunit.subdivs[(all_units[subcode] or {}).target]
		if not subdiv then
			break
		end
		local success
		success, subunit = lookup(parms, subcode, 'no_combination')
		if not success then return false, subunit end  -- should never occur
		success, subinfo = extract_number(parms, parms[iparm])
		if not success then return false, subinfo end
		iparm = iparm + 2
		subunit.inout = 'in'
		subunit.valinfo = { subinfo }
		-- Recalculate total as a number of subdivisions.
		-- subdiv[1] = number of subdivisions per previous unit (integer &gt; 1).
		total = total * subdiv[1] + subinfo.value
		if not default then  -- set by the first subdiv with a default defined
			default = subdiv.default
		end
		count = count + 1
		composite_units[count] = subunit
		if subdiv.unit or subdiv.name then
			fixups[count] = { unit = subdiv.unit, name = subdiv.name, valinfo = subunit.valinfo }
		end
	end
	if count == 1 then
		return true  -- no error and no composite unit
	end
	for i, fixup in pairs(fixups) do
		local unit = fixup.unit
		local name = fixup.name
		if not unit or (count &gt; 2 and name) then
			composite_units[i].fixed_name = name
		else
			local success, alternate = lookup(parms, unit, 'no_combination')
			if not success then return false, alternate end  -- should never occur
			alternate.inout = 'in'
			alternate.valinfo = fixup.valinfo
			composite_units[i] = alternate
		end
	end
	return true, iparm, {
		utype = in_unit_table.utype,
		scale = subunit.scale,  -- scale of last (least significant) unit
		valinfo = { { value = total, clean = subinfo.clean, denominator = subinfo.denominator } },
		composite = composite_units,
		default = default or in_unit_table.default
	}
end

local function translate_parms(parms, kv_pairs)
	-- Update fields in parms by translating each key:value in kv_pairs to terms
	-- used by this module (may involve translating from local language to English).
	-- Also, checks are performed which may display warnings, if enabled.
	-- Return true if successful or return false, t where t is an error message table.
	currency_text = nil  -- local testing can hold module in memory; must clear globals
	local accept_any_text = {
		input = true,
		qid = true,
		qual = true,
		stylein = true,
		styleout = true,
		tracking = true,
	}
	if kv_pairs.adj and kv_pairs.sing then
		-- For enwiki (before translation), warn if attempt to use adj and sing
		-- as the latter is a deprecated alias for the former.
		if kv_pairs.adj ~= kv_pairs.sing and kv_pairs.sing ~= '' then
			add_warning(parms, 1, 'cvt_unknown_option', 'sing=' .. kv_pairs.sing)
		end
		kv_pairs.sing = nil
	end
	for loc_name, loc_value in pairs(kv_pairs) do
		local en_name = text_code.en_option_name[loc_name]
		if en_name then
			local en_value
			if en_name == '$' or en_name == 'frac' or en_name == 'sigfig' then
				if loc_value == '' then
					add_warning(parms, 2, 'cvt_empty_option', loc_name)
				elseif en_name == '$' then
					-- Value should be a single character like &quot;&quot; for the euro currency symbol, but anything is accepted.
					currency_text = (loc_value == 'euro') and '' or loc_value
				else
					local minimum
					local number, is_integer = get_number(loc_value)
					if en_name == 'frac' then
						minimum = 2
						if number and number &lt; 0 then
							parms.opt_fraction_horizontal = true
							number = -number
						end
					else
						minimum = 1
					end
					if number and is_integer and number &gt;= minimum then
						en_value = number
					else
						add_warning(parms, 1, (en_name == 'frac' and 'cvt_bad_frac' or 'cvt_bad_sigfig'), loc_name .. '=' .. loc_value)
					end
				end
			elseif accept_any_text[en_name] then
				en_value = loc_value ~= '' and loc_value or nil  -- accept non-empty user text with no validation
				if en_name == 'input' then
					-- May have something like {{convert|input=}} (empty input) if source is an infobox
					-- with optional fields. In that case, want to output nothing rather than an error.
					parms.input_text = loc_value  -- keep input because parms.input is nil if loc_value == ''
				end
			else
				en_value = text_code.en_option_value[en_name][loc_value]
				if en_value and en_value:sub(-1) == '?' then
					en_value = en_value:sub(1, -2)
					add_warning(parms, -1, 'cvt_deprecated', loc_name .. '=' .. loc_value)
				end
				if en_value == nil then
					if loc_value == '' then
						add_warning(parms, 2, 'cvt_empty_option', loc_name)
					else
						add_warning(parms, 1, 'cvt_unknown_option', loc_name .. '=' .. loc_value)
					end
				elseif en_value == '' then
					en_value = nil  -- an ignored option like adj=off
				elseif type(en_value) == 'string' and en_value:sub(1, 4) == 'opt_' then
					for _, v in ipairs(split(en_value, ',')) do
						local lhs, rhs = v:match('^(.-)=(.+)$')
						if rhs then
							parms[lhs] = tonumber(rhs) or rhs
						else
							parms[v] = true
						end
					end
					en_value = nil
				end
			end
			parms[en_name] = en_value
		else
			add_warning(parms, 1, 'cvt_unknown_option', loc_name .. '=' .. loc_value)
		end
	end
	local abbr_entered = parms.abbr
	local cfg_abbr = config.abbr
	if cfg_abbr then
		-- Don't warn if invalid because every convert would show that warning.
		if cfg_abbr == 'on always' then
			parms.abbr = 'on'
		elseif cfg_abbr == 'off always' then
			parms.abbr = 'off'
		elseif parms.abbr == nil then
			if cfg_abbr == 'on default' then
				parms.abbr = 'on'
			elseif cfg_abbr == 'off default' then
				parms.abbr = 'off'
			end
		end
	end
	if parms.abbr then
		if parms.abbr == 'unit' then
			parms.abbr = 'on'
			parms.number_word = true
		end
		parms.abbr_org = parms.abbr  -- original abbr, before any flip
	elseif parms.opt_hand_hh then
		parms.abbr_org = 'on'
		parms.abbr = 'on'
	else
		parms.abbr = 'out'  -- default is to abbreviate output only (use symbol, not name)
	end
	if parms.opt_order_out then
		-- Disable options that do not work in a useful way with order=out.
		parms.opt_flip = nil  -- override adj=flip
		parms.opt_spell_in = nil
		parms.opt_spell_out = nil
		parms.opt_spell_upper = nil
	end
	if parms.opt_spell_out and not abbr_entered then
		parms.abbr = 'off'  -- should show unit name when spelling the output value
	end
	if parms.opt_flip then
		local function swap_in_out(option)
			local value = parms[option]
			if value == 'in' then
				parms[option] = 'out'
			elseif value == 'out' then
				parms[option] = 'in'
			end
		end
		swap_in_out('abbr')
		swap_in_out('lk')
		if parms.opt_spell_in and not parms.opt_spell_out then
			-- For simplicity, and because it does not appear to be needed,
			-- user cannot set an option to spell the output only.
			parms.opt_spell_in = nil
			parms.opt_spell_out = true
		end
	end
	if parms.opt_spell_upper then
		parms.spell_upper = parms.opt_flip and 'out' or 'in'
	end
	if parms.opt_table or parms.opt_tablecen then
		if abbr_entered == nil and parms.lk == nil then
			parms.opt_values = true
		end
		parms.table_align = parms.opt_table and 'right' or 'center'
	end
	if parms.table_align or parms.opt_sortable_on then
		parms.need_table_or_sort = true
	end
	local disp_joins = text_code.disp_joins
	local default_joins = disp_joins['b']
	parms.join_between = default_joins[3] or '; '
	local disp = parms.disp
	if disp == nil then  -- special case for the most common setting
		parms.joins = default_joins
	elseif disp == 'x' then
		-- Later, parms.joins is set from the input parameters.
	else
		-- Old template does this.
		local abbr = parms.abbr
		if disp == 'slash' then
			if abbr_entered == nil then
				disp = 'slash-nbsp'
			elseif abbr == 'in' or abbr == 'out' then
				disp = 'slash-sp'
			else
				disp = 'slash-nosp'
			end
		elseif disp == 'sqbr' then
			if abbr == 'on' then
				disp = 'sqbr-nbsp'
			else
				disp = 'sqbr-sp'
			end
		end
		parms.joins = disp_joins[disp] or default_joins
		parms.join_between = parms.joins[3] or parms.join_between
		parms.wantname = parms.joins.wantname
	end
	if (en_default and not parms.opt_lang_local and (parms[1] or ''):find('%d')) or parms.opt_lang_en then
		from_en_table = nil
	end
	if en_default and from_en_table then
		-- For hiwiki: localized symbol/name is defined with the US symbol/name field,
		-- and is used if output uses localized numbers.
		parms.opt_sp_us = true
	end
	return true
end

local function get_values(parms)
	-- If successful, update parms and return true, v, i where
	--   v = table of input values
	--   i = index to next entry in parms after those processed here
	-- or return false, t where t is an error message table.
	local valinfo = collection()  -- numbered table of input values
	local range = collection()  -- numbered table of range items (having, for example, 2 range items requires 3 input values)
	local had_nocomma  -- true if removed &quot;nocomma&quot; kludge from second parameter (like &quot;tonocomma&quot;)
	local parm2 = strip(parms[2])
	if parm2 and parm2:sub(-7, -1) == 'nocomma' then
		parms[2] = strip(parm2:sub(1, -8))
		parms.opt_nocomma = true
		had_nocomma = true
	end
	local function extractor(i)
		-- If the parameter is not a value, try unpacking it as a range (&quot;1-23&quot; for &quot;1 to 23&quot;).
		-- However, &quot;-1-2/3&quot; is a negative fraction (-1), so it must be extracted first.
		-- Do not unpack a parameter if it is like &quot;3-1/2&quot; which is sometimes incorrectly
		-- used instead of &quot;3+1/2&quot; (and which should not be interpreted as &quot;3 to &quot;).
		-- Unpacked items are inserted into the parms table.
		-- The tail recursion allows combinations like &quot;1x2 to 3x4&quot;.
		local valstr = strip(parms[i])  -- trim so any '-' as a negative sign will be at start
		local success, result = extract_number(parms, valstr, i &gt; 1)
		if not success and valstr and i &lt; 20 then  -- check i to limit abuse
			local lhs, sep, rhs = valstr:match('^(%S+)%s+(%S+)%s+(%S.*)')
			if lhs and not (sep == '-' and rhs:match('/')) then
				if sep:find('%d') then
					return success, result  -- to reject {{convert|1 234 567|m}} with a decent message (en only)
				end
				parms[i] = rhs
				table.insert(parms, i, sep)
				table.insert(parms, i, lhs)
				return extractor(i)
			end
			if not valstr:match('%-.*/') then
				for _, sep in ipairs(text_code.ranges.words) do
					local start, stop = valstr:find(sep, 2, true)  -- start at 2 to skip any negative sign for range '-'
					if start then
						parms[i] = valstr:sub(stop + 1)
						table.insert(parms, i, sep)
						table.insert(parms, i, valstr:sub(1, start - 1))
						return extractor(i)
					end
				end
			end
		end
		return success, result
	end
	local i = 1
	local is_change
	while true do
		local success, info = extractor(i)  -- need to set parms.opt_nocomma before calling this
		if not success then return false, info end
		i = i + 1
		if is_change then
			info.is_change = true  -- value is after &quot;&quot; and so is a change (significant for range like {{convert|5||5|C}})
			is_change = nil
		end
		valinfo:add(info)
		local range_item = get_range(strip(parms[i]))
		if not range_item then
			break
		end
		i = i + 1
		range:add(range_item)
		if type(range_item) == 'table' then
			-- For range &quot;x&quot;, if append unit to some values, append it to all.
			parms.in_range_x = parms.in_range_x or range_item.in_range_x
			parms.out_range_x = parms.out_range_x or range_item.out_range_x
			parms.abbr_range_x = parms.abbr_range_x or range_item.abbr_range_x
			is_change = range_item.is_range_change
		end
	end
	if range.n &gt; 0 then
		if range.n &gt; 30 then  -- limit abuse, although 4 is a more likely upper limit
			return false, { 'cvt_invalid_num' }  -- misleading message but it will do
		end
		parms.range = range
	elseif had_nocomma then
		return false, { 'cvt_unknown', parm2 }
	end
	return true, valinfo, i
end

local function simple_get_values(parms)
	-- If input is like &quot;{{convert|valid_value|valid_unit|...}}&quot;,
	-- return true, i, in_unit, in_unit_table
	-- i = index in parms of what follows valid_unit, if anything.
	-- The valid_value is not negative and does not use a fraction, and
	-- no options requiring further processing of the input are used.
	-- Otherwise, return nothing or return false, parm1 for caller to interpret.
	-- Testing shows this function is successful for 96% of converts in articles,
	-- and that on average it speeds up converts by 8%.
	if parms.opt_ri or parms.opt_spell_in then return end
	local clean = to_en(strip(parms[1] or ''), parms)
	if #clean &gt; 10 or not clean:match('^[0-9.]+$') then
		return false, clean
	end
	local value = tonumber(clean)
	if not value then return end
	local info = {
		value = value,
		altvalue = value,
		singular = (value == 1),
		clean = clean,
		show = with_separator(parms, clean),
	}
	local in_unit = strip(parms[2])
	local success, in_unit_table = lookup(parms, in_unit, 'no_combination')
	if not success then return end
	in_unit_table.valinfo = { info }
	return true, 3, in_unit, in_unit_table
end

local function wikidata_call(parms, operation, ...)
	-- Return true, s where s is the result of a Wikidata operation,
	-- or return false, t where t is an error message table.
	local function worker(...)
		wikidata_code = wikidata_code or require(wikidata_module)
		wikidata_data = wikidata_data or mw.loadData(wikidata_data_module)
		return wikidata_code[operation](wikidata_data, ...)
	end
	local success, status, result = pcall(worker, ...)
	if success then
		return status, result
	end
	if parms.opt_sortable_debug then
		-- Use debug=yes to crash if an error while accessing Wikidata.
		error('Error accessing Wikidata: ' .. status, 0)
	end
	return false, { 'cvt_wd_fail' }
end

local function get_parms(parms, args)
	-- If successful, update parms and return true, unit where
	--   parms is a table of all arguments passed to the template
	--        converted to named arguments, and
	--   unit is the input unit table;
	-- or return false, t where t is an error message table.
	-- For special processing (not a convert), can also return
	-- true, wikitext where wikitext is the final result.
	-- The returned input unit table may be for a fake unit using the specified
	-- unit code as the symbol and name, and with bad_mcode = message code table.
	-- MediaWiki removes leading and trailing whitespace from the values of
	-- named arguments. However, the values of numbered arguments include any
	-- whitespace entered in the template, and whitespace is used by some
	-- parameters (example: the numbered parameters associated with &quot;disp=x&quot;).
	local kv_pairs = {}  -- table of input key:value pairs where key is a name; needed because cannot iterate parms and add new fields to it
	for k, v in pairs(args) do
		if type(k) == 'number' or k == 'test' then  -- parameter &quot;test&quot; is reserved for testing and is not translated
			parms[k] = v
		else
			kv_pairs[k] = v
		end
	end
	if parms.test == 'wikidata' then
		local ulookup = function (ucode)
			-- Use empty table for parms so it does not accumulate results when used repeatedly.
			return lookup({}, ucode, 'no_combination')
		end
		return wikidata_call(parms, '_listunits', ulookup)
	end
	local success, msg = translate_parms(parms, kv_pairs)
	if not success then return false, msg end
	if parms.input then
		success, msg = wikidata_call(parms, '_adjustparameters', parms, 1)
		if not success then return false, msg end
	end
	local success, i, in_unit, in_unit_table = simple_get_values(parms)
	if not success then
		if type(i) == 'string' and i:match('^NNN+$') then
			-- Some infoboxes have examples like {{convert|NNN|m}} (3 or more &quot;N&quot;).
			-- Output an empty string for these.
			return false, { 'cvt_no_output' }
		end
		local valinfo
		success, valinfo, i = get_values(parms)
		if not success then return false, valinfo end
		in_unit = strip(parms[i])
		i = i + 1
		success, in_unit_table = lookup(parms, in_unit, 'no_combination')
		if not success then
			in_unit = in_unit or ''
			if parms.opt_ignore_error then  -- display given unit code with no error (for use with {{val}})
				in_unit_table = ''  -- suppress error message and prevent processing of output unit
			end
			in_unit_table = setmetatable({
				symbol = in_unit, name2 = in_unit, utype = in_unit,
				scale = 1, default = '', defkey = '', linkey = '',
				bad_mcode = in_unit_table }, unit_mt)
		end
		in_unit_table.valinfo = valinfo
	end
	if parms.test == 'msg' then
		-- Am testing the messages produced when no output unit is specified, and
		-- the input unit has a missing or invalid default.
		-- Set two units for testing that.
		-- LATER: Remove this code.
		if in_unit == 'chain' then
			in_unit_table.default = nil  -- no default
		elseif in_unit == 'rd' then
			in_unit_table.default  = &quot;ft!X!m&quot;  -- an invalid expression
		end
	end
	in_unit_table.inout = 'in'  -- this is an input unit
	if not parms.range then
		local success, inext, composite_unit = get_composite(parms, i, in_unit_table)
		if not success then return false, inext end
		if composite_unit then
			in_unit_table = composite_unit
			i = inext
		end
	end
	if in_unit_table.builtin == 'mach' then
		-- As with old template, a number following Mach as the input unit is the altitude,
		-- and there is no way to specify an altitude for the output unit.
		-- Could put more code in this function to get any output unit and check for
		-- an altitude following that unit.
		local success, info = extract_number(parms, parms[i], false, true)
		if success then
			i = i + 1
			in_unit_table.altitude = info.value
		end
	end
	local word = strip(parms[i])
	i = i + 1
	local precision, is_bad_precision
	local function set_precision(text)
		local number, is_integer = get_number(text)
		if number then
			if is_integer then
				precision = number
			else
				precision = text
				is_bad_precision = true
			end
			return true  -- text was used for precision, good or bad
		end
	end
	if word and not set_precision(word) then
		parms.out_unit = parms.out_unit or word
		if set_precision(strip(parms[i])) then
			i = i + 1
		end
	end
	if parms.opt_adj_mid then
		word = parms[i]
		i = i + 1
		if word then  -- mid-text words
			if word:sub(1, 1) == '-' then
				parms.mid = word
			else
				parms.mid = ' ' .. word
			end
		end
	end
	if parms.opt_one_preunit then
		parms[parms.opt_flip and 'preunit2' or 'preunit1'] = preunits(1, parms[i])
		i = i + 1
	end
	if parms.disp == 'x' then
		-- Following is reasonably compatible with the old template.
		local first = parms[i] or ''
		local second = parms[i+1] or ''
		i = i + 2
		if strip(first) == '' then  -- user can enter '&amp;#32;' rather than ' ' to avoid the default
			first = ' [&amp;nbsp;' .. first
			second = '&amp;nbsp;]' .. second
		end
		parms.joins = { first, second }
	elseif parms.opt_two_preunits then
		local p1, p2 = preunits(2, parms[i], parms[i+1])
		i = i + 2
		if parms.preunit1 then
			-- To simplify documentation, allow unlikely use of adj=pre with disp=preunit
			-- (however, an output unit must be specified with adj=pre and with disp=preunit).
			parms.preunit1 = parms.preunit1 .. p1
			parms.preunit2 = p2
		else
			parms.preunit1, parms.preunit2 = p1, p2
		end
	end
	if precision == nil then
		if set_precision(strip(parms[i])) then
			i = i + 1
		end
	end
	if is_bad_precision then
		add_warning(parms, 1, 'cvt_bad_prec', precision)
	else
		parms.precision = precision
	end
	return true, in_unit_table
end

local function record_default_precision(parms, out_current, precision)
	-- If necessary, adjust parameters and return a possibly adjusted precision.
	-- When converting a range of values where a default precision is required,
	-- that default is calculated for each value because the result sometimes
	-- depends on the precise input and output values. This function may cause
	-- the entire convert process to be repeated in order to ensure that the
	-- same default precision is used for each individual convert.
	-- If that were not done, a range like 1000 to 1000.4 may give poor results
	-- because the first output could be heavily rounded, while the second is not.
	-- For range 1000.4 to 1000, this function can give the second convert the
	-- same default precision that was used for the first.
	if not parms.opt_round_each then
		local maxdef = out_current.max_default_precision
		if maxdef then
			if maxdef &lt; precision then
				parms.do_convert_again = true
				out_current.max_default_precision = precision
			else
				precision = out_current.max_default_precision
			end
		else
			out_current.max_default_precision = precision
		end
	end
	return precision
end

local function default_precision(parms, invalue, inclean, denominator, outvalue, in_current, out_current, extra)
	-- Return a default value for precision (an integer like 2, 0, -2).
	-- If denominator is not nil, it is the value of the denominator in inclean.
	-- Code follows procedures used in old template.
	local fudge = 1e-14  -- {{Order of magnitude}} adds this, so we do too
	local prec, minprec, adjust
	local subunit_ignore_trailing_zero
	local subunit_more_precision  -- kludge for &quot;in&quot; used in input like &quot;|2|ft|6|in&quot;
	local composite = in_current.composite
	if composite then
		subunit_ignore_trailing_zero = true  -- input &quot;|2|st|10|lb&quot; has precision 0, not -1
		if composite[#composite].exception == 'subunit_more_precision' then
			subunit_more_precision = true  -- do not use standard precision with input like &quot;|2|ft|6|in&quot;
		end
	end
	if denominator and denominator &gt; 0 then
		prec = math.max(log10(denominator), 1)
	else
		-- Count digits after decimal mark, handling cases like '12.345e6'.
		local exponent
		local integer, dot, decimals, expstr = inclean:match('^(%d*)(%.?)(%d*)(.*)')
		local e = expstr:sub(1, 1)
		if e == 'e' or e == 'E' then
			exponent = tonumber(expstr:sub(2))
		end
		if dot == '' then
			prec = subunit_ignore_trailing_zero and 0 or -integer:match('0*$'):len()
		else
			prec = #decimals
		end
		if exponent then
			-- So '1230' and '1.23e3' both give prec = -1, and '0.00123' and '1.23e-3' give 5.
			prec = prec - exponent
		end
	end
	if in_current.istemperature and out_current.istemperature then
		-- Converting between common temperatures (C, F, R, K); not keVT.
		-- Kelvin value can be almost zero, or small but negative due to precision problems.
		-- Also, an input value like -300 C (below absolute zero) gives negative kelvins.
		-- Calculate minimum precision from absolute value.
		adjust = 0
		local kelvin = abs((invalue - in_current.offset) * in_current.scale)
		if kelvin &lt; 1e-8 then  -- assume nonzero due to input or calculation precision problem
			minprec = 2
		else
			minprec = 2 - floor(log10(kelvin) + fudge)  -- 3 sigfigs in kelvin
		end
	else
		if invalue == 0 or outvalue &lt;= 0 then
			-- We are never called with a negative outvalue, but it might be zero.
			-- This is special-cased to avoid calculation exceptions.
			return record_default_precision(parms, out_current, 0)
		end
		if out_current.exception == 'integer_more_precision' and floor(invalue) == invalue then
			-- With certain output units that sometimes give poor results
			-- with default rounding, use more precision when the input
			-- value is equal to an integer. An example of a poor result
			-- is when input 50 gives a smaller output than input 49.5.
			-- Experiment shows this helps, but it does not eliminate all
			-- surprises because it is not clear whether &quot;50&quot; should be
			-- interpreted as &quot;from 45 to 55&quot; or &quot;from 49.5 to 50.5&quot;.
			adjust = -log10(in_current.scale)
		elseif subunit_more_precision then
			-- Conversion like &quot;{{convert|6|ft|1|in|cm}}&quot; (where subunit is &quot;in&quot;)
			-- has a non-standard adjust value, to give more output precision.
			adjust = log10(out_current.scale) + 2
		else
			adjust = log10(abs(invalue / outvalue))
		end
		adjust = adjust + log10(2)
		-- Ensure that the output has at least two significant figures.
		minprec = 1 - floor(log10(outvalue) + fudge)
	end
	if extra then
		adjust = extra.adjust or adjust
		minprec = extra.minprec or minprec
	end
	return record_default_precision(parms, out_current, math.max(floor(prec + adjust), minprec))
end

local function convert(parms, invalue, info, in_current, out_current)
	-- Convert given input value from one unit to another.
	-- Return output_value (a number) if a simple convert, or
	-- return f, t where
	--   f = true, t = table of information with results, or
	--   f = false, t = error message table.
	local inscale = in_current.scale
	local outscale = out_current.scale
	if not in_current.iscomplex and not out_current.iscomplex then
		return invalue * (inscale / outscale)  -- minimize overhead for most common case
	end
	if in_current.invert or out_current.invert then
		-- Inverted units, such as inverse length, inverse time, or
		-- fuel efficiency. Built-in units do not have invert set.
		if (in_current.invert or 1) * (out_current.invert or 1) &lt; 0 then
			return 1 / (invalue * inscale * outscale)
		end
		return invalue * (inscale / outscale)
	elseif in_current.offset then
		-- Temperature (there are no built-ins for this type of unit).
		if info.is_change then
			return invalue * (inscale / outscale)
		end
		return (invalue - in_current.offset) * (inscale / outscale) + out_current.offset
	else
		-- Built-in unit.
		local in_builtin = in_current.builtin
		local out_builtin = out_current.builtin
		if in_builtin and out_builtin then
			if in_builtin == out_builtin then
				return invalue
			end
			-- There are no cases (yet) where need to convert from one
			-- built-in unit to another, so this should never occur.
			return false, { 'cvt_bug_convert' }
		end
		if in_builtin == 'mach' or out_builtin == 'mach' then
			local adjust
			if in_builtin == 'mach' then
				inscale = speed_of_sound(in_current.altitude)
				adjust = outscale / 0.1
			else
				outscale = speed_of_sound(out_current.altitude)
				adjust = 0.1 / inscale
			end
			return true, {
				outvalue = invalue * (inscale / outscale),
				adjust = log10(adjust) + log10(2),
			}
		elseif in_builtin == 'hand' then
			-- 1 hand = 4 inches; 1.2 hands = 6 inches.
			-- Decimals of a hand are only defined for the first digit, and
			-- the first fractional digit should be a number of inches (1, 2 or 3).
			-- However, this code interprets the entire fractional part as the number
			-- of inches / 10 (so 1.75 inches would be 0.175 hands).
			-- A value like 12.3 hands is exactly 12*4 + 3 inches; base default precision on that.
			local integer, fracpart = math.modf(invalue)
			local inch_value = 4 * integer + 10 * fracpart  -- equivalent number of inches
			local factor = inscale / outscale
			if factor == 4 then
				-- Am converting to inches: show exact result, and use &quot;inches&quot; not &quot;in&quot; by default.
				if parms.abbr_org == nil then
					out_current.usename = true
				end
				local show = format('%g', abs(inch_value))  -- show and clean are unsigned
				if not show:find('e', 1, true) then
					return true, {
						invalue = inch_value,
						outvalue = inch_value,
						clean = show,
						show = show,
					}
				end
			end
			local outvalue = (integer + 2.5 * fracpart) * factor
			local fracstr = info.clean:match('%.(.*)') or ''
			local fmt
			if fracstr == '' then
				fmt = '%.0f'
			else
				fmt = '%.' .. format('%d', #fracstr - 1) .. 'f'
			end
			return true, {
				invalue = inch_value,
				clean = format(fmt, inch_value),
				outvalue = outvalue,
				minprec = 0,
			}
		end
	end
	return false, { 'cvt_bug_convert' }  -- should never occur
end

local function user_style(parms, i)
	-- Return text for a user-specified style for a table cell, or '' if none,
	-- given i = 1 (input style) or 2 (output style).
	local style = parms[(i == 1) and 'stylein' or 'styleout']
	if style then
		style = style:gsub('&quot;', '')
		if style ~= '' then
			if style:sub(-1) ~= ';' then
				style = style .. ';'
			end
			return style
		end
	end
	return ''
end

local function make_table_or_sort(parms, invalue, info, in_current, scaled_top)
	-- Set options to handle output for a table or a sort key, or both.
	-- The text sort key is based on the value resulting from converting
	-- the input to a fake base unit with scale = 1, and other properties
	-- required for a conversion derived from the input unit.
	-- For other modules, return the sort key in a hidden span element, and
	-- the scaled value used to generate the sort key.
	-- If scaled_top is set, it is the scaled value of the numerator of a per unit
	-- to be combined with this unit (the denominator) to make the sort key.
	-- Scaling only works with units that convert with a factor (not temperature).
	local sortkey, scaled_value
	if parms.opt_sortable_on then
		local base = {  -- a fake unit with enough fields for a valid convert
			scale = 1,
			invert = in_current.invert and 1,
			iscomplex = in_current.iscomplex,
			offset = in_current.offset and 0,
		}
		local outvalue, extra = convert(parms, invalue, info, in_current, base)
		if extra then
			outvalue = extra.outvalue
		end
		if in_current.istemperature then
			-- Have converted to kelvin; assume numbers close to zero have a
			-- rounding error and should be zero.
			if abs(outvalue) &lt; 1e-12 then
				outvalue = 0
			end
		end
		if scaled_top and outvalue ~= 0 then
			outvalue = scaled_top / outvalue
		end
		scaled_value = outvalue
		if not valid_number(outvalue) then
			if outvalue &lt; 0 then
				sortkey = '1000000000000000000'
			else
				sortkey = '9000000000000000000'
			end
		elseif outvalue == 0 then
			sortkey = '5000000000000000000'
		else
			local mag = floor(log10(abs(outvalue)) + 1e-14)
			local prefix
			if outvalue &gt; 0 then
				prefix = 7000 + mag
			else
				prefix = 2999 - mag
				outvalue = outvalue + 10^(mag+1)
			end
			sortkey = format('%d', prefix) .. format('%015.0f', floor(outvalue * 10^(14-mag)))
		end
	end
	local sortspan
	if sortkey and (parms.opt_sortable_debug or not parms.table_align) then
		sortspan = parms.opt_sortable_debug and
			'&lt;span style=&quot;border:1px solid;display:inline;&quot; class=&quot;sortkey&quot;&gt;' .. sortkey .. '&lt;/span&gt;' or
			'&lt;span style=&quot;display:none&quot; class=&quot;sortkey&quot;&gt;' .. sortkey .. '&lt;/span&gt;'
		parms.join_before = sortspan
	end
	if parms.table_align then
		local style = 'style=&quot;text-align:' .. parms.table_align .. ';'
		local sort = sortkey and ' data-sort-value=&quot;' .. sortkey .. '&quot;' or ''
		local joins = {}
		for i = 1, 2 do
			joins[i] = (i == 1 and '' or '\n|') .. style .. user_style(parms, i) .. '&quot;' .. sort .. '|'
		end
		parms.table_joins = joins
	end
	return sortspan, scaled_value
end

local cvt_to_hand

local function cvtround(parms, info, in_current, out_current)
	-- Return true, t where t is a table with the conversion results; fields:
	--   show = rounded, formatted string with the result of converting value in info,
	--      using the rounding specified in parms.
	--   singular = true if result (after rounding and ignoring any negative sign)
	--      is &quot;1&quot;, or like &quot;1.00&quot;, or is a fraction with value &lt; 1;
	--   (and more fields shown below, and a calculated 'absvalue' field).
	-- or return false, t where t is an error message table.
	-- Input info.clean uses en digits (it has been translated, if necessary).
	-- Output show uses en or non-en digits as appropriate, or can be spelled.
	if out_current.builtin == 'hand' then
		return cvt_to_hand(parms, info, in_current, out_current)
	end
	local invalue = in_current.builtin == 'hand' and info.altvalue or info.value
	local outvalue, extra = convert(parms, invalue, info, in_current, out_current)
	if parms.need_table_or_sort then
		parms.need_table_or_sort = nil  -- process using first input value only
		make_table_or_sort(parms, invalue, info, in_current)
	end
	if extra then
		if not outvalue then return false, extra end
		invalue = extra.invalue or invalue
		outvalue = extra.outvalue
	end
	if not valid_number(outvalue) then
		return false, { 'cvt_invalid_num' }
	end
	local isnegative
	if outvalue &lt; 0 then
		isnegative = true
		outvalue = -outvalue
	end
	local precision, show, exponent
	local denominator = out_current.frac
	if denominator then
		show = fraction_table(outvalue, denominator)
	else
		precision = parms.precision
		if not precision then
			if parms.sigfig then
				show, exponent = make_sigfig(outvalue, parms.sigfig)
			elseif parms.opt_round then
				local n = parms.opt_round
				if n == 0.5 then
					local integer, fracpart = math.modf(floor(2 * outvalue + 0.5) / 2)
					if fracpart == 0 then
						show = format('%.0f', integer)
					else
						show = format('%.1f', integer + fracpart)
					end
				else
					show = format('%.0f', floor((outvalue / n) + 0.5) * n)
				end
			else
				local inclean = info.clean
				if extra then
					inclean = extra.clean or inclean
					show = extra.show
				end
				if not show then
					precision = default_precision(parms, invalue, inclean, info.denominator, outvalue, in_current, out_current, extra)
				end
			end
		end
	end
	if precision then
		if precision &gt;= 0 then
			local fudge
			if precision &lt;= 8 then
				-- Add a fudge to handle common cases of bad rounding due to inability
				-- to precisely represent some values. This makes the following work:
				-- {{convert|-100.1|C|K}} and {{convert|5555000|um|m|2}}.
				-- Old template uses #expr round, which invokes PHP round().
				-- LATER: Investigate how PHP round() works.
				fudge = 2e-14
			else
				fudge = 0
			end
			local fmt = '%.' .. format('%d', precision) .. 'f'
			local success
			success, show = pcall(format, fmt, outvalue + fudge)
			if not success then
				return false, { 'cvt_big_prec', tostring(precision) }
			end
		else
			precision = -precision  -- #digits to zero (in addition to any digits after dot)
			local shift = 10 ^ precision
			show = format('%.0f', outvalue/shift)
			if show ~= '0' then
				exponent = #show + precision
			end
		end
	end
	local t = format_number(parms, show, exponent, isnegative)
	if type(show) == 'string' then
		-- Set singular using match because on some systems 0.99999999999999999 is 1.0.
		if exponent then
			t.singular = (exponent == 1 and show:match('^10*$'))
		else
			t.singular = (show == '1' or show:match('^1%.0*$'))
		end
	else
		t.fraction_table = show
		t.singular = (outvalue &lt;= 1)  -- cannot have 'fraction == 1', but if it were possible it would be singular
	end
	t.raw_absvalue = outvalue  -- absolute value before rounding
	return true, setmetatable(t, {
		__index = function (self, key)
			if key == 'absvalue' then
				-- Calculate absolute value after rounding, if needed.
				local clean, exponent = rawget(self, 'clean'), rawget(self, 'exponent')
				local value = tonumber(clean)  -- absolute value (any negative sign has been ignored)
				if exponent then
					value = value * 10^exponent
				end
				rawset(self, key, value)
				return value
			end
		end })
end

function cvt_to_hand(parms, info, in_current, out_current)
	-- Convert input to hands, inches.
	-- Return true, t where t is a table with the conversion results;
	-- or return false, t where t is an error message table.
	if parms.abbr_org == nil then
		out_current.usename = true  -- default is to show name not symbol
	end
	local precision = parms.precision
	local frac = out_current.frac
	if not frac and precision and precision &gt; 1 then
		frac = (precision == 2) and 2 or 4
	end
	local out_next = out_current.out_next
	if out_next then
		-- Use magic knowledge to determine whether the next unit is inches without requiring i18n.
		-- The following ensures that when the output combination &quot;hand in&quot; is used, the inches
		-- value is rounded to match the hands value. Also, displaying say &quot;61&quot; instead of 61.5
		-- is better as 61.5 implies the value is not 61.4.
		if out_next.exception == 'subunit_more_precision' then
			out_next.frac = frac
		end
	end
	-- Convert to inches; calculate hands from that.
	local dummy_unit_table = { scale = out_current.scale / 4, frac = frac }
	local success, outinfo = cvtround(parms, info, in_current, dummy_unit_table)
	if not success then return false, outinfo end
	local tfrac = outinfo.fraction_table
	local inches = outinfo.raw_absvalue
	if tfrac then
		inches = floor(inches)  -- integer part only; fraction added later
	else
		inches = floor(inches + 0.5)  -- a hands measurement never shows decimals of an inch
	end
	local hands, inches = divide(inches, 4)
	outinfo.absvalue = hands + inches/4  -- supposed to be the absolute rounded value, but this is close enough
	local inchstr = tostring(inches)  -- '0', '1', '2' or '3'
	if precision and precision &lt;= 0 then  -- using negative or 0 for precision rounds to nearest hand
		hands = floor(outinfo.raw_absvalue/4 + 0.5)
		inchstr = ''
	elseif tfrac then
		-- Always show an integer before fraction (like &quot;15.0&quot;) because &quot;15&quot; means 15-and-a-half hands.
		inchstr = numdot .. format_fraction(parms, 'out', false, inchstr, tfrac.numstr, tfrac.denstr)
	else
		inchstr = numdot .. from_en(inchstr)
	end
	outinfo.show = outinfo.sign .. with_separator(parms, format('%.0f', hands)) .. inchstr
	return true, outinfo
end

local function evaluate_condition(value, condition)
	-- Return true or false from applying a conditional expression to value,
	-- or throw an error if invalid.
	-- A very limited set of expressions is supported:
	--    v &lt; 9
	--    v * 9 &lt; 9
	-- where
	--    'v' is replaced with value
	--    9 is any number (as defined by Lua tonumber)
	--      only en digits are accepted
	--    '&lt;' can also be '&lt;=' or '&gt;' or '&gt;='
	-- In addition, the following form is supported:
	--    LHS and RHS
	-- where
	--    LHS, RHS = any of above expressions.
	local function compare(value, text)
		local arithop, factor, compop, limit = text:match('^%s*v%s*([*]?)(.-)([&lt;&gt;]=?)(.*)$')
		if arithop == nil then
			error('Invalid default expression', 0)
		elseif arithop == '*' then
			factor = tonumber(factor)
			if factor == nil then
				error('Invalid default expression', 0)
			end
			value = value * factor
		end
		limit = tonumber(limit)
		if limit == nil then
			error('Invalid default expression', 0)
		end
		if compop == '&lt;' then
			return value &lt; limit
		elseif compop == '&lt;=' then
			return value &lt;= limit
		elseif compop == '&gt;' then
			return value &gt; limit
		elseif compop == '&gt;=' then
			return value &gt;= limit
		end
		error('Invalid default expression', 0)  -- should not occur
	end
	local lhs, rhs = condition:match('^(.-%W)and(%W.*)')
	if lhs == nil then
		return compare(value, condition)
	end
	return compare(value, lhs) and compare(value, rhs)
end

local function get_default(value, unit_table)
	-- Return true, s where s = name of unit's default output unit,
	-- or return false, t where t is an error message table.
	-- Some units have a default that depends on the input value
	-- (the first value if a range of values is used).
	-- If '!' is in the default, the first bang-delimited field is an
	-- expression that uses 'v' to represent the input value.
	-- Example: 'v &lt; 120 ! small ! big ! suffix' (suffix is optional)
	-- evaluates 'v &lt; 120' as a boolean with result
	-- 'smallsuffix' if (value &lt; 120), or 'bigsuffix' otherwise.
	-- Input must use en digits and '.' decimal mark.
	local default = data_code.default_exceptions[unit_table.defkey or unit_table.symbol] or unit_table.default
	if not default then
		local per = unit_table.per
		if per then
			local function a_default(v, u)
				local success, ucode = get_default(v, u)
				if not success then
					return '?'  -- an unlikely error has occurred; will cause lookup of default to fail
				end
				-- Attempt to use only the first unit if a combination or output multiple.
				-- This is not bulletproof but should work for most cases.
				-- Where it does not work, the convert will need to specify the wanted output unit.
				local t = all_units[ucode]
				if t then
					local combo = t.combination
					if combo then
						-- For a multiple like ftin, the &quot;first&quot; unit (ft) is last in the combination.
						local i = t.multiple and table_len(combo) or 1
						ucode = combo[i]
					end
				else
					-- Try for an automatically generated combination.
					local item = ucode:match('^(.-)%+') or ucode:match('^(%S+)%s')
					if all_units[item] then
						return item
					end
				end
				return ucode
			end
			local unit1, unit2 = per[1], per[2]
			local def1 = (unit1 and a_default(value, unit1) or unit_table.vprefix or '')
			local def2 = a_default(1, unit2)  -- 1 because per unit of denominator
			return true, def1 .. '/' .. def2
		end
		return false, { 'cvt_no_default', unit_table.symbol }
	end
	if default:find('!', 1, true) == nil then
		return true, default
	end
	local t = split(default, '!')
	if #t == 3 or #t == 4 then
		local success, result = pcall(evaluate_condition, value, t[1])
		if success then
			default = result and t[2] or t[3]
			if #t == 4 then
				default = default .. t[4]
			end
			return true, default
		end
	end
	return false, { 'cvt_bad_default', unit_table.symbol }
end

local linked_pages  -- to record linked pages so will not link to the same page more than once

local function unlink(unit_table)
	-- Forget that the given unit has previously been linked (if it has).
	-- That is needed when processing a range of inputs or outputs when an id
	-- for the first range value may have been evaluated, but only an id for
	-- the last value is displayed, and that id may need to be linked.
	linked_pages[unit_table.unitcode or unit_table] = nil
end

local function make_link(link, id, unit_table)
	-- Return wikilink &quot;[[link|id]]&quot;, possibly abbreviated as in examples:
	--   [[Mile|mile]]  --&gt; [[mile]]
	--   [[Mile|miles]] --&gt; [[mile]]s
	-- However, just id is returned if:
	-- * no link given (so caller does not need to check if a link was defined); or
	-- * link has previously been used during the current convert (to avoid overlinking).
	local link_key
	if unit_table then
		link_key = unit_table.unitcode or unit_table
	else
		link_key = link
	end
	if not link or link == '' or linked_pages[link_key] then
		return id
	end
	linked_pages[link_key] = true
	-- Following only works for language en, but it should be safe on other wikis,
	-- and overhead of doing it generally does not seem worthwhile.
	local l = link:sub(1, 1):lower() .. link:sub(2)
	if link == id or l == id then
		return '[[' .. id .. ']]'
	elseif link .. 's' == id or l .. 's' == id then
		return '[[' .. id:sub(1, -2) .. ']]s'
	else
		return '[[' .. link .. '|' .. id .. ']]'
	end
end

local function variable_name(clean, unit_table)
	-- For slwiki, a unit name depends on the value.
	-- Parameter clean is the unsigned rounded value in en digits, as a string.
	-- Value             Source    Example for &quot;m&quot;
	-- integer 1:        name1     meter  (also is the name of the unit)
	-- integer 2:        var{1}    metra
	-- integer 3 and 4:  var{2}    metri
	-- integer else:     var{3}    metrov (0 and 5 or more)
	-- real/fraction:    var{4}    metra
	-- var{i} means the i'th field in unit_table.varname if it exists and has
	-- an i'th field, otherwise name2.
	-- Fields are separated with &quot;!&quot; and are not empty.
	-- A field for a unit using an SI prefix has the prefix name inserted,
	-- replacing '#' if found, or before the field otherwise.
	local vname
	if clean == '1' then
		vname = unit_table.name1
	elseif unit_table.varname then
		local i
		if clean == '2' then
			i = 1
		elseif clean == '3' or clean == '4' then
			i = 2
		elseif clean:find('.', 1, true) then
			i = 4
		else
			i = 3
		end
		if i &gt; 1 and varname == 'pl' then
			i = i - 1
		end
		vname = split(unit_table.varname, '!')[i]
	end
	if vname then
		local si_name = rawget(unit_table, 'si_name') or ''
		local pos = vname:find('#', 1, true)
		if pos then
			vname = vname:sub(1, pos - 1) .. si_name .. vname:sub(pos + 1)
		else
			vname = si_name .. vname
		end
		return vname
	end
	return unit_table.name2
end

local function linked_id(parms, unit_table, key_id, want_link, clean)
	-- Return final unit id (symbol or name), optionally with a wikilink,
	-- and update unit_table.sep if required.
	-- key_id is one of: 'symbol', 'sym_us', 'name1', 'name1_us', 'name2', 'name2_us'.
	local abbr_on = (key_id == 'symbol' or key_id == 'sym_us')
	if abbr_on and want_link then
		local symlink = rawget(unit_table, 'symlink')
		if symlink then
			return symlink  -- for exceptions that have the linked symbol built-in
		end
	end
	local multiplier = rawget(unit_table, 'multiplier')
	local per = unit_table.per
	if per then
		local unit1 = per[1]  -- top unit_table, or nil
		local unit2 = per[2]  -- bottom unit_table
		if abbr_on then
			if not unit1 then
				unit_table.sep = ''  -- no separator in &quot;$2/acre&quot;
			end
			if not want_link then
				local symbol = unit_table.symbol_raw
				if symbol then
					return symbol  -- for exceptions that have the symbol built-in
				end
			end
		end
		local key_id2  -- unit2 is always singular
		if key_id == 'name2' then
			key_id2 = 'name1'
		elseif key_id == 'name2_us' then
			key_id2 = 'name1_us'
		else
			key_id2 = key_id
		end
		local result
		if abbr_on then
			result = '/'
		elseif omitsep then
			result = per_word
		elseif unit1 then
			result = ' ' .. per_word .. ' '
		else
			result = per_word .. ' '
		end
		if want_link and unit_table.link then
			if abbr_on or not varname then
				result = (unit1 and linked_id(parms, unit1, key_id, false, clean) or '') .. result .. linked_id(parms, unit2, key_id2, false, '1')
			else
				result = (unit1 and variable_name(clean, unit1) or '') .. result .. variable_name('1', unit2)
			end
			if omit_separator(result) then
				unit_table.sep = ''
			end
			return make_link(unit_table.link, result, unit_table)
		end
		if unit1 then
			result = linked_id(parms, unit1, key_id, want_link, clean) .. result
			if unit1.sep then
				unit_table.sep = unit1.sep
			end
		elseif omitsep then
			unit_table.sep = ''
		end
		return result .. linked_id(parms, unit2, key_id2, want_link, '1')
	end
	if multiplier then
		-- A multiplier (like &quot;100&quot; in &quot;100km&quot;) forces the unit to be plural.
		multiplier = from_en(multiplier)
		if not omitsep then
			multiplier = multiplier .. (abbr_on and '&amp;nbsp;' or ' ')
		end
		if not abbr_on then
			if key_id == 'name1' then
				key_id = 'name2'
			elseif key_id == 'name1_us' then
				key_id = 'name2_us'
			end
		end
	else
		multiplier = ''
	end
	local id = unit_table.fixed_name or ((varname and not abbr_on) and variable_name(clean, unit_table) or unit_table[key_id])
	if omit_separator(id) then
		unit_table.sep = ''
	end
	if want_link then
		local link = data_code.link_exceptions[unit_table.linkey or unit_table.symbol] or unit_table.link
		if link then
			local before = ''
			local i = unit_table.customary
			if i == 1 and parms.opt_sp_us then
				i = 2  -- show &quot;U.S.&quot; not &quot;US&quot;
			end
			if i == 3 and abbr_on then
				i = 4  -- abbreviate &quot;imperial&quot; to &quot;imp&quot;
			end
			local customary = text_code.customary_units[i]
			if customary then
				-- LATER: This works for language en only, but it's esoteric so ignore for now.
				local pertext
				if id:sub(1, 1) == '/' then
					-- Want unit &quot;/USgal&quot; to display as &quot;/U.S. gal&quot;, not &quot;U.S. /gal&quot;.
					pertext = '/'
					id = id:sub(2)
				elseif id:sub(1, 4) == 'per ' then
					-- Similarly want &quot;per U.S. gallon&quot;, not &quot;U.S. per gallon&quot; (but in practice this is unlikely to be used).
					pertext = 'per '
					id = id:sub(5)
				else
					pertext = ''
				end
				-- Omit any &quot;US&quot;/&quot;U.S.&quot;/&quot;imp&quot;/&quot;imperial&quot; from start of id since that will be inserted.
				local removes = (i &lt; 3) and { 'US&amp;nbsp;', 'US ', 'U.S.&amp;nbsp;', 'U.S. ' } or { 'imp&amp;nbsp;', 'imp ', 'imperial ' }
				for _, prefix in ipairs(removes) do
					local plen = #prefix
					if id:sub(1, plen) == prefix then
						id = id:sub(plen + 1)
						break
					end
				end
				before = pertext .. make_link(customary.link, customary[1]) .. ' '
			end
			id = before .. make_link(link, id, unit_table)
		end
	end
	return multiplier .. id
end

local function make_id(parms, which, unit_table)
	-- Return id, f where
	--   id = unit name or symbol, possibly modified
	--   f = true if id is a name, or false if id is a symbol
	-- using the value for index 'which', and for 'in' or 'out' (unit_table.inout).
	-- Result is '' if no symbol/name is to be used.
	-- In addition, set unit_table.sep = ' ' or '&amp;nbsp;' or ''
	-- (the separator that caller will normally insert before the id).
	if parms.opt_values then
		unit_table.sep = ''
		return ''
	end
	local inout = unit_table.inout
	local info = unit_table.valinfo[which]
	local abbr_org = parms.abbr_org
	local adjectival = parms.opt_adjectival
	local lk = parms.lk
	local want_link = (lk == 'on' or lk == inout)
	local usename = unit_table.usename
	local singular = info.singular
	local want_name
	if usename then
		want_name = true
	else
		if abbr_org == nil then
			if parms.wantname then
				want_name = true
			end
			if unit_table.usesymbol then
				want_name = false
			end
		end
		if want_name == nil then
			local abbr = parms.abbr
			if abbr == 'on' or abbr == inout or (abbr == 'mos' and inout == 'out') then
				want_name = false
			else
				want_name = true
			end
		end
	end
	local key
	if want_name then
		if lk == nil and unit_table.builtin == 'hand' then
			want_link = true
		end
		if parms.opt_use_nbsp then
			unit_table.sep = '&amp;nbsp;'
		else
			unit_table.sep = ' '
		end
		if parms.opt_singular then
			local value
			if inout == 'in' then
				value = info.value
			else
				value = info.absvalue
			end
			if value then  -- some unusual units do not always set value field
				value = abs(value)
				singular = (0 &lt; value and value &lt; 1.0001)
			end
		end
		if unit_table.engscale then
			-- engscale: so &quot;|1|e3kg&quot; gives &quot;1 thousand kilograms&quot; (plural)
			singular = false
		end
		key = (adjectival or singular) and 'name1' or 'name2'
		if parms.opt_sp_us then
			key = key .. '_us'
		end
	else
		if unit_table.builtin == 'hand' then
			if parms.opt_hand_hh then
				unit_table.symbol = 'hh'  -- LATER: might want i18n applied to this
			end
		end
		unit_table.sep = '&amp;nbsp;'
		key = parms.opt_sp_us and 'sym_us' or 'symbol'
	end
	return linked_id(parms, unit_table, key, want_link, info.clean), want_name
end

local function decorate_value(parms, unit_table, which, number_word)
	-- If needed, update unit_table so values will be shown with extra information.
	-- For consistency with the old template (but different from fmtpower),
	-- the style to display powers of 10 includes &quot;display:none&quot; to allow some
	-- browsers to copy, for example, &quot;10&quot; as &quot;10^3&quot;, rather than as &quot;103&quot;.
	local info
	local engscale = unit_table.engscale
	local prefix = unit_table.vprefix
	if engscale or prefix then
		info = unit_table.valinfo[which]
		if info.decorated then
			return  -- do not redecorate if repeating convert
		end
		info.decorated = true
		if engscale then
			local inout = unit_table.inout
			local abbr = parms.abbr
			if (abbr == 'on' or abbr == inout) and not parms.number_word then
				info.show = info.show ..
				'&lt;span style=&quot;margin-left:0.2em&quot;&gt;&lt;span style=&quot;margin-left:0.1em&quot;&gt;' ..
				from_en('10') ..
				'&lt;/span&gt;&lt;/span&gt;&lt;s style=&quot;display:none&quot;&gt;^&lt;/s&gt;&lt;sup&gt;' ..
				from_en(tostring(engscale.exponent)) .. '&lt;/sup&gt;'
			elseif number_word then
				local number_id
				local lk = parms.lk
				if lk == 'on' or lk == inout then
					number_id = make_link(engscale.link, engscale[1])
				else
					number_id = engscale[1]
				end
				-- WP:NUMERAL recommends &quot;&amp;nbsp;&quot; in values like &quot;12 million&quot;.
				info.show = info.show .. (parms.opt_adjectival and '-' or '&amp;nbsp;') .. number_id
			end
		end
		if prefix then
			info.show = prefix .. info.show
		end
	end
end

local function process_input(parms, in_current)
	-- Processing required once per conversion.
	-- Return block of text to represent input (value/unit).
	if parms.opt_output_only or parms.opt_output_number_only or parms.opt_output_unit_only then
		parms.joins = { '', '' }
		return ''
	end
	local first_unit
	local composite = in_current.composite  -- nil or table of units
	if composite then
		first_unit = composite[1]
	else
		first_unit = in_current
	end
	local id1, want_name = make_id(parms, 1, first_unit)
	local sep = first_unit.sep  -- separator between value and unit, set by make_id
	local preunit = parms.preunit1
	if preunit then
		sep = ''  -- any separator is included in preunit
	else
		preunit = ''
	end
	if parms.opt_input_unit_only then
		parms.joins = { '', '' }
		if composite then
			local parts = { id1 }
			for i, unit in ipairs(composite) do
				if i &gt; 1 then
					table.insert(parts, (make_id(parms, 1, unit)))
				end
			end
			id1 = table.concat(parts, ' ')
		end
		if want_name and parms.opt_adjectival then
			return preunit .. hyphenated(id1)
		end
		return  preunit .. id1
	end
	if parms.opt_also_symbol and not composite then
		local join1 = parms.joins[1]
		if join1 == ' (' or join1 == ' [' then
			parms.joins = { ' [' .. first_unit[parms.opt_sp_us and 'sym_us' or 'symbol'] .. ']' .. join1 , parms.joins[2] }
		end
	end
	if in_current.builtin == 'mach' and first_unit.sep ~= '' then  -- '' means omitsep with non-enwiki name
		local prefix = id1 .. '&amp;nbsp;'
		local range = parms.range
		local valinfo = first_unit.valinfo
		local result = prefix .. valinfo[1].show
		if range then
			-- For simplicity and because more not needed, handle one range item only.
			local prefix2 = make_id(parms, 2, first_unit) .. '&amp;nbsp;'
			result = range_text(range[1], want_name, parms, result, prefix2 .. valinfo[2].show, 'in')
		end
		return preunit .. result
	end
	if composite then
		-- Simplify: assume there is no range, and no decoration.
		local mid = (not parms.opt_flip) and parms.mid or ''
		local sep1 = '&amp;nbsp;'
		local sep2 = ' '
		if parms.opt_adjectival and want_name then
			sep1 = '-'
			sep2 = '-'
		end
		if omitsep and sep == '' then
			-- Testing the id of the most significant unit should be sufficient.
			sep1 = ''
			sep2 = ''
		end
		local parts = { first_unit.valinfo[1].show .. sep1 .. id1 }
		for i, unit in ipairs(composite) do
			if i &gt; 1 then
				table.insert(parts, unit.valinfo[1].show .. sep1 .. (make_id(parms, 1, unit)))
			end
		end
		return table.concat(parts, sep2) .. mid
	end
	local add_unit = (parms.abbr == 'mos') or
		parms[parms.opt_flip and 'out_range_x' or 'in_range_x'] or
		(not want_name and parms.abbr_range_x)
	local range = parms.range
	if range and not add_unit then
		unlink(first_unit)
	end
	local id = range and make_id(parms, range.n + 1, first_unit) or id1
	local extra, was_hyphenated = hyphenated_maybe(parms, want_name, sep, id, 'in')
	if was_hyphenated then
		add_unit = false
	end
	local result
	local valinfo = first_unit.valinfo
	if range then
		for i = 0, range.n do
			local number_word
			if i == range.n then
				add_unit = false
				number_word = true
			end
			decorate_value(parms, first_unit, i+1, number_word)
			local show = valinfo[i+1].show
			if add_unit then
				show = show .. first_unit.sep .. (i == 0 and id1 or make_id(parms, i+1, first_unit))
			end
			if i == 0 then
				result = show
			else
				result = range_text(range[i], want_name, parms, result, show, 'in')
			end
		end
	else
		decorate_value(parms, first_unit, 1, true)
		result = valinfo[1].show
	end
	return result .. preunit .. extra
end

local function process_one_output(parms, out_current)
	-- Processing required for each output unit.
	-- Return block of text to represent output (value/unit).
	local inout = out_current.inout  -- normally 'out' but can be 'in' for order=out
	local id1, want_name = make_id(parms, 1, out_current)
	local sep = out_current.sep  -- set by make_id
	local preunit = parms.preunit2
	if preunit then
		sep = ''  -- any separator is included in preunit
	else
		preunit = ''
	end
	if parms.opt_output_unit_only then
		if want_name and parms.opt_adjectival then
			return preunit .. hyphenated(id1)
		end
		return preunit .. id1
	end
	if out_current.builtin == 'mach' and out_current.sep ~= '' then  -- '' means omitsep with non-enwiki name
		local prefix = id1 .. '&amp;nbsp;'
		local range = parms.range
		local valinfo = out_current.valinfo
		local result = prefix .. valinfo[1].show
		if range then
			-- For simplicity and because more not needed, handle one range item only.
			result = range_text(range[1], want_name, parms, result, prefix .. valinfo[2].show, inout)
		end
		return preunit .. result
	end
	local add_unit = (parms[parms.opt_flip and 'in_range_x' or 'out_range_x'] or
		(not want_name and parms.abbr_range_x)) and
		not parms.opt_output_number_only
	local range = parms.range
	if range and not add_unit then
		unlink(out_current)
	end
	local id = range and make_id(parms, range.n + 1, out_current) or id1
	local extra, was_hyphenated = hyphenated_maybe(parms, want_name, sep, id, inout)
	if was_hyphenated then
		add_unit = false
	end
	local result
	local valinfo = out_current.valinfo
	if range then
		for i = 0, range.n do
			local number_word
			if i == range.n then
				add_unit = false
				number_word = true
			end
			decorate_value(parms, out_current, i+1, number_word)
			local show = valinfo[i+1].show
			if add_unit then
				show = show .. out_current.sep .. (i == 0 and id1 or make_id(parms, i+1, out_current))
			end
			if i == 0 then
				result = show
			else
				result = range_text(range[i], want_name, parms, result, show, inout)
			end
		end
	else
		decorate_value(parms, out_current, 1, true)
		result = valinfo[1].show
	end
	if parms.opt_output_number_only then
		return result
	end
	return result .. preunit .. extra
end

local function make_output_single(parms, in_unit_table, out_unit_table)
	-- Return true, item where item = wikitext of the conversion result
	-- for a single output (which is not a combination or a multiple);
	-- or return false, t where t is an error message table.
	if parms.opt_order_out and in_unit_table.unitcode == out_unit_table.unitcode then
		out_unit_table.valinfo = in_unit_table.valinfo
	else
		out_unit_table.valinfo = collection()
		for _, v in ipairs(in_unit_table.valinfo) do
			local success, info = cvtround(parms, v, in_unit_table, out_unit_table)
			if not success then return false, info end
			out_unit_table.valinfo:add(info)
		end
	end
	return true, process_one_output(parms, out_unit_table)
end

local function make_output_multiple(parms, in_unit_table, out_unit_table)
	-- Return true, item where item = wikitext of the conversion result
	-- for an output which is a multiple (like 'ftin');
	-- or return false, t where t is an error message table.
	local inout = out_unit_table.inout  -- normally 'out' but can be 'in' for order=out
	local multiple = out_unit_table.multiple  -- table of scaling factors (will not be nil)
	local combos = out_unit_table.combination  -- table of unit tables (will not be nil)
	local abbr = parms.abbr
	local abbr_org = parms.abbr_org
	local disp = parms.disp
	local want_name = (abbr_org == nil and (disp == 'or' or disp == 'slash')) or
						not (abbr == 'on' or abbr == inout or abbr == 'mos')
	local want_link = (parms.lk == 'on' or parms.lk == inout)
	local mid = parms.opt_flip and parms.mid or ''
	local sep1 = '&amp;nbsp;'
	local sep2 = ' '
	if parms.opt_adjectival and want_name then
		sep1 = '-'
		sep2 = '-'
	end
	local do_spell = parms.opt_spell_out
	parms.opt_spell_out = nil  -- so the call to cvtround does not spell the value
	local function make_result(info, isfirst)
		local fmt, outvalue, sign
		local results = {}
		for i = 1, #combos do
			local tfrac, thisvalue, strforce
			local out_current = combos[i]
			out_current.inout = inout
			local scale = multiple[i]
			if i == 1 then  -- least significant unit ('in' from 'ftin')
				local decimals
				out_current.frac = out_unit_table.frac
				local success, outinfo = cvtround(parms, info, in_unit_table, out_current)
				if not success then return false, outinfo end
				if isfirst then
					out_unit_table.valinfo = { outinfo }  -- in case output value of first least significant unit is needed
				end
				sign = outinfo.sign
				tfrac = outinfo.fraction_table
				if outinfo.is_scientific then
					strforce = outinfo.show
					decimals = ''
				elseif tfrac then
					decimals = ''
				else
					local show = outinfo.show  -- number as a string in local language
					local p1, p2 = show:find(numdot, 1, true)
					decimals = p1 and show:sub(p2 + 1) or ''  -- text after numdot, if any
				end
				fmt = '%.' .. ulen(decimals) .. 'f'  -- to reproduce precision
				if decimals == '' then
					if tfrac then
						outvalue = floor(outinfo.raw_absvalue)  -- integer part only; fraction added later
					else
						outvalue = floor(outinfo.raw_absvalue + 0.5)  -- keep all integer digits of least significant unit
					end
				else
					outvalue = outinfo.absvalue
				end
			end
			if scale then
				outvalue, thisvalue = divide(outvalue, scale)
			else
				thisvalue = outvalue
			end
			local id
			if want_name then
				if varname then
					local clean
					if strforce or tfrac then
						clean = '.1'  -- dummy value to force name for floating point
					else
						clean = format(fmt, thisvalue)
					end
					id = variable_name(clean, out_current)
				else
					local key = 'name2'
					if parms.opt_adjectival then
						key = 'name1'
					elseif tfrac then
						if thisvalue == 0 then
							key = 'name1'
						end
					elseif parms.opt_singular then
						if 0 &lt; thisvalue and thisvalue &lt; 1.0001 then
							key = 'name1'
						end
					else
						if thisvalue == 1 then
							key = 'name1'
						end
					end
					id = out_current[key]
				end
			else
				id = out_current['symbol']
			end
			if i == 1 and omit_separator(id) then
				-- Testing the id of the least significant unit should be sufficient.
				sep1 = ''
				sep2 = ''
			end
			if want_link then
				local link = out_current.link
				if link then
					id = make_link(link, id, out_current)
				end
			end
			local strval
			local spell_inout = (i == #combos or outvalue == 0) and inout or ''  -- trick so the last value processed (first displayed) has uppercase, if requested
			if strforce and outvalue == 0 then
				sign = ''  -- any sign is in strforce
				strval = strforce  -- show small values in scientific notation; will only use least significant unit
			elseif tfrac then
				local wholestr = (thisvalue &gt; 0) and tostring(thisvalue) or nil
				strval = format_fraction(parms, spell_inout, false, wholestr, tfrac.numstr, tfrac.denstr, do_spell)
			else
				strval = (thisvalue == 0) and from_en('0') or with_separator(parms, format(fmt, thisvalue))
				if do_spell then
					strval = spell_number(parms, spell_inout, strval) or strval
				end
			end
			table.insert(results, strval .. sep1 .. id)
			if outvalue == 0 then
				break
			end
			fmt = '%.0f'  -- only least significant unit can have a non-integral value
		end
		local reversed, count = {}, #results
		for i = 1, count do
			reversed[i] = results[count + 1 - i]
		end
		return true, sign .. table.concat(reversed, sep2)
	end
	local valinfo = in_unit_table.valinfo
	local success, result = make_result(valinfo[1], true)
	if not success then return false, result end
	local range = parms.range
	if range then
		for i = 1, range.n do
			local success, result2 = make_result(valinfo[i+1])
			if not success then return false, result2 end
			result = range_text(range[i], want_name, parms, result, result2, inout)
		end
	end
	return true, result .. mid
end

local function process(parms, in_unit_table, out_unit_table)
	-- Return true, s, outunit where s = final wikitext result,
	-- or return false, t where t is an error message table.
	linked_pages = {}
	local success, bad_output
	local bad_input_mcode = in_unit_table.bad_mcode  -- nil if input unit is a valid convert unit
	local out_unit = parms.out_unit
	if out_unit == nil or out_unit == '' or type(out_unit) == 'function' then
		if bad_input_mcode or parms.opt_input_unit_only then
			bad_output = ''
		else
			local getdef = type(out_unit) == 'function' and out_unit or get_default
			success, out_unit = getdef(in_unit_table.valinfo[1].value, in_unit_table)
			parms.out_unit = out_unit
			if not success then
				bad_output = out_unit
			end
		end
	end
	if not bad_output and not out_unit_table then
		success, out_unit_table = lookup(parms, out_unit, 'any_combination')
		if success then
			local mismatch = check_mismatch(in_unit_table, out_unit_table)
			if mismatch then
				bad_output = mismatch
			end
		else
			bad_output = out_unit_table
		end
	end
	local lhs, rhs
	local flipped = parms.opt_flip and not bad_input_mcode
	if bad_output then
		rhs = (bad_output == '') and '' or message(parms, bad_output)
	elseif parms.opt_input_unit_only then
		rhs = ''
	else
		local combos  -- nil (for 'ft' or 'ftin'), or table of unit tables (for 'm ft')
		if not out_unit_table.multiple then  -- nil/false ('ft' or 'm ft'), or table of factors ('ftin')
			combos = out_unit_table.combination
		end
		local frac = parms.frac  -- nil or denominator of fraction for output values
		if frac then
			-- Apply fraction to the unit (if only one), or to non-SI units (if a combination),
			-- except that if a precision is also specified, the fraction only applies to
			-- the hand unit; that allows the following result:
			-- {{convert|156|cm|in hand|1|frac=2}}  156 centimetres (61.4 in; 15.1 hands)
			-- However, the following is handled elsewhere as a special case:
			-- {{convert|156|cm|hand in|1|frac=2}}  156 centimetres (15.1 hands; 61 in)
			if combos then
				local precision = parms.precision
				for _, unit in ipairs(combos) do
					if unit.builtin == 'hand' or (not precision and not unit.prefixes) then
						unit.frac = frac
					end
				end
			else
				out_unit_table.frac = frac
			end
		end
		local outputs = {}
		local imax = combos and #combos or 1  -- 1 (single unit) or number of unit tables
		if imax == 1 then
			parms.opt_order_out = nil  -- only useful with an output combination
		end
		if not flipped and not parms.opt_order_out then
			-- Process left side first so any duplicate links (from lk=on) are suppressed
			-- on right. Example: {{convert|28|e9pc|e9ly|abbr=off|lk=on}}
			lhs = process_input(parms, in_unit_table)
		end
		for i = 1, imax do
			local success, item
			local out_current = combos and combos[i] or out_unit_table
			out_current.inout = 'out'
			if i == 1 then
				if imax &gt; 1 and out_current.builtin == 'hand' then
					out_current.out_next = combos[2]  -- built-in hand can influence next unit in a combination
				end
				if parms.opt_order_out then
					out_current.inout = 'in'
				end
			end
			if out_current.multiple then
				success, item = make_output_multiple(parms, in_unit_table, out_current)
			else
				success, item = make_output_single(parms, in_unit_table, out_current)
			end
			if not success then return false, item end
			outputs[i] = item
		end
		if parms.opt_order_out then
			lhs = outputs[1]
			table.remove(outputs, 1)
		end
		local sep = parms.table_joins and parms.table_joins[2] or parms.join_between
		rhs = table.concat(outputs, sep)
	end
	if flipped or not lhs then
		local input = process_input(parms, in_unit_table)
		if flipped then
			lhs = rhs
			rhs = input
		else
			lhs = input
		end
	end
	if parms.join_before then
		lhs = parms.join_before .. lhs
	end
	local wikitext
	if bad_input_mcode then
		if bad_input_mcode == '' then
			wikitext = lhs
		else
			wikitext = lhs .. message(parms, bad_input_mcode)
		end
	elseif parms.table_joins then
		wikitext = parms.table_joins[1] .. lhs .. parms.table_joins[2] .. rhs
	else
		wikitext = lhs .. parms.joins[1] .. rhs .. parms.joins[2]
	end
	if parms.warnings and not bad_input_mcode then
		wikitext = wikitext .. parms.warnings
	end
	return true, wikitext, out_unit_table
end

local function main_convert(frame)
	-- Do convert, and if needed, do it again with higher default precision.
	local parms = { frame = frame }  -- will hold template arguments, after translation
	set_config(frame.args)
	local success, result = get_parms(parms, frame:getParent().args)
	if success then
		if type(result) ~= 'table' then
			return tostring(result)
		end
		local in_unit_table = result
		local out_unit_table
		for _ = 1, 2 do  -- use counter so cannot get stuck repeating convert
			success, result, out_unit_table = process(parms, in_unit_table, out_unit_table)
			if success and parms.do_convert_again then
				parms.do_convert_again = false
			else
				break
			end
		end
	end
	-- If input=x gives a problem, the result should be just the user input
	-- (if x is a property like P123 it has been replaced with '').
	-- An unknown input unit would display the input and an error message
	-- with success == true at this point.
	-- Also, can have success == false with a message that outputs an empty string.
	if parms.input_text then
		if success and not parms.have_problem then
			return result
		end
		local cat
		if parms.tracking then
			-- Add a tracking category using the given text as the category sort key.
			-- There is currently only one type of tracking, but in principle multiple
			-- items could be tracked, using different sort keys for convenience.
			cat = wanted_category('tracking', parms.tracking)
		end
		return parms.input_text .. (cat or '')
	end
	return success and result or message(parms, result)
end

local function _unit(unitcode, options)
	-- Helper function for Module:Val to look up a unit.
	-- Parameter unitcode must be a string to identify the wanted unit.
	-- Parameter options must be nil or a table with optional fields:
	--   value = number (for sort key; default value is 1)
	--   scaled_top = nil for a normal unit, or a number for a unit which is
	--                the denominator of a per unit (for sort key)
	--   si = { 'symbol', 'link' }
	--                (a table with two strings) to make an SI unit
	--                that will be used for the look up
	--   link = true if result should be [[linked]]
	--   sort = 'on' or 'debug' if result should include a sort key in a
	--                span element ('debug' makes the key visible)
	--   name = true for the name of the unit instead of the symbol
	--   us = true for the US spelling of the unit, if any
	-- Return nil if unitcode is not a non-empty string.
	-- Otherwise return a table with fields:
	--   text = requested symbol or name of unit, optionally linked
	--   scaled_value = input value adjusted by unit scale; used for sort key
	--   sortspan = span element with sort key like that provided by {{ntsh}},
	--     calculated from the result of converting value
	--     to a base unit with scale 1.
	--   unknown = true if the unitcode was not known
	unitcode = strip(unitcode)
	if unitcode == nil or unitcode == '' then
		return nil
	end
	set_config({})
	linked_pages = {}
	options = options or {}
	local parms = {
		abbr = options.name and 'off' or 'on',
		lk = options.link and 'on' or nil,
		opt_sp_us = options.us and true or nil,
		opt_ignore_error = true,  -- do not add pages using this function to 'what links here' for Module:Convert/extra
		opt_sortable_on = options.sort == 'on' or options.sort == 'debug',
		opt_sortable_debug = options.sort == 'debug',
	}
	if options.si then
		-- Make a dummy table of units (just one unit) for lookup to use.
		-- This makes lookup recognize any SI prefix in the unitcode.
		local symbol = options.si[1] or '?'
		parms.unittable = { [symbol] = {
			_name1 = symbol,
			_name2 = symbol,
			_symbol = symbol,
			utype = symbol,
			scale = symbol == 'g' and 0.001 or 1,
			prefixes = 1,
			default = symbol,
			link = options.si[2],
		}}
	end
	local success, unit_table = lookup(parms, unitcode, 'no_combination')
	if not success then
		unit_table = setmetatable({
			symbol = unitcode, name2 = unitcode, utype = unitcode,
			scale = 1, default = '', defkey = '', linkey = '' }, unit_mt)
	end
	local value = tonumber(options.value) or 1
	local clean = tostring(abs(value))
	local info = {
		value = value,
		altvalue = value,
		singular = (clean == '1'),
		clean = clean,
		show = clean,
	}
	unit_table.inout = 'in'
	unit_table.valinfo = { info }
	local sortspan, scaled_value
	if options.sort then
		sortspan, scaled_value = make_table_or_sort(parms, value, info, unit_table, options.scaled_top)
	end
	return {
		text = make_id(parms, 1, unit_table),
		sortspan = sortspan,
		scaled_value = scaled_value,
		unknown = not success and true or nil,
	}
end

return { convert = main_convert, _unit = _unit }</text>
      <sha1>59lqgnwzlhq9nwdy3nyki88i6bs1u05</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert/data</title>
    <ns>828</ns>
    <id>38570725</id>
    <revision>
      <id>795876381</id>
      <parentid>788386388</parentid>
      <timestamp>2017-08-17T01:39:27Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="178050">-- Conversion data used by [[Module:Convert]] which uses mw.loadData() for
-- read-only access to this module so that it is loaded only once per page.
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.
--
-- These data tables follow:
--   all_units           all properties for a unit, including default output
--   default_exceptions  exceptions for default output ('kg' and 'g' have different defaults)
--   link_exceptions     exceptions for links ('kg' and 'g' have different links)
--
-- These tables are generated by a script which reads the wikitext of a page that
-- documents the required properties of each unit; see [[:en:Module:Convert/doc]].

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local all_units = {
    [&quot;Gy&quot;] = {
	_name1   = &quot;gray&quot;,
	_symbol  = &quot;Gy&quot;,
	utype    = &quot;absorbed radiation dose&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;rad&quot;,
	link     = &quot;Gray (unit)&quot;,
    },
    [&quot;rad&quot;] = {
	_name1   = &quot;rad&quot;,
	_symbol  = &quot;rad&quot;,
	utype    = &quot;absorbed radiation dose&quot;,
	scale    = 0.01,
	prefixes = 1,
	default  = &quot;Gy&quot;,
	link     = &quot;Rad (unit)&quot;,
    },
    [&quot;cm/s2&quot;] = {
	name1    = &quot;centimetre per second squared&quot;,
	name1_us = &quot;centimeter per second squared&quot;,
	name2    = &quot;centimetres per second squared&quot;,
	name2_us = &quot;centimeters per second squared&quot;,
	symbol   = &quot;cm/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.01,
	default  = &quot;ft/s2&quot;,
	link     = &quot;Gal (unit)&quot;,
    },
    [&quot;ft/s2&quot;] = {
	name1    = &quot;foot per second squared&quot;,
	name2    = &quot;feet per second squared&quot;,
	symbol   = &quot;ft/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.3048,
	default  = &quot;m/s2&quot;,
    },
    [&quot;g0&quot;] = {
	name1    = &quot;standard gravity&quot;,
	name2    = &quot;standard gravities&quot;,
	symbol   = &quot;''g&lt;sub&gt;0&lt;/sub&gt;''&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 9.80665,
	default  = &quot;m/s2&quot;,
    },
    [&quot;km/hs&quot;] = {
	name1    = &quot;kilometre per hour per second&quot;,
	name1_us = &quot;kilometer per hour per second&quot;,
	name2    = &quot;kilometres per hour per second&quot;,
	name2_us = &quot;kilometers per hour per second&quot;,
	symbol   = &quot;km/(hs)&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mph/s&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;km/s2&quot;] = {
	name1    = &quot;kilometre per second squared&quot;,
	name1_us = &quot;kilometer per second squared&quot;,
	name2    = &quot;kilometres per second squared&quot;,
	name2_us = &quot;kilometers per second squared&quot;,
	symbol   = &quot;km/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 1000,
	default  = &quot;mph/s&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;m/s2&quot;] = {
	name1    = &quot;metre per second squared&quot;,
	name1_us = &quot;meter per second squared&quot;,
	name2    = &quot;metres per second squared&quot;,
	name2_us = &quot;meters per second squared&quot;,
	symbol   = &quot;m/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 1,
	default  = &quot;ft/s2&quot;,
    },
    [&quot;mph/s&quot;] = {
	name1    = &quot;mile per hour per second&quot;,
	name2    = &quot;miles per hour per second&quot;,
	symbol   = &quot;mph/s&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.44704,
	default  = &quot;km/hs&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;km/h/s&quot;] = {
	target   = &quot;km/hs&quot;,
    },
    [&quot;standard gravity&quot;] = {
	target   = &quot;g0&quot;,
    },
    [&quot;1000sqft&quot;] = {
	name1    = &quot;thousand square feet&quot;,
	name2    = &quot;thousand square feet&quot;,
	symbol   = &quot;1000&amp;nbsp;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 92.90304,
	default  = &quot;m2&quot;,
	link     = &quot;Square foot&quot;,
    },
    [&quot;a&quot;] = {
	_name1   = &quot;are&quot;,
	_symbol  = &quot;a&quot;,
	utype    = &quot;area&quot;,
	scale    = 100,
	prefixes = 1,
	default  = &quot;sqft&quot;,
	link     = &quot;Hectare#Are&quot;,
    },
    [&quot;acre&quot;] = {
	symbol   = &quot;acre&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 4046.8564224,
	default  = &quot;ha&quot;,
    },
    [&quot;acre-sing&quot;] = {
	target   = &quot;acre&quot;,
    },
    [&quot;arpent&quot;] = {
	symbol   = &quot;arpent&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3418.89,
	default  = &quot;ha&quot;,
    },
    [&quot;cda&quot;] = {
	name1    = &quot;cuerda&quot;,
	symbol   = &quot;cda&quot;,
	utype    = &quot;area&quot;,
	scale    = 3930.395625,
	default  = &quot;ha acre&quot;,
    },
    [&quot;daa&quot;] = {
	name1    = &quot;decare&quot;,
	symbol   = &quot;daa&quot;,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
    },
    [&quot;dunam&quot;] = {
	symbol   = &quot;dunam&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
    },
    [&quot;dunum&quot;] = {
	symbol   = &quot;dunum&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Dunam&quot;,
    },
    [&quot;ha&quot;] = {
	name1    = &quot;hectare&quot;,
	symbol   = &quot;ha&quot;,
	utype    = &quot;area&quot;,
	scale    = 10000,
	default  = &quot;acre&quot;,
    },
    [&quot;hectare&quot;] = {
	name1    = &quot;hectare&quot;,
	symbol   = &quot;ha&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 10000,
	default  = &quot;acre&quot;,
    },
    [&quot;Irish acre&quot;] = {
	name1    = &quot;Irish acre&quot;,
	symbol   = &quot;Irish&amp;nbsp;acres&quot;,
	utype    = &quot;area&quot;,
	scale    = 6555.2385024,
	default  = &quot;ha&quot;,
	link     = &quot;Acre (Irish)&quot;,
    },
    [&quot;m2&quot;] = {
	_name1   = &quot;square metre&quot;,
	_name1_us= &quot;square meter&quot;,
	_symbol  = &quot;m&lt;sup&gt;2&lt;/sup&gt;&quot;,
	prefix_position= 8,
	utype    = &quot;area&quot;,
	scale    = 1,
	prefixes = 2,
	default  = &quot;sqft&quot;,
	link     = &quot;Square metre&quot;,
    },
    [&quot;pondemaat&quot;] = {
	name1    = &quot;pondemaat&quot;,
	name2    = &quot;pondemaat&quot;,
	symbol   = &quot;pond&quot;,
	utype    = &quot;area&quot;,
	scale    = 3674.363358816,
	default  = &quot;m2&quot;,
	link     = &quot;:nl:pondemaat&quot;,
    },
    [&quot;pyeong&quot;] = {
	name2    = &quot;pyeong&quot;,
	symbol   = &quot;pyeong&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3.3057851239669422,
	default  = &quot;m2&quot;,
    },
    [&quot;rai&quot;] = {
	name2    = &quot;rai&quot;,
	symbol   = &quot;rai&quot;,
	utype    = &quot;area&quot;,
	scale    = 1600,
	default  = &quot;m2&quot;,
	link     = &quot;Rai (unit)&quot;,
    },
    [&quot;rood&quot;] = {
	symbol   = &quot;rood&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1011.7141056,
	default  = &quot;sqft sqm&quot;,
	subdivs  = { [&quot;sqperch&quot;] = { 40, default = &quot;m2&quot; } },
	link     = &quot;Rood (unit)&quot;,
    },
    [&quot;sqfoot&quot;] = {
	name1    = &quot;square foot&quot;,
	name2    = &quot;square foot&quot;,
	symbol   = &quot;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.09290304,
	default  = &quot;m2&quot;,
    },
    [&quot;sqft&quot;] = {
	name1    = &quot;square foot&quot;,
	name2    = &quot;square feet&quot;,
	symbol   = &quot;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.09290304,
	default  = &quot;m2&quot;,
    },
    [&quot;sqin&quot;] = {
	name1    = &quot;square inch&quot;,
	name2    = &quot;square inches&quot;,
	symbol   = &quot;sq&amp;nbsp;in&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.00064516,
	default  = &quot;cm2&quot;,
    },
    [&quot;sqmi&quot;] = {
	name1    = &quot;square mile&quot;,
	symbol   = &quot;sq&amp;nbsp;mi&quot;,
	utype    = &quot;area&quot;,
	scale    = 2589988.110336,
	default  = &quot;km2&quot;,
    },
    [&quot;sqnmi&quot;] = {
	name1    = &quot;square nautical mile&quot;,
	symbol   = &quot;sq&amp;nbsp;nmi&quot;,
	utype    = &quot;area&quot;,
	scale    = 3429904,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;sqperch&quot;] = {
	name2    = &quot;perches&quot;,
	symbol   = &quot;perch&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 25.29285264,
	default  = &quot;sqm&quot;,
	link     = &quot;Perch (unit)#Area&quot;,
    },
    [&quot;sqverst&quot;] = {
	symbol   = &quot;square verst&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1138062.24,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Verst&quot;,
    },
    [&quot;sqyd&quot;] = {
	name1    = &quot;square yard&quot;,
	symbol   = &quot;sq&amp;nbsp;yd&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.83612736,
	default  = &quot;m2&quot;,
    },
    [&quot;tsubo&quot;] = {
	name2    = &quot;tsubo&quot;,
	symbol   = &quot;tsubo&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3.3057851239669422,
	default  = &quot;m2&quot;,
	link     = &quot;Japanese units of measurement#Area&quot;,
    },
    [&quot;acres&quot;] = {
	target   = &quot;acre&quot;,
    },
    [&quot;are&quot;] = {
	target   = &quot;a&quot;,
    },
    [&quot;decare&quot;] = {
	target   = &quot;daa&quot;,
    },
    [&quot;foot2&quot;] = {
	target   = &quot;sqfoot&quot;,
    },
    [&quot;ft2&quot;] = {
	target   = &quot;sqft&quot;,
    },
    [&quot;in2&quot;] = {
	target   = &quot;sqin&quot;,
	symbol   = &quot;in&lt;sup&gt;2&lt;/sup&gt;&quot;,
    },
    [&quot;km&quot;] = {
	target   = &quot;km2&quot;,
    },
    [&quot;mi2&quot;] = {
	target   = &quot;sqmi&quot;,
    },
    [&quot;million acre&quot;] = {
	target   = &quot;e6acre&quot;,
    },
    [&quot;million acres&quot;] = {
	target   = &quot;e6acre&quot;,
    },
    [&quot;million hectares&quot;] = {
	target   = &quot;e6ha&quot;,
    },
    [&quot;m&quot;] = {
	target   = &quot;m2&quot;,
    },
    [&quot;nmi2&quot;] = {
	target   = &quot;sqnmi&quot;,
    },
    [&quot;pond&quot;] = {
	target   = &quot;pondemaat&quot;,
    },
    [&quot;sq arp&quot;] = {
	target   = &quot;arpent&quot;,
    },
    [&quot;sqkm&quot;] = {
	target   = &quot;km2&quot;,
    },
    [&quot;sqm&quot;] = {
	target   = &quot;m2&quot;,
    },
    [&quot;square verst&quot;] = {
	target   = &quot;sqverst&quot;,
    },
    [&quot;verst2&quot;] = {
	target   = &quot;sqverst&quot;,
    },
    [&quot;yd2&quot;] = {
	target   = &quot;sqyd&quot;,
    },
    [&quot;m2/ha&quot;] = {
	name1    = &quot;square metre per hectare&quot;,
	name1_us = &quot;square meter per hectare&quot;,
	name2    = &quot;square metres per hectare&quot;,
	name2_us = &quot;square meters per hectare&quot;,
	symbol   = &quot;m&lt;sup&gt;2&lt;/sup&gt;/ha&quot;,
	utype    = &quot;area per unit area&quot;,
	scale    = 0.0001,
	default  = &quot;sqft/acre&quot;,
	link     = &quot;Basal area&quot;,
    },
    [&quot;sqft/acre&quot;] = {
	name1    = &quot;square foot per acre&quot;,
	name2    = &quot;square feet per acre&quot;,
	symbol   = &quot;sq&amp;nbsp;ft/acre&quot;,
	utype    = &quot;area per unit area&quot;,
	scale    = 2.295684113865932e-5,
	default  = &quot;m2/ha&quot;,
    },
    [&quot;cent&quot;] = {
	name1    = &quot;cent&quot;,
	symbol   = &quot;&quot;,
	utype    = &quot;cent&quot;,
	scale    = 1,
	default  = &quot;cent&quot;,
	link     = &quot;Cent (currency)&quot;,
    },
    [&quot;&quot;] = {
	target   = &quot;cent&quot;,
    },
    [&quot;A.h&quot;] = {
	name1    = &quot;ampere-hour&quot;,
	symbol   = &quot;Ah&quot;,
	utype    = &quot;charge&quot;,
	scale    = 3600,
	default  = &quot;coulomb&quot;,
    },
    [&quot;coulomb&quot;] = {
	_name1   = &quot;coulomb&quot;,
	_symbol  = &quot;C&quot;,
	utype    = &quot;charge&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;e&quot;,
	link     = &quot;Coulomb&quot;,
    },
    [&quot;e&quot;] = {
	name1    = &quot;elementary charge&quot;,
	symbol   = &quot;''e''&quot;,
	utype    = &quot;charge&quot;,
	scale    = 1.602176487e-19,
	default  = &quot;coulomb&quot;,
    },
    [&quot;Ah&quot;] = {
	target   = &quot;A.h&quot;,
    },
    [&quot;g-mol&quot;] = {
	name1    = &quot;gram-mole&quot;,
	symbol   = &quot;g&amp;#8209;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol&quot;] = {
	name1    = &quot;gram-mole&quot;,
	symbol   = &quot;gmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol&quot;] = {
	name1    = &quot;kilomole&quot;,
	symbol   = &quot;kmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1000,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;lb-mol&quot;] = {
	name1    = &quot;pound-mole&quot;,
	symbol   = &quot;lb&amp;#8209;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 453.59237,
	default  = &quot;mol&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol&quot;] = {
	name1    = &quot;pound-mole&quot;,
	symbol   = &quot;lbmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 453.59237,
	default  = &quot;mol&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;mol&quot;] = {
	name1    = &quot;mole&quot;,
	symbol   = &quot;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kgCO2/L&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg(CO&lt;sub&gt;2&lt;/sub&gt;)/L&quot;,
	utype    = &quot;co2 per unit volume&quot;,
	scale    = 1000,
	default  = &quot;lbCO2/USgal&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lbCO2/USgal&quot;] = {
	name1    = &quot;pound per US gallon&quot;,
	name2    = &quot;pounds per US gallon&quot;,
	symbol   = &quot;lbCO2/US&amp;nbsp;gal&quot;,
	utype    = &quot;co2 per unit volume&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kgCO2/L&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;oz/lb&quot;] = {
	per      = { &quot;oz&quot;, &quot;lb&quot; },
	utype    = &quot;concentration&quot;,
	default  = &quot;mg/kg&quot;,
    },
    [&quot;mg/kg&quot;] = {
	per      = { &quot;mg&quot;, &quot;kg&quot; },
	utype    = &quot;concentration&quot;,
	default  = &quot;oz/lb&quot;,
    },
    [&quot;$/acre&quot;] = {
	per      = { &quot;$&quot;, &quot;acre&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/ha&quot;,
    },
    [&quot;$/ha&quot;] = {
	per      = { &quot;$&quot;, &quot;ha&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/acre&quot;,
    },
    [&quot;$/m2&quot;] = {
	per      = { &quot;$&quot;, &quot;m2&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/sqft&quot;,
    },
    [&quot;$/sqft&quot;] = {
	per      = { &quot;$&quot;, &quot;sqft&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/m2&quot;,
    },
    [&quot;$/km&quot;] = {
	per      = { &quot;$&quot;, &quot;km&quot; },
	utype    = &quot;cost $ per unit length&quot;,
	default  = &quot;$/mi&quot;,
    },
    [&quot;$/mi&quot;] = {
	per      = { &quot;$&quot;, &quot;mi&quot; },
	utype    = &quot;cost $ per unit length&quot;,
	default  = &quot;$/km&quot;,
    },
    [&quot;$/kg&quot;] = {
	per      = { &quot;$&quot;, &quot;kg&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/lb&quot;,
    },
    [&quot;$/g&quot;] = {
	per      = { &quot;$&quot;, &quot;g&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/lb&quot;,
    },
    [&quot;$/lb&quot;] = {
	per      = { &quot;$&quot;, &quot;lb&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/kg&quot;,
    },
    [&quot;$/oz&quot;] = {
	per      = { &quot;$&quot;, &quot;oz&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/g&quot;,
    },
    [&quot;$/ozt&quot;] = {
	per      = { &quot;$&quot;, &quot;ozt&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/kg&quot;,
    },
    [&quot;$/m3&quot;] = {
	per      = { &quot;$&quot;, &quot;m3&quot; },
	utype    = &quot;cost $ per unit volume&quot;,
	default  = &quot;$/oilbbl&quot;,
    },
    [&quot;$/oilbbl&quot;] = {
	per      = { &quot;$&quot;, &quot;oilbbl&quot; },
	utype    = &quot;cost $ per unit volume&quot;,
	default  = &quot;$/m3&quot;,
    },
    [&quot;/acre&quot;] = {
	per      = { &quot;&quot;, &quot;acre&quot; },
	utype    = &quot;cost  per unit area&quot;,
	default  = &quot;/ha&quot;,
    },
    [&quot;/ha&quot;] = {
	per      = { &quot;&quot;, &quot;ha&quot; },
	utype    = &quot;cost  per unit area&quot;,
	default  = &quot;/acre&quot;,
    },
    [&quot;g/dm3&quot;] = {
	name1    = &quot;gram per cubic decimetre&quot;,
	name1_us = &quot;gram per cubic decimeter&quot;,
	name2    = &quot;grams per cubic decimetre&quot;,
	name2_us = &quot;grams per cubic decimeter&quot;,
	symbol   = &quot;g/dm&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/L&quot;] = {
	name1    = &quot;gram per litre&quot;,
	name1_us = &quot;gram per liter&quot;,
	name2    = &quot;grams per litre&quot;,
	name2_us = &quot;grams per liter&quot;,
	symbol   = &quot;g/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/mL&quot;] = {
	name1    = &quot;gram per millilitre&quot;,
	name1_us = &quot;gram per milliliter&quot;,
	name2    = &quot;grams per millilitre&quot;,
	name2_us = &quot;grams per milliliter&quot;,
	symbol   = &quot;g/mL&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/ml&quot;] = {
	name1    = &quot;gram per millilitre&quot;,
	name1_us = &quot;gram per milliliter&quot;,
	name2    = &quot;grams per millilitre&quot;,
	name2_us = &quot;grams per milliliter&quot;,
	symbol   = &quot;g/ml&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/dm3&quot;] = {
	name1    = &quot;kilogram per cubic decimetre&quot;,
	name1_us = &quot;kilogram per cubic decimeter&quot;,
	name2    = &quot;kilograms per cubic decimetre&quot;,
	name2_us = &quot;kilograms per cubic decimeter&quot;,
	symbol   = &quot;kg/dm&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuft&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/L&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/USgal&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/l&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg/l&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/USgal&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/m3&quot;] = {
	name1    = &quot;kilogram per cubic metre&quot;,
	name1_us = &quot;kilogram per cubic meter&quot;,
	name2    = &quot;kilograms per cubic metre&quot;,
	name2_us = &quot;kilograms per cubic meter&quot;,
	symbol   = &quot;kg/m&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;lb/cuyd&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuft&quot;] = {
	name1    = &quot;pound per cubic foot&quot;,
	name2    = &quot;pounds per cubic foot&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;ft&quot;,
	utype    = &quot;density&quot;,
	scale    = 16.018463373960142,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuin&quot;] = {
	name1    = &quot;pound per cubic inch&quot;,
	name2    = &quot;pounds per cubic inch&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuyd&quot;] = {
	name1    = &quot;pound per cubic yard&quot;,
	name2    = &quot;pounds per cubic yard&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;yd&quot;,
	utype    = &quot;density&quot;,
	scale    = 0.5932764212577829,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/impgal&quot;] = {
	name1    = &quot;pound per imperial gallon&quot;,
	name2    = &quot;pounds per imperial gallon&quot;,
	symbol   = &quot;lb/imp&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 99.776372663101697,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/in3&quot;] = {
	name1    = &quot;pound per cubic inch&quot;,
	name2    = &quot;pounds per cubic inch&quot;,
	symbol   = &quot;lb/cu&amp;thinsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/U.S.gal&quot;] = {
	name1    = &quot;pound per U.S. gallon&quot;,
	name2    = &quot;pounds per U.S. gallon&quot;,
	symbol   = &quot;lb/U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/USbu&quot;] = {
	name1    = &quot;pound per US bushel&quot;,
	name2    = &quot;pounds per US bushel&quot;,
	symbol   = &quot;lb/US&amp;nbsp;bu&quot;,
	utype    = &quot;density&quot;,
	scale    = 12.871859780974471,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;lb/USgal&quot;] = {
	name1    = &quot;pound per US gallon&quot;,
	name2    = &quot;pounds per US gallon&quot;,
	symbol   = &quot;lb/US&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lbm/cuin&quot;] = {
	name1    = &quot;pound mass per cubic inch&quot;,
	name2    = &quot;pounds mass per cubic inch&quot;,
	symbol   = &quot;lbm/cu&amp;thinsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;mg/L&quot;] = {
	name1    = &quot;milligram per litre&quot;,
	name1_us = &quot;milligram per liter&quot;,
	name2    = &quot;milligrams per litre&quot;,
	name2_us = &quot;milligrams per liter&quot;,
	symbol   = &quot;mg/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 0.001,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;oz/cuin&quot;] = {
	name1    = &quot;ounce per cubic inch&quot;,
	name2    = &quot;ounces per cubic inch&quot;,
	symbol   = &quot;oz/cu&amp;nbsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 1729.9940443876951,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/cm3&quot;] = {
	per      = { &quot;g&quot;, &quot;cm3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuin&quot;,
    },
    [&quot;g/m3&quot;] = {
	per      = { &quot;g&quot;, &quot;m3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuyd&quot;,
	link     = &quot;density&quot;,
    },
    [&quot;Mg/m3&quot;] = {
	per      = { &quot;Mg&quot;, &quot;m3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuft&quot;,
    },
    [&quot;mg/l&quot;] = {
	per      = { &quot;mg&quot;, &quot;l&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;oz/cuin&quot;,
    },
    [&quot;g/dL&quot;] = {
	per      = { &quot;g&quot;, &quot;dL&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuin&quot;,
    },
    [&quot;g/l&quot;] = {
	per      = { &quot;g&quot;, &quot;l&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;oz/cuin&quot;,
    },
    [&quot;lb/ft3&quot;] = {
	target   = &quot;lb/cuft&quot;,
    },
    [&quot;lb/yd3&quot;] = {
	target   = &quot;lb/cuyd&quot;,
    },
    [&quot;lbm/in3&quot;] = {
	target   = &quot;lbm/cuin&quot;,
    },
    [&quot;mcg/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;oz/in3&quot;] = {
	target   = &quot;oz/cuin&quot;,
    },
    [&quot;ug/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;g/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;ug/l&quot;] = {
	target   = &quot;g/l&quot;,
    },
    [&quot;B.O.T.U.&quot;] = {
	name1    = &quot;Board of Trade Unit&quot;,
	symbol   = &quot;B.O.T.U.&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;bboe&quot;] = {
	name1    = &quot;barrel of oil equivalent&quot;,
	name2    = &quot;barrels of oil equivalent&quot;,
	symbol   = &quot;bboe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6117863200,
	default  = &quot;GJ&quot;,
    },
    [&quot;BOE&quot;] = {
	name1    = &quot;barrel of oil equivalent&quot;,
	name2    = &quot;barrels of oil equivalent&quot;,
	symbol   = &quot;BOE&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6117863200,
	default  = &quot;GJ&quot;,
    },
    [&quot;BTU&quot;] = {
	name1    = &quot;British thermal unit&quot;,
	symbol   = &quot;BTU&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
    },
    [&quot;Btu&quot;] = {
	name1    = &quot;British thermal unit&quot;,
	symbol   = &quot;Btu&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
    },
    [&quot;BTU-39F&quot;] = {
	name1    = &quot;British thermal unit (39F)&quot;,
	name2    = &quot;British thermal units (39F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;39F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1059.67,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-39F&quot;] = {
	name1    = &quot;British thermal unit (39F)&quot;,
	name2    = &quot;British thermal units (39F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;39F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1059.67,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-59F&quot;] = {
	name1    = &quot;British thermal unit (59F)&quot;,
	name2    = &quot;British thermal units (59F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;59F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.804,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-59F&quot;] = {
	name1    = &quot;British thermal unit (59F)&quot;,
	name2    = &quot;British thermal units (59F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;59F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.804,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-60F&quot;] = {
	name1    = &quot;British thermal unit (60F)&quot;,
	name2    = &quot;British thermal units (60F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;60F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.68,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-60F&quot;] = {
	name1    = &quot;British thermal unit (60F)&quot;,
	name2    = &quot;British thermal units (60F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;60F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.68,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-63F&quot;] = {
	name1    = &quot;British thermal unit (63F)&quot;,
	name2    = &quot;British thermal units (63F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;63F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.6,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-63F&quot;] = {
	name1    = &quot;British thermal unit (63F)&quot;,
	name2    = &quot;British thermal units (63F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;63F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.6,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-ISO&quot;] = {
	name1    = &quot;British thermal unit (ISO)&quot;,
	name2    = &quot;British thermal units (ISO)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;ISO&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.056,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-ISO&quot;] = {
	target   = &quot;BTU-ISO&quot;,
    },
    [&quot;BTU-IT&quot;] = {
	name1    = &quot;British thermal unit (IT)&quot;,
	name2    = &quot;British thermal units (IT)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-IT&quot;] = {
	name1    = &quot;British thermal unit (IT)&quot;,
	name2    = &quot;British thermal units (IT)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-mean&quot;] = {
	name1    = &quot;British thermal unit (mean)&quot;,
	name2    = &quot;British thermal units (mean)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;mean&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.87,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-mean&quot;] = {
	name1    = &quot;British thermal unit (mean)&quot;,
	name2    = &quot;British thermal units (mean)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;mean&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.87,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-th&quot;] = {
	name1    = &quot;British thermal unit (thermochemical)&quot;,
	name2    = &quot;British thermal units (thermochemical)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.35026444,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-th&quot;] = {
	name1    = &quot;British thermal unit (thermochemical)&quot;,
	name2    = &quot;British thermal units (thermochemical)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.35026444,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Cal&quot;] = {
	name1    = &quot;calorie&quot;,
	symbol   = &quot;Cal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
    },
    [&quot;cal&quot;] = {
	name1    = &quot;calorie&quot;,
	symbol   = &quot;cal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184,
	default  = &quot;J&quot;,
    },
    [&quot;Cal-15&quot;] = {
	name1    = &quot;Calorie (15C)&quot;,
	name2    = &quot;Calories (15C)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-15&quot;] = {
	name1    = &quot;calorie (15C)&quot;,
	name2    = &quot;calories (15C)&quot;,
	symbol   = &quot;cal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1858,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal-IT&quot;] = {
	name1    = &quot;Calorie (International Steam Table)&quot;,
	name2    = &quot;Calories (International Steam Table)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-IT&quot;] = {
	name1    = &quot;calorie (International Steam Table)&quot;,
	name2    = &quot;calories (International Steam Table)&quot;,
	symbol   = &quot;cal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal-th&quot;] = {
	name1    = &quot;Calorie (thermochemical)&quot;,
	name2    = &quot;Calories (thermochemical)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-th&quot;] = {
	name1    = &quot;calorie (thermochemical)&quot;,
	name2    = &quot;calories (thermochemical)&quot;,
	symbol   = &quot;cal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;ccatm&quot;] = {
	name1    = &quot;cubic centimetre-atmosphere&quot;,
	name1_us = &quot;cubic centimeter-atmosphere&quot;,
	symbol   = &quot;ccatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;CHU-IT&quot;] = {
	name1    = &quot;Celsius heat unit (International Table)&quot;,
	name2    = &quot;Celsius heat units (International Table)&quot;,
	symbol   = &quot;CHU&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1899.100534716,
	default  = &quot;kJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cm3atm&quot;] = {
	name1    = &quot;cubic centimetre-atmosphere&quot;,
	name1_us = &quot;cubic centimeter-atmosphere&quot;,
	symbol   = &quot;cm&lt;sup&gt;3&lt;/sup&gt;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cufootatm&quot;] = {
	name1    = &quot;cubic foot of atmosphere&quot;,
	name2    = &quot;cubic foot of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cufootnaturalgas&quot;] = {
	name1    = &quot;cubic foot of natural gas&quot;,
	name2    = &quot;cubic foot of natural gas&quot;,
	symbol   = &quot;cuftnaturalgas&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 1055055.85262,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cuftatm&quot;] = {
	name1    = &quot;cubic foot of atmosphere&quot;,
	name2    = &quot;cubic feet of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cuftnaturalgas&quot;] = {
	name1    = &quot;cubic foot of natural gas&quot;,
	name2    = &quot;cubic feet of natural gas&quot;,
	symbol   = &quot;cuftnaturalgas&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 1055055.85262,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cuydatm&quot;] = {
	name1    = &quot;cubic yard of atmosphere&quot;,
	name2    = &quot;cubic yards of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;yd&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 77468.5209852288,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Eh&quot;] = {
	name1    = &quot;Hartree&quot;,
	symbol   = &quot;''E''&lt;sub&gt;h&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.35974417e-18,
	default  = &quot;eV&quot;,
    },
    [&quot;erg&quot;] = {
	symbol   = &quot;erg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0000001,
	default  = &quot;J&quot;,
    },
    [&quot;eV&quot;] = {
	name1    = &quot;electronvolt&quot;,
	symbol   = &quot;eV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-19,
	default  = &quot;aJ&quot;,
    },
    [&quot;feV&quot;] = {
	name1    = &quot;femtoelectronvolt&quot;,
	symbol   = &quot;feV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-34,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;foe&quot;] = {
	symbol   = &quot;foe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1e44,
	default  = &quot;YJ&quot;,
	link     = &quot;Foe (unit)&quot;,
    },
    [&quot;ftlb&quot;] = {
	name1    = &quot;foot-pound&quot;,
	symbol   = &quot;ftlb&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftlb-f&quot;] = {
	name1    = &quot;foot-pound force&quot;,
	name2    = &quot;foot-pounds force&quot;,
	symbol   = &quot;ftlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftlbf&quot;] = {
	name1    = &quot;foot-pound force&quot;,
	name2    = &quot;foot-pounds force&quot;,
	symbol   = &quot;ftlbf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftpdl&quot;] = {
	name1    = &quot;foot-poundal&quot;,
	symbol   = &quot;ftpdl&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0421401100938048,
	default  = &quot;J&quot;,
    },
    [&quot;GeV&quot;] = {
	name1    = &quot;gigaelectronvolt&quot;,
	symbol   = &quot;GeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-10,
	default  = &quot;nJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;GLatm&quot;] = {
	name1    = &quot;gigalitre-atmosphere&quot;,
	name1_us = &quot;gigaliter-atmosphere&quot;,
	symbol   = &quot;GLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Glatm&quot;] = {
	name1    = &quot;gigalitre-atmosphere&quot;,
	name1_us = &quot;gigaliter-atmosphere&quot;,
	symbol   = &quot;Glatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;gTNT&quot;] = {
	name2    = &quot;grams of TNT&quot;,
	symbol   = &quot;gram of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;Gtoe&quot;] = {
	name1    = &quot;gigatonne of oil equivalent&quot;,
	name2    = &quot;gigatonnes of oil equivalent&quot;,
	symbol   = &quot;Gtoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e19,
	default  = &quot;EJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;GtonTNT&quot;] = {
	name2    = &quot;gigatons of TNT&quot;,
	symbol   = &quot;gigaton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e18,
	default  = &quot;EJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;GtTNT&quot;] = {
	name2    = &quot;gigatonnes of TNT&quot;,
	symbol   = &quot;gigatonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e18,
	default  = &quot;EJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;GW.h&quot;] = {
	name1    = &quot;gigawatt-hour&quot;,
	symbol   = &quot;GWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;GWh&quot;] = {
	name1    = &quot;gigawatt-hour&quot;,
	symbol   = &quot;GWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;hph&quot;] = {
	name1    = &quot;horsepower-hour&quot;,
	symbol   = &quot;hph&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2684519.537696172792,
	default  = &quot;kWh&quot;,
	link     = &quot;Horsepower&quot;,
    },
    [&quot;impgalatm&quot;] = {
	name1    = &quot;imperial gallon-atmosphere&quot;,
	symbol   = &quot;imp galatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 460.63256925,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;inlb&quot;] = {
	name1    = &quot;inch-pound&quot;,
	symbol   = &quot;inlb&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inlb-f&quot;] = {
	name1    = &quot;inch-pound force&quot;,
	name2    = &quot;inch-pounds force&quot;,
	symbol   = &quot;inlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inlbf&quot;] = {
	name1    = &quot;inch-pound force&quot;,
	name2    = &quot;inch-pounds force&quot;,
	symbol   = &quot;inlbf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inoz-f&quot;] = {
	name1    = &quot;inch-ounce force&quot;,
	name2    = &quot;inch-ounces force&quot;,
	symbol   = &quot;inoz&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.00706155181422604375,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inozf&quot;] = {
	name1    = &quot;inch-ounce force&quot;,
	name2    = &quot;inch-ounces force&quot;,
	symbol   = &quot;inozf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.00706155181422604375,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;J&quot;] = {
	_name1   = &quot;joule&quot;,
	_symbol  = &quot;J&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;cal&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kBOE&quot;] = {
	name1    = &quot;kilo barrel of oil equivalent&quot;,
	name2    = &quot;kilo barrels of oil equivalent&quot;,
	symbol   = &quot;kBOE&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6.1178632e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Barrel of oil equivalent&quot;,
    },
    [&quot;kcal&quot;] = {
	name1    = &quot;kilocalorie&quot;,
	symbol   = &quot;kcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-15&quot;] = {
	name1    = &quot;kilocalorie (15C)&quot;,
	name2    = &quot;kilocalories (15C)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-IT&quot;] = {
	name1    = &quot;kilocalorie (International Steam Table)&quot;,
	name2    = &quot;kilocalories (International Steam Table)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-th&quot;] = {
	name1    = &quot;kilocalorie (thermochemical)&quot;,
	name2    = &quot;kilocalories (thermochemical)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kerg&quot;] = {
	name1    = &quot;kiloerg&quot;,
	symbol   = &quot;kerg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0001,
	default  = &quot;mJ&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;keV&quot;] = {
	name1    = &quot;kiloelectronvolt&quot;,
	symbol   = &quot;keV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-16,
	default  = &quot;fJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;kgTNT&quot;] = {
	name2    = &quot;kilograms of TNT&quot;,
	symbol   = &quot;kilogram of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;kLatm&quot;] = {
	name1    = &quot;kilolitre-atmosphere&quot;,
	name1_us = &quot;kiloliter-atmosphere&quot;,
	symbol   = &quot;kLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;klatm&quot;] = {
	name1    = &quot;kilolitre-atmosphere&quot;,
	name1_us = &quot;kiloliter-atmosphere&quot;,
	symbol   = &quot;klatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;kt(TNT)&quot;] = {
	name1    = &quot;kilotonne&quot;,
	name1_us = &quot;kiloton&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktoe&quot;] = {
	name1    = &quot;kilotonne of oil equivalent&quot;,
	name2    = &quot;kilotonnes of oil equivalent&quot;,
	symbol   = &quot;ktoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e13,
	default  = &quot;TJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;ktonTNT&quot;] = {
	name1    = &quot;kiloton of TNT&quot;,
	name2    = &quot;kilotons of TNT&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktTNT&quot;] = {
	name2    = &quot;kilotonnes of TNT&quot;,
	symbol   = &quot;kilotonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;kW.h&quot;] = {
	name1    = &quot;kilowatt-hour&quot;,
	symbol   = &quot;kWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;kWh&quot;] = {
	name1    = &quot;kilowatt-hour&quot;,
	symbol   = &quot;kWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;Latm&quot;] = {
	name1    = &quot;litre-atmosphere&quot;,
	name1_us = &quot;liter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;latm&quot;] = {
	name1    = &quot;litre-atmosphere&quot;,
	name1_us = &quot;liter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;m3atm&quot;] = {
	name1    = &quot;cubic metre-atmosphere&quot;,
	name1_us = &quot;cubic meter-atmosphere&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Mcal&quot;] = {
	name1    = &quot;megacalorie&quot;,
	symbol   = &quot;Mcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal&quot;] = {
	name1    = &quot;millicalorie&quot;,
	symbol   = &quot;mcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.004184,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-15&quot;] = {
	name1    = &quot;megacalorie (15C)&quot;,
	name2    = &quot;megacalories (15C)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185800,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-15&quot;] = {
	name1    = &quot;millicalorie (15C)&quot;,
	name2    = &quot;millicalories (15C)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0041858,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-IT&quot;] = {
	name1    = &quot;megacalorie (International Steam Table)&quot;,
	name2    = &quot;megacalories (International Steam Table)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186800,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-IT&quot;] = {
	name1    = &quot;millicalorie (International Steam Table)&quot;,
	name2    = &quot;millicalories (International Steam Table)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0041868,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-th&quot;] = {
	name1    = &quot;megacalorie (thermochemical)&quot;,
	name2    = &quot;megacalories (thermochemical)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-th&quot;] = {
	name1    = &quot;millicalorie (thermochemical)&quot;,
	name2    = &quot;millicalories (thermochemical)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.004184,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Merg&quot;] = {
	name1    = &quot;megaerg&quot;,
	symbol   = &quot;Merg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.1,
	default  = &quot;J&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;merg&quot;] = {
	name1    = &quot;millierg&quot;,
	symbol   = &quot;merg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0000000001,
	default  = &quot;J&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;MeV&quot;] = {
	name1    = &quot;megaelectronvolt&quot;,
	symbol   = &quot;MeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-13,
	default  = &quot;pJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;meV&quot;] = {
	name1    = &quot;millielectronvolt&quot;,
	symbol   = &quot;meV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-22,
	default  = &quot;zJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;MLatm&quot;] = {
	name1    = &quot;megalitre-atmosphere&quot;,
	name1_us = &quot;megaliter-atmosphere&quot;,
	symbol   = &quot;MLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000,
	default  = &quot;MJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Mlatm&quot;] = {
	name1    = &quot;megalitre-atmosphere&quot;,
	name1_us = &quot;megaliter-atmosphere&quot;,
	symbol   = &quot;Mlatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000,
	default  = &quot;MJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;mLatm&quot;] = {
	name1    = &quot;millilitre-atmosphere&quot;,
	name1_us = &quot;milliliter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;mlatm&quot;] = {
	name1    = &quot;millilitre-atmosphere&quot;,
	name1_us = &quot;milliliter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;MMBtu&quot;] = {
	name1    = &quot;million British thermal units&quot;,
	name2    = &quot;million British thermal units&quot;,
	symbol   = &quot;MMBtu&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055055852.62,
	default  = &quot;GJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Mt(TNT)&quot;] = {
	name1    = &quot;megatonne&quot;,
	name1_us = &quot;megaton&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;Mtoe&quot;] = {
	name1    = &quot;megatonne of oil equivalent&quot;,
	name2    = &quot;megatonnes of oil equivalent&quot;,
	symbol   = &quot;Mtoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e16,
	default  = &quot;PJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;MtonTNT&quot;] = {
	name1    = &quot;megaton of TNT&quot;,
	name2    = &quot;megatons of TNT&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;mtonTNT&quot;] = {
	name2    = &quot;millitons of TNT&quot;,
	symbol   = &quot;milliton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtTNT&quot;] = {
	name2    = &quot;megatonnes of TNT&quot;,
	symbol   = &quot;megatonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;mtTNT&quot;] = {
	name2    = &quot;millitonnes of TNT&quot;,
	symbol   = &quot;millitonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MW.h&quot;] = {
	name1    = &quot;megawatt-hour&quot;,
	symbol   = &quot;MWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;mW.h&quot;] = {
	name1    = &quot;milliwatt-hour&quot;,
	symbol   = &quot;mWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6,
	default  = &quot;J&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;MWh&quot;] = {
	name1    = &quot;megawatt-hour&quot;,
	symbol   = &quot;MWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;mWh&quot;] = {
	name1    = &quot;milliwatt-hour&quot;,
	symbol   = &quot;mWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6,
	default  = &quot;J&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;neV&quot;] = {
	name1    = &quot;nanoelectronvolt&quot;,
	symbol   = &quot;neV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-28,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;PeV&quot;] = {
	name1    = &quot;petaelectronvolt&quot;,
	symbol   = &quot;PeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0001602176487,
	default  = &quot;mJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;peV&quot;] = {
	name1    = &quot;picoelectronvolt&quot;,
	symbol   = &quot;peV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-31,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;PSh&quot;] = {
	name1    = &quot;Pferdestrkenstunde&quot;,
	symbol   = &quot;PSh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2647795.5,
	default  = &quot;kWh&quot;,
    },
    [&quot;quad&quot;] = {
	name1    = &quot;quadrillion British thermal units&quot;,
	name2    = &quot;quadrillion British thermal units&quot;,
	symbol   = &quot;quad&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.054804e18,
	default  = &quot;EJ&quot;,
	link     = &quot;Quad (unit)&quot;,
    },
    [&quot;Ry&quot;] = {
	name1    = &quot;rydberg&quot;,
	symbol   = &quot;Ry&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2.1798741e-18,
	default  = &quot;eV&quot;,
	link     = &quot;Rydberg constant&quot;,
    },
    [&quot;scc&quot;] = {
	name1    = &quot;standard cubic centimetre&quot;,
	name1_us = &quot;standard cubic centimeter&quot;,
	symbol   = &quot;scc&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scf&quot;] = {
	name1    = &quot;standard cubic foot&quot;,
	name2    = &quot;standard cubic feet&quot;,
	symbol   = &quot;scf&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scfoot&quot;] = {
	name1    = &quot;standard cubic foot&quot;,
	name2    = &quot;standard cubic foot&quot;,
	symbol   = &quot;scf&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scy&quot;] = {
	name1    = &quot;standard cubic yard&quot;,
	symbol   = &quot;scy&quot;,
	utype    = &quot;energy&quot;,
	scale    = 77468.5209852288,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;sl&quot;] = {
	name1    = &quot;standard litre&quot;,
	name1_us = &quot;standard liter&quot;,
	symbol   = &quot;sl&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;t(TNT)&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TeV&quot;] = {
	name1    = &quot;teraelectronvolt&quot;,
	symbol   = &quot;TeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-7,
	default  = &quot;J&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;th&quot;] = {
	name1    = &quot;thermie&quot;,
	symbol   = &quot;th&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186800,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;thm-EC&quot;] = {
	name1    = &quot;therm (EC)&quot;,
	name2    = &quot;therms (EC)&quot;,
	symbol   = &quot;thm (EC)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105506000,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;thm-UK&quot;] = {
	name1    = &quot;therm (UK)&quot;,
	name2    = &quot;therms (UK)&quot;,
	symbol   = &quot;thm (UK)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105505585.257348,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;thm-US&quot;] = {
	name1    = &quot;therm (US)&quot;,
	name1_us = &quot;therm (U.S.)&quot;,
	name2    = &quot;therms (US)&quot;,
	name2_us = &quot;therms (U.S.)&quot;,
	symbol   = &quot;thm (US)&quot;,
	sym_us   = &quot;thm (U.S.)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105480400,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;toe&quot;] = {
	name1    = &quot;tonne of oil equivalent&quot;,
	name2    = &quot;tonnes of oil equivalent&quot;,
	symbol   = &quot;toe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 41868000000,
	default  = &quot;GJ&quot;,
    },
    [&quot;tonTNT&quot;] = {
	name2    = &quot;tons of TNT&quot;,
	symbol   = &quot;ton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;tTNT&quot;] = {
	name2    = &quot;tonnes of TNT&quot;,
	symbol   = &quot;tonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TtonTNT&quot;] = {
	name2    = &quot;teratons of TNT&quot;,
	symbol   = &quot;teraton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e21,
	default  = &quot;ZJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TtTNT&quot;] = {
	name2    = &quot;teratonnes of TNT&quot;,
	symbol   = &quot;teratonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e21,
	default  = &quot;ZJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TW.h&quot;] = {
	name1    = &quot;terawatt-hour&quot;,
	symbol   = &quot;TWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e15,
	default  = &quot;PJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;TWh&quot;] = {
	name1    = &quot;terawatt-hour&quot;,
	symbol   = &quot;TWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e15,
	default  = &quot;PJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;USgalatm&quot;] = {
	name1    = &quot;US gallon-atmosphere&quot;,
	name1_us = &quot;U.S. gallon-atmosphere&quot;,
	symbol   = &quot;US&amp;nbsp;galatm&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;galatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 383.5568490138,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;W.h&quot;] = {
	name1    = &quot;watt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600,
	default  = &quot;kJ&quot;,
    },
    [&quot;Wh&quot;] = {
	name1    = &quot;watt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600,
	default  = &quot;kJ&quot;,
    },
    [&quot;erg&quot;] = {
	name1    = &quot;microerg&quot;,
	symbol   = &quot;erg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1e-13,
	default  = &quot;nJ&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;eV&quot;] = {
	name1    = &quot;microelectronvolt&quot;,
	symbol   = &quot;eV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-25,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;Latm&quot;] = {
	name1    = &quot;microlitre-atmosphere&quot;,
	name1_us = &quot;microliter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.000101325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;latm&quot;] = {
	name1    = &quot;microlitre-atmosphere&quot;,
	name1_us = &quot;microliter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.000101325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;tonTNT&quot;] = {
	name2    = &quot;microtons of TNT&quot;,
	symbol   = &quot;microton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;tTNT&quot;] = {
	name2    = &quot;microtonnes of TNT&quot;,
	symbol   = &quot;microtonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;W.h&quot;] = {
	name1    = &quot;microwatt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0036,
	default  = &quot;mJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;Wh&quot;] = {
	name1    = &quot;microwatt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0036,
	default  = &quot;mJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;-kW.h&quot;] = {
	target   = &quot;kW.h&quot;,
	link     = &quot;Kilowatt hour&quot;,
    },
    [&quot;btu&quot;] = {
	target   = &quot;BTU&quot;,
    },
    [&quot;Calorie&quot;] = {
	target   = &quot;Cal&quot;,
    },
    [&quot;ft.lbf&quot;] = {
	target   = &quot;ftlbf&quot;,
    },
    [&quot;ftlb-f&quot;] = {
	target   = &quot;ftlb-f&quot;,
    },
    [&quot;ftlbf&quot;] = {
	target   = &quot;ftlbf&quot;,
    },
    [&quot;g-cal-15&quot;] = {
	target   = &quot;cal-15&quot;,
    },
    [&quot;g-cal-IT&quot;] = {
	target   = &quot;cal-IT&quot;,
    },
    [&quot;g-cal-th&quot;] = {
	target   = &quot;cal-th&quot;,
    },
    [&quot;g-kcal-15&quot;] = {
	target   = &quot;kcal-15&quot;,
    },
    [&quot;g-kcal-IT&quot;] = {
	target   = &quot;kcal-IT&quot;,
    },
    [&quot;g-kcal-th&quot;] = {
	target   = &quot;kcal-th&quot;,
    },
    [&quot;g-Mcal-15&quot;] = {
	target   = &quot;Mcal-15&quot;,
    },
    [&quot;g-mcal-15&quot;] = {
	target   = &quot;mcal-15&quot;,
    },
    [&quot;g-Mcal-IT&quot;] = {
	target   = &quot;Mcal-IT&quot;,
    },
    [&quot;g-mcal-IT&quot;] = {
	target   = &quot;mcal-IT&quot;,
    },
    [&quot;g-Mcal-th&quot;] = {
	target   = &quot;Mcal-th&quot;,
    },
    [&quot;g-mcal-th&quot;] = {
	target   = &quot;mcal-th&quot;,
    },
    [&quot;GW-h&quot;] = {
	target   = &quot;GW.h&quot;,
    },
    [&quot;GWh&quot;] = {
	target   = &quot;GW.h&quot;,
    },
    [&quot;Hartree&quot;] = {
	target   = &quot;Eh&quot;,
    },
    [&quot;hp.h&quot;] = {
	target   = &quot;hph&quot;,
    },
    [&quot;hph&quot;] = {
	target   = &quot;hph&quot;,
    },
    [&quot;in.lb-f&quot;] = {
	target   = &quot;inlb-f&quot;,
    },
    [&quot;in.lbf&quot;] = {
	target   = &quot;inlbf&quot;,
    },
    [&quot;in.oz-f&quot;] = {
	target   = &quot;inoz-f&quot;,
    },
    [&quot;in.ozf&quot;] = {
	target   = &quot;inozf&quot;,
    },
    [&quot;inlb-f&quot;] = {
	target   = &quot;inlb-f&quot;,
    },
    [&quot;inlbf&quot;] = {
	target   = &quot;inlbf&quot;,
    },
    [&quot;inoz-f&quot;] = {
	target   = &quot;inoz-f&quot;,
    },
    [&quot;inozf&quot;] = {
	target   = &quot;inozf&quot;,
    },
    [&quot;kbboe&quot;] = {
	target   = &quot;kBOE&quot;,
	symbol   = &quot;kbboe&quot;,
    },
    [&quot;kg-cal-15&quot;] = {
	target   = &quot;Cal-15&quot;,
    },
    [&quot;kg-cal-IT&quot;] = {
	target   = &quot;Cal-IT&quot;,
    },
    [&quot;kg-cal-th&quot;] = {
	target   = &quot;Cal-th&quot;,
    },
    [&quot;kW-h&quot;] = {
	target   = &quot;kW.h&quot;,
    },
    [&quot;kWh&quot;] = {
	target   = &quot;kW.h&quot;,
    },
    [&quot;MW-h&quot;] = {
	target   = &quot;MW.h&quot;,
    },
    [&quot;mW-h&quot;] = {
	target   = &quot;mW.h&quot;,
    },
    [&quot;MWh&quot;] = {
	target   = &quot;MW.h&quot;,
    },
    [&quot;mWh&quot;] = {
	target   = &quot;mW.h&quot;,
    },
    [&quot;TW-h&quot;] = {
	target   = &quot;TW.h&quot;,
    },
    [&quot;TWh&quot;] = {
	target   = &quot;TW.h&quot;,
    },
    [&quot;U.S.galatm&quot;] = {
	target   = &quot;USgalatm&quot;,
	sp_us    = true,
    },
    [&quot;uerg&quot;] = {
	target   = &quot;erg&quot;,
    },
    [&quot;ueV&quot;] = {
	target   = &quot;eV&quot;,
    },
    [&quot;uLatm&quot;] = {
	target   = &quot;Latm&quot;,
    },
    [&quot;ulatm&quot;] = {
	target   = &quot;latm&quot;,
    },
    [&quot;usgalatm&quot;] = {
	target   = &quot;USgalatm&quot;,
    },
    [&quot;utonTNT&quot;] = {
	target   = &quot;tonTNT&quot;,
    },
    [&quot;utTNT&quot;] = {
	target   = &quot;tTNT&quot;,
    },
    [&quot;uW-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;uW.h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;uWh&quot;] = {
	target   = &quot;Wh&quot;,
    },
    [&quot;uWh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;erg&quot;] = {
	target   = &quot;erg&quot;,
    },
    [&quot;eV&quot;] = {
	target   = &quot;eV&quot;,
    },
    [&quot;Latm&quot;] = {
	target   = &quot;Latm&quot;,
    },
    [&quot;latm&quot;] = {
	target   = &quot;latm&quot;,
    },
    [&quot;tonTNT&quot;] = {
	target   = &quot;tonTNT&quot;,
    },
    [&quot;tTNT&quot;] = {
	target   = &quot;tTNT&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W.h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;Wh&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;eVpar&quot;] = {
	_name1   = &quot;electronvolt&quot;,
	_symbol  = &quot;eV&quot;,
	utype    = &quot;energy per chemical amount&quot;,
	scale    = 96485.329522144166,
	prefixes = 1,
	default  = &quot;kcal/mol&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;kcal/mol&quot;] = {
	per      = { &quot;kcal&quot;, &quot;mol&quot; },
	utype    = &quot;energy per chemical amount&quot;,
	default  = &quot;kJ/mol&quot;,
	link     = &quot;Kilocalorie per mole&quot;,
    },
    [&quot;kJ/mol&quot;] = {
	per      = { &quot;kJ&quot;, &quot;mol&quot; },
	utype    = &quot;energy per chemical amount&quot;,
	default  = &quot;kcal/mol&quot;,
	link     = &quot;Joule per mole&quot;,
    },
    [&quot;kWh/100 km&quot;] = {
	name1    = &quot;kilowatt-hour per 100 kilometres&quot;,
	name1_us = &quot;kilowatt-hour per 100 kilometers&quot;,
	name2    = &quot;kilowatt-hours per 100 kilometres&quot;,
	name2_us = &quot;kilowatt-hours per 100 kilometers&quot;,
	symbol   = &quot;kWh/100&amp;nbsp;km&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 36,
	default  = &quot;MJ/km kWh/mi&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;kWh/100 mi&quot;] = {
	name1    = &quot;kilowatt-hour per 100 miles&quot;,
	name2    = &quot;kilowatt-hours per 100 miles&quot;,
	symbol   = &quot;kWh/100&amp;nbsp;mi&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 22.3694,
	default  = &quot;mpge&quot;,
	link     = &quot;Miles per gallon gasoline equivalent&quot;,
    },
    [&quot;MJ/100 km&quot;] = {
	name1    = &quot;megajoule per 100 kilometres&quot;,
	name1_us = &quot;megajoule per 100 kilometers&quot;,
	name2    = &quot;megajoules per 100 kilometres&quot;,
	name2_us = &quot;megajoules per 100 kilometers&quot;,
	symbol   = &quot;MJ/100&amp;nbsp;km&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 10,
	default  = &quot;BTU/mi&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;mpge&quot;] = {
	name1    = &quot;mile per gallon gasoline equivalent&quot;,
	name2    = &quot;miles per gallon gasoline equivalent&quot;,
	symbol   = &quot;mpg&amp;#8209;e&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 13e-6,
	invert   = -1,
	iscomplex= true,
	default  = &quot;kWh/100 mi&quot;,
	link     = &quot;Miles per gallon gasoline equivalent&quot;,
    },
    [&quot;BTU/mi&quot;] = {
	per      = { &quot;BTU&quot;, &quot;mi&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;v &gt; 1525 ! M ! k ! J/km&quot;,
    },
    [&quot;kJ/km&quot;] = {
	per      = { &quot;kJ&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;BTU/mi&quot;,
    },
    [&quot;kWh/km&quot;] = {
	per      = { &quot;-kW.h&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;MJ/km kWh/mi&quot;,
    },
    [&quot;kWh/mi&quot;] = {
	per      = { &quot;-kW.h&quot;, &quot;mi&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;kWh/km MJ/km&quot;,
    },
    [&quot;MJ/km&quot;] = {
	per      = { &quot;MJ&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;BTU/mi&quot;,
    },
    [&quot;mpg-e&quot;] = {
	target   = &quot;mpge&quot;,
    },
    [&quot;BTU/lb&quot;] = {
	name1    = &quot;British thermal unit per pound&quot;,
	name2    = &quot;British thermal units per pound&quot;,
	symbol   = &quot;BTU/lb&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 429.92261414790346,
	default  = &quot;kJ/kg&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;cal/g&quot;] = {
	name1    = &quot;calorie per gram&quot;,
	name2    = &quot;calories per gram&quot;,
	symbol   = &quot;cal/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184,
	default  = &quot;J/g&quot;,
    },
    [&quot;GJ/kg&quot;] = {
	name1    = &quot;gigajoule per kilogram&quot;,
	name2    = &quot;gigajoules per kilogram&quot;,
	symbol   = &quot;GJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1e9,
	default  = &quot;ktTNT/t&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;J/g&quot;] = {
	name1    = &quot;joule per gram&quot;,
	name2    = &quot;joules per gram&quot;,
	symbol   = &quot;J/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000,
	default  = &quot;kcal/g&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kcal/g&quot;] = {
	name1    = &quot;kilocalorie per gram&quot;,
	name2    = &quot;kilocalories per gram&quot;,
	symbol   = &quot;kcal/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000,
	default  = &quot;kJ/g&quot;,
    },
    [&quot;kJ/g&quot;] = {
	name1    = &quot;kilojoule per gram&quot;,
	name2    = &quot;kilojoules per gram&quot;,
	symbol   = &quot;kJ/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000000,
	default  = &quot;kcal/g&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kJ/kg&quot;] = {
	name1    = &quot;kilojoule per kilogram&quot;,
	name2    = &quot;kilojoules per kilogram&quot;,
	symbol   = &quot;kJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000,
	default  = &quot;BTU/lb&quot;,
    },
    [&quot;ktonTNT/MT&quot;] = {
	name2    = &quot;kilotons of TNT per metric ton&quot;,
	symbol   = &quot;kiloton of TNT per metric ton&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000000,
	default  = &quot;GJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktTNT/t&quot;] = {
	name2    = &quot;kilotonnes of TNT per tonne&quot;,
	symbol   = &quot;kilotonne of TNT per tonne&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000000,
	default  = &quot;GJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtonTNT/MT&quot;] = {
	name2    = &quot;megatons of TNT per metric ton&quot;,
	symbol   = &quot;megaton of TNT per metric ton&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtTNT/MT&quot;] = {
	name2    = &quot;megatonnes of TNT per tonne&quot;,
	symbol   = &quot;megatonne of TNT per tonne&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TJ/kg&quot;] = {
	name1    = &quot;terajoule per kilogram&quot;,
	name2    = &quot;terajoules per kilogram&quot;,
	symbol   = &quot;TJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1e12,
	default  = &quot;MtTNT/MT&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;Cal/g&quot;] = {
	per      = { &quot;Cal&quot;, &quot;g&quot; },
	utype    = &quot;energy per unit mass&quot;,
	default  = &quot;kJ/g&quot;,
    },
    [&quot;BTU/cuft&quot;] = {
	per      = { &quot;BTU&quot;, &quot;cuft&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/12USoz(mL)serve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USoz(mL)serve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/12USoz(ml)serve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USoz(ml)serve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/l&quot;,
    },
    [&quot;Cal/12USozserve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USozserve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/USoz&quot;] = {
	per      = { &quot;Cal&quot;, &quot;USoz&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/ml&quot;,
    },
    [&quot;kJ/L&quot;] = {
	per      = { &quot;kJ&quot;, &quot;L&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;kJ/l&quot;] = {
	per      = { &quot;kJ&quot;, &quot;l&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;kJ/ml&quot;] = {
	per      = { &quot;kJ&quot;, &quot;ml&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;Cal/USoz&quot;,
    },
    [&quot;MJ/m3&quot;] = {
	per      = { &quot;MJ&quot;, &quot;m3&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;Sv&quot;] = {
	_name1   = &quot;sievert&quot;,
	_symbol  = &quot;Sv&quot;,
	utype    = &quot;equivalent radiation dose&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;rem&quot;,
	link     = &quot;Sievert&quot;,
    },
    [&quot;rem&quot;] = {
	_name1   = &quot;rem&quot;,
	_symbol  = &quot;rem&quot;,
	utype    = &quot;equivalent radiation dose&quot;,
	scale    = 0.01,
	prefixes = 1,
	default  = &quot;Sv&quot;,
	link     = &quot;Roentgen equivalent man&quot;,
    },
    [&quot;g/km&quot;] = {
	name1    = &quot;gram per kilometre&quot;,
	name1_us = &quot;gram per kilometer&quot;,
	name2    = &quot;grams per kilometre&quot;,
	name2_us = &quot;grams per kilometer&quot;,
	symbol   = &quot;g/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1e-6,
	default  = &quot;oz/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;g/mi&quot;] = {
	name1    = &quot;gram per mile&quot;,
	name2    = &quot;grams per mile&quot;,
	symbol   = &quot;g/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 6.2137119223733397e-7,
	default  = &quot;g/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;gCO2/km&quot;] = {
	name1    = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name1_us = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	name2    = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name2_us = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	symbol   = &quot;g(CO&lt;sub&gt;2&lt;/sub&gt;)/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1e-6,
	default  = &quot;ozCO2/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;gCO2/mi&quot;] = {
	name1    = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;g(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 6.2137119223733397e-7,
	default  = &quot;gCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;kg/km&quot;] = {
	name1    = &quot;kilogram per kilometre&quot;,
	name1_us = &quot;kilogram per kilometer&quot;,
	name2    = &quot;kilograms per kilometre&quot;,
	name2_us = &quot;kilograms per kilometer&quot;,
	symbol   = &quot;kg/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.001,
	default  = &quot;lb/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;kgCO2/km&quot;] = {
	name1    = &quot;kilogram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name1_us = &quot;kilogram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	name2    = &quot;kilograms of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name2_us = &quot;kilograms of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	symbol   = &quot;kg(CO&lt;sub&gt;2&lt;/sub&gt;)/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.001,
	default  = &quot;lbCO2/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lb/mi&quot;] = {
	name1    = &quot;pound per mile&quot;,
	name2    = &quot;pounds per mile&quot;,
	symbol   = &quot;lb/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.00028184923173665794,
	default  = &quot;kg/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lbCO2/mi&quot;] = {
	name1    = &quot;pound of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;pounds of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;lb(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.00028184923173665794,
	default  = &quot;kgCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;oz/mi&quot;] = {
	name1    = &quot;ounce per mile&quot;,
	name2    = &quot;ounces per mile&quot;,
	symbol   = &quot;oz/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1.7615576983541121e-5,
	default  = &quot;g/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;ozCO2/mi&quot;] = {
	name1    = &quot;ounce of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;ounces of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;oz(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1.7615576983541121e-5,
	default  = &quot;gCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;cuft/a&quot;] = {
	name1    = &quot;cubic foot per annum&quot;,
	name2    = &quot;cubic feet per annum&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 8.9730672142368242e-10,
	default  = &quot;m3/a&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/d&quot;] = {
	name1    = &quot;cubic foot per day&quot;,
	name2    = &quot;cubic feet per day&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 3.2774128000000003e-7,
	default  = &quot;m3/d&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/h&quot;] = {
	name1    = &quot;cubic foot per hour&quot;,
	name2    = &quot;cubic feet per hour&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 7.8657907200000004e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/min&quot;] = {
	name1    = &quot;cubic foot per minute&quot;,
	name2    = &quot;cubic feet per minute&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00047194744319999999,
	default  = &quot;m3/min&quot;,
	link     = &quot;Cubic foot#cubic foot per second&quot;,
    },
    [&quot;cuft/s&quot;] = {
	name1    = &quot;cubic foot per second&quot;,
	name2    = &quot;cubic feet per second&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 28316846592e-12,
	default  = &quot;m3/s&quot;,
    },
    [&quot;cumi/a&quot;] = {
	name1    = &quot;cubic mile per annum&quot;,
	name2    = &quot;cubic miles per annum&quot;,
	symbol   = &quot;cu&amp;nbsp;mi/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 132.08171170940057,
	default  = &quot;km3/a&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuyd/h&quot;] = {
	name1    = &quot;cubic yard per hour&quot;,
	name2    = &quot;cubic yards per hour&quot;,
	symbol   = &quot;cuyd/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00021237634944000001,
	default  = &quot;m3/h&quot;,
	link     = &quot;Cubic foot per minute&quot;,
    },
    [&quot;cuyd/s&quot;] = {
	name1    = &quot;cubic yard per second&quot;,
	name2    = &quot;cubic yards per second&quot;,
	symbol   = &quot;cu&amp;nbsp;yd/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.76455485798400002,
	default  = &quot;m3/s&quot;,
    },
    [&quot;Goilbbl/a&quot;] = {
	name1    = &quot;billion barrels per year&quot;,
	name2    = &quot;billion barrels per year&quot;,
	symbol   = &quot;Gbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933836,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e6 ! e9 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;impgal/h&quot;] = {
	name1    = &quot;imperial gallon per hour&quot;,
	name2    = &quot;imperial gallons per hour&quot;,
	symbol   = &quot;imp&amp;nbsp;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.2628027777777779e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;impgal/min&quot;] = {
	name1    = &quot;imperial gallon per minute&quot;,
	name2    = &quot;imperial gallons per minute&quot;,
	symbol   = &quot;imp gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 7.5768166666666671e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;impgal/s&quot;] = {
	name1    = &quot;imperial gallon per second&quot;,
	name2    = &quot;imperial gallons per second&quot;,
	symbol   = &quot;impgal/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00454609,
	default  = &quot;m3/s&quot;,
	link     = &quot;Imperial gallons per second&quot;,
    },
    [&quot;km3/a&quot;] = {
	name1    = &quot;cubic kilometre per annum&quot;,
	name1_us = &quot;cubic kilometer per annum&quot;,
	name2    = &quot;cubic kilometres per annum&quot;,
	name2_us = &quot;cubic kilometers per annum&quot;,
	symbol   = &quot;km&lt;sup&gt;3&lt;/sup&gt;/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 31.68808781402895,
	default  = &quot;cumi/a&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;km3/d&quot;] = {
	name1    = &quot;cubic kilometre per day&quot;,
	name1_us = &quot;cubic kilometer per day&quot;,
	name2    = &quot;cubic kilometres per day&quot;,
	name2_us = &quot;cubic kilometers per day&quot;,
	symbol   = &quot;km&lt;sup&gt;3&lt;/sup&gt;/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 11574.074074074075,
	default  = &quot;cuft/d&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;koilbbl/a&quot;] = {
	name1    = &quot;thousand barrels per year&quot;,
	name2    = &quot;thousand barrels per year&quot;,
	symbol   = &quot;kbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933841e-6,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;koilbbl/d&quot;] = {
	name1    = &quot;thousand barrels per day&quot;,
	name2    = &quot;thousand barrels per day&quot;,
	symbol   = &quot;kbbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.0018401307283333335,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3/d&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;L/h&quot;] = {
	name1    = &quot;litre per hour&quot;,
	name1_us = &quot;liter per hour&quot;,
	name2    = &quot;litres per hour&quot;,
	name2_us = &quot;liters per hour&quot;,
	symbol   = &quot;L/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 2.7777777777777776e-7,
	default  = &quot;impgal/h USgal/h&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;L/min&quot;] = {
	name1    = &quot;litre per minute&quot;,
	name1_us = &quot;liter per minute&quot;,
	name2    = &quot;litres per minute&quot;,
	name2_us = &quot;liters per minute&quot;,
	symbol   = &quot;L/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.6666666666666667e-5,
	default  = &quot;impgal/min USgal/min&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;L/s&quot;] = {
	name1    = &quot;litre per second&quot;,
	name1_us = &quot;liter per second&quot;,
	name2    = &quot;litres per second&quot;,
	name2_us = &quot;liters per second&quot;,
	symbol   = &quot;L/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.001,
	default  = &quot;cuft/s&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/a&quot;] = {
	name1    = &quot;cubic metre per annum&quot;,
	name1_us = &quot;cubic meter per annum&quot;,
	name2    = &quot;cubic metres per annum&quot;,
	name2_us = &quot;cubic meters per annum&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 3.1688087814028947e-8,
	default  = &quot;cuft/a&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/d&quot;] = {
	name1    = &quot;cubic metre per day&quot;,
	name1_us = &quot;cubic meter per day&quot;,
	name2    = &quot;cubic metres per day&quot;,
	name2_us = &quot;cubic meters per day&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;cuft/d&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/h&quot;] = {
	name1    = &quot;cubic metre per hour&quot;,
	name1_us = &quot;cubic meter per hour&quot;,
	name2    = &quot;cubic metres per hour&quot;,
	name2_us = &quot;cubic meters per hour&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;cuft/h&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/min&quot;] = {
	name1    = &quot;cubic metre per minute&quot;,
	name1_us = &quot;cubic meter per minute&quot;,
	name2    = &quot;cubic metres per minute&quot;,
	name2_us = &quot;cubic meters per minute&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;cuft/min&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/s&quot;] = {
	name1    = &quot;cubic metre per second&quot;,
	name1_us = &quot;cubic meter per second&quot;,
	name2    = &quot;cubic metres per second&quot;,
	name2_us = &quot;cubic meters per second&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1,
	default  = &quot;cuft/s&quot;,
    },
    [&quot;Moilbbl/a&quot;] = {
	name1    = &quot;million barrels per year&quot;,
	name2    = &quot;million barrels per year&quot;,
	symbol   = &quot;Mbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.0050380033629933837,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;Moilbbl/d&quot;] = {
	name1    = &quot;million barrels per day&quot;,
	name2    = &quot;million barrels per day&quot;,
	symbol   = &quot;Mbbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.8401307283333335,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3/d&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;oilbbl/a&quot;] = {
	name1    = &quot;barrel per year&quot;,
	name2    = &quot;barrels per year&quot;,
	symbol   = &quot;bbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933841e-9,
	default  = &quot;m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;oilbbl/d&quot;] = {
	name1    = &quot;barrel per day&quot;,
	name2    = &quot;barrels per day&quot;,
	symbol   = &quot;bbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.8401307283333336e-6,
	default  = &quot;m3/d&quot;,
    },
    [&quot;Toilbbl/a&quot;] = {
	name1    = &quot;trillion barrels per year&quot;,
	name2    = &quot;trillion barrels per year&quot;,
	symbol   = &quot;Tbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5038.0033629933832,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e9 ! e12 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;U.S.gal/d&quot;] = {
	name1    = &quot;U.S. gallon per day&quot;,
	name2    = &quot;U.S. gallons per day&quot;,
	symbol   = &quot;U.S.&amp;nbsp;gal/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 4.3812636388888893e-8,
	default  = &quot;m3/s&quot;,
	customary= 1,
    },
    [&quot;U.S.gal/h&quot;] = {
	name1    = &quot;gallon per hour&quot;,
	name2    = &quot;gallons per hour&quot;,
	symbol   = &quot;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.0515032733333334e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
	customary= 2,
    },
    [&quot;U.S.gal/min&quot;] = {
	name1    = &quot;U.S. gallon per minute&quot;,
	name2    = &quot;U.S. gallons per minute&quot;,
	symbol   = &quot;U.S.&amp;nbsp;gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 6.3090196400000003e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal/a&quot;] = {
	name1    = &quot;US gallon per year&quot;,
	name2    = &quot;US gallons per year&quot;,
	symbol   = &quot;US&amp;nbsp;gal/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.1995246102365199e-10,
	default  = &quot;m3/s&quot;,
	link     = &quot;US gallon per day&quot;,
    },
    [&quot;USgal/d&quot;] = {
	name1    = &quot;US gallon per day&quot;,
	name2    = &quot;US gallons per day&quot;,
	symbol   = &quot;US&amp;nbsp;gal/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 4.3812636388888893e-8,
	default  = &quot;m3/s&quot;,
    },
    [&quot;USgal/h&quot;] = {
	name1    = &quot;gallon per hour&quot;,
	name2    = &quot;gallons per hour&quot;,
	symbol   = &quot;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.0515032733333334e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
	customary= 1,
    },
    [&quot;USgal/min&quot;] = {
	name1    = &quot;US gallon per minute&quot;,
	name2    = &quot;US gallons per minute&quot;,
	symbol   = &quot;US&amp;nbsp;gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 6.3090196400000003e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal/s&quot;] = {
	name1    = &quot;US gallon per second&quot;,
	name1_us = &quot;U.S. gallon per second&quot;,
	name2    = &quot;US gallons per second&quot;,
	name2_us = &quot;U.S. gallons per second&quot;,
	symbol   = &quot;USgal/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.003785411784,
	default  = &quot;m3/s&quot;,
	link     = &quot;US gallons per second&quot;,
    },
    [&quot;ft3/a&quot;] = {
	target   = &quot;cuft/a&quot;,
    },
    [&quot;ft3/d&quot;] = {
	target   = &quot;cuft/d&quot;,
    },
    [&quot;ft3/h&quot;] = {
	target   = &quot;cuft/h&quot;,
    },
    [&quot;ft3/s&quot;] = {
	target   = &quot;cuft/s&quot;,
    },
    [&quot;Gcuft/a&quot;] = {
	target   = &quot;e9cuft/a&quot;,
    },
    [&quot;Gcuft/d&quot;] = {
	target   = &quot;e9cuft/d&quot;,
    },
    [&quot;kcuft/a&quot;] = {
	target   = &quot;e3cuft/a&quot;,
    },
    [&quot;kcuft/d&quot;] = {
	target   = &quot;e3cuft/d&quot;,
    },
    [&quot;kcuft/s&quot;] = {
	target   = &quot;e3cuft/s&quot;,
    },
    [&quot;Mcuft/a&quot;] = {
	target   = &quot;e6cuft/a&quot;,
    },
    [&quot;Mcuft/d&quot;] = {
	target   = &quot;e6cuft/d&quot;,
    },
    [&quot;Mcuft/s&quot;] = {
	target   = &quot;e6cuft/s&quot;,
    },
    [&quot;m/s&quot;] = {
	target   = &quot;m3/s&quot;,
    },
    [&quot;Tcuft/a&quot;] = {
	target   = &quot;e12cuft/a&quot;,
    },
    [&quot;Tcuft/d&quot;] = {
	target   = &quot;e12cuft/d&quot;,
    },
    [&quot;u.s.gal/min&quot;] = {
	target   = &quot;U.S.gal/min&quot;,
    },
    [&quot;usgal/min&quot;] = {
	target   = &quot;USgal/min&quot;,
    },
    [&quot;-LTf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LTf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;-STf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;STf&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;dyn&quot;] = {
	name1    = &quot;dyne&quot;,
	symbol   = &quot;dyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00001,
	default  = &quot;gr-f&quot;,
    },
    [&quot;g-f&quot;] = {
	name1    = &quot;gram-force&quot;,
	name2    = &quot;grams-force&quot;,
	symbol   = &quot;g&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN oz-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;gf&quot;] = {
	name1    = &quot;gram-force&quot;,
	name2    = &quot;grams-force&quot;,
	symbol   = &quot;gf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN ozf&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;gr-f&quot;] = {
	name1    = &quot;grain-force&quot;,
	name2    = &quot;grains-force&quot;,
	symbol   = &quot;gr&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.0006354602307515,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;grf&quot;] = {
	name1    = &quot;grain-force&quot;,
	name2    = &quot;grains-force&quot;,
	symbol   = &quot;grf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.0006354602307515,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;kdyn&quot;] = {
	name1    = &quot;kilodyne&quot;,
	symbol   = &quot;kdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.01,
	default  = &quot;oz-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;kg-f&quot;] = {
	name1    = &quot;kilogram-force&quot;,
	name2    = &quot;kilograms-force&quot;,
	symbol   = &quot;kg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lb-f&quot;,
    },
    [&quot;kgf&quot;] = {
	name1    = &quot;kilogram-force&quot;,
	name2    = &quot;kilograms-force&quot;,
	symbol   = &quot;kgf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lbf&quot;,
    },
    [&quot;kp&quot;] = {
	name1    = &quot;kilopond&quot;,
	symbol   = &quot;kp&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lb-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;L/T-f&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;L/T&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;L/Tf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;L/Tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;lb-f&quot;] = {
	name1    = &quot;pound-force&quot;,
	name2    = &quot;pounds-force&quot;,
	symbol   = &quot;lb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
    },
    [&quot;lbf&quot;] = {
	name1    = &quot;pound-force&quot;,
	name2    = &quot;pounds-force&quot;,
	symbol   = &quot;lbf&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
    },
    [&quot;lb(f)&quot;] = {
	name1    = &quot;pound&quot;,
	symbol   = &quot;lb&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;LT-f&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LT&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;LTf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LTf&quot;,
	usename  = 1,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;Mdyn&quot;] = {
	name1    = &quot;megadyne&quot;,
	symbol   = &quot;Mdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 10,
	default  = &quot;lb-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;mdyn&quot;] = {
	name1    = &quot;millidyne&quot;,
	symbol   = &quot;mdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000001,
	default  = &quot;gr-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;mg-f&quot;] = {
	name1    = &quot;milligram-force&quot;,
	name2    = &quot;milligrams-force&quot;,
	symbol   = &quot;mg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N gr-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;mgf&quot;] = {
	name1    = &quot;milligram-force&quot;,
	name2    = &quot;milligrams-force&quot;,
	symbol   = &quot;mgf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N grf&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;Mp&quot;] = {
	name1    = &quot;megapond&quot;,
	symbol   = &quot;Mp&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LT-f ST-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;mp&quot;] = {
	name1    = &quot;millipond&quot;,
	symbol   = &quot;mp&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N gr-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;N&quot;] = {
	_name1   = &quot;newton&quot;,
	_symbol  = &quot;N&quot;,
	utype    = &quot;force&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;lb-f&quot;,
	link     = &quot;Newton (unit)&quot;,
    },
    [&quot;oz-f&quot;] = {
	name1    = &quot;ounce-force&quot;,
	name2    = &quot;ounces-force&quot;,
	symbol   = &quot;oz&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.2780138203095378125,
	default  = &quot;mN&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;ozf&quot;] = {
	name1    = &quot;ounce-force&quot;,
	name2    = &quot;ounces-force&quot;,
	symbol   = &quot;ozf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.2780138203095378125,
	default  = &quot;mN&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;p&quot;] = {
	name1    = &quot;pond&quot;,
	symbol   = &quot;p&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN oz-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;pdl&quot;] = {
	name1    = &quot;poundal&quot;,
	symbol   = &quot;pdl&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.138254954376,
	default  = &quot;N&quot;,
    },
    [&quot;S/T-f&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;S/T&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;S/Tf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;S/Tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;ST-f&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;ST&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;STf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;STf&quot;,
	usename  = 1,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;t-f&quot;] = {
	name1    = &quot;tonne-force&quot;,
	name2    = &quot;tonnes-force&quot;,
	symbol   = &quot;t&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LT-f ST-f&quot;,
	link     = &quot;Ton-force#Tonne-force&quot;,
    },
    [&quot;tf&quot;] = {
	name1    = &quot;tonne-force&quot;,
	name2    = &quot;tonnes-force&quot;,
	symbol   = &quot;tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LTf STf&quot;,
	link     = &quot;Ton-force#Tonne-force&quot;,
    },
    [&quot;dyne&quot;] = {
	target   = &quot;dyn&quot;,
    },
    [&quot;newtons&quot;] = {
	target   = &quot;N&quot;,
    },
    [&quot;poundal&quot;] = {
	target   = &quot;pdl&quot;,
    },
    [&quot;tonne-force&quot;] = {
	target   = &quot;tf&quot;,
    },
    [&quot;impgal/mi&quot;] = {
	per      = { &quot;@impgal&quot;, &quot;mi&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km USgal/mi&quot;,
    },
    [&quot;km/L&quot;] = {
	per      = { &quot;km&quot;, &quot;L&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;km/l&quot;] = {
	per      = { &quot;km&quot;, &quot;l&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;L/100 km&quot;] = {
	per      = { &quot;L&quot;, &quot;100km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|L/100&amp;nbsp;km]]&quot;,
    },
    [&quot;l/100 km&quot;] = {
	per      = { &quot;l&quot;, &quot;100km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|l/100&amp;nbsp;km]]&quot;,
    },
    [&quot;L/km&quot;] = {
	per      = { &quot;L&quot;, &quot;km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;l/km&quot;] = {
	per      = { &quot;l&quot;, &quot;km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;mi/impqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;impqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/U.S.qt&quot;] = {
	per      = { &quot;mi&quot;, &quot;U.S.qt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/USqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;USqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/usqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;usqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mpgimp&quot;] = {
	per      = { &quot;mi&quot;, &quot;@impgal&quot; },
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;imp&lt;/sub&gt;&quot;,
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;L/100 km+mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[Imperial units|imp]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgus&quot;] = {
	per      = { &quot;mi&quot;, &quot;+USgal&quot; },
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;US&lt;/sub&gt;&quot;,
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;L/100 km+mpgimp&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|US]]&lt;/sub&gt;&quot;,
    },
    [&quot;U.S.gal/mi&quot;] = {
	per      = { &quot;*U.S.gal&quot;, &quot;mi&quot; },
	sp_us    = true,
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km impgal/mi&quot;,
    },
    [&quot;usgal/mi&quot;] = {
	per      = { &quot;+USgal&quot;, &quot;mi&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km impgal/mi&quot;,
    },
    [&quot;L/100km&quot;] = {
	target   = &quot;L/100 km&quot;,
    },
    [&quot;l/100km&quot;] = {
	target   = &quot;l/100 km&quot;,
    },
    [&quot;mpg&quot;] = {
	shouldbe = &quot;Use %{mpgus%} for miles per US gallon or %{mpgimp%} for miles per imperial gallon (not %{mpg%})&quot;,
    },
    [&quot;mpgU.S.&quot;] = {
	target   = &quot;mpgus&quot;,
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;U.S.&lt;/sub&gt;&quot;,
	sp_us    = true,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|U.S.]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgu.s.&quot;] = {
	target   = &quot;mpgus&quot;,
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;U.S.&lt;/sub&gt;&quot;,
	sp_us    = true,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|U.S.]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgUS&quot;] = {
	target   = &quot;mpgus&quot;,
    },
    [&quot;USgal/mi&quot;] = {
	target   = &quot;usgal/mi&quot;,
    },
    [&quot;kPa/m&quot;] = {
	per      = { &quot;kPa&quot;, &quot;-m-frac&quot; },
	utype    = &quot;fracture gradient&quot;,
	default  = &quot;psi/ft&quot;,
    },
    [&quot;psi/ft&quot;] = {
	per      = { &quot;psi&quot;, &quot;-ft-frac&quot; },
	utype    = &quot;fracture gradient&quot;,
	default  = &quot;kPa/m&quot;,
    },
    [&quot;cm/km&quot;] = {
	name1    = &quot;centimetre per kilometre&quot;,
	name1_us = &quot;centimeter per kilometer&quot;,
	name2    = &quot;centimetres per kilometre&quot;,
	name2_us = &quot;centimeters per kilometer&quot;,
	symbol   = &quot;cm/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00001,
	default  = &quot;ft/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;ft/mi&quot;] = {
	name1    = &quot;foot per mile&quot;,
	name2    = &quot;feet per mile&quot;,
	symbol   = &quot;ft/mi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00018939393939393939,
	default  = &quot;v &lt; 5.28 ! c ! ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;ft/nmi&quot;] = {
	name1    = &quot;foot per nautical mile&quot;,
	name2    = &quot;feet per nautical mile&quot;,
	symbol   = &quot;ft/nmi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00016457883369330455,
	default  = &quot;v &lt; 6.076 ! c ! ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;in/ft&quot;] = {
	name1    = &quot;inch per foot&quot;,
	name2    = &quot;inches per foot&quot;,
	symbol   = &quot;in/ft&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.083333333333333329,
	default  = &quot;mm/m&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;in/mi&quot;] = {
	name1    = &quot;inch per mile&quot;,
	name2    = &quot;inches per mile&quot;,
	symbol   = &quot;in/mi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 1.5782828282828283e-5,
	default  = &quot;v &lt; 0.6336 ! m ! c ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;m/km&quot;] = {
	name1    = &quot;metre per kilometre&quot;,
	name1_us = &quot;meter per kilometer&quot;,
	name2    = &quot;metres per kilometre&quot;,
	name2_us = &quot;meters per kilometer&quot;,
	symbol   = &quot;m/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.001,
	default  = &quot;ft/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;mm/km&quot;] = {
	name1    = &quot;millimetre per kilometre&quot;,
	name1_us = &quot;millimeter per kilometer&quot;,
	name2    = &quot;millimetres per kilometre&quot;,
	name2_us = &quot;millimeters per kilometer&quot;,
	symbol   = &quot;mm/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.000001,
	default  = &quot;in/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;mm/m&quot;] = {
	name1    = &quot;millimetre per metre&quot;,
	name1_us = &quot;millimeter per meter&quot;,
	name2    = &quot;millimetres per metre&quot;,
	name2_us = &quot;millimeters per meter&quot;,
	symbol   = &quot;mm/m&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.001,
	default  = &quot;in/ft&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;admi&quot;] = {
	name1    = &quot;admiralty mile&quot;,
	symbol   = &quot;nmi&amp;nbsp;(admiralty)&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;AU&quot;] = {
	name1    = &quot;astronomical unit&quot;,
	symbol   = &quot;AU&quot;,
	utype    = &quot;length&quot;,
	scale    = 149597870700,
	default  = &quot;km mi&quot;,
    },
    [&quot;Brnmi&quot;] = {
	name1    = &quot;British nautical mile&quot;,
	symbol   = &quot;(Brit)&amp;nbsp;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;bu&quot;] = {
	name2    = &quot;bu&quot;,
	symbol   = &quot;bu&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0030303030303030303,
	default  = &quot;mm&quot;,
	link     = &quot;Japanese units of measurement#Length&quot;,
    },
    [&quot;ch&quot;] = {
	name1    = &quot;chain&quot;,
	symbol   = &quot;ch&quot;,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 66, default = &quot;m&quot; }, [&quot;yd&quot;] = { 22, default = &quot;m&quot; } },
	link     = &quot;Chain (unit)&quot;,
    },
    [&quot;chlk&quot;] = {
	name1    = &quot;[[Chain (unit)|chain]]&quot;,
	symbol   = &quot;[[Chain (unit)|ch]]&quot;,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	link     = &quot;&quot;,
    },
    [&quot;chain&quot;] = {
	symbol   = &quot;chain&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 66, default = &quot;m&quot; }, [&quot;yd&quot;] = { 22, default = &quot;m&quot; } },
	link     = &quot;Chain (unit)&quot;,
    },
    [&quot;chainlk&quot;] = {
	symbol   = &quot;[[Chain (unit)|chain]]&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	link     = &quot;&quot;,
    },
    [&quot;dpcm&quot;] = {
	name2    = &quot;dot/cm&quot;,
	symbol   = &quot;dot/cm&quot;,
	utype    = &quot;length&quot;,
	scale    = 100,
	invert   = -1,
	iscomplex= true,
	default  = &quot;dpi&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;dpi&quot;] = {
	name2    = &quot;DPI&quot;,
	symbol   = &quot;DPI&quot;,
	utype    = &quot;length&quot;,
	scale    = 39.370078740157481,
	invert   = -1,
	iscomplex= true,
	default  = &quot;pitch&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;fathom&quot;] = {
	symbol   = &quot;fathom&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 1.8288,
	default  = &quot;ft m&quot;,
    },
    [&quot;foot&quot;] = {
	name1    = &quot;foot&quot;,
	name2    = &quot;foot&quot;,
	symbol   = &quot;ft&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.3048,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;in&quot;] = { 12, default = &quot;m&quot; } },
	link     = &quot;Foot (unit)&quot;,
    },
    [&quot;ft&quot;] = {
	name1    = &quot;foot&quot;,
	name2    = &quot;feet&quot;,
	symbol   = &quot;ft&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.3048,
	exception= &quot;integer_more_precision&quot;,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;in&quot;] = { 12, default = &quot;m&quot; } },
	link     = &quot;Foot (unit)&quot;,
    },
    [&quot;furlong&quot;] = {
	symbol   = &quot;furlong&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 201.168,
	default  = &quot;ft m&quot;,
    },
    [&quot;Gly&quot;] = {
	name1    = &quot;gigalight-year&quot;,
	symbol   = &quot;Gly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e24,
	default  = &quot;Mpc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;Gpc&quot;] = {
	name1    = &quot;gigaparsec&quot;,
	symbol   = &quot;Gpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e25,
	default  = &quot;Gly&quot;,
	link     = &quot;Parsec#Megaparsecs and gigaparsecs&quot;,
    },
    [&quot;hand&quot;] = {
	name1    = &quot;hand&quot;,
	symbol   = &quot;h&quot;,
	utype    = &quot;length&quot;,
	builtin  = &quot;hand&quot;,
	scale    = 0.1016,
	iscomplex= true,
	default  = &quot;in cm&quot;,
	link     = &quot;Hand (unit)&quot;,
    },
    [&quot;in&quot;] = {
	name1    = &quot;inch&quot;,
	name2    = &quot;inches&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0254,
	exception= &quot;subunit_more_precision&quot;,
	default  = &quot;mm&quot;,
    },
    [&quot;inabbreviated&quot;] = {
	name2    = &quot;in&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0254,
	default  = &quot;mm&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;kly&quot;] = {
	name1    = &quot;kilolight-year&quot;,
	symbol   = &quot;kly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e18,
	default  = &quot;pc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;kpc&quot;] = {
	name1    = &quot;kiloparsec&quot;,
	symbol   = &quot;kpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e19,
	default  = &quot;kly&quot;,
	link     = &quot;Parsec#Parsecs and kiloparsecs&quot;,
    },
    [&quot;LD&quot;] = {
	name1    = &quot;lunar distance&quot;,
	symbol   = &quot;LD&quot;,
	utype    = &quot;length&quot;,
	scale    = 384403000,
	default  = &quot;km mi&quot;,
	link     = &quot;Lunar distance (astronomy)&quot;,
    },
    [&quot;league&quot;] = {
	symbol   = &quot;league&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 4828.032,
	default  = &quot;km&quot;,
	link     = &quot;League (unit)&quot;,
    },
    [&quot;ly&quot;] = {
	name1    = &quot;light-year&quot;,
	symbol   = &quot;ly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e15,
	default  = &quot;AU&quot;,
    },
    [&quot;m&quot;] = {
	_name1   = &quot;metre&quot;,
	_name1_us= &quot;meter&quot;,
	_symbol  = &quot;m&quot;,
	utype    = &quot;length&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;v &gt; 0 and v &lt; 3 ! ftin ! ft&quot;,
	link     = &quot;Metre&quot;,
    },
    [&quot;mi&quot;] = {
	name1    = &quot;mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	subdivs  = { [&quot;ch&quot;] = { 80, default = &quot;km&quot; }, [&quot;chlk&quot;] = { 80, default = &quot;km&quot; }, [&quot;chain&quot;] = { 80, default = &quot;km&quot; }, [&quot;chainlk&quot;] = { 80, default = &quot;km&quot; }, [&quot;ft&quot;] = { 5280, default = &quot;km&quot; }, [&quot;furlong&quot;] = { 8, default = &quot;km&quot; }, [&quot;yd&quot;] = { 1760, default = &quot;km&quot; } },
    },
    [&quot;mil&quot;] = {
	symbol   = &quot;mil&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0000254,
	default  = &quot;mm&quot;,
	link     = &quot;Thousandth of an inch&quot;,
    },
    [&quot;Mly&quot;] = {
	name1    = &quot;megalight-year&quot;,
	symbol   = &quot;Mly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e21,
	default  = &quot;kpc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;Mpc&quot;] = {
	name1    = &quot;megaparsec&quot;,
	symbol   = &quot;Mpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e22,
	default  = &quot;Mly&quot;,
	link     = &quot;Parsec#Megaparsecs and gigaparsecs&quot;,
    },
    [&quot;NM&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;NM&quot;,
	utype    = &quot;length&quot;,
	scale    = 1852,
	default  = &quot;km mi&quot;,
    },
    [&quot;nmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1852,
	default  = &quot;km mi&quot;,
    },
    [&quot;oldUKnmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
    },
    [&quot;oldUSnmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
    },
    [&quot;pc&quot;] = {
	name1    = &quot;parsec&quot;,
	symbol   = &quot;pc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e16,
	default  = &quot;ly&quot;,
    },
    [&quot;perch&quot;] = {
	name2    = &quot;perches&quot;,
	symbol   = &quot;perch&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;pitch&quot;] = {
	name2    = &quot;m&quot;,
	symbol   = &quot;m&quot;,
	utype    = &quot;length&quot;,
	scale    = 1e-6,
	default  = &quot;dpi&quot;,
	defkey   = &quot;pitch&quot;,
	linkey   = &quot;pitch&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;pole&quot;] = {
	symbol   = &quot;pole&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;pre1954U.S.nmi&quot;] = {
	name1    = &quot;(pre-1954&amp;nbsp;U.S.) nautical mile&quot;,
	symbol   = &quot;(pre&amp;#8209;1954&amp;nbsp;U.S.) nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;pre1954USnmi&quot;] = {
	name1    = &quot;(pre-1954&amp;nbsp;US) nautical mile&quot;,
	name1_us = &quot;(pre-1954&amp;nbsp;U.S.) nautical mile&quot;,
	symbol   = &quot;(pre&amp;#8209;1954&amp;nbsp;US) nmi&quot;,
	sym_us   = &quot;(pre&amp;#8209;1954&amp;nbsp;U.S.) nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;rd&quot;] = {
	name1    = &quot;rod&quot;,
	symbol   = &quot;rd&quot;,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;royal cubit&quot;] = {
	name1    = &quot;royal cubit&quot;,
	symbol   = &quot;cu&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.524,
	default  = &quot;mm&quot;,
    },
    [&quot;rtkm&quot;] = {
	name1    = &quot;route kilometre&quot;,
	name1_us = &quot;route kilometer&quot;,
	symbol   = &quot;km&quot;,
	utype    = &quot;length&quot;,
	scale    = 1000,
	default  = &quot;mi&quot;,
	link     = &quot;Kilometre&quot;,
    },
    [&quot;rtmi&quot;] = {
	name1    = &quot;route mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	link     = &quot;Mile&quot;,
    },
    [&quot;shaku&quot;] = {
	name2    = &quot;shaku&quot;,
	symbol   = &quot;shaku&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.30303030303030304,
	default  = &quot;m&quot;,
	link     = &quot;Shaku (unit)&quot;,
    },
    [&quot;sm&quot;] = {
	name1    = &quot;smoot&quot;,
	symbol   = &quot;sm&quot;,
	utype    = &quot;length&quot;,
	scale    = 1.70180,
	default  = &quot;m&quot;,
	link     = &quot;Smoot (unit)&quot;,
    },
    [&quot;smi&quot;] = {
	name1    = &quot;statute mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	subdivs  = { [&quot;chain&quot;] = { 80, default = &quot;km&quot; } },
    },
    [&quot;solar radius&quot;] = {
	name1    = &quot;solar radius&quot;,
	name2    = &quot;solar radii&quot;,
	symbol   = &quot;''R''&lt;sub&gt;&lt;/sub&gt;&quot;,
	utype    = &quot;length&quot;,
	scale    = 695700e3,
	default  = &quot;km&quot;,
    },
    [&quot;sun&quot;] = {
	name2    = &quot;sun&quot;,
	symbol   = &quot;sun&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.030303030303030304,
	default  = &quot;mm&quot;,
	link     = &quot;Japanese units of measurement#Length&quot;,
    },
    [&quot;thou&quot;] = {
	name2    = &quot;thou&quot;,
	symbol   = &quot;thou&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0000254,
	default  = &quot;mm&quot;,
	link     = &quot;Thousandth of an inch&quot;,
    },
    [&quot;verst&quot;] = {
	symbol   = &quot;verst&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 1066.8,
	default  = &quot;km mi&quot;,
    },
    [&quot;yd&quot;] = {
	name1    = &quot;yard&quot;,
	symbol   = &quot;yd&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.9144,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 3, default = &quot;m&quot; } },
    },
    [&quot;in&quot;] = {
	name1    = &quot;microinch&quot;,
	name2    = &quot;microinches&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0000000254,
	default  = &quot;nm&quot;,
	link     = &quot;SI prefix#Non-SI units&quot;,
    },
    [&quot;&quot;] = {
	name1    = &quot;ngstrm&quot;,
	symbol   = &quot;&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0000000001,
	default  = &quot;in&quot;,
	link     = &quot;Angstrom&quot;,
    },
    [&quot;Hz&quot;] = {
	_name1   = &quot;hertz&quot;,
	_name2   = &quot;hertz&quot;,
	_symbol  = &quot;Hz&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.3356409519815204e-9,
	invert   = -1,
	iscomplex= true,
	prefixes = 1,
	default  = &quot;m&quot;,
	link     = &quot;Hertz&quot;,
    },
    [&quot;-ft-frac&quot;] = {
	target   = &quot;ft&quot;,
	link     = &quot;Fracture gradient&quot;,
    },
    [&quot;-in-stiff&quot;] = {
	target   = &quot;in&quot;,
	link     = &quot;Stiffness&quot;,
    },
    [&quot;-m-frac&quot;] = {
	target   = &quot;m&quot;,
	link     = &quot;Fracture gradient&quot;,
    },
    [&quot;-m-stiff&quot;] = {
	target   = &quot;m&quot;,
	link     = &quot;Stiffness&quot;,
    },
    [&quot;100km&quot;] = {
	target   = &quot;km&quot;,
	multiplier= 100,
    },
    [&quot;admiralty nmi&quot;] = {
	target   = &quot;oldUKnmi&quot;,
    },
    [&quot;angstrom&quot;] = {
	target   = &quot;&quot;,
    },
    [&quot;au&quot;] = {
	target   = &quot;AU&quot;,
	symbol   = &quot;au&quot;,
    },
    [&quot;feet&quot;] = {
	target   = &quot;ft&quot;,
    },
    [&quot;hands&quot;] = {
	target   = &quot;hand&quot;,
    },
    [&quot;inch&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;light-year&quot;] = {
	target   = &quot;ly&quot;,
    },
    [&quot;meter&quot;] = {
	target   = &quot;m&quot;,
	sp_us    = true,
    },
    [&quot;meters&quot;] = {
	target   = &quot;m&quot;,
	sp_us    = true,
    },
    [&quot;metre&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;metres&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;micrometre&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;micron&quot;] = {
	target   = &quot;m&quot;,
	default  = &quot;in&quot;,
    },
    [&quot;mile&quot;] = {
	target   = &quot;mi&quot;,
    },
    [&quot;miles&quot;] = {
	target   = &quot;mi&quot;,
    },
    [&quot;parsec&quot;] = {
	target   = &quot;pc&quot;,
    },
    [&quot;rod&quot;] = {
	target   = &quot;rd&quot;,
    },
    [&quot;smoot&quot;] = {
	target   = &quot;sm&quot;,
    },
    [&quot;uin&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;yard&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;yards&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;yds&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;in&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;dtex&quot;] = {
	name1    = &quot;decitex&quot;,
	name2    = &quot;decitex&quot;,
	symbol   = &quot;dtex&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1e-7,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Units of textile measurement#Tex&quot;,
    },
    [&quot;kg/cm&quot;] = {
	name1    = &quot;kilogram per centimetre&quot;,
	name1_us = &quot;kilogram per centimeter&quot;,
	name2    = &quot;kilograms per centimetre&quot;,
	name2_us = &quot;kilograms per centimeter&quot;,
	symbol   = &quot;kg/cm&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 100,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;kg/m&quot;] = {
	name1    = &quot;kilogram per metre&quot;,
	name1_us = &quot;kilogram per meter&quot;,
	name2    = &quot;kilograms per metre&quot;,
	name2_us = &quot;kilograms per meter&quot;,
	symbol   = &quot;kg/m&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;lb/ft&quot;] = {
	name1    = &quot;pound per foot&quot;,
	name2    = &quot;pounds per foot&quot;,
	symbol   = &quot;lb/ft&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1.4881639435695539,
	default  = &quot;kg/m&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;lb/yd&quot;] = {
	name1    = &quot;pound per yard&quot;,
	name2    = &quot;pounds per yard&quot;,
	symbol   = &quot;lb/yd&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 0.49605464785651798,
	default  = &quot;kg/m&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;G&quot;] = {
	_name1   = &quot;gauss&quot;,
	_name2   = &quot;gauss&quot;,
	_symbol  = &quot;G&quot;,
	utype    = &quot;magnetic field strength&quot;,
	scale    = 0.0001,
	prefixes = 1,
	default  = &quot;T&quot;,
	link     = &quot;Gauss (unit)&quot;,
    },
    [&quot;T&quot;] = {
	_name1   = &quot;tesla&quot;,
	_symbol  = &quot;T&quot;,
	utype    = &quot;magnetic field strength&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;G&quot;,
	link     = &quot;Tesla (unit)&quot;,
    },
    [&quot;A/m&quot;] = {
	name1    = &quot;ampere per metre&quot;,
	name1_us = &quot;ampere per meter&quot;,
	name2    = &quot;amperes per metre&quot;,
	name2_us = &quot;amperes per meter&quot;,
	symbol   = &quot;A/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1,
	default  = &quot;Oe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;kA/m&quot;] = {
	name1    = &quot;kiloampere per metre&quot;,
	name1_us = &quot;kiloampere per meter&quot;,
	name2    = &quot;kiloamperes per metre&quot;,
	name2_us = &quot;kiloamperes per meter&quot;,
	symbol   = &quot;kA/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1000,
	default  = &quot;kOe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;MA/m&quot;] = {
	name1    = &quot;megaampere per metre&quot;,
	name1_us = &quot;megaampere per meter&quot;,
	name2    = &quot;megaamperes per metre&quot;,
	name2_us = &quot;megaamperes per meter&quot;,
	symbol   = &quot;MA/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1e6,
	default  = &quot;kOe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;Oe&quot;] = {
	_name1   = &quot;oersted&quot;,
	_symbol  = &quot;Oe&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 79.5774715,
	prefixes = 1,
	default  = &quot;kA/m&quot;,
	link     = &quot;Oersted&quot;,
    },
    [&quot;-Lcwt&quot;] = {
	name1    = &quot;hundredweight&quot;,
	name2    = &quot;hundredweight&quot;,
	symbol   = &quot;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb&quot;,
    },
    [&quot;-Scwt&quot;] = {
	name1    = &quot;hundredweight&quot;,
	name2    = &quot;hundredweight&quot;,
	symbol   = &quot;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb&quot;,
    },
    [&quot;-ST&quot;] = {
	name1    = &quot;short ton&quot;,
	symbol   = &quot;ST&quot;,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;carat&quot;] = {
	symbol   = &quot;carat&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.0002,
	default  = &quot;g&quot;,
	link     = &quot;Carat (mass)&quot;,
    },
    [&quot;drachm&quot;] = {
	name1_us = &quot;dram&quot;,
	symbol   = &quot;drachm&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.001771845195,
	default  = &quot;g&quot;,
	link     = &quot;Dram (unit)&quot;,
    },
    [&quot;dram&quot;] = {
	target   = &quot;drachm&quot;,
    },
    [&quot;dwt&quot;] = {
	name1    = &quot;pennyweight&quot;,
	symbol   = &quot;dwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.00155517384,
	default  = &quot;oz g&quot;,
    },
    [&quot;DWton&quot;] = {
	symbol   = &quot;deadweight ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;DWtonne&quot;,
	link     = &quot;Tonnage&quot;,
    },
    [&quot;DWtonne&quot;] = {
	symbol   = &quot;deadweight tonne&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;DWton&quot;,
	link     = &quot;Tonnage&quot;,
    },
    [&quot;g&quot;] = {
	_name1   = &quot;gram&quot;,
	_symbol  = &quot;g&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;oz&quot;,
	link     = &quot;Gram&quot;,
    },
    [&quot;gr&quot;] = {
	name1    = &quot;grain&quot;,
	symbol   = &quot;gr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.00006479891,
	default  = &quot;g&quot;,
	link     = &quot;Grain (unit)&quot;,
    },
    [&quot;Gt&quot;] = {
	name1    = &quot;gigatonne&quot;,
	symbol   = &quot;Gt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;impgalh2o&quot;] = {
	name1    = &quot;imperial gallon of water&quot;,
	name2    = &quot;imperial gallons of water&quot;,
	symbol   = &quot;imp&amp;nbsp;gal H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;mass&quot;,
	scale    = 4.5359236999999499,
	default  = &quot;lb kg&quot;,
	link     = &quot;Imperial gallon&quot;,
    },
    [&quot;kt&quot;] = {
	name1    = &quot;kilotonne&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;lb&quot;] = {
	name1    = &quot;pound&quot;,
	symbol   = &quot;lb&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.45359237,
	exception= &quot;integer_more_precision&quot;,
	default  = &quot;kg&quot;,
	subdivs  = { [&quot;oz&quot;] = { 16, default = &quot;kg&quot; } },
	link     = &quot;Pound (mass)&quot;,
    },
    [&quot;Lcwt&quot;] = {
	name1    = &quot;long hundredweight&quot;,
	name2    = &quot;long hundredweight&quot;,
	symbol   = &quot;Lcwt&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb&quot;,
	subdivs  = { [&quot;qtr&quot;] = { 4, default = &quot;kg&quot; }, [&quot;st&quot;] = { 8, default = &quot;kg&quot; } },
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;long cwt&quot;] = {
	name1    = &quot;long hundredweight&quot;,
	name2    = &quot;long hundredweight&quot;,
	symbol   = &quot;long&amp;nbsp;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;qtr&quot;] = { 4, default = &quot;kg&quot; } },
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;long qtr&quot;] = {
	name1    = &quot;long quarter&quot;,
	symbol   = &quot;long&amp;nbsp;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 12.70058636,
	default  = &quot;lb kg&quot;,
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;LT&quot;] = {
	symbol   = &quot;long ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Lcwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Lcwt&quot; } },
    },
    [&quot;lt&quot;] = {
	name1    = &quot;long ton&quot;,
	symbol   = &quot;LT&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Lcwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Lcwt&quot; } },
    },
    [&quot;metric ton&quot;] = {
	symbol   = &quot;metric ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;long ton&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;MT&quot;] = {
	name1    = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;Mt&quot;] = {
	name1    = &quot;megatonne&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;oz&quot;] = {
	name1    = &quot;ounce&quot;,
	symbol   = &quot;oz&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.028349523125,
	default  = &quot;g&quot;,
    },
    [&quot;ozt&quot;] = {
	name1    = &quot;troy ounce&quot;,
	symbol   = &quot;ozt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.0311034768,
	default  = &quot;oz g&quot;,
    },
    [&quot;pdr&quot;] = {
	name1    = &quot;pounder&quot;,
	symbol   = &quot;pdr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.45359237,
	default  = &quot;kg&quot;,
	link     = &quot;Pound (mass)&quot;,
    },
    [&quot;qtr&quot;] = {
	name1    = &quot;quarter&quot;,
	symbol   = &quot;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 12.70058636,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;lb&quot;] = { 28, default = &quot;kg&quot; } },
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;Scwt&quot;] = {
	name1    = &quot;short hundredweight&quot;,
	name2    = &quot;short hundredweight&quot;,
	symbol   = &quot;Scwt&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb&quot;,
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;short cwt&quot;] = {
	name1    = &quot;short hundredweight&quot;,
	name2    = &quot;short hundredweight&quot;,
	symbol   = &quot;short&amp;nbsp;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb kg&quot;,
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;short qtr&quot;] = {
	name1    = &quot;short quarter&quot;,
	symbol   = &quot;short&amp;nbsp;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 11.33980925,
	default  = &quot;lb kg&quot;,
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;ST&quot;] = {
	symbol   = &quot;short ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Scwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Scwt&quot; } },
    },
    [&quot;shtn&quot;] = {
	name1    = &quot;short ton&quot;,
	symbol   = &quot;sh&amp;nbsp;tn&quot;,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;shton&quot;] = {
	symbol   = &quot;ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;solar mass&quot;] = {
	name1    = &quot;solar mass&quot;,
	name2    = &quot;solar masses&quot;,
	symbol   = &quot;''M''&lt;sub&gt;&lt;/sub&gt;&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1.98855e30,
	default  = &quot;kg&quot;,
    },
    [&quot;st&quot;] = {
	name1    = &quot;stone&quot;,
	name2    = &quot;stone&quot;,
	symbol   = &quot;st&quot;,
	utype    = &quot;mass&quot;,
	scale    = 6.35029318,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;lb&quot;] = { 14, default = &quot;kg lb&quot; } },
	link     = &quot;Stone (unit)&quot;,
    },
    [&quot;t&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;LT ST&quot;,
    },
    [&quot;tonne&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;shton&quot;,
    },
    [&quot;troy pound&quot;] = {
	symbol   = &quot;troy pound&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.3732417216,
	default  = &quot;lb kg&quot;,
	link     = &quot;Troy weight&quot;,
    },
    [&quot;usgalh2o&quot;] = {
	name1    = &quot;US gallon of water&quot;,
	name1_us = &quot;U.S. gallon of water&quot;,
	name2    = &quot;US gallons of water&quot;,
	name2_us = &quot;U.S. gallons of water&quot;,
	symbol   = &quot;US&amp;nbsp;gal H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;mass&quot;,
	scale    = 3.7776215836051126,
	default  = &quot;lb kg&quot;,
	link     = &quot;United States customary units#Fluid volume&quot;,
    },
    [&quot;viss&quot;] = {
	name2    = &quot;viss&quot;,
	symbol   = &quot;viss&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1.632932532,
	default  = &quot;kg&quot;,
	link     = &quot;Burmese units of measurement#mass&quot;,
    },
    [&quot;billion tonne&quot;] = {
	target   = &quot;e9t&quot;,
    },
    [&quot;kilogram&quot;] = {
	target   = &quot;kg&quot;,
    },
    [&quot;kilotonne&quot;] = {
	target   = &quot;kt&quot;,
    },
    [&quot;lbs&quot;] = {
	target   = &quot;lb&quot;,
    },
    [&quot;lbt&quot;] = {
	target   = &quot;troy pound&quot;,
    },
    [&quot;lcwt&quot;] = {
	target   = &quot;Lcwt&quot;,
    },
    [&quot;long ton&quot;] = {
	target   = &quot;LT&quot;,
    },
    [&quot;mcg&quot;] = {
	target   = &quot;g&quot;,
    },
    [&quot;million tonne&quot;] = {
	target   = &quot;e6t&quot;,
    },
    [&quot;scwt&quot;] = {
	target   = &quot;Scwt&quot;,
    },
    [&quot;short ton&quot;] = {
	target   = &quot;ST&quot;,
    },
    [&quot;stone&quot;] = {
	target   = &quot;st&quot;,
    },
    [&quot;thousand tonne&quot;] = {
	target   = &quot;e3t&quot;,
    },
    [&quot;tonnes&quot;] = {
	target   = &quot;t&quot;,
    },
    [&quot;kg/kW&quot;] = {
	name1    = &quot;kilogram per kilowatt&quot;,
	name2    = &quot;kilograms per kilowatt&quot;,
	symbol   = &quot;kg/kW&quot;,
	utype    = &quot;mass per unit power&quot;,
	scale    = 0.001,
	default  = &quot;lb/hp&quot;,
	link     = &quot;Kilowatt&quot;,
    },
    [&quot;lb/hp&quot;] = {
	name1    = &quot;pound per horsepower&quot;,
	name2    = &quot;pounds per horsepower&quot;,
	symbol   = &quot;lb/hp&quot;,
	utype    = &quot;mass per unit power&quot;,
	scale    = 0.00060827738784176115,
	default  = &quot;kg/kW&quot;,
	link     = &quot;Horsepower&quot;,
    },
    [&quot;kg/h&quot;] = {
	per      = { &quot;kg&quot;, &quot;h&quot; },
	utype    = &quot;mass per unit time&quot;,
	default  = &quot;lb/h&quot;,
    },
    [&quot;lb/h&quot;] = {
	per      = { &quot;lb&quot;, &quot;h&quot; },
	utype    = &quot;mass per unit time&quot;,
	default  = &quot;kg/h&quot;,
    },
    [&quot;g-mol/d&quot;] = {
	name1    = &quot;gram-mole per day&quot;,
	name2    = &quot;gram-moles per day&quot;,
	symbol   = &quot;g&amp;#8209;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/h&quot;] = {
	name1    = &quot;gram-mole per hour&quot;,
	name2    = &quot;gram-moles per hour&quot;,
	symbol   = &quot;g&amp;#8209;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/min&quot;] = {
	name1    = &quot;gram-mole per minute&quot;,
	name2    = &quot;gram-moles per minute&quot;,
	symbol   = &quot;g&amp;#8209;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;g-mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/s&quot;] = {
	name1    = &quot;gram-mole per second&quot;,
	name2    = &quot;gram-moles per second&quot;,
	symbol   = &quot;g&amp;#8209;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lb-mol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/d&quot;] = {
	name1    = &quot;gram-mole per day&quot;,
	name2    = &quot;gram-moles per day&quot;,
	symbol   = &quot;gmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/h&quot;] = {
	name1    = &quot;gram-mole per hour&quot;,
	name2    = &quot;gram-moles per hour&quot;,
	symbol   = &quot;gmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/min&quot;] = {
	name1    = &quot;gram-mole per minute&quot;,
	name2    = &quot;gram-moles per minute&quot;,
	symbol   = &quot;gmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;gmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/s&quot;] = {
	name1    = &quot;gram-mole per second&quot;,
	name2    = &quot;gram-moles per second&quot;,
	symbol   = &quot;gmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lbmol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/d&quot;] = {
	name1    = &quot;kilomole per day&quot;,
	name2    = &quot;kilomoles per day&quot;,
	symbol   = &quot;kmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.011574074074074073,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/h&quot;] = {
	name1    = &quot;kilomole per hour&quot;,
	name2    = &quot;kilomoles per hour&quot;,
	symbol   = &quot;kmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/min&quot;] = {
	name1    = &quot;kilomole per minute&quot;,
	name2    = &quot;kilomoles per minute&quot;,
	symbol   = &quot;kmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 16.666666666666668,
	default  = &quot;mol/s&quot;,
	link     = &quot;Kilomole (unit)&quot;,
    },
    [&quot;kmol/s&quot;] = {
	name1    = &quot;kilomole per second&quot;,
	name2    = &quot;kilomoles per second&quot;,
	symbol   = &quot;kmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1000,
	default  = &quot;lb-mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;lb-mol/d&quot;] = {
	name1    = &quot;pound-mole per day&quot;,
	name2    = &quot;pound-moles per day&quot;,
	symbol   = &quot;lb&amp;#8209;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.0052499116898148141,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/h&quot;] = {
	name1    = &quot;pound-mole per hour&quot;,
	name2    = &quot;pound-moles per hour&quot;,
	symbol   = &quot;lb&amp;#8209;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.12599788055555555,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/min&quot;] = {
	name1    = &quot;pound-mole per minute&quot;,
	name2    = &quot;pound-moles per minute&quot;,
	symbol   = &quot;lb&amp;#8209;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 7.5598728333333334,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/s&quot;] = {
	name1    = &quot;pound-mole per second&quot;,
	name2    = &quot;pound-moles per second&quot;,
	symbol   = &quot;lb&amp;#8209;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 453.59237,
	default  = &quot;kmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/d&quot;] = {
	name1    = &quot;pound-mole per day&quot;,
	name2    = &quot;pound-moles per day&quot;,
	symbol   = &quot;lbmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.0052499116898148141,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/h&quot;] = {
	name1    = &quot;pound-mole per hour&quot;,
	name2    = &quot;pound-moles per hour&quot;,
	symbol   = &quot;lbmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.12599788055555555,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/min&quot;] = {
	name1    = &quot;pound-mole per minute&quot;,
	name2    = &quot;pound-moles per minute&quot;,
	symbol   = &quot;lbmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 7.5598728333333334,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/s&quot;] = {
	name1    = &quot;pound-mole per second&quot;,
	name2    = &quot;pound-moles per second&quot;,
	symbol   = &quot;lbmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 453.59237,
	default  = &quot;kmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;mmol/s&quot;] = {
	name1    = &quot;millimole per second&quot;,
	name2    = &quot;millimoles per second&quot;,
	symbol   = &quot;mmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.001,
	default  = &quot;lb-mol/d&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/d&quot;] = {
	name1    = &quot;mole per day&quot;,
	name2    = &quot;moles per day&quot;,
	symbol   = &quot;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/h&quot;] = {
	name1    = &quot;mole per hour&quot;,
	name2    = &quot;moles per hour&quot;,
	symbol   = &quot;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/min&quot;] = {
	name1    = &quot;mole per minute&quot;,
	name2    = &quot;moles per minute&quot;,
	symbol   = &quot;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/s&quot;] = {
	name1    = &quot;mole per second&quot;,
	name2    = &quot;moles per second&quot;,
	symbol   = &quot;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lb-mol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/s&quot;] = {
	name1    = &quot;micromole per second&quot;,
	name2    = &quot;micromoles per second&quot;,
	symbol   = &quot;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.000001,
	default  = &quot;lb-mol/d&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;umol/s&quot;] = {
	target   = &quot;mol/s&quot;,
    },
    [&quot;mol/s&quot;] = {
	target   = &quot;mol/s&quot;,
    },
    [&quot;/acre&quot;] = {
	name1    = &quot;per acre&quot;,
	name2    = &quot;per acre&quot;,
	symbol   = &quot;/acre&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 0.00024710538146716532,
	default  = &quot;/ha&quot;,
	link     = &quot;Acre&quot;,
    },
    [&quot;/ha&quot;] = {
	name1    = &quot;per hectare&quot;,
	name2    = &quot;per hectare&quot;,
	symbol   = &quot;/ha&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 100e-6,
	default  = &quot;/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;/sqcm&quot;] = {
	name1    = &quot;per square centimetre&quot;,
	name1_us = &quot;per square centimeter&quot;,
	name2    = &quot;per square centimetre&quot;,
	name2_us = &quot;per square centimeter&quot;,
	symbol   = &quot;/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e4,
	default  = &quot;/sqin&quot;,
	link     = &quot;Square centimetre&quot;,
    },
    [&quot;/sqin&quot;] = {
	name1    = &quot;per square inch&quot;,
	name2    = &quot;per square inch&quot;,
	symbol   = &quot;/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1550.0031000062002,
	default  = &quot;/sqcm&quot;,
	link     = &quot;Square inch&quot;,
    },
    [&quot;/sqkm&quot;] = {
	name1    = &quot;per square kilometre&quot;,
	name1_us = &quot;per square kilometer&quot;,
	name2    = &quot;per square kilometre&quot;,
	name2_us = &quot;per square kilometer&quot;,
	symbol   = &quot;/km&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e-6,
	default  = &quot;/sqmi&quot;,
	link     = &quot;Square kilometre&quot;,
    },
    [&quot;/sqmi&quot;] = {
	name1    = &quot;per square mile&quot;,
	name2    = &quot;per square mile&quot;,
	symbol   = &quot;/sq&amp;nbsp;mi&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 3.8610215854244582e-7,
	default  = &quot;/sqkm&quot;,
	link     = &quot;Square mile&quot;,
    },
    [&quot;PD/acre&quot;] = {
	name1    = &quot;inhabitant per acre&quot;,
	name2    = &quot;inhabitants per acre&quot;,
	symbol   = &quot;/acre&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 0.00024710538146716532,
	default  = &quot;PD/ha&quot;,
	link     = &quot;Acre&quot;,
    },
    [&quot;PD/ha&quot;] = {
	name1    = &quot;inhabitant per hectare&quot;,
	name2    = &quot;inhabitants per hectare&quot;,
	symbol   = &quot;/ha&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 100e-6,
	default  = &quot;PD/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;PD/sqkm&quot;] = {
	name1    = &quot;inhabitant per square kilometre&quot;,
	name1_us = &quot;inhabitant per square kilometer&quot;,
	name2    = &quot;inhabitants per square kilometre&quot;,
	name2_us = &quot;inhabitants per square kilometer&quot;,
	symbol   = &quot;/km&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e-6,
	default  = &quot;PD/sqmi&quot;,
	link     = &quot;Square kilometre&quot;,
    },
    [&quot;PD/sqmi&quot;] = {
	name1    = &quot;inhabitant per square mile&quot;,
	name2    = &quot;inhabitants per square mile&quot;,
	symbol   = &quot;/sq&amp;nbsp;mi&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 3.8610215854244582e-7,
	default  = &quot;PD/sqkm&quot;,
	link     = &quot;Square mile&quot;,
    },
    [&quot;/cm2&quot;] = {
	target   = &quot;/sqcm&quot;,
    },
    [&quot;/in2&quot;] = {
	target   = &quot;/sqin&quot;,
    },
    [&quot;/km2&quot;] = {
	target   = &quot;/sqkm&quot;,
    },
    [&quot;pd/acre&quot;] = {
	target   = &quot;PD/acre&quot;,
    },
    [&quot;pd/ha&quot;] = {
	target   = &quot;PD/ha&quot;,
    },
    [&quot;PD/km2&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/km2&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;PD/km&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/sqkm&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/sqmi&quot;] = {
	target   = &quot;PD/sqmi&quot;,
    },
    [&quot;/l&quot;] = {
	name1    = &quot;per litre&quot;,
	name1_us = &quot;per liter&quot;,
	name2    = &quot;per litre&quot;,
	name2_us = &quot;per liter&quot;,
	symbol   = &quot;/l&quot;,
	utype    = &quot;per unit volume&quot;,
	scale    = 1000,
	default  = &quot;/usgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;/USgal&quot;] = {
	name1    = &quot;per gallon&quot;,
	name2    = &quot;per gallon&quot;,
	symbol   = &quot;/gal&quot;,
	utype    = &quot;per unit volume&quot;,
	scale    = 264.172052,
	default  = &quot;/l&quot;,
	link     = &quot;US gallon&quot;,
	customary= 2,
    },
    [&quot;/usgal&quot;] = {
	target   = &quot;/USgal&quot;,
    },
    [&quot;bhp&quot;] = {
	name1    = &quot;brake horsepower&quot;,
	name2    = &quot;brake horsepower&quot;,
	symbol   = &quot;bhp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Brake horsepower&quot;,
    },
    [&quot;Cal/d&quot;] = {
	name1    = &quot;large calorie per day&quot;,
	name2    = &quot;large calories per day&quot;,
	symbol   = &quot;Cal/d&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.048425925925925928,
	default  = &quot;kJ/d&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal/h&quot;] = {
	name1    = &quot;large calorie per hour&quot;,
	name2    = &quot;large calories per hour&quot;,
	symbol   = &quot;Cal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 1.1622222222222223,
	default  = &quot;kJ/h&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal/h&quot;] = {
	name1    = &quot;calorie per hour&quot;,
	name2    = &quot;calories per hour&quot;,
	symbol   = &quot;cal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.0011622222222222223,
	default  = &quot;W&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;CV&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;CV&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;hk&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;hk&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;hp&quot;] = {
	name1    = &quot;horsepower&quot;,
	name2    = &quot;horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
    },
    [&quot;hp-electric&quot;] = {
	name1    = &quot;electric horsepower&quot;,
	name2    = &quot;electric horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 746,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Electrical horsepower&quot;,
    },
    [&quot;hp-electrical&quot;] = {
	name1    = &quot;electrical horsepower&quot;,
	name2    = &quot;electrical horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 746,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Electrical horsepower&quot;,
    },
    [&quot;hp-metric&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;ihp&quot;] = {
	name1    = &quot;indicated horsepower&quot;,
	name2    = &quot;indicated horsepower&quot;,
	symbol   = &quot;ihp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Indicated horsepower&quot;,
    },
    [&quot;kcal/h&quot;] = {
	name1    = &quot;kilocalorie per hour&quot;,
	name2    = &quot;kilocalories per hour&quot;,
	symbol   = &quot;kcal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 1.1622222222222223,
	default  = &quot;kW&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kJ/d&quot;] = {
	name1    = &quot;kilojoule per day&quot;,
	name2    = &quot;kilojoules per day&quot;,
	symbol   = &quot;kJ/d&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.011574074074074073,
	default  = &quot;Cal/d&quot;,
	link     = &quot;Kilojoule&quot;,
    },
    [&quot;kJ/h&quot;] = {
	name1    = &quot;kilojoule per hour&quot;,
	name2    = &quot;kilojoules per hour&quot;,
	symbol   = &quot;kJ/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;W&quot;,
	link     = &quot;Kilojoule&quot;,
    },
    [&quot;PS&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;PS&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;shp&quot;] = {
	name1    = &quot;shaft horsepower&quot;,
	name2    = &quot;shaft horsepower&quot;,
	symbol   = &quot;shp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Shaft horsepower&quot;,
    },
    [&quot;W&quot;] = {
	_name1   = &quot;watt&quot;,
	_symbol  = &quot;W&quot;,
	utype    = &quot;power&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;hp&quot;,
	link     = &quot;Watt&quot;,
    },
    [&quot;BTU/h&quot;] = {
	per      = { &quot;BTU&quot;, &quot;h&quot; },
	utype    = &quot;power&quot;,
	default  = &quot;W&quot;,
    },
    [&quot;Btu/h&quot;] = {
	per      = { &quot;Btu&quot;, &quot;h&quot; },
	utype    = &quot;power&quot;,
	default  = &quot;W&quot;,
    },
    [&quot;BHP&quot;] = {
	target   = &quot;bhp&quot;,
    },
    [&quot;btu/h&quot;] = {
	target   = &quot;BTU/h&quot;,
    },
    [&quot;HP&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;Hp&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;hp-mechanical&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;IHP&quot;] = {
	target   = &quot;ihp&quot;,
    },
    [&quot;SHP&quot;] = {
	target   = &quot;shp&quot;,
    },
    [&quot;whp&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;hp/lb&quot;] = {
	name1    = &quot;horsepower per pound&quot;,
	name2    = &quot;horsepower per pound&quot;,
	symbol   = &quot;hp/lb&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1643.986806,
	default  = &quot;kW/kg&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/LT&quot;] = {
	name1    = &quot;horsepower per long ton&quot;,
	name2    = &quot;horsepower per long ton&quot;,
	symbol   = &quot;hp/LT&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.73392268125000004,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/ST&quot;] = {
	name1    = &quot;horsepower per short ton&quot;,
	name2    = &quot;horsepower per short ton&quot;,
	symbol   = &quot;hp/ST&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.821993403,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/t&quot;] = {
	name1    = &quot;horsepower per tonne&quot;,
	name2    = &quot;horsepower per tonne&quot;,
	symbol   = &quot;hp/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.74569987158227022,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;kW/kg&quot;] = {
	name1    = &quot;kilowatt per kilogram&quot;,
	name2    = &quot;kilowatts per kilogram&quot;,
	symbol   = &quot;kW/kg&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1000,
	default  = &quot;hp/lb&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;kW/t&quot;] = {
	name1    = &quot;kilowatt per tonne&quot;,
	name2    = &quot;kilowatts per tonne&quot;,
	symbol   = &quot;kW/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1,
	default  = &quot;PS/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;PS/t&quot;] = {
	name1    = &quot;metric horsepower per tonne&quot;,
	name2    = &quot;metric horsepower per tonne&quot;,
	symbol   = &quot;PS/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.73549875,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;shp/lb&quot;] = {
	name1    = &quot;shaft horsepower per pound&quot;,
	name2    = &quot;shaft horsepower per pound&quot;,
	symbol   = &quot;shp/lb&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1643.986806,
	default  = &quot;kW/kg&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/tonne&quot;] = {
	target   = &quot;hp/t&quot;,
	symbol   = &quot;hp/tonne&quot;,
	default  = &quot;kW/tonne&quot;,
    },
    [&quot;kW/tonne&quot;] = {
	target   = &quot;kW/t&quot;,
	symbol   = &quot;kW/tonne&quot;,
    },
    [&quot;-lb/in2&quot;] = {
	name1    = &quot;pound per square inch&quot;,
	name2    = &quot;pounds per square inch&quot;,
	symbol   = &quot;lb/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa kgf/cm2&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;atm&quot;] = {
	name1    = &quot;standard atmosphere&quot;,
	symbol   = &quot;atm&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 101325,
	default  = &quot;kPa&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Ba&quot;] = {
	name1    = &quot;barye&quot;,
	symbol   = &quot;Ba&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 0.1,
	default  = &quot;Pa&quot;,
    },
    [&quot;bar&quot;] = {
	symbol   = &quot;bar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100000,
	default  = &quot;kPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;dbar&quot;] = {
	name1    = &quot;decibar&quot;,
	symbol   = &quot;dbar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 10000,
	default  = &quot;kPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;inHg&quot;] = {
	name1    = &quot;inch of mercury&quot;,
	name2    = &quot;inches of mercury&quot;,
	symbol   = &quot;inHg&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 3386.388640341,
	default  = &quot;kPa&quot;,
    },
    [&quot;kBa&quot;] = {
	name1    = &quot;kilobarye&quot;,
	symbol   = &quot;kBa&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Barye&quot;,
    },
    [&quot;kg-f/cm2&quot;] = {
	name1    = &quot;kilogram-force per square centimetre&quot;,
	name1_us = &quot;kilogram-force per square centimeter&quot;,
	name2    = &quot;kilograms-force per square centimetre&quot;,
	name2_us = &quot;kilograms-force per square centimeter&quot;,
	symbol   = &quot;kg&lt;sub&gt;f&lt;/sub&gt;/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;kg/cm2&quot;] = {
	name1    = &quot;kilogram per square centimetre&quot;,
	name1_us = &quot;kilogram per square centimeter&quot;,
	name2    = &quot;kilograms per square centimetre&quot;,
	name2_us = &quot;kilograms per square centimeter&quot;,
	symbol   = &quot;kg/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;kgf/cm2&quot;] = {
	name1    = &quot;kilogram-force per square centimetre&quot;,
	name1_us = &quot;kilogram-force per square centimeter&quot;,
	name2    = &quot;kilograms-force per square centimetre&quot;,
	name2_us = &quot;kilograms-force per square centimeter&quot;,
	symbol   = &quot;kgf/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;ksi&quot;] = {
	name1    = &quot;kilopound per square inch&quot;,
	name2    = &quot;kilopounds per square inch&quot;,
	symbol   = &quot;ksi&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894757.2931683613,
	default  = &quot;MPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;lbf/in2&quot;] = {
	name1    = &quot;pound-force per square inch&quot;,
	name2    = &quot;pounds-force per square inch&quot;,
	symbol   = &quot;lbf/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa kgf/cm2&quot;,
	link     = &quot;Pounds-force per square inch&quot;,
    },
    [&quot;mb&quot;] = {
	name1    = &quot;millibar&quot;,
	symbol   = &quot;mb&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;mbar&quot;] = {
	name1    = &quot;millibar&quot;,
	symbol   = &quot;mbar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;mmHg&quot;] = {
	name1    = &quot;millimetre of mercury&quot;,
	name1_us = &quot;millimeter of mercury&quot;,
	name2    = &quot;millimetres of mercury&quot;,
	name2_us = &quot;millimeters of mercury&quot;,
	symbol   = &quot;mmHg&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 133.322387415,
	default  = &quot;kPa&quot;,
	link     = &quot;Millimeter of mercury&quot;,
    },
    [&quot;Pa&quot;] = {
	_name1   = &quot;pascal&quot;,
	_symbol  = &quot;Pa&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;psi&quot;,
	link     = &quot;Pascal (unit)&quot;,
    },
    [&quot;psf&quot;] = {
	name1    = &quot;pound per square foot&quot;,
	name2    = &quot;pounds per square foot&quot;,
	symbol   = &quot;psf&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 47.880258980335839,
	default  = &quot;kPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;psi&quot;] = {
	name1    = &quot;pound per square inch&quot;,
	name2    = &quot;pounds per square inch&quot;,
	symbol   = &quot;psi&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;Torr&quot;] = {
	name1    = &quot;torr&quot;,
	symbol   = &quot;Torr&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 133.32236842105263,
	default  = &quot;kPa&quot;,
    },
    [&quot;N/cm2&quot;] = {
	per      = { &quot;N&quot;, &quot;cm2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;psi&quot;,
    },
    [&quot;N/m2&quot;] = {
	per      = { &quot;N&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;psi&quot;,
    },
    [&quot;g/cm2&quot;] = {
	per      = { &quot;g&quot;, &quot;cm2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;g/m2&quot;] = {
	per      = { &quot;g&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;kg/ha&quot;] = {
	per      = { &quot;kg&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;kg/m2&quot;] = {
	per      = { &quot;kg&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/1000sqft&quot;] = {
	per      = { &quot;lb&quot;, &quot;1000sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/acre&quot;] = {
	per      = { &quot;lb&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/sqft&quot;] = {
	per      = { &quot;lb&quot;, &quot;sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/sqyd&quot;] = {
	per      = { &quot;lb&quot;, &quot;sqyd&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;LT/acre&quot;] = {
	per      = { &quot;LT&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;t/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;MT/ha&quot;] = {
	per      = { &quot;MT&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;LT/acre ST/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;oz/sqft&quot;] = {
	per      = { &quot;oz&quot;, &quot;sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;oz/sqyd&quot;] = {
	per      = { &quot;oz&quot;, &quot;sqyd&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;ST/acre&quot;] = {
	per      = { &quot;ST&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;t/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;t/ha&quot;] = {
	per      = { &quot;t&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;LT/acre ST/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;tonne/acre&quot;] = {
	per      = { &quot;tonne&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;tonne/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;tonne/ha&quot;] = {
	per      = { &quot;tonne&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;tonne/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;kgfpsqcm&quot;] = {
	target   = &quot;kgf/cm2&quot;,
    },
    [&quot;kgpsqcm&quot;] = {
	target   = &quot;kg/cm2&quot;,
    },
    [&quot;kN/m2&quot;] = {
	target   = &quot;kPa&quot;,
    },
    [&quot;lb/in2&quot;] = {
	target   = &quot;lbf/in2&quot;,
    },
    [&quot;torr&quot;] = {
	target   = &quot;Torr&quot;,
    },
    [&quot;Bq&quot;] = {
	_name1   = &quot;becquerel&quot;,
	_symbol  = &quot;Bq&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;pCi&quot;,
	link     = &quot;Becquerel&quot;,
    },
    [&quot;Ci&quot;] = {
	_name1   = &quot;curie&quot;,
	_symbol  = &quot;Ci&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 3.7e10,
	prefixes = 1,
	default  = &quot;GBq&quot;,
	link     = &quot;Curie&quot;,
    },
    [&quot;Rd&quot;] = {
	_name1   = &quot;rutherford&quot;,
	_symbol  = &quot;Rd&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 1e6,
	prefixes = 1,
	default  = &quot;MBq&quot;,
	link     = &quot;Rutherford (unit)&quot;,
    },
    [&quot;cm/h&quot;] = {
	name1    = &quot;centimetre per hour&quot;,
	name1_us = &quot;centimeter per hour&quot;,
	name2    = &quot;centimetres per hour&quot;,
	name2_us = &quot;centimeters per hour&quot;,
	symbol   = &quot;cm/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.7777777777777775e-6,
	default  = &quot;in/h&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;cm/s&quot;] = {
	name1    = &quot;centimetre per second&quot;,
	name1_us = &quot;centimeter per second&quot;,
	name2    = &quot;centimetres per second&quot;,
	name2_us = &quot;centimeters per second&quot;,
	symbol   = &quot;cm/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.01,
	default  = &quot;in/s&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;cm/year&quot;] = {
	name1    = &quot;centimetre per year&quot;,
	name1_us = &quot;centimeter per year&quot;,
	name2    = &quot;centimetres per year&quot;,
	name2_us = &quot;centimeters per year&quot;,
	symbol   = &quot;cm/year&quot;,
	utype    = &quot;speed&quot;,
	scale    = 3.168873850681143e-10,
	default  = &quot;in/year&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;foot/s&quot;] = {
	name1    = &quot;foot per second&quot;,
	name2    = &quot;foot per second&quot;,
	symbol   = &quot;ft/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.3048,
	default  = &quot;m/s&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;ft/min&quot;] = {
	name1    = &quot;foot per minute&quot;,
	name2    = &quot;feet per minute&quot;,
	symbol   = &quot;ft/min&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.00508,
	default  = &quot;m/min&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;ft/s&quot;] = {
	name1    = &quot;foot per second&quot;,
	name2    = &quot;feet per second&quot;,
	symbol   = &quot;ft/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.3048,
	default  = &quot;m/s&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;furlong per fortnight&quot;] = {
	name2    = &quot;furlongs per fortnight&quot;,
	symbol   = &quot;furlong per fortnight&quot;,
	usename  = 1,
	utype    = &quot;speed&quot;,
	scale    = 0.00016630952380952381,
	default  = &quot;km/h mph&quot;,
	link     = &quot;FFF System&quot;,
    },
    [&quot;in/h&quot;] = {
	name1    = &quot;inch per hour&quot;,
	name2    = &quot;inches per hour&quot;,
	symbol   = &quot;in/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 7.0555555555555559e-6,
	default  = &quot;cm/h&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;in/s&quot;] = {
	name1    = &quot;inch per second&quot;,
	name2    = &quot;inches per second&quot;,
	symbol   = &quot;in/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.0254,
	default  = &quot;cm/s&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;in/year&quot;] = {
	name1    = &quot;inch per year&quot;,
	name2    = &quot;inches per year&quot;,
	symbol   = &quot;in/year&quot;,
	utype    = &quot;speed&quot;,
	scale    = 8.0489395807301024e-10,
	default  = &quot;cm/year&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;isp&quot;] = {
	name1    = &quot;second&quot;,
	symbol   = &quot;s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 9.80665,
	default  = &quot;km/s&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;km/d&quot;] = {
	name1    = &quot;kilometre per day&quot;,
	name1_us = &quot;kilometer per day&quot;,
	name2    = &quot;kilometres per day&quot;,
	name2_us = &quot;kilometers per day&quot;,
	symbol   = &quot;km/d&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1.1574074074074074e-2,
	default  = &quot;mi/d&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;km/h&quot;] = {
	name1    = &quot;kilometre per hour&quot;,
	name1_us = &quot;kilometer per hour&quot;,
	name2    = &quot;kilometres per hour&quot;,
	name2_us = &quot;kilometers per hour&quot;,
	symbol   = &quot;km/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mph&quot;,
	link     = &quot;Kilometres per hour&quot;,
    },
    [&quot;km/s&quot;] = {
	name1    = &quot;kilometre per second&quot;,
	name1_us = &quot;kilometer per second&quot;,
	name2    = &quot;kilometres per second&quot;,
	name2_us = &quot;kilometers per second&quot;,
	symbol   = &quot;km/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1000,
	default  = &quot;mi/s&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;kn&quot;] = {
	name1    = &quot;knot&quot;,
	symbol   = &quot;kn&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.51444444444444448,
	default  = &quot;km/h mph&quot;,
	link     = &quot;Knot (unit)&quot;,
    },
    [&quot;kNs/kg&quot;] = {
	name2    = &quot;kN&amp;#8209;s/kg&quot;,
	symbol   = &quot;kN&amp;#8209;s/kg&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1000,
	default  = &quot;isp&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;m/min&quot;] = {
	name1    = &quot;metre per minute&quot;,
	name1_us = &quot;meter per minute&quot;,
	name2    = &quot;metres per minute&quot;,
	name2_us = &quot;meters per minute&quot;,
	symbol   = &quot;m/min&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;ft/min&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;m/s&quot;] = {
	name1    = &quot;metre per second&quot;,
	name1_us = &quot;meter per second&quot;,
	name2    = &quot;metres per second&quot;,
	name2_us = &quot;meters per second&quot;,
	symbol   = &quot;m/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1,
	default  = &quot;ft/s&quot;,
    },
    [&quot;Mach&quot;] = {
	name2    = &quot;Mach&quot;,
	symbol   = &quot;Mach&quot;,
	utype    = &quot;speed&quot;,
	builtin  = &quot;mach&quot;,
	scale    = 0,
	iscomplex= true,
	default  = &quot;km/h mph&quot;,
	link     = &quot;Mach number&quot;,
    },
    [&quot;mi/d&quot;] = {
	name1    = &quot;mile per day&quot;,
	name2    = &quot;miles per day&quot;,
	symbol   = &quot;mi/d&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1.8626666666666667e-2,
	default  = &quot;km/d&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;mi/s&quot;] = {
	name1    = &quot;mile per second&quot;,
	name2    = &quot;miles per second&quot;,
	symbol   = &quot;mi/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1609.344,
	default  = &quot;km/s&quot;,
	link     = &quot;Mile&quot;,
    },
    [&quot;mm/h&quot;] = {
	name1    = &quot;millimetre per hour&quot;,
	name1_us = &quot;millimeter per hour&quot;,
	name2    = &quot;millimetres per hour&quot;,
	name2_us = &quot;millimeters per hour&quot;,
	symbol   = &quot;mm/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.7777777777777781e-7,
	default  = &quot;in/h&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;mph&quot;] = {
	name1    = &quot;mile per hour&quot;,
	name2    = &quot;miles per hour&quot;,
	symbol   = &quot;mph&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.44704,
	default  = &quot;km/h&quot;,
	link     = &quot;Miles per hour&quot;,
    },
    [&quot;Ns/kg&quot;] = {
	name2    = &quot;N&amp;#8209;s/kg&quot;,
	symbol   = &quot;N&amp;#8209;s/kg&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1,
	default  = &quot;isp&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;si tsfc&quot;] = {
	name2    = &quot;g/(kNs)&quot;,
	symbol   = &quot;g/(kNs)&quot;,
	utype    = &quot;speed&quot;,
	scale    = 9.9999628621379242e-7,
	invert   = -1,
	iscomplex= true,
	default  = &quot;tsfc&quot;,
	link     = &quot;Thrust specific fuel consumption&quot;,
    },
    [&quot;tsfc&quot;] = {
	name2    = &quot;lb/(lbfh)&quot;,
	symbol   = &quot;lb/(lbfh)&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.832545036049801e-5,
	invert   = -1,
	iscomplex= true,
	default  = &quot;si tsfc&quot;,
	link     = &quot;Thrust specific fuel consumption&quot;,
    },
    [&quot;cm/y&quot;] = {
	target   = &quot;cm/year&quot;,
    },
    [&quot;cm/yr&quot;] = {
	target   = &quot;cm/year&quot;,
    },
    [&quot;in/y&quot;] = {
	target   = &quot;in/year&quot;,
    },
    [&quot;in/yr&quot;] = {
	target   = &quot;in/year&quot;,
    },
    [&quot;knot&quot;] = {
	target   = &quot;kn&quot;,
    },
    [&quot;knots&quot;] = {
	target   = &quot;kn&quot;,
    },
    [&quot;kph&quot;] = {
	target   = &quot;km/h&quot;,
    },
    [&quot;mi/h&quot;] = {
	target   = &quot;mph&quot;,
    },
    [&quot;mm/s&quot;] = {
	per      = { &quot;mm&quot;, &quot;s&quot; },
	utype    = &quot;speed&quot;,
	default  = &quot;in/s&quot;,
	link     = &quot;metre per second&quot;,
    },
    [&quot;C&quot;] = {
	name1    = &quot;degree Celsius&quot;,
	name2    = &quot;degrees Celsius&quot;,
	symbol   = &quot;C&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 1,
	offset   = -273.15,
	iscomplex= true,
	istemperature= true,
	default  = &quot;F&quot;,
	link     = &quot;Celsius&quot;,
    },
    [&quot;F&quot;] = {
	name1    = &quot;degree Fahrenheit&quot;,
	name2    = &quot;degrees Fahrenheit&quot;,
	symbol   = &quot;F&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 0.55555555555555558,
	offset   = 32-273.15*(9/5),
	iscomplex= true,
	istemperature= true,
	default  = &quot;C&quot;,
	link     = &quot;Fahrenheit&quot;,
    },
    [&quot;K&quot;] = {
	_name1   = &quot;kelvin&quot;,
	_symbol  = &quot;K&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 1,
	offset   = 0,
	iscomplex= true,
	istemperature= true,
	prefixes = 1,
	default  = &quot;C F&quot;,
	link     = &quot;Kelvin&quot;,
    },
    [&quot;keVT&quot;] = {
	name1    = &quot;kiloelectronvolt&quot;,
	symbol   = &quot;keV&quot;,
	utype    = &quot;temperature&quot;,
	scale    = 11.604505e6,
	offset   = 0,
	iscomplex= true,
	default  = &quot;MK&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;R&quot;] = {
	name1    = &quot;degree Rankine&quot;,
	name2    = &quot;degrees Rankine&quot;,
	symbol   = &quot;R&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 0.55555555555555558,
	offset   = 0,
	iscomplex= true,
	istemperature= true,
	default  = &quot;K F C&quot;,
	link     = &quot;Rankine scale&quot;,
    },
    [&quot;Celsius&quot;] = {
	target   = &quot;C&quot;,
    },
    [&quot;C&quot;] = {
	target   = &quot;C&quot;,
    },
    [&quot;F&quot;] = {
	target   = &quot;F&quot;,
    },
    [&quot;R&quot;] = {
	target   = &quot;R&quot;,
    },
    [&quot;C-change&quot;] = {
	name1    = &quot;degree Celsius change&quot;,
	name2    = &quot;degrees Celsius change&quot;,
	symbol   = &quot;C&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 1,
	default  = &quot;F-change&quot;,
	link     = &quot;Celsius&quot;,
    },
    [&quot;F-change&quot;] = {
	name1    = &quot;degree Fahrenheit change&quot;,
	name2    = &quot;degrees Fahrenheit change&quot;,
	symbol   = &quot;F&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 0.55555555555555558,
	default  = &quot;C-change&quot;,
	link     = &quot;Fahrenheit&quot;,
    },
    [&quot;K-change&quot;] = {
	name1    = &quot;kelvin change&quot;,
	name2    = &quot;kelvins change&quot;,
	symbol   = &quot;K&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 1,
	default  = &quot;F-change&quot;,
	link     = &quot;Kelvin&quot;,
    },
    [&quot;C-change&quot;] = {
	target   = &quot;C-change&quot;,
    },
    [&quot;F-change&quot;] = {
	target   = &quot;F-change&quot;,
    },
    [&quot;century&quot;] = {
	name1    = &quot;century&quot;,
	name2    = &quot;centuries&quot;,
	symbol   = &quot;ha&quot;,
	utype    = &quot;time&quot;,
	scale    = 3155760000,
	default  = &quot;Gs&quot;,
    },
    [&quot;d&quot;] = {
	name1    = &quot;day&quot;,
	symbol   = &quot;d&quot;,
	utype    = &quot;time&quot;,
	scale    = 86400,
	default  = &quot;ks&quot;,
    },
    [&quot;decade&quot;] = {
	name1    = &quot;decade&quot;,
	symbol   = &quot;daa&quot;,
	utype    = &quot;time&quot;,
	scale    = 315576000,
	default  = &quot;Ms&quot;,
    },
    [&quot;dog year&quot;] = {
	name1    = &quot;dog year&quot;,
	symbol   = &quot;dog yr&quot;,
	utype    = &quot;time&quot;,
	scale    = 220903200,
	default  = &quot;years&quot;,
    },
    [&quot;fortnight&quot;] = {
	symbol   = &quot;fortnight&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 1209600,
	default  = &quot;week&quot;,
    },
    [&quot;h&quot;] = {
	name1    = &quot;hour&quot;,
	symbol   = &quot;h&quot;,
	utype    = &quot;time&quot;,
	scale    = 3600,
	default  = &quot;ks&quot;,
    },
    [&quot;long billion year&quot;] = {
	name1    = &quot;billion years&quot;,
	name2    = &quot;billion years&quot;,
	symbol   = &quot;Ta&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000000,
	default  = &quot;Es&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;millennium&quot;] = {
	name1    = &quot;millennium&quot;,
	name2    = &quot;millennia&quot;,
	symbol   = &quot;ka&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000,
	default  = &quot;Gs&quot;,
    },
    [&quot;milliard year&quot;] = {
	name1    = &quot;milliard years&quot;,
	name2    = &quot;milliard years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;million year&quot;] = {
	name1    = &quot;million years&quot;,
	name2    = &quot;million years&quot;,
	symbol   = &quot;Ma&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000,
	default  = &quot;Ts&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;min&quot;] = {
	name1    = &quot;minute&quot;,
	symbol   = &quot;min&quot;,
	utype    = &quot;time&quot;,
	scale    = 60,
	default  = &quot;s&quot;,
    },
    [&quot;month&quot;] = {
	symbol   = &quot;month&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 2629800,
	default  = &quot;Ms&quot;,
    },
    [&quot;months&quot;] = {
	name1    = &quot;month&quot;,
	symbol   = &quot;mo&quot;,
	utype    = &quot;time&quot;,
	scale    = 2629800,
	default  = &quot;year&quot;,
    },
    [&quot;s&quot;] = {
	_name1   = &quot;second&quot;,
	_symbol  = &quot;s&quot;,
	utype    = &quot;time&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;min&quot;,
	link     = &quot;Second&quot;,
    },
    [&quot;short billion year&quot;] = {
	name1    = &quot;billion years&quot;,
	name2    = &quot;billion years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;short trillion year&quot;] = {
	name1    = &quot;trillion years&quot;,
	name2    = &quot;trillion years&quot;,
	symbol   = &quot;Ta&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000000,
	default  = &quot;Es&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;thousand million year&quot;] = {
	name1    = &quot;thousand million years&quot;,
	name2    = &quot;thousand million years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;wk&quot;] = {
	symbol   = &quot;week&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 604800,
	default  = &quot;Ms&quot;,
    },
    [&quot;year&quot;] = {
	name1    = &quot;year&quot;,
	symbol   = &quot;a&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600,
	default  = &quot;Ms&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;years&quot;] = {
	name1    = &quot;year&quot;,
	symbol   = &quot;yr&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600,
	default  = &quot;Ms&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;byr&quot;] = {
	target   = &quot;short billion year&quot;,
    },
    [&quot;day&quot;] = {
	target   = &quot;d&quot;,
    },
    [&quot;days&quot;] = {
	target   = &quot;d&quot;,
    },
    [&quot;dog yr&quot;] = {
	target   = &quot;dog year&quot;,
    },
    [&quot;Gyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;hour&quot;] = {
	target   = &quot;h&quot;,
    },
    [&quot;hours&quot;] = {
	target   = &quot;h&quot;,
    },
    [&quot;kMyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;kmyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;kyr&quot;] = {
	target   = &quot;millennium&quot;,
    },
    [&quot;long byr&quot;] = {
	target   = &quot;long billion year&quot;,
    },
    [&quot;minute&quot;] = {
	target   = &quot;min&quot;,
    },
    [&quot;minutes&quot;] = {
	target   = &quot;min&quot;,
    },
    [&quot;mth&quot;] = {
	target   = &quot;month&quot;,
    },
    [&quot;Myr&quot;] = {
	target   = &quot;million year&quot;,
    },
    [&quot;myr&quot;] = {
	target   = &quot;million year&quot;,
    },
    [&quot;second&quot;] = {
	target   = &quot;s&quot;,
    },
    [&quot;seconds&quot;] = {
	target   = &quot;s&quot;,
    },
    [&quot;tmyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;tryr&quot;] = {
	target   = &quot;short trillion year&quot;,
    },
    [&quot;tyr&quot;] = {
	target   = &quot;millennium&quot;,
    },
    [&quot;week&quot;] = {
	target   = &quot;wk&quot;,
    },
    [&quot;weeks&quot;] = {
	target   = &quot;wk&quot;,
    },
    [&quot;yr&quot;] = {
	target   = &quot;year&quot;,
    },
    [&quot;kg.m&quot;] = {
	name1    = &quot;kilogram metre&quot;,
	name1_us = &quot;kilogram meter&quot;,
	symbol   = &quot;kgm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbft&quot;,
    },
    [&quot;kgf.m&quot;] = {
	name1    = &quot;kilogram force-metre&quot;,
	name1_us = &quot;kilogram force-meter&quot;,
	symbol   = &quot;kgfm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;kgm&quot;] = {
	name1    = &quot;kilogram metre&quot;,
	name1_us = &quot;kilogram meter&quot;,
	symbol   = &quot;kgm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
    },
    [&quot;lb-fft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;ftlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lb.ft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;lbft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lb.in&quot;] = {
	name1    = &quot;pound force-inch&quot;,
	symbol   = &quot;lbin&quot;,
	utype    = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mN.m&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lbfft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;lbfft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lbft&quot;] = {
	name1    = &quot;pound-foot&quot;,
	name2    = &quot;pound-feet&quot;,
	symbol   = &quot;lbft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;m.kg-f&quot;] = {
	name1    = &quot;metre kilogram-force&quot;,
	name1_us = &quot;meter kilogram-force&quot;,
	name2    = &quot;metre kilograms-force&quot;,
	name2_us = &quot;meter kilograms-force&quot;,
	symbol   = &quot;mkg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;m.kgf&quot;] = {
	name1    = &quot;metre kilogram-force&quot;,
	name1_us = &quot;meter kilogram-force&quot;,
	name2    = &quot;metre kilograms-force&quot;,
	name2_us = &quot;meter kilograms-force&quot;,
	symbol   = &quot;mkgf&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;mN.m&quot;] = {
	name1    = &quot;millinewton metre&quot;,
	name1_us = &quot;millinewton meter&quot;,
	symbol   = &quot;mNm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 0.001,
	default  = &quot;lb.in&quot;,
	link     = &quot;Newton metre&quot;,
    },
    [&quot;Nm&quot;] = {
	_name1   = &quot;newton metre&quot;,
	_name1_us= &quot;newton meter&quot;,
	_symbol  = &quot;Nm&quot;,
	utype    = &quot;torque&quot;,
	alttype  = &quot;energy&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;lbfft&quot;,
	link     = &quot;Newton metre&quot;,
    },
    [&quot;kN/m&quot;] = {
	per      = { &quot;kN&quot;, &quot;-m-stiff&quot; },
	utype    = &quot;torque&quot;,
	default  = &quot;lbf/in&quot;,
    },
    [&quot;lbf/in&quot;] = {
	per      = { &quot;lbf&quot;, &quot;-in-stiff&quot; },
	utype    = &quot;torque&quot;,
	default  = &quot;kN/m&quot;,
    },
    [&quot;lb-f.ft&quot;] = {
	target   = &quot;lb-fft&quot;,
    },
    [&quot;lb-fft&quot;] = {
	target   = &quot;lb-fft&quot;,
    },
    [&quot;lbf.ft&quot;] = {
	target   = &quot;lbfft&quot;,
    },
    [&quot;lbfft&quot;] = {
	target   = &quot;lbfft&quot;,
    },
    [&quot;lbft&quot;] = {
	target   = &quot;lb.ft&quot;,
    },
    [&quot;mkg-f&quot;] = {
	target   = &quot;m.kg-f&quot;,
    },
    [&quot;mkgf&quot;] = {
	target   = &quot;m.kgf&quot;,
    },
    [&quot;N.m&quot;] = {
	target   = &quot;Nm&quot;,
    },
    [&quot;Nm&quot;] = {
	target   = &quot;Nm&quot;,
    },
    [&quot;-12USoz(mL)serve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;mL&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;-12USoz(ml)serve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;ml&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;-12USozserve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;mL&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;acre foot&quot;] = {
	name1    = &quot;acre foot&quot;,
	name2    = &quot;acre foot&quot;,
	symbol   = &quot;acreft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1233.48183754752,
	default  = &quot;m3&quot;,
    },
    [&quot;acre ft&quot;] = {
	name1    = &quot;acre foot&quot;,
	name2    = &quot;acre feet&quot;,
	symbol   = &quot;acreft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1233.48183754752,
	default  = &quot;m3&quot;,
    },
    [&quot;AUtbsp&quot;] = {
	name1    = &quot;Australian tablespoon&quot;,
	symbol   = &quot;AU&amp;nbsp;tbsp&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000020,
	default  = &quot;ml&quot;,
    },
    [&quot;bdft&quot;] = {
	name1    = &quot;board foot&quot;,
	name2    = &quot;board feet&quot;,
	symbol   = &quot;bd&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;board feet&quot;] = {
	name2    = &quot;board feet&quot;,
	symbol   = &quot;board foot&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;board foot&quot;] = {
	name2    = &quot;board foot&quot;,
	symbol   = &quot;board foot&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;cc&quot;] = {
	name1    = &quot;cubic centimetre&quot;,
	name1_us = &quot;cubic centimeter&quot;,
	symbol   = &quot;cc&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000001,
	default  = &quot;cuin&quot;,
    },
    [&quot;CID&quot;] = {
	name1    = &quot;cubic inch&quot;,
	name2    = &quot;cubic inches&quot;,
	symbol   = &quot;cu&amp;nbsp;in&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000016387064,
	default  = &quot;cc&quot;,
	link     = &quot;Cubic inch#Engine displacement&quot;,
    },
    [&quot;cord&quot;] = {
	symbol   = &quot;cord&quot;,
	utype    = &quot;volume&quot;,
	scale    = 3.624556363776,
	default  = &quot;m3&quot;,
	link     = &quot;Cord (unit)&quot;,
    },
    [&quot;cufoot&quot;] = {
	name1    = &quot;cubic foot&quot;,
	name2    = &quot;cubic foot&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.028316846592,
	default  = &quot;m3&quot;,
    },
    [&quot;cuft&quot;] = {
	name1    = &quot;cubic foot&quot;,
	name2    = &quot;cubic feet&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.028316846592,
	default  = &quot;m3&quot;,
    },
    [&quot;cuin&quot;] = {
	name1    = &quot;cubic inch&quot;,
	name2    = &quot;cubic inches&quot;,
	symbol   = &quot;cu&amp;nbsp;in&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000016387064,
	default  = &quot;cm3&quot;,
    },
    [&quot;cumi&quot;] = {
	name1    = &quot;cubic mile&quot;,
	symbol   = &quot;cu&amp;nbsp;mi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 4168181825.440579584,
	default  = &quot;km3&quot;,
    },
    [&quot;cuyd&quot;] = {
	name1    = &quot;cubic yard&quot;,
	symbol   = &quot;cu&amp;nbsp;yd&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.764554857984,
	default  = &quot;m3&quot;,
    },
    [&quot;firkin&quot;] = {
	symbol   = &quot;firkin&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.04091481,
	default  = &quot;l impgal USgal&quot;,
    },
    [&quot;foot3&quot;] = {
	target   = &quot;cufoot&quot;,
    },
    [&quot;Goilbbl&quot;] = {
	name1    = &quot;billion barrels&quot;,
	name2    = &quot;billion barrels&quot;,
	symbol   = &quot;Gbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987294.928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e6 ! e9 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;gr water&quot;] = {
	name1    = &quot;grains water&quot;,
	name2    = &quot;grains water&quot;,
	symbol   = &quot;gr H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00000006479891,
	default  = &quot;cm3&quot;,
	link     = &quot;Grain (unit)&quot;,
    },
    [&quot;grt&quot;] = {
	name1    = &quot;gross register ton&quot;,
	symbol   = &quot;grt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 2.8316846592,
	default  = &quot;m3&quot;,
	link     = &quot;Gross register tonnage&quot;,
    },
    [&quot;impbbl&quot;] = {
	name1    = &quot;imperial barrel&quot;,
	symbol   = &quot;imp&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.16365924,
	default  = &quot;l impgal USgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;impbsh&quot;] = {
	name1    = &quot;imperial bushel&quot;,
	symbol   = &quot;imp&amp;nbsp;bsh&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03636872,
	default  = &quot;l impgal USdrygal&quot;,
    },
    [&quot;impbu&quot;] = {
	name1    = &quot;imperial bushel&quot;,
	symbol   = &quot;imp&amp;nbsp;bu&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03636872,
	default  = &quot;m3&quot;,
    },
    [&quot;impgal&quot;] = {
	name1    = &quot;imperial gallon&quot;,
	symbol   = &quot;imp&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00454609,
	default  = &quot;l USgal&quot;,
    },
    [&quot;impgi&quot;] = {
	name1    = &quot;gill&quot;,
	symbol   = &quot;gi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0001420653125,
	default  = &quot;ml USoz&quot;,
	link     = &quot;Gill (unit)&quot;,
    },
    [&quot;impkenning&quot;] = {
	name1    = &quot;imperial kenning&quot;,
	symbol   = &quot;kenning&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.01818436,
	default  = &quot;l USdrygal&quot;,
	link     = &quot;Kenning (unit)&quot;,
    },
    [&quot;impoz&quot;] = {
	name1    = &quot;imperial fluid ounce&quot;,
	symbol   = &quot;imp&amp;nbsp;fl&amp;nbsp;oz&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0000284130625,
	default  = &quot;ml USoz&quot;,
    },
    [&quot;imppk&quot;] = {
	name1    = &quot;imperial peck&quot;,
	symbol   = &quot;pk&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00909218,
	default  = &quot;l USdrygal&quot;,
	link     = &quot;Peck&quot;,
    },
    [&quot;imppt&quot;] = {
	name1    = &quot;imperial pint&quot;,
	symbol   = &quot;imp&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00056826125,
	default  = &quot;l&quot;,
    },
    [&quot;impqt&quot;] = {
	name1    = &quot;imperial quart&quot;,
	symbol   = &quot;imp&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0011365225,
	default  = &quot;ml USoz&quot;,
	customary= 3,
    },
    [&quot;kilderkin&quot;] = {
	symbol   = &quot;kilderkin&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.08182962,
	default  = &quot;l impgal USgal&quot;,
    },
    [&quot;koilbbl&quot;] = {
	name1    = &quot;thousand barrels&quot;,
	name2    = &quot;thousand barrels&quot;,
	symbol   = &quot;kbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158.987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;L&quot;] = {
	_name1   = &quot;litre&quot;,
	_name1_us= &quot;liter&quot;,
	_symbol  = &quot;L&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;impgal USgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;l&quot;] = {
	_name1   = &quot;litre&quot;,
	_name1_us= &quot;liter&quot;,
	_symbol  = &quot;l&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;impgal USgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;m3&quot;] = {
	_name1   = &quot;cubic metre&quot;,
	_name1_us= &quot;cubic meter&quot;,
	_symbol  = &quot;m&lt;sup&gt;3&lt;/sup&gt;&quot;,
	prefix_position= 7,
	utype    = &quot;volume&quot;,
	scale    = 1,
	prefixes = 3,
	default  = &quot;cuft&quot;,
	link     = &quot;Cubic metre&quot;,
    },
    [&quot;Mbbl&quot;] = {
	name1    = &quot;thousand barrels&quot;,
	name2    = &quot;thousand barrels&quot;,
	symbol   = &quot;Mbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158.987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;MMoilbbl&quot;] = {
	name1    = &quot;million barrels&quot;,
	name2    = &quot;million barrels&quot;,
	symbol   = &quot;MMbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987.294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;Moilbbl&quot;] = {
	name1    = &quot;million barrels&quot;,
	name2    = &quot;million barrels&quot;,
	symbol   = &quot;Mbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987.294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;MTON&quot;] = {
	name1    = &quot;measurement ton&quot;,
	symbol   = &quot;MTON&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1.13267386368,
	default  = &quot;m3&quot;,
    },
    [&quot;MUSgal&quot;] = {
	name1    = &quot;million US gallons&quot;,
	name1_us = &quot;million U.S. gallons&quot;,
	name2    = &quot;million US gallons&quot;,
	name2_us = &quot;million U.S. gallons&quot;,
	symbol   = &quot;million US&amp;nbsp;gal&quot;,
	sym_us   = &quot;million U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 3785.411784,
	default  = &quot;Ml&quot;,
	link     = &quot;US gallon&quot;,
    },
    [&quot;oilbbl&quot;] = {
	name1    = &quot;barrel&quot;,
	symbol   = &quot;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.158987294928,
	default  = &quot;m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;stere&quot;] = {
	symbol   = &quot;stre&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 1,
	default  = &quot;cuft&quot;,
    },
    [&quot;Toilbbl&quot;] = {
	name1    = &quot;trillion barrels&quot;,
	name2    = &quot;trillion barrels&quot;,
	symbol   = &quot;Tbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e9 ! e12 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;USbbl&quot;] = {
	name1    = &quot;US barrel&quot;,
	name1_us = &quot;U.S. barrel&quot;,
	symbol   = &quot;US&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.119240471196,
	default  = &quot;l USgal impgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USbeerbbl&quot;] = {
	name1    = &quot;US beer barrel&quot;,
	name1_us = &quot;U.S. beer barrel&quot;,
	symbol   = &quot;US&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.117347765304,
	default  = &quot;l USgal impgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USbsh&quot;] = {
	name1    = &quot;US bushel&quot;,
	name1_us = &quot;U.S. bushel&quot;,
	symbol   = &quot;US&amp;nbsp;bsh&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bsh&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03523907016688,
	default  = &quot;l USdrygal impgal&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USbu&quot;] = {
	name1    = &quot;US bushel&quot;,
	name1_us = &quot;U.S. bushel&quot;,
	symbol   = &quot;US&amp;nbsp;bu&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bu&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03523907016688,
	default  = &quot;l USdrygal impgal&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USdrybbl&quot;] = {
	name1    = &quot;US dry barrel&quot;,
	name1_us = &quot;U.S. dry barrel&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.11562819898508,
	default  = &quot;m3&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USdrygal&quot;] = {
	name1    = &quot;US dry gallon&quot;,
	name1_us = &quot;U.S. dry gallon&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00440488377086,
	default  = &quot;l&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USdrypt&quot;] = {
	name1    = &quot;US dry pint&quot;,
	name1_us = &quot;U.S. dry pint&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;pt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0005506104713575,
	default  = &quot;ml&quot;,
	link     = &quot;Pint&quot;,
    },
    [&quot;USdryqt&quot;] = {
	name1    = &quot;US dry quart&quot;,
	name1_us = &quot;U.S. dry quart&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001101220942715,
	default  = &quot;ml&quot;,
	link     = &quot;Quart&quot;,
    },
    [&quot;USflgal&quot;] = {
	name1    = &quot;US gallon&quot;,
	name1_us = &quot;U.S. gallon&quot;,
	symbol   = &quot;US fl gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;fl&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.003785411784,
	default  = &quot;l impgal&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal&quot;] = {
	name1    = &quot;US gallon&quot;,
	name1_us = &quot;U.S. gallon&quot;,
	symbol   = &quot;US&amp;nbsp;gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.003785411784,
	default  = &quot;l impgal&quot;,
    },
    [&quot;USgi&quot;] = {
	name1    = &quot;gill&quot;,
	symbol   = &quot;gi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0001182941183,
	default  = &quot;ml impoz&quot;,
	link     = &quot;Gill (unit)&quot;,
    },
    [&quot;USkenning&quot;] = {
	name1    = &quot;US kenning&quot;,
	name1_us = &quot;U.S. kenning&quot;,
	symbol   = &quot;US&amp;nbsp;kenning&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;kenning&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.01761953508344,
	default  = &quot;l impgal&quot;,
	link     = &quot;Kenning (unit)&quot;,
    },
    [&quot;USmin&quot;] = {
	name1    = &quot;US minim&quot;,
	name1_us = &quot;U.S. minim&quot;,
	symbol   = &quot;US&amp;nbsp;min&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;min&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000000061611519921875,
	default  = &quot;ml&quot;,
	link     = &quot;Minim (unit)&quot;,
    },
    [&quot;USoz&quot;] = {
	name1    = &quot;US fluid ounce&quot;,
	name1_us = &quot;U.S. fluid ounce&quot;,
	symbol   = &quot;US&amp;nbsp;fl&amp;nbsp;oz&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;fl&amp;nbsp;oz&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0000295735295625,
	default  = &quot;ml&quot;,
    },
    [&quot;USpk&quot;] = {
	name1    = &quot;US peck&quot;,
	name1_us = &quot;U.S. peck&quot;,
	symbol   = &quot;US&amp;nbsp;pk&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;pk&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00880976754172,
	default  = &quot;l impgal&quot;,
	link     = &quot;Peck&quot;,
    },
    [&quot;USpt&quot;] = {
	name1    = &quot;US pint&quot;,
	name1_us = &quot;U.S. pint&quot;,
	symbol   = &quot;US&amp;nbsp;pt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000473176473,
	default  = &quot;l imppt&quot;,
	link     = &quot;Pint&quot;,
    },
    [&quot;USqt&quot;] = {
	name1    = &quot;US quart&quot;,
	name1_us = &quot;U.S. quart&quot;,
	symbol   = &quot;US&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000946352946,
	default  = &quot;ml&quot;,
	link     = &quot;Quart&quot;,
	customary= 1,
    },
    [&quot;USquart&quot;] = {
	name1    = &quot;US quart&quot;,
	name1_us = &quot;U.S. quart&quot;,
	symbol   = &quot;US&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000946352946,
	default  = &quot;ml impoz&quot;,
	link     = &quot;Quart&quot;,
    },
    [&quot;UStbsp&quot;] = {
	name1    = &quot;US tablespoon&quot;,
	name1_us = &quot;U.S. tablespoon&quot;,
	symbol   = &quot;US&amp;nbsp;tbsp&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;tbsp&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1.4786764781250001e-5,
	default  = &quot;ml&quot;,
    },
    [&quot;winecase&quot;] = {
	symbol   = &quot;case&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.009,
	default  = &quot;l&quot;,
	link     = &quot;Case (goods)&quot;,
    },
    [&quot;*U.S.drygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	sp_us    = true,
	customary= 2,
    },
    [&quot;*U.S.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	customary= 2,
    },
    [&quot;+USdrygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	customary= 1,
    },
    [&quot;+usfloz&quot;] = {
	target   = &quot;USoz&quot;,
	link     = &quot;Fluid ounce&quot;,
	customary= 1,
    },
    [&quot;+USgal&quot;] = {
	target   = &quot;USgal&quot;,
	customary= 1,
    },
    [&quot;+USoz&quot;] = {
	target   = &quot;USoz&quot;,
	customary= 1,
    },
    [&quot;@impgal&quot;] = {
	target   = &quot;impgal&quot;,
	link     = &quot;Gallon&quot;,
	customary= 3,
    },
    [&quot;acre feet&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre-feet&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre-ft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre.foot&quot;] = {
	target   = &quot;acre foot&quot;,
    },
    [&quot;acre.ft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acrefoot&quot;] = {
	target   = &quot;acre foot&quot;,
    },
    [&quot;acreft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;bushels&quot;] = {
	target   = &quot;USbsh&quot;,
    },
    [&quot;cid&quot;] = {
	target   = &quot;CID&quot;,
    },
    [&quot;ft3&quot;] = {
	target   = &quot;cuft&quot;,
    },
    [&quot;gal&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;gallon&quot;] = {
	shouldbe = &quot;Use %{USgal%} for US gallons or %{impgal%} for imperial gallons (not %{gallon%})&quot;,
    },
    [&quot;gallons&quot;] = {
	shouldbe = &quot;Use %{USgal%} for US gallons or %{impgal%} for imperial gallons (not %{gallons%})&quot;,
    },
    [&quot;Gcuft&quot;] = {
	target   = &quot;e9cuft&quot;,
    },
    [&quot;impfloz&quot;] = {
	target   = &quot;impoz&quot;,
    },
    [&quot;Impgal&quot;] = {
	target   = &quot;impgal&quot;,
    },
    [&quot;in3&quot;] = {
	target   = &quot;cuin&quot;,
	symbol   = &quot;in&lt;sup&gt;3&lt;/sup&gt;&quot;,
    },
    [&quot;kcuft&quot;] = {
	target   = &quot;e3cuft&quot;,
    },
    [&quot;kcum&quot;] = {
	target   = &quot;e3m3&quot;,
    },
    [&quot;km&quot;] = {
	target   = &quot;km3&quot;,
    },
    [&quot;liter&quot;] = {
	target   = &quot;L&quot;,
	sp_us    = true,
    },
    [&quot;liters&quot;] = {
	target   = &quot;L&quot;,
	sp_us    = true,
    },
    [&quot;litre&quot;] = {
	target   = &quot;L&quot;,
    },
    [&quot;litres&quot;] = {
	target   = &quot;L&quot;,
    },
    [&quot;Mcuft&quot;] = {
	target   = &quot;e6cuft&quot;,
    },
    [&quot;Mcum&quot;] = {
	target   = &quot;e6m3&quot;,
    },
    [&quot;Mft3&quot;] = {
	target   = &quot;e6cuft&quot;,
    },
    [&quot;mi3&quot;] = {
	target   = &quot;cumi&quot;,
    },
    [&quot;m&quot;] = {
	target   = &quot;m3&quot;,
    },
    [&quot;Pcuft&quot;] = {
	target   = &quot;e15cuft&quot;,
    },
    [&quot;pt&quot;] = {
	shouldbe = &quot;Use %{USpt%} for US pints or %{imppt%} for imperial pints (not %{pt%})&quot;,
    },
    [&quot;qt&quot;] = {
	shouldbe = &quot;Use %{USqt%} for US quarts or %{impqt%} for imperial quarts (not %{qt%})&quot;,
    },
    [&quot;Tcuft&quot;] = {
	target   = &quot;e12cuft&quot;,
    },
    [&quot;Tft3&quot;] = {
	target   = &quot;e12cuft&quot;,
    },
    [&quot;U.S.bbl&quot;] = {
	target   = &quot;USbbl&quot;,
	sp_us    = true,
	default  = &quot;l U.S.gal impgal&quot;,
    },
    [&quot;U.S.beerbbl&quot;] = {
	target   = &quot;USbeerbbl&quot;,
	sp_us    = true,
	default  = &quot;l U.S.gal impgal&quot;,
    },
    [&quot;U.S.bsh&quot;] = {
	target   = &quot;USbsh&quot;,
	sp_us    = true,
	default  = &quot;l U.S.drygal impgal&quot;,
    },
    [&quot;U.S.bu&quot;] = {
	target   = &quot;USbu&quot;,
	sp_us    = true,
	default  = &quot;l U.S.drygal impgal&quot;,
    },
    [&quot;U.S.drybbl&quot;] = {
	target   = &quot;USdrybbl&quot;,
	sp_us    = true,
    },
    [&quot;U.S.drygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	sp_us    = true,
    },
    [&quot;U.S.drypt&quot;] = {
	target   = &quot;USdrypt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.dryqt&quot;] = {
	target   = &quot;USdryqt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.flgal&quot;] = {
	target   = &quot;USflgal&quot;,
	sp_us    = true,
    },
    [&quot;U.S.floz&quot;] = {
	target   = &quot;USoz&quot;,
	sp_us    = true,
    },
    [&quot;U.S.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	link     = &quot;U.S. gallon&quot;,
    },
    [&quot;u.s.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	link     = &quot;U.S. gallon&quot;,
    },
    [&quot;U.S.gi&quot;] = {
	target   = &quot;USgi&quot;,
	sp_us    = true,
    },
    [&quot;U.S.kenning&quot;] = {
	target   = &quot;USkenning&quot;,
	sp_us    = true,
    },
    [&quot;U.S.oz&quot;] = {
	target   = &quot;USoz&quot;,
	sp_us    = true,
    },
    [&quot;U.S.pk&quot;] = {
	target   = &quot;USpk&quot;,
	sp_us    = true,
    },
    [&quot;U.S.pt&quot;] = {
	target   = &quot;USpt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.qt&quot;] = {
	target   = &quot;USqt&quot;,
	sp_us    = true,
	default  = &quot;L impqt&quot;,
	customary= 2,
    },
    [&quot;usbbl&quot;] = {
	target   = &quot;USbbl&quot;,
    },
    [&quot;usbeerbbl&quot;] = {
	target   = &quot;USbeerbbl&quot;,
    },
    [&quot;usbsh&quot;] = {
	target   = &quot;USbsh&quot;,
    },
    [&quot;usbu&quot;] = {
	target   = &quot;USbu&quot;,
    },
    [&quot;usdrybbl&quot;] = {
	target   = &quot;USdrybbl&quot;,
    },
    [&quot;usdrygal&quot;] = {
	target   = &quot;USdrygal&quot;,
    },
    [&quot;usdrypt&quot;] = {
	target   = &quot;USdrypt&quot;,
    },
    [&quot;usdryqt&quot;] = {
	target   = &quot;USdryqt&quot;,
    },
    [&quot;USfloz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;usfloz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;USGAL&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;usgal&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;usgi&quot;] = {
	target   = &quot;USgi&quot;,
    },
    [&quot;uskenning&quot;] = {
	target   = &quot;USkenning&quot;,
    },
    [&quot;usoz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;uspk&quot;] = {
	target   = &quot;USpk&quot;,
    },
    [&quot;uspt&quot;] = {
	target   = &quot;USpt&quot;,
    },
    [&quot;usqt&quot;] = {
	target   = &quot;USqt&quot;,
    },
    [&quot;yd3&quot;] = {
	target   = &quot;cuyd&quot;,
    },
    [&quot;cuft/sqmi&quot;] = {
	per      = { &quot;cuft&quot;, &quot;sqmi&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;m3/ha&quot;] = {
	name1    = &quot;cubic metre per hectare&quot;,
	name1_us = &quot;cubic meter per hectare&quot;,
	name2    = &quot;cubic metres per hectare&quot;,
	name2_us = &quot;cubic meters per hectare&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/ha&quot;,
	utype    = &quot;volume per unit area&quot;,
	scale    = 0.0001,
	default  = &quot;USbu/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;m3/km2&quot;] = {
	per      = { &quot;m3&quot;, &quot;km2&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;cuft/sqmi&quot;,
    },
    [&quot;U.S.gal/acre&quot;] = {
	per      = { &quot;U.S.gal&quot;, &quot;acre&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;USbu/acre&quot;] = {
	name2    = &quot;US bushels per acre&quot;,
	symbol   = &quot;US bushel per acre&quot;,
	usename  = 1,
	utype    = &quot;volume per unit area&quot;,
	scale    = 8.7077638761350888e-6,
	default  = &quot;m3/ha&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USgal/acre&quot;] = {
	per      = { &quot;USgal&quot;, &quot;acre&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;cuyd/mi&quot;] = {
	per      = { &quot;cuyd&quot;, &quot;mi&quot; },
	utype    = &quot;volume per unit length&quot;,
	default  = &quot;m3/km&quot;,
    },
    [&quot;m3/km&quot;] = {
	per      = { &quot;m3&quot;, &quot;km&quot; },
	utype    = &quot;volume per unit length&quot;,
	default  = &quot;cuyd/mi&quot;,
    },
    [&quot;mich&quot;] = {
	combination= { &quot;ch&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;michlk&quot;] = {
	combination= { &quot;chlk&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;michainlk&quot;] = {
	combination= { &quot;chainlk&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;miydftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot;, &quot;yd&quot;, &quot;mi&quot; },
	multiple = { 12, 3, 1760 },
	utype    = &quot;length&quot;,
    },
    [&quot;mift&quot;] = {
	combination= { &quot;ft&quot;, &quot;mi&quot; },
	multiple = { 5280 },
	utype    = &quot;length&quot;,
    },
    [&quot;ydftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot;, &quot;yd&quot; },
	multiple = { 12, 3 },
	utype    = &quot;length&quot;,
    },
    [&quot;ydft&quot;] = {
	combination= { &quot;ft&quot;, &quot;yd&quot; },
	multiple = { 3 },
	utype    = &quot;length&quot;,
    },
    [&quot;ftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot; },
	multiple = { 12 },
	utype    = &quot;length&quot;,
    },
    [&quot;footin&quot;] = {
	combination= { &quot;in&quot;, &quot;foot&quot; },
	multiple = { 12 },
	utype    = &quot;length&quot;,
    },
    [&quot;handin&quot;] = {
	combination= { &quot;in&quot;, &quot;hand&quot; },
	multiple = { 4 },
	utype    = &quot;length&quot;,
    },
    [&quot;lboz&quot;] = {
	combination= { &quot;oz&quot;, &quot;lb&quot; },
	multiple = { 16 },
	utype    = &quot;mass&quot;,
    },
    [&quot;stlb&quot;] = {
	combination= { &quot;lb&quot;, &quot;st&quot; },
	multiple = { 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;stlboz&quot;] = {
	combination= { &quot;oz&quot;, &quot;lb&quot;, &quot;st&quot; },
	multiple = { 16, 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;st and lb&quot;] = {
	combination= { &quot;lb&quot;, &quot;st&quot; },
	multiple = { 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;GN LTf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN LTf STf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN STf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN STf LTf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN LTf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN LTf STf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN STf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN STf LTf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;LTf STf&quot;] = {
	combination= { &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN LTf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN LTf STf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN STf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN STf LTf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;STf LTf&quot;] = {
	combination= { &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;L/100 km mpgimp&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgimp&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;l/100 km mpgimp&quot;] = {
	combination= { &quot;l/100 km&quot;, &quot;mpgimp&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;L/100 km mpgUS&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;L/100 km mpgus&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;l/100 km mpgus&quot;] = {
	combination= { &quot;l/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;mpgimp L/100 km&quot;] = {
	combination= { &quot;mpgimp&quot;, &quot;L/100 km&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;LT ST t&quot;] = {
	combination= { &quot;lt&quot;, &quot;-ST&quot;, &quot;t&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;LT t ST&quot;] = {
	combination= { &quot;lt&quot;, &quot;t&quot;, &quot;-ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ST LT t&quot;] = {
	combination= { &quot;-ST&quot;, &quot;lt&quot;, &quot;t&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ST t LT&quot;] = {
	combination= { &quot;-ST&quot;, &quot;t&quot;, &quot;lt&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;t LT ST&quot;] = {
	combination= { &quot;t&quot;, &quot;lt&quot;, &quot;-ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ton&quot;] = {
	combination= { &quot;LT&quot;, &quot;ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;kPa kg/cm2&quot;] = {
	combination= { &quot;kPa&quot;, &quot;kgf/cm2&quot; },
	utype    = &quot;pressure&quot;,
    },
    [&quot;kPa lb/in2&quot;] = {
	combination= { &quot;kPa&quot;, &quot;-lb/in2&quot; },
	utype    = &quot;pressure&quot;,
    },
    [&quot;floz&quot;] = {
	combination= { &quot;impoz&quot;, &quot;USoz&quot; },
	utype    = &quot;volume&quot;,
    },
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local default_exceptions = {
	-- Prefixed units with a default different from that of the base unit.
	-- Each key item is a prefixed symbol (unitcode for engineering notation).
	[&quot;cm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;dm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;e3acre&quot;] = &quot;km2&quot;,
	[&quot;e3m2&quot;] = &quot;e6sqft&quot;,
	[&quot;e6acre&quot;] = &quot;km2&quot;,
	[&quot;e6ha&quot;] = &quot;e6acre&quot;,
	[&quot;e6km2&quot;] = &quot;e6sqmi&quot;,
	[&quot;e6m2&quot;] = &quot;e6sqft&quot;,
	[&quot;e6sqft&quot;] = &quot;v * 9.290304 &lt; 100 ! e3 ! e6 ! m2&quot;,
	[&quot;e6sqmi&quot;] = &quot;e6km2&quot;,
	[&quot;hm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;acre&quot;,
	[&quot;km&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqmi&quot;,
	[&quot;mm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;aJ&quot;] = &quot;eV&quot;,
	[&quot;e3BTU&quot;] = &quot;MJ&quot;,
	[&quot;e6BTU&quot;] = &quot;GJ&quot;,
	[&quot;EJ&quot;] = &quot;kWh&quot;,
	[&quot;fJ&quot;] = &quot;keV&quot;,
	[&quot;GJ&quot;] = &quot;kWh&quot;,
	[&quot;MJ&quot;] = &quot;kWh&quot;,
	[&quot;PJ&quot;] = &quot;kWh&quot;,
	[&quot;pJ&quot;] = &quot;MeV&quot;,
	[&quot;TJ&quot;] = &quot;kWh&quot;,
	[&quot;YJ&quot;] = &quot;kWh&quot;,
	[&quot;yJ&quot;] = &quot;eV&quot;,
	[&quot;ZJ&quot;] = &quot;kWh&quot;,
	[&quot;zJ&quot;] = &quot;meV&quot;,
	[&quot;e12cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3/a&quot;,
	[&quot;e12cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3/d&quot;,
	[&quot;e12m3/a&quot;] = &quot;Tcuft/a&quot;,
	[&quot;e12m3/d&quot;] = &quot;Tcuft/d&quot;,
	[&quot;e3cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/a&quot;,
	[&quot;e3cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/d&quot;,
	[&quot;e3cuft/s&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/s&quot;,
	[&quot;e3m3/a&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/a&quot;,
	[&quot;e3m3/d&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/d&quot;,
	[&quot;e3m3/s&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/s&quot;,
	[&quot;e3USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! ! e3 ! m3/a&quot;,
	[&quot;e6cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/a&quot;,
	[&quot;e6cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/d&quot;,
	[&quot;e6cuft/s&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/s&quot;,
	[&quot;e6m3/a&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft/a&quot;,
	[&quot;e6m3/d&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft/d&quot;,
	[&quot;e6m3/s&quot;] = &quot;v &lt; 28.316846592 ! e6 ! e9 ! cuft/s&quot;,
	[&quot;e6USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e3 ! e6 ! m3/a&quot;,
	[&quot;e9cuft/a&quot;] = &quot;m3/a&quot;,
	[&quot;e9cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e6 ! e9 ! m3/d&quot;,
	[&quot;e9m3/a&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft/a&quot;,
	[&quot;e9m3/d&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft/d&quot;,
	[&quot;e9m3/s&quot;] = &quot;v &lt; 28.316846592 ! e9 ! e12 ! cuft/s&quot;,
	[&quot;e9USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e6 ! e9 ! m3/a&quot;,
	[&quot;e9USgal/s&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e6 ! e9 ! m3/s&quot;,
	[&quot;nN&quot;] = &quot;gr-f&quot;,
	[&quot;N&quot;] = &quot;gr-f&quot;,
	[&quot;mN&quot;] = &quot;oz-f&quot;,
	[&quot;am&quot;] = &quot;in&quot;,
	[&quot;cm&quot;] = &quot;in&quot;,
	[&quot;dam&quot;] = &quot;ft&quot;,
	[&quot;dm&quot;] = &quot;in&quot;,
	[&quot;e12km&quot;] = &quot;e12mi&quot;,
	[&quot;e12mi&quot;] = &quot;e12km&quot;,
	[&quot;e3AU&quot;] = &quot;ly&quot;,
	[&quot;e3km&quot;] = &quot;e3mi&quot;,
	[&quot;e3mi&quot;] = &quot;e3km&quot;,
	[&quot;e6km&quot;] = &quot;e6mi&quot;,
	[&quot;e6mi&quot;] = &quot;e6km&quot;,
	[&quot;e9km&quot;] = &quot;AU&quot;,
	[&quot;e9mi&quot;] = &quot;e9km&quot;,
	[&quot;Em&quot;] = &quot;mi&quot;,
	[&quot;fm&quot;] = &quot;in&quot;,
	[&quot;Gm&quot;] = &quot;mi&quot;,
	[&quot;hm&quot;] = &quot;ft&quot;,
	[&quot;km&quot;] = &quot;mi&quot;,
	[&quot;mm&quot;] = &quot;in&quot;,
	[&quot;Mm&quot;] = &quot;mi&quot;,
	[&quot;nm&quot;] = &quot;in&quot;,
	[&quot;Pm&quot;] = &quot;mi&quot;,
	[&quot;pm&quot;] = &quot;in&quot;,
	[&quot;Tm&quot;] = &quot;mi&quot;,
	[&quot;Ym&quot;] = &quot;mi&quot;,
	[&quot;ym&quot;] = &quot;in&quot;,
	[&quot;Zm&quot;] = &quot;mi&quot;,
	[&quot;zm&quot;] = &quot;in&quot;,
	[&quot;m&quot;] = &quot;in&quot;,
	[&quot;e12lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! Mt ! Gt&quot;,
	[&quot;e3lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! kg ! t&quot;,
	[&quot;e3ozt&quot;] = &quot;v * 0.311034768 &lt; 10 ! kg ! t&quot;,
	[&quot;e3t&quot;] = &quot;LT ST&quot;,
	[&quot;e6carat&quot;] = &quot;t&quot;,
	[&quot;e6lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! t ! kilotonne&quot;,
	[&quot;e6ozt&quot;] = &quot;lb kg&quot;,
	[&quot;e6ST&quot;] = &quot;Mt&quot;,
	[&quot;e6t&quot;] = &quot;LT ST&quot;,
	[&quot;e9lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! kilotonne ! Mt&quot;,
	[&quot;e9t&quot;] = &quot;LT ST&quot;,
	[&quot;Gg&quot;] = &quot;lb&quot;,
	[&quot;kg&quot;] = &quot;lb&quot;,
	[&quot;mg&quot;] = &quot;gr&quot;,
	[&quot;Mg&quot;] = &quot;LT ST&quot;,
	[&quot;ng&quot;] = &quot;gr&quot;,
	[&quot;g&quot;] = &quot;gr&quot;,
	[&quot;mBq&quot;] = &quot;fCi&quot;,
	[&quot;kBq&quot;] = &quot;nCi&quot;,
	[&quot;MBq&quot;] = &quot;Ci&quot;,
	[&quot;GBq&quot;] = &quot;mCi&quot;,
	[&quot;TBq&quot;] = &quot;Ci&quot;,
	[&quot;PBq&quot;] = &quot;kCi&quot;,
	[&quot;EBq&quot;] = &quot;kCi&quot;,
	[&quot;fCi&quot;] = &quot;mBq&quot;,
	[&quot;pCi&quot;] = &quot;Bq&quot;,
	[&quot;nCi&quot;] = &quot;Bq&quot;,
	[&quot;Ci&quot;] = &quot;kBq&quot;,
	[&quot;mCi&quot;] = &quot;MBq&quot;,
	[&quot;kCi&quot;] = &quot;TBq&quot;,
	[&quot;MCi&quot;] = &quot;PBq&quot;,
	[&quot;ns&quot;] = &quot;s&quot;,
	[&quot;s&quot;] = &quot;ms&quot;,
	[&quot;ms&quot;] = &quot;s&quot;,
	[&quot;ks&quot;] = &quot;h&quot;,
	[&quot;Ms&quot;] = &quot;week&quot;,
	[&quot;Gs&quot;] = &quot;decade&quot;,
	[&quot;Ts&quot;] = &quot;millennium&quot;,
	[&quot;Ps&quot;] = &quot;million year&quot;,
	[&quot;Es&quot;] = &quot;thousand million year&quot;,
	[&quot;MK&quot;] = &quot;keVT&quot;,
	[&quot;cL&quot;] = &quot;impoz usoz&quot;,
	[&quot;cl&quot;] = &quot;impoz usoz&quot;,
	[&quot;cm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;dL&quot;] = &quot;impoz usoz&quot;,
	[&quot;dl&quot;] = &quot;impoz usoz&quot;,
	[&quot;mm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;dm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;e12cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3&quot;,
	[&quot;e12impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e12m3&quot;] = &quot;v &lt; 28.316846592 ! T ! P ! cuft&quot;,
	[&quot;e12U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e12USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e15cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e12 ! e15 ! m3&quot;,
	[&quot;e15m3&quot;] = &quot;Pcuft&quot;,
	[&quot;e3bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e3cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3&quot;,
	[&quot;e3impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e3m3&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft&quot;,
	[&quot;e3U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e3USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e6bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e6cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e6cuyd&quot;] = &quot;v * 7.64554857984 &lt; 10 ! e3 ! e6 ! m3&quot;,
	[&quot;e6impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e6L&quot;] = &quot;USgal&quot;,
	[&quot;e6m3&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft&quot;,
	[&quot;e6U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e6USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e9bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e6 ! e9 ! m3&quot;,
	[&quot;e9cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e6 ! e9 ! m3&quot;,
	[&quot;e9impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;e9m3&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft&quot;,
	[&quot;e9U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;e9USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;GL&quot;] = &quot;cuft&quot;,
	[&quot;Gl&quot;] = &quot;cuft&quot;,
	[&quot;kL&quot;] = &quot;cuft&quot;,
	[&quot;kl&quot;] = &quot;cuft&quot;,
	[&quot;km&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cumi&quot;,
	[&quot;mL&quot;] = &quot;impoz usoz&quot;,
	[&quot;ml&quot;] = &quot;impoz usoz&quot;,
	[&quot;Ml&quot;] = &quot;v &lt; 28.316846592 ! e3 ! e6 ! cuft&quot;,
	[&quot;ML&quot;] = &quot;v &lt; 28.316846592 ! e3 ! e6 ! cuft&quot;,
	[&quot;TL&quot;] = &quot;cumi&quot;,
	[&quot;Tl&quot;] = &quot;cumi&quot;,
	[&quot;L&quot;] = &quot;cuin&quot;,
	[&quot;l&quot;] = &quot;cuin&quot;,
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local link_exceptions = {
	-- Prefixed units with a linked article different from that of the base unit.
	-- Each key item is a prefixed symbol (not unitcode).
	[&quot;mm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square millimetre&quot;,
	[&quot;cm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square centimetre&quot;,
	[&quot;dm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square decimetre&quot;,
	[&quot;km&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square kilometre&quot;,
	[&quot;kJ&quot;] = &quot;Kilojoule&quot;,
	[&quot;MJ&quot;] = &quot;Megajoule&quot;,
	[&quot;fm&quot;] = &quot;Femtometre&quot;,
	[&quot;pm&quot;] = &quot;Picometre&quot;,
	[&quot;nm&quot;] = &quot;Nanometre&quot;,
	[&quot;m&quot;] = &quot;Micrometre&quot;,
	[&quot;mm&quot;] = &quot;Millimetre&quot;,
	[&quot;cm&quot;] = &quot;Centimetre&quot;,
	[&quot;dm&quot;] = &quot;Decimetre&quot;,
	[&quot;dam&quot;] = &quot;Decametre&quot;,
	[&quot;hm&quot;] = &quot;Hectometre&quot;,
	[&quot;km&quot;] = &quot;Kilometre&quot;,
	[&quot;Mm&quot;] = &quot;Megametre&quot;,
	[&quot;Gm&quot;] = &quot;Gigametre&quot;,
	[&quot;Tm&quot;] = &quot;Terametre&quot;,
	[&quot;Pm&quot;] = &quot;Petametre&quot;,
	[&quot;Em&quot;] = &quot;Exametre&quot;,
	[&quot;Zm&quot;] = &quot;Zettametre&quot;,
	[&quot;Ym&quot;] = &quot;Yottametre&quot;,
	[&quot;g&quot;] = &quot;Microgram&quot;,
	[&quot;mg&quot;] = &quot;Milligram&quot;,
	[&quot;kg&quot;] = &quot;Kilogram&quot;,
	[&quot;Mg&quot;] = &quot;Tonne&quot;,
	[&quot;yW&quot;] = &quot;Yoctowatt&quot;,
	[&quot;zW&quot;] = &quot;Zeptowatt&quot;,
	[&quot;aW&quot;] = &quot;Attowatt&quot;,
	[&quot;fW&quot;] = &quot;Femtowatt&quot;,
	[&quot;pW&quot;] = &quot;Picowatt&quot;,
	[&quot;nW&quot;] = &quot;Nanowatt&quot;,
	[&quot;W&quot;] = &quot;Microwatt&quot;,
	[&quot;mW&quot;] = &quot;Milliwatt&quot;,
	[&quot;kW&quot;] = &quot;Kilowatt&quot;,
	[&quot;MW&quot;] = &quot;Megawatt&quot;,
	[&quot;GW&quot;] = &quot;Gigawatt&quot;,
	[&quot;TW&quot;] = &quot;Terawatt&quot;,
	[&quot;PW&quot;] = &quot;Petawatt&quot;,
	[&quot;EW&quot;] = &quot;Exawatt&quot;,
	[&quot;ZW&quot;] = &quot;Zettawatt&quot;,
	[&quot;YW&quot;] = &quot;Yottawatt&quot;,
	[&quot;as&quot;] = &quot;Attosecond&quot;,
	[&quot;fs&quot;] = &quot;Femtosecond&quot;,
	[&quot;ps&quot;] = &quot;Picosecond&quot;,
	[&quot;ns&quot;] = &quot;Nanosecond&quot;,
	[&quot;s&quot;] = &quot;Microsecond&quot;,
	[&quot;ms&quot;] = &quot;Millisecond&quot;,
	[&quot;ks&quot;] = &quot;Kilosecond&quot;,
	[&quot;Ms&quot;] = &quot;Megasecond&quot;,
	[&quot;Gs&quot;] = &quot;Gigasecond&quot;,
	[&quot;Ts&quot;] = &quot;Terasecond&quot;,
	[&quot;Ps&quot;] = &quot;Petasecond&quot;,
	[&quot;Es&quot;] = &quot;Exasecond&quot;,
	[&quot;Zs&quot;] = &quot;Zettasecond&quot;,
	[&quot;Ys&quot;] = &quot;Yottasecond&quot;,
	[&quot;mm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic millimetre&quot;,
	[&quot;cm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic centimetre&quot;,
	[&quot;dm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic decimetre&quot;,
	[&quot;dam&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic decametre&quot;,
	[&quot;km&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic kilometre&quot;,
	[&quot;L&quot;] = &quot;Microlitre&quot;,
	[&quot;l&quot;] = &quot;Microlitre&quot;,
	[&quot;mL&quot;] = &quot;Millilitre&quot;,
	[&quot;ml&quot;] = &quot;Millilitre&quot;,
	[&quot;cL&quot;] = &quot;Centilitre&quot;,
	[&quot;cl&quot;] = &quot;Centilitre&quot;,
	[&quot;dL&quot;] = &quot;Decilitre&quot;,
	[&quot;dl&quot;] = &quot;Decilitre&quot;,
	[&quot;daL&quot;] = &quot;Decalitre&quot;,
	[&quot;dal&quot;] = &quot;Decalitre&quot;,
	[&quot;hL&quot;] = &quot;Hectolitre&quot;,
	[&quot;hl&quot;] = &quot;Hectolitre&quot;,
	[&quot;kL&quot;] = &quot;Kilolitre&quot;,
	[&quot;kl&quot;] = &quot;Kilolitre&quot;,
	[&quot;ML&quot;] = &quot;Megalitre&quot;,
	[&quot;Ml&quot;] = &quot;Megalitre&quot;,
	[&quot;GL&quot;] = &quot;Gigalitre&quot;,
	[&quot;Gl&quot;] = &quot;Gigalitre&quot;,
	[&quot;TL&quot;] = &quot;Teralitre&quot;,
	[&quot;Tl&quot;] = &quot;Teralitre&quot;,
	[&quot;PL&quot;] = &quot;Petalitre&quot;,
	[&quot;Pl&quot;] = &quot;Petalitre&quot;,
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local per_unit_fixups = {
	-- Automatically created per units of form &quot;x/y&quot; may have their unit type
	-- changed, for example, &quot;length/time&quot; is changed to &quot;speed&quot;.
	-- Other adjustments can also be specified.
	[&quot;$/area&quot;] = &quot;cost $ per unit area&quot;,
	[&quot;$/length&quot;] = &quot;cost $ per unit length&quot;,
	[&quot;$/mass&quot;] = &quot;cost $ per unit mass&quot;,
	[&quot;$/volume&quot;] = &quot;cost $ per unit volume&quot;,
	[&quot;/area&quot;] = &quot;cost  per unit area&quot;,
	[&quot;/area&quot;] = &quot;per unit area&quot;,
	[&quot;/volume&quot;] = &quot;per unit volume&quot;,
	[&quot;area/area&quot;] = &quot;area per unit area&quot;,
	[&quot;energy/length&quot;] = &quot;energy per unit length&quot;,
	[&quot;energy/mass&quot;] = &quot;energy per unit mass&quot;,
	[&quot;energy/time&quot;] = { utype = &quot;power&quot;, link = &quot;Power&quot; },
	[&quot;energy/volume&quot;] = &quot;energy per unit volume&quot;,
	[&quot;force/area&quot;] = { utype = &quot;pressure&quot;, link = &quot;Pressure&quot; },
	[&quot;length/length&quot;] = { utype = &quot;gradient&quot;, link = &quot;Gradient&quot; },
	[&quot;length/time&quot;] = { utype = &quot;speed&quot;, link = &quot;Speed&quot; },
	[&quot;length/time/time&quot;] = { utype = &quot;acceleration&quot;, link = &quot;Acceleration&quot; },
	[&quot;mass/area&quot;] = { utype = &quot;pressure&quot;, multiplier = 9.80665 },
	[&quot;mass/length&quot;] = &quot;linear density&quot;,
	[&quot;mass/mass&quot;] = &quot;concentration&quot;,
	[&quot;mass/power&quot;] = &quot;mass per unit power&quot;,
	[&quot;mass/time&quot;] = &quot;mass per unit time&quot;,
	[&quot;mass/volume&quot;] = { utype = &quot;density&quot;, link = &quot;Density&quot; },
	[&quot;power/mass&quot;] = &quot;power per unit mass&quot;,
	[&quot;power/volume&quot;] = { link = &quot;Power density&quot; },
	[&quot;pressure/length&quot;] = &quot;fracture gradient&quot;,
	[&quot;speed/time&quot;] = { utype = &quot;acceleration&quot;, link = &quot;Acceleration&quot; },
	[&quot;volume/area&quot;] = &quot;volume per unit area&quot;,
	[&quot;volume/length&quot;] = &quot;volume per unit length&quot;,
	[&quot;volume/time&quot;] = &quot;flow&quot;,
}

return {
	all_units = all_units,
	default_exceptions = default_exceptions,
	link_exceptions = link_exceptions,
	per_unit_fixups = per_unit_fixups,
}</text>
      <sha1>cc2q22p013hj8usve1fbpi52s7i88e6</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert/extra</title>
    <ns>828</ns>
    <id>40157613</id>
    <revision>
      <id>802247283</id>
      <parentid>795876384</parentid>
      <timestamp>2017-09-24T22:48:36Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>try Bcuft for billion cubic feet per [[Template talk:Convert#e9 units in a table - display only the figures]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1176">-- Extra conversion data used by Module:Convert.
--
-- [[Module:Convert/data]] defines all units and is transcluded in all pages
-- where [[Module:Convert]] is used. Testing new units by editing that module
-- would invalidate the cache for all affected pages.
--
-- For quick changes and experiments with new units, this module can be edited.
-- Since this module is transcluded in only a small number of pages, changes
-- should cause little server overhead and should propagate quickly.
--
-- If a unit is defined in the data module, any definition here is ignored,
-- so defining the same unit in both modules is not an error.
-- A unit defined here can refer to units that are also defined here, and
-- can refer to units defined in the data module.
--
-- Periodically, those extra units that are wanted permanently can be removed
-- from here after being added to [[Module:Convert/data]].

local extra_units = {
    [&quot;Bcuft&quot;] = {
	name1    = &quot;billion cubic foot&quot;,
	name2    = &quot;billion cubic feet&quot;,
	symbol   = &quot;billion cu&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 28316846.592,
	default  = &quot;Gl&quot;,
	link     = &quot;Cubic foot&quot;,
    },
}

return { extra_units = extra_units }</text>
      <sha1>1t6c2q8kphmavm0074p1rzwdju8gnjp</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert/text</title>
    <ns>828</ns>
    <id>39508461</id>
    <revision>
      <id>795876380</id>
      <parentid>788386389</parentid>
      <timestamp>2017-08-17T01:39:26Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="20156">-- Text used by Module:Convert for enwiki.
-- This is a separate module to simplify translation for use on another wiki.
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.

-- Some units accept an SI prefix before the unit code, such as &quot;kg&quot; for kilogram.
local SIprefixes = {
	-- The prefix field is what the prefix should be, if different from the prefix used.
	['Y'] = { exponent = 24, name = 'yotta',                  },
	['Z'] = { exponent = 21, name = 'zetta',                  },
	['E'] = { exponent = 18, name = 'exa'  ,                  },
	['P'] = { exponent = 15, name = 'peta' ,                  },
	['T'] = { exponent = 12, name = 'tera' ,                  },
	['G'] = { exponent =  9, name = 'giga' ,                  },
	['M'] = { exponent =  6, name = 'mega' ,                  },
	['k'] = { exponent =  3, name = 'kilo' ,                  },
	['h'] = { exponent =  2, name = 'hecto',                  },
	['da']= { exponent =  1, name = 'deca' , name_us = 'deka' },
	['d'] = { exponent = -1, name = 'deci' ,                  },
	['c'] = { exponent = -2, name = 'centi',                  },
	['m'] = { exponent = -3, name = 'milli',                  },
	[''] = { exponent = -6, name = 'micro', prefix = ''     },  -- key = 'GREEK SMALL LETTER MU' (U+03BC) utf-8 CE BC
	[''] = { exponent = -6, name = 'micro',                  },  -- key = 'MICRO SIGN' (U+00B5) utf-8 C2 B5
	['u'] = { exponent = -6, name = 'micro', prefix = ''     },  -- not an SI prefix, but allow for people typing this
	['n'] = { exponent = -9, name = 'nano' ,                  },
	['p'] = { exponent =-12, name = 'pico' ,                  },
	['f'] = { exponent =-15, name = 'femto',                  },
	['a'] = { exponent =-18, name = 'atto' ,                  },
	['z'] = { exponent =-21, name = 'zepto',                  },
	['y'] = { exponent =-24, name = 'yocto',                  },
}

-- Some units can be qualified with one of the following prefixes, when linked.
local customary_units = {
	{ &quot;US&quot;, link = &quot;United States customary units&quot; },
	{ &quot;U.S.&quot;, link = &quot;United States customary units&quot; },
	{ &quot;imperial&quot;, link = &quot;Imperial units&quot; },
	{ &quot;imp&quot;, link = &quot;Imperial units&quot; },
}

-- Names when using engineering notation (a prefix of &quot;eN&quot; where N is a number; example &quot;e6km&quot;).
-- key = { &quot;name&quot;, link = &quot;article title&quot;, exponent = numeric_key_value }
-- If lk=on and link is defined, the name of the number will appear as a link.
local eng_scales = {
	[&quot;3&quot;]  = { &quot;thousand&quot;, exponent = 3 },
	[&quot;6&quot;]  = { &quot;million&quot;, exponent = 6 },
	[&quot;9&quot;]  = { &quot;billion&quot;, link = &quot;1000000000 (number)&quot;, exponent = 9 },
	[&quot;12&quot;] = { &quot;trillion&quot;, link = &quot;1000000000000 (number)&quot;, exponent = 12 },
	[&quot;15&quot;] = { &quot;quadrillion&quot;, link = &quot;1000000000000000 (number)&quot;, exponent = 15 },
}

local all_categories = {
	unit = &quot;[[Category:Convert errors]]&quot;,
	option = &quot;[[Category:Convert errors]]&quot;,
	warning = '[[Category:Convert invalid options]]',
	tracking = '[[Category:Convert tracking]]',
}

-- For some error messages, the following puts the wanted style around
-- each unit code marked like '...%{ft%}...'.
local unitcode_regex = '%%([{}])'
local unitcode_replace = { ['{'] = '&quot;', ['}'] = '&quot;' }  -- no longer need the more elaborate substitute used before 2013-09-28

-- All messages that may be displayed if a problem occurs.
local all_messages = {
	-- Message format string: $1=title, $2=text, $3=category, $4=anchor.
	-- Each displayed message starts with &quot;Convert:&quot; so can easily locate by searching article.
	cvt_format = '&lt;sup class=&quot;noprint Inline-Template&quot; style=&quot;white-space:nowrap;&quot;&gt;[&lt;i&gt;[[Help:Convert messages#$4|&lt;span title=&quot;Convert: $1&quot;&gt;convert: $2&lt;/span&gt;]]&lt;/i&gt;]&lt;/sup&gt;$3&lt;span class=&quot;error&quot;&gt;&lt;/span&gt;',
	cvt_format2 = '&lt;sup class=&quot;noprint Inline-Template&quot; style=&quot;white-space:nowrap;&quot;&gt;[[Help:Convert messages#$4|&lt;span title=&quot;Convert: $1&quot;&gt;$2&lt;/span&gt;]]&lt;/sup&gt;$3&lt;span class=&quot;error&quot;&gt;&lt;/span&gt;',
	cvt_format_preview = '&lt;strong class=&quot;error&quot;&gt;Error in convert: $1 [[Help:Convert messages#$4|(help)]]&lt;/strong&gt;$3',
	-- Each of following messages is a table:
	-- { [1] = 'title',         -- mouseover title text
	--   [2] = 'text',          -- link text displayed in article
	--   [3] = 'category key',  -- key to lookup category in all_categories
	--   [4] = 'anchor',        -- anchor for link to relevant section on help page
	--   regex = gsub_regex,
	--   replace = gsub_table,
	-- }                    Mouseover title text                           Link text               CatKey     Anchor
	cvt_bad_input      = { 'input &quot;$1&quot; must be a number and unit'       , 'invalid input'       , 'option',  'invalid_input'        },
	cvt_bad_num        = { 'Value &quot;$1&quot; must be a number'                , 'invalid number'      , 'option',  'invalid_number'       },
	cvt_big_prec       = { 'Precision &quot;$1&quot; is too large'                , 'precision too large' , 'option',  'precision_too_large'  },
	cvt_invalid_num    = { 'Number has overflowed'                      , 'number overflow'     , 'option',  'number_overflow'      },
	cvt_no_num         = { 'Needs the number to be converted'           , 'needs a number'      , 'option',  'needs_number'         },
	cvt_no_num2        = { 'Needs another number for a range'           , 'needs another number', 'option',  'needs_another_number' },
	cvt_bad_frac       = { '&quot;$1&quot; needs an integer above 1'              , 'invalid fraction'    , 'option',  'invalid_fraction'     },
	cvt_bad_prec       = { 'Precision &quot;$1&quot; must be an integer'          , 'invalid precision'   , 'option',  'invalid_precision'    },
	cvt_bad_sigfig     = { '&quot;$1&quot; needs a positive integer'              , 'invalid sigfig'      , 'option',  'invalid_sigfig'       },
	cvt_empty_option   = { 'Ignored empty option &quot;$1&quot;'                  , 'empty option'        , 'option',  'empty_option'         },
	cvt_deprecated     = { 'Option &quot;$1&quot; is deprecated'                  , '*'                   , 'option',  'deprecated_option', format = 'cvt_format2', nowarn = true },
	cvt_no_spell       = { 'Spelling is not available'                  , 'bug, ask for help'   , 'option',  'ask_for_help'         },
	cvt_unknown_option = { 'Ignored invalid option &quot;$1&quot;'                , 'invalid option'      , 'option',  'invalid_option'       },
	cvt_wd_fail        = { 'Unable to access Wikidata'                  , 'wikidata problem'    , 'option',  'wikidata_problem'     },
	cvt_bad_default    = { 'Unit &quot;$1&quot; has an invalid default'           , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_bad_unit       = { 'Unit &quot;$1&quot; is invalid here'                  , 'unit invalid here'   , 'unit'  ,  'unit_invalid_here'    },
	cvt_no_default     = { 'Unit &quot;$1&quot; has no default output unit'       , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_no_unit        = { 'Needs name of unit'                         , 'needs unit name'     , 'unit'  ,  'needs_unit_name'      },
	cvt_unknown        = { 'Unit name &quot;$1&quot; is not known'                , 'unknown unit'        , 'unit'  ,  'unknown_unit'         },
	cvt_should_be      = { '$1'                                         , 'ambiguous unit'      , 'unit'  ,  'ambiguous_unit', regex = unitcode_regex, replace = unitcode_replace },
	cvt_mismatch       = { 'Cannot convert &quot;$1&quot; to &quot;$2&quot;'                , 'unit mismatch'       , 'unit'  ,  'unit_mismatch'        },
	cvt_bug_convert    = { 'Bug: Cannot convert between specified units', 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_lookup         = { 'Unit &quot;$1&quot; is incorrectly defined'           , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
}

-- Text to join input value/unit with output value/unit.
local disp_joins = {
	-- [1]=before output, [2]=after output, [3]=between outputs in a combination; default &quot;; &quot;
	-- [wantname] gives default abbr=off
	[&quot;or&quot;]         = { &quot; or &quot;    , &quot;&quot; , &quot; or &quot;, wantname = true },
	[&quot;sqbr-sp&quot;]    = { &quot; [&quot;      , &quot;]&quot; },
	[&quot;sqbr-nbsp&quot;]  = { &quot;&amp;nbsp;[&quot; , &quot;]&quot; },
	[&quot;comma&quot;]      = { &quot;, &quot;      , &quot;&quot; , &quot;, &quot; },
	[&quot;slash-sp&quot;]   = { &quot; / &quot;     , &quot;&quot; , wantname = true },
	[&quot;slash-nbsp&quot;] = { &quot;&amp;nbsp;/ &quot;, &quot;&quot; , wantname = true },
	[&quot;slash-nosp&quot;] = { &quot;/&quot;       , &quot;&quot; , wantname = true },
	[&quot;b&quot;]          = { &quot; (&quot;      , &quot;)&quot; },
	[&quot;(or)&quot;]       = { &quot; (&quot;      , &quot;)&quot;, &quot; or &quot; },
	[&quot;br&quot;]         = { &quot;&lt;br /&gt;&quot;  , &quot;&quot; , wantname = true },
	[&quot;br()&quot;]       = { &quot;&lt;br /&gt;(&quot; , &quot;)&quot;, wantname = true },
}

-- Text to separate values in a range.
local range_types = {
	-- Specifying a table requires either:
	-- * &quot;off&quot; and &quot;on&quot; values (for &quot;abbr=off&quot; and &quot;abbr=on&quot;), or
	-- * &quot;input&quot; and &quot;output&quot; values (for LHS and RHS);
	-- other fields are optional.
	-- When &quot;adj=on|abbr=off&quot; applies, spaces in range text are replaced with hyphens.
	-- With &quot;exception = true&quot;, that also occurs with &quot;adj=on|abbr=on&quot;.
	-- If &quot;adj&quot; is defined here, that text (unchanged) is used with &quot;adj=on&quot;.
	[&quot;+&quot;]      = &quot; + &quot;,
	[&quot;,&quot;]      = &quot;,&amp;nbsp;&quot;,
	[&quot;, and&quot;]  = &quot;, and &quot;,
	[&quot;, or&quot;]   = &quot;, or &quot;,
	[&quot;by&quot;]     = &quot; by &quot;,
	[&quot;-&quot;]      = &quot;&quot;,
	[&quot;to about&quot;] = &quot; to about &quot;,
	[&quot;and&quot;]    = { off = &quot; and &quot;, on = &quot; and &quot;, exception = true },
	[&quot;and(-)&quot;] = { input = &quot; and &quot;, output = &quot;&quot; },
	[&quot;or&quot;]     = { off = &quot; or &quot; , on = &quot; or &quot; , exception = true },
	[&quot;to&quot;]     = { off = &quot; to &quot; , on = &quot; to &quot; , exception = true },
	[&quot;to(-)&quot;]  = { input = &quot;&amp;nbsp;to &quot;, output = &quot;&quot; },
	[&quot;+/-&quot;]    = { off = &quot;&amp;nbsp;&amp;nbsp;&quot;, on = &quot;&amp;nbsp;&amp;nbsp;&quot;, adj = &quot;&amp;nbsp;&amp;nbsp;&quot;, is_range_change = true },
	[&quot;by(x)&quot;]  = { input = &quot; by &quot;, output = &quot; &amp;nbsp;&quot;, out_range_x = true },
	[&quot;x&quot;]      = { off = &quot; by &quot;, on = &quot; &amp;nbsp;&quot;, abbr_range_x = true },
	[&quot;xx&quot;]     = &quot;&amp;nbsp;&amp;nbsp;&quot;,
	[&quot;*&quot;]      = &quot;&quot;,  -- use &quot;*&quot; to replace &quot;x&quot; in {{convert/2}} which is different from &quot;x&quot; in old {{convert}}
	[&quot;/&quot;]      = &quot;&amp;thinsp;/&amp;thinsp;&quot;,  -- for a table of high/low temperatures with {{convert|83|/|63|F|disp=br()|abbr=values}}
	[&quot;#&quot;]      = { off = &quot;, &quot;, on = &quot;, &quot;, abbr_range_x = true, adj = &quot;&amp;nbsp;&amp;nbsp;&quot; },  -- to show multiple Wikidata values
}

local range_aliases = {
	-- [&quot;alternative name for a range&quot;] = &quot;standard range name&quot;
	[&quot;&amp;&quot;]        = &quot;and&quot;,
	[&quot;&quot;]        = &quot;-&quot;,
	[&quot;&amp;ndash;&quot;]  = &quot;-&quot;,
	[&quot;to-&quot;]      = &quot;to(-)&quot;,
	[&quot;&quot;]        = &quot;x&quot;,
	[&quot;&amp;times;&quot;]  = &quot;x&quot;,
	[&quot;&quot;]        = &quot;+/-&quot;,
	[&quot;&amp;plusmn;&quot;] = &quot;+/-&quot;,
}

-- Convert accepts range text delimited with whitespace, for example, {{convert|1 to 2|ft}}.
-- In addition, the following &quot;words&quot; are accepted without spaces, for example, {{convert|1-2|ft}}.
-- Words must be in correct order for searching, for example, 'x' after 'xx'.
local range_words = { '-', '', 'xx', 'x', '*' }

local ranges = {
	types = range_types,
	aliases = range_aliases,
	words = range_words,
}

-- Valid option names.
local en_option_name = {
	-- [&quot;local text for option name&quot;] = &quot;en name used in this module&quot;
	[&quot;$&quot;] = &quot;$&quot;,
	[&quot;abbr&quot;] = &quot;abbr&quot;,
	[&quot;adj&quot;] = &quot;adj&quot;,
	[&quot;comma&quot;] = &quot;comma&quot;,
	[&quot;debug&quot;] = &quot;debug&quot;,
	[&quot;disp&quot;] = &quot;disp&quot;,
	[&quot;frac&quot;] = &quot;frac&quot;,
	[&quot;input&quot;] = &quot;input&quot;,
	[&quot;lang&quot;] = &quot;lang&quot;,
	[&quot;lk&quot;] = &quot;lk&quot;,
	[&quot;near&quot;] = &quot;near&quot;,
	[&quot;order&quot;] = &quot;order&quot;,
	[&quot;qid&quot;] = &quot;qid&quot;,
	[&quot;qual&quot;] = &quot;qual&quot;,
	[&quot;qualifier&quot;] = &quot;qual&quot;,
	[&quot;round&quot;] = &quot;round&quot;,
	[&quot;sigfig&quot;] = &quot;sigfig&quot;,
	[&quot;sing&quot;] = &quot;adj&quot;,                   -- &quot;sing&quot; is an old alias for &quot;adj&quot;
	[&quot;sortable&quot;] = &quot;sortable&quot;,
	[&quot;sp&quot;] = &quot;sp&quot;,
	[&quot;spell&quot;] = &quot;spell&quot;,
	[&quot;stylein&quot;] = &quot;stylein&quot;,
	[&quot;styleout&quot;] = &quot;styleout&quot;,
	[&quot;tracking&quot;] = &quot;tracking&quot;,
}

-- Valid option values.
-- Convention: parms.opt_xxx refers to an option that is set here
-- (not intended to be set by the template which invokes this module).
-- Example: At enwiki, &quot;abbr&quot; includes:
--     [&quot;comma&quot;] = &quot;opt_nocomma&quot;
-- As a result, if the template uses abbr=comma, Module:Convert sets:
--     parms[&quot;opt_nocomma&quot;] = true
--     parms[&quot;abbr&quot;] = nil
-- Therefore parms.abbr will be nil, or will have one of the listed values
-- that do not start with &quot;opt_&quot;.
-- An option value of form &quot;xxx?&quot; is the same as &quot;xxx&quot; but shows the input as deprecated.
local en_option_value = {
	-- $=x is handled as a special case: x should be a currency symbol that will be used instead of &quot;$&quot;
	[&quot;abbr&quot;] = {
		-- [&quot;local text for option value&quot;] = &quot;en value used in this module&quot;
		[&quot;comma&quot;] = &quot;opt_nocomma?&quot;,     -- no numsep in input or output numbers
		[&quot;def&quot;] = &quot;&quot;,                   -- ignored (some wrapper templates call convert with &quot;abbr=def&quot; to mean &quot;default abbreviation&quot;)
		[&quot;h&quot;] = &quot;on&quot;,                   -- abbr=on + use &quot;h&quot; for hand unit (default)
		[&quot;hh&quot;] = &quot;opt_hand_hh&quot;,         -- abbr=on + use &quot;hh&quot; for hand unit
		[&quot;in&quot;] = &quot;in&quot;,                  -- use symbol for LHS unit
		[&quot;mos&quot;] = &quot;mos&quot;,                -- in a range, repeat the input unit (no longer used)
		[&quot;none&quot;] = &quot;off&quot;,               -- old name for &quot;off&quot;
		[&quot;off&quot;] = &quot;off&quot;,                -- use name for all units
		[&quot;on&quot;] = &quot;on&quot;,                  -- use symbol for all units
		[&quot;out&quot;] = &quot;out&quot;,                -- use symbol for RHS unit (default)
		[&quot;unit&quot;] = &quot;unit&quot;,              -- abbr=on but abbreviate units only: e6km  million km (not 10 km)
		[&quot;values&quot;] = &quot;opt_values&quot;,      -- show only input and output numbers, not units
		[&quot;~&quot;] = &quot;opt_also_symbol&quot;,      -- show input unit symbol as well as name
	},
	[&quot;adj&quot;] = {
		[&quot;1&quot;] = &quot;opt_singular&quot;,         -- unit name is singular when value satisfies: (-1 &lt;= v and v &lt; 0) or (0 &lt; v and v &lt;= 1)
		[&quot;flip&quot;] = &quot;opt_flip?&quot;,         -- reverse order of input/output
		[&quot;j&quot;] = &quot;opt_use_nbsp&quot;,         -- &quot;join&quot;: use &quot;&amp;nbsp;&quot; instead of &quot; &quot; between value and unit name
		[&quot;mid&quot;] = &quot;opt_adjectival, opt_adj_mid&quot;,  -- adj=on with user-specified text after input unit (between input and output)
		[&quot;nocomma&quot;] = &quot;opt_nocomma?&quot;,   -- no numsep in input or output numbers
		[&quot;off&quot;] = &quot;&quot;,                   -- ignored (off is the default)
		[&quot;on&quot;] = &quot;opt_adjectival&quot;,      -- unit name is singular and hyphenated
		[&quot;pre&quot;] = &quot;opt_one_preunit&quot;,    -- user-specified text before input unit
		[&quot;ri0&quot;] = &quot;opt_ri=0&quot;,           -- round input with precision = 0
		[&quot;ri1&quot;] = &quot;opt_ri=1&quot;,           -- round input with precision = 1
		[&quot;ri2&quot;] = &quot;opt_ri=2&quot;,           -- round input with precision = 2
		[&quot;ri3&quot;] = &quot;opt_ri=3&quot;,           -- round input with precision = 3
	},
	[&quot;comma&quot;] = {
		[&quot;5&quot;] = &quot;opt_comma5&quot;,           -- only use numsep grouping if 5 or more digits
		[&quot;gaps&quot;] = &quot;opt_gaps&quot;,          -- use gaps, not numsep, to separate groups of digits
		[&quot;gaps3&quot;] = &quot;opt_gaps, opt_gaps3&quot;,  -- group only in threes rather than default of no gap before a single digit after decimal mark
		[&quot;gaps5&quot;] = &quot;opt_gaps?&quot;,        -- deprecated 2015-05-29, was: opt_gaps + opt_comma5
		[&quot;off&quot;] = &quot;opt_nocomma&quot;,        -- no numsep in input or output numbers
	},
	[&quot;debug&quot;] = {
		[&quot;yes&quot;] = &quot;opt_sortable_debug&quot;, -- make the normally hidden sort key visible
	},
	[&quot;disp&quot;] = {
		[&quot;/&quot;] = &quot;or?&quot;,                  -- see &quot;slash&quot;
		[&quot;2&quot;] = &quot;opt_output_only?&quot;,     -- display only output value and symbol/name (not input)
		[&quot;5&quot;] = &quot;opt_round=5&quot;,          -- round output value to nearest 5
		[&quot;b&quot;] = &quot;b&quot;,                    -- join: '(...)'
		[&quot;(or)&quot;] = &quot;(or)&quot;,              -- join: '(...)' with 'or' between outputs in a combination
		[&quot;br&quot;] = &quot;br&quot;,                  -- join: '&lt;br /&gt;'
		[&quot;br()&quot;] = &quot;br()&quot;,              -- join: '&lt;br /&gt;(...)'
		[&quot;comma&quot;] = &quot;comma&quot;,            -- join: ','
		[&quot;flip&quot;] = &quot;opt_flip&quot;,          -- reverse order of input/output
		[&quot;flip5&quot;] = &quot;opt_flip, opt_round=5?&quot;,  -- disp=flip + disp=5
		[&quot;nocomma&quot;] = &quot;opt_nocomma?&quot;,   -- no numsep in input or output numbers
		[&quot;number&quot;] = &quot;opt_output_number_only&quot;,  -- display output value (not input, and not output symbol/name)
		[&quot;or&quot;] = &quot;or&quot;,                  -- join: 'or'
		[&quot;out&quot;] = &quot;opt_output_only&quot;,
		[&quot;output number only&quot;] = &quot;opt_output_number_only&quot;,
		[&quot;output only&quot;] = &quot;opt_output_only&quot;,
		[&quot;preunit&quot;] = &quot;opt_two_preunits&quot;,    -- user-specified text before input and output units
		[&quot;s&quot;] = &quot;or?&quot;,                  -- see &quot;slash&quot;
		[&quot;slash&quot;] = &quot;or?&quot;,              -- 2014-11-03: &quot;disp=slash&quot; is now equivalent to &quot;disp=or&quot; as slash is unhelpful
		[&quot;sqbr&quot;] = &quot;sqbr&quot;,              -- join: '[...]'
		[&quot;table&quot;] = &quot;opt_table&quot;,        -- output is suitable for a table cell with align=&quot;right&quot;
		[&quot;tablecen&quot;] = &quot;opt_tablecen&quot;,  -- output is suitable for a table cell with align=&quot;center&quot;
		[&quot;u2&quot;] = &quot;opt_output_unit_only?&quot;, -- display output symbol/name (not input, and not output value)
		[&quot;unit&quot;] = &quot;opt_input_unit_only&quot;, -- display input symbol/name (not output, and not input value)
		[&quot;unit or text&quot;] = &quot;opt_input_unit_only, opt_ignore_error&quot;, -- display input symbol/name, or given unit code if not known
		[&quot;unit2&quot;] = &quot;opt_output_unit_only&quot;,
		[&quot;x&quot;] = &quot;x&quot;,                    -- join: &lt;first&gt;...&lt;second&gt; (user-specified text)
	},
	-- frac=x is handled as a special case: x must be an integer (possibly in local language) = 2 or more
	-- input=x is handled as a special case: x should be &lt;value&gt;&lt;space&gt;&lt;unitcode&gt; or &lt;wikidata-property-id&gt;
	[&quot;lang&quot;] = {                        -- language for output digits (both en and local digits are always accepted for input)
		[&quot;en&quot;] = &quot;opt_lang_en&quot;,         -- use en digits for numbers, regardless of local language
		[&quot;local&quot;] = &quot;opt_lang_local&quot;,   -- use local digits for numbers (default, although config can change default to en)
	},
	[&quot;lk&quot;] = {
		[&quot;in&quot;] = &quot;in&quot;,                  -- link LHS unit name or symbol
		[&quot;off&quot;] = &quot;off&quot;,                -- do not link: same as default except for hand unit
		[&quot;on&quot;] = &quot;on&quot;,                  -- link all unit names or symbols (but not twice for the same unit)
		[&quot;out&quot;] = &quot;out&quot;,                -- link RHS unit name or symbol
	},
	[&quot;near&quot;] = {
		[&quot;5&quot;] = &quot;opt_round=5?&quot;,         -- round output value to nearest 5
	},
	[&quot;order&quot;] = {
		[&quot;flip&quot;] = &quot;opt_flip&quot;,          -- reverse order of input/output
		[&quot;out&quot;] = &quot;opt_order_out&quot;,      -- do not show input; instead, use order in output combination, with the first output shown as the input
	},
	-- qid=x is handled as a special case: x should be a Wikidata Q item identifier.
	-- qual=x is handled as a special case: x should be a Wikidata Q item identifier.
	[&quot;round&quot;] = {
		[&quot;0.5&quot;] = &quot;opt_round=0.5&quot;,      -- round output value to nearest 0.5
		[&quot;5&quot;] = &quot;opt_round=5&quot;,          -- round output value to nearest 5
		[&quot;10&quot;] = &quot;opt_round=10&quot;,        -- round output value to nearest 10 (same as but clearer than &quot;|-1&quot;)
		[&quot;25&quot;] = &quot;opt_round=25&quot;,        -- round output value to nearest 25
		[&quot;50&quot;] = &quot;opt_round=50&quot;,        -- round output value to nearest 50
		[&quot;each&quot;] = &quot;opt_round_each&quot;,    -- using default precision in a range, round each output separately (default uses highest precision of each item in range)
	},
	-- sigfig=x is handled as a special case: x must be an integer (possibly in local language) = 1 or more
	[&quot;sortable&quot;] = {
		[&quot;off&quot;] = &quot;&quot;,                   -- ignored (off is the default)
		[&quot;in&quot;] = &quot;opt_sortable_on?&quot;,    -- same as &quot;on&quot;
		[&quot;on&quot;] = &quot;opt_sortable_on&quot;,     -- output sort key for use in a sortable table, based on value from converting to a standard base unit
		[&quot;out&quot;] = &quot;opt_sortable_on?&quot;,   -- same as &quot;on&quot;
	},
	[&quot;sp&quot;] = {
		[&quot;us&quot;] = &quot;opt_sp_us&quot;,           -- use U.S. spelling (like &quot;meter&quot; instead of default &quot;metre&quot;)
	},
	[&quot;spell&quot;] = {                       -- only English spelling is supported; not scientific notation; only some fractions
		[&quot;in&quot;] = &quot;opt_spell_in&quot;,        -- spell input value in words
		[&quot;In&quot;] = &quot;opt_spell_in, opt_spell_upper&quot;,                -- spell input value in words with first letter uppercase
		[&quot;on&quot;] = &quot;opt_spell_in, opt_spell_out&quot;,                  -- spell input and output values in words
		[&quot;On&quot;] = &quot;opt_spell_in, opt_spell_out, opt_spell_upper&quot;, -- same, with first letter of first word in result uppercase
	},
	-- stylein=x is handled as a special case: x can be any text
	-- styleout=x is handled as a special case: x can be any text
	-- tracking=x is handled as a special case: x can be any text
}

return {
	SIprefixes = SIprefixes,
	all_categories = all_categories,
	all_messages = all_messages,
	currency = { ['$'] = true, [''] = true },
	customary_units = customary_units,
	disp_joins = disp_joins,
	en_option_name = en_option_name,
	en_option_value = en_option_value,
	eng_scales = eng_scales,
	ranges = ranges,
}</text>
      <sha1>39ore4pqagg8qc5v05d5r6l2w6h2smh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Effective protection expiry</title>
    <ns>828</ns>
    <id>48785459</id>
    <revision>
      <id>744227741</id>
      <parentid>740797535</parentid>
      <timestamp>2016-10-13T22:30:40Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>don't error if the page isn't under PC</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1494">local p = {}

-- Returns the expiry of a restriction of an action on a given title, or unknown if it cannot be known.
-- If no title is specified, the title of the page being displayed is used.
function p._main(action, pagename)
	local title
	if type(pagename) == 'table' and pagename.prefixedText then
		title = pagename
	elseif pagename then
		title = mw.title.new(pagename)
	else
		title = mw.title.getCurrentTitle()
	end
	pagename = title.prefixedText
	if action == 'autoreview' then
		local stabilitySettings = mw.ext.FlaggedRevs.getStabilitySettings(title)
		return stabilitySettings and stabilitySettings.expiry or 'unknown'
	elseif action ~= 'edit' and action ~= 'move' and action ~= 'create' and action ~= 'upload' then
		error( 'First parameter must be one of edit, move, create, upload, autoreview', 2 )
	end
	local rawExpiry = mw.getCurrentFrame():callParserFunction('PROTECTIONEXPIRY', action, pagename)
	if rawExpiry == 'infinity' then
		return 'infinity'
	elseif rawExpiry == '' then
		return 'unknown'
	else
		local year, month, day, hour, minute, second = rawExpiry:match(
			'^(%d%d%d%d)(%d%d)(%d%d)(%d%d)(%d%d)(%d%d)$'
		)
		if year then
			return string.format(
				'%s-%s-%sT%s:%s:%s',
				year, month, day, hour, minute, second
			)
		else
			error('internal error in Module:Effective protection expiry; malformed expiry timestamp')
		end
	end
end

setmetatable(p, { __index = function(t, k)
	return function(frame)
		return t._main(k, frame.args[1])
	end
end })

return p</text>
      <sha1>i1wms02y1w048cq6uttka18a5pjzp63</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Effective protection level</title>
    <ns>828</ns>
    <id>41617327</id>
    <revision>
      <id>713934935</id>
      <parentid>708059351</parentid>
      <timestamp>2016-04-06T17:04:11Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>handle extendedconfirmed</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3018">local p = {}

-- Returns the permission required to perform a given action on a given title.
-- If no title is specified, the title of the page being displayed is used.
function p._main(action, pagename)
	local title
	if type(pagename) == 'table' and pagename.prefixedText then
		title = pagename
	elseif pagename then
		title = mw.title.new(pagename)
	else
		title = mw.title.getCurrentTitle()
	end
	pagename = title.prefixedText
	if action == 'autoreview' then
		local level = mw.ext.FlaggedRevs.getStabilitySettings(title)
		level = level and level.autoreview
		if level == 'review' then
			return 'reviewer'
		elseif level ~= '' then
			return level
		else
			return nil -- not '*'. a page not being PC-protected is distinct from it being PC-protected with anyone able to review. also not '', as that would mean PC-protected but nobody can review
		end
	elseif action ~= 'edit' and action ~= 'move' and action ~= 'create' and action ~= 'upload' then
		error( 'First parameter must be one of edit, move, create, upload, autoreview', 2 )
	end
	if title.namespace == 8 then -- MediaWiki namespace
		return 'sysop'
	elseif title.namespace == 2 and title.isSubpage and ( title.contentModel == 'javascript' or title.contentModel == 'css' ) then -- user JS or CSS page
		return 'sysop'
	end
	local level = title.protectionLevels[action] and title.protectionLevels[action][1]
	if level == 'sysop' or level == 'editprotected' then
		return 'sysop'
	elseif title.cascadingProtection.restrictions[action] and title.cascadingProtection.restrictions[action][1] then -- used by a cascading-protected page
		return 'sysop'
	elseif level == 'templateeditor' then
		return 'templateeditor'
	elseif action == 'move' then
		local blacklistentry = mw.ext.TitleBlacklist.test('edit', pagename) -- Testing action edit is correct, since this is for the source page. The target page name gets tested with action move.
		if blacklistentry and not blacklistentry.params.autoconfirmed then
			return 'templateeditor'
		elseif title.namespace == 6 then
			return 'filemover'
		elseif level == 'extendedconfirmed' then
			return 'extendedconfirmed'
		else
			return 'autoconfirmed'
		end
	end
	local blacklistentry = mw.ext.TitleBlacklist.test(action, pagename)
	if blacklistentry then
		if not blacklistentry.params.autoconfirmed then
			return 'templateeditor'
		elseif level == 'extendedconfirmed' then
			return 'extendedconfirmed'
		else
			return 'autoconfirmed'
		end
	elseif level == 'editsemiprotected' then -- create-semiprotected pages return this for some reason
		return 'autoconfirmed'
	elseif level then
		return level
	elseif action == 'upload' then
		return 'autoconfirmed'
	elseif action == 'create' and title.namespace % 2 == 0 and title.namespace ~= 118 then -- You need to be registered, but not autoconfirmed, to create non-talk pages other than drafts
		return 'user'
	else
		return '*'
	end
end

setmetatable(p, { __index = function(t, k)
	return function(frame)
		return t._main(k, frame.args[1])
	end
end })

return p</text>
      <sha1>6hocqvqqlqw255k1l856h6hwlqsf6e1</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Error</title>
    <ns>828</ns>
    <id>38948927</id>
    <revision>
      <id>750709040</id>
      <parentid>636708920</parentid>
      <timestamp>2016-11-21T11:11:11Z</timestamp>
      <contributor>
        <username>Materialscientist</username>
        <id>7852030</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:Error]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1129">-- This module implements {{error}}.

local p = {}

local function _error(args)
    local tag = mw.ustring.lower(tostring(args.tag))

    -- Work out what html tag we should use.
    if not (tag == 'p' or tag == 'span' or tag == 'div') then
        tag = 'strong'
    end

    -- Generate the html.
    return tostring(mw.html.create(tag)
        :addClass('error')
        :wikitext(tostring(args.message or args[1] or error('no message specified', 2)))
    )
end

function p.error(frame)
    local args
    if type(frame.args) == 'table' then
        -- We're being called via #invoke. The args are passed through to the module
        -- from the template page, so use the args that were passed into the template.
        args = frame.args
    else
        -- We're being called from another module or from the debug console, so assume
        -- the args are passed in directly.
        args = frame
    end
    -- if the message parameter is present but blank, change it to nil so that Lua will
    -- consider it false.
    if args.message == &quot;&quot; then
        args.message = nil
    end
    return _error(args)
end

return p</text>
      <sha1>swpvwjcdmj2mkkmx9f7rbsdrfsnmirh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:File link</title>
    <ns>828</ns>
    <id>42903140</id>
    <revision>
      <id>638642222</id>
      <parentid>638639021</parentid>
      <timestamp>2014-12-18T14:05:07Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>when calling this from wikitext use a more readable error message for missing file parameters</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2544">-- This module provides a library for formatting file wikilinks.

local yesno = require('Module:Yesno')
local checkType = require('libraryUtil').checkType

local p = {}

function p._main(args)
	checkType('_main', 1, args, 'table')

	-- This is basically libraryUtil.checkTypeForNamedArg, but we are rolling our
	-- own function to get the right error level.
	local function checkArg(key, val, level)
		if type(val) ~= 'string' then
			error(string.format(
				&quot;type error in '%s' parameter of '_main' (expected string, got %s)&quot;,
				key, type(val)
			), level)
		end
	end

	local ret = {}

	-- Adds a positional parameter to the buffer.
	local function addPositional(key)
		local val = args[key]
		if not val then
			return nil
		end
		checkArg(key, val, 4)
		ret[#ret + 1] = val
	end

	-- Adds a named parameter to the buffer. We assume that the parameter name
	-- is the same as the argument key.
	local function addNamed(key)
		local val = args[key]
		if not val then
			return nil
		end
		checkArg(key, val, 4)
		ret[#ret + 1] = key .. '=' .. val
	end

	-- Filename
	checkArg('file', args.file, 3)
	ret[#ret + 1] = 'File:' .. args.file

	-- Format
	if args.format then
		checkArg('format', args.format)
		if args.formatfile then
			checkArg('formatfile', args.formatfile)
			ret[#ret + 1] = args.format .. '=' .. args.formatfile
		else
			ret[#ret + 1] = args.format
		end
	end

	-- Border
	if yesno(args.border) then
		ret[#ret + 1] = 'border'
	end

	addPositional('location')
	addPositional('alignment')
	addPositional('size')
	addNamed('upright')
	addNamed('link')
	addNamed('alt')
	addNamed('page')
	addNamed('class')
	addNamed('lang')
	addNamed('start')
	addNamed('end')
	addNamed('thumbtime')
	addPositional('caption')

	return string.format('[[%s]]', table.concat(ret, '|'))
end

function p.main(frame)
	local origArgs = require('Module:Arguments').getArgs(frame, {
		wrappers = 'Template:File link'
	})
	if not origArgs.file then
		error(&quot;'file' parameter missing from [[Template:File link]]&quot;, 0)
	end

	-- Copy the arguments that were passed to a new table to avoid looking up
	-- every possible parameter in the frame object.
	local args = {}
	for k, v in pairs(origArgs) do
		-- Make _BLANK a special argument to add a blank parameter. For use in
		-- conditional templates etc. it is useful for blank arguments to be
		-- ignored, but we still need a way to specify them so that we can do
		-- things like [[File:Example.png|link=]].
		if v == '_BLANK' then
			v = ''
		end
		args[k] = v
	end
	return p._main(args)
end

return p</text>
      <sha1>bzc22v133v9z5yc4aisazripn6l94p8</sha1>
    </revision>
  </page>
  <page>
    <title>Module:ForLoop</title>
    <ns>828</ns>
    <id>39632466</id>
    <revision>
      <id>802231243</id>
      <parentid>802230980</parentid>
      <timestamp>2017-09-24T20:54:41Z</timestamp>
      <contributor>
        <username>Pppery</username>
        <id>28032115</id>
      </contributor>
      <comment>Fix handling of seperators -- don't add two</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2237">-- This module implements {{for loop}}.

local getArgs = require('Module:Arguments').getArgs
local yesno = require('Module:Yesno')
p = {}

function p.main(frame)
	local args = getArgs(frame, {
		trim = false,
		removeBlanks = false
	})
	return p._main(args)
end

function p._main(args)
	local template = args['call'] or 'void'
	local variableParam = args.pv
	variableParam = tonumber(variableParam) or variableParam or 1 -- fix for positional parameters
	local variableValPrefix = args.prefix or ''
	local variableValPostfix = args.postfix or ''
	local sep = args[1] or ''
	local constantArgs = p.getConstants(args)
	local variableVals = p.getVariableVals(args)

	local result = ''
	local addSeparator = false;
	for i, v in ipairs(variableVals) do
		v = mw.text.trim(v) -- trim whitespace
		if #v &gt; 0 or not yesno(args.skipBlanks) then
			if addSeparator then
				result = result .. sep
			end
			addSeparator = true;
			local targs = constantArgs
			targs[variableParam] = variableValPrefix .. v .. variableValPostfix
			local expandedTemplate = p.callTemplate(template, targs)
			result = result .. expandedTemplate
		end
	end
	return result
end

function p.getConstants(args)
	local constantArgNums = p.getArgNums(args, 'pc', 'n')
	local constantArgs = {}
	for _, num in ipairs(constantArgNums) do
		local keyArg = 'pc' .. tostring(num) .. 'n'
		local valArg = 'pc' .. tostring(num) .. 'v'
		local key = args[keyArg]
		key = tonumber(key) or key
		local value = args[valArg]
		constantArgs[key] = value
	end
	return constantArgs
end

function p.getVariableVals(args)
	local variableVals = {}
	for i, v in ipairs(args) do
		if i ~= 1 then
			variableVals[i - 1] = v
		end
	end
	return variableVals
end

function p.getArgNums(args, prefix, suffix)
	-- Returns a table containing the numbers of the arguments that exist
	-- for the specified prefix and suffix.
	local nums = {}
	local pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'
	for k, v in pairs(args) do
		local num = tostring(k):match(pattern)
		if num then
			nums[#nums + 1] = tonumber(num)
		end
	end
	table.sort(nums)
	return nums
end

function p.callTemplate(template, targs)
	return mw.getCurrentFrame():expandTemplate{title = template, args = targs}
end

return p</text>
      <sha1>ip2r2wu257a3zinlxykin16q4zc44kb</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Gapnum</title>
    <ns>828</ns>
    <id>43222024</id>
    <revision>
      <id>804711215</id>
      <parentid>804708739</parentid>
      <timestamp>2017-10-10T17:39:00Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:Gapnum]]&quot;: [[WP:High-risk templates|High-risk Lua module]]: 7,000+ transclusions ([Edit=Require extended confirmed access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3120">local p = {}

local getArgs

function p.main(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end

	local args = getArgs(frame, {wrappers = 'Template:Gapnum'})
	local n = args[1]

	if not n then
		error('Parameter 1 is required')
	elseif not tonumber(n) and not tonumber(n, 36) then -- Validates any number with base  36
		error('Unable to convert &quot;' .. args[1] .. '&quot; to a number')
	end

	local gap = args.gap
	local precision = tonumber(args.prec)

	return p.gaps(n,{gap=gap,prec=precision})
end

-- Not named p._main so that it has a better function name when required by Module:Val
function p.gaps(n,tbl)
	local nstr = tostring(n)
	if not tbl then
		tbl = {}
	end
	local gap = tbl.gap or '.25em'

	local int_part, frac_part = p.groups(n,tbl.prec)

	local ret = mw.html.create('span')
							:css('white-space','nowrap')
							-- No gap necessary on first group
							:wikitext(table.remove(int_part,1))

	-- Build int part
	for _, v in ipairs(int_part) do
		ret:tag('span')
				:css('margin-left',gap)
				:wikitext(v)
	end

	if frac_part then
		-- The first group after the decimal shouldn't have a gap
		ret:wikitext('.' .. table.remove(frac_part,1))
		-- Build frac part
		for _, v in ipairs(frac_part) do
			ret:tag('span')
					:css('margin-left',gap)
					:wikitext(v)
		end
	end

	return ret
end

-- Creates tables where each element is a different group of the number
function p.groups(num,precision)
	local nstr = tostring(num)
	if not precision then
		precision = -1
	end

	local decimalloc = nstr:find('.', 1, true)
	local int_part, frac_part
	if decimalloc == nil then
		int_part = nstr
	else
		int_part = nstr:sub(1, decimalloc-1)
		frac_part = nstr:sub(decimalloc + 1)
	end
	-- only define ret_i as an empty table, let ret_d stay nil
	local ret_i,ret_d = {}
	-- Loop to handle most of the groupings; from right to left, so that if a group has less than 3 members, it will be the first group
	while int_part:len() &gt; 3 do
		-- Insert in first spot, since we're moving backwards
		table.insert(ret_i,1,int_part:sub(-3))
		int_part = int_part:sub(1,-4)
	end
	-- handle any left over numbers
	if int_part:len() &gt; 0 then
		table.insert(ret_i,1,int_part)
	end

	if precision ~= 0 and frac_part then
		ret_d = {}
		if precision == -1 then
			precision = frac_part:len()
		end
		-- Reduce the length of the string if required precision is less than actual precision
		-- OR
		-- Increase it (by adding 0s) if the required precision is more than actual
		local offset = precision - frac_part:len()
		if offset &lt; 0 then
			frac_part = frac_part:sub(1,precision)
		elseif offset &gt; 0 then
			frac_part = frac_part .. string.rep('0', offset)
		end

		-- Allow groups of 3 or 2 (3 first)
		for v in string.gmatch(frac_part,'%d%d%d?') do
			table.insert(ret_d,v)
		end
		-- Preference for groups of 4 instead of groups of 1 at the end
		if #frac_part % 3 == 1 then
			if frac_part:len() == 1 then
				ret_d = {frac_part}
			else
				local last_g = ret_d[#ret_d] or ''
				last_g = last_g..frac_part:sub(-1)
				ret_d[#ret_d] = last_g
			end
		end
	end

	return ret_i,ret_d
end

return p</text>
      <sha1>lj5n3lgypceqtbnvwbvlt9k8birgmdl</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote</title>
    <ns>828</ns>
    <id>42498502</id>
    <revision>
      <id>779487706</id>
      <parentid>726656423</parentid>
      <timestamp>2017-05-09T05:20:32Z</timestamp>
      <contributor>
        <username>JJMC89</username>
        <id>24812038</id>
      </contributor>
      <comment>Add navigation-not-searchable class per [[Special:Permalink/779475248#Add navigation-not-searchable class|request]] (also see [[phab:T164781|T164781]])</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6703">--------------------------------------------------------------------------------
--                              Module:Hatnote                                --
--                                                                            --
-- This module produces hatnote links and links to related articles. It       --
-- implements the {{hatnote}} and {{format link}} meta-templates and includes --
-- helper functions for other Lua hatnote modules.                            --
--------------------------------------------------------------------------------

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local mArguments -- lazily initialise [[Module:Arguments]]
local yesno -- lazily initialise [[Module:Yesno]]

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getArgs(frame)
	-- Fetches the arguments from the parent frame. Whitespace is trimmed and
	-- blanks are removed.
	mArguments = require('Module:Arguments')
	return mArguments.getArgs(frame, {parentOnly = true})
end

local function removeInitialColon(s)
	-- Removes the initial colon from a string, if present.
	return s:match('^:?(.*)')
end

function p.findNamespaceId(link, removeColon)
	-- Finds the namespace id (namespace number) of a link or a pagename. This
	-- function will not work if the link is enclosed in double brackets. Colons
	-- are trimmed from the start of the link by default. To skip colon
	-- trimming, set the removeColon parameter to false.
	checkType('findNamespaceId', 1, link, 'string')
	checkType('findNamespaceId', 2, removeColon, 'boolean', true)
	if removeColon ~= false then
		link = removeInitialColon(link)
	end
	local namespace = link:match('^(.-):')
	if namespace then
		local nsTable = mw.site.namespaces[namespace]
		if nsTable then
			return nsTable.id
		end
	end
	return 0
end

function p.formatPages(...)
	-- Formats a list of pages using formatLink and returns it as an array. Nil
	-- values are not allowed.
	local pages = {...}
	local ret = {}
	for i, page in ipairs(pages) do
		ret[i] = p._formatLink(page)
	end
	return ret
end

function p.formatPageTables(...)
	-- Takes a list of page/display tables and returns it as a list of
	-- formatted links. Nil values are not allowed.
	local pages = {...}
	local links = {}
	for i, t in ipairs(pages) do
		checkType('formatPageTables', i, t, 'table')
		local link = t[1]
		local display = t[2]
		links[i] = p._formatLink(link, display)
	end
	return links
end

function p.makeWikitextError(msg, helpLink, addTrackingCategory, title)
	-- Formats an error message to be returned to wikitext. If
	-- addTrackingCategory is not false after being returned from
	-- [[Module:Yesno]], and if we are not on a talk page, a tracking category
	-- is added.
	checkType('makeWikitextError', 1, msg, 'string')
	checkType('makeWikitextError', 2, helpLink, 'string', true)
	yesno = require('Module:Yesno')
	title = title or mw.title.getCurrentTitle()
	-- Make the help link text.
	local helpText
	if helpLink then
		helpText = ' ([[' .. helpLink .. '|help]])'
	else
		helpText = ''
	end
	-- Make the category text.
	local category
	if not title.isTalkPage and yesno(addTrackingCategory) ~= false then
		category = 'Hatnote templates with errors'
		category = string.format(
			'[[%s:%s]]',
			mw.site.namespaces[14].name,
			category
		)
	else
		category = ''
	end
	return string.format(
		'&lt;strong class=&quot;error&quot;&gt;Error: %s%s.&lt;/strong&gt;%s',
		msg,
		helpText,
		category
	)
end

function p.disambiguate(page, disambiguator)
	-- Formats a page title with a disambiguation parenthetical,
	-- i.e. &quot;Example&quot;  &quot;Example (disambiguation)&quot;.
	checkType('disambiguate', 1, page, 'string')
	checkType('disambiguate', 2, disambiguator, 'string', true)
	disambiguator = disambiguator or 'disambiguation'
	return string.format('%s (%s)', page, disambiguator)
end

--------------------------------------------------------------------------------
-- Format link
--
-- Makes a wikilink from the given link and display values. Links are escaped
-- with colons if necessary, and links to sections are detected and displayed
-- with &quot;  &quot; as a separator rather than the standard MediaWiki &quot;#&quot;. Used in
-- the {{format hatnote link}} template.
--------------------------------------------------------------------------------

function p.formatLink(frame)
	local args = getArgs(frame)
	local link = args[1]
	local display = args[2]
	if not link then
		return p.makeWikitextError(
			'no link specified',
			'Template:Format hatnote link#Errors',
			args.category
		)
	end
	return p._formatLink(link, display)
end

function p._formatLink(link, display)
	checkType('_formatLink', 1, link, 'string')
	checkType('_formatLink', 2, display, 'string', true)

	-- Remove the initial colon for links where it was specified manually.
	link = removeInitialColon(link)

	-- Find whether a faux display value has been added with the {{!}} magic
	-- word.
	if not display then
		local prePipe, postPipe = link:match('^(.-)|(.*)$')
		link = prePipe or link
		display = postPipe
	end

	-- Find the display value.
	if not display then
		local page, section = link:match('^(.-)#(.*)$')
		if page then
			display = page .. ' &amp;nbsp;' .. section
		end
	end

	-- Assemble the link.
	if display then
		return string.format(
			'[[:%s|%s]]',
			string.gsub(link, '|(.*)$', ''), --display overwrites manual piping
			display
		)
	else
		return string.format('[[:%s]]', link)
	end
end

--------------------------------------------------------------------------------
-- Hatnote
--
-- Produces standard hatnote text. Implements the {{hatnote}} template.
--------------------------------------------------------------------------------

function p.hatnote(frame)
	local args = getArgs(frame)
	local s = args[1]
	local options = {}
	if not s then
		return p.makeWikitextError(
			'no text specified',
			'Template:Hatnote#Errors',
			args.category
		)
	end
	options.extraclasses = args.extraclasses
	options.selfref = args.selfref
	return p._hatnote(s, options)
end

function p._hatnote(s, options)
	checkType('_hatnote', 1, s, 'string')
	checkType('_hatnote', 2, options, 'table', true)
	options = options or {}
	local classes = {'hatnote', 'navigation-not-searchable'}
	local extraclasses = options.extraclasses
	local selfref = options.selfref
	if type(extraclasses) == 'string' then
		classes[#classes + 1] = extraclasses
	end
	if selfref then
		classes[#classes + 1] = 'selfref'
	end
	return string.format(
		'&lt;div role=&quot;note&quot; class=&quot;%s&quot;&gt;%s&lt;/div&gt;',
		table.concat(classes, ' '),
		s
	)
end

return p</text>
      <sha1>c5z31x97gktc3q7nnp8mf48t01l4qst</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote list</title>
    <ns>828</ns>
    <id>50085079</id>
    <revision>
      <id>726904710</id>
      <parentid>719917336</parentid>
      <timestamp>2016-06-25T06:18:53Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Updated from sandbox</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6873">--------------------------------------------------------------------------------
--                           Module:Hatnote list                              --
--                                                                            --
-- This module produces and formats lists for use in hatnotes. In particular, --
-- it implements the for-see list, i.e. lists of &quot;For X, see Y&quot; statements,   --
-- as used in {{about}}, {{redirect}}, and their variants. Also introduced    --
-- are andList &amp; orList helpers for formatting lists with those conjunctions. --
--------------------------------------------------------------------------------

local mArguments --initialize lazily
local mHatnote = require('Module:Hatnote')
local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local p = {}

--------------------------------------------------------------------------------
-- List stringification helper functions
--
-- These functions are used for stringifying lists, usually page lists inside
-- the &quot;Y&quot; portion of &quot;For X, see Y&quot; for-see items.
--------------------------------------------------------------------------------

--default options table used across the list stringification functions
local stringifyListDefaultOptions = {
	conjunction = &quot;and&quot;,
	separator = &quot;,&quot;,
	altSeparator = &quot;;&quot;,
	space = &quot; &quot;,
	formatted = false
}

-- Stringifies a list generically; probably shouldn't be used directly
function stringifyList(list, options)
	-- Type-checks, defaults, and a shortcut
	checkType(&quot;stringifyList&quot;, 1, list, &quot;table&quot;)
	if #list == 0 then return nil end
	checkType(&quot;stringifyList&quot;, 2, options, &quot;table&quot;, true)
	options = options or {}
	for k, v in pairs(stringifyListDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	local s = options.space
	-- Format the list if requested
	if options.formatted then list = mHatnote.formatPages(unpack(list)) end
	-- Set the separator; if any item contains it, use the alternate separator
	local separator = options.separator
	--searches display text only
	function searchDisp(t, f)
		return string.find(string.sub(t, (string.find(t, '|') or 0) + 1), f)
	end
	for k, v in pairs(list) do
		if searchDisp(v, separator) then
			separator = options.altSeparator
			break
		end
	end
	-- Set the conjunction, apply Oxford comma, and force a comma if #1 has &quot;&quot;
	local conjunction = s .. options.conjunction .. s
	if #list == 2 and searchDisp(list[1], &quot;&quot;) or #list &gt; 2 then
		conjunction = separator .. conjunction
	end
	-- Return the formatted string
	return mw.text.listToText(list, separator .. s, conjunction)
end

--DRY function
function conjList (conj, list, fmt)
	return stringifyList(list, {conjunction = conj, formatted = fmt})
end

-- Stringifies lists with &quot;and&quot; or &quot;or&quot;
function p.andList (...) return conjList(&quot;and&quot;, ...) end
function p.orList (...) return conjList(&quot;or&quot;, ...) end

--------------------------------------------------------------------------------
-- For see
--
-- Makes a &quot;For X, see [[Y]].&quot; list from raw parameters. Intended for the
-- {{about}} and {{redirect}} templates and their variants.
--------------------------------------------------------------------------------

--default options table used across the forSee family of functions
local forSeeDefaultOptions = {
	andKeyword = 'and',
	title = mw.title.getCurrentTitle().text,
	otherText = 'other uses',
	forSeeForm = 'For %s, see %s.'
}

--Collapses duplicate punctuation
function punctuationCollapse (text)
	local replacements = {
		[&quot;%.%.$&quot;] = &quot;.&quot;,
		[&quot;%?%.$&quot;] = &quot;?&quot;,
		[&quot;%!%.$&quot;] = &quot;!&quot;,
		[&quot;%.%]%]%.$&quot;] = &quot;.]]&quot;,
		[&quot;%?%]%]%.$&quot;] = &quot;?]]&quot;,
		[&quot;%!%]%]%.$&quot;] = &quot;!]]&quot;
	}
	for k, v in pairs(replacements) do text = string.gsub(text, k, v) end
	return text
end

-- Structures arguments into a table for stringification, &amp; options
function p.forSeeArgsToTable (args, from, options)
	-- Type-checks and defaults
	checkType(&quot;forSeeArgsToTable&quot;, 1, args, 'table')
	checkType(&quot;forSeeArgsToTable&quot;, 2, from, 'number', true)
	from = from or 1
	checkType(&quot;forSeeArgsToTable&quot;, 3, options, 'table', true)
	options = options or {}
	for k, v in pairs(forSeeDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	-- maxArg's gotten manually because getArgs() and table.maxn aren't friends
	local maxArg = 0
	for k, v in pairs(args) do
		if type(k) == 'number' and k &gt; maxArg then maxArg = k end
	end
	-- Structure the data out from the parameter list:
	-- * forTable is the wrapper table, with forRow rows
	-- * Rows are tables of a &quot;use&quot; string &amp; a &quot;pages&quot; table of pagename strings
	-- * Blanks are left empty for defaulting elsewhere, but can terminate list
	local forTable = {}
	local i = from
	local terminated = false
	-- Loop to generate rows
	repeat
		-- New empty row
		local forRow = {}
		-- On blank use, assume list's ended &amp; break at end of this loop
		forRow.use = args[i]
		if not args[i] then terminated = true end
		-- New empty list of pages
		forRow.pages = {}
		-- Insert first pages item if present
		table.insert(forRow.pages, args[i + 1])
		-- If the param after next is &quot;and&quot;, do inner loop to collect params
		-- until the &quot;and&quot;'s stop. Blanks are ignored: &quot;1|and||and|3&quot;  {1, 3}
		while args[i + 2] == options.andKeyword do
			if args[i + 3] then 
				table.insert(forRow.pages, args[i + 3])
			end
			-- Increment to next &quot;and&quot;
			i = i + 2
		end
		-- Increment to next use
		i = i + 2
		-- Append the row
		table.insert(forTable, forRow)
	until terminated or i &gt; maxArg
	
	return forTable
end

-- Stringifies a table as formatted by forSeeArgsToTable
function p.forSeeTableToString (forSeeTable, options)
	-- Type-checks and defaults
	checkType(&quot;forSeeTableToString&quot;, 1, forSeeTable, &quot;table&quot;)
	checkType(&quot;forSeeTableToString&quot;, 2, options, &quot;table&quot;, true)
	options = options or {}
	for k, v in pairs(forSeeDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	-- Stringify each for-see item into a list
	local strList = {}
	for k, v in pairs(forSeeTable) do
		local useStr = v.use or options.otherText
		local pagesStr = p.andList(v.pages, true) or
			mHatnote._formatLink(mHatnote.disambiguate(options.title))
		local forSeeStr = string.format(options.forSeeForm, useStr, pagesStr)
		forSeeStr = punctuationCollapse(forSeeStr)
		table.insert(strList, forSeeStr)
	end
	-- Return the concatenated list
	return table.concat(strList, ' ')
end

-- Produces a &quot;For X, see [[Y]]&quot; string from arguments. Expects index gaps
-- but not blank/whitespace values. Ignores named args and args &lt; &quot;from&quot;.
function p._forSee (args, from, options)
	local forSeeTable = p.forSeeArgsToTable(args, from, options)
	return p.forSeeTableToString(forSeeTable, options)
end

-- As _forSee, but uses the frame.
function p.forSee (frame, from, options)
	mArguments = require('Module:Arguments')
	return p._forSee(mArguments.getArgs(frame), from, options)
end

return p</text>
      <sha1>9xow4swjoccg1c9n9r6xhfvxgci3xr1</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Icon</title>
    <ns>828</ns>
    <id>45181164</id>
    <revision>
      <id>643803192</id>
      <parentid>643801146</parentid>
      <timestamp>2015-01-23T10:26:03Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Icon: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="659">-- This module implements [[Template:Icon]].

local data = mw.loadData('Module:Icon/data')

local p = {}

function p._main(args)
	local code = args.class or args[1]
	local iconData
	if code then
		code = code:match('^%s*(.-)%s*$'):lower() -- trim whitespace and put in lower case
		iconData = data[code]
	end
	if not iconData then
		iconData = data._DEFAULT
	end
	return string.format(
		'[[File:%s%s|%s|link=]]',
		iconData.image,
		iconData.tooltip and '|' .. iconData.tooltip or '',
		args.size or '16x16px'
	)
end

function p.main(frame)
	local args = {}
	for k, v in pairs(frame:getParent().args) do
		args[k] = v
	end
	return p._main(args)
end

return p</text>
      <sha1>4z7aot4f3pniw3w3az56t0kryggws40</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Icon/data</title>
    <ns>828</ns>
    <id>45181103</id>
    <revision>
      <id>796570470</id>
      <parentid>777430533</parentid>
      <timestamp>2017-08-21T19:12:52Z</timestamp>
      <contributor>
        <username>Train2104</username>
        <id>10341578</id>
      </contributor>
      <comment>+ tfl per editreq</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="8677">-- This module stores icon data for [[Module:Icon]].

--------------------------------------------------------------------------------
-- Icon data
--------------------------------------------------------------------------------

local data = {
	fa = {
		image = &quot;Featured article star.svg&quot;,
		tooltip = &quot;Featured article&quot;,
	},
	far = {
		image = &quot;Cscr-star piece.png&quot;,
		tooltip = &quot;Featured article review&quot;,
	},
	farc = {
		image = &quot;Cscr-star piece.png&quot;,
		tooltip = &quot;Featured article removal candidate&quot;,
	},
	ffa = {
		aliases = {&quot;dfa&quot;},
		image = &quot;Featured article star - cross.svg&quot;,
		tooltip = &quot;Former featured article&quot;,
	},
	fac = {
		aliases = {&quot;fan&quot;},
		image = &quot;Cscr-candidate.svg&quot;,
		tooltip = &quot;Featured article candidate&quot;,
	},
	ffac = {
		aliases = {&quot;nofa&quot;},
		image = &quot;Featured article star - cross.svg&quot;,
		tooltip = &quot;Failed featured article candidate&quot;,
	},
	fl = {
		image = &quot;Featured article star.svg&quot;,
		tooltip = &quot;Featured list&quot;,
	},
	flrc = {
		aliases = {&quot;flr&quot;},
		image = &quot;Cscr-star piece.png&quot;,
		tooltip = &quot;Featured list removal candidate&quot;,
	},
	ffl = {
		aliases = {&quot;dfl&quot;},
		image = &quot;Cscr-featured-strike.svg&quot;,
		tooltip = &quot;Former featured list&quot;,
	},
	flc = {
		aliases = {&quot;fln&quot;},
		image = &quot;Cscr-candidate.svg&quot;,
		tooltip = &quot;Featured list candidate&quot;,
	},
	fflc = {
		aliases = {&quot;nofl&quot;},
		image = &quot;Cscr-former.svg&quot;,
		tooltip = &quot;Failed featured list candidate&quot;,
	},
	a = {
		image = &quot;Symbol a class.svg&quot;,
		tooltip = &quot;A-Class article&quot;,
	},
	dac = {
		aliases = {&quot;daa&quot;},
		image = &quot;Symbol unsupport A vote.svg&quot;,
		tooltip = &quot;Demoted A-Class article&quot;,
	},
	acc = {
		aliases = {&quot;acn&quot;, &quot;aac&quot;},
		image = &quot;A candidate.svg&quot;,
		tooltip = &quot;A-Class article candidate&quot;,
	},
	noac = {
		aliases = {&quot;faac&quot;},
		image = &quot;Symbol unsupport A vote.svg&quot;,
		tooltip = &quot;Failed A-Class article candidate&quot;,
	},
	ga = {
		image = &quot;Symbol support vote.svg&quot;,
		tooltip = &quot;Good article&quot;,
	},
	gar = {
		image = &quot;GA Candidate Neutral vote(ChaosNil).svg&quot;,
		tooltip = &quot;Good article reassessment&quot;,
	},
	dga = {
		image = &quot;Symbol unsupport vote.svg&quot;,
		tooltip = &quot;Delisted good article&quot;,
	},
	gan = {
		aliases = {&quot;gac&quot;},
		image = &quot;GA candidate.svg&quot;,
		tooltip = &quot;Good article nominee&quot;,
	},
	ga2 = {
		image = &quot;Symbol neutral vote.svg&quot;,
		tooltip = &quot;Good article, 2nd opinion&quot;,
	},
	gah = {
		image = &quot;Symbol wait.svg&quot;,
		tooltip = &quot;Good article on hold&quot;,
	},
	fgan = {
		aliases = {&quot;noga&quot;, &quot;gaf&quot;, &quot;gf&quot;},
		image = &quot;Symbol oppose vote.svg&quot;,
		tooltip = &quot;Failed good article nominee&quot;,
	},
	fp = {
		image = &quot;Cscr-featured.svg&quot;,
		tooltip = &quot;Featured picture&quot;,
	},
	fpc = {
		aliases = {&quot;fpn&quot;},
		image = &quot;Cscr-candidate.svg&quot;,
		tooltip = &quot;Featured picture candidate&quot;,
	},
	ffp = {
		image = &quot;Cscr-former.svg&quot;,
		tooltip = &quot;Former featured picture&quot;,
	},
	vp = {
		image = &quot;ENWP VP Logo.svg&quot;,
		tooltip = &quot;Valued picture&quot;,
	},
	vpc = {
		image = &quot;Valued pics 1.svg&quot;,
		tooltip = &quot;Valued picture candidate&quot;,
	},
	fs = {
		image = &quot;Cscr-featured.svg&quot;,
		tooltip = &quot;Featured sound&quot;,
	},
	ffs = {
		image = &quot;Cscr-former.svg&quot;,
		tooltip = &quot;Former featured sound&quot;,
	},
	fsc = {
		image = &quot;Cscr-candidate.svg&quot;,
		tooltip = &quot;Featured sound candidate&quot;,
	},
	fpo = {
		image = &quot;Linecons big-star.svg&quot;,
		tooltip = &quot;Before the featured portal process ceased in 2017, this had been designated as a featured portal.&quot;,
	},
	fpor = {
		image = &quot;Cscr-star piece.png&quot;,
		tooltip = &quot;Featured portal review&quot;,
	},
	ffpo = {
		image = &quot;Featured article star - cross.svg&quot;,
		tooltip = &quot;Former featured portal&quot;,
	},
	fpoc = {
		image = &quot;Cscr-candidate.svg&quot;,
		tooltip = &quot;Featured portal candidate&quot;,
	},
	ft = {
		image = &quot;Cscr-featuredtopic.svg&quot;,
		tooltip = &quot;Featured topic&quot;,
	},
	ftrc = {
		image = &quot;Cscr-star piece.png&quot;,
		tooltip = &quot;Featured topic removal candidate&quot;,
	},
	fft = {
		aliases = {&quot;dft&quot;},
		image = &quot;DFT candidate_cluster.svg&quot;,
		tooltip = &quot;Former featured topic&quot;,
	},
	ftc = {
		aliases = {&quot;ftn&quot;},
		image = &quot;FT candidate cluster.svg&quot;,
		tooltip = &quot;Featured topic candidate&quot;,
	},
	gt = {
		image = &quot;Support cluster.svg&quot;,
		tooltip = &quot;Good topic&quot;,
	},
	gtrc = {
		image = &quot;Symbol unsupport vote.svg&quot;,
		tooltip = &quot;Good topic removal candidate&quot;,
	},
	gtc = {
		aliases = {&quot;gtn&quot;},
		image = &quot;GA candidate cluster.svg&quot;,
		tooltip = &quot;Good topic candidate&quot;,
	},
	bplus = {
		aliases = {&quot;b+&quot;},
		image = &quot;Symbol bplus class.svg&quot;,
		tooltip = &quot;Bplus-Class article&quot;,
	},
	b = {
		image = &quot;Symbol b class.svg&quot;,
		tooltip = &quot;B-Class article&quot;,
	},
	br = {
		aliases = {&quot;bcr&quot;},
		image = &quot;Bclass-checklist.svg&quot;,
		tooltip = &quot;B-Class review&quot;,
	},
	c = {
		image = &quot;Symbol c class.svg&quot;,
		tooltip = &quot;C-Class article&quot;,
	},
	start = {
		image = &quot;Symbol start class.svg&quot;,
		tooltip = &quot;Start-Class article&quot;,
	},
	stub = {
		image = &quot;Symbol stub class.svg&quot;,
		tooltip = &quot;Stub-Class article&quot;,
	},
	list = {
		aliases = {&quot;comparison&quot;},
		image = &quot;Symbol list class.svg&quot;,
		tooltip = &quot;List-Class article&quot;,
	},
	no = {
		image = &quot;Crystal button cancel.svg&quot;,
		tooltip = &quot;Unknown-Class article&quot;,
	},
	book = {
		image = &quot;Symbol book class2.svg&quot;,
		tooltip = &quot;Wikipedia book&quot;,
	},
	category = {
		aliases = {&quot;cat&quot;, &quot;categ&quot;},
		image = &quot;Folder Hexagonal Icon.svg&quot;,
		tooltip = &quot;Category&quot;,
	},
	disambiguation = {
		aliases = {&quot;dab&quot;, &quot;disamb&quot;, &quot;disambig&quot;},
		image = &quot;Symbol dab class.svg&quot;,
		tooltip = &quot;Disambiguation page&quot;,
	},
	image = {
		aliases = {&quot;file&quot;},
		image = &quot;Video-x-generic.svg&quot;,
		tooltip = &quot;File&quot;,
	},
	portal = {
		image = &quot;Portal-puzzle.svg&quot;,
		tooltip = &quot;Portal&quot;,
	},
	project = {
		image = &quot;Symbol information vote.svg&quot;,
		tooltip = &quot;Project page&quot;,
	},
	redirect = {
		aliases = {&quot;red&quot;, &quot;redir&quot;},
		image = &quot;Symbol redirect vote2.svg&quot;,
		tooltip = &quot;Redirect&quot;,
	},
	template = {
		aliases = {&quot;temp&quot;, &quot;templ&quot;},
		image = &quot;Symbol template class.svg&quot;,
		tooltip = &quot;Template&quot;,
	},
	essay = {
		image = &quot;Essay.svg&quot;,
		tooltip = &quot;Essay&quot;,
	},
	na = {
		image = &quot;Symbol neutral vote.svg&quot;,
		tooltip = &quot;Non-article page&quot;,
	},
	aa = {
		image = &quot;Yes check.svg&quot;,
		tooltip = &quot;Audited article of limited subject matter&quot;,
	},
	da = {
		image = &quot;Symbol oppose vote.svg&quot;,
		tooltip = &quot;Demoted article&quot;,
	},
	dyk = {
		image = &quot;Symbol question.svg&quot;,
		tooltip = &quot;Did You Know?&quot;,
	},
	dyk2 = {
		image = &quot;DYK questionmark icon.svg&quot;,
		tooltip = &quot;Did You Know?&quot;,
	},
	pr = {
		image = &quot;Nuvola apps kedit.png&quot;,
		tooltip = &quot;Peer review&quot;,
	},
	ppr = {
		image = &quot;Nuvola apps kedit.png&quot;,
		tooltip = &quot;Portal peer review&quot;,
	},
	q = {
		aliases = {&quot;question&quot;},
		image = &quot;Symbol question.svg&quot;,
		tooltip = &quot;Question&quot;,
	},
	qi = {
		image = &quot;Quality images logo.svg&quot;,
		tooltip = &quot;Quality image on Wikimedia Commons&quot;,
	},
	vi = {
		image = &quot;Valued image seal.svg&quot;,
		tooltip = &quot;Valued image on Wikimedia Commons&quot;,
	},
	tfa = {
		image = &quot;Wikipedia-logo.svg&quot;,
		tooltip = &quot;Today's Featured Article&quot;,
	},
	tfl = {
		image = &quot;Wikipedia-logo.svg&quot;,
		tooltip = &quot;Today's Featured List&quot;,
	},
	itn = {
		image = &quot;Globe current.svg&quot;,
		tooltip = &quot;In The News&quot;,
	},
	otd = {
		image = &quot;Nuvola apps date.svg&quot;,
		tooltip = &quot;On This Day&quot;,
	},
	wikiproject = {
		image = &quot;People icon.svg&quot;,
		tooltip = &quot;WikiProject&quot;,
	},
	wikipedia = {
		image = &quot;Wikipedia-logo.svg&quot;,
		tooltip = &quot;Wikipedia page&quot;,
	},
	commons = {
		image = &quot;Commons-logo.svg&quot;,
		tooltip = &quot;Commons page&quot;,
	},
	wikiquote = {
		image = &quot;Wikiquote-logo.svg&quot;,
		tooltip = &quot;Wikiquote page&quot;,
	},
	wikiversity = {
		image = &quot;Wikiversity-logo.svg&quot;,
		tooltip = &quot;Wikiversity page&quot;,
	},
	wikibooks = {
		image = &quot;Wikibooks-logo.svg&quot;,
		tooltip = &quot;Wikibooks page&quot;,
	},
	wikisource = {
		image = &quot;Wikisource-logo.svg&quot;,
		tooltip = &quot;Wikisource page&quot;,
	},
	wiktionary = {
		image = &quot;Wiktionary-logo.svg&quot;,
		tooltip = &quot;Wiktionary page&quot;,
	},
	wikinews = {
		image = &quot;Wikinews-logo.svg&quot;,
		tooltip = &quot;Wikinews page&quot;,
	},
	wikispecies = {
		image = &quot;Wikispecies-logo.svg&quot;,
		tooltip = &quot;Wikispecies page&quot;,
	},
	wikidata = {
		image = &quot;Wikidata-logo.svg&quot;,
		tooltip = &quot;Wikidata page&quot;,
	},
	wikivoyage = {
		image = &quot;Wikivoyage-logo.svg&quot;,
		tooltip = &quot;Wikivoyage page&quot;,
	},
	meta = {
		image = &quot;Wikimedia Community Logo.svg&quot;,
		tooltip = &quot;Meta-wiki page&quot;,
	},
	four = {
		image = &quot;Four Award.svg&quot;,
		tooltip = &quot;Four Award&quot;,
	},
	million = {
		image = &quot;Million award logo.svg&quot;,
		tooltip = &quot;Million Award&quot;,
	},
	_DEFAULT = {
		image = &quot;Symbol question.svg&quot;,
	}
}

--------------------------------------------------------------------------------
-- End icon data
--------------------------------------------------------------------------------

-- Make aliases work the same as normal keys, and remove the &quot;aliases&quot; subtables. 
for k, t in pairs(data) do
	if t.aliases then
		for i, alias in ipairs(t.aliases) do
			data[alias] = t
		end
		t.aliases = nil
	end
	data[k] = t
end

return data</text>
      <sha1>e5c76ghuovcxpqk3bwtv0cv7z38l4db</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Infobox</title>
    <ns>828</ns>
    <id>38808424</id>
    <revision>
      <id>786097736</id>
      <parentid>784276811</parentid>
      <timestamp>2017-06-17T07:53:56Z</timestamp>
      <contributor>
        <username>Jc86035</username>
        <id>17245768</id>
      </contributor>
      <minor/>
      <comment>try implementing again?</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="15413">--
-- This module implements {{Infobox}}
--
 
local p = {}

local navbar = require('Module:Navbar')._navbar

local args = {}
local origArgs
local root

local function notempty( s ) return s and s:match( '%S' ) end

local function fixChildBoxes(sval, tt)
	if notempty(sval) then
		local marker = '&lt;span class=special_infobox_marker&gt;'
		local s = sval
		s = mw.ustring.gsub(s, '(&lt;%s*[Tt][Rr])', marker .. '%1')
		s = mw.ustring.gsub(s, '(&lt;/[Tt][Rr]%s*&gt;)', '%1' .. marker)
		if s:match(marker) then
			s = mw.ustring.gsub(s, marker .. '%s*' .. marker, '')
			s = mw.ustring.gsub(s, '([\r\n]|-[^\r\n]*[\r\n])%s*' .. marker, '%1')
			s = mw.ustring.gsub(s, marker .. '%s*([\r\n]|-)', '%1')
			s = mw.ustring.gsub(s, '(&lt;/[Cc][Aa][Pp][Tt][Ii][Oo][Nn]%s*&gt;%s*)' .. marker, '%1')
			s = mw.ustring.gsub(s, '(&lt;%s*[Tt][Aa][Bb][Ll][Ee][^&lt;&gt;]*&gt;%s*)' .. marker, '%1')
			s = mw.ustring.gsub(s, '^(%{|[^\r\n]*[\r\n]%s*)' .. marker, '%1')
			s = mw.ustring.gsub(s, '([\r\n]%{|[^\r\n]*[\r\n]%s*)' .. marker, '%1')
			s = mw.ustring.gsub(s,  marker .. '(%s*&lt;/[Tt][Aa][Bb][Ll][Ee]%s*&gt;)', '%1')
			s = mw.ustring.gsub(s,  marker .. '(%s*\n|%})', '%1')
		end
		if s:match(marker) then
			local subcells = mw.text.split(s, marker)
			s = ''
			for k = 1, #subcells do
				if k == 1 then
					s = s .. subcells[k] .. '&lt;/' .. tt .. '&gt;&lt;/tr&gt;'
				elseif k == #subcells then
					local rowstyle = ' style=&quot;display:none&quot;'
					if notempty(subcells[k]) then rowstyle = ''	end
					s = s .. '&lt;tr' .. rowstyle ..'&gt;&lt;' .. tt .. ' colspan=2&gt;\n' .. subcells[k]
				elseif notempty(subcells[k]) then
					if (k % 2) == 0 then
						s = s .. subcells[k]
					else
						s = s .. '&lt;tr&gt;&lt;' .. tt .. ' colspan=2&gt;\n' .. subcells[k] .. '&lt;/' .. tt .. '&gt;&lt;/tr&gt;'
					end
				end
			end
		end
		return s
	else
		return sval
	end
end

local function union(t1, t2)
    -- Returns the union of the values of two tables, as a sequence.
    local vals = {}
    for k, v in pairs(t1) do
        vals[v] = true
    end
    for k, v in pairs(t2) do
        vals[v] = true
    end
    local ret = {}
    for k, v in pairs(vals) do
        table.insert(ret, k)
    end
    return ret
end

local function getArgNums(prefix)
    -- Returns a table containing the numbers of the arguments that exist
    -- for the specified prefix. For example, if the prefix was 'data', and
    -- 'data1', 'data2', and 'data5' exist, it would return {1, 2, 5}.
    local nums = {}
    for k, v in pairs(args) do
        local num = tostring(k):match('^' .. prefix .. '([1-9]%d*)$')
        if num then table.insert(nums, tonumber(num)) end
    end
    table.sort(nums)
    return nums
end

local function addRow(rowArgs)
    -- Adds a row to the infobox, with either a header cell
    -- or a label/data cell combination.
    if rowArgs.header then
        root
            :tag('tr')
                :addClass(rowArgs.rowclass)
                :cssText(rowArgs.rowstyle)
                :attr('id', rowArgs.rowid)
                :tag('th')
                    :attr('colspan', 2)
                    :attr('id', rowArgs.headerid)
                    :addClass(rowArgs.class)
                    :addClass(args.headerclass)
                    :css('text-align', 'center')
                    :cssText(args.headerstyle)
                    :cssText(rowArgs.rowcellstyle)
                    :wikitext(fixChildBoxes(rowArgs.header, 'th'))
    elseif rowArgs.data then
        local row = root:tag('tr')
        row:addClass(rowArgs.rowclass)
        row:cssText(rowArgs.rowstyle)
        row:attr('id', rowArgs.rowid)
        if rowArgs.label then
            row
                :tag('th')
                    :attr('scope', 'row')
                    :attr('id', rowArgs.labelid)
                    :cssText(args.labelstyle)
                    :cssText(rowArgs.rowcellstyle)
                    :wikitext(rowArgs.label)
                    :done()
        end
        
        local dataCell = row:tag('td')
        if not rowArgs.label then 
            dataCell
                :attr('colspan', 2)
                :css('text-align', 'center') 
        end
        dataCell
            :attr('id', rowArgs.dataid)
            :addClass(rowArgs.class)
            :cssText(rowArgs.datastyle)
            :cssText(rowArgs.rowcellstyle)
            :newline()
            :wikitext(fixChildBoxes(rowArgs.data, 'td'))
    end
end

local function renderTitle()
    if not args.title then return end

    root
        :tag('caption')
            :addClass(args.titleclass)
            :cssText(args.titlestyle)
            :wikitext(args.title)
end

local function renderAboveRow()
    if not args.above then return end
    
    root
        :tag('tr')
            :tag('th')
                :attr('colspan', 2)
                :addClass(args.aboveclass)
                :css('text-align', 'center')
                :css('font-size', '125%')
                :css('font-weight', 'bold')
                :cssText(args.abovestyle)
                :wikitext(fixChildBoxes(args.above,'th'))
end

local function renderBelowRow()
    if not args.below then return end
    
    root
        :tag('tr')
            :tag('td')
                :attr('colspan', '2')
                :addClass(args.belowclass)
                :css('text-align', 'center')
                :cssText(args.belowstyle)
                :newline()
                :wikitext(fixChildBoxes(args.below,'td'))
end

local function renderSubheaders()
    if args.subheader then
        args.subheader1 = args.subheader
    end
    if args.subheaderrowclass then
        args.subheaderrowclass1 = args.subheaderrowclass
    end
    local subheadernums = getArgNums('subheader')
    for k, num in ipairs(subheadernums) do
        addRow({
            data = args['subheader' .. tostring(num)],
            datastyle = args.subheaderstyle or args['subheaderstyle' .. tostring(num)],
            class = args.subheaderclass,
            rowclass = args['subheaderrowclass' .. tostring(num)]
        })
    end
end

local function renderImages()
    if args.image then
        args.image1 = args.image
    end
    if args.caption then
        args.caption1 = args.caption
    end
    local imagenums = getArgNums('image')
    for k, num in ipairs(imagenums) do
        local caption = args['caption' .. tostring(num)]
        local data = mw.html.create():wikitext(args['image' .. tostring(num)])
        if caption then
            data
                :tag('div')
                    :cssText(args.captionstyle)
                    :wikitext(caption)
        end
        addRow({
            data = tostring(data),
            datastyle = args.imagestyle,
            class = args.imageclass,
            rowclass = args['imagerowclass' .. tostring(num)]
        })
    end
end

local function renderRows()
    -- Gets the union of the header and data argument numbers,
    -- and renders them all in order using addRow.
    local rownums = union(getArgNums('header'), getArgNums('data'))
    table.sort(rownums)
    for k, num in ipairs(rownums) do
        addRow({
            header = args['header' .. tostring(num)],
            label = args['label' .. tostring(num)],
            data = args['data' .. tostring(num)],
            datastyle = args.datastyle,
            class = args['class' .. tostring(num)],
            rowclass = args['rowclass' .. tostring(num)],
            rowstyle = args['rowstyle' .. tostring(num)],
            rowcellstyle = args['rowcellstyle' .. tostring(num)],
            dataid = args['dataid' .. tostring(num)],
            labelid = args['labelid' .. tostring(num)],
            headerid = args['headerid' .. tostring(num)],
            rowid = args['rowid' .. tostring(num)]
        })
    end
end

local function renderNavBar()
    if not args.name then return end
    
    root
        :tag('tr')
            :tag('td')
                :attr('colspan', '2')
                :css('text-align', 'right')
                :wikitext(navbar{
                    args.name,
                    mini = 1,
                })
end

local function renderItalicTitle()
    local italicTitle = args['italic title'] and mw.ustring.lower(args['italic title'])
    if italicTitle == '' or italicTitle == 'force' or italicTitle == 'yes' then
        root:wikitext(mw.getCurrentFrame():expandTemplate({title = 'italic title'}))
    end
end

local function renderTrackingCategories()
    if args.decat ~= 'yes' then
        if #(getArgNums('data')) == 0 and mw.title.getCurrentTitle().namespace == 0 then
            root:wikitext('[[Category:Articles which use infobox templates with no data rows]]')
        end
        if args.child == 'yes' and args.title then
            root:wikitext('[[Category:Pages which use embedded infobox templates with the title parameter]]')
        end
    end
end

local function _infobox()
    -- Specify the overall layout of the infobox, with special settings
    -- if the infobox is used as a 'child' inside another infobox.
    if args.child ~= 'yes' then
        root = mw.html.create('table')
        
        root
            :addClass('infobox')
            :addClass(args.bodyclass)
            
            if args.subbox == 'yes' then
                root
                    :css('padding', '0')
                    :css('border', 'none')
                    :css('margin', '-3px')
                    :css('width', 'auto')
                    :css('min-width', '100%')
                    :css('font-size', '100%')
                    :css('clear', 'none')
                    :css('float', 'none')
                    :css('background-color', 'transparent')
            else
                root
                    :css('width', '22em')
            end
        root
            :cssText(args.bodystyle)
    
        renderTitle()
        renderAboveRow()
    else
        root = mw.html.create()
        
        root
            :wikitext(args.title)
    end

    renderSubheaders()
    renderImages() 
    renderRows() 
    renderBelowRow()  
    renderNavBar()
    renderItalicTitle()
    renderTrackingCategories()
    
    return tostring(root)
end

local function preprocessSingleArg(argName)
    -- If the argument exists and isn't blank, add it to the argument table.
    -- Blank arguments are treated as nil to match the behaviour of ParserFunctions.
    if origArgs[argName] and origArgs[argName] ~= '' then
        args[argName] = origArgs[argName]
    end
end

local function preprocessArgs(prefixTable, step)
    -- Assign the parameters with the given prefixes to the args table, in order, in batches
    -- of the step size specified. This is to prevent references etc. from appearing in the
    -- wrong order. The prefixTable should be an array containing tables, each of which has
    -- two possible fields, a &quot;prefix&quot; string and a &quot;depend&quot; table. The function always parses
    -- parameters containing the &quot;prefix&quot; string, but only parses parameters in the &quot;depend&quot;
    -- table if the prefix parameter is present and non-blank.
    if type(prefixTable) ~= 'table' then
        error(&quot;Non-table value detected for the prefix table&quot;, 2)
    end
    if type(step) ~= 'number' then
        error(&quot;Invalid step value detected&quot;, 2)
    end
    
    -- Get arguments without a number suffix, and check for bad input.
    for i,v in ipairs(prefixTable) do
        if type(v) ~= 'table' or type(v.prefix) ~= &quot;string&quot; or (v.depend and type(v.depend) ~= 'table') then
            error('Invalid input detected to preprocessArgs prefix table', 2)
        end
        preprocessSingleArg(v.prefix)
        -- Only parse the depend parameter if the prefix parameter is present and not blank.
        if args[v.prefix] and v.depend then
            for j, dependValue in ipairs(v.depend) do
                if type(dependValue) ~= 'string' then
                    error('Invalid &quot;depend&quot; parameter value detected in preprocessArgs')
                end
                preprocessSingleArg(dependValue)
            end
        end
    end

    -- Get arguments with number suffixes.
    local a = 1 -- Counter variable.
    local moreArgumentsExist = true
    while moreArgumentsExist == true do
        moreArgumentsExist = false
        for i = a, a + step - 1 do
            for j,v in ipairs(prefixTable) do
                local prefixArgName = v.prefix .. tostring(i)
                if origArgs[prefixArgName] then
                    moreArgumentsExist = true -- Do another loop if any arguments are found, even blank ones.
                    preprocessSingleArg(prefixArgName)
                end
                -- Process the depend table if the prefix argument is present and not blank, or
                -- we are processing &quot;prefix1&quot; and &quot;prefix&quot; is present and not blank, and
                -- if the depend table is present.
                if v.depend and (args[prefixArgName] or (i == 1 and args[v.prefix])) then
                    for j,dependValue in ipairs(v.depend) do
                        local dependArgName = dependValue .. tostring(i)
                        preprocessSingleArg(dependArgName)
                    end
                end
            end
        end
        a = a + step
    end
end
 
function p.infobox(frame)
    -- If called via #invoke, use the args passed into the invoking template.
    -- Otherwise, for testing purposes, assume args are being passed directly in.
    if frame == mw.getCurrentFrame() then
        origArgs = frame:getParent().args
    else
        origArgs = frame
    end
    
    -- Parse the data parameters in the same order that the old {{infobox}} did, so that
    -- references etc. will display in the expected places. Parameters that depend on
    -- another parameter are only processed if that parameter is present, to avoid
    -- phantom references appearing in article reference lists.
    preprocessSingleArg('child')
    preprocessSingleArg('bodyclass')
    preprocessSingleArg('subbox')
    preprocessSingleArg('bodystyle')
    preprocessSingleArg('title')
    preprocessSingleArg('titleclass')
    preprocessSingleArg('titlestyle')
    preprocessSingleArg('above')
    preprocessSingleArg('aboveclass')
    preprocessSingleArg('abovestyle')
    preprocessArgs({
        {prefix = 'subheader', depend = {'subheaderstyle', 'subheaderrowclass'}}
    }, 10)
    preprocessSingleArg('subheaderstyle')
    preprocessSingleArg('subheaderclass')
    preprocessArgs({
        {prefix = 'image', depend = {'caption', 'imagerowclass'}}
    }, 10)
    preprocessSingleArg('captionstyle')
    preprocessSingleArg('imagestyle')
    preprocessSingleArg('imageclass')
    preprocessArgs({
        {prefix = 'header'},
        {prefix = 'data', depend = {'label'}},
        {prefix = 'rowclass'},
        {prefix = 'rowstyle'},
        {prefix = 'rowcellstyle'},
        {prefix = 'class'},
        {prefix = 'dataid'},
        {prefix = 'labelid'},
        {prefix = 'headerid'},
        {prefix = 'rowid'}
    }, 50)
    preprocessSingleArg('headerclass')
    preprocessSingleArg('headerstyle')
    preprocessSingleArg('labelstyle')
    preprocessSingleArg('datastyle')
    preprocessSingleArg('below')
    preprocessSingleArg('belowclass')
    preprocessSingleArg('belowstyle')
    preprocessSingleArg('name')
    args['italic title'] = origArgs['italic title'] -- different behaviour if blank or absent
    preprocessSingleArg('decat')
 
    return _infobox()
end
 
return p</text>
      <sha1>h7ia1migmxaed0jrzap3fnixrgg2049</sha1>
    </revision>
  </page>
  <page>
    <title>Module:InfoboxImage</title>
    <ns>828</ns>
    <id>38581924</id>
    <revision>
      <id>769944044</id>
      <parentid>755884847</parentid>
      <timestamp>2017-03-12T14:50:35Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>add px to sizedefault if just a number</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="9641">-- Inputs:
--    image - Can either be a bare filename (with or without the File:/Image: prefix) or a fully formatted image link
--    page - page to display for multipage images (DjVu)
--    size - size to display the image
--    maxsize - maximum size for image
--    sizedefault - default size to display the image if size param is blank
--    alt - alt text for image
--    title - title text for image
--    border - set to yes if border
--    center - set to yes, if the image has to be centered
--    upright - upright image param
--    suppressplaceholder - if yes then checks to see if image is a placeholder and suppresses it
--    link - page to visit when clicking on image
-- Outputs:
--    Formatted image.
-- More details available at the &quot;Module:InfoboxImage/doc&quot; page

local i = {};

local placeholder_image = {
    &quot;Blue - Replace this image female.svg&quot;,
    &quot;Blue - Replace this image male.svg&quot;,
    &quot;Female no free image yet.png&quot;,
    &quot;Flag of None (square).svg&quot;,
    &quot;Flag of None.svg&quot;,
    &quot;Flag of.svg&quot;,
    &quot;Green - Replace this image female.svg&quot;,
    &quot;Green - Replace this image male.svg&quot;,
    &quot;Image is needed female.svg&quot;,
    &quot;Image is needed male.svg&quot;,
    &quot;Location map of None.svg&quot;,
    &quot;Male no free image yet.png&quot;,
    &quot;Missing flag.png&quot;,
    &quot;No flag.svg&quot;,
    &quot;No free portrait.svg&quot;,
    &quot;No portrait (female).svg&quot;,
    &quot;No portrait (male).svg&quot;,
    &quot;Red - Replace this image female.svg&quot;,
    &quot;Red - Replace this image male.svg&quot;,
    &quot;Replace this image female (blue).svg&quot;,
    &quot;Replace this image female.svg&quot;,
    &quot;Replace this image male (blue).svg&quot;,
    &quot;Replace this image male.svg&quot;,
    &quot;Silver - Replace this image female.svg&quot;,
    &quot;Silver - Replace this image male.svg&quot;,
    &quot;Replace this image.svg&quot;,
	&quot;Cricket no pic.png&quot;,
	&quot;CarersLogo.gif&quot;,
	&quot;Diagram Needed.svg&quot;,
	&quot;Example.jpg&quot;,
	&quot;Image placeholder.png&quot;,
	&quot;No male portrait.svg&quot;,
	&quot;Nocover-upload.png&quot;,
	&quot;NoDVDcover copy.png&quot;,
	&quot;Noribbon.svg&quot;,
	&quot;No portrait-BFD-test.svg&quot;,
	&quot;Placeholder barnstar ribbon.png&quot;,
	&quot;Project Trains no image.png&quot;,
	&quot;Image-request.png&quot;,
	&quot;Sin bandera.svg&quot;,
	&quot;Sin escudo.svg&quot;,
	&quot;Replace this image - temple.png&quot;,
	&quot;Replace this image butterfly.png&quot;,
	&quot;Replace this image.svg&quot;,
	&quot;Replace this image1.svg&quot;,
	&quot;Resolution angle.png&quot;,
	&quot;Image-No portrait-text-BFD-test.svg&quot;,
	&quot;Insert image here.svg&quot;,
	&quot;No image available.png&quot;,
	&quot;NO IMAGE YET square.png&quot;,
	&quot;NO IMAGE YET.png&quot;,
	&quot;No Photo Available.svg&quot;,
	&quot;No Screenshot.svg&quot;,
	&quot;No-image-available.jpg&quot;,
	&quot;Null.png&quot;,
	&quot;PictureNeeded.gif&quot;,
	&quot;Place holder.jpg&quot;,
	&quot;Unbenannt.JPG&quot;,
	&quot;UploadACopyrightFreeImage.svg&quot;,
	&quot;UploadAnImage.gif&quot;,
	&quot;UploadAnImage.svg&quot;,
	&quot;UploadAnImageShort.svg&quot;,
	&quot;CarersLogo.gif&quot;,
	&quot;Diagram Needed.svg&quot;,
	&quot;No male portrait.svg&quot;,
	&quot;NoDVDcover copy.png&quot;,
	&quot;Placeholder barnstar ribbon.png&quot;,
	&quot;Project Trains no image.png&quot;,
	&quot;Image-request.png&quot;,
}

function i.IsPlaceholder(image)
    -- change underscores to spaces
    image = mw.ustring.gsub(image, &quot;_&quot;, &quot; &quot;);
    assert(image ~= nil, 'mw.ustring.gsub(image, &quot;_&quot;, &quot; &quot;) must not return nil')
    -- if image starts with [[ then remove that and anything after |
    if mw.ustring.sub(image,1,2) == &quot;[[&quot; then
        image = mw.ustring.sub(image,3);
        image = mw.ustring.gsub(image, &quot;([^|]*)|.*&quot;, &quot;%1&quot;);
        assert(image ~= nil, 'mw.ustring.gsub(image, &quot;([^|]*)|.*&quot;, &quot;%1&quot;) must not return nil')
    end
    -- Trim spaces
    image = mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1');
    assert(image ~= nil, &quot;mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1') must not return nil&quot;)
    -- remove prefix if exists
    local allNames = mw.site.namespaces[6].aliases
    allNames[#allNames + 1] = mw.site.namespaces[6].name
    allNames[#allNames + 1] = mw.site.namespaces[6].canonicalName
    for i, name in ipairs(allNames) do
        if mw.ustring.lower(mw.ustring.sub(image, 1, mw.ustring.len(name) + 1)) == mw.ustring.lower(name .. &quot;:&quot;) then
            image = mw.ustring.sub(image, mw.ustring.len(name) + 2);
            break
        end
    end
    -- Trim spaces
    image = mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1');
    -- capitalise first letter
    image = mw.ustring.upper(mw.ustring.sub(image,1,1)) .. mw.ustring.sub(image,2);

    for i,j in pairs(placeholder_image) do
        if image == j then
            return true
        end
    end
    return false
end

function i.InfoboxImage(frame)
    local image = frame.args[&quot;image&quot;];
    
    if image == &quot;&quot; or image == nil then
        return &quot;&quot;;
    end
    if image == &quot;&amp;nbsp;&quot; then
        return image;
    end
    if frame.args[&quot;suppressplaceholder&quot;] ~= &quot;no&quot; then
        if i.IsPlaceholder(image) == true then
            return &quot;&quot;;
        end
    end

    if mw.ustring.lower(mw.ustring.sub(image,1,5)) == &quot;http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,6)) == &quot;[http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,7)) == &quot;[[http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,6)) == &quot;https:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,7)) == &quot;[https:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,8)) == &quot;[[https:&quot; then
        return &quot;&quot;;
    end

    if mw.ustring.sub(image,1,2) == &quot;[[&quot; then
        -- search for thumbnail images and add to tracking cat if found
        if mw.title.getCurrentTitle().namespace == 0 and (mw.ustring.find(image, &quot;|%s*thumb%s*[|%]]&quot;) or mw.ustring.find(image, &quot;|%s*thumbnail%s*[|%]]&quot;)) then
            return image .. &quot;[[Category:Pages using infoboxes with thumbnail images]]&quot;;
        elseif mw.title.getCurrentTitle().namespace == 0 then
            return image .. &quot;[[Category:Pages using deprecated image syntax]]&quot;;
        else
            return image;
        end
    elseif mw.ustring.sub(image,1,2) == &quot;{{&quot; and mw.ustring.sub(image,1,3) ~= &quot;{{{&quot; then
        return image;
    elseif mw.ustring.sub(image,1,1) == &quot;&lt;&quot; then
        return image;
    elseif mw.ustring.sub(image,1,5) == mw.ustring.char(127)..&quot;UNIQ&quot; then
        -- Found strip marker at begining, so pass don't process at all
        return image;
    elseif mw.ustring.sub(image,4,9) == &quot;`UNIQ-&quot; then
        -- Found strip marker at begining, so pass don't process at all
        return image;
    else
        local result = &quot;&quot;;
        local page = frame.args[&quot;page&quot;];
        local size = frame.args[&quot;size&quot;];
        local maxsize = frame.args[&quot;maxsize&quot;];
        local sizedefault = frame.args[&quot;sizedefault&quot;];
        local alt = frame.args[&quot;alt&quot;];
        local link = frame.args[&quot;link&quot;];
        local title = frame.args[&quot;title&quot;];
        local border = frame.args[&quot;border&quot;];
        local upright = frame.args[&quot;upright&quot;] or &quot;&quot;;
        local thumbtime = frame.args[&quot;thumbtime&quot;] or &quot;&quot;;
        local center= frame.args[&quot;center&quot;];
        
        -- remove prefix if exists
        local allNames = mw.site.namespaces[6].aliases
        allNames[#allNames + 1] = mw.site.namespaces[6].name
        allNames[#allNames + 1] = mw.site.namespaces[6].canonicalName
        for i, name in ipairs(allNames) do
            if mw.ustring.lower(mw.ustring.sub(image, 1, mw.ustring.len(name) + 1)) == mw.ustring.lower(name .. &quot;:&quot;) then
                image = mw.ustring.sub(image, mw.ustring.len(name) + 2);
                break
            end
        end
        
        if maxsize ~= &quot;&quot; and maxsize ~= nil then
            -- if no sizedefault then set to maxsize
            if sizedefault == &quot;&quot; or sizedefault == nil then
                sizedefault = maxsize
            end
            -- check to see if size bigger than maxsize
            if size ~= &quot;&quot; and size ~= nil then
                local sizenumber = tonumber(mw.ustring.match(size,&quot;%d*&quot;)) or 0;
                local maxsizenumber = tonumber(mw.ustring.match(maxsize,&quot;%d*&quot;)) or 0;
                if sizenumber&gt;maxsizenumber and maxsizenumber&gt;0 then
                    size = maxsize;
                end
            end
        end
        -- add px to size if just a number
        if (tonumber(size) or 0) &gt; 0 then
            size = size .. &quot;px&quot;;
        end
        -- add px to sizedefault if just a number
        if (tonumber(sizedefault) or 0) &gt; 0 then
            sizedefault = sizedefault .. &quot;px&quot;;
        end
        
        result = &quot;[[File:&quot; .. image;
        if page ~= &quot;&quot; and page ~= nil then
            result = result .. &quot;|page=&quot; .. page;
        end
        if size ~= &quot;&quot; and size ~= nil then
            result = result .. &quot;|&quot; .. size;
        elseif sizedefault ~= &quot;&quot; and sizedefault ~= nil then
            result = result .. &quot;|&quot; .. sizedefault;
        else
            result = result .. &quot;|frameless&quot;;
        end
        if center == &quot;yes&quot; then
            result = result .. &quot;|center&quot;
        end
        if alt ~= &quot;&quot; and alt ~= nil then
            result = result .. &quot;|alt=&quot; .. alt;
        end
        if link ~= &quot;&quot; and link ~= nil then
            result = result .. &quot;|link=&quot; .. link;
        end
        if border == &quot;yes&quot; then
            result = result .. &quot;|border&quot;;
        end
        if upright == &quot;yes&quot; then
            result = result .. &quot;|upright&quot;;
        elseif upright ~= &quot;&quot; then
            result = result .. &quot;|upright=&quot; .. upright;
        end
        if thumbtime ~= &quot;&quot; then
            result = result .. &quot;|thumbtime=&quot; .. thumbtime;
        end
        if title ~= &quot;&quot; and title ~= nil then
            result = result .. &quot;|&quot; .. title;
        elseif alt ~= &quot;&quot; and alt ~= nil then
            result = result .. &quot;|&quot; .. alt;
        end
        result = result .. &quot;]]&quot;;
        
        return result;
    end
end

return i;</text>
      <sha1>n4nldwdqxa2f7m558z3tw0vr90z070g</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Labelled list hatnote</title>
    <ns>828</ns>
    <id>50971703</id>
    <revision>
      <id>763259375</id>
      <parentid>745988142</parentid>
      <timestamp>2017-02-02T05:26:53Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Labelled list hatnote]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3083">--------------------------------------------------------------------------------
--                               Labelled list                                --
--                                                                            --
-- This module does the core work of creating a hatnote composed of a list    --
-- prefixed by a colon-terminated label, i.e. &quot;LABEL: [andList of pages]&quot;,    --
-- for {{see also}} and similar templates.                                    --
--------------------------------------------------------------------------------

local mHatnote = require('Module:Hatnote')
local mHatlist = require('Module:Hatnote list')
local mArguments --initialize lazily
local p = {}

-- Defaults global to this module
local defaults = {
	label = 'See also', --Final fallback for label argument
	labelForm = '%s: %s',
	prefixes = {'label', 'label ', 'l'},
	template = 'Module:Labelled list hatnote'
}

-- Helper function that pre-combines display parameters into page arguments.
-- Also compresses sparse arrays, as a desirable side-effect.
function p.preprocessDisplays (args, prefixes)
	-- Prefixes specify which parameters, in order, to check for display options
	-- They each have numbers auto-appended, e.g. 'label1', 'label 1', &amp; 'l1'
	prefixes = prefixes or defaults.prefixes
	local pages = {}
	for k, v in pairs(args) do
		if type(k) == 'number' then
			local display
			for i = 1, #prefixes do
				display = args[prefixes[i] .. k]
				if display then break end
			end
			local page = display and
				string.format('%s|%s', string.gsub(v, '|.*$', ''), display) or v
			pages[#pages + 1] = page
		end
	end
	return pages
end

-- Produces a labelled pages-list hatnote.
-- The main frame (template definition) takes 1 or 2 arguments, for a singular
-- and (optionally) plural label respectively:
-- * {{#invoke:Labelled list hatnote|labelledList|Singular label|Plural label}}
-- The resulting template takes pagename &amp; label parameters normally.
function p.labelledList (frame)
	mArguments = require('Module:Arguments')
	local labels = {frame.args[1] or defaults.label}
	labels[2] = frame.args[2] or labels[1]
	local template = frame:getParent():getTitle()
	local args = mArguments.getArgs(frame, {parentOnly = true})
	local pages = p.preprocessDisplays(args)
	local options = {
		extraclasses = frame.args.extraclasses,
		category = args.category,
		selfref = frame.args.selfref or args.selfref,
		template = template
	}
	return p._labelledList(pages, labels, options)
end

function p._labelledList (pages, labels, options)
	labels = labels or {}
	if #pages == 0 then
		return mHatnote.makeWikitextError(
			'no page names specified',
			(options.template or defaults.template) .. '#Errors',
			options.category
		)
	end
	label = (#pages == 1 and labels[1] or labels[2]) or defaults.label
	local text = string.format(
		options.labelForm or defaults.labelForm,
		label,
		mHatlist.andList(pages, true)
	)
	local hnOptions = {
		extraclasses = options.extraclasses,
		selfref = options.selfref
	}
	return mHatnote._hatnote(text, hnOptions)
end

return p</text>
      <sha1>932zychfwl5xu5castj2k9j5qs6lzif</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Link language</title>
    <ns>828</ns>
    <id>54394259</id>
    <revision>
      <id>788214712</id>
      <parentid>788214458</parentid>
      <timestamp>2017-06-30T04:30:02Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Link language]]&quot;: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="330">local p = {}
local cfg = mw.loadData ('Module:Citation/CS1/Configuration')

function p.lang_render(frame)
	local lang = frame.args[1]
	lang = lang and mw.text.trim(lang)
	if lang and lang ~= '' then
		return mw.message.newRawMessage(cfg.messages['language'], lang):plain()
	else
		return 'no language specified'
	end
end

return p</text>
      <sha1>lz2m1upzsnn1mszmf7pgdu7vq9e31j5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:List</title>
    <ns>828</ns>
    <id>41068627</id>
    <revision>
      <id>794511725</id>
      <parentid>788254921</parentid>
      <timestamp>2017-08-08T13:55:25Z</timestamp>
      <contributor>
        <username>Jdlrobson</username>
        <id>15999850</id>
      </contributor>
      <comment>Minerva skin needs whether an hlist is separated to be explicit (see https://en.wikipedia.org/wiki/Wikipedia:Village_pump_(technical)#Hlist_bullets_not_shown_in_mobile)</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5154">-- This module outputs different kinds of lists. At the moment, bulleted,
-- unbulleted, horizontal, ordered, and horizontal ordered lists are supported.

local libUtil = require('libraryUtil')
local checkType = libUtil.checkType
local mTableTools = require('Module:TableTools')

local p = {}

local listTypes = {
	['bulleted'] = true,
	['unbulleted'] = true,
	['horizontal'] = true,
	['ordered'] = true,
	['horizontal_ordered'] = true
}

function p.makeListData(listType, args)
	-- Constructs a data table to be passed to p.renderList.
	local data = {}

	-- Classes
	data.classes = {}
	if listType == 'horizontal' or listType == 'horizontal_ordered' then
		table.insert(data.classes, 'hlist hlist-separated')
	elseif listType == 'unbulleted' then
		table.insert(data.classes, 'plainlist')
	end
	table.insert(data.classes, args.class)

	-- Main div style
	data.style = args.style

	-- Indent for horizontal lists
	if listType == 'horizontal' or listType == 'horizontal_ordered' then
		local indent = tonumber(args.indent)
		indent = indent and indent * 1.6 or 0
		if indent &gt; 0 then
			data.marginLeft = indent .. 'em'
		end
	end
	
	-- List style types for ordered lists
	-- This could be &quot;1, 2, 3&quot;, &quot;a, b, c&quot;, or a number of others. The list style
	-- type is either set by the &quot;type&quot; attribute or the &quot;list-style-type&quot; CSS
	-- property.
	if listType == 'ordered' or listType == 'horizontal_ordered' then 
		data.listStyleType = args.list_style_type or args['list-style-type']
		data.type = args['type']

		-- Detect invalid type attributes and attempt to convert them to
		-- list-style-type CSS properties.
		if data.type 
			and not data.listStyleType
			and not tostring(data.type):find('^%s*[1AaIi]%s*$')
		then
			data.listStyleType = data.type
			data.type = nil
		end
	end
	
	-- List tag type
	if listType == 'ordered' or listType == 'horizontal_ordered' then
		data.listTag = 'ol'
	else
		data.listTag = 'ul'
	end

	-- Start number for ordered lists
	data.start = args.start
	if listType == 'horizontal_ordered' then
		-- Apply fix to get start numbers working with horizontal ordered lists.
		local startNum = tonumber(data.start)
		if startNum then
			data.counterReset = 'listitem ' .. tostring(startNum - 1)
		end
	end

	-- List style
	 -- ul_style and ol_style are included for backwards compatibility. No
	 -- distinction is made for ordered or unordered lists.
	data.listStyle = args.list_style

	-- List items
	-- li_style is included for backwards compatibility. item_style was included
	-- to be easier to understand for non-coders.
	data.itemStyle = args.item_style or args.li_style
	data.items = {}
	for i, num in ipairs(mTableTools.numKeys(args)) do
		local item = {}
		item.content = args[num]
		item.style = args['item' .. tostring(num) .. '_style']
			or args['item_style' .. tostring(num)]
		item.value = args['item' .. tostring(num) .. '_value']
			or args['item_value' .. tostring(num)]
		table.insert(data.items, item)
	end
	
	return data
end

function p.renderList(data)
	-- Renders the list HTML.
	
	-- Return the blank string if there are no list items.
	if type(data.items) ~= 'table' or #data.items &lt; 1 then
		return ''
	end
	
	-- Render the main div tag.
	local root = mw.html.create('div')
	for i, class in ipairs(data.classes or {}) do
		root:addClass(class)
	end
	root:css{['margin-left'] = data.marginLeft}
	if data.style then
		root:cssText(data.style)
	end

	-- Render the list tag.
	local list = root:tag(data.listTag or 'ul')
	list
		:attr{start = data.start, type = data.type}
		:css{
			['counter-reset'] = data.counterReset,
			['list-style-type'] = data.listStyleType
		}
	if data.listStyle then
		list:cssText(data.listStyle)
	end

	-- Render the list items
	for i, t in ipairs(data.items or {}) do
		local item = list:tag('li')
		if data.itemStyle then
			item:cssText(data.itemStyle)
		end
		if t.style then
			item:cssText(t.style)
		end
		item
			:attr{value = t.value}
			:wikitext(t.content)
	end

	return tostring(root)
end

function p.renderTrackingCategories(args)
	local isDeprecated = false -- Tracks deprecated parameters.
	for k, v in pairs(args) do
		k = tostring(k)
		if k:find('^item_style%d+$') or k:find('^item_value%d+$') then
			isDeprecated = true
			break
		end
	end
	local ret = ''
	if isDeprecated then
		ret = ret .. '[[Category:List templates with deprecated parameters]]'
	end
	return ret
end

function p.makeList(listType, args)
	if not listType or not listTypes[listType] then
		error(string.format(
			&quot;bad argument #1 to 'makeList' ('%s' is not a valid list type)&quot;,
			tostring(listType)
		), 2)
	end
	checkType('makeList', 2, args, 'table')
	local data = p.makeListData(listType, args)
	local list = p.renderList(data)
	local trackingCategories = p.renderTrackingCategories(args)
	return list .. trackingCategories
end

for listType in pairs(listTypes) do
	p[listType] = function (frame)
		local mArguments = require('Module:Arguments')
		local origArgs = mArguments.getArgs(frame)
		-- Copy all the arguments to a new table, for faster indexing.
		local args = {}
		for k, v in pairs(origArgs) do
			args[k] = v
		end
		return p.makeList(listType, args)
	end
end

return p</text>
      <sha1>lkqmcmpfob2c6xhq46f675tm6p136ns</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Main</title>
    <ns>828</ns>
    <id>42570919</id>
    <revision>
      <id>727437646</id>
      <parentid>727363620</parentid>
      <timestamp>2016-06-29T00:34:26Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Removed extraclasses option; those classes appear to be deprecated</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2239">--[[
-- This module produces a link to a main article or articles. It implements the
-- template {{main}}.
-- 
-- If the module is used in category or category talk space, it produces &quot;The
-- main article for this category is xxx&quot;. Otherwise, it produces
-- &quot;Main article: xxx&quot;.
--]]

local mHatnote = require('Module:Hatnote')
local mHatlist = require('Module:Hatnote list')
local mArguments -- lazily initialise
local p = {}

function p.main(frame)
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {parentOnly = true})
	local pages = {}
	for k, v in pairs(args) do
		if type(k) == 'number' then
			local display = args['label ' .. k] or args['l' .. k]
			local page = display and
				string.format('%s|%s', string.gsub(v, '|.*$', ''), display) or v
			pages[#pages + 1] = page
		end
	end
	if #pages == 0 and mw.title.getCurrentTitle().namespace == 0 then
		return mHatnote.makeWikitextError(
			'no page names specified',
			'Template:Main#Errors',
			args.category
		)
	end
	local options = {
		selfref = args.selfref
	}
	return p._main(pages, options)
end

function p._main(args, options)
	-- Get the list of pages. If no first page was specified we use the current
	-- page name.
	local currentTitle = mw.title.getCurrentTitle()
	if #args == 0 then args = {currentTitle.text} end
	local firstPage = string.gsub(args[1], '|.*$', '')
	-- Find the pagetype.
	local pageType = mHatnote.findNamespaceId(firstPage) == 0 and 'article' or 'page'
	-- Make the formatted link text
	list = mHatlist.andList(args, true)
	-- Build the text.
	local isPlural = #args &gt; 1
	local mainForm
	local curNs = currentTitle.namespace
	if (curNs == 14) or (curNs == 15) then --category/talk namespaces
		mainForm = isPlural and
			'The main %ss for this [[Wikipedia:Categorization|category]] are %s'
			or
			'The main %s for this [[Wikipedia:Categorization|category]] is %s'
	else
		mainForm = isPlural and 'Main %ss: %s' or 'Main %s: %s'
	end
	local text = string.format(mainForm, pageType, list)
	-- Process the options and pass the text to the _rellink function in
	-- [[Module:Hatnote]].
	options = options or {}
	local hnOptions = {
		selfref = options.selfref
	}
	return mHatnote._hatnote(text, hnOptions)
end

return p</text>
      <sha1>9iplsr5jg1vj2lm6dkuiqtfon8648ne</sha1>
    </revision>
  </page>
  <page>
    <title>Module:MultiReplace</title>
    <ns>828</ns>
    <id>51070180</id>
    <revision>
      <id>804710333</id>
      <parentid>804708753</parentid>
      <timestamp>2017-10-10T17:32:02Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:MultiReplace]]&quot;: [[WP:High-risk templates|High-risk Lua module]]: allow extended confirmed editors to edit ([Edit=Require extended confirmed access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1252">p = {}

function p.main(frame)
	local args = frame:getParent().args
	local input = args[1] or &quot;{{{1}}}&quot;
	local plain = args.plain == &quot;yes&quot;

	local i = 1
	local changeList = {}
	while args[i * 2] do
		local change = {pattern = args[i * 2], repl = args[i * 2 + 1]}
		if not change.repl then
			return frame:expandTemplate{
				title = 'Error',
				args = { 'Multireplace: Unpaired argument: &lt;code&gt;' .. (i * 2) .. ' = ' .. change.pattern .. '&lt;/code&gt;' }
			}
		end
		changeList[i] = change
		i = i + 1
	end
	
	local matchList = {}
	local pos = 1
	local len = mw.ustring.len(input)
	local result = &quot;&quot;
	while pos &lt;= len do
		local bestStart = len + 1
		local bestStop = len
		local bestChange
		for _, change in ipairs(changeList) do
			local start, stop = mw.ustring.find(input, change.pattern, pos, plain)
			if start and (start &lt; bestStart) then
				bestStart = start
				bestStop = stop
				bestChange = change
			end
		end
		result = result .. mw.ustring.sub(input, pos, bestStart - 1)
		if bestChange then
			local fragment = mw.ustring.sub(input, bestStart, bestStop)
			result = result .. (plain and bestChange.repl or
				mw.ustring.gsub(fragment, bestChange.pattern, bestChange.repl, 1))
		end
		pos = bestStop + 1
	end
	return result
end

return p</text>
      <sha1>cao98d7pqx659fy4qha64f9dxftfcqz</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Multiple image</title>
    <ns>828</ns>
    <id>42564289</id>
    <revision>
      <id>798742599</id>
      <parentid>798742238</parentid>
      <timestamp>2017-09-03T15:29:44Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>fix</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7868">-- implements [[template:multiple image]]
local p = {}

local function isnotempty(s)
	return s and s:match( '^%s*(.-)%s*$' ) ~= ''
end

local function renderImageCell(image, width, height, link, alt, thumbtime, caption, textalign, istyle) 
	local root = mw.html.create('')
	
	local altstr = '|alt=' .. (alt or '')
	local linkstr = link and ('|link=' .. link) or ''
	local widthstr = '|' .. tostring(width) .. 'px'
	local thumbtimestr = ''

	if isnotempty( thumbtime ) then
		thumbtimestr = '|thumbtime=' .. thumbtime
	end
	
	local imagediv = root:tag('div')
	imagediv:addClass('thumbimage')
	imagediv:cssText(istyle)
	if( height ) then
		imagediv:css('height', tostring(height) .. 'px')
		imagediv:css('overflow', 'hidden')
	end
	imagediv:wikitext('[[file:' .. image .. widthstr .. linkstr .. altstr .. thumbtimestr .. ']]')
	if isnotempty(caption) then
		local captiondiv = root:tag('div')
		captiondiv:addClass('thumbcaption')
		captiondiv:css('clear', 'left')
		if isnotempty(textalign) then
			captiondiv:css('text-align', textalign)
		end
		captiondiv:wikitext(caption)
	end
	return tostring(root)
end

local function getWidth(w1, w2)
	local w
	if isnotempty(w1) then
		w = tonumber(w1)
	elseif isnotempty(w2) then
		w = tonumber(w2)
	end
	return w or 200
end

local function getPerRow(pstr, ic)
	-- split string into array using any non-digit as a dilimiter
	local pr = mw.text.split(pstr or '', '[^%d][^%d]*')
	-- if split failed, assume a single row
	if (#pr &lt; 1) then
		pr = {tostring(ic)}
	end
	-- convert the array of strings to an array of numbers,
	-- adding any implied/missing numbers at the end of the array
	local r = 1
	local thisrow = tonumber(pr[1] or ic) or ic
	local prownum = {}
	while( ic &gt; 0 ) do
		prownum[r] = thisrow
		ic = ic - thisrow
		r = r + 1
		-- use the previous if the next is missing and 
		-- make sure we don't overstep the number of images
		thisrow = math.min(tonumber(pr[r] or thisrow) or ic, ic)
	end
	return prownum
end

local function renderMultipleImages(frame)
	local pargs = frame:getParent().args
	local args = frame.args
	local width = pargs['width'] or ''
	local dir = pargs['direction'] or ''
	local align = pargs['align'] or args['align'] or ''
	local capalign = pargs['caption_align'] or args['caption_align'] or ''
	local totalwidth = pargs['total_width'] or args['total_width'] or ''
	local imgstyle = pargs['image_style'] or args['image_style']
	local header = pargs['header'] or pargs['title'] or ''
	local footer = pargs['footer'] or ''
	local imagegap = tonumber(pargs['image_gap'] or '1') or 1
	local perrow = nil
	local thumbclass = {
		[&quot;left&quot;] = 'tleft',
		[&quot;none&quot;] = 'tnone',
		[&quot;center&quot;] = 'tnone',
		[&quot;centre&quot;] = 'tnone',
		[&quot;right&quot;] = 'tright'
		}

	-- find all the nonempty images
	local imagenumbers = {}
	local imagecount = 0
	for k, v in pairs( pargs ) do
		local i = tonumber(tostring(k):match( '^%s*image([%d]+)%s*$' ) or '0')
		if( i &gt; 0 and isnotempty(v) ) then
			table.insert( imagenumbers, i)
			imagecount = imagecount + 1
		end
	end

	-- sort the imagenumbers
	table.sort(imagenumbers)
	
	-- create an array with the number of images per row
	perrow = getPerRow(dir == 'vertical' and '1' or pargs['perrow'], imagecount)
	
	-- compute the number of rows
	local rowcount = #perrow

	-- store the image widths and compute row widths and maximum row width
	local widths = {}
	local widthmax = 0
	local widthsum = {}
	local k = 0
	for r=1,rowcount do
		widthsum[r] = 0
		for c=1,perrow[r] do
			k = k + 1
			if( k &lt;= imagecount ) then
				local i = imagenumbers[k]
				widths[k] = getWidth(width, pargs['width' .. i])
				widthsum[r] = widthsum[r] + widths[k]
			end
		end
		widthmax = math.max(widthmax, widthsum[r])
	end

	-- make sure the gap is non-negative
	if imagegap &lt; 0 then imagegap = 0 end
	
	-- if total_width has been specified, rescale the image widths
	local heights = {}
	if( isnotempty(totalwidth) ) then
		totalwidth = tonumber(totalwidth)
		widthmax = 0
		local k = 0
		for r=1,rowcount do
			local koffset = k
			local tw = totalwidth - (3 + imagegap) * (perrow[r] - 1) - 12
			local ar = {}
			local arsum = 0
			for j=1,perrow[r] do
				k = k + 1
				if( k&lt;= imagecount ) then
					local i = imagenumbers[k]
					local h = tonumber( pargs['height' .. i] or '' ) or 0
					if (h &gt; 0) then
						ar[j] = widths[k]/h
						heights[k] = h
					else
						ar[j] = widths[k]/100
					end
					arsum = arsum + ar[j]
				end
			end
			local ht = tw/arsum
			local ws = 0
			k = koffset
			for j=1,perrow[r] do
				k = k + 1
				if( k&lt;= imagecount ) then
					local i = imagenumbers[k]
					widths[k] = math.floor(ar[j]*ht + 0.5)
					ws = ws + widths[k]
					if heights[k] then
						heights[k] = math.floor(ht)
					end
				end
			end
			widthsum[r] = ws
			widthmax = math.max(widthmax, widthsum[r])
		end
	end	

	-- start building the array of images, if there are images
	if( imagecount &gt; 0 ) then
		-- compute width of outer div
		local bodywidth = 0
		for r=1,rowcount do
			if( widthmax == widthsum[r] ) then
				bodywidth = widthmax + (3 + imagegap) * (perrow[r] - 1) + 12
			end
		end
		-- The body has a min-width of 100, which needs to be taken into account on specific widths
		bodywidth = math.max( 100, bodywidth - 8);

		local bg = pargs['background color'] or ''
		-- create the array of images
		local root = mw.html.create('div')
		root:addClass('thumb')
		root:addClass('tmulti')
		root:addClass(thumbclass[align] or 'tright')
		
		if( align == 'center' or align == 'centre' ) then
			root:addClass('center')
		end
		if( pargs['margin_top'] or args['margin_top']) then
			root:css('margin-top', pargs['margin_top'] or args['margin_top'])
		end
		if( pargs['margin_bottom'] or args['margin_bottom']) then
			root:css('margin-bottom', pargs['margin_bottom'] or args['margin_bottom'])
		end
		if( bg ~= '' ) then
			root:css('background-color', bg)
		end

		local div = root:tag('div')
		div:addClass('thumbinner')
		div:css('width', tostring(bodywidth) .. 'px')
			:css('max-width', tostring(bodywidth) .. 'px')
		if( bg ~= '' ) then
			div:css('background-color', bg)
		end
		-- add the header
		if( isnotempty(header) ) then
			div:tag('div')
				:css('clear', 'both')
				:css('font-weight', 'bold')
				:css('text-align', pargs['header_align'] or 'center')
				:css('background-color', pargs['header_background'] or 'transparent')
				:wikitext(header)
		end
		-- loop through the images
		local k = 0
		for r=1,rowcount do
			for j=1,perrow[r] do
				k = k + 1
				if( k &lt;= imagecount ) then
					local imagediv = div:tag('div')
					imagediv:addClass('tsingle')
					if dir ~= 'vertical' then
						imagediv:css('float', 'left')
					end
					if bg ~= '' then
						imagediv:css('background-color', bg);
					end
					imagediv:css('margin', '1px')
					if ((imagegap &gt; 1) and (j &lt; perrow[r])) then
						imagediv:css('margin-right', tostring(imagegap) .. 'px')
					end
					local i = imagenumbers[k]
					local img = pargs['image' .. i]
					local w = widths[k]
					imagediv:css('width', tostring(2 + w) .. 'px')
						:css('max-width', tostring(2 + w) .. 'px')
					imagediv:wikitext(renderImageCell(img, w, heights[k], 
						pargs['link' .. i], pargs['alt' .. i],
						pargs['thumbtime' .. i], pargs['caption' .. i], capalign, imgstyle))
				end
			end
			-- only float content gives a parent height:0, so add a clearing div
			if dir ~= 'vertical' then
				div:tag('div')
					:css('clear', 'left')
			end
		end
		-- add the footer
		if( isnotempty(footer) ) then
			div:tag('div')
				:addClass('thumbcaption')
				:css('clear', 'left')
				:css('text-align', pargs['footer_align'] or args['footer_align'] or 'left')
				:css('background-color', pargs['footer_background'] or 'transparent')
				:wikitext(footer)
		end
		return tostring(root)
	end
	return ''
end

function p.render( frame )
    return renderMultipleImages( frame )
end
 
return p</text>
      <sha1>kn0v445ba1lfhp2sqykz3eeo8eo3gyo</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/config</title>
    <ns>828</ns>
    <id>42256703</id>
    <revision>
      <id>602886681</id>
      <parentid>602823531</parentid>
      <timestamp>2014-04-05T17:03:49Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>use cfg.demopage rather than cfg.page now that the default parameter has been changed on the /data page</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3545">--------------------------------------------------------------------------------
--                    Namespace detect configuration data                     --
--                                                                            --
-- This module stores configuration data for Module:Namespace detect. Here    --
-- you can localise the module to your wiki's language.                       --
--                                                                            --
-- To activate a configuration item, you need to uncomment it. This means     --
-- that you need to remove the text &quot;-- &quot; at the start of the line.           --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names. Values added     --
-- here will work in addition to the default English parameter names.         --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- cfg.foo = 'parameter name'                                                 --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- cfg.foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'}     --
--------------------------------------------------------------------------------

---- This parameter displays content for the main namespace:
-- cfg.main = 'main'

---- This parameter displays in talk namespaces:
-- cfg.talk = 'talk'

---- This parameter displays content for &quot;other&quot; namespaces (namespaces for which
---- parameters have not been specified):
-- cfg.other = 'other'

---- This parameter makes talk pages behave as though they are the corresponding
---- subject namespace. Note that this parameter is used with [[Module:Yesno]].
---- Edit that module to change the default values of &quot;yes&quot;, &quot;no&quot;, etc.
-- cfg.subjectns = 'subjectns'

---- This parameter sets a demonstration namespace:
-- cfg.demospace = 'demospace'

---- This parameter sets a specific page to compare:
cfg.demopage = 'page'

--------------------------------------------------------------------------------
--                           Table configuration                              --
-- These configuration items allow customisation of the &quot;table&quot; function,     --
-- used to generate a table of possible parameters in the module              --
-- documentation.                                                             --
--------------------------------------------------------------------------------

---- The header for the namespace column in the wikitable containing the list of
---- possible subject-space parameters.
-- cfg.wikitableNamespaceHeader = 'Namespace'

---- The header for the wikitable containing the list of possible subject-space
---- parameters.
-- cfg.wikitableAliasesHeader = 'Aliases'

--------------------------------------------------------------------------------
--                        End of configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>1o6ozz56i8q0xgyl6xa41n2v7kelhli</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/data</title>
    <ns>828</ns>
    <id>42257476</id>
    <revision>
      <id>602886511</id>
      <parentid>602823622</parentid>
      <timestamp>2014-04-05T17:02:16Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>bug fix - use the demospace parameter as both key and value in the argKeys table</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2569">--------------------------------------------------------------------------------
--                          Namespace detect data                             --
-- This module holds data for [[Module:Namespace detect]] to be loaded per    --
-- page, rather than per #invoke, for performance reasons.                    --
--------------------------------------------------------------------------------

local cfg = require('Module:Namespace detect/config')

local function addKey(t, key, defaultKey)
	if key ~= defaultKey then
		t[#t + 1] = key
	end
end

-- Get a table of parameters to query for each default parameter name.
-- This allows wikis to customise parameter names in the cfg table while
-- ensuring that default parameter names will always work. The cfg table
-- values can be added as a string, or as an array of strings.

local defaultKeys = {
	'main',
	'talk',
	'other',
	'subjectns',
	'demospace',
	'demopage'
}

local argKeys = {}
for i, defaultKey in ipairs(defaultKeys) do
	argKeys[defaultKey] = {defaultKey}
end

for defaultKey, t in pairs(argKeys) do
	local cfgValue = cfg[defaultKey]
	local cfgValueType = type(cfgValue)
	if cfgValueType == 'string' then
		addKey(t, cfgValue, defaultKey)
	elseif cfgValueType == 'table' then
		for i, key in ipairs(cfgValue) do
			addKey(t, key, defaultKey)
		end
	end
	cfg[defaultKey] = nil -- Free the cfg value as we don't need it any more.
end

local function getParamMappings()
	--[[
	-- Returns a table of how parameter names map to namespace names. The keys
	-- are the actual namespace names, in lower case, and the values are the
	-- possible parameter names for that namespace, also in lower case. The
	-- table entries are structured like this:
	-- {
	--   [''] = {'main'},
	--   ['wikipedia'] = {'wikipedia', 'project', 'wp'},
	--   ...
	-- }
	--]]
	local mappings = {}
	local mainNsName = mw.site.subjectNamespaces[0].name
	mainNsName = mw.ustring.lower(mainNsName)
	mappings[mainNsName] = mw.clone(argKeys.main)
	mappings['talk'] = mw.clone(argKeys.talk)
	for nsid, ns in pairs(mw.site.subjectNamespaces) do
		if nsid ~= 0 then -- Exclude main namespace.
			local nsname = mw.ustring.lower(ns.name)
			local canonicalName = mw.ustring.lower(ns.canonicalName)
			mappings[nsname] = {nsname}
			if canonicalName ~= nsname then
				table.insert(mappings[nsname], canonicalName)
			end
			for _, alias in ipairs(ns.aliases) do
				table.insert(mappings[nsname], mw.ustring.lower(alias))
			end
		end
	end
	return mappings
end

return {
	argKeys = argKeys,
	cfg = cfg,
	mappings = getParamMappings()
}</text>
      <sha1>ojp6d3pc8mql5nufaqdg576c9so3479</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Navbar</title>
    <ns>828</ns>
    <id>38827227</id>
    <revision>
      <id>780167786</id>
      <parentid>771417723</parentid>
      <timestamp>2017-05-13T12:41:14Z</timestamp>
      <contributor>
        <username>Primefac</username>
        <id>11508456</id>
      </contributor>
      <comment>update from sandbox per [[Special:Diff/771417737]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2517">local p = {}

local getArgs

function p._navbar(args)
	local titleArg = 1

	if args.collapsible then
		titleArg = 2
		if not args.plain then
			args.mini = 1
		end
		if args.fontcolor then
			args.fontstyle = 'color:' .. args.fontcolor .. ';'
		end
		args.style = 'float:left; text-align:left'
	end

	local titleText = args[titleArg] or (':' .. mw.getCurrentFrame():getParent():getTitle())
	local title = mw.title.new(mw.text.trim(titleText), 'Template');

	if not title then
		error('Invalid title ' .. titleText)
	end

	local talkpage = title.talkPageTitle and title.talkPageTitle.fullText or '';

	local div = mw.html.create():tag('div')
	div
		:addClass('plainlinks')
		:addClass('hlist')
		:addClass('navbar')
		:cssText(args.style)

	if args.mini then div:addClass('mini') end

	if not (args.mini or args.plain) then
		div
			:tag('span')
				:css('word-spacing', 0)
				:cssText(args.fontstyle)
				:wikitext(args.text or 'This box:')
				:wikitext(' ')
	end

	if args.brackets then
		div
			:tag('span')
				:css('margin-right', '-0.125em')
				:cssText(args.fontstyle)
				:wikitext('&amp;#91; ')
	end

	local ul = div:tag('ul');

	ul
		:tag('li')
			:addClass('nv-view')
			:wikitext('[[' .. title.fullText .. '|')
			:tag(args.mini and 'abbr' or 'span')
				:attr('title', 'View this template')
				:cssText(args.fontstyle)
				:wikitext(args.mini and 'v' or 'view')
				:done()
			:wikitext(']]')
			:done()
		:tag('li')
			:addClass('nv-talk')
			:wikitext('[[' .. talkpage .. '|')
			:tag(args.mini and 'abbr' or 'span')
				:attr('title', 'Discuss this template')
				:cssText(args.fontstyle)
				:wikitext(args.mini and 't' or 'talk')
				:done()
			:wikitext(']]');

	if not args.noedit then
		ul
			:tag('li')
				:addClass('nv-edit')
				:wikitext('[' .. title:fullUrl('action=edit') .. ' ')
				:tag(args.mini and 'abbr' or 'span')
					:attr('title', 'Edit this template')
					:cssText(args.fontstyle)
					:wikitext(args.mini and 'e' or 'edit')
					:done()
				:wikitext(']');
	end

	if args.brackets then
		div
			:tag('span')
				:css('margin-left', '-0.125em')
				:cssText(args.fontstyle)
				:wikitext(' &amp;#93;')
	end

	if args.collapsible then
		div
			:done()
		:tag('div')
			:css('font-size', '114%')
			:css('margin', args.mini and '0 4em' or '0 7em')
			:cssText(args.fontstyle)
			:wikitext(args[1])
	end

	return tostring(div:done())
end

function p.navbar(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	return p._navbar(getArgs(frame))
end

return p</text>
      <sha1>9d4ism2psi1oucu9pnyveg4m6i2oobx</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Navbox</title>
    <ns>828</ns>
    <id>38634746</id>
    <revision>
      <id>790205321</id>
      <parentid>788016368</parentid>
      <timestamp>2017-07-12T07:55:41Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <comment>removed .navbox-spacing-temp mask, no longer used by site CSS</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="11599">--
-- This module implements {{Navbox}}
--

local p = {}

local navbar = require('Module:Navbar')._navbar
local getArgs -- lazily initialized

local args
local border
local listnums = {}
local ODD_EVEN_MARKER = '\127_ODDEVEN_\127'
local RESTART_MARKER = '\127_ODDEVEN0_\127'
local REGEX_MARKER = '\127_ODDEVEN(%d?)_\127'

local function striped(wikitext)
	-- Return wikitext with markers replaced for odd/even striping.
	-- Child (subgroup) navboxes are flagged with a category that is removed
	-- by parent navboxes. The result is that the category shows all pages
	-- where a child navbox is not contained in a parent navbox.
	local orphanCat = '[[Category:Navbox orphans]]'
	if border == 'subgroup' and args.orphan ~= 'yes' then
		-- No change; striping occurs in outermost navbox.
		return wikitext .. orphanCat
	end
	local first, second = 'odd', 'even'
	if args.evenodd then
		if args.evenodd == 'swap' then
			first, second = second, first
		else
			first = args.evenodd
			second = first
		end
	end
	local changer
	if first == second then
		changer = first
	else
		local index = 0
		changer = function (code)
			if code == '0' then
				-- Current occurrence is for a group before a nested table.
				-- Set it to first as a valid although pointless class.
				-- The next occurrence will be the first row after a title
				-- in a subgroup and will also be first.
				index = 0
				return first
			end
			index = index + 1
			return index % 2 == 1 and first or second
		end
	end
	local regex = orphanCat:gsub('([%[%]])', '%%%1')
	return (wikitext:gsub(regex, ''):gsub(REGEX_MARKER, changer))  -- () omits gsub count
end

local function processItem(item, nowrapitems)
	if item:sub(1, 2) == '{|' then
		-- Applying nowrap to lines in a table does not make sense.
		-- Add newlines to compensate for trim of x in |parm=x in a template.
		return '\n' .. item ..'\n'
	end
	if nowrapitems == 'yes' then
		local lines = {}
		for line in (item .. '\n'):gmatch('([^\n]*)\n') do
			local prefix, content = line:match('^([*:;#]+)%s*(.*)')
			if prefix and not content:match('^&lt;span class=&quot;nowrap&quot;&gt;') then
				line = prefix .. '&lt;span class=&quot;nowrap&quot;&gt;' .. content .. '&lt;/span&gt;'
			end
			table.insert(lines, line)
		end
		item = table.concat(lines, '\n')
	end
	if item:match('^[*:;#]') then
		return '\n' .. item ..'\n'
	end
	return item
end

local function renderNavBar(titleCell)

	if args.navbar ~= 'off' and args.navbar ~= 'plain' and not (not args.name and mw.getCurrentFrame():getParent():getTitle():gsub('/sandbox$', '') == 'Template:Navbox') then
		titleCell:wikitext(navbar{
			args.name,
			mini = 1,
			fontstyle = (args.basestyle or '') .. ';' .. (args.titlestyle or '') .. ';background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none;'
		})
	end

end

--
--   Title row
--
local function renderTitleRow(tbl)
	if not args.title then return end

	local titleRow = tbl:tag('tr')

	if args.titlegroup then
		titleRow
			:tag('th')
				:attr('scope', 'row')
				:addClass('navbox-group')
				:addClass(args.titlegroupclass)
				:cssText(args.basestyle)
				:cssText(args.groupstyle)
				:cssText(args.titlegroupstyle)
				:wikitext(args.titlegroup)
	end

	local titleCell = titleRow:tag('th'):attr('scope', 'col')

	if args.titlegroup then
		titleCell
			:css('border-left', '2px solid #fdfdfd')
			:css('width', '100%')
	end

	local titleColspan = 2
	if args.imageleft then titleColspan = titleColspan + 1 end
	if args.image then titleColspan = titleColspan + 1 end
	if args.titlegroup then titleColspan = titleColspan - 1 end

	titleCell
		:cssText(args.basestyle)
		:cssText(args.titlestyle)
		:addClass('navbox-title')
		:attr('colspan', titleColspan)

	renderNavBar(titleCell)

	titleCell
		:tag('div')
			:attr('id', mw.uri.anchorEncode(args.title))
			:addClass(args.titleclass)
			:css('font-size', '114%')
			:css('margin', '0 4em')
			:wikitext(processItem(args.title))
end

--
--   Above/Below rows
--

local function getAboveBelowColspan()
	local ret = 2
	if args.imageleft then ret = ret + 1 end
	if args.image then ret = ret + 1 end
	return ret
end

local function renderAboveRow(tbl)
	if not args.above then return end

	tbl:tag('tr')
		:tag('td')
			:addClass('navbox-abovebelow')
			:addClass(args.aboveclass)
			:cssText(args.basestyle)
			:cssText(args.abovestyle)
			:attr('colspan', getAboveBelowColspan())
			:tag('div')
				:wikitext(processItem(args.above, args.nowrapitems))
end

local function renderBelowRow(tbl)
	if not args.below then return end

	tbl:tag('tr')
		:tag('td')
			:addClass('navbox-abovebelow')
			:addClass(args.belowclass)
			:cssText(args.basestyle)
			:cssText(args.belowstyle)
			:attr('colspan', getAboveBelowColspan())
			:tag('div')
				:wikitext(processItem(args.below, args.nowrapitems))
end

--
--   List rows
--
local function renderListRow(tbl, index, listnum)
	local row = tbl:tag('tr')

	if index == 1 and args.imageleft then
		row
			:tag('td')
				:addClass('navbox-image')
				:addClass(args.imageclass)
				:css('width', '1px')               -- Minimize width
				:css('padding', '0px 2px 0px 0px')
				:cssText(args.imageleftstyle)
				:attr('rowspan', #listnums)
				:tag('div')
					:wikitext(processItem(args.imageleft))
	end

	if args['group' .. listnum] then
		local groupCell = row:tag('th')

		groupCell
			:attr('scope', 'row')
			:addClass('navbox-group')
			:addClass(args.groupclass)
			:cssText(args.basestyle)
            :css('width', args.groupwidth or '1%') -- If groupwidth not specified, minimize width

		groupCell
			:cssText(args.groupstyle)
			:cssText(args['group' .. listnum .. 'style'])
			:wikitext(args['group' .. listnum])
	end

	local listCell = row:tag('td')

	if args['group' .. listnum] then
		listCell
			:css('text-align', 'left')
			:css('border-left-width', '2px')
			:css('border-left-style', 'solid')
	else
		listCell:attr('colspan', 2)
	end

	if not args.groupwidth then
		listCell:css('width', '100%')
	end

	local rowstyle  -- usually nil so cssText(rowstyle) usually adds nothing
	if index % 2 == 1 then
		rowstyle = args.oddstyle
	else
		rowstyle = args.evenstyle
	end

	local listText = args['list' .. listnum]
	local oddEven = ODD_EVEN_MARKER
	if listText:sub(1, 12) == '&lt;/div&gt;&lt;table' then
		-- Assume list text is for a subgroup navbox so no automatic striping for this row.
		oddEven = listText:find('&lt;th[^&gt;]*&quot;navbox%-title&quot;') and RESTART_MARKER or 'odd'
	end
	listCell
		:css('padding', '0px')
		:cssText(args.liststyle)
		:cssText(rowstyle)
		:cssText(args['list' .. listnum .. 'style'])
		:addClass('navbox-list')
		:addClass('navbox-' .. oddEven)
		:addClass(args.listclass)
		:tag('div')
			:css('padding', (index == 1 and args.list1padding) or args.listpadding or '0em 0.25em')
			:wikitext(processItem(listText, args.nowrapitems))

	if index == 1 and args.image then
		row
			:tag('td')
				:addClass('navbox-image')
				:addClass(args.imageclass)
				:css('width', '1px')               -- Minimize width
				:css('padding', '0px 0px 0px 2px')
				:cssText(args.imagestyle)
				:attr('rowspan', #listnums)
				:tag('div')
					:wikitext(processItem(args.image))
	end
end


--
--   Tracking categories
--

local function needsHorizontalLists()
	if border == 'subgroup' or args.tracking == 'no' then
		return false
	end
	local listClasses = {
		['plainlist'] = true, ['hlist'] = true, ['hlist hnum'] = true,
		['hlist hwrap'] = true, ['hlist vcard'] = true, ['vcard hlist'] = true,
		['hlist vevent'] = true,
	}
	return not (listClasses[args.listclass] or listClasses[args.bodyclass])
end

local function hasBackgroundColors()
	for _, key in ipairs({'titlestyle', 'groupstyle', 'basestyle'}) do
		if tostring(args[key]):find('background', 1, true) then
			return true
		end
	end
end

local function isIllegible()
	local styleratio = require('Module:Color contrast')._styleratio

	for key, style in pairs(args) do
		if tostring(key):match(&quot;style$&quot;) then
			if styleratio{mw.text.unstripNoWiki(style)} &lt; 4.5 then
				return true
			end
		end
	end
	return false
end

local function getTrackingCategories()
	local cats = {}
	if needsHorizontalLists() then table.insert(cats, 'Navigational boxes without horizontal lists') end
	if hasBackgroundColors() then table.insert(cats, 'Navboxes using background colours') end
	if isIllegible() then table.insert(cats, 'Potentially illegible navboxes') end
	return cats
end

local function renderTrackingCategories(builder)
	local title = mw.title.getCurrentTitle()
	if title.namespace ~= 10 then return end -- not in template space
	local subpage = title.subpageText
	if subpage == 'doc' or subpage == 'sandbox' or subpage == 'testcases' then return end

	for _, cat in ipairs(getTrackingCategories()) do
		builder:wikitext('[[Category:' .. cat .. ']]')
	end
end

--
--   Main navbox tables
--
local function renderMainTable()
	local tbl = mw.html.create('table')
		:addClass('nowraplinks')
		:addClass(args.bodyclass)

	if args.title and (args.state ~= 'plain' and args.state ~= 'off') then
		tbl
			:addClass('collapsible')
			:addClass(args.state or 'autocollapse')
	end

	tbl:css('border-spacing', 0)
	if border == 'subgroup' or border == 'none' then
		tbl
			:addClass('navbox-subgroup')
			:cssText(args.bodystyle)
			:cssText(args.style)
	else  -- regular navbox - bodystyle and style will be applied to the wrapper table
		tbl
			:addClass('navbox-inner')
			:css('background', 'transparent')
			:css('color', 'inherit')
	end
	tbl:cssText(args.innerstyle)

	renderTitleRow(tbl)
	renderAboveRow(tbl)
	for i, listnum in ipairs(listnums) do
		renderListRow(tbl, i, listnum)
	end
	renderBelowRow(tbl)

	return tbl
end

function p._navbox(navboxArgs)
	args = navboxArgs

	for k, _ in pairs(args) do
		if type(k) == 'string' then
			local listnum = k:match('^list(%d+)$')
			if listnum then table.insert(listnums, tonumber(listnum)) end
		end
	end
	table.sort(listnums)

	border = mw.text.trim(args.border or args[1] or '')
	if border == 'child' then
		border = 'subgroup'
	end

	-- render the main body of the navbox
	local tbl = renderMainTable()

	-- render the appropriate wrapper around the navbox, depending on the border param
	local res = mw.html.create()
	if border == 'none' then
		local nav = res:tag('div')
			:attr('role', 'navigation')
			:node(tbl)
		if args.title then
			nav:attr('aria-labelledby', mw.uri.anchorEncode(args.title))
		else
			nav:attr('aria-label', 'Navbox')
		end
	elseif border == 'subgroup' then
		-- We assume that this navbox is being rendered in a list cell of a parent navbox, and is
		-- therefore inside a div with padding:0em 0.25em. We start with a &lt;/div&gt; to avoid the
		-- padding being applied, and at the end add a &lt;div&gt; to balance out the parent's &lt;/div&gt;
		res
			:wikitext('&lt;/div&gt;')
			:node(tbl)
			:wikitext('&lt;div&gt;')
	else
		local nav = res:tag('div')
			:attr('role', 'navigation')
			:addClass('navbox')
			:cssText(args.bodystyle)
			:cssText(args.style)
			:css('padding', '3px')
			:node(tbl)
		if args.title then
			nav:attr('aria-labelledby', mw.uri.anchorEncode(args.title))
		else
			nav:attr('aria-label', 'Navbox')
		end
	end

	renderTrackingCategories(res)

	return striped(tostring(res))
end

function p.navbox(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	args = getArgs(frame, {wrappers = 'Template:Navbox'})

	-- Read the arguments in the order they'll be output in, to make references number in the right order.
	local _
	_ = args.title
	_ = args.above
	for i = 1, 20 do
		_ = args[&quot;group&quot; .. tostring(i)]
		_ = args[&quot;list&quot; .. tostring(i)]
	end
	_ = args.below

	return p._navbox(args)
end

return p</text>
      <sha1>2535j56ygjbxd128b319uose3yh7ngf</sha1>
    </revision>
  </page>
  <page>
    <title>Module:No globals</title>
    <ns>828</ns>
    <id>42567026</id>
    <revision>
      <id>606781024</id>
      <parentid>605595284</parentid>
      <timestamp>2014-05-02T15:35:56Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>rm name exception</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="307">local mt = getmetatable(_G) or {}
function mt.__index (t, k)
	if k ~= 'arg' then
		error('Tried to read nil global ' .. tostring(k), 2)
	end
	return nil
end
function mt.__newindex(t, k, v)
	if k ~= 'arg' then
		error('Tried to write global ' .. tostring(k), 2)
	end
	rawset(t, k, v)
end
setmetatable(_G, mt)</text>
      <sha1>gggsv54pq7f94l3up48hr91qtxnskdm</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Ns has subpages</title>
    <ns>828</ns>
    <id>44657407</id>
    <revision>
      <id>637438142</id>
      <parentid>637436476</parentid>
      <timestamp>2014-12-10T06:37:29Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Ns has subpages: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1678">-- This module implements [[Template:Ns has subpages]].
-- While the template is fairly simple, this information is made available to
-- Lua directly, so using a module means that we don't have to update the
-- template as new namespaces are added.

local p = {}

function p._main(ns, frame)
	-- Get the current namespace if we were not passed one.
	if not ns then
		ns = mw.title.getCurrentTitle().namespace
	end

	-- Look up the namespace table from mw.site.namespaces. This should work
	-- for a majority of cases.
	local nsTable = mw.site.namespaces[ns]

	-- Try using string matching to get the namespace from page names.
	-- Do a quick and dirty bad title check to try and make sure we do the same
	-- thing as {{NAMESPACE}} in most cases.
	if not nsTable and type(ns) == 'string' and not ns:find('[&lt;&gt;|%[%]{}]') then
		local nsStripped = ns:gsub('^[_%s]*:', '')
		nsStripped = nsStripped:gsub(':.*$', '')
		nsTable = mw.site.namespaces[nsStripped]
	end

	-- If we still have no match then try the {{NAMESPACE}} parser function,
	-- which should catch the remainder of cases. Don't use a mw.title object,
	-- as this would increment the expensive function count for each new page
	-- tested.
	if not nsTable then
		frame = frame or mw.getCurrentFrame()
		local nsProcessed = frame:callParserFunction('NAMESPACE', ns)
		nsTable = nsProcessed and mw.site.namespaces[nsProcessed]
	end
	
	return nsTable and nsTable.hasSubpages
end

function p.main(frame)
	local ns = frame:getParent().args[1]
	if ns then
		ns = ns:match('^%s*(.-)%s*$') -- trim whitespace
		ns = tonumber(ns) or ns
	end
	local hasSubpages = p._main(ns, frame)
	return hasSubpages and 'yes' or ''
end

return p</text>
      <sha1>qb0b1z2vff7kifnw21v205d791esbiz</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal</title>
    <ns>828</ns>
    <id>38965350</id>
    <revision>
      <id>752302732</id>
      <parentid>729840072</parentid>
      <timestamp>2016-11-30T14:58:40Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>quick hack to prevent p._image from returning filenames with things like &quot;|border&quot; in them</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10273">--[==[ This module is a Lua implementation of the old {{Portal}} template. As of August 2013 it is used on nearly 5,000,000 articles.
-- Please take care when updating it! It outputs two functions: p.portal, which generates a list of portals, and p.image, which
-- produces the image name for an individual portal.

-- The portal image data is kept in submodules of [[Module:Portal/images]], listed below:
-- [[Module:Portal/images/a]]		- for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]		- for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]		- for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]		- for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]		- for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]		- for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]		- for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]		- for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]		- for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]		- for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]		- for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]		- for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]		- for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]		- for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]		- for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]		- for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]		- for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]		- for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]		- for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]		- for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]		- for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]		- for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]		- for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]		- for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]		- for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]		- for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]	- for portal names beginning with any other letters. This includes numbers,
-- 									  letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]]	- for adding aliases for existing portal names. Use this page for variations
-- 									  in spelling and diacritics, etc., no matter what letter the portal begins with.
--
-- The images data pages are separated by the first letter to reduce server load when images are added, changed, or removed.
-- Previously all the images were on one data page at [[Module:Portal/images]], but this had the disadvantage that all
-- 5,000,000 pages using this module needed to be refreshed every time an image was added or removed.
]==]

local p = {}

local function matchImagePage(s)
	-- Finds the appropriate image subpage given a lower-case
	-- portal name plus the first letter of that portal name.
	if type(s) ~= 'string' or #s &lt; 1 then return end
	local firstLetter = mw.ustring.sub(s, 1, 1)
	local imagePage
	if mw.ustring.find(firstLetter, '^[a-z]') then
		imagePage = 'Module:Portal/images/' .. firstLetter
	else
		imagePage = 'Module:Portal/images/other'
	end
	return mw.loadData(imagePage)[s]
end

local function getAlias(s)
	-- Gets an alias from the image alias data page.
	local aliasData = mw.loadData('Module:Portal/images/aliases')
	for portal, aliases in pairs(aliasData) do
		for _, alias in ipairs(aliases) do
			if alias == s then
				return portal
			end
		end
	end
end

local function getImageName(s)
	-- Gets the image name for a given string.
	local default = 'Portal-puzzle.svg|link=|alt='
	if type(s) ~= 'string' or #s &lt; 1 then
		return default
	end
	s = mw.ustring.lower(s)
	return matchImagePage(s) or matchImagePage(getAlias(s)) or default
end

function p._portal(portals, args)
	-- This function builds the portal box used by the {{portal}} template.
	local root = mw.html.create('div')
		:attr('role', 'navigation')
		:attr('aria-label', 'Portals')
		:addClass('noprint portal plainlist')
		:addClass(args.left and 'tleft' or 'tright')
		:css('margin', args.margin or (args.left == 'yes' and '0.5em 1em 0.5em 0') or '0.5em 0 0.5em 1em')
		:css('border', 'solid #aaa 1px')
		:newline()

	-- If no portals have been specified, display an error and add the page to a tracking category.
	if not portals[1] then
		root:wikitext('&lt;strong class=&quot;error&quot;&gt;No portals specified: please specify at least one portal&lt;/strong&gt;[[Category:Portal templates without a parameter]]')
		return tostring(root)
	end

	-- Start the list. This corresponds to the start of the wikitext table in the old [[Template:Portal]].
	local listroot = root:tag('ul')
		:css('display', 'table')
		:css('box-sizing', 'border-box')
		:css('padding', '0.1em')
		:css('max-width', '175px')
		:css('width', type(args.boxsize) == 'string' and (args.boxsize .. 'px') or nil)
		:css('background', '#f9f9f9')
		:css('font-size', '85%')
		:css('line-height', '110%')
		:css('font-style', 'italic')
		:css('font-weight', 'bold')

	-- Display the portals specified in the positional arguments.
	for _, portal in ipairs(portals) do
		local image = getImageName(portal)

		-- Generate the html for the image and the portal name.
		listroot
			:newline()
			:tag('li')
				:css('display', 'table-row')
				:tag('span')
					:css('display', 'table-cell')
					:css('padding', '0.2em')
					:css('vertical-align', 'middle')
					:css('text-align', 'center')
					:wikitext(string.format('[[File:%s|32x28px|class=noviewer]]', image))
					:done()
				:tag('span')
					:css('display', 'table-cell')
					:css('padding', '0.2em 0.2em 0.2em 0.3em')
					:css('vertical-align', 'middle')
					:wikitext(string.format('[[Portal:%s|%s%sportal]]', portal, portal, args['break'] and '&lt;br /&gt;' or ' '))
	end
	return tostring(root)
end

function p._image(portals)
	-- Wrapper function to allow getImageName() to be accessed through #invoke.
	local name = getImageName(portals[1])
	return name:match('^(.-)|') or name -- FIXME: use a more elegant way to separate borders etc. from the image name
end

local function getAllImageTables()
	-- Returns an array containing all image subpages (minus aliases) as loaded by mw.loadData.
	local images = {}
	for i, subpage in ipairs{'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'other'} do
		images[i] = mw.loadData('Module:Portal/images/' .. subpage)
	end
	return images
end

function p._displayAll(portals, args)
	-- This function displays all portals that have portal images. This function is for maintenance purposes and should not be used in
	-- articles, for two reasons: 1) there are over 1500 portals with portal images, and 2) the module doesn't record how the portal
	-- names are capitalized, so the portal links may be broken.
	local lang = mw.language.getContentLanguage()
	local count = 1
	for _, imageTable in ipairs(getAllImageTables()) do
		for portal in pairs(imageTable) do
			portals[count] = lang:ucfirst(portal)
			count = count + 1
		end
	end
	return p._portal(portals, args)
end

function p._imageDupes()
	-- This function searches the image subpages to find duplicate images. If duplicate images exist, it is not necessarily a bad thing,
	-- as different portals might just happen to choose the same image. However, this function is helpful in identifying images that
	-- should be moved to a portal alias for ease of maintenance.
	local exists, dupes = {}, {}
	for _, imageTable in ipairs(getAllImageTables()) do
		for portal, image in pairs(imageTable) do
			if not exists[image] then
				exists[image] = portal
			else
				table.insert(dupes, string.format('The image &quot;[[:File:%s|%s]]&quot; is used for both portals &quot;%s&quot; and &quot;%s&quot;.', image, image, exists[image], portal))
			end
		end
	end
	if #dupes &lt; 1 then
		return 'No duplicate images found.'
	else
		return 'The following duplicate images were found:\n* ' .. table.concat(dupes, '\n* ')
	end
end

local function processPortalArgs(args)
	-- This function processes a table of arguments and returns two tables: an array of portal names for processing by ipairs, and a table of
	-- the named arguments that specify style options, etc. We need to use ipairs because we want to list all the portals in the order
	-- they were passed to the template, but we also want to be able to deal with positional arguments passed explicitly, for example
	-- {{portal|2=Politics}}. The behaviour of ipairs is undefined if nil values are present, so we need to make sure they are all removed.
	args = type(args) == 'table' and args or {}
	local portals = {}
	local namedArgs = {}
	for k, v in pairs(args) do
		if type(k) == 'number' and type(v) == 'string' then -- Make sure we have no non-string portal names.
			table.insert(portals, k)
		elseif type(k) ~= 'number' then
			namedArgs[k] = v
		end
	end
	table.sort(portals)
	for i, v in ipairs(portals) do
		portals[i] = args[v]
	end
	return portals, namedArgs
end

local function makeWrapper(funcName)
	-- Processes external arguments and sends them to the other functions.
	return function (frame)
		-- If called via #invoke, use the args passed into the invoking
		-- template, or the args passed to #invoke if any exist. Otherwise
		-- assume args are being passed directly in from the debug console
		-- or from another Lua module.
		local origArgs
		if type(frame.getParent) == 'function' then
			origArgs = frame:getParent().args
			for k, v in pairs(frame.args) do
				origArgs = frame.args
				break
			end
		else
			origArgs = frame
		end
		-- Trim whitespace and remove blank arguments.
		local args = {}
		for k, v in pairs(origArgs) do
			if type(v) == 'string' then
				v = mw.text.trim(v)
			end
			if v ~= '' then
				args[k] = v
			end
		end
		return p[funcName](processPortalArgs(args)) -- passes two tables to func: an array of portal names, and a table of named arguments.
	end
end

for _, funcName in ipairs{'portal', 'image', 'imageDupes', 'displayAll'} do
	p[funcName] = makeWrapper('_' .. funcName)
end

return p</text>
      <sha1>7np96ej58kiycf2l3mbp0omxk8k6db5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/b</title>
    <ns>828</ns>
    <id>40416112</id>
    <revision>
      <id>804306798</id>
      <parentid>802999290</parentid>
      <timestamp>2017-10-08T03:15:04Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;baltic sea&quot;] = &quot;Baltic Sea location map.svg|link=|alt=map&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="8978">--[==[ This is the &quot;B&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;B&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.	
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be
-- omitted.
]==]

return {
	[&quot;babism&quot;] = &quot;Haykal2.gif|link=|alt=&quot;,
	[&quot;bacon&quot;] = &quot;NCI bacon.jpg|link=|alt=&quot;,
	[&quot;baden-wrttemberg&quot;] = &quot;Flag of Baden-Wrttemberg.svg|border|link=|alt=flag&quot;,	[&quot;badminton&quot;] = &quot;Badminton racquet.svg|link=|alt=&quot;,
	[&quot;bah' faith&quot;] = &quot;Bahai star.svg|link=|alt=&quot;,
	[&quot;bahrain&quot;] = &quot;Flag of Bahrain.svg|border|link=|alt=flag&quot;,
	[&quot;ballet&quot;] = &quot;Ballerina-icon.jpg|alt=icon&quot;,
	[&quot;balochistan, pakistan&quot;] = &quot;Flag of Balochistan.svg|border|link=|alt=&quot;,
	[&quot;baltic sea&quot;] = &quot;Baltic Sea location map.svg|link=|alt=map&quot;,
	[&quot;baltic states&quot;] = &quot;Subdivisions of baltic states.svg|link=|alt=map&quot;,
	[&quot;baltimore&quot;] = &quot;Seal of Baltimore, Maryland.png|link=|alt=seal&quot;,
	[&quot;bangalore&quot;] = &quot;Bangalore Palace.jpg|alt=icon&quot;,
	[&quot;bangladesh premier league&quot;] = &quot;BPL.svg|link=|alt=&quot;,
	[&quot;bangladesh&quot;] = &quot;Flag of Bangladesh.svg|border|link=|alt=flag&quot;,
	[&quot;baptist&quot;] = &quot;Baptism logo.jpg|link=|alt=&quot;,
	[&quot;barack obama&quot;] = &quot;Obama.svg|link=|alt=&quot;,
	[&quot;barbados&quot;] = &quot;Nuvola Barbados flag.svg|alt=icon&quot;,
	[&quot;baseball&quot;] = &quot;Baseball.svg|link=|alt=icon&quot;,
	[&quot;basketball&quot;] = &quot;Basketball Clipart.svg|link=|alt=icon&quot;,
	[&quot;basque&quot;] = &quot;Lauburu.svg|link=|alt=&quot;,
	[&quot;bates college&quot;] = &quot;1864 Bates Seal.jpg|link=|alt=seal&quot;,
	[&quot;battleships&quot;] = &quot;BS Bismarck.png|alt=icon&quot;,
	[&quot;battlestar galactica&quot;] = &quot;BattlestarMandala.svg|alt=icon&quot;,
	[&quot;bavaria&quot;] = &quot;Flag of Bavaria (lozengy).svg|border|link=|alt=flag&quot;,
	[&quot;bbc&quot;] = &quot;BBC.svg|link=|alt=&quot;,
	[&quot;beer&quot;] = &quot;Projet bire logo v2.png|alt=icon&quot;,
	[&quot;beijing&quot;] = &quot;Beijing-name.svg|alt=icon&quot;,
	[&quot;belarus&quot;] = &quot;Flag of Belarus.svg|border|link=|alt=flag&quot;,
	[&quot;belgium&quot;] = &quot;Flag of Belgium.svg|border|link=|alt=flag&quot;,
	[&quot;belize&quot;] = &quot;Flag of Belize.svg|border|link=|alt=flag&quot;,
	[&quot;bengal&quot;] = &quot;BengaliScriptKo.svg|link=|alt=&quot;,
	[&quot;bengali&quot;] = &quot;Bangla Script.svg|alt=icon&quot;,
	[&quot;bengali cinema&quot;] = &quot;Emojione 1F3A5.svg|alt=icon&quot;,
	[&quot;bengali literature&quot;] = &quot;Bhasha Smritistambha Arnab Dutta 2011.jpg|alt=icon&quot;,
	[&quot;benin&quot;] = &quot;Flag of Benin.svg|border|link=|alt=flag&quot;,
	[&quot;berbers&quot;] = &quot;Berber flag.svg|border|link=|alt=flag&quot;,
	[&quot;berkshire&quot;] = &quot;Flag of Berkshire.svg|link=|alt=flag&quot;,
	[&quot;berlin&quot;] = &quot;Coat of arms of Berlin.svg|link=|alt=&quot;,
	[&quot;bermuda&quot;] = &quot;Flag of Bermuda.svg|border|link=|alt=flag&quot;,
	[&quot;beyonc knowles&quot;] = &quot;Beyonce cropped2.jpg|link=|alt=&quot;,
	[&quot;bhutan&quot;] = &quot;Flag of Bhutan.svg|border|link=|alt=flag&quot;,
	[&quot;bible&quot;] = &quot;Bible.malmesbury.arp.jpg|link=|alt=&quot;,
	[&quot;bibliographies/science task force&quot;] = &quot;Principia Page 1726.jpg|link=|alt=photo&quot;,
	[&quot;bihar&quot;] = &quot;Seal of Bihar.jpg|link=|alt=&quot;,
	[&quot;biography&quot;] = &quot;P vip.svg|link=|alt=&quot;,
	[&quot;biological warfare&quot;] = &quot;Anthrax culture.jpg|link=|alt=&quot;,
	[&quot;biology&quot;] = &quot;Issoria lathonia.jpg|alt=icon&quot;,
	[&quot;biotechnology&quot;] = &quot;TRNA-Phe yeast 1ehz.png|alt=icon&quot;,
	[&quot;birds&quot;] = &quot;Eagle 01.svg|link=|alt=&quot;,
	[&quot;bjrk&quot;] = &quot;Bjrk signature.png|link=|alt=&quot;,
	[&quot;blu-ray&quot;] = &quot;Blu-ray disc2.png|alt=icon&quot;,
	[&quot;bob dylan&quot;] = &quot;Bob dylan.jpg|alt=icon&quot;,
	[&quot;bohemia&quot;] = &quot;Flag of Bohemia.svg|border|link=|alt=flag&quot;,
	[&quot;bohol&quot;] = &quot;Chocolate Hills.jpg|alt=icon&quot;,
	[&quot;bolivia&quot;] = &quot;Flag of Bolivia.svg|border|link=|alt=flag&quot;,
	[&quot;bollywood&quot;] = &quot;Indiafilm.svg|alt=icon&quot;,
	[&quot;bonaire&quot;] = &quot;Flag of Bonaire.svg|border|link=|alt=flag&quot;,
	[&quot;book of mormon&quot;] = &quot;Book of Mormon English Missionary Edition Soft Cover.jpg|link=|alt=&quot;,
	[&quot;books&quot;] = &quot;Nuvola apps bookcase.svg|alt=icon&quot;,
	[&quot;bosnia and herzegovina&quot;] = &quot;Flag of Bosnia and Herzegovina.svg|border|link=|alt=flag&quot;,
	[&quot;boston&quot;] = &quot;Flag of Boston.svg|border|link=|alt=flag&quot;,
	[&quot;botany&quot;] = &quot;Rosa villosa.jpg|alt=icon&quot;,
	[&quot;botswana&quot;] = &quot;Flag of Botswana.svg|border|link=|alt=flag&quot;,
	[&quot;boxing&quot;] = &quot;Icon-boxing-gloves.jpg|alt=icon&quot;,
	[&quot;brandenburg&quot;] = &quot;Flag of Brandenburg.svg|border|link=|alt=flag&quot;,
	[&quot;brandy norwood&quot;] = &quot;BrandyNorwoodJuly04.jpg|alt=icon&quot;,
	[&quot;brazil&quot;] = &quot;Flag of Brazil.svg|border|link=|alt=flag&quot;,
	[&quot;bremen&quot;] = &quot;Flag of Bremen.svg|border|link=|alt=flag&quot;,
	[&quot;briarcliff manor, new york&quot;] = &quot;BriarcliffOutlook4-crop.jpg|link=|alt=&quot;,
	[&quot;bridges&quot;] = &quot;Pont-type-4-haubans.svg|alt=icon&quot;,
	[&quot;bridges&quot;] = &quot;Pont-type-4-haubans.svg|alt=icon&quot;,
	[&quot;brigham young university&quot;] = &quot;Brigham Young University medallion.svg|link=|alt=seal&quot;,
	[&quot;brighton&quot;] = &quot;Brighton Royal Pavilion.jpg|alt=icon&quot;,
	[&quot;brisbane&quot;] = &quot;Brisbane COA.gif|link=|alt=&quot;,
	[&quot;bristol&quot;] = &quot;Bristol arms cropped.jpg|alt=icon&quot;,
	[&quot;british army&quot;] = &quot;Flag of the British Army.svg|border|link=|alt=flag&quot;,
	[&quot;british columbia&quot;] = &quot;Flag of British Columbia.svg|border|link=|alt=flag&quot;,
	[&quot;british empire&quot;] = &quot;British Empire 1897.jpg|link=|alt=&quot;,
	[&quot;british indian ocean territory&quot;] = &quot;Flag of the British Indian Ocean Territory.svg|border|link=|alt=flag&quot;,
	[&quot;british library&quot;] = &quot;British library london.jpg|link=|alt=&quot;,
	[&quot;british politics&quot;] = &quot;Royal Coat of Arms of the United Kingdom.svg|alt=icon&quot;,
	[&quot;british virgin islands&quot;] = &quot;Flag of the British Virgin Islands.svg|border|link=|alt=flag&quot;,
	[&quot;britney spears&quot;] = &quot;Baby One More Time 2009.jpg|alt=icon&quot;,
	[&quot;brittany&quot;] = &quot;Flag of Brittany.svg|border|link=|alt=flag&quot;,
	[&quot;brunei&quot;] = &quot;Flag of Brunei.svg|border|link=|alt=flag&quot;,
	[&quot;brussels&quot;] = &quot;Flag Belgium brussels.svg|border|link=|alt=flag&quot;,
	[&quot;bryan adams&quot;] = &quot;Bryan Adams Hamburg MG 0631 flickr.jpg|alt=icon&quot;,
	[&quot;bucharest&quot;] = &quot;ROU Bucharest CoA.png|link=|alt=&quot;,
	[&quot;buckinghamshire&quot;] = &quot;EnglandBuckinghamshire.png|alt=icon&quot;,
	[&quot;budapest&quot;] = &quot;Coat of arms of Budapest.svg|link=|alt=&quot;,
	[&quot;buddhism&quot;] = &quot;Dharma Wheel.svg|alt=icon&quot;,
	[&quot;buenos aires&quot;] = &quot;Flag of Buenos Aires City.png|border|link=|alt=flag&quot;,
	[&quot;buffy the vampire slayer&quot;] = &quot;Buffya.jpg|link=|alt=&quot;,
	[&quot;bulgaria&quot;] = &quot;Flag of Bulgaria.svg|border|link=|alt=flag&quot;,
	[&quot;bulgarian empire&quot;] = &quot;Coat of arms of the Second Bulgarian Empire.svg|alt=icon&quot;,
	[&quot;burkina faso&quot;] = &quot;Flag of Burkina Faso.svg|border|link=|alt=flag&quot;,
	[&quot;burundi&quot;] = &quot;Flag of Burundi.svg|border|link=|alt=flag&quot;,
	[&quot;buses&quot;] = &quot;BSicon BUS.svg|link=|alt=&quot;,
	[&quot;business and economics&quot;] = &quot;Emblem-money.svg|alt=icon&quot;,
	[&quot;byzantine empire&quot;] = &quot;Flag of Palaeologus Dynasty.svg|border|link=|alt=flag&quot;
}</text>
      <sha1>4u0jk847k2ithozu2y3hsdafo1zw312</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/e</title>
    <ns>828</ns>
    <id>40416142</id>
    <revision>
      <id>805698550</id>
      <parentid>802377906</parentid>
      <timestamp>2017-10-17T01:50:32Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;english language&quot;] = &quot;Shakespeare2.jpg|link=|alt=painting&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6810">--[==[ This is the &quot;E&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;E&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]

return {
	[&quot;early modern britain&quot;] = &quot;Union flag 1606 (Kings Colors).svg|border|link=|alt=flag&quot;,
	[&quot;earth&quot;] = &quot;The Earth seen from Apollo 17 with transparent background.png|link=|alt=&quot;,
	[&quot;earth sciences&quot;] = &quot;The Earth seen from Apollo 17 with transparent background.png|link=|alt=&quot;,
	[&quot;earthquakes&quot;] = &quot;Good Friday Earthquake at Turnagain Arm.jpg|link=|alt=image&quot;,
	[&quot;east asia&quot;] = &quot;East Asia Cutout Projection.png|border|link=|alt=map&quot;,
	[&quot;east carolina university&quot;] = &quot;East Carolina Pirates wordmark.svg|link=|alt=wordmark&quot;,
	[&quot;east frisia&quot;] = &quot;Ostfriesland CoA.svg|link=|alt=&quot;,
	[&quot;east germany&quot;] = &quot;Flag of East Germany.svg|border|link=|alt=flag&quot;,
	[&quot;east midlands england&quot;] = &quot;EnglandEastMidlands.png|alt=icon&quot;,
	[&quot;east sussex&quot;] = &quot;E Sussex arms.png|link=|alt=&quot;,
	[&quot;east timor&quot;] = &quot;Flag of East Timor.svg|border|link=|alt=flag&quot;,
	[&quot;eastenders&quot;] = &quot;EastEnders Television.png|alt=icon&quot;,
	[&quot;eastern christianity&quot;] = &quot;USVA headstone emb-05.svg|link=|alt=&quot;,
	[&quot;eastern europe&quot;] = &quot;Eastern Europe (Robinson projection).png|border|link=|alt=map&quot;,
	[&quot;eastern ontario&quot;] = &quot;EasternOntario.png|link=|alt=&quot;,
	[&quot;ecology&quot;] = &quot;Earth Day Flag.png|border|link=|alt=icon&quot;,
	[&quot;ecuador&quot;] = &quot;Flag of Ecuador.svg|border|link=|alt=flag&quot;,
	[&quot;ed, edd n eddy&quot;] = &quot;Ed, Edd n Eddy logo.png|link=|alt=&quot;,
	[&quot;edmonton&quot;] = &quot;Edmonton Downtown Skyline daytime new.jpg|alt=icon&quot;,
	[&quot;education&quot;] = &quot;Nuvola apps bookcase.svg|alt=icon&quot;,
	[&quot;education in canada&quot;] = &quot;School.svg|link=|alt=&quot;,
	[&quot;education in india&quot;] = &quot;Nalanda University India ruins.jpg|link=|alt=photo&quot;,
	[&quot;education in pakistan&quot;] = &quot;Flag of Pakistan.svg|border|link=|alt=flag&quot;,
	[&quot;egypt&quot;] = &quot;Flag of Egypt.svg|border|link=|alt=flag&quot;,
	[&quot;el salvador&quot;] = &quot;Flag of El Salvador.svg|border|link=|alt=flag&quot;,
	[&quot;elbe sandstone mountains&quot;] = &quot;Lilienstein herbstabend.jpeg|alt=icon&quot;,
	[&quot;electoral districts in canada&quot;] = &quot;Canpoligeoicon.png|link=|alt=&quot;,
	[&quot;electromagnetism&quot;] = &quot;Elektromagnetische Induktion.svg|link=|alt=diagram&quot;,
	[&quot;electronic music&quot;] = &quot;Maplin 5600.jpg|link=|alt=&quot;,
	[&quot;electronics&quot;] = &quot;Nuvola apps ksim.png|alt=icon&quot;,
	[&quot;elvis presley&quot;] = &quot;YoungElvisPresley.jpg|link=|alt=&quot;,
	[&quot;eminem&quot;] = &quot;Elogo.svg|alt=icon&quot;,
	[&quot;emo&quot;] = &quot;Emosmile.png|alt=icon&quot;,
	[&quot;energy&quot;] = &quot;Crystal energy.svg|alt=icon&quot;,
	[&quot;engineering&quot;] = &quot;Nuvola apps kcmsystem.svg|alt=icon&quot;,
	[&quot;england&quot;] = &quot;Flag of England.svg|border|link=|alt=flag&quot;,
	[&quot;english football&quot;] = &quot;Soccerball England.svg|link=|alt=&quot;,
	[&quot;english language&quot;] = &quot;Shakespeare2.jpg|link=|alt=painting&quot;,
	[&quot;entomology&quot;] = &quot;Orapia rayneri.svg|link=|alt=image&quot;,
	[&quot;environment&quot;] = &quot;Aegopodium podagraria1 ies.jpg|alt=icon&quot;,
	[&quot;equatorial guinea&quot;] = &quot;Flag of Equatorial Guinea.svg|border|link=|alt=flag&quot;,
	[&quot;erie&quot;] = &quot;Flag of Erie, Pennsylvania.svg|border|link=|alt=flag&quot;,
	[&quot;eritrea&quot;] = &quot;Flag of Eritrea.svg|border|link=|alt=flag&quot;,
	[&quot;esperanto&quot;] = &quot;Flag of Esperanto.svg|border|link=|alt=icon&quot;,
	[&quot;estonia&quot;] = &quot;Flag of Estonia.svg|border|link=|alt=flag&quot;,
	[&quot;estrie&quot;] = &quot;Abbey St-Benot-du-lac.jpg|alt=icon&quot;,
	[&quot;ethics&quot;] = &quot;Conscience and law.jpg|link=|alt=&quot;,
	[&quot;ethiopia&quot;] = &quot;Flag of Ethiopia.svg|border|link=|alt=flag&quot;,
	[&quot;europe&quot;] = &quot;Europe green light.png|link=|alt=&quot;,
	[&quot;european space agency&quot;] = &quot;ESA logo simple.svg|link=|alt=&quot;,
	[&quot;european union&quot;] = &quot;Flag of Europe.svg|border|link=|alt=flag&quot;,
	[&quot;european union/member states&quot;] = &quot;Obiekt zabytkowy.svg|link=|alt=&quot;,
	[&quot;eurovision&quot;] = &quot;Wiki Eurovision Heart.svg|alt=icon&quot;,
	[&quot;evanescence&quot;] = &quot;EV-In.svg|alt=icon&quot;,
	[&quot;evangelical christianity&quot;] = &quot;Ichthys.svg|link=|alt=&quot;,
	[&quot;evangelion&quot;] = &quot;Tree of life kircher plain.png|link=|alt=&quot;,
	[&quot;evolutionary biology&quot;] = &quot;Tree of life.svg|alt=icon&quot;,
	[&quot;extinct and endangered species&quot;] = &quot;ExtinctDodoBird.jpeg|link=|alt=&quot;,
	[&quot;extraterrestrial&quot;] = &quot;Galaxy blue.jpg|link=|alt=photo&quot;
}</text>
      <sha1>q3mc7whl8ydcpy08rn54mqdmi1z2n32</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/g</title>
    <ns>828</ns>
    <id>40416153</id>
    <revision>
      <id>805380775</id>
      <parentid>799180699</parentid>
      <timestamp>2017-10-15T00:28:25Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;geographical coordinates&quot;] = &quot;Earth clip art.svg|link=|alt=icon&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7066">--[==[ This is the &quot;G&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;G&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;gabon&quot;] = &quot;Flag of Gabon.svg|border|link=|alt=flag&quot;,
	[&quot;galicia&quot;] = &quot;Flag of Galicia.svg|border|link=|alt=flag&quot;,
	[&quot;game theory&quot;] = &quot;Tictactoe-cgt-star.svg|link=|alt=icon&quot;,
	[&quot;games&quot;] = &quot;Nuvola apps kbackgammon.png|alt=icon&quot;,
	[&quot;gangs&quot;] = &quot;Simbolo triada.jpg|alt=icon&quot;,
	[&quot;gardening&quot;] = &quot;France Loiret La Bussiere Potager 05.jpg|alt=icon&quot;,
	[&quot;gastropods&quot;] = &quot;Grapevinesnail 01a.jpg|alt=icon&quot;,
	[&quot;geert wilders&quot;] = &quot;Geert Wilders op Prinsjesdag 2014 (cropped).jpg|link=|alt=&quot;,
	[&quot;gemology and jewelry&quot;] = &quot;Apollo synthetic diamond.jpg|alt=icon&quot;,
	[&quot;gender studies&quot;] = &quot;Gender symbols side by side.svg|link=|alt=&quot;,
	[&quot;gene wiki&quot;] = &quot;Gene Wiki logo.png|link=|alt=&quot;,
	[&quot;genealogy&quot;] = &quot;Stamboom png.svg|link=|alt=&quot;,
	[&quot;geneva&quot;] = &quot;Wappen Genf matt.svg|link=|alt=&quot;,
	[&quot;genocide&quot;] = &quot;GenocidePortalLogo(ESR)2.JPG|alt=icon&quot;,
	[&quot;geographical coordinates&quot;] = &quot;Earth clip art.svg|link=|alt=icon&quot;,
	[&quot;geography&quot;] = &quot;Terra.png|link=|alt=icon&quot;,
	[&quot;geography of canada&quot;] = &quot;Canada flag map.svg|link=|alt=&quot;,
	[&quot;geography of india&quot;] = &quot;India physical map.svg|link=|alt=map&quot;,
	[&quot;geography of kenya&quot;] = &quot;Kenya flag map.svg|alt=icon&quot;,
	[&quot;geology&quot;] = &quot;WikiProject Geology.svg|alt=icon&quot;,
	[&quot;geometry&quot;] = &quot;Crystal Clear app 3d.png|alt=icon&quot;,
	[&quot;georgia (country)&quot;] = &quot;Flag of Georgia.svg|border|link=|alt=flag&quot;,
	[&quot;german&quot;] = &quot;German dialectal map.PNG|border|link=German language|alt=map&quot;,
	[&quot;german empire&quot;] = &quot;Flag of the German Empire.svg|border|link=|alt=flag&quot;,
	[&quot;germany&quot;] = &quot;Flag of Germany.svg|border|link=|alt=flag&quot;,
	[&quot;ghana&quot;] = &quot;Flag of Ghana.svg|border|link=|alt=flag&quot;,
	[&quot;gibraltar&quot;] = &quot;Flag of Gibraltar.svg|border|link=|alt=flag&quot;,
	[&quot;gilbert and sullivan&quot;] = &quot;Pinaforeplaybill.jpg|link=|alt=&quot;,
	[&quot;gilgit-baltistan&quot;] = &quot;Flag of Pakistan.svg|border|link=|alt=flag&quot;,
	[&quot;glaciers&quot;] = &quot;Baltoro Glacier, Pakistan 2012.png|link=|alt=icon&quot;,
	[&quot;glee&quot;] = &quot;Glee-textlogo.svg|alt=icon&quot;,
	[&quot;global warming&quot;] = &quot;Global Warming Map.jpg|alt=icon&quot;,
	[&quot;globalization&quot;] = &quot;WikiProject Globalization Logo.svg|link=|alt=&quot;,
	[&quot;goa&quot;] = &quot;Goa flag cropped.png|alt=icon&quot;,
	[&quot;golf&quot;] = &quot;Golf ball.jpg|link=|alt=&quot;,
	[&quot;google&quot;] = &quot;Google 2015 logo.svg|link=|alt=&quot;,
	[&quot;government of india&quot;] = &quot;Emblem of India.svg|link=|alt=&quot;,
	[&quot;government of pakistan&quot;] = &quot;State emblem of Pakistan.svg|alt=icon&quot;,
	[&quot;government of the united states&quot;] = &quot;Great Seal of the United States (obverse).svg|link=|alt=&quot;,
	[&quot;government of the united states/executive branch&quot;] = &quot;Nuvola USA flag alternative.svg|link=|alt=&quot;,
	[&quot;governments of canada&quot;] = &quot;Canada Parliament2.jpg|alt=icon&quot;,
	[&quot;graffiti&quot;] = &quot;Dfrturniptrophy.jpg|link=|alt=&quot;,
	[&quot;grand canyon&quot;] = &quot;Grand Canyon view from Pima Point 2010.jpg|alt=icon&quot;,
	[&quot;great britain&quot;] = &quot;Flag of the United Kingdom.svg|border|link=|alt=flag&quot;,
	[&quot;grateful dead&quot;] = &quot;Steal your square icon.jpg|link=|alt=&quot;,
	[&quot;gravitation&quot;] = &quot;A Swarm of Ancient Stars - GPN-2000-000930.jpg|link=|alt=&quot;,
	[&quot;greater los angeles&quot;] = &quot;Flag of Los Angeles County, California.svg|border|link=|alt=flag&quot;,
	[&quot;greater manchester&quot;] = &quot;England Greater Manchester numbered.svg|alt=icon&quot;,
	[&quot;greece&quot;] = &quot;Flag of Greece.svg|border|link=|alt=flag&quot;,
	[&quot;greek mythology&quot;] = &quot;Birth of Venus detail.jpg|link=|alt=&quot;,
	[&quot;green day&quot;] = &quot;Billie Joe Armstrong-cropped.jpg|alt=icon&quot;,
	[&quot;greenland&quot;] = &quot;Flag of Greenland.svg|border|link=|alt=flag&quot;,
	[&quot;grenada&quot;] = &quot;Flag of Grenada.svg|border|link=|alt=flag&quot;,
	[&quot;grey's anatomy&quot;] = &quot;Grey's Anatomy Icon.gif|link=|alt=&quot;,
	[&quot;guadeloupe&quot;] = &quot;Flag of Guadeloupe (local).svg|border|link=|alt=flag&quot;,
	[&quot;guam&quot;] = &quot;Flag of Guam.svg|border|link=|alt=flag&quot;,
	[&quot;guatemala&quot;] = &quot;Flag of Guatemala.svg|border|link=|alt=flag&quot;,
	[&quot;guernsey&quot;] = &quot;Flag of Guernsey.svg|border|link=|alt=flag&quot;,
	[&quot;guinea&quot;] = &quot;Flag of Guinea.svg|border|link=|alt=flag&quot;,
	[&quot;guinea-bissau&quot;] = &quot;Flag of Guinea-Bissau.svg|border|link=|alt=flag&quot;,
	[&quot;guitar&quot;] = &quot;E-Guitare-horiz.png|alt=icon&quot;,
	[&quot;gujarat&quot;] = &quot;Seal of Gujarat.svg|link=|alt=&quot;,
	[&quot;guyana&quot;] = &quot;Flag of Guyana.svg|border|link=|alt=flag&quot;,
	[&quot;gymnastics&quot;] = &quot;Gymnastics128px.png|alt=icon&quot;
}</text>
      <sha1>avpjflt4v76b991s9r418ijiw23onha</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/m</title>
    <ns>828</ns>
    <id>40416180</id>
    <revision>
      <id>802833538</id>
      <parentid>802386103</parentid>
      <timestamp>2017-09-28T19:27:18Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;myrtle beach&quot;] = &quot;Myrtle Beach ferris wheel.jpg|link=|alt=photo&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10766">--[==[ This is the &quot;M&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;M&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;m*a*s*h&quot;] = &quot;Mash-logo2.JPG|alt=icon&quot;,
	[&quot;macau&quot;] = &quot;Flag of Macau.svg|border|link=|alt=flag&quot;,
	[&quot;macedonia (greece)&quot;] = &quot;Flag of Greek Macedonia.svg|border|link=|alt=flag&quot;,
	[&quot;madagascar&quot;] = &quot;Flag of Madagascar.svg|border|link=|alt=flag&quot;,
	[&quot;madhya pradesh&quot;] = &quot;India Madhya Pradesh locator map.svg|border|link=|alt=map&quot;,
	[&quot;madonna (entertainer)&quot;] = &quot;Madonnaicon.jpg|alt=icon&quot;,
	[&quot;maharashtra&quot;] = &quot;Maharashtra in India.svg|alt=icon&quot;,
	[&quot;mahayana buddhism&quot;] = &quot;F.png|alt=icon&quot;,
	[&quot;maine&quot;] = &quot;Flag of Maine.svg|border|link=|alt=flag&quot;,
	[&quot;malacca&quot;] = &quot;Flag of Malacca.svg|border|link=|alt=flag&quot;,
	[&quot;malawi&quot;] = &quot;Flag of Malawi.svg|border|link=|alt=flag&quot;,
	[&quot;malaysia&quot;] = &quot;Flag of Malaysia.svg|border|link=|alt=flag&quot;,
	[&quot;maldives&quot;] = &quot;Flag of Maldives.svg|border|link=|alt=flag&quot;,
	[&quot;mali&quot;] = &quot;Flag of Mali.svg|border|link=|alt=flag&quot;,
	[&quot;malta&quot;] = &quot;Flag of Malta.svg|border|link=|alt=flag&quot;,
	[&quot;mammals&quot;] = &quot;Okapi2.jpg|alt=icon&quot;,
	[&quot;mandatory palestine&quot;] = &quot;Flag of the United Kingdom.svg|border|link=|alt=flag&quot;,
	[&quot;manila&quot;] = &quot;Ph seal ncr manila.png|link=|alt=&quot;,
	[&quot;manipur&quot;] = &quot;India Manipur locator map.svg|border|link=|alt=map&quot;,
	[&quot;manitoba&quot;] = &quot;Flag of Manitoba.svg|border|link=|alt=flag&quot;,
	[&quot;maps&quot;] = &quot;Worldmap LandAndPolitical.jpg|link=|alt=&quot;,
	[&quot;mariah carey&quot;] = &quot;Mariah's signature.png|link=|alt=&quot;,
	[&quot;marine life&quot;] = &quot;Yellow.tang.arp.jpg|link=|alt=&quot;,
	[&quot;mario&quot;] = &quot;Mario emblem.svg|link=|alt=&quot;,
	[&quot;mars&quot;] = &quot;Mars Hubble.jpg|link=|alt=&quot;,
	[&quot;marshall islands&quot;] = &quot;Flag of the Marshall Islands.svg|border|link=|alt=flag&quot;,
	[&quot;martial arts&quot;] = &quot;Yin and Yang.svg|link=|alt=&quot;,
	[&quot;martinique&quot;] = &quot;Flag of Martinique.svg|border|link=|alt=flag&quot;,
	[&quot;marvel cinematic universe&quot;] = &quot;MarvelLogo.svg|link=|alt=&quot;,
	[&quot;marvin gaye&quot;] = &quot;Marvin Gaye (1973).png|link=|alt=&quot;,
	[&quot;maryland&quot;] = &quot;Flag of Maryland.svg|border|link=|alt=flag&quot;,
	[&quot;maryland roads&quot;] = &quot;MD blank.svg|link=|alt=&quot;,
	[&quot;masculinism&quot;] = &quot;Male Liberation Symbol.png|link=|alt=&quot;,
	[&quot;mass surveillance&quot;] = &quot;Stylized eye.svg|link=|alt=&quot;,
	[&quot;massachusetts&quot;] = &quot;Coat of arms of Massachusetts.svg|link=|alt=&quot;,
	[&quot;mathematics&quot;] = &quot;Nuvola apps edu mathematics blue-p.svg|alt=icon&quot;,
	[&quot;mauricie&quot;] = &quot;Energie Shawinigan.JPG|link=|alt=&quot;,
	[&quot;mauritania&quot;] = &quot;Flag of Mauritania.svg|border|link=|alt=flag&quot;,
	[&quot;mauritius&quot;] = &quot;Flag of Mauritius.svg|border|link=|alt=flag&quot;,
	[&quot;mcb&quot;] = &quot;1axc tricolor.png|alt=icon&quot;,
	[&quot;measurement&quot;] = &quot;Roman bronze balance, excavated at Pompei. Wellcome M0014276.jpg|link=|alt=photo&quot;,
	[&quot;mecklenburg-vorpommern&quot;] = &quot;Flag of Mecklenburg-Western Pomerania.svg|border|link=|alt=flag&quot;,
	[&quot;media&quot;] = &quot;Icon Camera.svg|alt=icon&quot;,
	[&quot;medicine&quot;] = &quot;WHO Rod.svg|alt=icon|link=&quot;,
	[&quot;medieval britain&quot;] = &quot;Sutton Hoo helmet 2016.png|alt=icon&quot;,
	[&quot;mediterranean&quot;] = &quot;Mediterranean Relief.jpg|link=|alt=&quot;,
	[&quot;meghalaya&quot;] = &quot;Seal of Meghalaya.svg|link=|alt=seal&quot;,
	[&quot;melanesia&quot;] = &quot;Melanesian Cultural Area.png|border|link=|alt=map&quot;,
	[&quot;melbourne&quot;] = &quot;Melbourne COA.jpg|alt=icon&quot;,
	[&quot;men in black&quot;] = &quot;Sunglasses-1 retouch.png|alt=icon&quot;,
	[&quot;men's rights&quot;] = &quot;Symbol mars.svg|alt=icon&quot;,
	[&quot;merseyside&quot;] = &quot;County Flag of Merseyside.svg|border|link=|alt=flag&quot;,
	[&quot;mesoamerica&quot;] = &quot;Mscara de Xiuhtecuhtli Cultura Azteza-Mixteca Ars Summum.JPG|link=|alt=&quot;,
	[&quot;messianic judaism&quot;] = &quot;Messianic symbols.png|link=|alt=&quot;,
	[&quot;metaphysics&quot;] = &quot;WLANL - Marjolein Benard - Little thought No. 2, Qiangli Liang (2005) detail.jpg|alt=icon&quot;,
	[&quot;meteorology&quot;] = &quot;Cumulus clouds in fair weather.jpeg|link=|alt=icon&quot;,
	[&quot;methodism&quot;] = &quot;Logo of the United Methodist Church.svg|link=|alt=&quot;,
	[&quot;metro detroit&quot;] = &quot;Muscle car Detroit.svg|alt=icon&quot;,
	[&quot;mexican-americans&quot;] = &quot;Mexican American Flag.PNG|link=|alt=icon&quot;,
	[&quot;mexico&quot;] = &quot;Flag of Mexico.svg|border|link=|alt=flag&quot;,
	[&quot;miami&quot;] = &quot;Seal of Miami, Florida.svg|link=|alt=&quot;,
	[&quot;michael jackson&quot;] = &quot;Michael-jackson-vector-2.jpg|alt=icon&quot;,
	[&quot;michigan&quot;] = &quot;Flag of Michigan.svg|border|link=|alt=flag&quot;,
	[&quot;michigan highways&quot;] = &quot;M-Blank.svg|link=|alt=&quot;,
	[&quot;micronations&quot;] = &quot;Sealand fortress.jpg|link=|alt=&quot;,
	[&quot;micronesia&quot;] = &quot;Micronesian Cultural Area.png|border|link=|alt=map&quot;,
	[&quot;microsoft&quot;] = &quot;M box.svg|link=|alt=&quot;,
	[&quot;middle ages&quot;] = &quot;The Metropolitan M Stamp.PNG|alt=icon&quot;,
	[&quot;middle east&quot;] = &quot;MiddleEast blacky.svg|link=|alt=&quot;,
	[&quot;middle tennessee state university&quot;] = &quot;MTSU Wordmark.png|link=|alt=wordmark&quot;,
	[&quot;middle-earth&quot;] = &quot;Arda.Tengwar.svg|link=|alt=&quot;,
	[&quot;milan&quot;] = &quot;Galleria vittorio emanuele ii 02.jpg|alt=icon&quot;,
	[&quot;miles davis&quot;] = &quot;Miles Davis by Palumbo.jpg|alt=icon&quot;,
	[&quot;miley cyrus&quot;] = &quot;MileyCyrus signature.svg|link=|alt=&quot;,
	[&quot;military&quot;] = &quot;General Dwight D. Eisenhower.jpg|link=|alt=photo&quot;,
	[&quot;military history&quot;] = &quot;Waricon.svg|link=|alt=&quot;,
	[&quot;military history of africa&quot;] = &quot;Waricon.svg|link=|alt=&quot;,
	[&quot;military history of france&quot;] = &quot;France Ancient.svg|alt=icon&quot;,
	[&quot;military history of the ottoman empire&quot;] = &quot;Topcu arma.jpg|link=|alt=&quot;,
	[&quot;military of ancient rome&quot;] = &quot;Scutum 1.jpg|alt=icon&quot;,
	[&quot;military of australia&quot;] = &quot;Flag of Australia.svg|border|link=|alt=flag&quot;,
	[&quot;military of germany&quot;] = &quot;Bundeswehr Kreuz Black.svg|link=|alt=&quot;,
	[&quot;military of greece&quot;] = &quot;Flag of Greece.svg|border|link=|alt=flag&quot;,
	[&quot;military of india&quot;] = &quot;Flag of India.svg|border|link=|alt=flag&quot;,
	[&quot;military of pakistan&quot;] = &quot;Flag of the Pakistani Army.svg|border|link=|alt=flag&quot;,
	[&quot;military of the united states&quot;] = &quot;Flag of the United States.svg|border|link=|alt=flag&quot;,
	[&quot;millennium&quot;] = &quot;Ouroboros-simple.svg|link=|alt=&quot;,
	[&quot;mind and brain&quot;] = &quot;Phrenology1.jpg|link=|alt=&quot;,
	[&quot;mining&quot;] = &quot;Schlaegel und Eisen nach DIN 21800.svg|link=|alt=&quot;,
	[&quot;minnesota&quot;] = &quot;Flag of Minnesota.svg|border|link=|alt=flag&quot;,
	[&quot;miskolc&quot;] = &quot;CoA Miskolc.gif|link=|alt=&quot;,
	[&quot;mississippi&quot;] = &quot;Flag of Mississippi.svg|border|link=|alt=flag&quot;,
	[&quot;missouri&quot;] = &quot;Flag of Missouri.svg|border|link=|alt=flag&quot;,
	[&quot;mitt romney&quot;] = &quot;Mitt Romney by Gage Skidmore 6.jpg|alt=icon&quot;,
	[&quot;mizoram&quot;] = &quot;Seal of Mizoram.svg|link=|alt=&quot;,
	[&quot;mma&quot;] = &quot;Uffizi Florence Wrestlers 1.png|link=|alt=&quot;,
	[&quot;moldova&quot;] = &quot;Flag of Moldova.svg|border|link=|alt=flag&quot;,
	[&quot;molecular and cell biology&quot;] = &quot;TPI1 structure.png|link=|alt=&quot;,
	[&quot;molecular anthropology&quot;] = &quot;Mol Anth Ico.PNG|link=|alt=&quot;,
	[&quot;mombasa&quot;] = &quot;Flag of Mombasa.png|border|link=|alt=flag&quot;,
	[&quot;monaco&quot;] = &quot;Flag of Monaco.svg|border|link=|alt=flag&quot;,
	[&quot;monarchy&quot;] = &quot;Crown of Saint Edward Heraldry.svg|alt=icon&quot;,
	[&quot;mongolia&quot;] = &quot;Flag of Mongolia.svg|border|link=|alt=flag&quot;,
	[&quot;monmouth&quot;] = &quot;Upside down Wikipedia W.jpg|link=|alt=&quot;,
	[&quot;montana&quot;] = &quot;Flag of Montana.svg|border|link=|alt=flag&quot;,
	[&quot;montenegro&quot;] = &quot;Flag of Montenegro.svg|border|link=|alt=flag&quot;,
	[&quot;montreal&quot;] = &quot;Flag of Montreal.svg|border|link=|alt=flag&quot;,
	[&quot;montserrat&quot;] = &quot;Flag of Montserrat.svg|border|link=|alt=flag&quot;,
	[&quot;moon&quot;] = &quot;Moon-Mdf-2005.jpg|alt=icon&quot;,
	[&quot;morocco&quot;] = &quot;Flag of Morocco.svg|border|link=|alt=flag&quot;,
	[&quot;moscow&quot;] = &quot;Coat of Arms of Moscow.svg|link=|alt=&quot;,
	[&quot;motorcycle racing&quot;] = &quot;IlmorX3-003.png|alt=icon&quot;,
	[&quot;motrhead&quot;] = &quot;Lemmy Kilmister.jpg|alt=icon&quot;,
	[&quot;motorsport&quot;] = &quot;Auto Racing Chequered.svg|link=|alt=&quot;,
	[&quot;mountains&quot;] = &quot;The Matterhorn as seen from Zermatt.png|link=|alt=icon&quot;,
	[&quot;mozambique&quot;] = &quot;Flag of Mozambique.svg|border|link=|alt=flag&quot;,
	[&quot;mumbai&quot;] = &quot;Mumbai Taj.JPG|alt=icon&quot;,
	[&quot;muppets&quot;] = &quot;Muppets - first Disney logo.svg|link=|alt=&quot;,
	[&quot;music&quot;] = &quot;Audio a.svg|link=|alt=&quot;,
	[&quot;music of australia&quot;] = &quot;WikiProject Australian Music.svg|link=|alt=&quot;,
	[&quot;music of canada&quot;] = &quot;Tower-wireless-can.png|alt=icon&quot;,
	[&quot;musical theatre&quot;] = &quot;MTLogo2.png|link=|alt=&quot;,
	[&quot;musicians&quot;] = &quot;Mozart-small.jpg|link=|alt=image&quot;,
	[&quot;myanmar&quot;] = &quot;Flag of Myanmar.svg|border|link=|alt=flag&quot;,
	[&quot;myrtle beach&quot;] = &quot;Myrtle Beach ferris wheel.jpg|link=|alt=photo&quot;,
	[&quot;mythology&quot;] = &quot;Draig.svg|link=|alt=&quot;
}</text>
      <sha1>1sr5jelsr698gkv1ldyqzqklmjnzbhs</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/s</title>
    <ns>828</ns>
    <id>40416224</id>
    <revision>
      <id>806156606</id>
      <parentid>802998182</parentid>
      <timestamp>2017-10-20T02:13:53Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;social science&quot;] = &quot;P social sciences-lightblue.png|link=|alt=icon&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="12904">--[==[ This is the &quot;S&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;S&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;saarc&quot;] = &quot;SAARC 1717549468.png|alt=icon&quot;,
	[&quot;sabah&quot;] = &quot;Flag of Sabah.svg|border|link=|alt=flag&quot;,
	[&quot;saguenaylac-saint-jean&quot;] = &quot;Flag of Saguenay-Lac-Saint-Jean.svg|border|link=|alt=flag&quot;,
	[&quot;sailing&quot;] = &quot;Sailing pictogram.svg|link=|alt=&quot;,
	[&quot;saint barthlemy&quot;] = &quot;Flag of Saint Barthelemy (local).svg|border|link=|alt=flag&quot;,
	[&quot;saint kitts and nevis&quot;] = &quot;Flag of Saint Kitts and Nevis.svg|border|link=|alt=flag&quot;,
	[&quot;saint lucia&quot;] = &quot;Flag of Saint Lucia.svg|border|link=|alt=flag&quot;,
	[&quot;saint pierre and miquelon&quot;] = &quot;Flag of Saint-Pierre and Miquelon.svg|border|link=|alt=flag&quot;,
	[&quot;saint vincent and the grenadines&quot;] = &quot;Flag of Saint Vincent and the Grenadines.svg|border|link=|alt=flag&quot;,
	[&quot;saints&quot;] = &quot;Gloriole blur.svg|link=|alt=&quot;,
	[&quot;samoa&quot;] = &quot;Flag of Samoa.svg|border|link=|alt=flag&quot;,
	[&quot;san antonio&quot;] = &quot;Coat of arms of San Antonio.svg|link=|alt=arms&quot;,
	[&quot;san diego&quot;] = &quot;San Diego,California,USA. - panoramio (139).jpg|link=|alt=photo&quot;,
	[&quot;san diego county&quot;] = &quot;Seal of San Diego County, California.png|link=|alt=seal&quot;,
	[&quot;san diegotijuana&quot;] = &quot;San Diego-Tijuana JPLLandsat.jpg|border|link=|alt=flag&quot;,
	[&quot;san francisco bay area&quot;] = &quot;SF From Marin Highlands3.jpg|border|link=|alt=&quot;,
	[&quot;san marino&quot;] = &quot;Flag of San Marino.svg|border|link=|alt=flag&quot;,
	[&quot;santa barbara county&quot;] = &quot;Seal of Santa Barbara County, California.png|link=|alt=seal&quot;,
	[&quot;santana&quot;] = &quot;Carlos Santana 2005.jpg|link=|alt=&quot;,
	[&quot;so tom and prncipe&quot;] = &quot;Flag of Sao Tome and Principe.svg|border|link=|alt=flag&quot;,
	[&quot;sarawak&quot;] = &quot;Flag of Sarawak.svg|border|link=|alt=flag&quot;,
	[&quot;saskatchewan&quot;] = &quot;Flag of Saskatchewan.svg|border|link=|alt=flag&quot;,
	[&quot;saskatchewan communities and neighbourhoods&quot;] = &quot;Flag-map of Saskatchewan.svg| link=|alt=map&quot;,
	[&quot;saudi arabia&quot;] = &quot;Flag of Saudi Arabia.svg|border|link=|alt=flag&quot;,
	[&quot;saxony&quot;] = &quot;Flag of Saxony.svg|border|link=|alt=flag&quot;,
	[&quot;saxony-anhalt&quot;] = &quot;Wappen Sachsen-Anhalt.svg|link=|alt=&quot;,
	[&quot;schleswig-holstein&quot;] = &quot;Landeswappen Schleswig-Holstein.png|link=|alt=&quot;,
	[&quot;schools&quot;] = &quot;School.svg|link=|alt=&quot;,
	[&quot;science&quot;] = &quot;Nuvola apps kalzium.svg|alt=icon&quot;,
	[&quot;science and academia&quot;] = &quot;Rachel Carson w (cropped).jpg|link=|alt=photo&quot;,
	[&quot;science fiction&quot;] = &quot;Sf-userbox.png|alt=icon&quot;,
	[&quot;scientology&quot;] = &quot;Scientology e meter blue.jpg|alt=icon&quot;,
	[&quot;scotland&quot;] = &quot;Flag of Scotland.svg|border|link=|alt=flag&quot;,
	[&quot;scouting&quot;] = &quot;WikiProject Scouting fleur-de-lis dark.svg|alt=icon&quot;,
	[&quot;seamounts&quot;] = &quot;Seamount.svg|link=|alt=&quot;,
	[&quot;seattle&quot;] = &quot;SpaceNeedleTopClose.jpg|alt=icon&quot;,
	[&quot;sega&quot;] = &quot;SEGA logo.svg|link=|alt=&quot;,
	[&quot;senegal&quot;] = &quot;Flag of Senegal.svg|border|link=|alt=flag&quot;,
	[&quot;september 11 attacks&quot;] = &quot;Y24-Wtc-september-5.jpg|alt=icon&quot;,
	[&quot;serbia&quot;] = &quot;Flag of Serbia.svg|border|link=|alt=flag&quot;,
	[&quot;serer people&quot;] = &quot;Serer Royal War Drum (Jung-Jung). 19th Century. Jung-Jung From The Kingdom of Sine (in modern day Senegal).jpg|alt=icon&quot;,
	[&quot;serer religion&quot;] = &quot;Five Pointed Star Lined.svg|link=|alt=&quot;,
	[&quot;set theory&quot;] = &quot;Venn0001.svg|link=|alt=&quot;,
	[&quot;seton hall university&quot;] = &quot;Shu logo.png|link=|alt=logo&quot;,
	[&quot;seventh-day adventist church&quot;] = &quot;James and Ellen White.jpg|link=|alt=&quot;,
	[&quot;severe weather&quot;] = &quot;Marquette, Kansas EF4 tornado on April 14, 2012.png|link=|alt=icon&quot;,
	[&quot;sexuality&quot;] = &quot;Sexual orientation - 4 symbols.svg|alt=icon&quot;,
	[&quot;seychelles&quot;] = &quot;Flag of Seychelles.svg|border|link=|alt=flag&quot;,
	[&quot;shakespeare&quot;] = &quot;Shakespeare (oval-cropped).png|link=|alt=&quot;,
	[&quot;shakira&quot;] = &quot;S by shakira logo.png|alt=icon&quot;,
	[&quot;shanghai&quot;] = &quot;Shanghainame.png|link=|alt=&quot;,
	[&quot;shania twain&quot;] = &quot;Shania Twain Portrait.jpg|alt=icon&quot;,
	[&quot;sharjah&quot;] = &quot;Flag of Sharjah.svg|border|link=|alt=flag&quot;,
	[&quot;sharks&quot;] = &quot;Greyreefsharksmall2.jpg|alt=icon&quot;,
	[&quot;shia islam&quot;] = &quot;Ghadir logo.png|alt=icon&quot;,
	[&quot;shinto&quot;] = &quot;Shinto torii icon vermillion.svg|link=|alt=&quot;,
	[&quot;shreveport&quot;] = &quot;Shreveport-City-Flag.png|border|link=|alt=flag&quot;,
	[&quot;shreya ghoshal&quot;] = &quot;Shreya at concert.jpg|alt=icon&quot;,
	[&quot;sierra leone&quot;] = &quot;Flag of Sierra Leone.svg|border|link=|alt=flag&quot;,
	[&quot;sikhism&quot;] = &quot;Khanda emblem.svg|link=|alt=&quot;,
	[&quot;sikkim&quot;] = &quot;Seal of Sikkim color.png|link=|alt=seal&quot;,
	[&quot;silent film&quot;] = &quot;Video-x-generic.svg|link=|alt=&quot;,
	[&quot;silesia&quot;] = &quot;Silesia Inferior COA.svg|alt=icon&quot;,
	[&quot;sindh&quot;] = &quot;Flag of Sindh.svg|border|link=|alt=flag&quot;,
	[&quot;singapore&quot;] = &quot;Flag of Singapore.svg|border|link=|alt=flag&quot;,
	[&quot;sint eustatius&quot;] = &quot;Flag of Sint Eustatius.svg|border|link=|alt=flag&quot;,
	[&quot;sint maarten&quot;] = &quot;Flag of Sint Maarten.svg|border|link=|alt=flag&quot;,
	[&quot;slipknot&quot;] = &quot;SlipknotProject.png|alt=icon&quot;,
	[&quot;slovak republic&quot;] = &quot;Flag of Slovakia.svg|border|link=|alt=flag&quot;,
	[&quot;slovakia&quot;] = &quot;Flag of Slovakia.svg|border|link=|alt=flag&quot;,
	[&quot;slovenia&quot;] = &quot;Flag of Slovenia.svg|border|link=|alt=flag&quot;,
	[&quot;snk&quot;] = &quot;SNK Playmore logo and wordmark.png|link=|alt=&quot;,
	[&quot;soap operas and telenovelas&quot;] = &quot;Drama-icon.svg|alt=icon&quot;,
	[&quot;soccer in the united states&quot;] = &quot;Soccerball USA.png|link=|alt=&quot;,
	[&quot;social and political philosophy&quot;] = &quot;P derecho.svg|link=|alt=&quot;,
	[&quot;social movements&quot;] = &quot;Peace sign.svg|link=|alt=&quot;,
	[&quot;social science&quot;] = &quot;P social sciences-lightblue.png|link=|alt=icon&quot;,
	[&quot;social sciences&quot;] = &quot;DrustveneNauke.png|alt=icon&quot;,
	[&quot;social welfare and social work&quot;] = &quot;Vista Login Manager Cropped.svg|alt=icon&quot;,
	[&quot;socialism&quot;] = &quot;Red flag II.svg|alt=icon&quot;,
	[&quot;society&quot;] = &quot;Social sciences.svg|alt=icon&quot;,
	[&quot;sociology&quot;] = &quot;Logo sociology.svg|link=|alt=&quot;,
	[&quot;software&quot;] = &quot;Crystal Clear device cdrom unmount.png|alt=icon&quot;,
	[&quot;software testing&quot;] = &quot;Green bug and broom.svg|alt=icon&quot;,
	[&quot;solar system&quot;] = &quot;Solar system.jpg|link=|alt=&quot;,
	[&quot;solomon islands&quot;] = &quot;Flag of Solomon Islands.svg|border|link=|alt=flag&quot;,
	[&quot;somalia&quot;] = &quot;Flag of Somalia.svg|border|link=|alt=flag&quot;,
	[&quot;somaliland&quot;] = &quot;Flag of Somaliland.svg|border|link=|alt=flag&quot;,
	[&quot;somerset&quot;] = &quot;Somerset shield.png|alt=icon&quot;,
	[&quot;sonic&quot;] = &quot;Chaos emeralds.svg|alt=icon&quot;,
	[&quot;sony&quot;] = &quot;Sony logo.svg|link=|alt=&quot;,
	[&quot;sony playstation&quot;] = &quot;PS3-slim-console.png|link=|alt=&quot;,
	[&quot;south africa&quot;] = &quot;Flag of South Africa.svg|border|link=|alt=flag&quot;,
	[&quot;south america&quot;] = &quot;South America.png|alt=icon&quot;,
	[&quot;south asia&quot;] = &quot;India 78.40398E 20.74980N.jpg|link=|alt=&quot;,
	[&quot;south australia&quot;] = &quot;Flag of South Australia.svg|border|link=|alt=flag&quot;,
	[&quot;south carolina&quot;] = &quot;Flag of South Carolina.svg|border|link=|alt=flag&quot;,
	[&quot;south dakota&quot;] = &quot;Flag of South Dakota.svg|border|link=|alt=flag&quot;,
	[&quot;south east england&quot;] = &quot;EnglandSouthEast.png|alt=icon&quot;,
	[&quot;south korea&quot;] = &quot;Flag of South Korea.svg|border|link=|alt=flag&quot;,
	[&quot;south park&quot;] = &quot;South Park sign logo.png|link=|alt=&quot;,
	[&quot;south sudan&quot;] = &quot;Flag of South Sudan.svg|border|link=|alt=flag&quot;,
	[&quot;southeast asia&quot;] = &quot;Location Southeast Asia.svg|link=|alt=&quot;,
	[&quot;southern california&quot;] = &quot;USA California Southern location map.svg|link=|alt=map&quot;,
	[&quot;southwest asia&quot;] = &quot;Southwest-Asia-map.PNG|link=|alt=&quot;,
	[&quot;soviet union&quot;] = &quot;Flag of the Soviet Union.svg|border|link=|alt=flag&quot;,
	[&quot;space&quot;] = &quot;Earth-moon.jpg|link=|alt=&quot;,
	[&quot;spaceflight&quot;] = &quot;RocketSunIcon.svg|link=|alt=&quot;,
	[&quot;spain&quot;] = &quot;Flag of Spain.svg|border|link=|alt=flag&quot;,
	[&quot;spanish american wars of independence&quot;] = &quot;Red versus blue swords.svg|alt=icon&quot;,
	[&quot;special operations&quot;] = &quot;APP-6 Special Operations Forces.svg|link=|alt=&quot;,
	[&quot;speculative fiction&quot;] = &quot;Dragon-149393.svg|alt=icon&quot;,
	[&quot;spirituality&quot;] = &quot;EndlessKnot03d.png|link=|alt=&quot;,
	[&quot;spongebob squarepants&quot;] = &quot;WikiProject SpongeBob logo - Logo.svg|alt=icon&quot;,
	[&quot;sports&quot;] = &quot;Sports icon.png|link=|alt=&quot;,
	[&quot;sport in canada&quot;] = &quot;Flag shirt of Canada.png|alt=icon&quot;,
	[&quot;sports and games&quot;] = &quot;Sports and games.png|alt=icon&quot;,
	[&quot;sri lanka&quot;] = &quot;Flag of Sri Lanka.svg|border|link=|alt=flag&quot;,
	[&quot;st. john's, newfoundland and labrador&quot;] = &quot;City of St. John's.jpg|link=|alt=&quot;,
	[&quot;st. louis&quot;] = &quot;Flag of St. Louis, Missouri.svg|border|link=|alt=flag&quot;,
	[&quot;stamford&quot;] = &quot;Stamford town crest.png|link=|alt=crest&quot;,
	[&quot;stanford university&quot;] = &quot;Stanford logo.png|link=|alt=logo&quot;,
	[&quot;star&quot;] = &quot;He1523a.jpg|alt=icon&quot;,
	[&quot;star trek&quot;] = &quot;Delta-shield.svg|link=|alt=&quot;,
	[&quot;star wars&quot;] = &quot;Lightsaber blue.svg|link=|alt=&quot;,
	[&quot;state of georgia&quot;] = &quot;Flag of Georgia (U.S. state).svg|border|link=|alt=flag&quot;,
	[&quot;state university of new york&quot;] = &quot;SUNY brandmark.svg|link=|alt=brandmark&quot;,
	[&quot;state university system of florida&quot;] = &quot;SUSF Locations.jpg|link=|alt=map&quot;,
	[&quot;statistics&quot;] = &quot;Fisher iris versicolor sepalwidth.svg|alt=icon&quot;,
	[&quot;steampunk&quot;] = &quot;Steampunk-falksen.jpg|alt=icon&quot;,
	[&quot;strategy games&quot;] = &quot;Chess.svg|alt=icon&quot;,
	[&quot;submarine&quot;] = &quot;Submarine.svg|alt=icon&quot;,
	[&quot;sudan&quot;] = &quot;Flag of Sudan.svg|border|link=|alt=flag&quot;,
	[&quot;sufism&quot;] = &quot;Soefi symbool.gif|link=|alt=&quot;,
	[&quot;superfunds&quot;] = &quot;Superfund sites.svg|link=|alt=map&quot;,
	[&quot;superhero fiction&quot;] = &quot;Question bubble thing.svg|link=|alt=&quot;,
	[&quot;supreme court of the united states&quot;] = &quot;Supreme Court.jpg|link=|alt=&quot;,
	[&quot;surat&quot;] = &quot;Surat at night.JPG|link=|alt=photo&quot;,
	[&quot;suriname&quot;] = &quot;Flag of Suriname.svg|border|link=|alt=flag&quot;,
	[&quot;surrey&quot;] = &quot;EnglandSurrey.png|alt=icon&quot;,
	[&quot;sussex&quot;] = &quot;SussexBrit5.PNG|link=|alt=&quot;,
	[&quot;sustainable development&quot;] = &quot;Sustainable development.svg|alt=icon&quot;,
	[&quot;swaziland&quot;] = &quot;Flag of Swaziland.svg|border|link=|alt=flag&quot;,
	[&quot;sweden&quot;] = &quot;Flag of Sweden.svg|border|link=|alt=flag&quot;,
	[&quot;swimming&quot;] = &quot;Swimming pictogram.svg|link=|alt=&quot;,
	[&quot;switzerland&quot;] = &quot;Flag of Switzerland.svg|border|link=|alt=flag&quot;,
	[&quot;sydney&quot;] = &quot;Sydney COA.gif|alt=icon&quot;,
	[&quot;syracuse, new york&quot;] = &quot;SyracuseSkyline01.JPG|link=|alt=&quot;,
	[&quot;syria&quot;] = &quot;Flag of Syria.svg|border|link=|alt=flag&quot;,
	[&quot;syriac christianity&quot;] = &quot;Bible and Pulpit, Mor Hananyo.jpg|alt=icon&quot;,
	[&quot;syriac&quot;] = &quot;Syriac Sert book script.jpg|link=|alt=&quot;,
	[&quot;syrian civil war&quot;] = &quot;Flag of Syria (2011 combined).svg|border|link=|alt=flag&quot;,
	[&quot;systems&quot;] = &quot;Complex-adaptive-system.jpg|link=|alt=diagram&quot;,
	[&quot;systems engineering initiative&quot;] = &quot;Systems Engineering Process II.gif|link=|alt=diagram&quot;,
	[&quot;systems science&quot;] = &quot;Complex-adaptive-system.jpg|link=|alt=diagram&quot;
}</text>
      <sha1>or6bv25h6nxih72ckxobtv9u8uyhqp7</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/v</title>
    <ns>828</ns>
    <id>40416245</id>
    <revision>
      <id>803707073</id>
      <parentid>798093521</parentid>
      <timestamp>2017-10-04T03:10:34Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;volleyball&quot;] = &quot;Volleyball icon by Arthur Shlain.svg|link=|alt=icon&quot;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="4114">--[==[ This is the &quot;V&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;V&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;vajrayana buddhism&quot;] = &quot;Guru Rinpoche - Padmasambhava statue.jpg|alt=icon&quot;,
	[&quot;vancouver&quot;] = &quot;Flag of Vancouver (Canada).svg|border|link=|alt=flag&quot;,
	[&quot;vanuatu&quot;] = &quot;Flag of Vanuatu.svg|border|link=|alt=flag&quot;,
	[&quot;vatican city&quot;] = &quot;Flag of the Vatican City.svg|border|link=|alt=flag&quot;,
	[&quot;venezuela&quot;] = &quot;Flag of Venezuela.svg|border|link=|alt=flag&quot;,
	[&quot;venice&quot;] = &quot;Caf Florian Venise 02.JPG|link=|alt=&quot;,
	[&quot;vermont&quot;] = &quot;Flag of Vermont.svg|border|link=|alt=flag&quot;,
	[&quot;victoria&quot;] = &quot;Flag of Victoria (Australia).svg|border|link=|alt=flag&quot;,
	[&quot;video games&quot;] = &quot;WPVG icon 2016.svg|link=|alt=&quot;,
	[&quot;vienna&quot;] = &quot;Wien 3 Wappen.svg|link=|alt=&quot;,
	[&quot;vietnam&quot;] = &quot;Flag of Vietnam.svg|border|link=|alt=flag&quot;,
	[&quot;virginia&quot;] = &quot;Flag of Virginia.svg|border|link=|alt=flag&quot;,
	[&quot;viruses&quot;] = &quot;Sida-aids.png|alt=icon&quot;,
	[&quot;visual arts&quot;] = &quot;WPVA-khamsa.svg|alt=icon&quot;,
	[&quot;volcanism of canada&quot;] = &quot;Volcanism of Canada flag.png|border|alt=icon&quot;,
	[&quot;volcanoes&quot;] = &quot;Spaccato vulcano.svg|alt=icon&quot;,
	[&quot;volleyball&quot;] = &quot;Volleyball icon by Arthur Shlain.svg|link=|alt=icon&quot;
}</text>
      <sha1>7m65i7c9yx6dsxqcwu073fkp8o9mafh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/w</title>
    <ns>828</ns>
    <id>40416257</id>
    <revision>
      <id>802571143</id>
      <parentid>799128513</parentid>
      <timestamp>2017-09-27T01:17:27Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;west virginia university&quot;] = &quot;West Virginia Mountaineers logo.svg|link=|alt=logo&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5822">--[==[ This is the &quot;W&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;W&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;wake island&quot;] = &quot;Flag of Wake Island.svg|border|link=|alt=flag&quot;,
	[&quot;wales&quot;] = &quot;Flag of Wales 2.svg|border|link=|alt=flag&quot;,
	[&quot;wallis and futuna&quot;] = &quot;Flag of Wallis and Futuna.svg|border|link=|alt=flag&quot;,
	[&quot;war&quot;] = &quot;Bluetank.png|link=|alt=&quot;,
	[&quot;war of 1812&quot;] = &quot;USS Constitution vs Guerriere.jpg|link=|alt=&quot;,
	[&quot;washington&quot;] = &quot;Flag of Washington.svg|border|link=|alt=flag&quot;,
	[&quot;washington &amp; jefferson college&quot;] = &quot;W&amp;J seal old updated color.svg|link=|alt=&quot;,
	[&quot;washington roads&quot;] = &quot;WA-blank.svg|link=|alt=&quot;,
	[&quot;washington university in st. louis&quot;] = &quot;The Kansas City review of science and industry (1884) (14598227079).jpg|link=|alt=image&quot;,
	[&quot;washington, d.c.&quot;] = &quot;Flag of Washington, D.C..svg|border|link=|alt=flag&quot;,
	[&quot;water&quot;] = &quot;Drinking water.jpg|alt=icon&quot;,
	[&quot;water sports&quot;] = &quot;Kitesurfing.jpg|link=|alt=&quot;,
	[&quot;waterfalls&quot;] = &quot;Victoria falls, zambia.jpg|link=|alt=icon&quot;,
	[&quot;weapons of mass destruction&quot;] = &quot;Operation Castle - Romeo 001.jpg|link=|alt=&quot;,
	[&quot;weather&quot;] = &quot;Cumulus clouds in fair weather.jpeg|alt=icon&quot;,
	[&quot;weimar republic&quot;] = &quot;Wappen Deutsches Reich (Weimarer Republik).svg|alt=icon&quot;,
	[&quot;west bengal&quot;] = &quot;BengaliScriptKo.svg|link=|alt=&quot;,
	[&quot;west germany&quot;] = &quot;Flag of Germany.svg|border|link=|alt=flag&quot;,
	[&quot;west sussex&quot;] = &quot;EnglandWestSussex.svg|link=|alt=&quot;,
	[&quot;west virginia&quot;] = &quot;Flag of West Virginia.svg|border|link=|alt=flag&quot;,
	[&quot;west virginia university&quot;] = &quot;West Virginia Mountaineers logo.svg|link=|alt=logo&quot;,
	[&quot;western australia&quot;] = &quot;Flag of Western Australia.svg|border|link=|alt=flag&quot;,
	[&quot;western region (ghana)&quot;] = &quot;Flag of Western Region (Ghana).gif|border|link=|alt=flag&quot;,
	[&quot;western sahara&quot;] = &quot;Flag of the Sahrawi Arab Democratic Republic.svg|border|link=|alt=flag&quot;,
	[&quot;wetlands&quot;] = &quot;Atchafalaya Basin.jpg|link=|alt=&quot;,
	[&quot;whitney houston&quot;] = &quot;Flickr Whitney Houston performing on GMA 2009 2.jpg|alt=icon&quot;,
	[&quot;wicca&quot;] = &quot;Pentacle 2.svg|link=|alt=&quot;,
	[&quot;wikipedia&quot;] = &quot;X mark.svg|link=|alt=&quot;,
	[&quot;wiltshire&quot;] = &quot;EnglandWiltshire.png|alt=icon&quot;,
	[&quot;wine&quot;] = &quot;Glass of wine.png|alt=icon&quot;,
	[&quot;winter paralympics&quot;] = &quot;IPC logo (2004).svg|link=|alt=&quot;,
	[&quot;wisconsin&quot;] = &quot;Flag of Wisconsin.svg|border|link=|alt=flag&quot;,
	[&quot;women in red&quot;] = &quot;Women in Red logo.svg|link=|alt=logo&quot;,
	[&quot;women scientists&quot;] = &quot;Women Geologists, Spedizione XII, Italiantartide 1995-96.jpg|link=|alt=photo&quot;,
	[&quot;women's association football&quot;] = &quot;Womens-soccer-icon.png|alt=icon&quot;,
	[&quot;women's history&quot;] = &quot;Simone Veil (1984).jpg|alt=icon&quot;,
	[&quot;women's sport&quot;] = &quot;Netball.svg|link=|alt=&quot;,
	[&quot;world war i&quot;] = &quot;Fokker Dr. I (117710246).jpg|border|alt=icon&quot;,
	[&quot;world war ii&quot;] = &quot;Heinkel He 111 during the Battle of Britain.jpg|border|link=|alt=&quot;,
	[&quot;writing&quot;] = &quot;Nuvola apps kmessedwords.png|alt=icon&quot;,
	[&quot;wyoming&quot;] = &quot;Flag of Wyoming.svg|border|link=|alt=flag&quot;
}</text>
      <sha1>2q315ehv2968hfodwjjoze6qcdvinjq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal bar</title>
    <ns>828</ns>
    <id>40526099</id>
    <revision>
      <id>729988834</id>
      <parentid>729639510</parentid>
      <timestamp>2016-07-15T23:48:54Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <comment>div sted nested tables (css now supports .navbox margins on non-tables), keep icons out of mediaviewer, remove extra left margin, prevent wrap between icon and link, fix IE8 overflow</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2975">-- This module implements {{portal bar}}.

require('Module:No globals')

local p = {}

local getImageName = require( 'Module:Portal' ).image
local yesno = require( 'Module:Yesno' )

-- Builds the portal bar used by {{portal bar}}.
function p._main( portals, args )
	if #portals &lt; 1 then return '' end -- Don't display a blank navbox if no portals were specified.
	
	local nav = mw.html.create( 'div' )
		:addClass( 'noprint metadata' )
		:attr( 'role', 'navigation' )
		:attr( 'aria-label' , 'Portals' )
		:css( 'font-weight', 'bold' )
	if yesno( args.border ) == false then
		nav
			:css( 'padding', '0.3em 1.7em 0.1em' )
			:css( 'font-size', '88%' )
			:css( 'text-align', 'center' )
	else
		nav
			:addClass( 'navbox' )
			:css( 'padding', '0.4em 2em' )
	end
	
	local list = mw.html.create( 'ul' )
		:css( 'margin', '0.1em 0 0' )
	for _, portal in ipairs( portals ) do
		list
			:tag( 'li' )
				:css( 'display', 'inline' )
				:tag( 'span' ) -- Inline-block on inner span for IE6-7 compatibility.
					:css( 'display', 'inline-block' )
					:css( 'white-space', 'nowrap' )
					:tag( 'span' )
						:css( 'margin', '0 0.5em' )
						:wikitext( string.format( '[[File:%s|24x21px]]', getImageName{ portal } ) )
						:done()
					:wikitext( string.format( '[[Portal:%s|%s portal]]', portal, portal ) )
	end
	
	nav
		:node( list )
	
	return tostring( nav )
end

-- Processes external arguments and sends them to the other functions.
function p.main( frame )
	-- If called via #invoke, use the args passed into the invoking
	-- template, or the args passed to #invoke if any exist. Otherwise
	-- assume args are being passed directly in from the debug console
	-- or from another Lua module.
	local origArgs
	if type( frame.getParent ) == 'function' then
		origArgs = frame:getParent().args
		for k, v in pairs( frame.args ) do
			origArgs = frame.args
			break
		end
	else
		origArgs = frame
	end
	-- Process the args to make an array of portal names that can be used with ipairs. We need to use ipairs because we want to list
	-- all the portals in the order they were passed to the template, but we also want to be able to deal with positional arguments
	-- passed explicitly, for example {{portal|2=Politics}}. The behaviour of ipairs is undefined if nil values are present, so we
	-- need to make sure they are all removed.
	local portals, args = {}, {}
	for k, v in pairs( origArgs ) do
		if type( k ) == 'number' and type( v ) == 'string' then -- Make sure we have no non-string portal names.
			if mw.ustring.find( v, '%S' ) then -- Remove blank values.
				table.insert( portals, k )
			end
		elseif type( k ) ~= 'number' then -- Separate named arguments from portals.
			if type( v ) == 'string' then
				v = mw.text.trim( v )
			end
			args[ k ] = v
		end
	end
	table.sort( portals )
	for i, v in ipairs( portals ) do
		portals[ i ] = mw.text.trim( origArgs[ v ] ) -- Swap keys with values, trimming whitespace.
	end
	return p._main( portals, args )
end

return p</text>
      <sha1>dtll6dlgnug664cagf1jh8v92e9quet</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Protection banner</title>
    <ns>828</ns>
    <id>42040984</id>
    <revision>
      <id>741795115</id>
      <parentid>732908599</parentid>
      <timestamp>2016-09-29T18:32:41Z</timestamp>
      <contributor>
        <username>Cenarium</username>
        <id>5711305</id>
      </contributor>
      <comment>remove expiry param (now also automatically retrieved for autoreview) and needsexpiry check</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="25486">-- This module implements {{pp-meta}} and its daughter templates such as
-- {{pp-dispute}}, {{pp-vandalism}} and {{pp-sock}}.

-- Initialise necessary modules.
require('Module:No globals')
local makeFileLink = require('Module:File link')._main
local effectiveProtectionLevel = require('Module:Effective protection level')._main
local effectiveProtectionExpiry = require('Module:Effective protection expiry')._main
local yesno = require('Module:Yesno')

-- Lazily initialise modules and objects we don't always need.
local getArgs, makeMessageBox, lang

-- Set constants.
local CONFIG_MODULE = 'Module:Protection banner/config'

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function makeCategoryLink(cat, sort)
	if cat then
		return string.format(
			'[[%s:%s|%s]]',
			mw.site.namespaces[14].name,
			cat,
			sort
		)
	end
end

-- Validation function for the expiry and the protection date
local function validateDate(dateString, dateType)
	if not lang then
		lang = mw.language.getContentLanguage()
	end
	local success, result = pcall(lang.formatDate, lang, 'U', dateString)
	if success then
		result = tonumber(result)
		if result then
			return result
		end
	end
	error(string.format(
		'invalid %s: %s',
		dateType,
		tostring(dateString)
	), 4)
end

local function makeFullUrl(page, query, display)
	return string.format(
		'[%s %s]',
		tostring(mw.uri.fullUrl(page, query)),
		display
	)
end

-- Given a directed graph formatted as node -&gt; table of direct successors,
-- get a table of all nodes reachable from a given node (though always
-- including the given node).
local function getReachableNodes(graph, start)
	local toWalk, retval = {[start] = true}, {}
	while true do
		-- Can't use pairs() since we're adding and removing things as we're iterating
		local k = next(toWalk) -- This always gets the &quot;first&quot; key
		if k == nil then
			return retval
		end
		toWalk[k] = nil
		retval[k] = true
		for _,v in ipairs(graph[k]) do
			if not retval[v] then
				toWalk[v] = true
			end
		end
	end
end

--------------------------------------------------------------------------------
-- Protection class
--------------------------------------------------------------------------------

local Protection = {}
Protection.__index = Protection

Protection.supportedActions = {
	edit = true,
	move = true,
	autoreview = true,
	upload = true
}

Protection.bannerConfigFields = {
	'text',
	'explanation',
	'tooltip',
	'alt',
	'link',
	'image'
}

function Protection.new(args, cfg, title)
	local obj = {}
	obj._cfg = cfg
	obj.title = title or mw.title.getCurrentTitle()

	-- Set action
	if not args.action then
		obj.action = 'edit'
	elseif Protection.supportedActions[args.action] then
		obj.action = args.action
	else
		error(string.format(
			'invalid action: %s',
			tostring(args.action)
		), 3)
	end

	-- Set level
	obj.level = args.demolevel or effectiveProtectionLevel(obj.action, obj.title)
	if not obj.level or (obj.action == 'move' and obj.level == 'autoconfirmed') then
		-- Users need to be autoconfirmed to move pages anyway, so treat
		-- semi-move-protected pages as unprotected.
		obj.level = '*'
	end

	-- Set expiry
	local effectiveExpiry = effectiveProtectionExpiry(obj.action, obj.title)
	if effectiveExpiry == 'infinity' then
		obj.expiry = 'indef'
	elseif effectiveExpiry ~= 'unknown' then
		obj.expiry = validateDate(effectiveExpiry, 'expiry date')
	end

	-- Set reason
	if args[1] then
		obj.reason = mw.ustring.lower(args[1])
		if obj.reason:find('|') then
			error('reasons cannot contain the pipe character (&quot;|&quot;)', 3)
		end
	end

	-- Set protection date
	if args.date then
		obj.protectionDate = validateDate(args.date, 'protection date')
	end
	
	-- Set banner config
	do
		obj.bannerConfig = {}
		local configTables = {}
		if cfg.banners[obj.action] then
			configTables[#configTables + 1] = cfg.banners[obj.action][obj.reason]
		end
		if cfg.defaultBanners[obj.action] then
			configTables[#configTables + 1] = cfg.defaultBanners[obj.action][obj.level]
			configTables[#configTables + 1] = cfg.defaultBanners[obj.action].default
		end
		configTables[#configTables + 1] = cfg.masterBanner
		for i, field in ipairs(Protection.bannerConfigFields) do
			for j, t in ipairs(configTables) do
				if t[field] then
					obj.bannerConfig[field] = t[field]
					break
				end
			end
		end
	end
	return setmetatable(obj, Protection)
end

function Protection:isProtected()
	return self.level ~= '*'
end

function Protection:isTemporary()
	return type(self.expiry) == 'number'
end

function Protection:makeProtectionCategory()
	local cfg = self._cfg
	local title = self.title
	
	-- Exit if the page is not protected.
	if not self:isProtected() then
		return ''
	end
	
	-- Get the expiry key fragment.
	local expiryFragment
	if self.expiry == 'indef' then
		expiryFragment = self.expiry
	elseif type(self.expiry) == 'number' then
		expiryFragment = 'temp'
	end

	-- Get the namespace key fragment.
	local namespaceFragment = cfg.categoryNamespaceKeys[title.namespace]
	if not namespaceFragment and title.namespace % 2 == 1 then
			namespaceFragment = 'talk'
	end
 
	-- Define the order that key fragments are tested in. This is done with an
	-- array of tables containing the value to be tested, along with its
	-- position in the cfg.protectionCategories table.
	local order = {
		{val = expiryFragment,    keypos = 1},
		{val = namespaceFragment, keypos = 2},
		{val = self.reason,       keypos = 3},
		{val = self.level,        keypos = 4},
		{val = self.action,       keypos = 5}
	}

	--[[
	-- The old protection templates used an ad-hoc protection category system,
	-- with some templates prioritising namespaces in their categories, and
	-- others prioritising the protection reason. To emulate this in this module
	-- we use the config table cfg.reasonsWithNamespacePriority to set the
	-- reasons for which namespaces have priority over protection reason.
	-- If we are dealing with one of those reasons, move the namespace table to
	-- the end of the order table, i.e. give it highest priority. If not, the
	-- reason should have highest priority, so move that to the end of the table
	-- instead.
	--]]
	table.insert(order, table.remove(order, self.reason and cfg.reasonsWithNamespacePriority[self.reason] and 2 or 3))
 
	--[[
	-- Define the attempt order. Inactive subtables (subtables with nil &quot;value&quot;
	-- fields) are moved to the end, where they will later be given the key
	-- &quot;all&quot;. This is to cut down on the number of table lookups in
	-- cfg.protectionCategories, which grows exponentially with the number of
	-- non-nil keys. We keep track of the number of active subtables with the
	-- noActive parameter.
	--]]
	local noActive, attemptOrder
	do
		local active, inactive = {}, {}
		for i, t in ipairs(order) do
			if t.val then
				active[#active + 1] = t
			else
				inactive[#inactive + 1] = t
			end
		end
		noActive = #active
		attemptOrder = active
		for i, t in ipairs(inactive) do
			attemptOrder[#attemptOrder + 1] = t
		end
	end
 
	--[[
	-- Check increasingly generic key combinations until we find a match. If a
	-- specific category exists for the combination of key fragments we are
	-- given, that match will be found first. If not, we keep trying different
	-- key fragment combinations until we match using the key
	-- &quot;all-all-all-all-all&quot;.
	--
	-- To generate the keys, we index the key subtables using a binary matrix
	-- with indexes i and j. j is only calculated up to the number of active
	-- subtables. For example, if there were three active subtables, the matrix
	-- would look like this, with 0 corresponding to the key fragment &quot;all&quot;, and
	-- 1 corresponding to other key fragments.
	-- 
	--   j 1  2  3
	-- i  
	-- 1   1  1  1
	-- 2   0  1  1
	-- 3   1  0  1
	-- 4   0  0  1
	-- 5   1  1  0
	-- 6   0  1  0
	-- 7   1  0  0
	-- 8   0  0  0
	-- 
	-- Values of j higher than the number of active subtables are set
	-- to the string &quot;all&quot;.
	--
	-- A key for cfg.protectionCategories is constructed for each value of i.
	-- The position of the value in the key is determined by the keypos field in
	-- each subtable.
	--]]
	local cats = cfg.protectionCategories
	for i = 1, 2^noActive do
		local key = {}
		for j, t in ipairs(attemptOrder) do
			if j &gt; noActive then
				key[t.keypos] = 'all'
			else
				local quotient = i / 2 ^ (j - 1)
				quotient = math.ceil(quotient)
				if quotient % 2 == 1 then
					key[t.keypos] = t.val
				else
					key[t.keypos] = 'all'
				end
			end
		end
		key = table.concat(key, '|')
		local attempt = cats[key]
		if attempt then
			return makeCategoryLink(attempt, title.text)
		end
	end
	return ''
end

function Protection:isIncorrect()
	local expiry = self.expiry
	return not self:isProtected()
		or type(expiry) == 'number' and expiry &lt; os.time()
end

function Protection:isTemplateProtectedNonTemplate()
	local action, namespace = self.action, self.title.namespace
	return self.level == 'templateeditor'
		and (
			(action ~= 'edit' and action ~= 'move')
			or (namespace ~= 10 and namespace ~= 828)
		)
end

function Protection:makeCategoryLinks()
	local msg = self._cfg.msg
	local ret = { self:makeProtectionCategory() }
	if self:isIncorrect() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-incorrect'],
			self.title.text
		)
	end
	if self:isTemplateProtectedNonTemplate() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-template'],
			self.title.text
		)
	end
	return table.concat(ret)
end

--------------------------------------------------------------------------------
-- Blurb class
--------------------------------------------------------------------------------

local Blurb = {}
Blurb.__index = Blurb

Blurb.bannerTextFields = {
	text = true,
	explanation = true,
	tooltip = true,
	alt = true,
	link = true
}

function Blurb.new(protectionObj, args, cfg)
	return setmetatable({
		_cfg = cfg,
		_protectionObj = protectionObj,
		_args = args
	}, Blurb)
end

-- Private methods --

function Blurb:_formatDate(num)
	-- Formats a Unix timestamp into dd Month, YYYY format.
	lang = lang or mw.language.getContentLanguage()
	local success, date = pcall(
		lang.formatDate,
		lang,
		self._cfg.msg['expiry-date-format'] or 'j F Y',
		'@' .. tostring(num)
	)
	if success then
		return date
	end
end

function Blurb:_getExpandedMessage(msgKey)
	return self:_substituteParameters(self._cfg.msg[msgKey])
end

function Blurb:_substituteParameters(msg)
	if not self._params then
		local parameterFuncs = {}

		parameterFuncs.CURRENTVERSION     = self._makeCurrentVersionParameter
		parameterFuncs.EDITREQUEST        = self._makeEditRequestParameter
		parameterFuncs.EXPIRY             = self._makeExpiryParameter
		parameterFuncs.EXPLANATIONBLURB   = self._makeExplanationBlurbParameter
		parameterFuncs.IMAGELINK          = self._makeImageLinkParameter
		parameterFuncs.INTROBLURB         = self._makeIntroBlurbParameter
		parameterFuncs.INTROFRAGMENT      = self._makeIntroFragmentParameter
		parameterFuncs.PAGETYPE           = self._makePagetypeParameter
		parameterFuncs.PROTECTIONBLURB    = self._makeProtectionBlurbParameter
		parameterFuncs.PROTECTIONDATE     = self._makeProtectionDateParameter
		parameterFuncs.PROTECTIONLEVEL    = self._makeProtectionLevelParameter
		parameterFuncs.PROTECTIONLOG      = self._makeProtectionLogParameter
		parameterFuncs.TALKPAGE           = self._makeTalkPageParameter
		parameterFuncs.TOOLTIPBLURB       = self._makeTooltipBlurbParameter
		parameterFuncs.TOOLTIPFRAGMENT    = self._makeTooltipFragmentParameter
		parameterFuncs.VANDAL             = self._makeVandalTemplateParameter
		
		self._params = setmetatable({}, {
			__index = function (t, k)
				local param
				if parameterFuncs[k] then
					param = parameterFuncs[k](self)
				end
				param = param or ''
				t[k] = param
				return param
			end
		})
	end
	
	msg = msg:gsub('${(%u+)}', self._params)
	return msg
end

function Blurb:_makeCurrentVersionParameter()
	-- A link to the page history or the move log, depending on the kind of
	-- protection.
	local pagename = self._protectionObj.title.prefixedText
	if self._protectionObj.action == 'move' then
		-- We need the move log link.
		return makeFullUrl(
			'Special:Log',
			{type = 'move', page = pagename},
			self:_getExpandedMessage('current-version-move-display')
		)
	else
		-- We need the history link.
		return makeFullUrl(
			pagename,
			{action = 'history'},
			self:_getExpandedMessage('current-version-edit-display')
		)
	end
end

function Blurb:_makeEditRequestParameter()
	local mEditRequest = require('Module:Submit an edit request')
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	
	-- Get the edit request type.
	local requestType
	if action == 'edit' then
		if level == 'autoconfirmed' then
			requestType = 'semi'
		elseif level == 'extendedconfirmed' then
			requestType = 'extended'
		elseif level == 'templateeditor' then
			requestType = 'template'
		end
	end
	requestType = requestType or 'full'
	
	-- Get the display value.
	local display = self:_getExpandedMessage('edit-request-display')

	return mEditRequest._link{type = requestType, display = display}
end

function Blurb:_makeExpiryParameter()
	local expiry = self._protectionObj.expiry
	if type(expiry) == 'number' then
		return self:_formatDate(expiry)
	else
		return expiry
	end
end

function Blurb:_makeExplanationBlurbParameter()
	-- Cover special cases first.
	if self._protectionObj.title.namespace == 8 then
		-- MediaWiki namespace
		return self:_getExpandedMessage('explanation-blurb-nounprotect')
	end

	-- Get explanation blurb table keys
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local talkKey = self._protectionObj.title.isTalkPage and 'talk' or 'subject'

	-- Find the message in the explanation blurb table and substitute any
	-- parameters.
	local explanations = self._cfg.explanationBlurbs
	local msg
	if explanations[action][level] and explanations[action][level][talkKey] then
		msg = explanations[action][level][talkKey]
	elseif explanations[action][level] and explanations[action][level].default then
		msg = explanations[action][level].default
	elseif explanations[action].default and explanations[action].default[talkKey] then
		msg = explanations[action].default[talkKey]
	elseif explanations[action].default and explanations[action].default.default then
		msg = explanations[action].default.default
	else
		error(string.format(
			'could not find explanation blurb for action &quot;%s&quot;, level &quot;%s&quot; and talk key &quot;%s&quot;',
			action,
			level,
			talkKey
		), 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeImageLinkParameter()
	local imageLinks = self._cfg.imageLinks
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if imageLinks[action][level] then
		msg = imageLinks[action][level]
	elseif imageLinks[action].default then
		msg = imageLinks[action].default
	else
		msg = imageLinks.edit.default
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeIntroBlurbParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('intro-blurb-expiry')
	else
		return self:_getExpandedMessage('intro-blurb-noexpiry')
	end
end

function Blurb:_makeIntroFragmentParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('intro-fragment-expiry')
	else
		return self:_getExpandedMessage('intro-fragment-noexpiry')
	end
end

function Blurb:_makePagetypeParameter()
	local pagetypes = self._cfg.pagetypes
	return pagetypes[self._protectionObj.title.namespace]
		or pagetypes.default
		or error('no default pagetype defined', 8)
end

function Blurb:_makeProtectionBlurbParameter()
	local protectionBlurbs = self._cfg.protectionBlurbs
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if protectionBlurbs[action][level] then
		msg = protectionBlurbs[action][level]
	elseif protectionBlurbs[action].default then
		msg = protectionBlurbs[action].default
	elseif protectionBlurbs.edit.default then
		msg = protectionBlurbs.edit.default
	else
		error('no protection blurb defined for protectionBlurbs.edit.default', 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeProtectionDateParameter()
	local protectionDate = self._protectionObj.protectionDate
	if type(protectionDate) == 'number' then
		return self:_formatDate(protectionDate)
	else
		return protectionDate
	end
end

function Blurb:_makeProtectionLevelParameter()
	local protectionLevels = self._cfg.protectionLevels
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if protectionLevels[action][level] then
		msg = protectionLevels[action][level]
	elseif protectionLevels[action].default then
		msg = protectionLevels[action].default
	elseif protectionLevels.edit.default then
		msg = protectionLevels.edit.default
	else
		error('no protection level defined for protectionLevels.edit.default', 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeProtectionLogParameter()
	local pagename = self._protectionObj.title.prefixedText
	if self._protectionObj.action == 'autoreview' then
		-- We need the pending changes log.
		return makeFullUrl(
			'Special:Log',
			{type = 'stable', page = pagename},
			self:_getExpandedMessage('pc-log-display')
		)
	else
		-- We need the protection log.
		return makeFullUrl(
			'Special:Log',
			{type = 'protect', page = pagename},
			self:_getExpandedMessage('protection-log-display')
		)
	end
end

function Blurb:_makeTalkPageParameter()
	return string.format(
		'[[%s:%s#%s|%s]]',
		mw.site.namespaces[self._protectionObj.title.namespace].talk.name,
		self._protectionObj.title.text,
		self._args.section or 'top',
		self:_getExpandedMessage('talk-page-link-display')
	)
end

function Blurb:_makeTooltipBlurbParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('tooltip-blurb-expiry')
	else
		return self:_getExpandedMessage('tooltip-blurb-noexpiry')
	end
end

function Blurb:_makeTooltipFragmentParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('tooltip-fragment-expiry')
	else
		return self:_getExpandedMessage('tooltip-fragment-noexpiry')
	end
end

function Blurb:_makeVandalTemplateParameter()
	return require('Module:Vandal-m')._main{
		self._args.user or self._protectionObj.title.baseText
	}
end

-- Public methods --

function Blurb:makeBannerText(key)
	-- Validate input.
	if not key or not Blurb.bannerTextFields[key] then
		error(string.format(
			'&quot;%s&quot; is not a valid banner config field',
			tostring(key)
		), 2)
	end

	-- Generate the text.
	local msg = self._protectionObj.bannerConfig[key]
	if type(msg) == 'string' then
		return self:_substituteParameters(msg)
	elseif type(msg) == 'function' then
		msg = msg(self._protectionObj, self._args)
		if type(msg) ~= 'string' then
			error(string.format(
				'bad output from banner config function with key &quot;%s&quot;'
					.. ' (expected string, got %s)',
				tostring(key),
				type(msg)
			), 4)
		end
		return self:_substituteParameters(msg)
	end
end

--------------------------------------------------------------------------------
-- BannerTemplate class
--------------------------------------------------------------------------------

local BannerTemplate = {}
BannerTemplate.__index = BannerTemplate

function BannerTemplate.new(protectionObj, cfg)
	local obj = {}
	obj._cfg = cfg

	-- Set the image filename.
	local imageFilename = protectionObj.bannerConfig.image
	if imageFilename then
		obj._imageFilename = imageFilename
	else
		-- If an image filename isn't specified explicitly in the banner config,
		-- generate it from the protection status and the namespace.
		local action = protectionObj.action
		local level = protectionObj.level
		local namespace = protectionObj.title.namespace
		local reason = protectionObj.reason
		
		-- Deal with special cases first.
		if (
			namespace == 10
			or namespace == 828
			or reason and obj._cfg.indefImageReasons[reason]
			)
			and action == 'edit'
			and level == 'sysop'
			and not protectionObj:isTemporary()
		then
			-- Fully protected modules and templates get the special red &quot;indef&quot;
			-- padlock.
			obj._imageFilename = obj._cfg.msg['image-filename-indef']
		else
			-- Deal with regular protection types.
			local images = obj._cfg.images
			if images[action] then
				if images[action][level] then
					obj._imageFilename = images[action][level]
				elseif images[action].default then
					obj._imageFilename = images[action].default
				end
			end
		end
	end
	return setmetatable(obj, BannerTemplate)
end

function BannerTemplate:renderImage()
	local filename = self._imageFilename
		or self._cfg.msg['image-filename-default']
		or 'Transparent.gif'
	return makeFileLink{
		file = filename,
		size = (self.imageWidth or 20) .. 'px',
		alt = self._imageAlt,
		link = self._imageLink,
		caption = self.imageCaption
	}
end

--------------------------------------------------------------------------------
-- Banner class
--------------------------------------------------------------------------------

local Banner = setmetatable({}, BannerTemplate)
Banner.__index = Banner

function Banner.new(protectionObj, blurbObj, cfg)
	local obj = BannerTemplate.new(protectionObj, cfg) -- This doesn't need the blurb.
	obj.imageWidth = 40
	obj.imageCaption = blurbObj:makeBannerText('alt') -- Large banners use the alt text for the tooltip.
	obj._reasonText = blurbObj:makeBannerText('text')
	obj._explanationText = blurbObj:makeBannerText('explanation')
	obj._page = protectionObj.title.prefixedText -- Only makes a difference in testing.
	return setmetatable(obj, Banner)
end

function Banner:__tostring()
	-- Renders the banner.
	makeMessageBox = makeMessageBox or require('Module:Message box').main
	local reasonText = self._reasonText or error('no reason text set', 2)
	local explanationText = self._explanationText
	local mbargs = {
		page = self._page,
		type = 'protection',
		image = self:renderImage(),
		text = string.format(
			&quot;'''%s'''%s&quot;,
			reasonText,
			explanationText and '&lt;br /&gt;' .. explanationText or ''
		)
	}
	return makeMessageBox('mbox', mbargs)
end

--------------------------------------------------------------------------------
-- Padlock class
--------------------------------------------------------------------------------

local Padlock = setmetatable({}, BannerTemplate)
Padlock.__index = Padlock

function Padlock.new(protectionObj, blurbObj, cfg)
	local obj = BannerTemplate.new(protectionObj, cfg) -- This doesn't need the blurb.
	obj.imageWidth = 20
	obj.imageCaption = blurbObj:makeBannerText('tooltip')
	obj._imageAlt = blurbObj:makeBannerText('alt')
	obj._imageLink = blurbObj:makeBannerText('link')
	obj._indicatorName = cfg.padlockIndicatorNames[protectionObj.action]
		or cfg.padlockIndicatorNames.default
		or 'pp-default'
	return setmetatable(obj, Padlock)
end

function Padlock:__tostring()
	local frame = mw.getCurrentFrame()
	-- The nowiki tag helps prevent whitespace at the top of articles.
	return frame:extensionTag{name = 'nowiki'} .. frame:extensionTag{
		name = 'indicator',
		args = {name = self._indicatorName},
		content = self:renderImage()
	}
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- This is used for testing purposes.
	return {
		Protection = Protection,
		Blurb = Blurb,
		BannerTemplate = BannerTemplate,
		Banner = Banner,
		Padlock = Padlock,
	}
end

function p._main(args, cfg, title)
	args = args or {}
	cfg = cfg or require(CONFIG_MODULE)

	local protectionObj = Protection.new(args, cfg, title)

	local ret = {}

	-- If a page's edit protection is equally or more restrictive than its
	-- protection from some other action, then don't bother displaying anything
	-- for the other action (except categories).
	if protectionObj.action == 'edit' or
		args.demolevel or
		not getReachableNodes(
			cfg.hierarchy,
			protectionObj.level
		)[effectiveProtectionLevel('edit', protectionObj.title)]
	then
		-- Initialise the blurb object
		local blurbObj = Blurb.new(protectionObj, args, cfg)
	
		-- Render the banner
		if protectionObj:isProtected() then
			ret[#ret + 1] = tostring(
				(yesno(args.small) and Padlock or Banner)
				.new(protectionObj, blurbObj, cfg)
			)
		end
	end

	-- Render the categories
	if yesno(args.category) ~= false then
		ret[#ret + 1] = protectionObj:makeCategoryLinks()
	end
	
	return table.concat(ret)	
end

function p.main(frame, cfg)
	cfg = cfg or require(CONFIG_MODULE)

	-- Find default args, if any.
	local parent = frame.getParent and frame:getParent()
	local defaultArgs = parent and cfg.wrappers[parent:getTitle():gsub('/sandbox$', '')]

	-- Find user args, and use the parent frame if we are being called from a
	-- wrapper template.
	getArgs = getArgs or require('Module:Arguments').getArgs
	local userArgs = getArgs(frame, {
		parentOnly = defaultArgs,
		frameOnly = not defaultArgs
	})

	-- Build the args table. User-specified args overwrite default args.
	local args = {}
	for k, v in pairs(defaultArgs or {}) do
		args[k] = v
	end
	for k, v in pairs(userArgs) do
		args[k] = v
	end
	return p._main(args, cfg)
end

return p</text>
      <sha1>ice162y8kua930ie41kredxjaxhzy3y</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Protection banner/config</title>
    <ns>828</ns>
    <id>42982788</id>
    <revision>
      <id>776490617</id>
      <parentid>772318676</parentid>
      <timestamp>2017-04-21T09:32:57Z</timestamp>
      <contributor>
        <username>Yaris678</username>
        <id>1210941</id>
      </contributor>
      <comment>Let's not get into whether and when we are publishing.  Existing consensus at [[:Template:Protection table]] is &quot;go live&quot; for a very short description... but we have space here to be even more specific</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="46798">-- This module provides configuration data for [[Module:Protection banner]].

return {

--------------------------------------------------------------------------------
--
--                                BANNER DATA
--
--------------------------------------------------------------------------------

--[[
-- Banner data consists of six fields:
-- * text - the main protection text that appears at the top of protection
--   banners.
-- * explanation - the text that appears below the main protection text, used
--   to explain the details of the protection.
-- * tooltip - the tooltip text you see when you move the mouse over a small
--   padlock icon.
-- * link - the page that the small padlock icon links to.
-- * alt - the alt text for the small padlock icon. This is also used as tooltip
--   text for the large protection banners.
-- * image - the padlock image used in both protection banners and small padlock
--   icons.
--
-- The module checks in three separate tables to find a value for each field.
-- First it checks the banners table, which has values specific to the reason
-- for the page being protected. Then the module checks the defaultBanners
-- table, which has values specific to each protection level. Finally, the
-- module checks the masterBanner table, which holds data for protection
-- templates to use if no data has been found in the previous two tables.
--
-- The values in the banner data can take parameters. These are specified
-- using ${TEXTLIKETHIS} (a dollar sign preceding a parameter name
-- enclosed in curly braces).
--
--                          Available parameters:
--
-- ${CURRENTVERSION} - a link to the page history or the move log, with the
-- display message &quot;current-version-edit-display&quot; or
-- &quot;current-version-move-display&quot;.
--
-- ${EDITREQUEST} - a link to create an edit request for the current page.
--
-- ${EXPLANATIONBLURB} - an explanation blurb, e.g. &quot;Please discuss any changes
-- on the talk page; you may submit a request to ask an administrator to make
-- an edit if it is minor or supported by consensus.&quot;
--
-- ${IMAGELINK} - a link to set the image to, depending on the protection
-- action and protection level.
--
-- ${INTROBLURB} - the PROTECTIONBLURB parameter, plus the expiry if an expiry
-- is set. E.g. &quot;Editing of this page by new or unregistered users is currently 
-- disabled until dd Month YYYY.&quot;
--
-- ${INTROFRAGMENT} - the same as ${INTROBLURB}, but without final punctuation
-- so that it can be used in run-on sentences.
--
-- ${PAGETYPE} - the type of the page, e.g. &quot;article&quot; or &quot;template&quot;.
-- Defined in the cfg.pagetypes table.
--
-- ${PROTECTIONBLURB} - a blurb explaining the protection level of the page, e.g.
-- &quot;Editing of this page by new or unregistered users is currently disabled&quot;
--
-- ${PROTECTIONDATE} - the protection date, if it has been supplied to the
-- template.
--
-- ${PROTECTIONLEVEL} - the protection level, e.g. &quot;fully protected&quot; or
-- &quot;semi-protected&quot;.
--
-- ${PROTECTIONLOG} - a link to the protection log or the pending changes log,
-- depending on the protection action.
--
-- ${TALKPAGE} - a link to the talk page. If a section is specified, links
-- straight to that talk page section.
--
-- ${TOOLTIPBLURB} - uses the PAGETYPE, PROTECTIONTYPE and EXPIRY parameters to
-- create a blurb like &quot;This template is semi-protected&quot;, or &quot;This article is
-- move-protected until DD Month YYYY&quot;.
--
-- ${VANDAL} - links for the specified username (or the root page name)
-- using Module:Vandal-m.
--
--                                 Functions
--
-- For advanced users, it is possible to use Lua functions instead of strings
-- in the banner config tables. Using functions gives flexibility that is not
-- possible just by using parameters. Functions take two arguments, the
-- protection object and the template arguments, and they must output a string.
--
-- For example:
--
-- text = function (protectionObj, args)
--     if protectionObj.level == 'autoconfirmed' then
--         return 'foo'
--     else
--         return 'bar'
--     end
-- end
--
-- Some protection object properties and methods that may be useful:
-- protectionObj.action - the protection action
-- protectionObj.level - the protection level
-- protectionObj.reason - the protection reason
-- protectionObj.expiry - the expiry. Nil if unset, the string &quot;indef&quot; if set
--     to indefinite, and the protection time in unix time if temporary.
-- protectionObj.protectionDate - the protection date in unix time, or nil if
--     unspecified.
-- protectionObj.bannerConfig - the banner config found by the module. Beware
--     of editing the config field used by the function, as it could create an
--     infinite loop.
-- protectionObj:isProtected - returns a boolean showing whether the page is
--     protected.
-- protectionObj:isTemporary - returns a boolean showing whether the expiry is
--     temporary.
-- protectionObj:isIncorrect - returns a boolean showing whether the protection
--     template is incorrect.
--]]

-- The master banner data, used if no values have been found in banners or
-- defaultBanners.
masterBanner = {
	text = '${INTROBLURB}',
	explanation = '${EXPLANATIONBLURB}',
	tooltip = '${TOOLTIPBLURB}',
	link = '${IMAGELINK}',
	alt = 'Page ${PROTECTIONLEVEL}'
},

-- The default banner data. This holds banner data for different protection
-- levels.
-- *required* - this table needs edit, move, autoreview and upload subtables.
defaultBanners = {
	edit = {},
	move = {},
	autoreview = {
		autoconfirmed = {
			alt = 'Page protected with pending changes level 1',
			tooltip = 'All edits by unregistered and new users are subject to review prior to becoming visible to unregistered users',
			image = 'Padlock-silver-light.svg'
		},
		default = {
			alt = 'Page protected with pending changes level 2',
			tooltip = 'All edits by users who are not reviewers or administrators are'
				.. ' subject to review prior to becoming visible to unregistered users',
			image = 'Padlock-orange.svg'
		}
	},
	upload = {}
},

-- The banner data. This holds banner data for different protection reasons.
-- In fact, the reasons specified in this table control which reasons are
-- valid inputs to the first positional parameter.
--
-- There is also a non-standard &quot;description&quot; field that can be used for items
-- in this table. This is a description of the protection reason for use in the
-- module documentation.
--
-- *required* - this table needs edit, move, autoreview and upload subtables.
banners = {
	edit = {
		blp = {
			description = 'For pages protected to promote compliance with the'
				.. ' [[Wikipedia:Biographies of living persons'
				.. '|biographies of living persons]] policy',
			text = '${INTROFRAGMENT} to promote compliance with'
				.. ' [[Wikipedia:Biographies of living persons'
				.. &quot;|Wikipedia's&amp;nbsp;policy on&amp;nbsp;the&amp;nbsp;biographies&quot;
				.. ' of&amp;nbsp;living&amp;nbsp;people]].',
			tooltip = '${TOOLTIPFRAGMENT} to promote compliance with the policy on'
				.. ' biographies of living people',
		},
		dmca = {
			description = 'For pages protected by the Wikimedia Foundation'
				.. ' due to [[Digital Millennium Copyright Act]] takedown requests',
			explanation = function (protectionObj, args)
				local ret = 'Pursuant to a rights owner notice under the Digital'
					.. ' Millennium Copyright Act (DMCA) regarding some content'
					.. ' in this article, the Wikimedia Foundation acted under'
					.. ' applicable law and took down and restricted the content'
					.. ' in question.'
				if args.notice then
					ret = ret .. ' A copy of the received notice can be found here: '
						.. args.notice .. '.'
				end
				ret = ret .. ' For more information, including websites discussing'
					.. ' how to file a counter-notice, please see'
					.. &quot; [[Wikipedia:Office actions]] and the article's ${TALKPAGE}.&quot;
					.. &quot;'''Do not remove this template from the article until the&quot;
					.. &quot; restrictions are withdrawn'''.&quot;
				return ret
			end,
			image = 'Padlock-black.svg',
		},
		dispute = {
			description = 'For pages protected due to editing disputes',
			text = function (protectionObj, args)
				-- Find the value of &quot;disputes&quot;.
				local display = 'disputes'
				local disputes
				if args.section then
					disputes = string.format(
						'[[%s:%s#%s|%s]]',
						mw.site.namespaces[protectionObj.title.namespace].talk.name,
						protectionObj.title.text,
						args.section,
						display
					)
				else
					disputes = display
				end

				-- Make the blurb, depending on the expiry.
				local msg
				if type(protectionObj.expiry) == 'number' then
					msg = '${INTROFRAGMENT} or until editing %s have been resolved.'
				else
					msg = '${INTROFRAGMENT} until editing %s have been resolved.'
				end
				return string.format(msg, disputes)
			end,
			explanation = &quot;This protection is '''not''' an endorsement of the&quot;
				.. ' ${CURRENTVERSION}. ${EXPLANATIONBLURB}',
			tooltip = '${TOOLTIPFRAGMENT} due to editing disputes',
		},
		ecp = {
			description = 'For articles in topic areas authorized by'
				.. ' [[Wikipedia:Arbitration Committee|ArbCom]] or'
				.. ' meets the criteria for community use',
			tooltip = 'This ${PAGETYPE} is extended-confirmed protected',
			alt = 'Extended-protected ${PAGETYPE}',
		},
		mainpage = {
			description = 'For pages protected for being displayed on the [[Main Page]]',
			text = 'This file is currently'
				.. ' [[Wikipedia:This page is protected|protected]] from'
				.. ' editing because it is currently or will soon be displayed'
				.. ' on the [[Main Page]].',
			explanation = 'Images on the Main Page are protected due to their high'
				.. ' visibility. Please discuss any necessary changes on the ${TALKPAGE}.'
				.. '&lt;br /&gt;&lt;span style=&quot;font-size:90%;&quot;&gt;'
				.. &quot;'''Administrators:''' Once this image is definitely off the Main Page,&quot;
				.. ' please unprotect this file, or reduce to semi-protection,'
				.. ' as appropriate.&lt;/span&gt;',
		},
		office = {
			description = 'For pages protected by the Wikimedia Foundation',
			text = function (protectionObj, args)
				local ret = 'This ${PAGETYPE} is currently under the'
					.. ' scrutiny of the'
					.. ' [[Wikipedia:Office actions|Wikimedia Foundation Office]]'
					.. ' and is protected.'
				if protectionObj.protectionDate then
					ret = ret .. ' It has been protected since ${PROTECTIONDATE}.'
				end
				return ret
			end,
			explanation = &quot;If you can edit this page, please discuss all changes and&quot;
				.. &quot; additions on the ${TALKPAGE} first. '''Do not remove protection from this&quot;
				.. &quot; page unless you are authorized by the Wikimedia Foundation to do&quot;
				.. &quot; so.'''&quot;,
			image = 'Padlock-black.svg',
		},
		reset = {
			description = 'For pages protected by the Wikimedia Foundation and'
				.. ' &quot;reset&quot; to a bare-bones version',
 			text = 'This ${PAGETYPE} is currently under the'
					.. ' scrutiny of the'
					.. ' [[Wikipedia:Office actions|Wikimedia Foundation Office]]'
					.. ' and is protected.',
			explanation = function (protectionObj, args)
				local ret = ''
				if protectionObj.protectionDate then
					ret = ret .. 'On ${PROTECTIONDATE} this ${PAGETYPE} was'
				else
					ret = ret .. 'This ${PAGETYPE} has been'
				end
				ret = ret .. ' reduced to a'
				.. ' simplified, &quot;bare bones&quot; version so that it may be completely'
				.. ' rewritten to ensure it meets the policies of'
				.. ' [[WP:NPOV|Neutral Point of View]] and [[WP:V|Verifiability]].'
				.. ' Standard Wikipedia policies will apply to its rewritingwhich'
				.. ' will eventually be open to all editorsand will be strictly'
				.. ' enforced. The ${PAGETYPE} has been ${PROTECTIONLEVEL} while'
				.. ' it is being rebuilt.\n\n'
				.. 'Any insertion of material directly from'
				.. ' pre-protection revisions of the ${PAGETYPE} will be removed, as'
				.. ' will any material added to the ${PAGETYPE} that is not properly'
				.. ' sourced. The associated talk page(s) were also cleared on the'
				.. &quot; same date.\n\n&quot;
				.. &quot;If you can edit this page, please discuss all changes and&quot;
				.. &quot; additions on the ${TALKPAGE} first. '''Do not override&quot;
				.. &quot; this action, and do not remove protection from this page,&quot;
				.. &quot; unless you are authorized by the Wikimedia Foundation&quot;
				.. &quot; to do so. No editor may remove this notice.'''&quot;

				return ret
			end,
			image = 'Padlock-black.svg',
		},
		sock = {
			description = 'For pages protected due to'
				.. ' [[Wikipedia:Sock puppetry|sock puppetry]]',
			text = '${INTROFRAGMENT} to prevent [[Wikipedia:Sock puppetry|sock puppets]] of'
				.. ' [[Wikipedia:Blocking policy|blocked]] or'
				.. ' [[Wikipedia:Banning policy|banned users]]'
				.. ' from editing it.',
			tooltip = '${TOOLTIPFRAGMENT} to prevent sock puppets of blocked or banned users from'
				.. ' editing it',
		},
		template = {
			description = 'For [[Wikipedia:High-risk templates|high-risk]]'
				.. ' templates and Lua modules',
			text = 'This is a permanently [[Help:Protection|protected]] ${PAGETYPE},'
				.. ' as it is [[Wikipedia:High-risk templates|high-risk]].',
			explanation = 'Please discuss any changes on the ${TALKPAGE}; you may'
				.. ' ${EDITREQUEST} to ask an'
				.. ' [[Wikipedia:Administrators|administrator]] or'
				.. ' [[Wikipedia:Template editor|template editor]] to make an edit if'
				.. ' it is [[Help:Minor edit#When to mark an edit as a minor edit'
				.. '|uncontroversial]] or supported by'
				.. ' [[Wikipedia:Consensus|consensus]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.',
			tooltip = 'This high-risk ${PAGETYPE} is permanently ${PROTECTIONLEVEL}'
				.. ' to prevent vandalism',
			alt = 'Permanently protected ${PAGETYPE}',
		},
		usertalk = {
			description = 'For pages protected against disruptive edits by a'
				.. ' particular user',
			text = '${INTROFRAGMENT} to prevent ${VANDAL} from using it to make disruptive edits,'
				.. ' such as abusing the'
				.. ' &amp;#123;&amp;#123;[[Template:unblock|unblock]]&amp;#125;&amp;#125; template.',
			explanation = 'If you cannot edit this user talk page and you need to'
				.. ' make a change or leave a message, you can'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for edits to a protected page'
				.. '|request an edit]],'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]],'
				.. ' [[Special:Userlogin|log in]],'
				.. ' or [[Special:UserLogin/signup|create an account]].',
		},
		vandalism = {
			description = 'For pages protected against'
				.. ' [[Wikipedia:Vandalism|vandalism]]',
			text = '${INTROFRAGMENT} due to [[Wikipedia:Vandalism|vandalism]].',
			explanation = function (protectionObj, args)
				local ret = ''
				if protectionObj.level == 'sysop' then
					ret = ret .. &quot;This protection is '''not''' an endorsement of the&quot;
						.. ' ${CURRENTVERSION}. '
				end
				return ret .. '${EXPLANATIONBLURB}'
			end,
			tooltip = '${TOOLTIPFRAGMENT} due to vandalism',
		}
	},
	move = {
		dispute = {
			description = 'For pages protected against page moves due to'
				.. ' disputes over the page title',
			explanation = &quot;This protection is '''not''' an endorsement of the&quot;
				.. ' ${CURRENTVERSION}. ${EXPLANATIONBLURB}',
			image = 'Padlock-olive.svg'
		},
		vandalism = {
			description = 'For pages protected against'
				.. ' [[Wikipedia:Vandalism#Page-move vandalism'
				.. ' |page-move vandalism]]'
		}
	},
	autoreview = {},
	upload = {}
},

--------------------------------------------------------------------------------
--
--                            GENERAL DATA TABLES
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Protection blurbs
--------------------------------------------------------------------------------

-- This table produces the protection blurbs available with the
-- ${PROTECTIONBLURB} parameter. It is sorted by protection action and
-- protection level, and is checked by the module in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
protectionBlurbs = {
	edit = {
		default = 'This ${PAGETYPE} is currently [[Help:Protection|'
			.. 'protected]] from editing',
		autoconfirmed = 'Editing of this ${PAGETYPE} by [[Wikipedia:User access'
			.. ' levels#New users|new]] or [[Wikipedia:User access levels#Unregistered'
			.. ' users|unregistered]] users is currently [[Help:Protection|disabled]]',
		extendedconfirmed = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} as a result of'
			.. ' [[Wikipedia:Arbitration Committee|ArbCom]] enforcement or meets the'
			.. ' [[Wikipedia:Protection policy#extended|criteria for community use]]',
	},
	move = {
		default = 'This ${PAGETYPE} is currently [[Help:Protection|protected]]'
			.. ' from [[Help:Moving a page|page moves]]'
	},
	autoreview = {
		autoconfirmed = 'All edits made to this ${PAGETYPE} by'
			.. ' [[Wikipedia:User access levels#New users|new]] or'
			.. ' [[Wikipedia:User access levels#Unregistered users|unregistered]]'
			.. ' users are currently'
			.. ' [[Wikipedia:Pending changes|subject to review]]',
		default = 'All edits made to this ${PAGETYPE} by users who are not'
			.. ' [[Wikipedia:Reviewing|reviewers]] or'
			.. ' [[Wikipedia:Administrators|administrators]] are currently'
			.. ' [[Wikipedia:Pending changes|subject to review]]'
	},
	upload = {
		default = 'Uploading new versions of this ${PAGETYPE} is currently disabled'
	}
},


--------------------------------------------------------------------------------
-- Explanation blurbs
--------------------------------------------------------------------------------

-- This table produces the explanation blurbs available with the
-- ${EXPLANATIONBLURB} parameter. It is sorted by protection action,
-- protection level, and whether the page is a talk page or not. If the page is
-- a talk page it will have a talk key of &quot;talk&quot;; otherwise it will have a talk
-- key of &quot;subject&quot;. The table is checked in the following order:
-- 1. page's protection action, page's protection level, page's talk key
-- 2. page's protection action, page's protection level, default talk key
-- 3. page's protection action, default protection level, page's talk key
-- 4. page's protection action, default protection level, default talk key
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
explanationBlurbs = {
	edit = {
		autoconfirmed = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details. If you'
				.. ' cannot edit this ${PAGETYPE} and you wish to make a change, you can'
				.. ' ${EDITREQUEST}, discuss changes on the ${TALKPAGE},'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details. If you'
				.. ' cannot edit this ${PAGETYPE} and you wish to make a change, you can'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].',
		},
		extendedconfirmed = {
			default = 'Extended confirmed protection prevents edits from all IP editors'
				.. ' and registered users with fewer than 30 days tenure and 500 edits.'
				.. ' The [[Wikipedia:Protection policy#extended|policy on community use]]'
				.. ' specifies that extended confirmed protection can be applied to combat'
				.. ' disruption, given that semi-protection has proven to be ineffective.'
				.. ' Please discuss any changes on the ${TALKPAGE}; you may'
				.. ' ${EDITREQUEST} to ask for unconversial changes supported by'
				.. ' [[Wikipedia:Consensus|consensus]].'
		},
		default = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Please discuss any changes on the ${TALKPAGE}; you'
				.. ' may ${EDITREQUEST} to ask an'
				.. ' [[Wikipedia:Administrators|administrator]] to make an edit if it'
				.. ' is [[Help:Minor edit#When to mark an edit as a minor edit'
				.. '|uncontroversial]] or supported by [[Wikipedia:Consensus'
				.. '|consensus]]. You may also [[Wikipedia:Requests for'
				.. ' page protection#Current requests for reduction in protection level'
				.. '|request]] that this page be unprotected.',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' You may [[Wikipedia:Requests for page'
				.. ' protection#Current requests for edits to a protected page|request an'
				.. ' edit]] to this page, or [[Wikipedia:Requests for'
				.. ' page protection#Current requests for reduction in protection level'
				.. '|ask]] for it to be unprotected.'
		}
	},
	move = {
		default = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but cannot be moved'
				.. ' until unprotected. Please discuss any suggested moves on the'
				.. ' ${TALKPAGE} or at [[Wikipedia:Requested moves]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but cannot be moved'
				.. ' until unprotected. Please discuss any suggested moves at'
				.. ' [[Wikipedia:Requested moves]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.'
		}
	},
	autoreview = {
		default = {
			reviewer = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Edits to this ${PAGETYPE} will not be visible to readers'
				.. ' until they are accepted by a reviewer or an administrator.'
				.. ' To avoid the need for your edits to be reviewed, you may'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]]. Experienced editors may also'
				.. ' request the [[Wikipedia:Reviewing|reviewer user right]].',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Edits to this ${PAGETYPE} by new and unregistered users'
				.. ' will not be visible to readers until they are accepted by'
				.. ' a reviewer. To avoid the need for your edits to be'
				.. ' reviewed, you may'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].'
		},
	},
	upload = {
		default = {
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but new versions of the file'
				.. ' cannot be uploaded until it is unprotected. You can'
				.. ' request that a new version be uploaded by using a'
				.. ' [[Wikipedia:Edit requests|protected edit request]], or you'
				.. ' can  [[Wikipedia:Requests for page protection|request]]'
				.. ' that the file be unprotected.'
		}
	}
},

--------------------------------------------------------------------------------
-- Protection levels
--------------------------------------------------------------------------------

-- This table provides the data for the ${PROTECTIONLEVEL} parameter, which
-- produces a short label for different protection levels. It is sorted by
-- protection action and protection level, and is checked in the following
-- order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
protectionLevels = {
	edit = {
		default = 'protected',
		templateeditor = 'template-protected',
		extendedconfirmed = 'extended-protected',
		autoconfirmed = 'semi-protected',
	},
	move = {
		default = 'move-protected'
	},
	autoreview = {
	},
	upload = {
		default = 'upload-protected'
	}
},

--------------------------------------------------------------------------------
-- Images
--------------------------------------------------------------------------------

-- This table lists different padlock images for each protection action and
-- protection level. It is used if an image is not specified in any of the
-- banner data tables, and if the page does not satisfy the conditions for using
-- the ['image-filename-indef'] image. It is checked in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
images = {
	edit = {
		default = 'Padlock.svg',
		templateeditor = 'Padlock-pink.svg',
		extendedconfirmed = 'Padlock-blue.svg',
		autoconfirmed = 'Padlock-silver.svg'
	},
	move = {
		default = 'Padlock-olive.svg',
	},
	autoreview = {
		autoconfirmed = 'Padlock-silver-light.svg',
		default = 'Padlock-orange.svg'
	},
	upload = {
		default = 'Padlock-purple.svg'
	}
},

-- Pages with a reason specified in this table will show the special &quot;indef&quot;
-- padlock, defined in the 'image-filename-indef' message, if no expiry is set.
indefImageReasons = {
	template = true
},

--------------------------------------------------------------------------------
-- Image links
--------------------------------------------------------------------------------

-- This table provides the data for the ${IMAGELINK} parameter, which gets
-- the image link for small padlock icons based on the page's protection action
-- and protection level. It is checked in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
imageLinks = {
	edit = {
		default = 'Wikipedia:Protection policy#full',
		templateeditor = 'Wikipedia:Protection policy#template',
		extendedconfirmed = 'Wikipedia:Protection policy#extended',
		autoconfirmed = 'Wikipedia:Protection policy#semi'
	},
	move = {
		default = 'Wikipedia:Protection policy#move'
	},
	autoreview = {
		autoconfirmed = 'Wikipedia:Protection policy#pc1',
		reviewer = 'Wikipedia:Protection policy#pc2'
	},
	upload = {
		default = 'Wikipedia:Protection policy#upload'
	}
},

--------------------------------------------------------------------------------
-- Padlock indicator names
--------------------------------------------------------------------------------

-- This table provides the &quot;name&quot; attribute for the &lt;indicator&gt; extension tag
-- with which small padlock icons are generated. All indicator tags on a page
-- are displayed in alphabetical order based on this attribute, and with
-- indicator tags with duplicate names, the last tag on the page wins.
-- The attribute is chosen based on the protection action; table keys must be a
-- protection action name or the string &quot;default&quot;.
padlockIndicatorNames = {
	autoreview = 'pp-autoreview',
	default = 'pp-default'
},

--------------------------------------------------------------------------------
-- Protection categories
--------------------------------------------------------------------------------

--[[
-- The protection categories are stored in the protectionCategories table.
-- Keys to this table are made up of the following strings:
--
-- 1. the expiry date
-- 2. the namespace
-- 3. the protection reason (e.g. &quot;dispute&quot; or &quot;vandalism&quot;)
-- 4. the protection level (e.g. &quot;sysop&quot; or &quot;autoconfirmed&quot;)
-- 5. the action (e.g. &quot;edit&quot; or &quot;move&quot;)
-- 
-- When the module looks up a category in the table, first it will will check to
-- see a key exists that corresponds to all five parameters. For example, a
-- user page semi-protected from vandalism for two weeks would have the key
-- &quot;temp-user-vandalism-autoconfirmed-edit&quot;. If no match is found, the module
-- changes the first part of the key to &quot;all&quot; and checks the table again. It
-- keeps checking increasingly generic key combinations until it finds the
-- field, or until it reaches the key &quot;all-all-all-all-all&quot;.
--
-- The module uses a binary matrix to determine the order in which to search.
-- This is best demonstrated by a table. In this table, the &quot;0&quot; values
-- represent &quot;all&quot;, and the &quot;1&quot; values represent the original data (e.g.
-- &quot;indef&quot; or &quot;file&quot; or &quot;vandalism&quot;).
--
--        expiry    namespace reason   level     action
-- order
-- 1      1         1         1        1         1
-- 2      0         1         1        1         1
-- 3      1         0         1        1         1
-- 4      0         0         1        1         1
-- 5      1         1         0        1         1
-- 6      0         1         0        1         1
-- 7      1         0         0        1         1
-- 8      0         0         0        1         1
-- 9      1         1         1        0         1
-- 10     0         1         1        0         1
-- 11     1         0         1        0         1
-- 12     0         0         1        0         1
-- 13     1         1         0        0         1
-- 14     0         1         0        0         1
-- 15     1         0         0        0         1
-- 16     0         0         0        0         1
-- 17     1         1         1        1         0
-- 18     0         1         1        1         0
-- 19     1         0         1        1         0
-- 20     0         0         1        1         0
-- 21     1         1         0        1         0
-- 22     0         1         0        1         0
-- 23     1         0         0        1         0
-- 24     0         0         0        1         0
-- 25     1         1         1        0         0
-- 26     0         1         1        0         0
-- 27     1         0         1        0         0
-- 28     0         0         1        0         0
-- 29     1         1         0        0         0
-- 30     0         1         0        0         0
-- 31     1         0         0        0         0
-- 32     0         0         0        0         0
--
-- In this scheme the action has the highest priority, as it is the last
-- to change, and the expiry has the least priority, as it changes the most.
-- The priorities of the expiry, the protection level and the action are
-- fixed, but the priorities of the reason and the namespace can be swapped
-- through the use of the cfg.bannerDataNamespaceHasPriority table.
--]]

-- If the reason specified to the template is listed in this table,
-- namespace data will take priority over reason data in the protectionCategories
-- table.
reasonsWithNamespacePriority = {
	vandalism = true,
},

-- The string to use as a namespace key for the protectionCategories table for each
-- namespace number.
categoryNamespaceKeys = {
	[  2] = 'user',
	[  3] = 'user',
	[  4] = 'project',
	[  6] = 'file',
	[  8] = 'mediawiki',
	[ 10] = 'template',
	[ 12] = 'project',
	[ 14] = 'category',
	[100] = 'portal',
	[828] = 'module',
},

protectionCategories = {
	['all|all|all|all|all']                  = 'Wikipedia protected pages',
	['all|all|office|all|all']               = 'Wikipedia Office-protected pages',
	['all|all|reset|all|all']                = 'Wikipedia Office-protected pages',
	['all|all|dmca|all|all']                 = 'Wikipedia Office-protected pages',
	['all|all|mainpage|all|all']             = 'Wikipedia fully-protected main page files',
	['all|all|all|extendedconfirmed|all']    = 'Wikipedia pages under 30-500 editing restriction',
	['all|all|ecp|extendedconfirmed|all']    = 'Wikipedia pages under 30-500 editing restriction',
	['all|template|all|all|edit']            = 'Wikipedia fully-protected templates',
	['all|all|all|autoconfirmed|edit']       = 'Wikipedia semi-protected pages',
	['indef|all|all|autoconfirmed|edit']     = 'Wikipedia indefinitely semi-protected pages',
	['all|all|blp|autoconfirmed|edit']       = 'Wikipedia indefinitely semi-protected biographies of living people',
	['temp|all|blp|autoconfirmed|edit']      = 'Wikipedia temporarily semi-protected biographies of living people',
	['all|all|dispute|autoconfirmed|edit']   = 'Wikipedia pages semi-protected due to dispute',
	['all|all|sock|autoconfirmed|edit']      = 'Wikipedia pages semi-protected from banned users',
	['all|all|vandalism|autoconfirmed|edit'] = 'Wikipedia pages semi-protected against vandalism',
	['all|category|all|autoconfirmed|edit']  = 'Wikipedia semi-protected categories',
	['all|file|all|autoconfirmed|edit']      = 'Wikipedia semi-protected files',
	['all|portal|all|autoconfirmed|edit']    = 'Wikipedia semi-protected portals',
	['all|project|all|autoconfirmed|edit']   = 'Wikipedia semi-protected project pages',
	['all|talk|all|autoconfirmed|edit']      = 'Wikipedia semi-protected talk pages',
	['all|template|all|autoconfirmed|edit']  = 'Wikipedia semi-protected templates',
	['all|user|all|autoconfirmed|edit']      = 'Wikipedia semi-protected user and user talk pages',
	['all|template|all|templateeditor|edit'] = 'Wikipedia template-protected templates',
	['all|all|blp|sysop|edit']               = 'Wikipedia indefinitely protected biographies of living people',
	['temp|all|blp|sysop|edit']              = 'Wikipedia temporarily protected biographies of living people',
	['all|all|dispute|sysop|edit']           = 'Wikipedia pages protected due to dispute',
	['all|all|sock|sysop|edit']              = 'Wikipedia pages protected from banned users',
	['all|all|vandalism|sysop|edit']         = 'Wikipedia pages protected against vandalism',
	['all|category|all|sysop|edit']          = 'Wikipedia protected categories',
	['all|file|all|sysop|edit']              = 'Wikipedia fully-protected files',
	['all|project|all|sysop|edit']           = 'Wikipedia fully-protected project pages',
	['all|talk|all|sysop|edit']              = 'Wikipedia fully-protected talk pages',
	['all|template|all|sysop|edit']          = 'Wikipedia fully-protected templates',
	['all|user|all|sysop|edit']              = 'Wikipedia protected user and user talk pages',
	['all|module|all|all|edit']              = 'Wikipedia fully-protected modules',
	['all|module|all|templateeditor|edit']   = 'Wikipedia template-protected modules',
	['all|module|all|autoconfirmed|edit']    = 'Wikipedia semi-protected modules',
	['all|all|all|sysop|move']               = 'Wikipedia move-protected pages',
	['indef|all|all|sysop|move']             = 'Wikipedia indefinitely move-protected pages',
	['all|all|dispute|sysop|move']           = 'Wikipedia pages move-protected due to dispute',
	['all|all|vandalism|sysop|move']         = 'Wikipedia pages move-protected due to vandalism',
	['all|portal|all|sysop|move']            = 'Wikipedia move-protected portals',
	['all|portal|all|sysop|move']            = 'Wikipedia move-protected portals',
	['all|project|all|sysop|move']           = 'Wikipedia move-protected project pages',
	['all|talk|all|sysop|move']              = 'Wikipedia move-protected talk pages',
	['all|template|all|sysop|move']          = 'Wikipedia move-protected templates',
	['all|user|all|sysop|move']              = 'Wikipedia move-protected user and user talk pages',
	['all|all|all|autoconfirmed|autoreview'] = 'Wikipedia pending changes protected pages (level 1)',
	['all|all|all|reviewer|autoreview']      = 'Wikipedia pending changes protected pages (level 2)',
	['all|file|all|all|upload']              = 'Wikipedia upload-protected files',
},

--------------------------------------------------------------------------------
-- Expiry category config
--------------------------------------------------------------------------------

-- This table configures the expiry category behaviour for each protection
-- action.
-- * If set to true, setting that action will always categorise the page if
--   an expiry parameter is not set.
-- * If set to false, setting that action will never categorise the page.
-- * If set to nil, the module will categorise the page if:
--   1) an expiry parameter is not set, and
--   2) a reason is provided, and
--   3) the specified reason is not blacklisted in the reasonsWithoutExpiryCheck
--      table.

expiryCheckActions = {
	edit = nil,
	move = false,
	autoreview = true,
	upload = false
},

reasonsWithoutExpiryCheck = {
	blp = true,
	template = true,
},

--------------------------------------------------------------------------------
-- Pagetypes
--------------------------------------------------------------------------------

-- This table produces the page types available with the ${PAGETYPE} parameter.
-- Keys are namespace numbers, or the string &quot;default&quot; for the default value.
pagetypes = {
	[0] = 'article',
	[6] = 'file',
	[10] = 'template',
	[14] = 'category',
	[828] = 'module',
	default = 'page'
},

--------------------------------------------------------------------------------
-- Strings marking indefinite protection
--------------------------------------------------------------------------------

-- This table contains values passed to the expiry parameter that mean the page
-- is protected indefinitely.
indefStrings = {
	['indef'] = true,
	['indefinite'] = true,
	['indefinitely'] = true,
	['infinite'] = true,
},

--------------------------------------------------------------------------------
-- Group hierarchy
--------------------------------------------------------------------------------

-- This table maps each group to all groups that have a superset of the original
-- group's page editing permissions.
hierarchy = {
	sysop = {},
	reviewer = {'sysop'},
	filemover = {'sysop'},
	templateeditor = {'sysop'},
	extendedconfirmed = {'sysop'},
	autoconfirmed = {'reviewer', 'filemover', 'templateeditor', 'extendedconfirmed'},
	user = {'autoconfirmed'},
	['*'] = {'user'}
},

--------------------------------------------------------------------------------
-- Wrapper templates and their default arguments
--------------------------------------------------------------------------------

-- This table contains wrapper templates used with the module, and their
-- default arguments. Templates specified in this table should contain the
-- following invocation, and no other template content:
--
-- {{#invoke:Protection banner|main}}
--
-- If other content is desired, it can be added between
-- &lt;noinclude&gt;...&lt;/noinclude&gt; tags.
--
-- When a user calls one of these wrapper templates, they will use the
-- default arguments automatically. However, users can override any of the
-- arguments.
wrappers = {
	['Template:Pp']                         = {},
	['Template:Pp-30-500']                  = {'ecp'},
	['Template:Pp-blp']                     = {'blp'},
	-- we don't need Template:Pp-create
	['Template:Pp-dispute']                 = {'dispute'},
	['Template:Pp-main-page']               = {'mainpage'},
	['Template:Pp-move']                    = {action = 'move'},
	['Template:Pp-move-dispute']            = {'dispute', action = 'move'},
	-- we don't need Template:Pp-move-indef
	['Template:Pp-move-vandalism']          = {'vandalism', action = 'move'},
	['Template:Pp-office']                  = {'office'},
	['Template:Pp-office-dmca']             = {'dmca'},
	['Template:Pp-pc1']                     = {action = 'autoreview', small = true},
	['Template:Pp-pc2']                     = {action = 'autoreview', small = true},
	['Template:Pp-reset']                   = {'reset'},
	['Template:Pp-semi-indef']              = {small = true},
	['Template:Pp-sock']                    = {'sock'},
	['Template:Pp-template']                = {'template', small = true},
	['Template:Pp-upload']                  = {action = 'upload'},
	['Template:Pp-usertalk']                = {'usertalk'},
	['Template:Pp-vandalism']               = {'vandalism'},
},

--------------------------------------------------------------------------------
-- 
--                                 MESSAGES
-- 
--------------------------------------------------------------------------------

msg = {

--------------------------------------------------------------------------------
-- Intro blurb and intro fragment
--------------------------------------------------------------------------------

-- These messages specify what is produced by the ${INTROBLURB} and
-- ${INTROFRAGMENT} parameters. If the protection is temporary they use the
-- intro-blurb-expiry or intro-fragment-expiry, and if not they use
-- intro-blurb-noexpiry or intro-fragment-noexpiry.
-- It is possible to use banner parameters in these messages.
['intro-blurb-expiry'] = '${PROTECTIONBLURB} until ${EXPIRY}.',
['intro-blurb-noexpiry'] = '${PROTECTIONBLURB}.',
['intro-fragment-expiry'] = '${PROTECTIONBLURB} until ${EXPIRY},',
['intro-fragment-noexpiry'] = '${PROTECTIONBLURB}',

--------------------------------------------------------------------------------
-- Tooltip blurb
--------------------------------------------------------------------------------

-- These messages specify what is produced by the ${TOOLTIPBLURB} parameter.
-- If the protection is temporary the tooltip-blurb-expiry message is used, and
-- if not the tooltip-blurb-noexpiry message is used.
-- It is possible to use banner parameters in these messages.
['tooltip-blurb-expiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} until ${EXPIRY}.',
['tooltip-blurb-noexpiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL}.',
['tooltip-fragment-expiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} until ${EXPIRY},',
['tooltip-fragment-noexpiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL}',

--------------------------------------------------------------------------------
-- Special explanation blurb
--------------------------------------------------------------------------------

-- An explanation blurb for pages that cannot be unprotected, e.g. for pages
-- in the MediaWiki namespace.
-- It is possible to use banner parameters in this message.
['explanation-blurb-nounprotect'] = 'See the [[Wikipedia:Protection policy|'
	.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
	.. ' Please discuss any changes on the ${TALKPAGE}; you'
	.. ' may ${EDITREQUEST} to ask an'
	.. ' [[Wikipedia:Administrators|administrator]] to make an edit if it'
	.. ' is [[Help:Minor edit#When to mark an edit as a minor edit'
	.. '|uncontroversial]] or supported by [[Wikipedia:Consensus'
	.. '|consensus]].',

--------------------------------------------------------------------------------
-- Protection log display values
--------------------------------------------------------------------------------

-- These messages determine the display values for the protection log link
-- or the pending changes log link produced by the ${PROTECTIONLOG} parameter.
-- It is possible to use banner parameters in these messages.
['protection-log-display'] = 'protection log',
['pc-log-display'] = 'pending changes log',

--------------------------------------------------------------------------------
-- Current version display values
--------------------------------------------------------------------------------

-- These messages determine the display values for the page history link
-- or the move log link produced by the ${CURRENTVERSION} parameter.
-- It is possible to use banner parameters in these messages.
['current-version-move-display'] = 'current title',
['current-version-edit-display'] = 'current version',

--------------------------------------------------------------------------------
-- Talk page
--------------------------------------------------------------------------------

-- This message determines the display value of the talk page link produced
-- with the ${TALKPAGE} parameter.
-- It is possible to use banner parameters in this message.
['talk-page-link-display'] = 'talk page',

--------------------------------------------------------------------------------
-- Edit requests
--------------------------------------------------------------------------------

-- This message determines the display value of the edit request link produced
-- with the ${EDITREQUEST} parameter.
-- It is possible to use banner parameters in this message.
['edit-request-display'] = 'submit an edit request',

--------------------------------------------------------------------------------
-- Expiry date format
--------------------------------------------------------------------------------

-- This is the format for the blurb expiry date. It should be valid input for
-- the first parameter of the #time parser function.
['expiry-date-format'] = 'F j, Y',

--------------------------------------------------------------------------------
-- Tracking categories
--------------------------------------------------------------------------------

-- These messages determine which tracking categories the module outputs.
['tracking-category-incorrect'] = 'Wikipedia pages with incorrect protection templates',
['tracking-category-template'] = 'Wikipedia template-protected pages other than templates and modules',

--------------------------------------------------------------------------------
-- Images
--------------------------------------------------------------------------------

-- These are images that are not defined by their protection action and protection level.
['image-filename-indef'] = 'Padlock.svg',
['image-filename-default'] = 'Transparent.gif',

--------------------------------------------------------------------------------
-- End messages
--------------------------------------------------------------------------------
}

--------------------------------------------------------------------------------
-- End configuration
--------------------------------------------------------------------------------
}</text>
      <sha1>g3n16lqu6gf1ld30xbaqxxwq3e4n8ka</sha1>
    </revision>
  </page>
  <page>
    <title>Module:String</title>
    <ns>828</ns>
    <id>38569505</id>
    <revision>
      <id>552254999</id>
      <parentid>540627185</parentid>
      <timestamp>2013-04-26T10:52:01Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>Add &quot;rep&quot; function per request by [[User:]] at [[Wikipedia:Lua requests#Template:Loop and Template:Loop15]]. Copied from sandbox.</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="15731">--[[  

This module is intended to provide access to basic string functions.

Most of the functions provided here can be invoked with named parameters, 
unnamed parameters, or a mixture.  If named parameters are used, Mediawiki will 
automatically remove any leading or trailing whitespace from the parameter.  
Depending on the intended use, it may be advantageous to either preserve or
remove such whitespace.

Global options
    ignore_errors: If set to 'true' or 1, any error condition will result in 
        an empty string being returned rather than an error message.  
        
    error_category: If an error occurs, specifies the name of a category to 
        include with the error message.  The default category is  
        [Category:Errors reported by Module String].
        
    no_category: If set to 'true' or 1, no category will be added if an error
        is generated.
        
Unit tests for this module are available at Module:String/tests.
]]

local str = {}

--[[
len

This function returns the length of the target string.

Usage:
{{#invoke:String|len|target_string|}}
OR
{{#invoke:String|len|s=target_string}}

Parameters
    s: The string whose length to report

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the target string.  
]]
function str.len( frame )
    local new_args = str._getParameters( frame.args, {'s'} );
    local s = new_args['s'] or '';
    return mw.ustring.len( s )
end

--[[
sub

This function returns a substring of the target string at specified indices.

Usage:
{{#invoke:String|sub|target_string|start_index|end_index}}
OR
{{#invoke:String|sub|s=target_string|i=start_index|j=end_index}}

Parameters
    s: The string to return a subset of
    i: The fist index of the substring to return, defaults to 1.
    j: The last index of the string to return, defaults to the last character.
    
The first character of the string is assigned an index of 1.  If either i or j
is a negative value, it is interpreted the same as selecting a character by 
counting from the end of the string.  Hence, a value of -1 is the same as 
selecting the last character of the string.

If the requested indices are out of range for the given string, an error is 
reported.
]]
function str.sub( frame )
    local new_args = str._getParameters( frame.args, { 's', 'i', 'j' } );
    local s = new_args['s'] or '';
    local i = tonumber( new_args['i'] ) or 1;
    local j = tonumber( new_args['j'] ) or -1;
    
    local len = mw.ustring.len( s );

    -- Convert negatives for range checking
    if i &lt; 0 then
        i = len + i + 1;
    end
    if j &lt; 0 then
        j = len + j + 1;
    end
    
    if i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then
        return str._error( 'String subset index out of range' );
    end
    if j &lt; i then
        return str._error( 'String subset indices out of order' );
    end
    
    return mw.ustring.sub( s, i, j )
end

--[[
This function implements that features of {{str sub old}} and is kept in order
to maintain these older templates.
]]
function str.sublength( frame )
    local i = tonumber( frame.args.i ) or 0
    local len = tonumber( frame.args.len )
    return mw.ustring.sub( frame.args.s, i + 1, len and ( i + len ) )
end

--[[
match

This function returns a substring from the source string that matches a 
specified pattern.

Usage:
{{#invoke:String|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}
OR
{{#invoke:String|pos|s=source_string|pattern=pattern_string|start=start_index
    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}

Parameters
    s: The string to search
    pattern: The pattern or string to find within the string
    start: The index within the source string to start the search.  The first
        character of the string has index 1.  Defaults to 1.
    match: In some cases it may be possible to make multiple matches on a single 
        string.  This specifies which match to return, where the first match is 
        match= 1.  If a negative number is specified then a match is returned 
        counting from the last match.  Hence match = -1 is the same as requesting
        the last match.  Defaults to 1.
    plain: A flag indicating that the pattern should be understood as plain
        text.  Defaults to false.
    nomatch: If no match is found, output the &quot;nomatch&quot; value rather than an error.

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from each string.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

If the match_number or start_index are out of range for the string being queried, then
this function generates an error.  An error is also generated if no match is found.
If one adds the parameter ignore_errors=true, then the error will be suppressed and 
an empty string will be returned on any failure.

For information on constructing Lua patterns, a form of [regular expression], see:

* http://www.lua.org/manual/5.1/manual.html#5.4.1
* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns
* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns

]]
function str.match( frame )
    local new_args = str._getParameters( frame.args, {'s', 'pattern', 'start', 'match', 'plain', 'nomatch'} );
    local s = new_args['s'] or '';
    local start = tonumber( new_args['start'] ) or 1;
    local plain_flag = str._getBoolean( new_args['plain'] or false );
    local pattern = new_args['pattern'] or '';
    local match_index = math.floor( tonumber(new_args['match']) or 1 );
    local nomatch = new_args['nomatch'];
    
    if s == '' then
        return str._error( 'Target string is empty' );
    end
    if pattern == '' then
        return str._error( 'Pattern string is empty' );
    end
    if math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len( s ) then
        return str._error( 'Requested start is out of range' );
    end
    if match_index == 0 then
        return str._error( 'Match index is out of range' );
    end
    if plain_flag then
        pattern = str._escapePattern( pattern );
    end
    
    local result
    if match_index == 1 then
        -- Find first match is simple case
        result = mw.ustring.match( s, pattern, start )
    else
        if start &gt; 1 then
            s = mw.ustring.sub( s, start );
        end
        
        local iterator = mw.ustring.gmatch(s, pattern);
        if match_index &gt; 0 then
            -- Forward search
            for w in iterator do
                match_index = match_index - 1;
                if match_index == 0 then
                    result = w;
                    break;
                end
            end    
        else
            -- Reverse search
            local result_table = {};
            local count = 1;
            for w in iterator do
                result_table[count] = w;
                count = count + 1;
            end
            
            result = result_table[ count + match_index ];            
        end
    end        
    
    if result == nil then
        if nomatch == nil then
            return str._error( 'Match not found' );
        else
            return nomatch;
        end
    else
        return result;
    end
end

--[[
pos

This function returns a single character from the target string at position pos.

Usage:
{{#invoke:String|pos|target_string|index_value}}
OR
{{#invoke:String|pos|target=target_string|pos=index_value}}

Parameters
    target: The string to search
    pos: The index for the character to return

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the target string.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

The first character has an index value of 1.

If one requests a negative value, this function will select a character by counting backwards 
from the end of the string.  In other words pos = -1 is the same as asking for the last character.

A requested value of zero, or a value greater than the length of the string returns an error.
]]
function str.pos( frame )
    local new_args = str._getParameters( frame.args, {'target', 'pos'} );
    local target_str = new_args['target'] or '';
    local pos = tonumber( new_args['pos'] ) or 0;

    if pos == 0 or math.abs(pos) &gt; mw.ustring.len( target_str ) then
        return str._error( 'String index out of range' );
    end    
    
    return mw.ustring.sub( target_str, pos, pos );
end

--[[
str_find

This function duplicates the behavior of {{str_find}}, including all of its quirks.
This is provided in order to support existing templates, but is NOT RECOMMENDED for 
new code and templates.  New code is recommended to use the &quot;find&quot; function instead.

Returns the first index in &quot;source&quot; that is a match to &quot;target&quot;.  Indexing is 1-based,
and the function returns -1 if the &quot;target&quot; string is not present in &quot;source&quot;.

Important Note: If the &quot;target&quot; string is empty / missing, this function returns a
value of &quot;1&quot;, which is generally unexpected behavior, and must be accounted for
separatetly.
]]
function str.str_find( frame )
    local new_args = str._getParameters( frame.args, {'source', 'target'} );
    local source_str = new_args['source'] or '';
    local target_str = new_args['target'] or '';

    if target_str == '' then
        return 1;
    end    
    
    local start = mw.ustring.find( source_str, target_str, 1, true )
    if start == nil then
        start = -1
    end
    
    return start
end

--[[
find

This function allows one to search for a target string or pattern within another
string.

Usage:
{{#invoke:String|find|source_str|target_string|start_index|plain_flag}}
OR
{{#invoke:String|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}

Parameters
    source: The string to search
    target: The string or pattern to find within source
    start: The index within the source string to start the search, defaults to 1
    plain: Boolean flag indicating that target should be understood as plain
        text and not as a Lua style regular expression, defaults to true

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the parameter.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

This function returns the first index &gt;= &quot;start&quot; where &quot;target&quot; can be found 
within &quot;source&quot;.  Indices are 1-based.  If &quot;target&quot; is not found, then this 
function returns 0.  If either &quot;source&quot; or &quot;target&quot; are missing / empty, this
function also returns 0.

This function should be safe for UTF-8 strings.
]]
function str.find( frame )
    local new_args = str._getParameters( frame.args, {'source', 'target', 'start', 'plain' } ); 
    local source_str = new_args['source'] or '';
    local pattern = new_args['target'] or '';
    local start_pos = tonumber(new_args['start']) or 1;
    local plain = new_args['plain'] or true;
        
    if source_str == '' or pattern == '' then
        return 0;
    end    
    
    plain = str._getBoolean( plain );

    local start = mw.ustring.find( source_str, pattern, start_pos, plain )
    if start == nil then
        start = 0
    end
    
    return start
end

--[[
replace

This function allows one to replace a target string or pattern within another
string.

Usage:
{{#invoke:String|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}
OR
{{#invoke:String|replace|source=source_string|pattern=pattern_string|replace=replace_string|
   count=replacement_count|plain=plain_flag}}

Parameters
    source: The string to search
    pattern: The string or pattern to find within source
    replace: The replacement text
    count: The number of occurences to replace, defaults to all.
    plain: Boolean flag indicating that pattern should be understood as plain
        text and not as a Lua style regular expression, defaults to true 
]]
function str.replace( frame )
    local new_args = str._getParameters( frame.args, {'source', 'pattern', 'replace', 'count', 'plain' } ); 
    local source_str = new_args['source'] or '';
    local pattern = new_args['pattern'] or '';
    local replace = new_args['replace'] or '';
    local count = tonumber( new_args['count'] );
    local plain = new_args['plain'] or true;
        
    if source_str == '' or pattern == '' then
        return source_str;
    end    
    plain = str._getBoolean( plain );

    if plain then
        pattern = str._escapePattern( pattern );
        replace = mw.ustring.gsub( replace, &quot;%%&quot;, &quot;%%%%&quot; ); --Only need to escape replacement sequences.
    end
    
    local result;

    if count ~= nil then
        result = mw.ustring.gsub( source_str, pattern, replace, count );
    else
        result = mw.ustring.gsub( source_str, pattern, replace );
    end        

    return result;
end

--[[ 
    simple function to pipe string.rep to templates.
]]

function str.rep( frame )
    local repetitions = tonumber( frame.args[2] )
    if not repetitions then 
        return str._error( 'function rep expects a number as second parameter, received &quot;' .. ( frame.args[2] or '' ) .. '&quot;' )
    end
    return string.rep( frame.args[1] or '', repetitions )
end

--[[
Helper function that populates the argument list given that user may need to use a mix of
named and unnamed parameters.  This is relevant because named parameters are not
identical to unnamed parameters due to string trimming, and when dealing with strings
we sometimes want to either preserve or remove that whitespace depending on the application.
]]
function str._getParameters( frame_args, arg_list )
    local new_args = {};
    local index = 1;
    local value;
    
    for i,arg in ipairs( arg_list ) do
        value = frame_args[arg]
        if value == nil then
            value = frame_args[index];
            index = index + 1;
        end
        new_args[arg] = value;
    end
    
    return new_args;
end        

--[[
Helper function to handle error messages.
]]
function str._error( error_str )
    local frame = mw.getCurrentFrame();
    local error_category = frame.args.error_category or 'Errors reported by Module String';
    local ignore_errors = frame.args.ignore_errors or false;
    local no_category = frame.args.no_category or false;
    
    if str._getBoolean(ignore_errors) then
        return '';
    end
    
    local error_str = '&lt;strong class=&quot;error&quot;&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';
    if error_category ~= '' and not str._getBoolean( no_category ) then
        error_str = '[[Category:' .. error_category .. ']]' .. error_str;
    end        
    
    return error_str;
end

--[[
Helper Function to interpret boolean strings
]]
function str._getBoolean( boolean_str )
    local boolean_value;
    
    if type( boolean_str ) == 'string' then
        boolean_str = boolean_str:lower();
        if boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0' 
                or boolean_str == '' then
            boolean_value = false;
        else
            boolean_value = true;
        end    
    elseif type( boolean_str ) == 'boolean' then
        boolean_value = boolean_str;
    else
        error( 'No boolean value found' );
    end    
    return boolean_value
end

--[[
Helper function that escapes all pattern characters so that they will be treated 
as plain text.
]]
function str._escapePattern( pattern_str )
    return mw.ustring.gsub( pattern_str, &quot;([%(%)%.%%%+%-%*%?%[%^%$%]])&quot;, &quot;%%%1&quot; );
end

return str</text>
      <sha1>l0shz7fzxb1bq626nihqwbptk7dfqd5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:TableTools</title>
    <ns>828</ns>
    <id>41371028</id>
    <revision>
      <id>610073853</id>
      <parentid>587870113</parentid>
      <timestamp>2014-05-25T14:11:02Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>fix cleanPattern function - some of the character classes were still being magic even when they were inside the set, so escape them all</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="8030">--[[
------------------------------------------------------------------------------------
--                               TableTools                                       --
--                                                                                --
-- This module includes a number of functions for dealing with Lua tables.        --
-- It is a meta-module, meant to be called from other Lua modules, and should     --
-- not be called directly from #invoke.                                           --
------------------------------------------------------------------------------------
--]]

local libraryUtil = require('libraryUtil')

local p = {}

-- Define often-used variables and functions.
local floor = math.floor
local infinity = math.huge
local checkType = libraryUtil.checkType

--[[
------------------------------------------------------------------------------------
-- isPositiveInteger
--
-- This function returns true if the given value is a positive integer, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a given table key is in the array part or the
-- hash part of a table.
------------------------------------------------------------------------------------
--]]
function p.isPositiveInteger(v)
	if type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- isNan
--
-- This function returns true if the given number is a NaN value, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a value can be a valid table key. Lua will
-- generate an error if a NaN is used as a table key.
------------------------------------------------------------------------------------
--]]
function p.isNan(v)
	if type(v) == 'number' and tostring(v) == '-nan' then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- shallowClone
--
-- This returns a clone of a table. The value returned is a new table, but all
-- subtables and functions are shared. Metamethods are respected, but the returned
-- table will have no metatable of its own.
------------------------------------------------------------------------------------
--]]
function p.shallowClone(t)
	local ret = {}
	for k, v in pairs(t) do
		ret[k] = v
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- removeDuplicates
--
-- This removes duplicate values from an array. Non-positive-integer keys are
-- ignored. The earliest value is kept, and all subsequent duplicate values are
-- removed, but otherwise the array order is unchanged.
------------------------------------------------------------------------------------
--]]
function p.removeDuplicates(t)
	checkType('removeDuplicates', 1, t, 'table')
	local isNan = p.isNan
	local ret, exists = {}, {}
	for i, v in ipairs(t) do
		if isNan(v) then
			-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.
			ret[#ret + 1] = v
		else
			if not exists[v] then
				ret[#ret + 1] = v
				exists[v] = true
			end
		end	
	end
	return ret
end			

--[[
------------------------------------------------------------------------------------
-- numKeys
--
-- This takes a table and returns an array containing the numbers of any numerical
-- keys that have non-nil values, sorted in numerical order.
------------------------------------------------------------------------------------
--]]
function p.numKeys(t)
	checkType('numKeys', 1, t, 'table')
	local isPositiveInteger = p.isPositiveInteger
	local nums = {}
	for k, v in pairs(t) do
		if isPositiveInteger(k) then
			nums[#nums + 1] = k
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- affixNums
--
-- This takes a table and returns an array containing the numbers of keys with the
-- specified prefix and suffix. For example, for the table
-- {a1 = 'foo', a3 = 'bar', a6 = 'baz'} and the prefix &quot;a&quot;, affixNums will
-- return {1, 3, 6}.
------------------------------------------------------------------------------------
--]]
function p.affixNums(t, prefix, suffix)
	checkType('affixNums', 1, t, 'table')
	checkType('affixNums', 2, prefix, 'string', true)
	checkType('affixNums', 3, suffix, 'string', true)

	local function cleanPattern(s)
		-- Cleans a pattern so that the magic characters ()%.[]*+-?^$ are interpreted literally.
		s = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')
		return s
	end

	prefix = prefix or ''
	suffix = suffix or ''
	prefix = cleanPattern(prefix)
	suffix = cleanPattern(suffix)
	local pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'

	local nums = {}
	for k, v in pairs(t) do
		if type(k) == 'string' then			
			local num = mw.ustring.match(k, pattern)
			if num then
				nums[#nums + 1] = tonumber(num)
			end
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- numData
--
-- Given a table with keys like (&quot;foo1&quot;, &quot;bar1&quot;, &quot;foo2&quot;, &quot;baz2&quot;), returns a table
-- of subtables in the format 
-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }
-- Keys that don't end with an integer are stored in a subtable named &quot;other&quot;.
-- The compress option compresses the table so that it can be iterated over with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.numData(t, compress)
	checkType('numData', 1, t, 'table')
	checkType('numData', 2, compress, 'boolean', true)
	local ret = {}
	for k, v in pairs(t) do
		local prefix, num = mw.ustring.match(tostring(k), '^([^0-9]*)([1-9][0-9]*)$')
		if num then
			num = tonumber(num)
			local subtable = ret[num] or {}
			if prefix == '' then
				-- Positional parameters match the blank string; put them at the start of the subtable instead.
				prefix = 1
			end
			subtable[prefix] = v
			ret[num] = subtable
		else
			local subtable = ret.other or {}
			subtable[k] = v
			ret.other = subtable
		end
	end
	if compress then
		local other = ret.other
		ret = p.compressSparseArray(ret)
		ret.other = other
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- compressSparseArray
--
-- This takes an array with one or more nil values, and removes the nil values
-- while preserving the order, so that the array can be safely traversed with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.compressSparseArray(t)
	checkType('compressSparseArray', 1, t, 'table')
	local ret = {}
	local nums = p.numKeys(t)
	for _, num in ipairs(nums) do
		ret[#ret + 1] = t[num]
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- sparseIpairs
--
-- This is an iterator for sparse arrays. It can be used like ipairs, but can
-- handle nil values.
------------------------------------------------------------------------------------
--]]
function p.sparseIpairs(t)
	checkType('sparseIpairs', 1, t, 'table')
	local nums = p.numKeys(t)
	local i = 0
	local lim = #nums
	return function ()
		i = i + 1
		if i &lt;= lim then
			local key = nums[i]
			return key, t[key]
		else
			return nil, nil
		end
	end
end

--[[
------------------------------------------------------------------------------------
-- size
--
-- This returns the size of a key/value pair table. It will also work on arrays,
-- but for arrays it is more efficient to use the # operator.
------------------------------------------------------------------------------------
--]]
function p.size(t)
	checkType('size', 1, t, 'table')
	local i = 0
	for k in pairs(t) do
		i = i + 1
	end
	return i
end

return p</text>
      <sha1>k1omc17qij757n8hd68yihcqxo4biqi</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Unsubst</title>
    <ns>828</ns>
    <id>40945493</id>
    <revision>
      <id>784254967</id>
      <parentid>784251604</parentid>
      <timestamp>2017-06-07T09:01:50Z</timestamp>
      <contributor>
        <username>Jc86035</username>
        <id>17245768</id>
      </contributor>
      <minor/>
      <comment>fix whitespace removal; remove empty parameters after handling aliases and prevent removal of two or fewer consecutive empty parameters in a sequence</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3688">local checkType = require('libraryUtil').checkType

local p = {}

local BODY_PARAM = '$B'

local specialParams = {
	['$params'] = 'parameter list',
	['$aliases'] = 'parameter aliases',
	['$flags'] = 'flags',
	['$B'] = 'template content'
}

function p.main(frame, body)
	-- If we are substing, this function returns a template invocation, and if
	-- not, it returns the template body. The template body can be specified in
	-- the body parameter, or in the template parameter defined in the
	-- BODY_PARAM variable. This function can be called from Lua or from
	-- #invoke.

	-- Return the template body if we aren't substing.
	if not mw.isSubsting() then
		if body ~= nil then
			return body
		elseif frame.args[BODY_PARAM] ~= nil then
			return frame.args[BODY_PARAM]
		else
			error(string.format(
				&quot;no template content specified (use parameter '%s' from #invoke)&quot;,
				BODY_PARAM
			), 2)
		end
	end

	-- Sanity check for the frame object.
	if type(frame) ~= 'table'
		or type(frame.getParent) ~= 'function'
		or not frame:getParent()
	then
		error(
			&quot;argument #1 to 'main' must be a frame object with a parent &quot; ..
			&quot;frame available&quot;,
			2
		)
	end

	-- Find the invocation name.
	local mTemplateInvocation = require('Module:Template invocation')
	local name = mTemplateInvocation.name(frame:getParent():getTitle())

	-- Combine passed args with passed defaults
	local args = {}
	if string.find( ','..(frame.args['$flags'] or '')..',', ',%s*override%s*,' ) then
		for k, v in pairs( frame:getParent().args ) do
			args[k] = v
		end
		for k, v in pairs( frame.args ) do
			if not specialParams[k] then
				if v == '__DATE__' then
					v = mw.getContentLanguage():formatDate( 'F Y' )
				end
				args[k] = v
			end
		end
	else
		for k, v in pairs( frame.args ) do
			if not specialParams[k] then
				if v == '__DATE__' then
					v = mw.getContentLanguage():formatDate( 'F Y' )
				end
				args[k] = v
			end
		end
		for k, v in pairs( frame:getParent().args ) do
			args[k] = v
		end
	end

	-- Trim parameters, if not specified otherwise
	if not string.find( ','..(frame.args['$flags'] or '')..',', ',%s*keep%-whitespace%s*,' ) then
		for k, v in pairs( args ) do args[k] = mw.ustring.match(v, '^%s*(.*)%s*$') or '' end
	end

	-- Pull information from parameter aliases
	local aliases = {}
	if frame.args['$aliases'] then
		local list = mw.text.split( frame.args['$aliases'], '%s*,%s*' )
		for k, v in ipairs( list ) do
			local tmp = mw.text.split( v, '%s*&gt;%s*' )
			aliases[tonumber(mw.ustring.match(tmp[1], '^[1-9][0-9]*$')) or tmp[1]] = ((tonumber(mw.ustring.match(tmp[2], '^[1-9][0-9]*$'))) or tmp[2])
		end
	end
	for k, v in pairs( aliases ) do
		if args[k] and ( not args[v] or args[v] == '' ) then
			args[v] = args[k]
		end
		args[k] = nil
	end

	-- Remove empty parameters, if specified
	if string.find( ','..(frame.args['$flags'] or '')..',', ',%s*remove%-empty%s*,' ) then
		local tmp = 0
		for k, v in ipairs( args ) do
			if v ~= '' or ( args[k+1] and args[k+1] ~= '' ) or ( args[k+2] and args[k+2] ~= '' ) then
				tmp = k
			else
				break
			end
		end
		for k, v in pairs( args ) do
			if v == '' then
				if not (type(k) == 'number' and k &lt; tmp) then args[k] = nil end
			end
		end
	end

	-- Order parameters
	if frame.args['$params'] then
		local params, tmp = mw.text.split( frame.args['$params'], '%s*,%s*' ), {}
		for k, v in ipairs(params) do
			v = tonumber(mw.ustring.match(v, '^[1-9][0-9]*$')) or v
			if args[v] then tmp[v], args[v] = args[v], nil end
		end
		for k, v in pairs(args) do tmp[k], args[k] = args[k], nil end
		args = tmp
	end

	return mTemplateInvocation.invocation(name, args)
end

p[''] = p.main -- For backwards compatibility

return p</text>
      <sha1>dnfbu3ol9y1rn4f58ap519pwafevpgq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Val</title>
    <ns>828</ns>
    <id>44970376</id>
    <revision>
      <id>804711435</id>
      <parentid>804708744</parentid>
      <timestamp>2017-10-10T17:40:37Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:Val]]&quot;: [[WP:High-risk templates|High-risk Lua module]]: 6,000+ transclusions ([Edit=Require extended confirmed access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="22745">-- For Template:Val, output a number and optional unit.
-- Format options include scientific and uncertainty notations.

local data_module  -- name of module defining units

local function valerror(msg, nocat, iswarning)
	-- Return formatted message text for an error or warning.
	-- Can append &quot;#FormattingError&quot; to URL of a page with a problem to find it.
	local anchor = '&lt;span id=&quot;FormattingError&quot;&gt;&lt;/span&gt;'
	local body, category
	if nocat or mw.title.getCurrentTitle():inNamespaces(1, 2, 3, 5) then
		-- No category in Talk, User, User_talk, or Wikipedia_talk.
		category = ''
	else
		category = '[[Category:Pages with incorrect formatting templates use]]'
	end
	if iswarning then
		body = '&lt;sup class=&quot;noprint Inline-Template&quot; style=&quot;white-space:nowrap;&quot;&gt;' ..
			'[[Template:Val|&lt;span title=&quot;' ..
			msg:gsub('&quot;', '&amp;quot;') ..
			'&quot;&gt;warning&lt;/span&gt;]]&lt;/sup&gt;'
	else
		body = '&lt;strong class=&quot;error&quot;&gt;' ..
			'Error in &amp;#123;&amp;#123;[[Template:val|val]]&amp;#125;&amp;#125;: ' ..
			msg ..
			'&lt;/strong&gt;'
	end
	return anchor .. body .. category
end

local range_types = {
	-- No need for '&amp;nbsp;' because nowrap applies to all output.
	[&quot;,&quot;]   = &quot;, &quot;,
	[&quot;by&quot;]  = &quot; by &quot;,
	[&quot;-&quot;]   = &quot;&quot;,
	[&quot;&quot;]   = &quot;&quot;,
	[&quot;and&quot;] = &quot; and &quot;,
	[&quot;or&quot;]  = &quot; or &quot; ,
	[&quot;to&quot;]  = &quot; to &quot; ,
	[&quot;x&quot;]   = &quot;  &quot;,
	[&quot;&quot;]   = &quot;  &quot;,
	[&quot;/&quot;]   = &quot;/&quot;,
}
local range_repeat_unit = {
	-- WP:UNIT wants unit repeated when a &quot;multiply&quot; range is used.
	[&quot;x&quot;]   = true,
	[&quot;&quot;]   = true,
}

local function extract_item(index, numbers, arg)
	-- Extract an item from arg and store the result in numbers[index].
	-- If no argument or if argument is valid, return nil (no error);
	-- otherwise, return an error message.
	-- The stored result is:
	-- * a table for a number (empty if there was no specified number); or
	-- * a string for range text
	-- Input like 1e3 is regarded as invalid for all except argument 1
	-- which accepts e notation as an alternative to the 'e' argument.
	-- Input commas are removed so 1,234 is the same as 1234.
	local which = index
	local function fail(msg)
		local description
		if which == 'e' then
			description = 'exponent parameter (&lt;b&gt;e&lt;/b&gt;)'
		else
			description = 'parameter ' .. which
		end
		return description .. ' ' .. (msg or 'is not a valid number') .. '.'
	end
	local result = {}
	local range = range_types[arg]
	if range then
		if type(index) == 'number' and (index % 2 == 0) then
			if index == 2 then
				if numbers[1] and numbers[1].exp then
					return fail('cannot use a range if the first parameter includes &quot;e&quot;')
				end
				numbers.has_ranges = true
			else
				if not numbers.has_ranges then
					return fail('needs a range in parameter 2')
				end
			end
			numbers[index] = range
			if range_repeat_unit[arg] then
				-- Any &quot;repeat&quot; range forces unit (if any) to be repeated for all items.
				numbers.isrepeat = true
			end
			return nil
		end
		return fail('does not accept a range')
	end
	if numbers.has_ranges and type(index) == 'number' and (index % 2 == 0) then
		return fail('should be a range')
	end
	if index == 'e' then
		local e = numbers[1] and numbers[1].exp
		if e then
			if arg then
				return fail('cannot be used if the first parameter includes &quot;e&quot;')
			end
			arg = e
			which = 1
		end
	end
	if arg and arg ~= '' then
		arg = arg:gsub(',', '')
		if arg:sub(1, 1) == '(' and arg:sub(-1) == ')' then
			result.parens = true
			arg = arg:sub(2, -2)
		end
		local a, b = arg:match('^(.+)[Ee](.+)$')
		if a then
			if index == 1 then
				arg = a
				result.exp = b
			else
				return fail('cannot use e notation')
			end
		end
		local isnegative, propersign, prefix
		local minus = ''
		prefix, arg = arg:match('^(.-)([%d.]+)$')
		local value = tonumber(arg)
		if not value then
			return fail()
		end
		if arg:sub(1, 1) == '.' then
			arg = '0' .. arg
		end
		if prefix == '' then
			-- Ignore.
		elseif prefix == '' then
			-- Display for first number, ignore for others.
			if index == 1 then
				propersign = ''
			end
		elseif prefix == '+' then
			propersign = '+'
		elseif prefix == '-' or prefix == minus then
			propersign = minus
			isnegative = true
		else
			return fail()
		end
		result.clean = arg
		result.sign = propersign or ''
		result.value = isnegative and -value or value
	end
	numbers[index] = result
	return nil  -- no error
end

local function get_args(numbers, args)
	-- Extract arguments and store the results in numbers.
	-- Return nothing (no error) if ok; otherwise, return an error message.
	for index = 1, 99 do
		local which = index
		local arg = args[which]  -- has been trimmed
		if not arg then
			which = 'e'
			arg = args[which]
		end
		local msg = extract_item(which, numbers, arg)
		if msg then
			return msg
		end
		if which == 'e' then
			break
		end
		if index &gt; 19 then
			return 'too many parameters'
		end
	end
	if numbers.has_ranges and (#numbers % 2 == 0) then
		return 'need a number after the last parameter because it is a range.'
	end
end

local function get_scale(text, ucode)
	-- Return the value of text as a number, or throw an error.
	-- This supports extremely basic expressions of the form:
	--   a / b
	--   a ^ b
	-- where a and b are numbers or 'pi'.
	local n = tonumber(text)
	if n then
		return n
	end
	n = text:gsub('pi', math.pi)
	for _, op in ipairs({ '/', '^' }) do
		local a, b = n:match('^(.-)' .. op .. '(.*)$')
		if a then
			a = tonumber(a)
			b = tonumber(b)
			if a and b then
				if op == '/' then
					return a / b
				elseif op == '^' then
					return a ^ b
				end
			end
			break
		end
	end
	error('Unit &quot;' .. ucode .. '&quot; has invalid scale &quot;' .. text .. '&quot;')
end

local function get_builtin_unit(ucode, definitions)
	-- Return table of information for the specified built-in unit, or nil if not known.
	-- Each defined unit code must be followed by two spaces (not tab characters).
	local _, pos = definitions:find('\n' .. ucode .. '  ', 1, true)
	if pos then
		local endline = definitions:find('%s*\n', pos)
		if endline then
			local result = {}
			local n = 0
			local text = definitions:sub(pos + 1, endline - 1):gsub('%s%s+', '\t')
			for item in (text .. '\t'):gmatch('(%S.-)\t') do
				if item == 'ALIAS' then
					result.alias = true
				elseif item == 'ANGLE' then
					result.isangle = true
					result.nospace = true
				elseif item == 'NOSPACE' then
					result.nospace = true
				elseif item == 'SI' then
					result.si = true
				else
					n = n + 1
					if n == 1 then
						local link, symbol = item:match('^%[%[([^|]+)|(.+)%]%]$')
						if link then
							result.symbol = symbol
							result.link = link
							n = 2
						else
							result.symbol = item
						end
					elseif n == 2 then
						result.link = item
					elseif n == 3 then
						result.scale_text = item
						result.scale = get_scale(item, ucode)
					else
						result.more_ignored = item
						break
					end
				end
			end
			if result.si then
				local s = result.symbol
				if ucode == 'mc' .. s or ucode == 'mu' .. s then
					result.ucode = '' .. s  -- unit code for convert should be this
				end
			end
			if n &gt;= 2 or (n &gt;= 1 and result.alias) then
				return result
			end
			-- Ignore invalid definition, treating it as a comment.
		end
	end
end

local function convert_lookup(ucode, value, scaled_top, want_link, si, options)
	local lookup = require('Module:Convert')._unit
	return lookup(ucode, {
			value = value,
			scaled_top = scaled_top,
			link = want_link,
			si = si,
			sort = options.sortable,
		})
end

local function get_unit(ucode, value, scaled_top, options)
	local want_link = options.want_link
	if scaled_top then
		want_link = options.want_per_link
	end
	local data = mw.loadData(data_module)
	local result = options.want_longscale and
		get_builtin_unit(ucode, data.builtin_units_long_scale) or
		get_builtin_unit(ucode, data.builtin_units)
	local si, use_convert
	if result then
		if result.alias then
			ucode = result.symbol
			use_convert = true
		end
		if result.scale then
			-- Setting si means convert will use the unit as given, and the sort key
			-- will be calculated from the value without any extra scaling that may
			-- occur if convert found the unit code. For example, if val defines the
			-- unit 'year' with a scale and if si were not set, convert would also apply
			-- its own scale because convert knows that a year is 31,557,600 seconds.
			si = { result.symbol, result.link }
			value = value * result.scale
		end
		if result.si then
			ucode = result.ucode or ucode
			si = { result.symbol, result.link }
			use_convert = true
		end
	else
		result = {}
		use_convert = true
	end
	local convert_unit = convert_lookup(ucode, value, scaled_top, want_link, si, options)
	result.sortkey = convert_unit.sortspan
	if use_convert then
		result.text = convert_unit.text
		result.scaled_top = convert_unit.scaled_value
	else
		if want_link then
			result.text = '[[' .. result.link .. '|' .. result.symbol .. ']]'
		else
			result.text = result.symbol
		end
		result.scaled_top = value
	end
	return result
end

local function makeunit(value, options)
	-- Return table of information for the requested unit and options, or
	-- return nil if no unit.
	options = options or {}
	local unit
	local ucode = options.u
	local percode = options.per
	if ucode then
		unit = get_unit(ucode, value, nil, options)
	elseif percode then
		unit = { nospace = true, scaled_top = value }
	else
		return nil
	end
	local text = unit.text or ''
	local sortkey = unit.sortkey
	if percode then
		local function bracketed(code, text)
			return code:find('[*./]') and '(' .. text .. ')' or text
		end
		local perunit = get_unit(percode, 1, unit.scaled_top, options)
		text = (ucode and bracketed(ucode, text) or '') ..
				'/' .. bracketed(percode, perunit.text)
		sortkey = perunit.sortkey
	end
	if not (unit.nospace or options.nospace) then
		text = '&amp;nbsp;' .. text
	end
	return { text = text, isangle = unit.isangle, sortkey = sortkey }
end

local function list_units(mode)
	-- Return wikitext to list the built-in units.
	-- A unit code should not contain wikimarkup so don't bother escaping.
	local data = mw.loadData(data_module)
	local definitions = data.builtin_units .. data.builtin_units_long_scale
	local last_was_blank = true
	local n = 0
	local result = {}
	local function add(line)
		if line == '' then
			last_was_blank = true
		else
			if last_was_blank and n &gt; 0 then
				n = n + 1
				result[n] = ''
			end
			last_was_blank = false
			n = n + 1
			result[n] = line
		end
	end
	local si_prefixes = {
		-- These are the prefixes recognized by convert; u is accepted for micro.
		y = 'y',
		z = 'z',
		a = 'a',
		f = 'f',
		p = 'p',
		n = 'n',
		u = '',
		[''] = '',
		m = 'm',
		c = 'c',
		d = 'd',
		da = 'da',
		h = 'h',
		k = 'k',
		M = 'M',
		G = 'G',
		T = 'T',
		P = 'P',
		E = 'E',
		Z = 'Z',
		Y = 'Y',
	}
	local function is_valid(ucode, unit)
		if unit and not unit.more_ignored then
			assert(type(unit.symbol) == 'string' and unit.symbol ~= '')
			if unit.alias then
				if unit.link or unit.scale_text or unit.si then
					return false
				end
			end
			if unit.si then
				if unit.scale_text then
					return false
				end
				ucode = unit.ucode or ucode
				local base = unit.symbol
				if ucode == base then
					unit.display = base
					return true
				end
				local plen = #ucode - #base
				if plen &gt; 0 then
					local prefix = si_prefixes[ucode:sub(1, plen)]
					if prefix and ucode:sub(plen + 1) == base then
						unit.display = prefix .. base
						return true
					end
				end
			else
				unit.display = unit.symbol
				return true
			end
		end
		return false
	end
	local lookup = require('Module:Convert')._unit
	local function show_convert(ucode, unit)
		-- If a built-in unit defines a scale or sets the SI flag, any unit defined in
		-- convert is not used (the scale or SI prefix's scale is used for a sort key).
		-- If there is no scale or SI flag, and the unit is not defined in convert,
		-- the sort key may not be correct; this allows such units to be identified.
		if not (unit.si or unit.scale_text) then
			if mode == 'convert' then
				unit.show = not lookup(unit.alias and unit.symbol or ucode).unknown
				unit.show_text = 'CONVERT'
			elseif mode == 'unknown' then
				unit.show = lookup(unit.alias and unit.symbol or ucode).unknown
				unit.show_text = 'UNKNOWN'
			elseif not unit.alias then
				-- Show convert's scale in square brackets ('[1]' for an unknown unit).
				-- Don't show scale for an alias because it's misleading for temperature
				-- and an alias is probably not useful for anything else.
				local scale = lookup(ucode, {value=1, sort='on'}).scaled_value
				if type(scale) == 'number' then
					scale = string.format('%.5g', scale):gsub('e%+?(%-?)0*(%d+)', 'e%1%2')
				else
					scale = '?'
				end
				unit.show = true
				unit.show_text = '[' .. scale .. ']'
			end
		end
	end
	for line in definitions:gmatch('([^\n]*)\n') do
		local pos, _ = line:find('  ', 1, true)
		if pos then
			local ucode = line:sub(1, pos - 1)
			local unit = get_builtin_unit(ucode, '\n' .. line .. '\n')
			if is_valid(ucode, unit) then
				show_convert(ucode, unit)
				local flags, text
				if unit.alias then
					text = unit.symbol
				else
					text = '[[' .. unit.link .. '|' .. unit.display .. ']]'
				end
				if unit.isangle then
					unit.nospace = nil  -- don't show redundant flag
				end
				for _, f in ipairs({
						{ 'alias', 'ALIAS' },
						{ 'isangle', 'ANGLE' },
						{ 'nospace', 'NOSPACE' },
						{ 'si', 'SI' },
						{ 'scale_text', unit.scale_text },
						{ 'show', unit.show_text },
					}) do
					if unit[f[1]] then
						local t = f[2]
						if t:match('^%u+$') then
							t = '&lt;small&gt;' .. t .. '&lt;/small&gt;'
						end
						if flags then
							flags = flags .. ' ' .. t
						else
							flags = t
						end
					end
				end
				if flags then
					text = text .. '  ' .. flags
				end
				add(ucode .. ' = ' .. text .. '&lt;br /&gt;')
			else
				add(line .. '  &lt;b&gt;invalid definition&lt;/b&gt;&lt;br /&gt;')
			end
		else
			add(line)
		end
	end
	return table.concat(result, '\n')
end

local delimit_groups = require('Module:Gapnum').groups
local function delimit(sign, numstr, fmt)
	-- Return sign and numstr (unsigned digits or '.' only) after formatting.
	-- Four-digit integers are not formatted with gaps.
	fmt = (fmt or ''):lower()
	if fmt == 'none' or (fmt == '' and #numstr == 4 and numstr:match('^%d+$')) then
		return sign .. numstr
	end
	-- Group number by integer and decimal parts.
	-- If there is no decimal part, delimit_groups returns only one table.
	local ipart, dpart = delimit_groups(numstr)
	local result
	if fmt == 'commas' then
		result = sign .. table.concat(ipart, ',')
		if dpart then
			result = result .. '.' .. table.concat(dpart)
		end
	else
		-- Delimit with a small gap by default.
		local groups = {}
		groups[1] = table.remove(ipart, 1)
		for _, v in ipairs(ipart) do
			table.insert(groups, '&lt;span style=&quot;margin-left:.25em;&quot;&gt;' .. v .. '&lt;/span&gt;')
		end
		if dpart then
			table.insert(groups, '.' .. (table.remove(dpart, 1) or ''))
			for _, v in ipairs(dpart) do
				table.insert(groups, '&lt;span style=&quot;margin-left:.25em;&quot;&gt;' .. v .. '&lt;/span&gt;')
			end
		end
		result = sign .. table.concat(groups)
	end
	return result
end

local function sup_sub(sup, sub, align)
	-- Return the same result as Module:Su except val defaults to align=right.
	if align == 'l' or align == 'left' then
		align = 'left'
	elseif align == 'c' or align == 'center' then
		align = 'center'
	else
		align = 'right'
	end
	return '&lt;span style=&quot;display:inline-block;margin-bottom:-0.3em;vertical-align:-0.4em;line-height:1.2em;font-size:85%;text-align:' ..
		align .. ';&quot;&gt;' .. sup .. '&lt;br /&gt;' .. sub .. '&lt;/span&gt;'
end

local function range_text(items, unit_table, options)
	local fmt = options.fmt
	local nend = items.nend or ''
	if items.isrepeat or unit_table.isangle then
		nend = nend .. unit_table.text
	end
	local text = ''
	for i = 1, #items do
		if i % 2 == 0 then
			text = text .. items[i]
		else
			text = text .. delimit(items[i].sign, items[i].clean, fmt) .. nend
		end
	end
	return text
end

local function uncertainty_text(uncertainty, unit_table, options)
	local angle, text, need_parens
	if unit_table.isangle then
		angle = unit_table.text
	end
	local upper = uncertainty.upper or {}
	local lower = uncertainty.lower or {}
	local uncU = upper.clean
	if uncU then
		local fmt = options.fmt
		local uncL = lower.clean
		if uncL then
			uncU = delimit('+', uncU, fmt) .. (upper.errend or '')
			uncL = delimit('', uncL, fmt) .. (lower.errend or '')
			if angle then
				uncU = uncU .. angle
				uncL = uncL .. angle
			end
			text = (angle or '') ..
				'&lt;span style=&quot;margin-left:0.3em;&quot;&gt;' ..
				sup_sub(uncU, uncL, options.align) ..
				'&lt;/span&gt;'
		else
			if upper.parens then
				text = '(' .. uncU .. ')'  -- old template did not delimit
			else
				text = (angle or '') ..
					'&lt;span style=&quot;margin-left:0.3em;margin-right:0.15em;&quot;&gt;&lt;/span&gt;' ..
					delimit('', uncU, fmt)
				need_parens = true
			end
			if uncertainty.errend then
				text = text .. uncertainty.errend
			end
			if angle then
				text = text .. angle
			end
		end
	else
		if angle then
			text = angle
		end
	end
	return text, need_parens
end

local function _main(values, unit_spec, options)
	data_module = 'Module:Val/units' .. (options.sandbox and '/sandbox' or '')
	local action = options.action
	if action then
		if action == 'list' then
			-- Kludge: am using the align parameter (a=xxx) for type of list.
			return list_units(options.align)
		end
		return valerror('invalid action &quot;' .. action .. '&quot;.', options.nocat)
	end
	local number = values.number or (values.numbers and values.numbers[1]) or {}
	local e_10 = options.e or {}
	local novalue = (number.value == nil and e_10.clean == nil)
	local fmt = options.fmt
	local want_sort = true
	local sortable = options.sortable
	if sortable == 'off' or (sortable == nil and novalue) then
		want_sort = false
	elseif sortable == 'debug' then
		-- Same as sortable = 'on' but the sort key is displayed.
	else
		sortable = 'on'
	end
	local sort_value = 1
	if want_sort then
		sort_value = number.value or 1
		if e_10.value and sort_value ~= 0 then
			-- The 'if' avoids {{val|0|e=1234}} giving an invalid sort_value due to overflow.
			sort_value = sort_value * 10^e_10.value
		end
	end
	local unit_table = makeunit(sort_value, {
						u = unit_spec.u,
						want_link = unit_spec.want_link,
						per = unit_spec.per,
						want_per_link = unit_spec.want_per_link,
						nospace = novalue,
						want_longscale = unit_spec.want_longscale,
						sortable = sortable,
					})
	local sortkey
	if unit_table then
		if want_sort then
			sortkey = unit_table.sortkey
		end
	else
		unit_table = { text = '' }
		if want_sort then
			sortkey = convert_lookup('dummy', sort_value, nil, nil, nil, { sortable = sortable }).sortspan
		end
	end
	local final_unit = unit_table.isangle and '' or unit_table.text
	local e_text, n_text, need_parens
	local uncertainty = values.uncertainty
	if uncertainty then
		if number.clean then
			n_text = delimit(number.sign, number.clean, fmt) .. (number.nend or '')
			local text
			text, need_parens = uncertainty_text(uncertainty, unit_table, options)
			if text then
				n_text = n_text .. text
			end
		else
			n_text = ''
		end
	else
		if values.numbers.isrepeat then
			final_unit = ''
		end
		n_text = range_text(values.numbers, unit_table, options)
		need_parens = true
	end
	if e_10.clean then
		if need_parens then
			n_text = '(' .. n_text .. ')'
		end
		e_text = '10&lt;sup&gt;' .. delimit(e_10.sign, e_10.clean, fmt) .. '&lt;/sup&gt;'
		if number.clean then
			e_text = '&lt;span style=&quot;margin-left:0.25em;margin-right:0.15em;&quot;&gt;&lt;/span&gt;' .. e_text
		end
	else
		e_text = ''
	end
	local result =
		(sortkey or '') ..
		(options.prefix or '') ..
		n_text ..
		e_text ..
		final_unit ..
		(options.suffix or '')
	if result ~= '' then
		result = '&lt;span class=&quot;nowrap&quot;&gt;' .. result .. '&lt;/span&gt;'
	end
	return result .. (options.warning or '')
end

local function check_parameters(args, has_ranges, nocat)
	-- Return warning text for the first problem parameter found, or nothing if ok.
	local whitelist = {
		a = true,
		action = true,
		debug = true,
		e = true,
		['end'] = true,
		errend = true,
		['+errend'] = true,
		['-errend'] = true,
		fmt = true,
		['long scale'] = true,
		long_scale = true,
		longscale = true,
		nocategory = true,
		p = true,
		s = true,
		sortable = true,
		u = true,
		ul = true,
		up = true,
		upl = true,
	}
	for k, v in pairs(args) do
		if type(k) == 'string' and not whitelist[k] then
			local warning = 'Val parameter &quot;' .. k .. '=' .. v .. '&quot; is not supported'
			return valerror(warning, nocat, true)
		end
	end
	if not has_ranges and args[4] then
		return valerror('Val parameter 4 ignored', nocat, true)
	end
end

local function main(frame)
	local getArgs = require('Module:Arguments').getArgs
	local args = getArgs(frame, {wrappers = { 'Template:Val', 'Template:Val/sandboxlua' }})
	local nocat = args.nocategory
	local numbers = {}  -- table of number tables, perhaps with range text
	local msg = get_args(numbers, args)
	if msg then
		return valerror(msg, nocat)
	end
	if args.u and args.ul then
		return valerror('unit (&lt;b&gt;u&lt;/b&gt;) and unit with link (&lt;b&gt;ul&lt;/b&gt;) are both specified, only one is allowed.', nocat)
	end
	if args.up and args.upl then
		return valerror('unit per (&lt;b&gt;up&lt;/b&gt;) and unit per with link (&lt;b&gt;upl&lt;/b&gt;) are both specified, only one is allowed.', nocat)
	end
	local values
	if numbers.has_ranges then
		-- Multiple values with range separators but no uncertainty.
		numbers.nend = args['end']
		values = {
			numbers = numbers,
		}
	else
		-- A single value with optional uncertainty.
		local function setfield(i, dst, src)
			local v = args[src]
			if v then
				if numbers[i] then
					numbers[i][dst] = v
				else
					numbers[i] = { [dst] = v }
				end
			end
		end
		setfield(1, 'nend', 'end')
		setfield(2, 'errend', '+errend')
		setfield(3, 'errend', '-errend')
		values = {
			number = numbers[1],
			uncertainty = {
				upper = numbers[2],
				lower = numbers[3],
				errend = args.errend,
			}
		}
	end
	local unit_spec = {
			u = args.ul or args.u,
			want_link = args.ul ~= nil,
			per = args.upl or args.up,
			want_per_link = args.upl ~= nil,
			want_longscale = (args.longscale or args.long_scale or args['long scale']) == 'on',
		}
	local options = {
			action = args.action,
			align = args.a,
			e = numbers.e,
			fmt = args.fmt,
			nocat = nocat,
			prefix = args.p,
			sandbox = string.find(frame:getTitle(), 'sandbox', 1, true) ~= nil,
			sortable = args.sortable or (args.debug == 'yes' and 'debug' or nil),
			suffix = args.s,
			warning = check_parameters(args, numbers.has_ranges, nocat),
		}
	return _main(values, unit_spec, options)
end

return { main = main, _main = _main }</text>
      <sha1>e8fqbimtzjarl2gokdfvw8mazzzqyog</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Val/units</title>
    <ns>828</ns>
    <id>44972360</id>
    <revision>
      <id>804712433</id>
      <parentid>801484683</parentid>
      <timestamp>2017-10-10T17:47:29Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Val/units]]&quot;: [[WP:High-risk templates|High-risk Lua module]]; 1,000+ transclusions ([Edit=Require autoconfirmed or confirmed access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="25084">-- Definitions for units known to val
-- File format is two strings and a return statement with them in it:
-- string in quotes [=[ ... builtin_units ... ]=].
-- string in quotes [=[ ... builtin_units_long_scale ... ]=].
-- First string, builtin_units, is short-scale, second string is long scale.

-- Entry format:
-- One record per line, starting in first column, having 2-4 fields.
-- Field separator: two or more spaces
-- Between first and second fields: two or more spaces
-- Between all other fields: two or more spaces, or one or more tabs
-- Entries without two spaces in them are ignored.

-- There must be a blank line before the first entry and after the last.
-- I.e. the first two and last two characters of the string must be newlines.

-- Format of entry. Two record types:
--
-- One record type is a wikilink:
-- Unit-code        [[ pagename | Symbol-accepts-HTML-only ]]
-- Text-field separator is still two spaces.  Two spaces not allowed in wikilink.
--
-- The other record type is all fields:
-- Unit-code        symbol-accepts-HTML-only        pagename#section-OK
--
-- Plus there is an optional field that goes at the end after two or more spaces.
-- Whether it is a number or an equation or the letters SI,
-- any of these three has the same function: a wikitable sorting &quot;scale&quot;.
-- It is for sorting, and it works for either record type.
-- Difference is SI can't accept HTML. But SI correctly scales any SI prefix.
-- (Optional fields ALIAS and NOSPACE and ANGLE are for advanced users.)

-- &quot;Invalid unit&quot; error:
-- Using SI requires that the symbol equal unit-code, so never allows HTML.
-- Any difference between SI or symbol must be an SI prefix, such as k, M, or G.
-- A space at the end of an entry is an error. No space at each EOL.

local builtin_units = [=[

== Test ==
Foo  [[Hz|&lt;samp&gt;Foo&lt;/samp&gt;]]
Baz  [[Hertz|baz&lt;sub&gt;0&lt;/sub&gt;]]
Baz  [[Kelvins|baz&lt;sub&gt;0&lt;/sub&gt;]]
Bar  [[Foobar|bar&lt;abbr title=&quot;super duper&quot;&gt;0&lt;/abbr&gt;]]
quux  [[Foobar|&lt;span title=&quot;super duper 2&quot;&gt;bar0&lt;/span&gt;]]

== Unsorted units ==
c0  [[Speed of light#Numerical value, notation, and units|''c''&lt;sub&gt;0&lt;/sub&gt;]]
lbf  [[Pound (force)|&lt;span title=&quot;pound-force&quot;&gt;lb&lt;sub&gt;F&lt;/sub&gt;&lt;/span&gt; ]]
C/mol  [[Faraday constant|C/mol]]
C.mol-1  [[Faraday constant|C&amp;sdot;mol&lt;sup&gt;1&lt;/sup&gt;]]
C/kg  [[Roentgen (unit)|C/kg]]
C.kg-1  [[Roentgen (unit)|C&amp;sdot;kg&lt;sup&gt;1&lt;/sup&gt;]]
F.m-1  [[vacuum permittivity|F&amp;sdot;m&lt;sup&gt;1&lt;/sup&gt;]]
F/m  [[vacuum permittivity|F/m]]
e  [[Elementary charge|''e'']]
kB  [[Kilobyte|kB]]  8e3
MB  [[Megabyte|MB]]  8e6
GB  [[Gigabyte|GB]]  8e9
TB  [[Terabyte|TB]]  8e12

== Time and frequency ==
byte/s  [[Data rate units|byte/s]]  8
kB/s  [[Data rate units#Kilobyte per second|&lt;span title=&quot;Kilobytes per second&quot;&gt;kB/s&lt;/span&gt;]]  8e3
MB/s  [[Data rate units#Megabyte per second|&lt;span title=&quot;Megabytes per second&quot;&gt;MB/s&lt;/span&gt;]]  8e6
GB/s  [[Data rate units#Gigabyte per second|&lt;span title=&quot;Gigabytes per second&quot;&gt;GB/s&lt;/span&gt;]]  8e9
TB/s  [[Data rate units#Terabyte per second|&lt;span title=&quot;Terabytes per second&quot;&gt;TB/s&lt;/span&gt;]]  8e12
bit/s  [[Bit per second|bit/s]]  1
bps  [[Bit per second|bit/s]]  1
kbit/s  [[Kilobit per second|kbit/s]]  1e3
Mbit/s  [[Megabit per second|Mbit/s]]  1e6
Gbit/s  [[Gigabit per second|Gbit/s]]  1e9
Tbit/s  [[Terabit per second|Tbit/s]]  1e12
kT/s  [[Transfer (computing)|&lt;span title=&quot;Kilotransfers per second&quot;&gt;kT/s&lt;/span&gt;]]  1e3
MT/s  [[Transfer (computing)|&lt;span title=&quot;Megatransfers per second&quot;&gt;MT/s&lt;/span&gt;]]  1e6
GT/s  [[Transfer (computing)|&lt;span title=&quot;Gigatransfers per second&quot;&gt;GT/s&lt;/span&gt;]]  1e9
year  [[Year|year]]  31557600
years  [[Year|years]]  31557600
yr  [[Year#Symbols y and yr|yr]]  31557600
y  [[Year|y]]  31557600
a  [[Annum|a]]  31557600
Ga  [[Gigaannum|Ga]]  31557600000000000
Ma  [[Megaannum|Ma]]  31557600000000
ka  [[Kiloannum|ka]]  31557600000
kyr  [[kyr|kyr]]  31557600000
kya  [[kyr|kya]]  31557600000
myr  [[myr|myr]]  31557600000000
mya  [[Mya (unit)|mya]]  31557600000000
byr  [[Billion years|byr]]  31557600000000000
bya  [[Billion years ago|bya]]  31557600000000000
Gyr  [[Year#SI prefix multipliers|Ga]]  31557600000000000
BP  [[Before present|BP]]
uBP  [[Radiocarbon dating#Calibration|&lt;sup&gt;14&lt;/sup&gt;C yr BP]]
BC  [[Before Christ|BC]]  -1
AD  [[Anno Domini|AD]]  1
BCE  [[Before the Common Era|BCE]]  -1
CE  [[Common Era|CE]]  1

s-1  [[Second|s&lt;sup&gt;1&lt;/sup&gt;]]
s-2  [[Second|s&lt;sup&gt;2&lt;/sup&gt;]]
s2  [[Second|s&lt;sup&gt;2&lt;/sup&gt;]]

s  [[Second|s]]  SI
as  [[Attosecond|s]]  SI
cs  [[Second|s]]  SI
das  [[Second|s]]  SI
ds  [[Second|s]]  SI
Es  [[Second|s]]  SI
fs  [[Femtosecond|s]]  SI
Gs  [[Second|s]]  SI
hs  [[Second|s]]  SI
ks  [[Second|s]]  SI
ms  [[Millisecond|s]]  SI
s  [[Microsecond|s]]  SI
us  [[Microsecond|s]]  SI
Ms  [[Second|s]]  SI
ns  [[Nanosecond|s]]  SI
ps  [[Picosecond|s]]  SI
Ps  [[Second|s]]  SI
Ts  [[Second|s]]  SI
Ys  [[Second|s]]  SI
ys  [[Yoctosecond|s]]  SI
Zs  [[Second|s]]  SI
zs  [[Zeptosecond|s]]  SI

Hz  [[Hertz|Hz]]  SI
aHz  [[Hertz|Hz]]  SI
cHz  [[Hertz|Hz]]  SI
daHz  [[Hertz|Hz]]  SI
dHz  [[Hertz|Hz]]  SI
EHz  [[Hertz|Hz]]  SI
fHz  [[Hertz|Hz]]  SI
hHz  [[Hertz|Hz]]  SI
GHz  [[Gigahertz|Hz]]  SI
kHz  [[Kilohertz|Hz]]  SI
MHz  [[Megahertz|Hz]]  SI
mHz  [[Hertz|Hz]]  SI
uHz  [[Hertz|Hz]]  SI
Hz  [[Hertz|Hz]]  SI
nHz  [[Hertz|Hz]]  SI
pHz  [[Hertz|Hz]]  SI
PHz  [[Hertz|Hz]]  SI
THz  [[Hertz|Hz]]  SI
yHz  [[Hertz|Hz]]  SI
YHz  [[Hertz|Hz]]  SI
zHz  [[Hertz|Hz]]  SI
ZHz  [[Hertz|Hz]]  SI

== Length, area, volume ==
fb-1  [[Barn (unit)|fb&lt;sup&gt;1&lt;/sup&gt;]]
mas  [[Milliarcsecond|mas]]  pi/648000000
m-1  [[Metre|m&lt;sup&gt;1&lt;/sup&gt;]]
m-2  [[Square metre|m&lt;sup&gt;2&lt;/sup&gt;]]
m-3  [[Cubic metre|m&lt;sup&gt;3&lt;/sup&gt;]]
km2  [[Square kilometre|km&lt;sup&gt;2&lt;/sup&gt;]]
km3  [[Cubic kilometre|km&lt;sup&gt;3&lt;/sup&gt;]]
m2  [[Square metre|m&lt;sup&gt;2&lt;/sup&gt;]]
um2  [[Square metre|m&lt;sup&gt;2&lt;/sup&gt;]]
am2  [[Square metre|am&lt;sup&gt;2&lt;/sup&gt;]]
cm2  [[Square centimetre|cm&lt;sup&gt;2&lt;/sup&gt;]]
dam2  [[Square metre|dam&lt;sup&gt;2&lt;/sup&gt;]]
dm2  [[Square metre|dm&lt;sup&gt;2&lt;/sup&gt;]]
Em2  [[Square metre|Em&lt;sup&gt;2&lt;/sup&gt;]]
fm2  [[Square metre|fm&lt;sup&gt;2&lt;/sup&gt;]]
Gm2  [[Square metre|Gm&lt;sup&gt;2&lt;/sup&gt;]]
hm2  [[Square metre|hm&lt;sup&gt;2&lt;/sup&gt;]]
mm2  [[Square metre|mm&lt;sup&gt;2&lt;/sup&gt;]]
Mm2  [[Square metre|Mm&lt;sup&gt;2&lt;/sup&gt;]]
nm2  [[Square metre|nm&lt;sup&gt;2&lt;/sup&gt;]]
pm2  [[Square metre|pm&lt;sup&gt;2&lt;/sup&gt;]]
Pm2  [[Square metre|Pm&lt;sup&gt;2&lt;/sup&gt;]]
Tm2  [[Square metre|Tm&lt;sup&gt;2&lt;/sup&gt;]]
ym2  [[Square metre|ym&lt;sup&gt;2&lt;/sup&gt;]]
Ym2  [[Square metre|Ym&lt;sup&gt;2&lt;/sup&gt;]]
zm2  [[Square metre|zm&lt;sup&gt;2&lt;/sup&gt;]]
Zm2  [[Square metre|Zm&lt;sup&gt;2&lt;/sup&gt;]]
gal  [[Gallon|gal]]
Gal  [[Gal (unit)|Gal]]
uGal  [[Gal (unit)|Gal]]
Gal  [[Gal (unit)|Gal]]
mGal  [[Gal (unit)|mGal]]

b  [[Barn (unit)|b]]  SI
ab  [[Barn (unit)|b]]  SI
cb  [[Barn (unit)|b]]  SI
dab  [[Barn (unit)|b]]  SI
db  [[Barn (unit)|b]]  SI
Eb  [[Barn (unit)|b]]  SI
fb  [[Barn (unit)|b]]  SI
Gb  [[Barn (unit)|b]]  SI
hb  [[Barn (unit)|b]]  SI
kb  [[Barn (unit)|b]]  SI
mb  [[Barn (unit)|b]]  SI
b  [[Barn (unit)|b]]  SI
ub  [[Barn (unit)|b]]  SI
Mb  [[Barn (unit)|b]]  SI
nb  [[Barn (unit)|b]]  SI
pb  [[Barn (unit)|b]]  SI
Pb  [[Barn (unit)|b]]  SI
Tb  [[Barn (unit)|b]]  SI
Yb  [[Barn (unit)|b]]  SI
yb  [[Barn (unit)|b]]  SI
Zb  [[Barn (unit)|b]]  SI
zb  [[Barn (unit)|b]]  SI

== Velocity and acceleration ==
m/s2  [[Metre per second squared|m/s&lt;sup&gt;2&lt;/sup&gt;]]
m.s-2  [[Metre per second squared|m&amp;sdot;s&lt;sup&gt;2&lt;/sup&gt;]]
m/s  [[Metre per second|m/s]]
km/s  [[Metre per second|km/s]]
m.s-1  [[Metre per second|m&amp;sdot;s&lt;sup&gt;1&lt;/sup&gt;]]
km.s-1  [[Metre per second|km&amp;sdot;s&lt;sup&gt;1&lt;/sup&gt;]]

== Mass and energy ==
lbm  [[Pound (mass)|&lt;span title=&quot;pound-mass&quot;&gt;lb&lt;sub&gt;m&lt;/sub&gt;&lt;/span&gt;]]
uJ  [[Joule|J]]
J.s  [[Joule-second|J&amp;sdot;s]]
kWh  [[Kilowatt hour|kWh]]
kW.h  [[Kilowatt hour|kW&amp;sdot;h]]
kWh  [[Kilowatt hour|kW&amp;sdot;h]]
J/C  [[Volt|J/C]]
J/kg  [[Joule|J/kg]]

g  [[Gram|g]]  SI
ag  [[Attogram|g]]  SI
cg  [[Centigram|g]]  SI
dag  [[Gram|g]]  SI
dg  [[Decigram|g]]  SI
Eg  [[Exagram|g]]  SI
fg  [[Femtogram|g]]  SI
Gg  [[Gigagram|g]]  SI
hg  [[Kilogram#SI multiples|g]]  SI
kg  [[Kilogram|g]]  SI
mcg  [[Microgram|g]]  SI
Mg  [[Megagram|g]]  SI
mg  [[Milligram|g]]  SI
ug  [[Microgram|g]]  SI
g  [[Microgram|g]]  SI
ng  [[Nanogram|g]]  SI
Pg  [[Petagram|g]]  SI
pg  [[Picogram|g]]  SI
Tg  [[Tonne|g]]  SI
yg  [[Yoctogram|g]]  SI
Yg  [[Yottagram|g]]  SI
zg  [[Zeptogram|g]]  SI
Zg  [[Zettagram|g]]  SI

== Pressure and density ==
psi  [[Pounds per square inch|psi]]
g/cm3  [[Gram per cubic centimetre|g/cm&lt;sup&gt;3&lt;/sup&gt;]]
kg/m3  [[Kilogram per cubic metre|kg/m&lt;sup&gt;3&lt;/sup&gt;]]
kg/cm3  [[Density#Formula and common units|kg/cm&lt;sup&gt;3&lt;/sup&gt;]]
g/L  [[Gram per litre|g/L]]
g/l  [[Gram per litre|g/L]]
mcg/dL  [[Gram per litre|g/dL]]
mcg/dl  [[Gram per litre|g/dL]]
mg/mL  [[Gram per litre|mg/mL]]
mg/ml  [[Gram per litre|mg/mL]]
ug/dL  [[Gram per litre|g/dL]]
ug/dl  [[Gram per litre|g/dL]]
g/dL  [[Gram per litre|g/dL]]
g/dl  [[Gram per litre|g/dL]]
mg/L  [[Gram per litre|mg/dL]]
mg/l  [[Gram per litre|&lt;abbr title=&quot;milligrams per liter&quot;&gt;mg/L&lt;/abbr&gt;]]
mg/L  [[Gram per litre|&lt;abbr title=&quot;milligrams per liter&quot;&gt;mg/L&lt;/abbr&gt;]]
mgl-1  [[Gram per litre|&lt;abbr title=&quot;milligrams per liter&quot;&gt;mg/L&lt;/abbr&gt;]]
mgL-1  [[Gram per litre|&lt;abbr title=&quot;milligrams per liter&quot;&gt;mg/L&lt;/abbr&gt;]]

== Temperature ==
degC  C  ALIAS
degF  F  ALIAS
degR  R  ALIAS

K  [[Kelvin|K]]  SI
YK  [[Yottakelvin|K]]  SI
ZK  [[Zettakelvin|K]]  SI
EK  [[Kelvin|K]]  SI
PK  [[Petakelvin|K]]  SI
TK  [[Terakelvin|K]]  SI
GK  [[Gigakelvin|K]]  SI
MK  [[Megakelvin|K]]  SI
kK  [[Kilokelvin|K]]  SI
hK  [[Hectokelvin|K]]  SI
daK  [[Decakelvin|K]]  SI
dK  [[Decikelvin|K]]  SI
cK  [[Centikelvin|K]]  SI
mK  [[Millikelvin|K]]  SI
K  [[Microkelvin|K]]  SI
uK  [[Microkelvin|K]]  SI
nK  [[Nanokelvin|K]]  SI
pK  [[Picokelvin|K]]  SI
fK  [[Femtokelvin|K]]  SI
aK  [[Attokelvin|K]]  SI
zK  [[Zeptokelvin|K]]  SI
yK  [[Yoctokelvin|K]]  SI

== Electromagnetism ==
Wb  [[Weber (unit)|Wb]]
N.A-2  [[Permeability (electromagnetism)|N&amp;sdot;A&lt;sup&gt;2&lt;/sup&gt;]]
H.m-1  [[Permeability (electromagnetism)|Hm&lt;sup&gt;1&lt;/sup&gt;]]
V/m  [[Electric field|V/m]]
V.m-1  [[Electric field|V&amp;sdot;m&lt;sup&gt;1&lt;/sup&gt;]]

C  [[Coulomb|C]]  SI
YC  [[Coulomb|C]]  SI
ZC  [[Coulomb|C]]  SI
EC  [[Coulomb|C]]  SI
PC  [[Coulomb|C]]  SI
TC  [[Coulomb|C]]  SI
GC  [[Coulomb|C]]  SI
MC  [[Coulomb|C]]  SI
kC  [[Coulomb|C]]  SI
hC  [[Coulomb|C]]  SI
daC  [[Coulomb|C]]  SI
dC  [[Coulomb|C]]  SI
cC  [[Coulomb|C]]  SI
mC  [[Coulomb|C]]  SI
C  [[Coulomb|C]]  SI
uC  [[Coulomb|C]]  SI
nC  [[Coulomb|C]]  SI
pC  [[Coulomb|C]]  SI
fC  [[Coulomb|C]]  SI
aC  [[Coulomb|C]]  SI
zC  [[Coulomb|C]]  SI
yC  [[Coulomb|C]]  SI

F  [[Farad|F]]  SI
YF  [[Farad|F]]  SI
ZF  [[Farad|F]]  SI
EF  [[Farad|F]]  SI
PF  [[Farad|F]]  SI
TF  [[Farad|F]]  SI
GF  [[Farad|F]]  SI
MF  [[Farad|F]]  SI
kF  [[Farad|F]]  SI
hF  [[Farad|F]]  SI
daF  [[Farad|F]]  SI
dF  [[Farad|F]]  SI
cF  [[Farad|F]]  SI
mF  [[Farad|F]]  SI
F  [[Farad|F]]  SI
uF  [[Farad|F]]  SI
nF  [[Farad|F]]  SI
pF  [[Farad|F]]  SI
fF  [[Farad|F]]  SI
aF  [[Farad|F]]  SI
zF  [[Farad|F]]  SI
yF  [[Farad|F]]  SI

H  [[Henry (unit)|H]]  SI
YH  [[Henry (unit)|H]]  SI
ZH  [[Henry (unit)|H]]  SI
EH  [[Henry (unit)|H]]  SI
PH  [[Henry (unit)|H]]  SI
TH  [[Henry (unit)|H]]  SI
GH  [[Henry (unit)|H]]  SI
MH  [[Henry (unit)|H]]  SI
kH  [[Henry (unit)|H]]  SI
hH  [[Henry (unit)|H]]  SI
daH  [[Henry (unit)|H]]  SI
dH  [[Henry (unit)|H]]  SI
cH  [[Henry (unit)|H]]  SI
mH  [[Henry (unit)|H]]  SI
H  [[Henry (unit)|H]]  SI
uH  [[Henry (unit)|H]]  SI
nH  [[Henry (unit)|H]]  SI
pH  [[Henry (unit)|H]]  SI
fH  [[Henry (unit)|H]]  SI
aH  [[Henry (unit)|H]]  SI
zH  [[Henry (unit)|H]]  SI
yH  [[Henry (unit)|H]]  SI

A  [[Ampere|A]]  SI
YA  [[Ampere|A]]  SI
ZA  [[Ampere|A]]  SI
EA  [[Ampere|A]]  SI
PA  [[Ampere|A]]  SI
TA  [[Ampere|A]]  SI
GA  [[Ampere|A]]  SI
MA  [[Ampere|A]]  SI
kA  [[Ampere|A]]  SI
hA  [[Ampere|A]]  SI
daA  [[Ampere|A]]  SI
dA  [[Ampere|A]]  SI
cA  [[Ampere|A]]  SI
mA  [[Ampere|A]]  SI
A  [[Ampere|A]]  SI
uA  [[Ampere|A]]  SI
nA  [[Ampere|A]]  SI
pA  [[Ampere|A]]  SI
fA  [[Ampere|A]]  SI
aA  [[Ampere|A]]  SI
zA  [[Ampere|A]]  SI
yA  [[Ampere|A]]  SI

V  [[Volt|V]]  SI
YV  [[Volt|V]]  SI
ZV  [[Volt|V]]  SI
EV  [[Volt|V]]  SI
PV  [[Volt|V]]  SI
TV  [[Volt|V]]  SI
GV  [[Volt|V]]  SI
MV  [[Volt|V]]  SI
kV  [[Volt|V]]  SI
hV  [[Volt|V]]  SI
daV  [[Volt|V]]  SI
dV  [[Volt|V]]  SI
cV  [[Volt|V]]  SI
mV  [[Volt|V]]  SI
V  [[Volt|V]]  SI
uV  [[Volt|V]]  SI
nV  [[Volt|V]]  SI
pV  [[Volt|V]]  SI
fV  [[Volt|V]]  SI
aV  [[Volt|V]]  SI
zV  [[Volt|V]]  SI
yV  [[Volt|V]]  SI

VA  [[Volt-ampere|VA]]  SI
YVA  [[Volt-ampere|VA]]  SI
ZVA  [[Volt-ampere|VA]]  SI
EVA  [[Volt-ampere|VA]]  SI
PVA  [[Volt-ampere|VA]]  SI
TVA  [[Volt-ampere|VA]]  SI
GVA  [[Volt-ampere|VA]]  SI
MVA  [[Volt-ampere|VA]]  SI
kVA  [[Volt-ampere|VA]]  SI
hVA  [[Volt-ampere|VA]]  SI
daVA  [[Volt-ampere|VA]]  SI
dVA  [[Volt-ampere|VA]]  SI
cVA  [[Volt-ampere|VA]]  SI
mVA  [[Volt-ampere|VA]]  SI
VA  [[Volt-ampere|VA]]  SI
uVA  [[Volt-ampere|VA]]  SI
nVA  [[Volt-ampere|VA]]  SI
pVA  [[Volt-ampere|VA]]  SI
fVA  [[Volt-ampere|VA]]  SI
aVA  [[Volt-ampere|VA]]  SI
zVA  [[Volt-ampere|VA]]  SI
yVA  [[Volt-ampere|VA]]  SI

R  [[Rayleigh (unit)|R]]  SI

G  [[Gauss (unit)|G]]  SI
aG  [[Attogauss|G]]  SI
cG  [[Centigauss|G]]  SI
daG  [[Decagauss|G]]  SI
dG  [[Decigauss|G]]  SI
EG  [[Exagauss|G]]  SI
fG  [[Femtogauss|G]]  SI
GG  [[Gigagauss|G]]  SI
hG  [[Hectogauss|G]]  SI
kG  [[Kilogauss|G]]  SI
MG  [[Megagauss|G]]  SI
mG  [[Milligauss|G]]  SI
uG  [[Microgauss|G]]  SI
G  [[Microgauss|G]]  SI
nG  [[Nanogauss|G]]  SI
PG  [[Petagauss|G]]  SI
pG  [[Picogauss|G]]  SI
TG  [[Teragauss|G]]  SI
yG  [[Yoctogauss|G]]  SI
YG  [[Yottagauss|G]]  SI
zG  [[Zeptogauss|G]]  SI
ZG  [[Zettagauss|G]]  SI

T  [[Tesla (unit)|T]]  SI
aT  [[Attotesla|T]]  SI
cT  [[Centitesla|T]]  SI
daT  [[Decatesla|T]]  SI
dT  [[Decitesla|T]]  SI
ET  [[Exatesla|T]]  SI
fT  [[Femtotesla|T]]  SI
GT  [[Gigatesla|T]]  SI
hT  [[Hectotesla|T]]  SI
kT  [[Kilotesla|T]]  SI
MT  [[Megatesla|T]]  SI
mT  [[Millitesla|T]]  SI
uT  [[Microtesla|T]]  SI
T  [[Microtesla|T]]  SI
nT  [[Nanotesla|T]]  SI
PT  [[Petatesla|T]]  SI
pT  [[Picotesla|T]]  SI
TT  [[Teratesla|T]]  SI
yT  [[Yoctotesla|T]]  SI
YT  [[Yottatesla|T]]  SI
zT  [[Zeptotesla|T]]  SI
ZT  [[Zettatesla|T]]  SI

== Astrophysics ==
au  [[Astronomical unit|au]]
c  [[Speed of light|''c'']]
ly  [[Light-year|ly]]
Earth mass  [[Earth mass|''M''&lt;sub&gt;&lt;/sub&gt;]]
Earth radius  [[Earth radius|''R''&lt;sub&gt;&lt;/sub&gt;]]
M_Earth  [[Earth mass|''M''&lt;sub&gt;&lt;/sub&gt;]]
R_Earth  [[Earth radius|''R''&lt;sub&gt;&lt;/sub&gt;]]
M+  [[Earth mass|''M''&lt;sub&gt;&lt;/sub&gt;]]
R+  [[Earth radius|''R''&lt;sub&gt;&lt;/sub&gt;]]
Jupiter mass  [[Jupiter mass|''M''&lt;sub&gt;J&lt;/sub&gt;]]
Jupiter radius  [[Jupiter radius|''R''&lt;sub&gt;J&lt;/sub&gt;]]
M_Jupiter  [[Jupiter mass|''M''&lt;sub&gt;J&lt;/sub&gt;]]
R_Jupiter  [[Jupiter radius|''R''&lt;sub&gt;J&lt;/sub&gt;]]
Solar mass  [[Solar mass|''M''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
solar mass  [[Solar mass|''M''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
M_Solar  [[Solar mass|''M''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
M_solar  [[Solar mass|''M''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
R_Solar  [[Solar radius|''R''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
R_solar  [[Solar radius|''R''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
Solar radius  [[Solar radius|''R''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
solar radius  [[Solar radius|''R''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
Solar luminosity  [[Solar luminosity|''L''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
solar luminosity  [[Solar luminosity|''L''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
L_solar  [[Solar luminosity|''L''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
L_Solar  [[Solar luminosity|''L''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
Lo  [[Solar luminosity|''L''&lt;sub&gt;&amp;#x2609;&lt;/sub&gt;]]
pc2  [[Parsec|pc&lt;sup&gt;2&lt;/sup&gt;]]
pc3  [[Parsec|pc&lt;sup&gt;3&lt;/sup&gt;]]
kpc2  [[Parsec#Parsecs and kiloparsecs|kpc&lt;sup&gt;2&lt;/sup&gt;]]
kpc3  [[Parsec#Parsecs and kiloparsecs|kpc&lt;sup&gt;3&lt;/sup&gt;]]
kpc  [[Parsec#Parsecs and kiloparsecs|kpc]]
Mpc2  [[Parsec#Megaparsecs and gigaparsecs|Mpc&lt;sup&gt;2&lt;/sup&gt;]]
Mpc3  [[Parsec#Megaparsecs and gigaparsecs|Mpc&lt;sup&gt;3&lt;/sup&gt;]]
Mpc  [[Parsec#Megaparsecs and gigaparsecs|Mpc]]
Gpc2  [[Parsec#Megaparsecs and gigaparsecs|Gpc&lt;sup&gt;2&lt;/sup&gt;]]
Gpc3  [[Parsec#Megaparsecs and gigaparsecs|Gpc&lt;sup&gt;3&lt;/sup&gt;]]
Gpc  [[Parsec#Megaparsecs and gigaparsecs|Gpc]]

== Nuclear physics and chemistry ==
cm-1  [[Wavenumber|cm&lt;sup&gt;1&lt;/sup&gt;]]
u  [[Unified atomic mass unit|u]]
osmol  [[Osmole (unit)|osmol]]
Osm  [[Osmole (unit)|Osm]]
M  [[Molarity|M]]
TM  [[Molarity|M]]  SI
GM  [[Molarity|M]]  SI
MM  [[Molarity|M]]  SI
kM  [[Molarity|M]]  SI
hM  [[Molarity|M]]  SI
daM  [[Molarity|M]]  SI
dM  [[Molarity|M]]  SI
cM  [[Molarity|M]]  SI
mM  [[Molarity|M]]  SI
uM  [[Molarity|M]]  1e-6
nM  [[Molarity|M]]  SI
pM  [[Molarity|M]]  SI
kg/mol  [[Molar mass|M]]
kg.mol-1  [[Molar mass|kg&amp;sdot;mol&lt;sup&gt;1&lt;/sup&gt;]]
g/mol  [[Molar mass|g/mol]]
g.mol-1  [[Molar mass|g&amp;sdot;mol&lt;sup&gt;1&lt;/sup&gt;]]
eV/c2  [[Electronvolt#Mass|eV/''c''&lt;sup&gt;2&lt;/sup&gt;]]
keV/c2  [[Electronvolt#Mass|keV/''c''&lt;sup&gt;2&lt;/sup&gt;]]
MeV/c2  [[Electronvolt#Mass|MeV/''c''&lt;sup&gt;2&lt;/sup&gt;]]
GeV/c2  [[Electronvolt#Mass|GeV/''c''&lt;sup&gt;2&lt;/sup&gt;]]
TeV/c2  [[Electronvolt#Mass|TeV/''c''&lt;sup&gt;2&lt;/sup&gt;]]
N  [[Nuclear magneton|&lt;span style=&quot;display:inline-block;margin-bottom:-0.3em;vertical-align:-0.4em;line-height:1.2em;font-size:85%;text-align:left&quot;&gt;&lt;br /&gt;N&lt;/span&gt;]]
B  [[Bohr magneton|&lt;span style=&quot;display:inline-block;margin-bottom:-0.3em;vertical-align:-0.4em;line-height:1.2em;font-size:85%;text-align:left&quot;&gt;&lt;br /&gt;B&lt;/span&gt;]]
eV  [[Electronvolt|eV]]
mev  [[Electronvolt|meV]]
keV  [[Electronvolt|keV]]
MeV  [[Electronvolt|MeV]]
GeV  [[Electronvolt|GeV]]
TeV  [[Electronvolt|TeV]]
J/mol  [[Joule per mole|J/mol]]
J.mol-1  [[Joule per mole|J&amp;sdot;mol&lt;sup&gt;1&lt;/sup&gt;]]
kJ.mol-1  [[Joule per mole|kJ&amp;sdot;mol&lt;sup&gt;1&lt;/sup&gt;]]
kJ/mol  [[Joule per mole|kJ/mol]]
MJ.mol-1  [[Joule per mole|MJ&amp;sdot;mol&lt;sup&gt;1&lt;/sup&gt;]]
MJ/mol  [[Joule per mole|MJ/mol]]
GJ/mol  [[Joule per mole|GJ/mol]]
GJ.mol-1  [[Joule per mole|GJ&amp;sdot;mol&lt;sup&gt;1&lt;/sup&gt;]]
TJ.mol-1  [[Joule per mole|TJ&amp;sdot;mol&lt;sup&gt;1&lt;/sup&gt;]]
TJ/mol  [[Joule per mole|TJ/mol]]

== Numbers and phrases ==
pp  [[Page (paper)|pp]]
ppb  [[Parts per billion|ppb]]  1e-9
ppm  [[Parts per million|ppm]]  1e-6
billiard  [[Orders of magnitude (numbers)#1015|billiard]]  1e15
billion  [[1,000,000,000|billion]]  1e9
billionth  [[1,000,000,000|billionth]]  1e-9
billionths  [[1,000,000,000|billionths]]  1e-9
decilliard  [[Orders of magnitude (numbers)#1063|decilliard]]  1e63
decillion  [[Orders of magnitude (numbers)#1033|decillion]]  1e33
decillionth  [[Orders of magnitude (numbers)#1033|decillionth]]  1e-33
decillionths  [[Orders of magnitude (numbers)#1033|decillionths]]  1e-33
milliard  [[1,000,000,000|milliard]]  1e9
million  [[Million|million]]  1e6
millionth  [[Million|millionth]]  1e-6
millionths  [[Million|millionths]]  1e-6
nonilliard  [[Orders of magnitude (numbers)#1057|nonilliard]]  1e57
nonillion  [[Orders of magnitude (numbers)#1030|nonillion]]  1e30
nonillionth  [[Orders of magnitude (numbers)#1030|nonillionth]]  1e-30
nonillionths  [[Orders of magnitude (numbers)#1030|nonillionths]]  1e-30
octilliard  [[Orders of magnitude (numbers)#1051|octilliard]]  1e51
octillion  [[Orders of magnitude (numbers)#1027|octillion]]  1e27
octillionth  [[Orders of magnitude (numbers)#1027|octillionth]]  1e-27
octillionths  [[Orders of magnitude (numbers)#1027|octillionths]]  1e-27
quadrilliard  [[Orders of magnitude (numbers)#1027|quadrilliard]]  1e27
quadrillion  [[Orders of magnitude (numbers)#1015|quadrillion]]  1e15
quadrillionth  [[Orders of magnitude (numbers)#1015|quadrillionth]]  1e-15
quadrillionths  [[Orders of magnitude (numbers)#1015|quadrillionths]]  1e-15
quintilliard  [[Orders of magnitude (numbers)#1033|quintilliard]]  1e33
quintillion  [[Orders of magnitude (numbers)#1018|quintillion]]  1e18
quintillionth  [[Orders of magnitude (numbers)#1018|quintillionth]]  1e-18
quintillionths  [[Orders of magnitude (numbers)#1018|quintillionths]]  1e-18
septilliard  [[Orders of magnitude (numbers)#1045|septilliard]]  1e45
septillion  [[Orders of magnitude (numbers)#1024|septillion]]  1e24
septillionth  [[Orders of magnitude (numbers)#1024|septillionth]]  1e-24
septillionths  [[Orders of magnitude (numbers)#1024|septillionths]]  1e-24
sextilliard  [[Orders of magnitude (numbers)#1039|sextilliard]]  1e39
sextillion  [[Orders of magnitude (numbers)#1021|sextillion]]  1e21
sextillionth  [[Orders of magnitude (numbers)#1021|sextillionth]]  1e-21
sextillionths  [[Orders of magnitude (numbers)#1021|sextillionths]]  1e-21
trilliard  [[Orders of magnitude (numbers)#1021|trilliard]]  1e21
trillion  [[Orders of magnitude (numbers)#1012|trillion]]  1e12
trillionth  [[Orders of magnitude (numbers)#1012|trillionth]]  1e-12
trillionths  [[Orders of magnitude (numbers)#1012|trillionths]]  1e-12

== Angles ==
%                  %                                     Percent                                ANGLE   0.01
percent            %                                     Percent                                ANGLE   0.01
per cent           %                                     Percent                                ANGLE   0.01
                                                       Per mil                                ANGLE   1e-3
per mil                                                 Per mil                                ANGLE   1e-3
per mill                                                Per mil                                ANGLE   1e-3
per mille                                               Per mil                                ANGLE   1e-3
permil                                                  Per mil                                ANGLE   1e-3
permill                                                 Per mil                                ANGLE   1e-3
permille                                                Per mil                                ANGLE   1e-3
                                                       Degree (angle)                         ANGLE   pi/180
deg                                                     Degree (angle)                         ANGLE   pi/180
'                                                       Minute of arc                          ANGLE   pi/10800
                                                       Minute of arc                          ANGLE   pi/10800
arcmin                                                  Minute of arc                          ANGLE   pi/10800
arcminute                                               Minute of arc                          ANGLE   pi/10800
&quot;                                                       Second of arc                          ANGLE   pi/648000
                                                       Second of arc                          ANGLE   pi/648000
arcsec                                                  Second of arc                          ANGLE   pi/648000
arcsecond                                               Second of arc                          ANGLE   pi/648000

]=]

-- If val has &quot;|long scale=on&quot; the following definitions are used
-- (then, if not found here, the normal definitions are used).
-- Unit code  [[Link|Symbol]]  Flags/Scale
local builtin_units_long_scale = [=[

== Long scale numbers and phrases ==
billion  [[Orders of magnitude (numbers)#1012|billion]]  1e12
billionth  [[Orders of magnitude (numbers)#1012|billionth]]  1e-12
billionths  [[Orders of magnitude (numbers)#1012|billionths]]  1e-12
decillion  [[Orders of magnitude (numbers)#1060|decillion]]  1e60
decillionth  [[Orders of magnitude (numbers)#1060|decillionth]]  1e-60
decillionths  [[Orders of magnitude (numbers)#1060|decillionths]]  1e-60
nonillion  [[Orders of magnitude (numbers)#1054|nonillion]]  1e54
nonillionth  [[Orders of magnitude (numbers)#1054|nonillionth]]  1e-54
nonillionths  [[Orders of magnitude (numbers)#1054|nonillionths]]  1e-54
octillion  [[Orders of magnitude (numbers)#1048|octillion]]  1e48
octillionth  [[Orders of magnitude (numbers)#1048|octillionth]]  1e-48
octillionths  [[Orders of magnitude (numbers)#1048|octillionths]]  1e-48
quadrillion  [[Orders of magnitude (numbers)#1024|quadrillion]]  1e24
quadrillionth  [[Orders of magnitude (numbers)#1024|quadrillionth]]  1e-24
quadrillionths  [[Orders of magnitude (numbers)#1024|quadrillionths]]  1e-24
quintillion  [[Orders of magnitude (numbers)#1030|quintillion]]  1e30
quintillionth  [[Orders of magnitude (numbers)#1030|quintillionth]]  1e-30
quintillionths  [[Orders of magnitude (numbers)#1030|quintillionths]]  1e-30
septillion  [[Orders of magnitude (numbers)#1042|septillion]]  1e42
septillionth  [[Orders of magnitude (numbers)#1042|septillionth]]  1e-42
septillionths  [[Orders of magnitude (numbers)#1042|septillionths]]  1e-42
sextillion  [[Orders of magnitude (numbers)#1036|sextillion]]  1e36
sextillionth  [[Orders of magnitude (numbers)#1036|sextillionth]]  1e-36
sextillionths  [[Orders of magnitude (numbers)#1036|sextillionths]]  1e-36
trillion  [[Orders of magnitude (numbers)#1018|trillion]]  1e18
trillionth  [[Orders of magnitude (numbers)#1018|trillionth]]  1e-18
trillionths  [[Orders of magnitude (numbers)#1018|trillionths]]  1e-18

]=]

return { builtin_units = builtin_units, builtin_units_long_scale = builtin_units_long_scale }</text>
      <sha1>lbia4lzl6y02plmcfz8hunp046ar9d0</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Yesno</title>
    <ns>828</ns>
    <id>38665046</id>
    <revision>
      <id>659459801</id>
      <parentid>604718900</parentid>
      <timestamp>2015-04-27T10:43:30Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <comment>recognise &quot;t&quot; for true and &quot;f&quot; for false, per request</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="710">-- Function allowing for consistent treatment of boolean-like wikitext input.
-- It works similarly to the template {{yesno}}.

return function (val, default)
	-- If your wiki uses non-ascii characters for any of &quot;yes&quot;, &quot;no&quot;, etc., you
	-- should replace &quot;val:lower()&quot; with &quot;mw.ustring.lower(val)&quot; in the
	-- following line.
	val = type(val) == 'string' and val:lower() or val
	if val == nil then
		return nil
	elseif val == true 
		or val == 'yes'
		or val == 'y'
		or val == 'true'
		or val == 't'
		or tonumber(val) == 1
	then
		return true
	elseif val == false
		or val == 'no'
		or val == 'n'
		or val == 'false'
		or val == 'f'
		or tonumber(val) == 0
	then
		return false
	else
		return default
	end
end</text>
      <sha1>266x81qzpz9iq1b5gft4zsdy5qzbnwi</sha1>
    </revision>
  </page>
</mediawiki>
