<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.31.0-wmf.4</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>World War I</title>
    <ns>0</ns>
    <id>4764461</id>
    <revision>
      <id>806872759</id>
      <parentid>806729327</parentid>
      <timestamp>2017-10-24T17:44:35Z</timestamp>
      <contributor>
        <username>Volunteer1234</username>
        <id>30845620</id>
      </contributor>
      <comment>used</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="264145">{{pp-move-indef}}
{{pp-semi-indef}}
{{redirect-multi|3|World War One|Great War|WW1|other uses|World War One (disambiguation)|and|Great War (disambiguation)|and|WW1 (album)}}
{{Use dmy dates|date=July 2017}}
{{Use British English |date=July 2014}}
{{Infobox military conflict
|conflict=World War I
|image=WWImontage.jpg
|image_size = 300px
|caption= '''Clockwise from the top''': The aftermath of shelling during the [[Battle of the Somme]], [[Mark V tank]]s cross the [[Hindenburg Line]], {{HMS|Irresistible|1898|6}} sinks after hitting a [[naval mine|mine]] in the [[Naval operations in the Dardanelles Campaign|Dardanelles]], a British [[Vickers machine gun]] crew wears [[gas mask]]s during the Battle of the Somme, [[Albatros D.III]] fighters of [[Jagdstaffel 11]]
|date={{start and end dates|1914|7|28|1918|11|11|df=yes}}&lt;br/&gt;({{Age in years, months, weeks and days|month1=7|day1=28|year1=1914|month2=11|day2=11|year2=1918}})
{{Collapsible list
| bullets = yes
| title = Peace treaties
|[[Treaty of Versailles]]&lt;br/&gt;Signed 28 June 1919&lt;br/&gt;({{Age in years, months, weeks and days|month1=7|day1=28|year1=1914|month2=6|day2=28|year2=1919}}){{efn|The United States did not ratify any of the treaties agreed to at the [[Paris Peace Conference, 1919|Paris Peace Conference]].}}&lt;!--Since World War I didn't actually end for most states until the Paris Peace Conference treaties were signed...--&gt;
|[[Treaty of Saint-Germain-en-Laye (1919)|Treaty of Saint-Germain-en-Laye]]&lt;br/&gt;Signed 10 September 1919&lt;br/&gt;({{Age in years, months, weeks and days|month1=7|day1=28|year1=1914|month2=9|day2=10|year2=1919}})
|[[Treaty of Neuilly-sur-Seine]]&lt;br/&gt;Signed 27 November 1919&lt;br/&gt;({{Age in years, months, weeks and days|month1=10|day1=14|year1=1915|month2=11|day2=27|year2=1919}}){{efn|Bulgaria joined the Central Powers on 14 October 1915.}}
|[[Treaty of Trianon]]&lt;br/&gt;Signed 4 June 1920&lt;br/&gt;({{Age in years, months, weeks and days|month1=7|day1=28|year1=1914|month2=6|day2=4|year2=1920}})
|[[Treaty of Svres]]&lt;br/&gt;Signed 10 August 1920&lt;br/&gt;({{Age in years, months, weeks and days|month1=7|day1=28|year1=1914|month2=8|day2=10|year2=1920}}){{efn|The Ottoman Empire agreed to a secret alliance with Germany on 2 August 1914. It joined the war on the side of the Central Powers on 29 October 1914.}}
|[[U.S.Austrian Peace Treaty (1921)|United StatesAustria Peace Treaty]]&lt;br/&gt;Signed 24 August 1921&lt;br/&gt;({{Age in years, months, weeks and days|month1=12|day1=7|year1=1917|month2=8|day2=24|year2=1921}}){{efn|The United States [[American entry into World War I#Austria-Hungary|declared war on Austria-Hungary]] on 7 December 1917.}}{{efn|[[First Republic of Austria|Austria]] was considered one of the [[successor states]] to Austria-Hungary.}}
|[[U.S.German Peace Treaty (1921)|United StatesGermany Peace Treaty]]&lt;br/&gt;Signed 25 August 1921&lt;br/&gt;({{Age in years, months, weeks and days|month1=4|day1=6|year1=1917|month2=8|day2=25|year2=1921}}){{efn|The United States [[United States declaration of war on Germany (1917)|declared war on Germany]] on 6 April 1917.}}
|[[U.S.Hungarian Peace Treaty (1921)|United StatesHungary Peace Treaty]]&lt;br/&gt;Signed 29 August 1921&lt;br/&gt;({{Age in years, months, weeks and days|month1=12|day1=7|year1=1917|month2=8|day2=29|year2=1921}}){{efn|[[Kingdom of Hungary (192046)|Hungary]] was considered one of the successor states to Austria-Hungary.}}
|[[Treaty of Lausanne]]&lt;br/&gt;Signed 24 July 1923&lt;br/&gt;({{Age in years, months, weeks and days|month1=10|day1=29|year1=1914|month2=7|day2=24|year2=1923}}){{efn|Although the [[Treaty of Svres]] was intended to end the war between the Allies and the Ottoman Empire, the Allies and the [[Republic of Turkey]], the successor state of the Ottoman Empire, agreed to the Treaty of Lausanne.}}
}}
|place=Europe, Africa, the Middle East, the [[Pacific Islands]], China, Indian Ocean, and off the coast of South and North America
|casus=[[Assassination of Archduke Franz Ferdinand]] (28 June) followed by Austro-Hungarian declaration of war on [[Kingdom of Serbia]] (28 July) and Russian mobilisation against [[Austria-Hungary]] (29 July).
|result=[[Allies of World War I|Allied]] victory
* [[Central Powers]]' victory on the [[Eastern Front (World War I)|Eastern Front]] nullified by defeat on the [[Western Front (World War I)|Western Front]]
* Fall of the [[German Empire|German]], [[Russian Empire|Russian]], [[Ottoman Empire|Ottoman]], and [[Austria-Hungary|Austro-Hungarian]] empires
* [[Russian Civil War]] and foundation of [[Soviet Union]]
* Formation of new countries in Europe and the Middle East
* Transfer of [[German colonies]] and [[Partitioning of the Ottoman Empire|regions of the former Ottoman Empire]] to other powers
* Establishment of the [[League of Nations]]. ([[World War I#Aftermath|more...]])
|combatant1='''[[Allies of World War I|Allied Powers]]'''{{plainlist|
*{{flagcountry|French Third Republic}}
*{{flagcountry|British Empire}}
*{{flagcountry|Russian Empire}} {{small|(until 1917)}}
*{{flagcountry|Kingdom of Serbia}}
*{{flagcountry|Kingdom of Montenegro}}
*{{flag|Belgium}}
*{{flagcountry|Empire of Japan}}
*{{flagcountry|Kingdom of Italy}} {{small|(191518)}}
*{{flagcountry|First Portuguese Republic}} {{small|(191618)}}
*{{flagcountry|Kingdom of Romania}} {{small|(191618)}}
*{{flagicon image|Flag_of_Hejaz_1917.svg}} [[Kingdom of Hejaz|Hejaz]] {{small|(191618)}}
*{{flagcountry|Republic of China (19121949)|1912}} {{small|(191718)}}
*{{flag|United States|1912}} {{small|(191718)}}
*{{flagcountry|Kingdom of Greece}} {{small|(191718)}}
*{{flagicon|Thailand}} [[Thailand|Siam]] {{small|(191718)}}
*{{small|[[Allies of World War I|...''and others'']]}}}}
|combatant2='''[[Central Powers]]'''{{plainlist|
*{{flag|German Empire}}
*{{flag|Austria-Hungary}}
*{{flag|Ottoman Empire}}
*{{flagcountry|Kingdom of Bulgaria}} {{small|(191518)}}
*{{small|[[Central Powers#Co-belligerents|...''and co-belligerents'']]}}}}
|commander1='''[[Allies of World War I#Leaders|Allied leaders]]'''{{plainlist|
*{{flagicon|French Third Republic}} [[Georges Clemenceau]]
*{{flagicon|French Third Republic}} [[Raymond Poincar]]
*{{flagicon|British Empire}} [[George V]]
*{{flagicon|British Empire}} [[H. H. Asquith]]
*{{flagicon|British Empire}} [[David Lloyd George]]
*{{flagicon|Russian Empire}} [[Nicholas II of Russia|Nicholas II]]
*{{flagicon|Kingdom of Italy}} [[Vittorio Orlando]]
*{{flagicon|Kingdom of Italy}} [[Victor Emmanuel III]]
*{{flagicon|United States|1912}} [[Woodrow Wilson]]
*{{flagicon|Empire of Japan}} [[Emperor Taish|Yoshihito]]
*{{flagicon|Kingdom of Serbia}} [[Peter I of Serbia|Peter I]]
*{{flagicon|Kingdom of Romania}} [[Ferdinand I of Romania|Ferdinand I]]
*{{flagicon|China|1912}} [[Duan Qirui]]
*{{flagicon|Kingdom of Greece}} [[Constantine I of Greece|Constantine I]]
*{{flagicon|Kingdom of Greece}} [[Eleftherios Venizelos]]
*{{small|[[Allies of World War I#Leaders|...''and others'']]}}}}
|commander2='''[[Central Powers#Leaders|Central Powers leaders]]'''{{plainlist|
*{{flagicon|German Empire}} [[Wilhelm II, German Emperor|Wilhelm II]]
*{{flagicon|Austria-Hungary}} [[Franz Joseph I of Austria|Franz Joseph I]] 
*{{flagicon|Austria-Hungary}} [[Charles I of Austria|Karl I]]
*{{flagicon|Ottoman Empire}} [[Mehmed V]] 
*{{flagicon|Ottoman Empire}} [[Three Pashas]]
*{{flagicon|Kingdom of Bulgaria}} [[Ferdinand I of Bulgaria|Ferdinand I]]
*{{small|[[Leaders of the Central Powers of World War I|...''and others'']]}}}}
|strength1={{plainlist|
*{{flagicon|Russian Empire}} 12,000,000
*{{flagicon|British Empire}} 8,841,541&lt;ref&gt;{{cite web|url=http://www.1914-1918.net/faq.htm|title=British Army statistics of the Great War|publisher=1914-1918.net|accessdate=13 December 2011}}&lt;/ref&gt;&lt;ref&gt;Figures are for the British Empire&lt;/ref&gt;
*{{flagicon|French Third Republic}} 8,660,000&lt;ref&gt;Figures are for Metropolitan France and its colonies&lt;/ref&gt;
*{{flagicon|Kingdom of Italy}} 5,615,140
*{{flagicon|United States|1912}} 4,743,826
*{{flagicon|Kingdom of Romania}} 1,234,000
*{{flagicon|Empire of Japan}} 800,000
*{{flagicon|Kingdom of Serbia}} 707,343
*{{flagicon|Belgium}} 380,000
*{{flagicon|Kingdom of Greece}} 250,000
*{{flagicon|Kingdom of Montenegro}} 50,000}}
''Total: 42,959,850''&lt;ref name=&quot;Tucker 2005 273&quot;&gt;{{harvnb|Tucker|Roberts|2005|p=273}}&lt;/ref&gt;
|strength2={{plainlist|
*{{flagicon|German Empire}} 13,250,000
*{{flagicon|Austria-Hungary}} 7,800,000
*{{flagicon|Ottoman Empire}} 2,998,321
*{{flagicon|Kingdom of Bulgaria}} 1,200,000}}
''Total: 25,248,321''&lt;ref name=&quot;Tucker 2005 273&quot;/&gt;
|casualties1={{plainlist|
*'''Military dead:''' 5,525,000
*'''Military wounded:''' 12,831,500
*'''Military missing:''' 4,121,000
*'''Total:''' 22,477,500&amp;nbsp;KIA, WIA or MIA}}
{{small|[[World War I casualties|...''further details''.]]}}
|casualties2={{plainlist|
*'''Military dead:''' 4,386,000
*'''Military wounded:''' 8,388,000
*'''Military missing:''' 3,629,000
*'''Total:''' 16,403,000&amp;nbsp;KIA, WIA or MIA}}
{{small|[[World War I casualties|...''further details''.]]}}
|campaignbox={{Campaignbox World War I}}
}}
{{Events leading to World War I}}

'''World War I''' ('''WWI''' or '''WW1'''), also known as the '''First World War''', the '''Great War''', or the '''War to End All Wars''',&lt;ref&gt;{{cite news |date=10 November 1998 |title=The war to end all wars |publisher=BBC News |url=http://news.bbc.co.uk/1/hi/special_report/1998/10/98/world_war_i/198172.stm}}&lt;/ref&gt; was a [[World war|global war]] originating in [[Europe]] that lasted from 28 July 1914 to 11 November 1918. More than 70&amp;nbsp;million [[military personnel]], including 60 million Europeans, were mobilised in one of the largest wars in history.{{sfn |Keegan |1998 |p=8}}{{sfn |Bade |Brown |2003 |pp=167168}} Over nine million [[combatants]] and seven million [[civilian]]s [[World War I casualties|died as a result of the war]] (including the victims of a [[Genocides in history#World War I through World War II|number of genocides]]), a casualty rate exacerbated by the belligerents' [[Second Industrial Revolution|technological and industrial sophistication]], and the tactical stalemate caused by gruelling [[trench warfare]]. It was [[List of wars and anthropogenic disasters by death toll|one of the deadliest conflicts in history]], and paved the way for major political changes, including revolutions in many of the nations involved. Unresolved rivalries still extant at the end of the conflict contributed to the start of the [[World War II|Second World War]] only twenty-one years later.{{sfn |Willmott |2003 |p=307}}

The war drew in all the world's economic [[great power]]s,{{sfn|Willmott |2003 |pp=1011}} assembled in two opposing alliances: the [[Allies of World War I|Allies]] (based on the [[Triple Entente]] of the [[Russian Empire]], the [[French Third Republic]], and the [[United Kingdom of Great Britain and Ireland]]) versus the [[Central Powers]] of [[German Empire|Germany]] and [[Austria-Hungary]]. Although [[Kingdom of Italy|Italy]] was a member of the [[Triple Alliance (1882)|Triple Alliance]] alongside Germany and Austria-Hungary, it did not join the Central Powers, as Austria-Hungary had taken the offensive against the terms of the alliance.&lt;ref name=Willmott15&gt;{{harvnb |Willmott |2003 |p=15}}&lt;/ref&gt; These alliances were reorganised and expanded as more nations entered the war: Italy, [[Empire of Japan|Japan]] and the [[United States]] joined the Allies, while the [[Ottoman Empire]] and [[Kingdom of Bulgaria|Bulgaria]] joined the Central Powers.

The trigger for the war was the [[assassination of Archduke Franz Ferdinand of Austria]], heir to the throne of Austria-Hungary, by [[Yugoslav nationalism|Yugoslav nationalist]] [[Gavrilo Princip]] in [[Sarajevo]] on 28 June 1914. This set off a [[July Crisis|diplomatic crisis]] when Austria-Hungary delivered an ultimatum to the [[Kingdom of Serbia]],&lt;ref name=&quot;AJPT2&quot;&gt;{{harvnb |Taylor |1998 |pp=8093}}&lt;/ref&gt;{{sfn |Djoki |2003 |p=24}} and entangled international alliances formed over the previous decades were invoked. Within weeks the major powers were at war, and the conflict soon spread around the world.

On 28 July the Austro-Hungarians declared war on Serbia and on the next day Russia declared a partial mobilization, followed by a general mobilization on 30 July.&lt;ref name=Levy&gt;{{harv|Levy|Vasques|2014|p=250}}&lt;/ref&gt; Germany presented an ultimatum to Russia to demobilise, and when this was refused, declared war on Russia on 1 August. Being outnumbered on the [[Eastern Front (World War I)|Eastern Front]], Russia urged its Triple Entente ally France to open up a second front in the west. Over forty years earlier in 1870, the [[Franco-Prussian War]] had ended the [[Second French Empire]] and France had ceded the provinces of [[Alsace-Lorraine]] to a unified Germany. Bitterness over that defeat and the determination to retake Alsace-Lorraine made the acceptance of Russia's plea for help an easy choice, so France began full mobilisation on 1 August and, on 3 August, Germany declared war on France. The border between France and Germany was heavily fortified on both sides so, according to the [[Schlieffen Plan]], Germany then [[German invasion of Belgium|invaded neutral Belgium]] and [[German occupation of Luxembourg during World War I#Invasion|Luxembourg]] before moving towards France from the north, leading the United Kingdom to declare war on Germany on 4 August due to their violation of Belgian neutrality.{{sfn |Evans |2004 |p=12}}{{sfn |Martel |2003 |p=xii ff}} After the German march on Paris was halted in the [[First Battle of the Marne|Battle of the Marne]], what became known as the [[Western Front (World War I)|Western Front]] settled into a [[Attrition warfare|battle of attrition]], with a [[trench warfare|trench line]] that changed little until 1917. On the [[Eastern Front (World War I)|Eastern Front]], the Russian army led a successful campaign against the Austro-Hungarians, but the Germans stopped its [[invasion of East Prussia]] in the battles of Tannenberg and the Masurian Lakes. In November 1914, the Ottoman Empire joined the Central Powers, opening fronts in the [[Caucasus]], [[Mesopotamia]] and the [[Sinai]]. In 1915, Italy joined the Allies and Bulgaria joined the Central Powers; [[Kingdom of Romania|Romania]] joined the Allies in 1916, as did the United States in 1917.

The Russian government [[February Revolution|collapsed in March 1917]], and [[October Revolution|a revolution in November]] followed by a further military defeat brought the Russians to terms with the Central Powers via the [[Treaty of Brest Litovsk]], which granted the Germans a significant victory. After a [[Spring Offensive|stunning German offensive]] along the Western Front in the spring of 1918, the Allies rallied and drove back the Germans in a [[Hundred Days Offensive|series of successful offensives]]. On [[Armistice of Villa Giusti|4 November 1918]], the Austro-Hungarian empire agreed to an armistice, and Germany, which had [[German Revolution of 191819|its own trouble with revolutionaries]], agreed to an armistice on 11 November 1918, ending the war in victory for the Allies.

By the end of the war or soon after, the German Empire, Russian Empire, [[Austro-Hungarian Empire]] and the Ottoman Empire ceased to exist. National borders were redrawn, with several independent nations restored or created, and [[German colonial empire|Germany's colonies]] were parceled out among the victors. During the [[Paris Peace Conference, 1919|Paris Peace Conference of 1919]], the [[The Big Four (World War I)|Big Four]] (Britain, France, the United States and Italy) imposed their terms in a series of treaties. The [[League of Nations]] was formed with the aim of preventing any repetition of such a conflict. This effort failed, and economic depression, renewed nationalism, weakened successor states, and feelings of humiliation (particularly in Germany) eventually contributed to the start of [[World War II]].

==Names==
From the time of its start until the approach of [[World War II]], the First World War was called simply the '''World War''' or the '''Great War''' and thereafter the First World War or World War I.&lt;ref&gt;{{cite web|title=Were they always called World War I and World War II?|url=http://www.history.com/news/ask-history/were-they-always-called-world-war-i-and-world-war-ii|work=Ask History|accessdate=24 October 2013}}&lt;/ref&gt;{{sfn |Braybon |2004 |p=8}} At the time, it was also sometimes called &quot;[[the war to end war]]&quot; or &quot;the war to end all wars&quot; due to its then-unparalleled scale and devastation.&lt;ref&gt;{{cite web|url=http://news.bbc.co.uk/2/hi/special_report/1998/10/98/world_war_i/198172.stm|title=The war to end all wars|publisher=BBC News |date=10 November 1998|accessdate=15 December 2015}}&lt;/ref&gt;

In Canada, ''[[Maclean's]]'' magazine in October 1914 wrote, &quot;Some wars name themselves. This is the Great War.&quot;&lt;ref&gt;{{cite web|url=http://www.oed.com/view/Entry/81104|title=great, adj., adv., and n.|work=Oxford English Dictionary}}&lt;/ref&gt; During the [[interwar period]] (19181939), the war was most often called the ''World War'' and the ''Great War'' in English-speaking countries.

The term &quot;First World War&quot; was first used in September 1914 by the German biologist and philosopher [[Ernst Haeckel]], who claimed that &quot;there is no doubt that the course and character of the feared 'European War'&amp;nbsp;... will become the first world war in the full sense of the word,&quot;{{sfn |Shapiro |Epstein |2006 |p=329}} citing a wire service report in ''[[The Indianapolis Star]]'' on 20 September 1914. After the onset of the Second World War in 1939, the terms ''World War I'' or ''the First World War'' became standard, with British and Canadian historians favouring the ''First World War'', and Americans ''World War I''.&lt;ref&gt;Margery Fee and Janice McAlpine, ''Guide to Canadian English Usage'' (Oxford UP, 1997) p 210.&lt;/ref&gt;

In the introduction to his book, ''Waterloo in 100 Objects'', historian Gareth Glover states: &quot;This opening statement will cause some bewilderment to many who have grown up with the appellation of the Great War firmly applied to the 191418 First World War. But to anyone living before 1918, the title of the Great War was applied to the Revolutionary and Napoleonic wars in which Britain fought France almost continuously for twenty-two years from 1793 to 1815.&quot;&lt;ref&gt;{{cite web|url=http://www.thehistorypress.co.uk/articles/waterloo-the-great-war/|title=Waterloo: The Great War|publisher=The History Press|accessdate=14 October 2017}}&lt;/ref&gt; In 1911, the historian [[John Holland Rose]] published a book titled ''William Pitt and the Great War''.

==Background==
{{Main article |Causes of World War I}}
[[File:Map Europe alliances 1914-en.svg|thumb |upright=1.4|right |alt=Map of Europe focusing on Austria-Hungary and marking central location of ethnic groups in it including Slovaks, Czechs, Slovenes, Croats, Serbs, Romanians, Ukrainians, Poles.|Rival military coalitions in 1914; [[Triple Entente]] in green; [[Triple Alliance (1882)|Triple Alliance]] in brown. Only the Triple Alliance was a formal &quot;alliance&quot;; the others listed were informal patterns of support. ]]

===Political and military alliances===
During the 19th century, the major European powers went to great lengths to maintain a [[balance of power (international relations)|balance of power]] throughout Europe, resulting in the existence of a complex network of political and military alliances throughout the continent by 1900.{{sfn |Clark |2014 |pp=121152}} These began in 1815, with the [[Holy Alliance]] between [[Prussia]], Russia, and Austria. When [[Unification of Germany|Germany was united]] in 1871, Prussia became part of the new German nation. Soon after, in October 1873, German Chancellor [[Otto von Bismarck]] negotiated the [[League of the Three Emperors]] (German: ''Dreikaiserbund'') between the monarchs of Austria-Hungary, Russia and Germany. This agreement failed because Austria-Hungary and Russia could not agree over Balkan policy, leaving Germany and Austria-Hungary in an alliance formed in 1879, called the [[Dual Alliance, 1879|Dual Alliance]]. This was seen as a method of countering Russian influence in the [[Balkans]] as the [[Decline of the Ottoman Empire|Ottoman Empire continued to weaken]].&lt;ref name=Willmott15/&gt; This alliance expanded in 1882 to include Italy, in what became the [[Triple Alliance (1882)|Triple Alliance]].{{sfn|Keegan |1998 |p=52}}

Bismarck had especially worked to hold Russia at Germany's side in an effort to avoid a two-front war with France and Russia. When [[Wilhelm II, German Emperor|Wilhelm II]] ascended to the throne as [[German Emperor]] (''Kaiser''), Bismarck was compelled to retire and his system of alliances was gradually de-emphasised. For example, the Kaiser refused, in 1890, to renew the [[Reinsurance Treaty]] with Russia. Two years later, the [[Franco-Russian Alliance]] was signed to counteract the force of the Triple Alliance. In 1904, Britain signed a series of agreements with France, the [[Entente Cordiale]], and in 1907, Britain and Russia signed the [[Anglo-Russian Convention]]. While these agreements did not formally ally Britain with France or Russia, they made British entry into any future conflict involving France or Russia a possibility, and the system of interlocking bilateral agreements became known as the [[Triple Entente]].&lt;ref name=Willmott15/&gt;

[[File:Bundesarchiv DVM 10 Bild-23-61-23, Linienschiff &quot;SMS Rheinland&quot;.jpg|thumb|left|{{SMS|Rheinland}}, a {{sclass-|Nassau|battleship|2}}, Germany's first response to British ''Dreadnought''.]]

===Arms race===
German industrial and economic power had grown greatly after [[unification of Germany|unification and the foundation of the Empire]] in 1871 following the [[Franco-Prussian War]]. From the mid-1890s on, the government of Wilhelm II used this base to devote significant economic resources for building up the ''Kaiserliche Marine'' ([[Imperial German Navy]]), established by Admiral [[Alfred von Tirpitz]], in rivalry with the British [[Royal Navy]] for world naval supremacy.&lt;ref name=willmott21/&gt; As a result, each nation strove to out-build the other in [[capital ship]]s. With the launch of {{HMS |Dreadnought |1906 |6}}&lt;nowiki/&gt;in 1906, the British Empire expanded on its significant advantage over its German rival.&lt;ref name=willmott21&gt;{{harvnb |Willmott |2003 |p=21}}&lt;/ref&gt; The arms race between Britain and Germany eventually extended to the rest of Europe, with all the major powers devoting their industrial base to producing the equipment and weapons necessary for a pan-European conflict.{{sfn |Prior |1999 |p=18}} Between 1908 and 1913, the military spending of the European powers increased by 50%.{{sfn|Fromkin |2004 |p=94}}

[[File:1908-10-07 - Moritz Schiller's Delicatessen.jpg|thumb|alt=Photo of large white building with one signs saying &quot;Moritz Schiller&quot; and another in Arabic; in front is a cluster of people looking at poster on the wall.|Sarajevo citizens reading a poster with the proclamation of the [[Bosnian Crisis|Austrian annexation in 1908]]]]

===Conflicts in the Balkans===

Austria-Hungary precipitated the [[Bosnian crisis]] of 19081909 by officially annexing the former Ottoman territory of [[Austro-Hungarian occupation of Bosnia and Herzegovina|Bosnia and Herzegovina, which it had occupied since 1878]]. This angered the [[Kingdom of Serbia]] and its patron, the [[Pan-Slavism|Pan-Slavic]] and [[Eastern Orthodox Church|Orthodox]] [[Russian Empire]]. Russian political manoeuvring in the region destabilised peace accords that were already fracturing in the Balkans, which came to be known as the &quot;[[powder keg of Europe]].&quot;{{sfn |Keegan |1998 |pp=4849}} In 1912 and 1913, the [[First Balkan War]] was fought between the [[Balkan League]] and the fracturing Ottoman Empire. The resulting [[Treaty of London (1913)|Treaty of London]] further shrank the Ottoman Empire, creating an independent Albanian state while enlarging the territorial holdings of Bulgaria, Serbia, Montenegro, and Greece. When Bulgaria attacked Serbia and Greece on 16 June 1913, it lost most of [[Macedonia (region)|Macedonia]] to Serbia and Greece, and [[Southern Dobruja]] to Romania in the 33-day [[Second Balkan War]], further destabilising the region.{{sfn|Willmott |2003 |pp=223}} The [[Great Powers]] were able to keep these Balkan conflicts contained, but the next one would spread throughout Europe and beyond.

==Prelude==
===Sarajevo assassination===
{{Main article|Assassination of Archduke Franz Ferdinand of Austria}}

[[File:Gavrilo Princip captured in Sarajevo 1914.jpg|right |thumb |This picture is usually associated with the arrest of [[Gavrilo Princip]], although some&lt;ref name=&quot;FinestoneMassie&quot;&gt;{{cite book|first1=Jeffrey|last1=Finestone|first2=Robert K.|last2=Massie|title=The last courts of Europe|url={{google books|plainurl=y|id=-1cvAAAAMAAJ|page=247}} |year=1981 |publisher=Dent |page=247}}&lt;/ref&gt;{{sfn|Smith |2010}} believe it depicts Ferdinand Behr, a bystander.]]

On 28 June 1914, Austrian [[Archduke Franz Ferdinand of Austria|Archduke Franz Ferdinand]] visited the [[Bosnia and Herzegovina|Bosnian]] capital, [[Sarajevo]]. A group of six assassins ([[Cvjetko Popovi]], [[Gavrilo Princip]], [[Muhamed Mehmedbai]], [[Nedeljko abrinovi]], [[Trifko Grabe]], [[Vaso ubrilovi]]) from the [[Yugoslavism|Yugoslavist]] group [[Young Bosnia|Mlada Bosna]], supplied by the Serbian [[Black Hand (Serbia)|Black Hand]], had gathered on the street where the Archduke's motorcade would pass, with the intention of assassinating him. abrinovi threw a [[hand grenade|grenade]] at the car, but missed. Some nearby were injured by the blast, but Ferdinand's convoy carried on. The other assassins failed to act as the cars drove past them.

About an hour later, when Ferdinand was returning from a visit at the Sarajevo Hospital with those wounded in the assassination attempt, the convoy took a wrong turn into a street where, by coincidence, Princip stood. With a pistol, Princip shot and killed Ferdinand and his wife [[Sophie, Duchess of Hohenberg|Sophie]]. The reaction among the people in Austria was mild, almost indifferent. As historian [[Zbynk Zeman]] later wrote, &quot;the event almost failed to make any impression whatsoever. On Sunday and Monday (28 and 29 June), the crowds in Vienna listened to music and drank wine, as if nothing had happened.&quot;&lt;ref name=&quot;history&quot;&gt;{{cite web|url=http://www.history.com/this-day-in-history/european-powers-maintain-focus-despite-killings-in-sarajevo|title=European powers maintain focus despite killings in Sarajevo &amp;nbsp; History.com This Day in History|date=30 June 1914|publisher=History.com|accessdate=26 December 2013}}&lt;/ref&gt;{{sfn |Willmott |2003 |p=26}} Nevertheless, the political impact of the murder of the heir to the throne was significant and has been described as a &quot;[[September 11 attacks#Effects|9/11 effect]]&quot;, a terrorist event charged with historic meaning, transforming the political chemistry in Vienna.&lt;ref name=&quot;Christopher Clark 2014&quot;&gt;{{cite AV media|title=Month of Madness|first=Christopher|last=Clark|publisher=BBC Radio 4|date=25 June 2014|url=http://www.bbc.co.uk/programmes/b03t7p27}}&lt;/ref&gt; And although they were not personally close, the Emperor Franz Joseph was profoundly shocked and upset.

=== Expansion of violence in [[Bosnia and Herzegovina]] ===

The Austro-Hungarian authorities encouraged the subsequent [[anti-Serb riots in Sarajevo]], in which [[Bosnian Croats]] and [[Bosniaks]] killed two [[Bosnian Serbs]] and damaged numerous Serb-owned buildings.&lt;ref name=&quot;DjordjeviSpence1992&quot;&gt;{{cite book|first1=Dimitrije|last1=Djordjevi|first2=Richard B.|last2=Spence|title=Scholar, patriot, mentor: historical essays in honor of Dimitrije Djordjevi|url={{google books|plainurl=y|id=CDJpAAAAMAAJ|page=313}} |year=1992 |publisher=East European Monographs |isbn=978-0-88033-217-0 |page=313 |quote=Following the assassination of Franz Ferdinand in June 1914, Croats and Muslims in Sarajevo joined forces in an anti-Serb pogrom. }}&lt;/ref&gt;&lt;ref&gt;{{cite book|title=Reports Service: Southeast Europe series|url={{google books|plainurl=y|id=QGtWAAAAMAAJ}} |accessdate=7 December 2013 |year=1964 |publisher=American Universities Field Staff. |page=44 |quote=...&amp;nbsp;the assassination was followed by officially encouraged anti-Serb riots in Sarajevo&amp;nbsp;...}}&lt;/ref&gt; Violent actions against ethnic Serbs were also organized outside Sarajevo, in other cities in Austro-Hungarian-controlled Bosnia and Herzegovina, Croatia and Slovenia. Austro-Hungarian authorities in Bosnia and Herzegovina imprisoned and extradited approximately 5,500 prominent Serbs, 700 to 2,200 of whom died in prison. A further 460 Serbs were sentenced to death. A predominantly Bosniak special militia known as the ''[[Schutzkorps]]'' was established and carried out the persecution of Serbs.&lt;ref name=&quot;Krll2008&quot;&gt;{{cite book|first=Herbert|last=Krll|title=Austrian-Greek encounters over the centuries: history, diplomacy, politics, arts, economics|url={{google books|plainurl=y|id=uJRnAAAAMAAJ}} |accessdate=1 September 2013 |date=28 February 2008 |publisher=Studienverlag |isbn=978-3-7065-4526-6 |page=55 |quote=...&amp;nbsp;arrested and interned some 5.500 prominent Serbs and sentenced to death some 460 persons, a new Schutzkorps, an auxiliary militia, widened the anti-Serb repression.}}&lt;/ref&gt;{{sfn |Tomasevich |2001 |p=485}}&lt;ref name=&quot;Schindler2007&quot;&gt;{{cite book|first=John R.|last=Schindler|title=Unholy Terror: Bosnia, Al-Qa'ida, and the Rise of Global Jihad|url={{google books|plainurl=y|id=c8Xb6x2XYvIC|page=29}} |year=2007 |publisher=Zenith Imprint |isbn=978-1-61673-964-5 |page=29}}&lt;/ref&gt;{{sfn|Velikonja |2003 |p=141}}

===July Crisis===
{{Main article |July Crisis}}
[[File:1914-06-29 - Aftermath of attacks against Serbs in Sarajevo.png|thumbnail|left|Crowds on the streets in the aftermath of the [[anti-Serb riots in Sarajevo]], 29 June 1914]]
[[File:Austria Hungary ethnic.svg|thumb|right|Ethno-linguistic map of Austria-Hungary, 1910. [[Austro-Hungarian annexation of Bosnia and Herzegovina|Bosnia-Herzegovina was annexed]] in 1908.]]

The assassination led to a month of diplomatic manoeuvring between Austria-Hungary, Germany, Russia, France and Britain, called the [[July Crisis]]. Believing correctly that Serbian officials (especially the officers of the Black Hand) were involved in the plot to murder the Archduke, and wanting to finally end Serbian interference in Bosnia,{{sfn |Stevenson |1996 |p=12}} Austria-Hungary delivered to Serbia on 23 July the [[July Crisis#Austro-Hungarian ultimatum|July Ultimatum]], a series of ten demands that were made intentionally unacceptable, in an effort to provoke a war with Serbia.{{sfn|Willmott |2003 |p=27}} Serbia decreed general mobilization on the 25th. Serbia accepted all of the terms of the ultimatum except for article six, which demanded that Austrian delegates be allowed in Serbia for the purpose of participation in the investigation into the assassination.&lt;ref&gt;Fromkin, David; ''Europe's Last Summer: Why the World Went to War in 1914'', Heinemann, 2004; pp 196-97&lt;/ref&gt;. Following this, Austria broke off diplomatic relations with Serbia and, the next day ordered a partial mobilization. Finally, on 28 July 1914, Austria-Hungary declared war on Serbia.

On 29 July, Russia, in support of Serbia, declared partial mobilization against Austria-Hungary.&lt;ref name=Levy/&gt;  On the 30th, Russia ordered general mobilization. German Chancellor Bethmann-Hollweg waited until the 31st for an appropriate response, when Germany declared a &quot;state of danger of war&quot;.{{Cite quote|date=June 2017}} Kaiser Wilhelm II asked his cousin, Tsar Nicolas II, to suspend the Russian general mobilization. When he refused, Germany issued an ultimatum demanding its mobilization be stopped, and a commitment not to support Serbia. Another was sent to France, asking her not to support Russia if it were to come to the defence of Serbia. On 1 August, after the Russian response, Germany mobilized and declared war on Russia. This also led to the general mobilization in Austria-Hungary on 4 August.

The German government issued demands to France that it remain neutral as they had to decide which deployment plan to implement, it being difficult if not impossible to change the deployment whilst it was underway. The modified German [[Schlieffen Plan]], ''Aufmarsch II West'', would deploy 80% of the army in the west, and ''Aufmarsch I Ost'' and ''Aufmarsch II Ost'' would deploy 60% in the west and 40% in the east as this was the maximum that the East Prussian railway infrastructure could carry. The French did not respond, but sent a mixed message by ordering their troops to withdraw {{convert |10 |km |0 |abbr=on}} from the border to avoid any incidents, and at the same time ordered the mobilisation of her reserves. Germany responded by mobilising its own reserves and implementing ''Aufmarsch II West''. On 1 August Wilhelm ordered [[Helmuth von Moltke the Younger|General Moltke]] to &quot;march the whole of the  army to the East&quot; after he had been wrongly informed that the British would remain neutral as long as France was not attacked. The General convinced the Kaiser that improvising the redeployment of a million men was unthinkable and that making it possible for the French to attack the Germans &quot;in the rear&quot; might prove disastrous. Yet Wilhelm insisted that the German army should not march into [[Luxembourg]] until he received a telegram sent by his cousin George V, who made it clear that there had been a misunderstanding. Eventually the Kaiser told Molkte, &quot;Now you can do what you want.&quot;&lt;ref&gt;The Telegraph, ''First World War centenary: how the events of 1 August 1914 unfolded'', http://www.telegraph.co.uk/history/world-war-one/11002644/First-World-War-centenary-how-events-unfolded-on-August-1-1914.html&lt;/ref&gt;&lt;ref&gt;McMeekin, Sean, July 1914: Countdown to War, Basic Books, 2014, 480 p., {{ISBN|978-0465060740}}, pp. 342,349&lt;/ref&gt; Germany attacked Luxembourg on 2 August, and on 3 August declared war on France. On 4 August, after Belgium refused to permit German troops to cross its borders into France, Germany declared war on Belgium as well.{{sfn|Crowe |2001 |p=45}}&lt;ref&gt;{{cite book|last=Dell|first=Pamela|title=A World War I Timeline (Smithsonian War Timelines Series)|year=2013|publisher=Capstone|isbn=978-1-4765-4159-4|pages=1012}}&lt;/ref&gt;{{sfn |Willmott |2003 |p=29}} Britain declared war on Germany at 19:00&amp;nbsp;UTC on 4 August 1914 (effective from 11 pm), following an &quot;unsatisfactory reply&quot; to the British ultimatum that Belgium must be kept [[Neutrality (international relations)|neutral]].&lt;ref&gt;{{cite web|url=http://www.bbc.co.uk/history/worldwars/wwone/mirror01_01.shtml|publisher=BBC|title=Daily Mirror Headlines: The Declaration of War, Published 4 August 1914|accessdate=9 February 2010}}&lt;/ref&gt;

==Progress of the war==
{{further information|Diplomatic history of World War I}}

===Opening hostilities===
====Confusion among the Central Powers====
The strategy of the Central Powers suffered from miscommunication. Germany had promised to support Austria-Hungary's invasion of Serbia, but interpretations of what this meant differed. Previously tested deployment plans had been replaced early in 1914, but those had never been tested in exercises. Austro-Hungarian leaders believed Germany would cover its northern flank against Russia.{{sfn |Strachan |2003 |pp=292296, 343354}}&lt;!-- may be able to find more on this in Samuel R. Williamson, Jr: &quot;Austria-Hungary and the Origins of the First World War&quot; --&gt; Germany, however, envisioned Austria-Hungary directing most of its troops against Russia, while Germany dealt with France. This confusion forced the [[Austro-Hungarian Army]] to divide its forces between the Russian and Serbian fronts.

====Serbian campaign====
[[File:FirstSerbianArmedPlane1915.jpg|thumbnail |Serbian Army [[Blriot XI]] &quot;Oluj&quot;, 1915]]
{{Main article |Serbian Campaign of World War I}}

Austria invaded and fought the Serbian army at the [[Battle of Cer]] and [[Battle of Kolubara]] beginning on 12 August. Over the next two weeks, Austrian attacks were thrown back with heavy losses, which marked the first major Allied victories of the war and dashed Austro-Hungarian hopes of a swift victory. As a result, Austria had to keep sizable forces on the Serbian front, weakening its efforts against Russia.{{sfn |Tucker |Roberts |2005 |p=172}} Serbia's defeat of the Austro-Hungarian invasion of 1914 has been called one of the major upset victories of the twentieth century.&lt;ref&gt;{{cite web|first=John R.|last=Schindler|url=http://wih.sagepub.com/content/9/2/159.abstract|title=Disaster on the Drina: The Austro-Hungarian Army in Serbia, 1914|publisher=Wih.sagepub.com|date=1 April 2002|accessdate=13 March 2013}}&lt;/ref&gt;

====German forces in Belgium and France====
{{Main article |Western Front (World War I)}}
[[File:German soldiers in a railroad car on the way to the front during early World War I, taken in 1914. Taken from greatwar.nl site.jpg|thumb|left|German soldiers in a railway [[goods wagon]] on the way to the front in 1914. Early in the war, all sides expected the conflict to be a short one.]]

At the outbreak of World War I, 80% of the German army was deployed as [[German Army order of battle (1914)|seven field armies]] in the west according to the plan ''Aufmarsch II West''. However, they were then assigned to execute the retired deployment plan ''Aufmarsch I West'', also known as the Schlieffen Plan. This would march German armies through northern Belgium and into France, in an attempt to encircle the French army and then breach the 'second defensive area' of the fortresses of [[Verdun]] and Paris and the Marne river.&lt;ref name=AJPT2/&gt;

''Aufmarsch I West'' was one of four deployment plans available to the German General Staff in 1914. Each plan favoured certain operations, but did not specify exactly how those operations were to be carried out, leaving the commanding officers to carry those out at their own initiative and with minimal oversight.{{clarify|date=December 2015}} ''Aufmarsch I West'', designed for a one-front war with France, had been retired once it became clear it was irrelevant to the wars Germany could expect to face; both Russia and Britain were expected to help France, and there was no possibility of Italian nor Austro-Hungarian troops being available for operations against France. But despite its unsuitability, and the availability of more sensible and decisive options, it retained a certain allure due to its offensive nature and the pessimism of pre-war thinking, which expected offensive operations to be short-lived, costly in casualties, and unlikely to be decisive. Accordingly, the ''Aufmarsch II West'' deployment was changed for the offensive of 1914, despite its unrealistic goals and the insufficient forces Germany had available for decisive success.{{sfn |Holmes |2014 |pp=194, 211}} Moltke took Schlieffen's plan and modified the deployment of forces on the western front by reducing the right wing, the one to advance through Belgium, from 85% to 70%. In the end, the Schlieffen plan was so radically modified by Moltke, that it could be more properly called the Moltke Plan.&lt;ref&gt;{{cite book|first=S. L. A.|last=Marshall|authorlink=Samuel Lyman Atwood Marshall|title=The American Heritage History of World War I|publisher=[[American Heritage (magazine)|American Heritage]]|location=New York|pages=4243}}&lt;/ref&gt;

The plan called for the right flank of the German advance to bypass the French armies concentrated on the Franco-German border, defeat the French forces closer to Luxembourg and Belgium and move south to Paris. Initially the Germans were successful, particularly in the [[Battle of the Frontiers]] (1424 August). By 12 September, the French, with assistance from the [[British Expeditionary Force (World War I)|British Expeditionary Force]] (BEF), halted the German advance east of Paris at the [[First Battle of the Marne]] (512 September) and pushed the German forces back some {{convert |50 |km |0 |abbr=on}}. The French offensive into southern Alsace, launched on 20 August with the [[Battle of Mulhouse]], had limited success.

In the east, Russia invaded with two armies. In response, Germany rapidly moved the [[8th Army (German Empire)|8th Field Army]] from its previous role as reserve for the invasion of France to [[East Prussia]] by rail across the German Empire. This army, led by general [[Paul von Hindenburg]], defeated Russia in a series of battles collectively known as the First [[Battle of Tannenberg]] (17 August&amp;nbsp; 2 September). While the Russian invasion failed, it caused the diversion of German troops to the east, allowing the Allied victory at the First Battle of the Marne. This meant Germany failed to achieve its objective of avoiding a long, two-front war. However, the German army had fought its way into a good defensive position inside France and effectively halved France's supply of coal. It had also killed or permanently crippled 230,000 more French and British troops than it itself had lost. Despite this, communications problems and questionable command decisions cost Germany the chance of a more decisive outcome.{{sfn |Tucker |Roberts |2005 |pp=3768}}

====Asia and the Pacific====
{{Main article |Asian and Pacific theatre of World War I}}
[[File:Melbourne recruiting WWI.jpg|thumb |[[Military recruitment]] in [[Melbourne]], [[Australia]], 1914]]

New Zealand [[Occupation of German Samoa|occupied]] [[German Samoa]] (later Western Samoa) on 30 August 1914. On 11 September, the [[Australian Naval and Military Expeditionary Force]] landed on the island of [[New Britain|Neu Pommern]] (later New Britain), which formed part of [[German New Guinea]]. On 28 October, the German cruiser {{SMS |Emden |1908 |6}}&lt;nowiki/&gt;sank the [[Russian cruiser Zhemchug]] in the [[Battle of Penang]]. Japan seized Germany's Micronesian colonies and, after the [[Siege of Tsingtao]], the German coaling port of [[Qingdao]] on the Chinese [[Shandong]] peninsula. As Vienna refused to withdraw the Austro-Hungarian cruiser {{SMS |Kaiserin Elisabeth}} from Tsingtao, Japan declared war not only on Germany, but also on Austria-Hungary; the ship participated in the defense of Tsingtao where it was sunk in November 1914.&lt;ref&gt;DONKO, Wilhelm M.: &quot;A Brief History of the Austrian Navy&quot; epubli GmbH, Berlin, 2012, page 79&lt;/ref&gt; Within a few months, the Allied forces had seized all the German territories in the Pacific; only isolated commerce raiders and a few holdouts in New Guinea remained.{{sfn |Keegan |1998 |pp=224232}}{{sfn |Falls |1960 |pp=7980}}

====African campaigns====
{{Main article |African theatre of World War I}}
[[File:Recruiting for the Holy War near Tiberias 1914.jpg|thumb |[[Military recruitment]] near [[Tiberias]], [[Ottoman Empire]], 1914]]

Some of the first clashes of the war involved British, French, and German colonial forces in Africa. On 67 August, French and British troops invaded the German protectorate of [[Togoland]] and [[Kamerun]]. On 10 August, German forces in [[German South-West Africa|South-West Africa]] attacked South Africa; sporadic and fierce fighting continued for the rest of the war. The German colonial forces in [[German East Africa]], led by Colonel [[Paul von Lettow-Vorbeck]], fought a [[guerrilla warfare]] campaign during World War I and only surrendered two weeks after the armistice took effect in Europe.{{sfn |Farwell |1989 |p=353}}

====Indian support for the Allies====
{{further information|HinduGerman Conspiracy|NiedermayerHentig Expedition|Third Anglo-Afghan War|}}

Germany attempted to use Indian nationalism and pan-Islamism to its advantage, [[Hindu-German conspiracy|instigating uprisings in India]], and [[Niedermayer-Hentig Expedition|sending a mission]] that urged Afghanistan to join the war on the side of Central powers. However, contrary to British fears of a revolt in India, the outbreak of the war saw an unprecedented outpouring of loyalty and goodwill towards Britain.{{sfn |Brown |1994 |pp=197198}}{{sfn |Brown |1994 |pp=201203}} Indian political leaders from the [[Indian National Congress]] and other groups were eager to support the British war effort, since they believed that strong support for the war effort would further the cause of [[Indian Home Rule Movement|Indian Home Rule]].{{citation needed|date=March 2016}} The [[British Indian Army|Indian Army]] in fact outnumbered the British Army at the beginning of the war; about 1.3&amp;nbsp;million Indian soldiers and labourers served in Europe, Africa, and the Middle East, while the central government and the [[princely state]]s sent large supplies of food, money, and ammunition. In all, 140,000&amp;nbsp;men served on the Western Front and nearly 700,000 in the Middle East. Casualties of Indian soldiers totalled 47,746 killed and 65,126 wounded during World War I.&lt;ref&gt;{{cite web |url=http://www.mgtrust.org/ind1.htm|title=Participants from the Indian subcontinent in the First World War|publisher=Memorial Gates Trust|accessdate=12 December 2008}}&lt;/ref&gt;
The suffering engendered by the war, as well as the failure of the British government to grant self-government to India after the end of hostilities, bred disillusionment and fuelled [[Indian independence movement|the campaign for full independence]] that would be led by [[Mohandas Karamchand Gandhi|Mohandas K. Gandhi]] and others.{{citation needed|date=March 2016}}

===Western Front===
{{Main article |Western Front (World War I)}}

====Trench warfare begins====
[[File:Royal Irish Rifles ration party Somme July 1916.jpg|thumb |alt=Mud stained British soldiers at rest |[[Royal Irish Rifles]] in a communications trench, [[first day on the Somme]], 1916]]
Military tactics developed before World War I failed to keep pace with advances in technology and had become obsolete. These advances had allowed the creation of strong defensive systems, which out-of-date military tactics could not break through for most of the war. [[Barbed wire]] was a significant hindrance to massed infantry advances, while [[artillery]], vastly&lt;!--between HE }} hydraulic recoil mechanisms, something like two orders of magnitude--&gt; more lethal than in the 1870s, coupled with [[machine gun]]s, made crossing open ground extremely difficult.{{sfn |Raudzens |1990 |pp=424}} Commanders on both sides failed to develop tactics for [[trench warfare|breaching entrenched]] positions without heavy casualties. In time, however, technology began to produce new offensive weapons, such as [[Chemical weapons in World War I|gas warfare]] and the [[Tanks in World War I|tank]].{{sfn |Raudzens |1990 |pp=421423}}

Just after the First Battle of the Marne (512 September 1914), Entente and German forces repeatedly attempted manoeuvring to the north in an effort to outflank each other: this series of manoeuvres became known as the &quot;[[Race to the Sea]]&quot;. When these outflanking efforts failed, the opposing forces soon found themselves facing an uninterrupted line of entrenched positions from [[Lorraine (duchy)|Lorraine]] to Belgium's coast.&lt;ref name=AJPT2/&gt; Britain and France sought to take the offensive, while Germany defended the occupied territories. Consequently, German trenches were much better constructed than those of their enemy; Anglo-French trenches were only intended to be &quot;temporary&quot; before their forces broke through the German defences.{{sfn |Goodspeed |1985 |p=199 (footnote)}}

Both sides tried to break the stalemate using scientific and technological advances. On 22 April 1915, at the [[Second Battle of Ypres]], the Germans (violating the [[Hague Conventions of 1899 and 1907|Hague Convention]]) used [[chlorine]] gas for the first time on the Western Front. Several types of gas soon became widely used by both sides, and though it never proved a decisive, battle-winning weapon, poison gas became one of the most-feared and best-remembered horrors of the war.&lt;ref&gt;{{cite web|first=Michael|last=Duffy|url=http://www.firstworldwar.com/weaponry/gas.htm|title=Weapons of War: Poison Gas|publisher=Firstworldwar.com|date=22 August 2009|accessdate=5 July 2012}}&lt;/ref&gt;{{sfn |Love |1996}} Tanks were developed by Britain and France, and were first used in combat by the British during the [[Battle of FlersCourcelette]] (part of the Battle of the Somme) on 15 September 1916, with only partial success. However, their effectiveness would grow as the war progressed; the Allies built tanks in large numbers, whilst the Germans employed only a few of their own design, supplemented by captured Allied tanks.

====Continuation of trench warfare====
[[File:French 87th Regiment Cote 34 Verdun 1916.jpg|thumb|left|French 87th regiment near Verdun, 1916]]
[[File:King George V and officials inspecting munitions factory in 1917.PNG|thumb|[[George V|King George V]] (''front left'') and a group of officials inspect a British munitions factory in 1917]]
[[File:Canadian tank and soldiers Vimy 1917.jpg|thumb |alt=Files of soldiers with rifles slung follow close behind a tank, there is a dead body in the foreground |Canadian troops advancing with a British [[Mark I tank#Mark II|Mark II tank]] at the [[Battle of Vimy Ridge]], 1917]]

Neither side proved able to deliver a decisive blow for the next two years. Throughout 191517, the British Empire and France suffered more casualties than Germany, because of both the strategic and tactical stances chosen by the sides. Strategically, while the Germans only mounted one major offensive, the Allies made several attempts to break through the German lines.

In February 1916 the Germans attacked the French defensive positions at [[Battle of Verdun|Verdun]]. Lasting until December 1916, the battle saw initial German gains, before French counter-attacks returned matters to near their starting point. Casualties were greater for the French, but the Germans bled heavily as well, with anywhere from 700,000{{sfn |Dupuy |1993 |pp=1042}} to 975,000{{sfn |Grant |2005 |pp=276}} casualties suffered between the two combatants. Verdun became a symbol of French determination and self-sacrifice.&lt;ref&gt;{{cite news|last=Lichfield|first=John|date=21 February 2006|title=Verdun: myths and memories of the 'lost villages' of France|work=The Independent|url=https://www.independent.co.uk/news/world/europe/verdun-myths-and-memories-of-the-lost-villages-of-france-467285.html|accessdate=23 July 2013}}&lt;/ref&gt;

The [[Battle of the Somme]] was an Anglo-French offensive of July to November 1916. The opening of this offensive (1 July 1916) saw the [[British Army]] endure the bloodiest day in its history, suffering 57,470 casualties, including 19,240 dead, on the [[first day on the Somme|first day]] alone. The entire Somme offensive cost the British Army some 420,000 casualties. The French suffered another estimated 200,000 casualties and the Germans an estimated 500,000.{{sfn |Harris |2008 |pp=271}}

Protracted action at Verdun throughout 1916,{{sfn |Tucker |Roberts |2005 |p=1221}} combined with the bloodletting at the Somme, brought the exhausted French army to the brink of collapse. Futile attempts using [[frontal assault]] came at a high price for both the British and the French and led to the widespread [[French Army Mutinies]], after the failure of the costly [[Nivelle Offensive]] of AprilMay 1917.{{sfn |Tucker |Roberts |2005 |p=854}} The concurrent British [[Battle of Arras (1917)|Battle of Arras]] was more limited in scope, and more successful, although ultimately of little strategic value.{{sfn |Keegan |1998 |pp=325326}}{{sfn |Strachan |2003 |pp=244}} A smaller part of the Arras offensive, the capture of [[Battle of Vimy Ridge|Vimy Ridge]] by the [[Canadian Corps]], became highly significant to that country: the idea that Canada's national identity was born out of the battle is an opinion widely held in military and general histories of Canada.{{sfn |Inglis |1995 |pp=2}}{{sfn |Humphries |2007 |pp=66}}

The last large-scale offensive of this period was a British attack (with French support) at [[Battle of Passchendaele|Passchendaele]] (JulyNovember 1917). This offensive opened with great promise for the Allies, before bogging down in the October mud. Casualties, though disputed, were roughly equal, at some 200,000400,000 per side.

These years of trench warfare in the West saw no major exchanges of territory and, as a result, are often thought of as static and unchanging. However, throughout this period, British, French, and German [[Tactical development on the Western Front in 1917|tactics constantly evolved]] to meet new battlefield challenges.

===Naval war===
{{Main article |Naval warfare of World War I}}
[[File:Hochseeflotte 2.jpg|thumb |Battleships of the [[High Seas Fleet|''Hochseeflotte'']], 1917 ]]

At the start of the war, the German Empire had [[cruiser]]s scattered across the globe, some of which were subsequently used to attack Allied [[merchant shipping]]. The British Royal Navy systematically hunted them down, though not without some embarrassment from its inability to protect Allied shipping. For example, the German detached light cruiser {{SMS |Emden}}, part of the East-Asia squadron stationed at Qingdao, seized or destroyed 15 merchantmen, as well as sinking a Russian cruiser and a French destroyer. However, most of the [[German East Asia Squadron|German East-Asia squadron]]consisting of the armoured cruisers {{SMS |Scharnhorst }}&lt;nowiki/&gt;and {{SMS |Gneisenau | |2}}, light cruisers {{SMS |Nrnberg |1906 |2}}&lt;nowiki/&gt;and {{SMS |Leipzig | |2}}&lt;nowiki/&gt;and two transport shipsdid not have orders to raid shipping and was instead underway to Germany when it met British warships. The German flotilla and {{SMS |Dresden |1907 |2}}&lt;nowiki/&gt;sank two armoured cruisers at the [[Battle of Coronel]], but was virtually destroyed at the [[Battle of the Falkland Islands]] in December 1914, with only ''Dresden'' and a few auxiliaries escaping, but after the [[Battle of Ms a Tierra]] these too had been destroyed or interned.{{sfn |Taylor |2007 |pp=3947}}

Soon after the outbreak of hostilities, Britain began a naval [[blockade of Germany]]. The strategy proved effective, cutting off vital military and civilian supplies, although this blockade violated accepted international law codified by several international agreements of the past two centuries.{{sfn|Keene |2006 |p=5}} Britain mined international waters to prevent any ships from entering entire sections of ocean, causing danger to even neutral ships.{{sfn|Halpern |1995 |p=293}} Since there was limited response to this tactic of the British, Germany expected a similar response to its unrestricted submarine warfare.{{sfn|Zieger |2001 |p=50}}

The [[Battle of Jutland]] (German: ''Skagerrakschlacht'', or &quot;Battle of the [[Skagerrak]]&quot;) developed into the largest naval battle of the war. It was the only full-scale clash of battleships during the war, and one of the largest in history. The Kaiserliche Marine's High Seas Fleet, commanded by Vice Admiral [[Reinhard Scheer]], fought the Royal Navy's [[Grand Fleet]], led by Admiral Sir [[John Jellicoe, 1st Earl Jellicoe|John Jellicoe]]. The engagement was a stand off, as the Germans were outmanoeuvred by the larger British fleet, but managed to escape and inflicted more damage to the British fleet than they received. Strategically, however, the British asserted their control of the sea, and the bulk of the German surface fleet remained confined to port for the duration of the war.&lt;ref&gt;{{cite journal|author=Jeremy Black|title=Jutland's Place in History |journal=Naval History |date=June 2016 |volume=30 |issue=3 |pages=1621 }}&lt;/ref&gt;

[[File:NationaalArchief uboat155London.jpg|thumb |left |[[German submarine Deutschland|U-155]] exhibited near Tower Bridge in London, after the 1918 Armistice.]]
German [[U-boat]]s attempted to cut the supply lines between North America and Britain.&lt;ref name=&quot;Sheffield&quot;&gt;{{cite web |last=Sheffield|first=Garry|title=The First Battle of the Atlantic|work=World Wars In Depth|url=http://www.bbc.co.uk/history/worldwars/wwone/battle_atlantic_ww1_01.shtml|publisher=BBC|accessdate=11 November 2009}}&lt;/ref&gt; The nature of [[submarine warfare]] meant that attacks often came without warning, giving the crews of the merchant ships little hope of survival.&lt;ref name=&quot;Sheffield&quot;/&gt;{{sfn|Gilbert |2004 |p=306}} The United States launched a protest, and Germany changed its rules of engagement. After the sinking of the passenger ship [[RMS Lusitania|RMS ''Lusitania'']] in 1915, Germany promised not to target passenger liners, while Britain armed its merchant ships, placing them beyond the protection of the &quot;[[Prize rules|cruiser rules]]&quot;, which demanded warning and movement of crews to &quot;a place of safety&quot; (a standard that lifeboats did not meet).{{sfn |von der Porten |1969}} Finally, in early 1917, Germany adopted a policy of [[unrestricted submarine warfare]], realising that the Americans would eventually enter the war.&lt;ref name=&quot;Sheffield&quot;/&gt;{{sfn|Jones |2001 |p=80}} Germany sought to strangle Allied [[sea lane]]s before the United States could transport a large army overseas, but after initial successes eventually failed to do so.&lt;ref name=&quot;Sheffield&quot;/&gt;

The U-boat threat lessened in 1917, when merchant ships began travelling in [[Convoys in World War I|convoys]], escorted by [[destroyer]]s. This tactic made it difficult for U-boats to find targets, which significantly lessened losses; after the [[hydrophone]] and [[depth charge]]s were introduced, accompanying destroyers could attack a submerged submarine with some hope of success. Convoys slowed the flow of supplies, since ships had to wait as convoys were assembled. The solution to the delays was an extensive program of building new freighters. Troopships were too fast for the submarines and did not travel the North Atlantic in convoys.&lt;ref&gt;{{cite web |url=http://nslegislature.ca/index.php/committees/committee_hansard/C11/va_2006nov09|title=Committee Hansard|date=9 November 2006|author=Nova Scotia House of Assembly Committee on Veterans' Affairs|accessdate=12 March 2013|work=Hansard}}&lt;/ref&gt; The U-boats had sunk more than 5,000 Allied ships, at a cost of 199 submarines.&lt;ref&gt;{{cite book |first1=Roger|last1=Chickering|first2=Stig|last2=Frster|first3=Bernd|last3=Greiner|series=Publications of the German Historical Institute|location=Washington, D.C.|year=2005|url={{google books|plainurl=y|id=evVPoSwqrG4C|page=73}} |title=A world at total war: global conflict and the politics of destruction, 19371945 |publisher=Cambridge University Press |isbn=0-521-83432-5 }}&lt;/ref&gt; World War I also saw the first use of [[aircraft carrier]]s in combat, with {{HMS |Furious |47 |6}}&lt;nowiki/&gt;launching [[Sopwith Camel]]s in a successful raid against the [[Zeppelin]] hangars at [[Tondern raid|Tondern]] in July 1918, as well as [[blimp]]s for antisubmarine patrol.&lt;ref name=&quot;price1980&quot;&gt;{{harvnb |Price |1980}}&lt;/ref&gt;

===Southern theatres===

====War in the Balkans====
{{Main article |Balkans Campaign (World War I) |Bulgaria during World War I |Serbian Campaign (World War I) |Macedonian Front}}
[[File:Austrians executing Serbs 1917.JPG|thumb |left |Austro-Hungarian troops executing captured Serbians, 1917. [[Kingdom of Serbia|Serbia]] lost about 850,000 people during the war, a quarter of its pre-war population.&lt;ref&gt;&quot;[https://archive.org/stream/PAM550-99/PAM550-99_djvu.txt The Balkan Wars and World War I]&quot;. p. 28. ''[[Library of Congress Country Studies]]''.&lt;/ref&gt;]]
[[File:Bulgaria southern front.jpg|thumb|Bulgarian soldiers in a trench, preparing to fire against an incoming airplane.]]
[[File:Flchtlingstransport Leibnitz - k.k. Innenministerium - 1914.jpg|thumb|Refugee transport from Serbia in [[Leibnitz]], [[Styria]], 1914]]

Faced with Russia, Austria-Hungary could spare only one-third of its army to attack Serbia. After suffering heavy losses, the Austrians briefly occupied the Serbian capital, [[Belgrade]]. A Serbian counter-attack in the Battle of Kolubara succeeded in driving them from the country by the end of 1914. For the first ten months of 1915, Austria-Hungary used most of its military reserves to fight Italy. German and Austro-Hungarian diplomats, however, scored a coup by persuading Bulgaria to join the attack on Serbia.&lt;ref name=&quot;TuckerRoberts2005&quot;&gt;{{cite book|first1=Spencer|last1=Tucker|first2=Priscilla Mary|last2=Roberts|title=World War One|url={{google books|plainurl=y|id=2YqjfHLyyj8C|page=241}} |date=1 January 2005 |publisher=ABC-CLIO |isbn=978-1-85109-420-2 |pages=241}}&lt;/ref&gt; The Austro-Hungarian provinces of [[Slovenia]], Croatia and [[Bosnia (region)|Bosnia]] provided troops for Austria-Hungary, in the fight with Serbia, Russia and Italy. Montenegro allied itself with Serbia.{{sfn |Neiberg |2005 |pp=5455}}

Bulgaria declared war on Serbia, 12 October and joined in the attack by the Austro-Hungarian army under Mackensen's army of 250,000 that was already underway. Serbia was conquered in a little more than a month, as the Central Powers, now including Bulgaria, sent in 600,000 troops total. The Serbian army, fighting on two fronts and facing certain defeat, retreated into northern [[Principality of Albania|Albania]]. The Serbs suffered defeat in the [[Kosovo Offensive (1915)|Battle of Kosovo]]. Montenegro covered the Serbian retreat towards the Adriatic coast in the [[Battle of Mojkovac]] in 67 January 1916, but ultimately the Austrians also conquered Montenegro. The surviving Serbian soldiers were evacuated by ship to Greece.{{sfn |Tucker |Roberts |2005 |pp=10756}} After conquest, Serbia was divided between Austro-Hungary and Bulgaria.{{sfn|DiNardo|2015|p=102}}

In late 1915, a Franco-British force landed at [[Salonica]] in Greece, to offer assistance and to pressure its government to declare war against the Central Powers. However, the pro-German [[Constantine I of Greece|King Constantine I]] dismissed the pro-Allied government of [[Eleftherios Venizelos]] before the Allied expeditionary force arrived.{{sfn |Neiberg |2005 |pp=10810}} The friction between the King of Greece and the Allies continued to accumulate with the [[National Schism]], which effectively divided Greece between regions still loyal to the king and the new provisional government of Venizelos in Salonica. After intense negotiations and an armed confrontation in [[Athens]] between Allied and royalist forces (an incident known as [[Noemvriana]]), the King of Greece resigned and his second son [[Alexander of Greece|Alexander]] took his place; Greece then officially joined the war on the side of the Allies.

In the beginning, the Macedonian Front was mostly static. French and Serbian forces retook limited areas of Macedonia by recapturing [[Bitola]] on 19 November 1916 following the costly [[Monastir Offensive]], which brought stabilization of the front.&lt;ref&gt;{{cite book|last=Hall|first=Richard|title=Balkan Breakthrough: The Battle of Dobro Pole 1918|year=2010|publisher=Indiana University Press|location=|page=11|ISBN=0-253-35452-8}}&lt;/ref&gt;

Serbian and French troops finally made a [[Vardar Offensive|breakthrough in September 1918]], after most of the German and Austro-Hungarian troops had been withdrawn. The Bulgarians were defeated at the [[Battle of Dobro Pole]] and by 25 September 1918 British and French troops had crossed the border into Bulgaria proper as the Bulgarian army collapsed. Bulgaria capitulated four days later, on 29 September 1918.{{sfn |Tucker |Wood |Murphy |1999 |p=150-152}} The German high command responded by despatching troops to hold the line, but these forces were far too weak to reestablish a front.&lt;ref name=militera&gt;{{cite web|url=http://militera.lib.ru/h/korsun_ng4/06.html|title=The Balkan Front of the World War|language=Russian|first=N.|last=Korsun|publisher=militera.lib.ru|accessdate=27 September 2010}}&lt;/ref&gt;

The disappearance of the Macedonian Front meant that the road to [[Budapest]] and [[Vienna]] was now opened to Allied forces. Hindenburg and Ludendorff concluded that the strategic and operational balance had now shifted decidedly against the [[Central Powers]] and, a day after the Bulgarian collapse, insisted on an immediate peace settlement.{{sfn|Doughty |2005 |p=491}}

====Ottoman Empire====
{{Main article |History of the Ottoman Empire during World War I}}
{{see also|Middle Eastern theatre of World War I}}
[[File:Scene just before the evacuation at Anzac. Australian troops charging near a Turkish trench. When they got there the... - NARA - 533108.tif|left|thumb |Australian troops charging near a Turkish trench during the [[Gallipoli Campaign]]]]
[[File:Sultan Mehmed V of Turkey greeting Kaiser Wilhelm II on his arrival at Constantinople.jpg|thumb|250px|[[Mehmed V]] greeting [[Wilhelm II]] on his arrival at [[Constantinople]]]]
[[File:Ottoman 15th Corps.jpg|thumb|left|Kaiser Wilhelm II inspecting Turkish troops of the 15th Corps in East Galicia, Austria-Hungary (now Poland). Prince Leopold of Bavaria, the Supreme Commander of the German Army on the Eastern Front, is second from the left.]]
[[File:Sarikam.jpg|thumb|Russian forest trench at the [[Battle of Sarikamish]], 19141915]]

The Ottomans threatened Russia's [[Caucasus|Caucasian]] territories and Britain's communications with India via the [[Suez Canal]]. As the conflict progressed, the Ottoman Empire took advantage of the European powers' preoccupation with the war and conducted large-scale ethnic cleansing of the indigenous [[Armenians|Armenian]], [[Greeks|Greek]], and [[Assyrian people|Assyrian]] Christian populations, known as the [[Armenian Genocide]], [[Greek Genocide]], and [[Assyrian Genocide]].&lt;ref&gt;{{cite book |editor-last1=Gettleman |editor-first1=Marvin |editor-last2=Schaar |editor-first2=Stuart|title=The Middle East and Islamic world reader|date=2003|publisher=Grove Press|location=New York|isbn=0-8021-3936-1|pages=119120|edition=4th pr.|url={{google books|plainurl=y|id=srLGT3dwTogC}}}}&lt;/ref&gt;&lt;ref&gt;{{cite book|last1=January|first1=Brendan|title=Genocide : modern crimes against humanity|date=2007|publisher=Twenty-First Century Books|location=Minneapolis, Minn.|isbn=0-7613-3421-1|page=14|url={{google books|plainurl=y|id=IoPMDp2WA6cC}}}}&lt;/ref&gt;&lt;ref name=lieberman&gt;{{cite book|last1=Lieberman|first1=Benjamin|title=The Holocaust and Genocides in Europe.|date=2013|publisher=Continuum Publishing Corporation|location=New York|isbn=1-4411-9478-9|pages=801|url={{google books|plainurl=y|id=ySFMAQAAQBAJ}}}}&lt;/ref&gt;

The British and French opened overseas fronts with the [[Gallipoli Campaign|Gallipoli]] (1915) and [[Mesopotamian campaign]]s (1914). In Gallipoli, the Ottoman Empire successfully repelled the British, French, and [[Australian and New Zealand Army Corps]] (ANZACs). In [[Mesopotamia]], by contrast, after the defeat of the British defenders in the [[Siege of Kut]] by the Ottomans (191516), British Imperial forces reorganised and captured [[Baghdad]] in March 1917. The British were aided in Mesopotamia by local Arab and Assyrian tribesmen, while the Ottomans employed local Kurdish and Turcoman tribes.&lt;ref&gt;Arthur J. Barker, ''The Neglected War: Mesopotamia, 19141918'' (London: Faber, 1967)&lt;/ref&gt;

Further to the west, the Suez Canal was defended from Ottoman attacks in 1915 and 1916; in August, a German and Ottoman force was defeated at the [[Battle of Romani]] by the [[ANZAC Mounted Division]] and the [[52nd (Lowland) Infantry Division]]. Following this victory, an [[Egyptian Expeditionary Force]] advanced across the [[Sinai Peninsula]], pushing Ottoman forces back in the [[Battle of Magdhaba]] in December and the [[Battle of Rafa]] on the border between the Egyptian [[Sinai]] and Ottoman Palestine in January 1917.&lt;ref&gt;{{cite book|first1=John|last1=Crawford|first2=Ian|last2=McGibbon|title=New Zealand's Great War: New Zealand, the Allies and the First World War|url={{google books|plainurl=y|id=mtEEuD_-2SMC|page=219}} |year=2007 |publisher=Exisle Publishing |pages=21920}}&lt;/ref&gt;

Russian armies generally saw success in the Caucasus. [[Enver Pasha]], supreme commander of the Ottoman armed forces, was ambitious and dreamed of re-conquering central Asia and areas that had been lost to Russia previously. He was, however, a poor commander.{{sfn|Fromkin |2004 |p=119}} He launched an offensive against the Russians in the Caucasus in December 1914 with 100,000 troops, insisting on a frontal attack against mountainous Russian positions in winter. He lost 86% of his force at the [[Battle of Sarikamish]].&lt;ref name=caven&gt;{{harvnb |Hinterhoff |1984 |pp=499503}}&lt;/ref&gt;

The Ottoman Empire, with German support, invaded [[Persia]] (modern [[Iran]]) in December 1914 in an effort to cut off British and Russian access to [[petroleum reservoir]]s around [[Baku]] near the [[Caspian Sea]].&lt;ref&gt;a b c The Encyclopedia Americana, 1920, v.28, p.403&lt;/ref&gt; Persia, ostensibly neutral, had long been under the spheres of British and Russian influence. The Ottomans and Germans were aided by [[Kurdish people|Kurdish]] and [[Azeri]] forces, together with a large number of major Iranian tribes, such as the [[Qashqai people|Qashqai]], [[Tangistani]]s, [[Luristani]]s, and [[Khamseh]], while the Russians and British had the support of [[Armenians|Armenian]] and Assyrian forces. The [[Persian Campaign]] was to last until 1918 and end in failure for the Ottomans and their allies. However the Russian withdrawal from the war in 1917 led to Armenian and Assyrian forces, who had hitherto inflicted a series of defeats upon the forces of the Ottomans and their allies, being cut off from supply lines, outnumbered, outgunned and isolated, forcing them to fight and flee towards British lines in northern Mesopotamia.&lt;ref&gt;a b c d e f g (Northcote 1922, pp. 788)&lt;/ref&gt;

General [[Nikolai Yudenich|Yudenich]], the Russian commander from 1915 to 1916, drove the Turks out of most of the southern Caucasus with a string of victories.&lt;ref name=caven/&gt; In 1917, Russian [[Grand Duke Nicholas]] assumed command of the Caucasus front. Nicholas planned a railway from [[Georgia within the Russian Empire|Russian Georgia]] to the conquered territories, so that fresh supplies could be brought up for a new offensive in 1917. However, in March 1917 (February in the pre-revolutionary Russian calendar), the Czar abdicated in the course of the [[February Revolution]] and the [[Russian Caucasus Army (World War I)|Russian Caucasus Army]] began to fall apart.

The [[Arab Revolt]], instigated by the Arab bureau of the British [[Foreign Office]], started June 1916 with the [[Battle of Mecca (1916)|Battle of Mecca]], led by [[Sherif Hussein]] of [[Mecca]], and ended with the Ottoman surrender of Damascus. [[Fakhri Pasha]], the Ottoman commander of [[Medina]], resisted for more than two and half years during the [[Siege of Medina]] before surrendering.{{sfn |Sachar |1970 |pp=122138}}

The [[Senussi]] tribe, along the border of Italian Libya and British Egypt, incited and armed by the Turks, waged a small-scale guerrilla war against Allied troops. The British were forced to dispatch 12,000 troops to oppose them in the [[Senussi Campaign]]. Their rebellion was finally crushed in mid-1916.{{sfn |Gilbert |1994}}

Total Allied casualties on the Ottoman fronts amounted 650,000 men. Total Ottoman casualties were 725,000 (325,000 dead and 400,000 wounded).&lt;ref name=&quot;Brief Ottoman History&quot;&gt;{{cite book |last=Hanioglu|first=M. Sukru|title=A Brief History of the Late Ottoman Empire|publisher=Princeton University Press|year=2010|pages=180181|isbn=978-0-691-13452-9}}&lt;/ref&gt;

====Italian participation====
{{Main article |Italian Front (World War I)|Albania during World War I}}
{{Further information |Battles of the Isonzo}}
[[File:Interventisti Bologna 1914.jpg|thumb|right|220px|A pro-war demonstration in [[Bologna]], 1914.]]

Italy had been allied with the German and Austro-Hungarian Empires since 1882 as part of the Triple Alliance. However, the nation had its own designs on Austrian territory in [[Trentino]], the [[Austrian Littoral]], [[Rijeka|Fiume]] (Rijeka) and [[Dalmatia]]. Rome had a secret 1902 pact with France, effectively nullifying its part in the Triple Alliance.&lt;ref&gt;{{cite book|first=Hall|last=Gardner|title=The Failure to Prevent World War I: The Unexpected Armageddon|url={{google books|plainurl=y|id=631TBgAAQBAJ|page=120}} |year=2015 |publisher=Ashgate |page=120}}&lt;/ref&gt; At the start of hostilities, Italy refused to commit troops, arguing that the Triple Alliance was defensive and that Austria-Hungary was an aggressor. The Austro-Hungarian government began negotiations to secure Italian neutrality, offering the French colony of Tunisia in return. The Allies made a counter-offer in which Italy would receive the [[Trentino-Alto Adige/Sdtirol|Southern Tyrol]], Austrian Littoral and territory on the Dalmatian coast after the defeat of Austria-Hungary. This was formalised by the [[Treaty of London (1915)|Treaty of London]]. Further encouraged by the Allied invasion of Turkey in April 1915, Italy joined the Triple Entente and declared war on Austria-Hungary on 23 May. Fifteen months later, Italy declared war on Germany.&lt;ref&gt;{{cite book|first=Thomas Nelson|last=Page|title=Italy and the world war|url={{google books|plainurl=y|id=nQgyAQAAIAAJ|page=142}} |year=1920 |publisher=Scribners |pages=142208}}&lt;/ref&gt;

[[File:Austro-Hungarian mountain corps.jpg|thumb|left|Austro-Hungarian troops, Tyrol.]]
The Italians had numerical superiority but this advantage was lost, not only because of the difficult terrain in which the fighting took place, but also because of the strategies and tactics employed.&lt;ref&gt;Marshall|page=108&lt;/ref&gt; [[Field Marshal]] [[Luigi Cadorna]], a staunch proponent of the frontal assault, had dreams of breaking into the Slovenian plateau, taking [[Ljubljana]] and threatening Vienna.

On the Trentino front, the Austro-Hungarians took advantage of the mountainous terrain, which favoured the defender. After an initial strategic retreat, the front remained largely unchanged, while Austrian [[Kaiserschtzen]] and [[Standschtzen]] engaged Italian [[Alpini]] in bitter hand-to-hand combat throughout the summer. The Austro-Hungarians counterattacked in the [[Asiago|Altopiano of Asiago]], towards Verona and Padua, in the spring of 1916 (''[[Battle of Asiago|Strafexpedition]]''), but made little progress.&lt;ref&gt;{{cite book|first=Mark|last=Thompson|title=The White War: Life and Death on the Italian Front, 19151919|publisher=London: Faber and Faber|page=163}}&lt;/ref&gt;

Beginning in 1915, the Italians under Cadorna mounted eleven offensives on the [[Battles of the Isonzo|Isonzo front]] along the [[Soa|Isonzo]] (Soa) River, northeast of [[Trieste]]. All eleven offensives were repelled by the Austro-Hungarians, who held the higher ground. In the summer of 1916, after the [[Battle of Doberd]], the Italians captured the town of [[Gorizia]]. After this minor victory, the front remained static for over a year, despite several Italian offensives, centred on the [[Banjice Plateau|Banjice]] and Karst Plateau east of Gorizia.

[[File:Kmpfe auf dem Doberdo.JPG|thumb |Depiction of the [[Battle of Doberd]], fought in August 1916 between the Italian and the Austro-Hungarian armies]]
The Central Powers launched a crushing offensive on 26 October 1917, spearheaded by the Germans. They achieved a victory at [[Battle of Caporetto|Caporetto]] ([[Kobarid]]). The Italian Army was routed and retreated more than {{convert |100 |km |mi}} to reorganise, stabilising the front at the [[Battle of the Piave River|Piave River]]. Since the Italian Army had suffered heavy losses in the Battle of Caporetto, the Italian Government called to arms the so-called ''{{'}}99 Boys'' (''Ragazzi del '99''): that is, all males born 1899 and prior, and so were 18 years old or older. In 1918, the Austro-Hungarians failed to break through in a series of battles on the Piave and were finally decisively defeated in the [[Battle of Vittorio Veneto]] in October of that year. On 1 November, the Italian Navy destroyed much of the Austro-Hungarian fleet stationed in [[Pula]], preventing it from being handed over to the new [[State of Slovenes, Croats and Serbs]]. On 3 November, the Italians invaded Trieste from the sea. On the same day, the [[Armistice of Villa Giusti]] was signed. By mid-November 1918, the Italian military occupied the entire former Austrian Littoral and had seized control of the portion of Dalmatia that had been guaranteed to Italy by the London Pact.&lt;ref&gt;Giuseppe Praga, Franco Luxardo. ''History of Dalmatia''. Giardini, 1993. Pp. 281.&lt;/ref&gt; By the end of hostilities in November 1918,&lt;ref name=&quot;Paul O 2005. Pp. 17&quot;&gt;Paul O'Brien. ''Mussolini in the First World War: the Journalist, the Soldier, the Fascist''. Oxford, England, UK; New York, New York, USA: Berg, 2005. Pp. 17.&lt;/ref&gt; Admiral [[Enrico Millo]] declared himself Italy's Governor of Dalmatia.&lt;ref name=&quot;Paul O 2005. Pp. 17&quot;/&gt; Austria-Hungary surrendered on 11 November 1918.{{sfn |Hickey |2003 |pp=6065}}{{sfn |Tucker |2005 |pp=5859}}

====Romanian participation====
{{Main article |Romania during World War I}}
[[File:Marshal Joffre inspecting Romanian troops during WWI.jpg|thumb|left|Marshal [[Joffre]] inspecting Romanian troops, 1916]]
[[File:Romanian troops at Marasesti in 1917.jpg|thumb |Romanian troops during the [[Battle of Mreti]], 1917]]

Romania had been allied with the Central Powers since 1882. When the war began, however, it declared its neutrality, arguing that because Austria-Hungary had itself declared war on Serbia, Romania was under no obligation to join the war. When the Entente Powers promised Romania [[Transylvania]] and [[Banat]], large territories of eastern Hungary, in exchange for Romania's declaring war on the Central Powers, the Romanian government renounced its neutrality. On 27 August 1916, the Romanian Army [[Battle of Transylvania|launched an attack]] against Austria-Hungary, with limited Russian support. The Romanian offensive was initially successful, against the Austro-Hungarian troops in Transylvania, but a counterattack by the forces of the Central Powers drove them back.&lt;ref&gt;Michael B. Barrett, ''Prelude to Blitzkrieg: The 1916 Austro-German Campaign in Romania'' (2013)&lt;/ref&gt; As a result of the [[Battle of Bucharest]], the Central Powers occupied Bucharest on 6 December 1916. Fighting in Moldova [[Romanian Campaign#Stabilization and stalemate (1917)|continued in 1917]], resulting in a costly stalemate for the Central Powers.&lt;ref&gt;{{cite web|url=http://www.worldwar2.ro/primulrazboi/?language=en&amp;article=116|title=The Battle of Marasti (July 1917)|publisher=WorldWar2.ro|date=22 July 1917|accessdate=8 May 2011}}&lt;/ref&gt;&lt;ref&gt;Cyril Falls, ''The Great War'', p. 285&lt;/ref&gt; Russian withdrawal from the war in late 1917 as a result of the [[October Revolution]] meant that Romania was forced to sign an armistice with the Central Powers on 9 December 1917.

In January 1918, Romanian forces established control over [[Bessarabia]] as the Russian Army abandoned the province. Although a treaty was signed by the Romanian and the [[Bolshevik]] Russian governments following talks between 5 and 9 March 1918 on the withdrawal of Romanian forces from Bessarabia within two months, on 27 March 1918 Romania attached Bessarabia to its territory, formally based on a resolution passed by the local assembly of that territory on its unification with Romania.&lt;ref&gt;Clark, Charles Upson (1927). Bessarabia. New York City: Dodd, Mead.&lt;/ref&gt;

Romania officially made peace with the Central Powers by signing the [[Treaty of Bucharest (1918)|Treaty of Bucharest]] on 7 May 1918. Under that treaty, Romania was obliged to end the war with the Central Powers and make small territorial concessions to Austria-Hungary, ceding control of some passes in the [[Carpathian Mountains]], and to grant oil concessions to Germany. In exchange, the Central Powers recognised the sovereignty of Romania over Bessarabia. The treaty was renounced in October 1918 by the [[Alexandru Marghiloman]] government, and Romania nominally re-entered the war on 10 November 1918. The next day, the Treaty of Bucharest was nullified by the terms of the Armistice of [[Compigne]].&lt;ref&gt;{{cite book |last=Bla|first=Kpeczi|title=Erdly trtnete|publisher=Akadmiai Kiad|url=http://mek.oszk.hu/02100/02109/html/571.html}}&lt;/ref&gt;&lt;ref&gt;{{cite book |last=Bla|first=Kpeczi|title=History of Transylvania|publisher=Akadmiai Kiad|url=http://mek.niif.hu/03400/03407/html/429.html|isbn=84-8371-020-X}}&lt;/ref&gt; Total Romanian deaths from 1914 to 1918, military and civilian, within contemporary borders, were estimated at 748,000.&lt;ref&gt;{{cite book |title=   20. |language=Russian |trans_title=The loss of population in the 20th Century|last=Erlikman|first=Vadim|year=2004|location=Moscow|publisher= |isbn=9785931651071}}&lt;/ref&gt;

===Eastern Front===
{{Main article |Eastern Front (World War I)}}
[[File:Nastepca tronu w twierdzy przemysl.jpg|thumb|Heir presumptive Karl visiting the fortress of Przemyl after the first siege. The Russian [[Siege of Przemyl]] was the longest siege of the war.]]

====Initial actions====
While the Western Front had reached stalemate, the war continued in East Europe.&lt;ref&gt;Prit Buttar, ''Collision of Empires: The War on the Eastern Front in 1914'' (2014)&lt;/ref&gt; Initial Russian plans called for simultaneous invasions of Austrian [[Kingdom of Galicia and Lodomeria|Galicia]] and East Prussia. Although Russia's initial advance into Galicia was largely successful, it was driven back from East Prussia by Hindenburg and [[Erich Ludendorff|Ludendorff]] at the battles of Tannenberg and the [[First Battle of the Masurian Lakes|Masurian Lakes]] in August and September 1914.{{sfn |Tucker |2005 |p=715}}{{sfn |Meyer |2006 |pp=1524, 161, 163, 175, 182}} Russia's less developed industrial base and ineffective military leadership were instrumental in the events that unfolded. By the spring of 1915, the Russians had retreated to Galicia, and, in May, the Central Powers achieved a remarkable breakthrough on Poland's southern frontiers.&lt;ref name=&quot;Smele&quot;&gt;{{harvnb |Smele}}&lt;/ref&gt; On 5 August, they captured [[Warsaw]] and forced the Russians to withdraw from Poland.

====Russian Revolution====
{{Main article |Russian Revolution}}
[[File:Wladiwostok Parade 1918.jpg|thumb|left|Allied troops parade through [[Vladivostok]] in armed support of the anti-communist [[White Movement#White Army|White Army]], September 1918]]
[[File:Brest-litovsk treaty.jpg|thumb |[[Treaty of Brest-Litovsk]], 1918. {{ordered list |[[Count Ottokar von Czernin]] |[[Richard von Khlmann]] |[[Vasil Radoslavov]]}}]]

Despite Russia's success with the June 1916 [[Brusilov Offensive]] in eastern Galicia,{{sfn |Schindler |2003}} dissatisfaction with the Russian government's conduct of the war grew. The offensive's success was undermined by the reluctance of other generals to commit their forces to support the victory. Allied and Russian forces were revived only temporarily by Romania's entry into the war on 27 August. German forces came to the aid of embattled Austro-Hungarian units in Transylvania while a German-Bulgarian force attacked from the south, and [[Bucharest]] was retaken by the Central Powers on 6 December. Meanwhile, unrest grew in Russia, as the [[Nicholas II of Russia|Tsar]] remained at the front. [[Alexandra Feodorovna (Alix of Hesse)|Empress Alexandra's]] increasingly incompetent rule drew protests and resulted in the murder of her favourite, [[Grigori Rasputin|Rasputin]], at the end of 1916.

In March 1917, demonstrations in [[Saint Petersburg|Petrograd]] culminated in the abdication of Tsar Nicholas II and the appointment of a weak [[Russian Provisional Government|Provisional Government]], which shared power with the [[Petrograd Soviet]] socialists. This arrangement led to confusion and chaos both at the front and at home. The army became increasingly ineffective.&lt;ref name=&quot;Smele&quot;/&gt;

Following the Tsar's abdication, [[Vladimir Lenin]] was ushered by train from Switzerland into Russia 16 April 1917. He was financed by [[Jacob Schiff]].&lt;ref&gt;Cholly Knickerbocker. New York Journal American. 3 February 1949.&lt;/ref&gt; Discontent and the weaknesses of the Provisional Government led to a rise in the popularity of the Bolshevik Party, led by Lenin, which demanded an immediate end to the war. The Revolution of November was followed in December by an armistice and negotiations with Germany. At first, the Bolsheviks refused the German terms, but when German troops began marching across Ukraine unopposed, the new government acceded to the [[Treaty of Brest-Litovsk]] on 3 March 1918. The treaty ceded vast territories, including Finland, the [[Baltic states|Baltic provinces]], parts of Poland and Ukraine to the Central Powers.{{sfn |Wheeler-Bennett |1956}}{{Citation not found}} Despite this enormous apparent German success, the manpower required for German occupation of former Russian territory may have contributed to the failure of the Spring Offensive and secured relatively little food or other [[materiel]] for the Central Powers war effort.

With the adoption of the Treaty of Brest-Litovsk, the Entente no longer existed. The Allied powers led [[Allied intervention in the Russian Civil War|a small-scale invasion]] of Russia, partly to stop Germany from exploiting Russian resources, and to a lesser extent, to support the [[White movement|&quot;Whites&quot;]] (as opposed to the &quot;Reds&quot;) in the [[Russian Civil War]].{{sfn |Mawdsley |2008 |pp=5455}} Allied troops landed in [[Arkhangelsk]] and in [[Vladivostok]] as part of the [[North Russia Intervention]].

====Czechoslovak Legion====
[[File:Czech Troops.jpg|thumb |[[Czechoslovak Legion]], Vladivostok, 1918.]]
{{Main article |Czechoslovak Legion}}
The Czechoslovak Legion fought with the Entente; their goal was to win support for the independence of [[Czechoslovakia]]. The Legion in [[Russia]] was established in September 1914, in December 1917 in [[France]] (including volunteers from America) and in April 1918 in [[Italy]]. Czechoslovak Legion troops defeated the [[Austria-Hungary|Austro-Hungarian]] army at the Ukrainian village of [[Battle of Zborov (1917)|Zborov]], in July 1917. After this success, the number of Czechoslovak legionaries increased, as well as Czechoslovak military power. In the [[Battle of Bakhmach]], the Legion defeated the Germans and forced them to make a truce.

In Russia, they were heavily involved in the Russian Civil War, siding with the Whites against the [[Bolsheviks]], at times controlling most of the [[Trans-Siberian railway]] and conquering all the major cities of [[Siberia]]. The presence of the Czechoslovak Legion near [[Yekaterinburg]] appears to have been one of the motivations for the Bolshevik [[Shooting of the Romanov family|execution of the Tsar and his family]] in July 1918. Legionaries arrived less than a week afterwards and captured the city. Because Russia's European ports were not safe, the corps was evacuated by a long detour via the port of Vladivostok. The last transport was the American ship Heffron in September 1920.

===Central Powers peace overtures===
[[File:River Crossing NGM-v31-p338.jpg|thumb |right |&quot;''[[They shall not pass]]&quot;'', a phrase typically associated with the defense of Verdun.]]

In December 1916, after ten brutal months of the Battle of Verdun and a [[Romania during World War I#The counteroffensive of the Central Powers (SeptemberDecember 1916)|successful offensive against Romania]], the Germans attempted to negotiate a peace with the Allies. Soon after, the U.S. President, Woodrow Wilson, attempted to intervene as a peacemaker, asking in a note for both sides to state their demands. [[David Lloyd George|Lloyd George's]] War Cabinet considered the German offer to be a ploy to create divisions amongst the Allies. After initial outrage and much deliberation, they took Wilson's note as a separate effort, signalling that the United States was on the verge of entering the war against Germany following the &quot;submarine outrages&quot;. While the Allies debated a response to Wilson's offer, the Germans chose to rebuff it in favour of &quot;a direct exchange of views&quot;. Learning of the German response, the Allied governments were free to make clear demands in their response of 14 January. They sought restoration of damages, the evacuation of occupied territories, reparations for France, Russia and Romania, and a recognition of the principle of nationalities. This included the liberation of Italians, Slavs, Romanians, Czecho-Slovaks, and the creation of a &quot;free and united Poland&quot;. On the question of security, the Allies sought guarantees that would prevent or limit future wars, complete with sanctions, as a condition of any peace settlement.{{sfn |Kernek |1970 |pp=721766}} The negotiations failed and the Entente powers rejected the German offer, because Germany did not state any specific proposals. The Entente powers stated to Wilson that they would not start peace negotiations until the Central powers evacuated all occupied Allied territories and provided indemnities for all damage that had been done.{{sfn |Stracham |1998 |p=61}}{{Citation not found}}

===19171918===

====Developments in 1917====
[[File:Guetteur au poste de l'cluse 26.jpg|thumb |upright |left |French Army lookout at his observation post, [[Haut-Rhin]], France, 1917.]]
[[File:Bundesarchiv Bild 183-1983-0323-501, Kriegskinematograph im Schtzengraben.jpg|thumb|German&lt;!--UFA?--&gt; film crew recording the action.]]

Events of 1917 proved decisive in ending the war, although their effects were not fully felt until 1918.

The British naval blockade began to have a serious impact on Germany. In response, in February 1917, the [[German General Staff]] convinced [[Chancellor]] [[Theobald von Bethmann-Hollweg]] to declare unrestricted submarine warfare, with the goal of starving Britain out of the war. German planners estimated that unrestricted submarine warfare would cost Britain a monthly shipping loss of 600,000 tons. The General Staff acknowledged that the policy would almost certainly bring the United States into the conflict, but calculated that British shipping losses would be so high that they would be forced to sue for peace after 5 to 6 months, before American intervention could make an impact. In reality, tonnage sunk rose above 500,000&amp;nbsp;tons per month from February to July. It peaked at 860,000&amp;nbsp;tons in April. After July, the newly re-introduced [[convoy]] system became effective in reducing the U-boat threat. Britain was safe from starvation, while German industrial output fell and the United States joined the war far earlier than Germany had anticipated.

On 3 May 1917, during the Nivelle Offensive, the French 2nd Colonial Division, veterans of the Battle of Verdun, refused orders, arriving drunk and without their weapons. Their officers lacked the means to punish an entire division, and harsh measures were not immediately implemented. The French Army Mutinies eventually spread to a further 54 French divisions and saw 20,000 men desert. However, appeals to patriotism and duty, as well as mass arrests and trials, encouraged the soldiers to return to defend their trenches, although the French soldiers refused to participate in further offensive action.&lt;ref&gt;Marshall, 292.&lt;/ref&gt; [[Robert Nivelle]] was removed from command by 15 May, replaced by General [[Philippe Ptain]], who suspended bloody large-scale attacks.

The victory of the Central Powers at the Battle of Caporetto led the Allies to convene the [[Rapallo Conference]] at which they formed the [[Supreme War Council]] to coordinate planning. Previously, British and French armies had operated under separate commands.

In December, the Central Powers signed an armistice with Russia, thus freeing large numbers of German troops for use in the west. With German reinforcements and new American troops pouring in, the outcome was to be decided on the Western Front. The Central Powers knew that they could not win a protracted war, but they held high hopes for success based on a final quick offensive. Furthermore, both sides became increasingly fearful of social unrest and revolution in Europe. Thus, both sides urgently sought a decisive victory.{{sfn|Heyman |1997 |pp=146147}}

In 1917, Emperor [[Charles I of Austria]] secretly attempted separate peace negotiations with Clemenceau, through his wife's brother [[Prince Sixtus of Bourbon-Parma|Sixtus]] in Belgium as an intermediary, without the knowledge of Germany. Italy opposed the proposals. When the negotiations failed, his attempt was revealed to Germany, resulting in a diplomatic catastrophe.{{sfn|Kurlander |2006}}{{sfn|Shanafelt |1985 |pp=12530}}

====Ottoman Empire conflict, 19171918====
{{Main article |Sinai and Palestine Campaign}}
[[File:Turkish howitzer 10.5cm leFH 98 09 LOC 00121.jpg|thumb|left|[[10.5 cm Feldhaubitze 98/09]] and Ottoman artillerymen at Hareira in 1917 before the Southern Palestine offensive.]]
[[File:Ottoman soldiers WWI.jpg|thumb|right|Ottoman troops during [[Mesopotamian campaign]].]]
[[File:Capture of Jerusalem 1917d.jpg|thumb|left|British artillery battery on [[Mount Scopus]] in the [[Battle of Jerusalem (1917)|Battle of Jerusalem]], 1917. Foreground, a battery of 16 heavy guns. Background, conical tents and support vehicles.]]
[[File:British Troops Marching in Mesopotamia.jpg|thumb|British troops on the march during [[Mesopotamian campaign]], 1917]]

In March and April 1917, at the [[First Battle of Gaza|First]] and [[Second Battle of Gaza|Second Battles of Gaza]], German and Ottoman forces stopped the advance of the Egyptian Expeditionary Force, which had begun in August 1916 at the Battle of Romani.&lt;ref&gt;{{cite book|title=Ordered to Die: A History of the Ottoman Army in the First World War: Forward by General Hseyiln Kivrikoglu|last=Erickson|first=Edward J.|series=No. 201 Contributions in Military Studies|year=2001|publisher=Greenwood Press|location=Westport Connecticut|oclc=43481698|page=163}}&lt;/ref&gt;&lt;ref&gt;{{cite book|title=The Mounted Riflemen in Sinai &amp; Palestine: The Story of New Zealand's Crusaders|last=Moore|first=A. Briscoe|year=1920|publisher=Whitcombe &amp; Tombs|location=Christchurch|oclc=156767391|page=67}}&lt;/ref&gt;
At the end of October, the [[Sinai and Palestine Campaign]] resumed, when General [[Edmund Allenby, 1st Viscount Allenby|Edmund Allenby]]'s [[XX Corps (United Kingdom)|XXth Corps]], [[XXI Corps (United Kingdom)|XXI Corps]] and [[Desert Mounted Corps]] won the [[Battle of Beersheba (1917)|Battle of Beersheba]].&lt;ref&gt;{{cite book|title=Military Operations Egypt &amp; Palestine from June 1917 to the End of the War|last=Falls|first=Cyril|series=Official History of the Great War Based on Official Documents by Direction of the Historical Section of the Committee of Imperial Defence|others=Maps by A. F. Becke|year=1930|volume=Volume 2 Part I|publisher=HM Stationery Office|location=London|oclc=644354483|page=59}}&lt;/ref&gt; Two Ottoman armies were defeated a few weeks later at the [[Battle of Mughar Ridge]] and, early in December, [[Jerusalem]] was captured following another Ottoman defeat at the [[Battle of Jerusalem (1917)]].&lt;ref&gt;{{cite book|chapter=The Palestine Campaigns|last=Wavell|first=Earl|authorlink=Archibald Wavell, 1st Earl Wavell |editor-last=Sheppard |editor-first=Eric William|edition=4th|title=A Short History of the British Army|year=1968|origyear=1933|publisher=Constable &amp; Co.|location=London|oclc=35621223|pages=1535}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.firstworldwar.com/source/jerusalemdecree.htm|title=Text of the Decree of the Surrender of Jerusalem into British Control|publisher=First World War.com|accessdate=13 May 2015|archiveurl=https://web.archive.org/web/20110614214531/http://www.firstworldwar.com/source/jerusalemdecree.htm|archivedate=14 June 2011}}&lt;/ref&gt;&lt;ref&gt;{{cite book|title=The Last Crusade: The Palestine Campaign in the First World War|last=Bruce|first=Anthony|year=2002|publisher=John Murray|location=London|isbn=978-0-7195-5432-2|page=162}}&lt;/ref&gt; About this time, [[Friedrich Freiherr Kress von Kressenstein]] was relieved of his duties as the Eighth Army's commander, replaced by [[Cevat obanl|Djevad Pasha]], and a few months later the commander of the [[Ottoman Army]] in Palestine, [[Erich von Falkenhayn]], was replaced by [[Otto Liman von Sanders]].&lt;ref&gt;{{cite web|url=http://www.firstworldwar.com/bio/kressenstein.htm|title=Who's Who  Kress von Kressenstein|publisher=First World War.com|accessdate=13 May 2015}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.firstworldwar.com/bio/liman.htm|title=Who's Who  Otto Liman von Sanders|publisher=First World War.com|accessdate=13 May 2015}}&lt;/ref&gt;

In early 1918, the front line was [[Capture of Jericho (1918)|extended]] and the [[Occupation of the Jordan Valley (1918)|Jordan Valley]] was occupied, following the [[First Transjordan attack on Amman|First Transjordan]] and the [[Second Transjordan attack on Shunet Nimrin and Es Salt (1918)|Second Transjordan]] attack by British Empire forces in March and April 1918.&lt;ref&gt;{{cite book|title=Ordered to Die: A History of the Ottoman Army in the First World War: Forward by General Hseyiln Kivrikoglu|last=Erickson|first=Edward J.|series=No. 201 Contributions in Military Studies|year=2001|publisher=Greenwood Press|location=Westport Connecticut|oclc=43481698|page=195}}&lt;/ref&gt; In March, most of the Egyptian Expeditionary Force's British infantry and [[Yeomanry]] cavalry were sent to the Western Front as a consequence of the Spring Offensive. They were replaced by Indian Army units. During several months of reorganisation and training of the summer, a [[Sinai and Palestine Campaign#Summer front line operations|number of attacks]] were carried out on sections of the Ottoman front line. These pushed the front line north to more advantageous positions for the Entente in preparation for an attack and to acclimatise the newly arrived Indian Army infantry. It was not until the middle of September that the integrated force was ready for large-scale operations.

The reorganised Egyptian Expeditionary Force, with an additional mounted division, broke Ottoman forces at the [[Battle of Megiddo (1918)|Battle of Megiddo]] in September 1918. In two days the British and Indian infantry, supported by a creeping barrage, broke the Ottoman front line and captured the headquarters of the [[Eighth Army (Ottoman Empire)]] at [[Battle of Tulkarm (1918)|Tulkarm]], the continuous trench lines at [[Battle of Tabsor (1918)|Tabsor]], [[Battle of Arara|Arara]] and the [[Seventh Army (Ottoman Empire)]] headquarters at [[Battle of Nablus (1918)|Nablus]]. The Desert Mounted Corps rode through the break in the front line created by the infantry and, during virtually continuous operations by [[Australian Light Horse]], British mounted Yeomanry, Indian [[Lancers]] and New Zealand [[Mounted Riflemen|Mounted Rifle]] brigades in the [[Jezreel Valley]], they captured [[Battle of Nazareth (1918)|Nazareth]], [[Capture of Afulah and Beisan|Afulah and Beisan]], [[Capture of Jenin (1918)|Jenin]], along with [[Battle of Haifa (1918)|Haifa]] on the Mediterranean coast and [[Daraa]] east of the Jordan River on the Hejaz railway. [[Battle of Samakh (1918)|Samakh]] and [[Tiberias]] on the [[Sea of Galilee]], were captured on the way northwards to [[Damascus]]. Meanwhile, [[Third Transjordan attack|Chaytor's Force]] of Australian light horse, New Zealand mounted rifles, Indian, British West Indies and Jewish infantry captured the crossings of the [[Jordan River]], [[Salt, Jordan|Es Salt]], [[Amman]] and at Ziza most of the [[Fourth Army (Ottoman Empire)]]. The [[Armistice of Mudros]], signed at the end of October, ended hostilities with the Ottoman Empire when fighting was continuing north of [[Aleppo]].

====15 August 1917: Peace offer by the Pope====
{{See also|Pope Benedict XV#Peace efforts}}
On or shortly before 15 August 1917 [[Pope Benedict XV]] made a peace proposal&lt;ref&gt;''[[Daily Telegraph]]'' Wednesday 15 August 1917, reprinted on page 26 of ''Daily Telegraph'' Tuesday 15 August 2017&lt;/ref&gt; suggesting:
*No annexations
*No indemnities, except to compensate for severe war damage in Belgium and parts of France and of Serbia.
*A solution to the problems of [[Alsace-Lorraine]] and [[Trentino]] and [[Trieste]]
*Restoration of the [[Kingdom of Poland]]
*Germany to pull out of Belgium and France
*Germany's overseas colonies to be returned to Germany
*General disarmament
*A Supreme Court of arbitration to settle future disputes between nations
*The freedom of the seas
*Abolish all retaliatory economic conflicts
*No point in ordering reparations, because so much damage had been caused to all belligerents

====Entry of the United States====
{{Main article |American entry into World War I}}
[[File:USA bryter de diplomatiska frbindelserna med Tyskland 3 februari 1917.jpg|thumb|left|[[Woodrow Wilson|President Wilson]] before Congress, announcing the break in official relations with Germany on 3 February 1917]]

At the outbreak of the war, the United States pursued a policy of [[non-intervention]], avoiding conflict while trying to broker a peace. When the German U-boat [[SM U-20 (Germany)|''U-20'']] [[Sinking of the RMS Lusitania|sank the British liner RMS ''Lusitania'']] on 7 May 1915 with 128 Americans among the dead, President [[Woodrow Wilson]] insisted that &quot;America is too proud to fight&quot; but demanded an end to attacks on passenger ships. Germany complied. Wilson unsuccessfully tried to mediate a settlement. However, he also repeatedly warned that the United States would not tolerate unrestricted submarine warfare, in violation of international law. Former president [[Theodore Roosevelt]] denounced German acts as &quot;piracy&quot;.{{sfn |Brands |1997 |p=756}} Wilson was narrowly reelected in [[United States presidential election, 1916|1916]] as his supporters emphasized &quot;he kept us out of war&quot;.{{Cite quote|date=June 2017}}

In January 1917, Germany resumed unrestricted submarine warfare, realizing it would mean American entry. The German Foreign Minister, in the [[Zimmermann Telegram]], invited Mexico to join the war as Germany's ally against the United States. In return, the Germans would finance Mexico's war and help it recover the territories of Texas, New Mexico, and Arizona.{{sfn |Tuchman |1966}} The United Kingdom intercepted the message and presented it to the U.S. embassy in the U.K. From there it made its way to President Wilson who released the Zimmermann note to the public, and Americans saw it as ''[[casus belli]]''. Wilson called on antiwar elements to end all wars, by winning this one and eliminating militarism from the globe. He argued that the war was so important that the U.S. had to have a voice in the peace conference.&lt;ref name=&quot;Karp-PoW-1979&quot;&gt;{{harvnb |Karp |1979}}&lt;/ref&gt; After the sinking of seven U.S. merchant ships by submarines and the publication of the Zimmermann telegram, Wilson called for war on Germany,&lt;ref&gt;[[S: Woodrow Wilson Urges Congress to Declare War on Germany|&quot;Woodrow Wilson Urges Congress to Declare War on Germany&quot;]] (Wikisource)&lt;/ref&gt; which the [[US Congress|U.S. Congress]] [[United States declaration of war on Germany (1917)|declared on 6 April 1917]].

The United States was never formally a member of the Allies but became a self-styled &quot;Associated Power&quot;. The United States had a small army, but, after the passage of the [[Selective Service Act of 1917|Selective Service Act]], it drafted 2.8 million men,&lt;ref&gt;{{cite web|url=http://www.sss.gov/induct.htm|title=Selective Service System: History and Records|publisher=Sss.gov|accessdate=27 July 2010|deadurl=yes|archiveurl=https://web.archive.org/web/20090507211238/http://www.sss.gov/induct.htm|archivedate=7 May 2009|df=}}&lt;/ref&gt; and, by summer 1918, was sending 10,000 fresh soldiers to France every day. In 1917, the U.S. Congress granted U.S. citizenship to Puerto Ricans to allow them to be drafted to participate in World War I, as part of the [[JonesShafroth Act]]. If Germany believed it would be many more months before American soldiers would arrive and that their arrival could be stopped by U-boats, it had miscalculated.{{sfn |Wilgus |1931 |p=52}}

The [[United States Navy]] sent a [[United States Battleship Division Nine (World War I)|battleship group]] to [[Scapa Flow]] to join with the British Grand Fleet, destroyers to [[Cobh|Queenstown]], [[Ireland]], and [[submarine]]s to help guard convoys. Several regiments of [[US Marines|U.S. Marines]] were also dispatched to France. The British and French wanted American units used to reinforce their troops already on the battle lines and not waste scarce shipping on bringing over supplies. General [[John J. Pershing]], [[American Expeditionary Forces]] (AEF) commander, refused to break up American units to be used as filler material. As an exception, he did allow African-American combat regiments to be used in French divisions. The [[Harlem Hellfighters]] fought as part of the French 16th Division, and earned a unit [[Croix de guerre 19141918 (France)|Croix de Guerre]] for their actions at [[Battle of Chteau-Thierry (1918)|Chteau-Thierry]], [[Battle of Belleau Wood|Belleau Wood]], and Sechault.&lt;ref&gt;{{cite web |publisher=US [[National Archives and Records Administration]]|url=https://www.archives.gov/education/lessons/369th-infantry/|title=Teaching With Documents: Photographs of the 369th Infantry and African Americans during World War I|accessdate=29 October 2009|deadurl=yes|archiveurl=https://web.archive.org/web/20090604163502/http://www.archives.gov/education/lessons/369th-infantry/|archivedate=4 June 2009|df=}}&lt;/ref&gt; AEF doctrine called for the use of frontal assaults, which had long since been discarded by British Empire and French commanders due to the large loss of life that resulted.{{sfn |Millett |Murray |1988 |p=143}}

====German Spring Offensive of 1918====
{{Main article |Spring Offensive}}
[[File:British 55th Division gas casualties 10 April 1918.jpg|thumb|left|British [[55th (West Lancashire) Infantry Division|55th Division]] soldiers, blinded by tear gas during the [[Battle of the Lys (1918)|Battle of Estaires]], 10 April 1918]]
[[File:General gouraud french army world war i machinegun marne 1918.JPEG|thumb |French soldiers under [[Henri Gouraud (French Army officer)|General Gouraud]], with machine guns amongst the ruins of a cathedral near the [[Marne (river)|Marne]], 1918.]]

Ludendorff drew up plans ([[Code name|codenamed]] [[Operation Michael]]) for the 1918 offensive on the Western Front. The Spring Offensive sought to divide the British and French forces with a series of feints and advances. The German leadership hoped to end the war before significant U.S. forces arrived. The operation commenced on 21 March 1918, with an attack on British forces near [[Saint-Quentin, Aisne|Saint-Quentin]]. German forces achieved an unprecedented advance of {{convert |60 |km |mi}}.{{sfn |Westwell |2004}}

British and French trenches were penetrated using novel [[infiltration tactics]], also named ''Hutier'' tactics, after General [[Oskar von Hutier]], by specially trained units called [[Stosstruppen|stormtroopers]]. Previously, attacks had been characterised by long artillery bombardments and massed assaults. However, in the Spring Offensive of 1918, Ludendorff used artillery only briefly and infiltrated small groups of infantry at weak points. They attacked command and logistics areas and bypassed points of serious resistance. More heavily armed infantry then destroyed these isolated positions. This German success relied greatly on the element of surprise.{{sfn |Posen |1984 |pp=190}}{{Citation not found}}

The front moved to within {{convert |120 |km |mi}} of Paris. Three heavy [[Krupp]] [[railway gun]]s fired 183&amp;nbsp;shells on the capital, causing many Parisians to flee. The initial offensive was so successful that Kaiser Wilhelm II declared 24 March a [[Public holiday|national holiday]]. Many Germans thought victory was near. After heavy fighting, however, the offensive was halted. Lacking tanks or [[Self-propelled artillery|motorised artillery]], the Germans were unable to consolidate their gains. The problems of re-supply were also exacerbated by increasing distances that now stretched over terrain that was shell-torn and often impassable to traffic.{{sfn |Gray |1991 |p=86}}

[[Ferdinand Foch|General Foch]] pressed to use the arriving American troops as individual replacements, whereas Pershing sought to field American units as an independent force. These units were assigned to the depleted French and British Empire commands on 28 March. A Supreme War Council of Allied forces was created at the [[Doullens Conference]] on 5 November 1917. General Foch was appointed as supreme commander of the Allied forces. Haig, Petain, and Pershing retained tactical control of their respective armies; Foch assumed a coordinating rather than a directing role, and the British, French, and U.S. commands operated largely independently.{{sfn|Moon |1996 |pp=495196}}

Following Operation Michael, Germany launched [[Battle of the Lys (1918)|Operation Georgette]] against the northern [[English Channel]] ports. The Allies halted the drive after limited territorial gains by Germany. The German Army to the south then conducted [[Third Battle of the Aisne|Operations Blcher and Yorck]], pushing broadly towards Paris. Germany launched Operation Marne ([[Second Battle of the Marne]]) 15 July, in an attempt to encircle [[Reims]]. The resulting counterattack, which started the [[Hundred Days Offensive]], marked the first successful Allied offensive of the war.

By 20 July, the Germans had retreated across the Marne to their starting lines,{{sfn |Rickard |2007}} having achieved little, and the German Army never regained the initiative. German casualties between March and April 1918 were 270,000, including many highly trained storm troopers.

Meanwhile, Germany was falling apart at home. [[Anti-war]] marches became frequent and morale in the army fell. Industrial output was half the 1913 levels.

====New states under war zone====
In the late spring of 1918, three new states were formed in the [[South Caucasus]]: the [[First Republic of Armenia]], the [[Azerbaijan Democratic Republic]], and the [[Democratic Republic of Georgia]], which declared their independence from the Russian Empire. Two other minor entities were established, the [[Centrocaspian Dictatorship]] and [[South West Caucasian Republic]] (the former was liquidated by Azerbaijan in the autumn of 1918 and the latter by a joint Armenian-British task force in early 1919). With the withdrawal of the Russian armies from the Caucasus front in the winter of 191718, the three major republics braced for an imminent Ottoman advance, which commenced in the early months of 1918. Solidarity was briefly maintained when the [[Transcaucasian Democratic Federative Republic|Transcaucasian Federative Republic]] was created in the spring of 1918, but this collapsed in May, when the Georgians [[Treaty of Poti|asked for and received protection]] from Germany and the Azerbaijanis concluded a treaty with the Ottoman Empire that was more akin to a military alliance. Armenia was left to fend for itself and struggled for five months against the threat of a full-fledged occupation by the Ottoman Turks before defeating them at the [[Battle of Sardarabad]].{{sfn|Hovannisian |1967 |pp=139}}

===Allied victory: summer 1918 onwards===
[[File:Riflemen-1918-Western-Front.jpg|thumb|200px|Between April and November 1918, the Allies increased their front-line rifle strength while German strength fell by half.{{sfn |Ayers |1919 |p=104}}]]

====Hundred Days Offensive====
{{Main article |Hundred Days Offensive |Weimar Republic}}
[[File:Aerial view of ruins of Vaux, France, 1918, ca. 03-1918 - ca. 11-1918 - NARA - 512862.tif|thumb|left|Aerial view of ruins of [[Vaux-devant-Damloup]], France, 1918]]

The Allied counteroffensive, known as the Hundred Days Offensive, began on 8 August 1918, with the [[Battle of Amiens (1918)|Battle of Amiens]]. The battle involved over 400 tanks and 120,000 British, [[Dominion]], and French troops, and by the end of its first day a gap {{convert |24|km|mi| abbr = }} long had been created in the German lines. The defenders displayed a marked collapse in morale, causing Ludendorff to refer to this day as the &quot;Black Day of the German army&quot;.&lt;ref&gt;{{cite book|publisher=Vanwell|origyear=1977|year=2004|title=Shock Army of the British Empire: The Canadian Corps in the Last 100 Days of the Great War|last=Schreiber|first=Shane B|place=St. Catharines, ON|isbn=1-55125-096-9|oclc=57063659}}&lt;/ref&gt;{{sfn |Rickard |2001}}{{better source|date=February 2016}} After an advance as far as {{convert |23|km|mi|0}}, German resistance stiffened, and the battle was concluded on 12 August.

Rather than continuing the Amiens battle past the point of initial success, as had been done so many times in the past, the Allies shifted their attention elsewhere. Allied leaders had now realised that to continue an attack after resistance had hardened was a waste of lives, and it was better to turn a line than to try to roll over it. They began to undertake attacks in quick order to take advantage of successful advances on the flanks, then broke them off when each attack lost its initial impetus.&lt;ref name=&quot;Pitt-1962&quot;&gt;{{harvnb |Pitt |2003}}&lt;/ref&gt;

[[File:Canadian Scottish at Canal du Nord Sept 1918 IWM CO 3289.jpg|thumb|left|[[16th Battalion (Canadian Scottish), CEF|Canadian Scottish]], advancing during the [[Battle of the Canal du Nord]], 1918]]

British and Dominion forces launched the next phase of the campaign with the [[Battle of Albert (1918)|Battle of Albert]] on 21 August.{{sfn |Terraine |1963}} The assault was widened by French&lt;ref name=&quot;Chron-FWW&quot;&gt;{{harvnb |Gray |Argyle |1990}}&lt;/ref&gt; and then further British forces in the following days. During the last week of August the Allied pressure along a {{convert |110|km|mi|0 |sing=on}} front against the enemy was heavy and unrelenting. From German accounts, &quot;Each day was spent in bloody fighting against an ever and again on-storming enemy, and nights passed without sleep in retirements to new lines.&quot;&lt;ref name=&quot;Pitt-1962&quot;/&gt;

Faced with these advances, on 2 September the German [[Oberste Heeresleitung|Supreme Army Command]] issued orders to withdraw to the [[Hindenburg Line]] in the south. This ceded without a fight the [[Salient (territory)|salient]] seized the previous April.{{sfn |Nicholson |1962}} According to Ludendorff &quot;We had to admit the necessity&amp;nbsp;... to withdraw the entire front from the Scarpe to the Vesle.{{sfn |Ludendorff |1919}}

September saw the Allies [[Hundred Days Offensive#Advance to the Hindenburg Line|advance to the Hindenburg Line]] in the north and centre. The Germans continued to fight strong rear-guard actions and launched numerous counterattacks on lost positions, but only a few succeeded, and those only temporarily. Contested towns, villages, heights, and trenches in the screening positions and outposts of the Hindenburg Line continued to fall to the Allies, with the BEF alone taking 30,441&amp;nbsp;prisoners in the last week of September. On 24 September an assault by both the British and French came within {{convert |3|km|mi|0}} of St. Quentin.&lt;ref name=&quot;Chron-FWW&quot;/&gt; The Germans had now retreated to positions along or behind the Hindenburg Line.

[[File:World War I Observation Balloon HD-SN-99-02269.JPEG|thumb |An American major, piloting an [[observation balloon]] near the front, 1918]]

In nearly four weeks of fighting beginning on 8 August, over 100,000 German prisoners were taken. As of &quot;The Black Day of the German Army&quot;, the German High Command realised that the war was lost and made attempts to reach a satisfactory end. The day after that battle, Ludendorff said: &quot;We cannot win the war any more, but we must not lose it either.&quot; On 11 August he offered his resignation to the Kaiser, who refused it, replying, &quot;I see that we must strike a balance. We have nearly reached the limit of our powers of resistance. The war must be ended.&quot; On 13 August, at [[Spa, Belgium|Spa]], Hindenburg, Ludendorff, the Chancellor, and Foreign Minister Hintz agreed that the war could not be ended militarily and, on the following day, the German Crown Council decided that victory in the field was now most improbable. Austria and Hungary warned that they could only continue the war until December, and Ludendorff recommended immediate peace negotiations. Prince Rupprecht warned Prince Max of Baden: &quot;Our military situation has deteriorated so rapidly that I no longer believe we can hold out over the winter; it is even possible that a catastrophe will come earlier.&quot; On 10 September Hindenburg urged peace moves to Emperor Charles of Austria, and Germany appealed to the Netherlands for mediation. On 14 September Austria sent a note to all belligerents and neutrals suggesting a meeting for peace talks on neutral soil, and on 15 September Germany made a peace offer to Belgium. Both peace offers were rejected, and on 24 September Supreme Army Command informed the leaders in Berlin that armistice talks were inevitable.&lt;ref name=&quot;Chron-FWW&quot;/&gt;

The [[Hundred Days Offensive#Battles of the Hindenburg Line|final assault]] on the Hindenburg Line began with the [[Meuse-Argonne Offensive]], launched by French and American troops on 26 September. The following week, cooperating French and American units broke through in [[Champagne, France|Champagne]] at the [[Battle of Blanc Mont Ridge]], forcing the Germans off the commanding heights, and closing towards the Belgian frontier.{{sfn |McLellan |p=49}} On 8 October the line was pierced again by British and Dominion troops at the [[Battle of Cambrai (1918)|Battle of Cambrai]].&lt;ref&gt;{{cite book|series=For King and Empire: A Social History and Battlefield Tour|title=The Canadians at Cambrai and the Canal du Nord, AugustSeptember 1918|publisher=CEF Books|year=1997|last=Christie|first=Norm M|isbn=1-896979-18-1|oclc=166099767}}&lt;/ref&gt; The German army had to shorten its front and use the Dutch frontier as an anchor to fight rear-guard actions as it fell back towards Germany.

When Bulgaria signed a separate armistice on 29 September, Ludendorff, having been under great stress for months, suffered something similar to a breakdown. It was evident that Germany could no longer mount a successful defence.{{sfn |Stevenson |2004 |p=380}}{{sfn |Hull |2006 |pp=30710}}

[[File:US 64th regiment celebrate the Armistice.jpg|thumb |left |Men of U.S. 64th Regiment, [[7th Infantry Division (United States)|7th Infantry Division]], celebrate the news of the Armistice, 11 November 1918.]]

News of Germany's impending military defeat spread throughout the German armed forces. The threat of mutiny was rife. Admiral Reinhard Scheer and Ludendorff decided to launch a last attempt to restore the &quot;valour&quot; of the German Navy. Knowing the government of [[Prince Maximilian of Baden]] would veto any such action, Ludendorff decided not to inform him. Nonetheless, word of the impending assault reached sailors at [[Kiel]]. Many, refusing to be part of a naval offensive, which they believed to be suicidal, rebelled and were arrested. Ludendorff took the blame; the Kaiser dismissed him on 26 October. The collapse of the Balkans meant that Germany was about to lose its main supplies of oil and food. Its reserves had been used up, even as U.S. troops kept arriving at the rate of 10,000 per day.{{sfn |Stevenson |2004 |p=383}} The Americans supplied more than 80% of Allied oil during the war, and there was no shortage.{{sfn |Painter |2012 |p=25 |ps=. Over the course of the war the United States supplied more than 80&amp;nbsp;percent of Allied oil requirements, and after US entry into the war, the United States helped provide and protect tankers transporting oil to Europe. US oil resources meant that insufficient energy supplies did not hamper the Allies, as they did the Central Powers.}}

With the military faltering and with widespread loss of confidence in the Kaiser, Germany moved towards surrender. Prince Maximilian of Baden took charge of a new government as Chancellor of Germany to negotiate with the Allies. Negotiations with President Wilson began immediately, in the hope that he would offer better terms than the British and French. Wilson demanded a constitutional monarchy and parliamentary control over the German military.{{sfn |Stevenson |2004 |p=385}} There was no resistance when the [[Social Democratic Party of Germany|Social Democrat]] [[Philipp Scheidemann]] on 9 November declared Germany to be a republic. The Kaiser, kings and other hereditary rulers all were removed from power and Wilhelm fled to exile in [[the Netherlands]]. Imperial Germany was dead; a new Germany had been born as the [[Weimar Republic]].{{sfn |Stevenson |2004 |loc=Chapter 17}}

====Armistices and capitulations====
{{Main article |Armistice of 11 November 1918}}
[[File:NYTimes-Page1-11-11-1918.jpg|left |thumb |''[[The New York Times]]'' of 11 November 1918]]
[[File:Armisticetrain.jpg|thumb |[[Ferdinand Foch]], second from right, pictured outside the carriage in [[Compigne]] after agreeing to the armistice that ended the war there. The carriage was later chosen by [[Nazi Germany]] as the symbolic setting of Ptain's June 1940 armistice.&lt;ref&gt;{{cite web|url=http://www.compiegne.fr/decouvrir/clairierearmistice.asp|deadurl=yes|archiveurl=https://web.archive.org/web/20070827142334/http://www.compiegne.fr/decouvrir/clairierearmistice.asp|archivedate=27 August 2007|title=Clairire de l'Armistice|publisher=Ville de [[Compigne]]|language=French}}&lt;/ref&gt;]]

The collapse of the Central Powers came swiftly. Bulgaria was the first to sign an armistice, on 29 September 1918 at [[Saloniki]].&lt;ref name=&quot;indiana.edu-1918&quot;&gt;{{cite web|url=http://www.indiana.edu/~league/1918.htm|work=League of Nations Photo Archive|title=1918 Timeline|accessdate=20 November 2009}}&lt;/ref&gt; On 30 October, the Ottoman Empire capitulated, signing the Armistice of Mudros.&lt;ref name=&quot;indiana.edu-1918&quot;/&gt;

On 24 October, the Italians began a push that rapidly recovered territory lost after the [[Battle of Caporetto]]. This culminated in the Battle of Vittorio Veneto, which marked the end of the Austro-Hungarian Army as an effective fighting force. The offensive also triggered the disintegration of the Austro-Hungarian Empire. During the last week of October, declarations of independence were made in Budapest, Prague, and Zagreb. On 29 October, the imperial authorities asked Italy for an armistice, but the Italians continued advancing, reaching Trento, Udine, and Trieste. On 3 November, Austria-Hungary sent a [[White flag|flag of truce]] to ask for an [[armistice]] ([[Armistice of Villa Giusti]]). The terms, arranged by telegraph with the Allied Authorities in Paris, were communicated to the Austrian commander and accepted. The Armistice with Austria was signed in the Villa Giusti, near [[Padua]], on 3 November. Austria and Hungary signed separate armistices following the overthrow of the [[Habsburg Monarchy]]. In the following days the Italian Army occupied [[Innsbruck]] and all [[Tyrol]] with 20 to 22,000 soldiers.&lt;ref&gt;{{cite journal |author=Andrea Di Michele |title=Trento, Bolzano E Innsbruck: L'occupazione Militare Italiana Del Tirolo (1918-1920) |language=it |trans_title=Trento, Bolzano and Innsbruck: The Italian Military Occupation of Tyrol (19181920) |journal=Trento e Trieste. Percorsi degli italiani d'Austria dal '48 all'annessione |publisher=Accademia Roveretana degli Agiati |year=2014 |pages=436437 |quote=La forza numerica del contingente italiano vari con il passare dei mesi e al suo culmine raggiunse i 20-22.000 uomini. [The numerical strength of the Italian contingent varied with the passing of months and at its peak reached 20-22,000 men.] |url=http://www.agiati.it/UploadDocs/12255_Art_20_di_michele.pdf}} &lt;-- see http://www.agiati.it/ara_context.jsp?ID_LINK=113344&amp;area=196 for metadata --&gt;&lt;/ref&gt;

On 11 November, at 5:00 am, an [[armistice with Germany]] was signed in a railroad carriage at Compigne. At 11&amp;nbsp;am on 11 November 1918&quot;the eleventh hour of the eleventh day of the eleventh month&quot;a ceasefire came into effect. During the six hours between the signing of the armistice and its taking effect, opposing armies on the Western Front began to withdraw from their positions, but fighting continued along many areas of the front, as commanders wanted to capture territory before the war ended.

The [[occupation of the Rhineland]] took place following the Armistice. The occupying armies consisted of American, Belgian, British and French forces.

In November 1918, the Allies had ample supplies of men and materiel to invade Germany. Yet at the time of the armistice, no Allied force had crossed the German frontier; the Western Front was still some {{convert |720|km|mi|abbr=}} from Berlin; and the Kaiser's armies had retreated from the battlefield in good order. These factors enabled Hindenburg and other senior German leaders to spread the story that their armies had not really been defeated. This resulted in the [[stab-in-the-back legend]],{{sfn |Baker |2006}}{{sfn |Chickering |2004 |pp=185188}} which attributed Germany's defeat not to its inability to continue fighting (even though up to a million soldiers were suffering from the [[1918 flu pandemic]] and unfit to fight), but to the public's failure to respond to its &quot;patriotic calling&quot; and the supposed intentional sabotage of the war effort, particularly by Jews, Socialists, and Bolsheviks.

The Allies had much more potential wealth they could spend on the war. One estimate (using 1913 U.S. dollars) is that the Allies spent $58 billion on the war and the Central Powers only $25 billion. Among the Allies, the UK spent $21 billion and the U.S. $17 billion; among the Central Powers Germany spent $20 billion.&lt;ref&gt;Gerd Hardach, ''The First World War, 19141918'' (1977) p 153, using estimated made by H. Menderhausen, ''The Economics of War'' (1941) p 305&lt;/ref&gt;

==Aftermath==
{{Main article |Aftermath of World War I}}
[[File:VERDUN-OSSUAIRE DE DOUAUMONT5.JPG|thumb |The French military cemetery at the [[Douaumont ossuary]], which contains the remains of more than 130,000 unknown soldiers]]
In the aftermath of the war, four empires disappeared: the German, Austro-Hungarian, Ottoman, and Russian. Numerous nations regained their former independence, and new ones were created. Four dynasties, together with their ancillary aristocracies, all fell as a result of the war: the [[House of Romanov|Romanovs]], the [[House of Hohenzollern|Hohenzollerns]], the [[Habsburg]]s, and the [[Ottoman Dynasty|Ottomans]]. Belgium and Serbia were badly damaged, as was France, with 1.4&amp;nbsp;million soldiers dead,&lt;ref&gt;[http://news.bbc.co.uk/2/hi/europe/7199127.stm &quot;France's oldest WWI veteran dies&quot;] {{webarchive |url=https://web.archive.org/web/20161028021340/http://news.bbc.co.uk/2/hi/europe/7199127.stm |date=28 October 2016 }}, ''BBC News'', 20 January 2008.&lt;/ref&gt; not counting other casualties. Germany and Russia were similarly affected.&lt;ref&gt;{{cite book|url={{google books|plainurl=yes|id=2YqjfHLyyj8C|page=273}} |first=Spencer |last=Tucker |year=2005 |title=Encyclopedia of World War I |publisher=[[ABC-CLIO]] |p= 273 |isbn= 1-85109-420-2}}&lt;/ref&gt;

===Formal end of the war===
A formal state of war between the two sides persisted for another seven months, until the signing of the [[Treaty of Versailles]] with Germany on 28 June 1919. The United States Senate did not ratify the treaty despite public support for it,&lt;ref&gt;{{cite book|last=Hastedt|first=Glenn P.|authorlink=|title=Encyclopedia of American Foreign Policy|publisher=Infobase Publishing|series=|volume=|edition=|date=2009|location=|page=483|language=|url=|doi=|id=|isbn=1-4381-0989-X|mr=|zbl=|jfm=}}&lt;/ref&gt;&lt;ref&gt;{{cite book|last=Murrin|first=John|authorlink=|last2=Johnson|first2=Paul | author2-link =|last3=McPherson|first3=James | author3-link =|last4=Gerstle|first4=Gary | author4-link =|last5=Fahs|first5=Alice | author5-link =|title=Liberty, Equality, Power: A History of the American People|publisher=Cengage Learning|series=|volume=II|edition=|date=2010|location=|page=622|language=|url=|doi=|id=|isbn=0-495-90383-3|mr=|zbl=|jfm=}}&lt;/ref&gt; and did not formally end its involvement in the war until the [[KnoxPorter Resolution]] was signed on 2 July 1921 by President [[Warren G. Harding]].&lt;ref&gt;{{cite news|last=Staff|title=Harding Ends War; Signs Peace Decree at Senator's Home. Thirty Persons Witness Momentous Act in Frelinghuysen Living Room at Raritan.|url=https://query.nytimes.com/gst/abstract.html?res=F10B13F63C5D14738DDDAA0894DF405B818EF1D3|newspaper=[[The New York Times]]|date=3 July 1921}}&lt;/ref&gt; For the United Kingdom and the British Empire, the state of war ceased under the provisions of the ''[[Termination of the Present War (Definition) Act 1918]]'' with respect to:

:* Germany on 10 January 1920.&lt;ref&gt;{{London Gazette |issue= 31773 |date= 10 February 1920 |page=1671}}&lt;/ref&gt;
:* Austria on 16 July 1920.&lt;ref&gt;{{London Gazette |issue= 31991 |date= 23 July 1920 |pages=77657766 }}&lt;/ref&gt;
:* Bulgaria on 9 August 1920.&lt;ref&gt;{{London Gazette |issue= 13627 |date= 27 August 1920 |city=e |page=1924}}&lt;/ref&gt;
:* Hungary on 26 July 1921.&lt;ref&gt;{{London Gazette |issue= 32421 |date= 12 August 1921 |pages=63716372 }}&lt;/ref&gt;
:* Turkey on 6 August 1924.&lt;ref&gt;{{London Gazette |issue= 32964 |date= 12 August 1924 |pages=60306031 }}&lt;/ref&gt;

After the Treaty of Versailles, treaties with Austria, Hungary, Bulgaria, and the Ottoman Empire were signed. However, the negotiation of the latter treaty with the Ottoman Empire was followed by strife, and a final peace treaty between the Allied Powers and the country that would shortly become the Republic of Turkey was not signed until 24 July 1923, at [[Treaty of Lausanne|Lausanne]].

Some [[war memorial]]s date the end of the war as being when the Versailles Treaty was signed in 1919, which was when many of the troops serving abroad finally returned to their home countries; by contrast, most commemorations of the war's end concentrate on the armistice of 11 November 1918. Legally, the formal peace treaties were not complete until the last, the Treaty of Lausanne, was signed. Under its terms, the Allied forces left [[Istanbul|Constantinople]] on 23 August 1923.

===Peace treaties and national boundaries===
[[File:Venizelos signing the Treaty of Sevres.jpeg|thumb|left|Greek prime minister [[Eleftherios Venizelos]] signing the [[Treaty of Svres]]]]
[[File:William Orpen - The Signing of Peace in the Hall of Mirrors, Versailles.jpg|thumb |The signing of peace in the [[Hall of Mirrors]], Versailles, 28 June 1919]]

After the war, the [[Paris Peace Conference, 1919|Paris Peace Conference]] imposed a series of peace treaties on the Central Powers officially ending the war. The 1919 Treaty of Versailles dealt with Germany and, building on [[Fourteen Points|Wilson's 14th point]], brought into being the [[League of Nations]] on 28 June 1919.{{sfn |Magliveras |1999 |pp=812}}{{sfn |Northedge |1986 |pp=3536}}

The Central Powers had to acknowledge responsibility for &quot;all the loss and damage to which the Allied and Associated Governments and their nationals have been subjected as a consequence of the war imposed upon them by&quot; their aggression. In the Treaty of Versailles, this statement was [[Article 231 of the Treaty of Versailles|Article 231]]. This article became known as the War Guilt clause as the majority of Germans felt humiliated and resentful.&lt;ref&gt;{{cite book|ref=harv|first=John H.|last=Morrow|title=The Great War: An Imperial History|publisher=Routledge|location=London|year=2005|isbn=978-0-415-20440-8|lastauthoramp=y|page=290}}&lt;/ref&gt; Overall the Germans felt they had been unjustly dealt with by what they called the &quot;[[diktat]] of Versailles&quot;. Schulze said the Treaty placed Germany &quot;under legal sanctions, deprived of military power, economically ruined, and politically humiliated.&quot;&lt;ref&gt;{{cite book|first=Hagen|last=Schulze|title=Germany: A New History|url={{google books|plainurl=y|id=B84ZaAdGbS4C|page=204}} |year=1998 |publisher=Harvard U.P. |page=204}}&lt;/ref&gt; Belgian historian Laurence Van Ypersele emphasizes the central role played by memory of the war and the Versailles Treaty in German politics in the 1920s and 1930s:
&lt;blockquote&gt;Active denial of war guilt in Germany and German resentment at both reparations and continued Allied occupation of the Rhineland made widespread revision of the meaning and memory of the war problematic. The legend of the &quot;[[stab in the back]]&quot; and the wish to revise the &quot;Versailles diktat&quot;, and the belief in an international threat aimed at the elimination of the German nation persisted at the heart of German politics. Even a man of peace such as &lt;nowiki&gt;[&lt;/nowiki&gt;[[Gustav Stresemann|Gustav]]&lt;nowiki&gt;]&lt;/nowiki&gt; Stresemann publicly rejected German guilt. As for the Nazis, they waved the banners of domestic treason and international conspiracy in an attempt to galvanize the German nation into a spirit of revenge. Like a Fascist Italy, Nazi Germany sought to redirect the memory of the war to the benefit of its own policies.&lt;ref&gt;{{cite book|first=Laurence Van|last=Ypersele|title=Mourning and Memory, 1919  45 |editor-first=John |editor-last=Horne|work=A Companion to World War I|url={{google books|plainurl=y|id=EjZHLXRKjtEC|page=584}} |year=2012 |publisher=Wiley |page=584}}&lt;/ref&gt;&lt;/blockquote&gt;

Meanwhile, new nations liberated from German rule viewed the treaty as recognition of wrongs committed against small nations by much larger aggressive neighbors.&lt;ref&gt;{{cite web|title=The Surrogate Hegemon in Polish Postcolonial Discourse Ewa Thompson, Rice University|url=http://www.owlnet.rice.edu/~ethomp/The%20Surrogate%20Hegemon.pdf}}&lt;/ref&gt; The Peace Conference required all the defeated powers to pay [[World War I reparations|reparations]] for all the damage done to civilians. However, owing to economic difficulties and Germany being the only defeated power with an intact economy, the burden fell largely on Germany.

Austria-Hungary was partitioned into several successor states, including Austria, Hungary, Czechoslovakia, and [[Yugoslavia]], largely but not entirely along ethnic lines. Transylvania was shifted from Hungary to [[Greater Romania]]. The details were contained in the [[Treaty of Saint-Germain]] and the Treaty of Trianon. As a result of the [[Treaty of Trianon]], 3.3 million Hungarians came under foreign rule. Although the Hungarians made up 54% of the population of the pre-war [[Kingdom of Hungary]], only 32% of its territory was left to Hungary. Between 1920 and 1924, 354,000 Hungarians fled former Hungarian territories attached to Romania, Czechoslovakia, and Yugoslavia.&lt;ref&gt;{{cite book|first1=Kroly|last1=Kocsis|first2=Eszter Kocsisn|last2=Hodosi|title=Ethnic Geography of the Hungarian Minorities in the Carpathian Basin|year=1998|isbn=978-963-7395-84-0|page=19}}&lt;/ref&gt;

The Russian Empire, which had withdrawn from the war in 1917 after the October Revolution, lost much of its western frontier as the newly independent nations of [[History of Estonia#Road to the republic|Estonia]], [[History of Finland#Independence and Civil War|Finland]], [[History of Latvia#Independence|Latvia]], [[History of Lithuania#Independent Lithuania (191840)|Lithuania]], and [[Second Polish Republic|Poland]] were carved from it. Romania took control of Bessarabia in April 1918.{{sfn |Clark |1927}}

The Ottoman Empire disintegrated, with much of its [[Levant]] territory awarded to various Allied powers as protectorates. The Turkish core in [[Anatolia]] was reorganised as the Republic of Turkey. The Ottoman Empire was to be partitioned by the [[Treaty of Svres]] of 1920. This treaty was never ratified by the Sultan and was rejected by the [[Turkish National Movement]], leading to the victorious [[Turkish War of Independence]] and the much less stringent 1923 Treaty of Lausanne.

===National identities===
{{Further information |SykesPicot Agreement}}
[[File:Map Europe 1923-en.svg|thumb|Map of territorial changes in Europe after World War I (as of 1923)]]

Poland reemerged as an independent country, after more than a century. The [[Kingdom of Serbia]] and its dynasty, as a &quot;minor Entente nation&quot; and the country with the most casualties per capita,&lt;ref&gt;{{cite news|title=Appeals to Americans to Pray for Serbians|newspaper=[[The New York Times]]|date=27 July 1918|url=https://query.nytimes.com/mem/archive-free/pdf?_r=1&amp;res=9406E4D8143EE433A25754C2A9619C946996D6CF}}&lt;/ref&gt;&lt;ref&gt;{{cite news|title=Serbia Restored|newspaper=[[The New York Times]]|date=5 November 1918|url=https://query.nytimes.com/mem/archive-free/pdf?_r=1&amp;res=990CEFDC113BEE3ABC4D53DFB7678383609EDE}}&lt;/ref&gt;&lt;ref&gt;{{cite web|title=The Minor Powers During World War One&amp;nbsp; Serbia|first=Matt|last=Simpson|publisher=firstworldwar.com|date=22 August 2009|url=http://www.firstworldwar.com/features/minorpowers_serbia.htm}}&lt;/ref&gt; became the backbone of a new multinational state, the [[Kingdom of Serbs, Croats and Slovenes]], later renamed Yugoslavia. Czechoslovakia, combining the [[Kingdom of Bohemia]] with parts of the [[Kingdom of Hungary]], became a new nation. Russia became the [[Soviet Union]] and lost Finland, Estonia, Lithuania, and Latvia, which became independent countries. The [[Ottoman Empire]] was soon replaced by Turkey and several other countries in the Middle East.

In the British Empire, the war unleashed new forms of nationalism. In Australia and New Zealand the [[Gallipoli Campaign|Battle of Gallipoli]] became known as those nations' &quot;Baptism of Fire&quot;. It was the first major war in which the newly established countries fought, and it was one of the first times that Australian troops fought as Australians, not just subjects of the [[British Crown]]. [[Anzac Day]], commemorating the [[Australian and New Zealand Army Corps]], celebrates this defining moment.&lt;ref&gt;{{cite news|url=https://query.nytimes.com/gst/abstract.html?res=9400E1DD113FE233A25755C2A9629C946796D6CF&amp;scp=12&amp;sq=New+Zealand+anzac&amp;st=p|title='ANZAC Day' in London; King, Queen, and General Birdwood at Services in Abbey|newspaper=[[The New York Times]]|date=26 April 1916}}&lt;/ref&gt;&lt;ref name=awmtradition&gt;{{cite web |url=http://www.awm.gov.au/commemoration/anzac/anzac_tradition.asp|title=The ANZAC Day tradition|publisher=[[Australian War Memorial]]|accessdate=2 May 2008|author=Australian War Memorial}}&lt;/ref&gt;

After the [[Battle of Vimy Ridge]], where the Canadian divisions fought together for the first time as a single corps, Canadians began to refer to theirs as a nation &quot;forged from fire&quot;.&lt;ref&gt;{{cite web |url=http://www.warmuseum.ca/cwm/exhibitions/guerre/vimy-ridge-e.aspx|publisher=[[Canadian War Museum]]|title=Vimy Ridge|accessdate=22 October 2008|author=Canadian War Museum}}&lt;/ref&gt; Having succeeded on the same battleground where the &quot;mother countries&quot; had previously faltered, they were for the first time respected internationally for their own accomplishments. Canada entered the war as a [[Dominion]] of the British Empire and remained so, although it emerged with a greater measure of independence.&lt;ref&gt;{{cite web |url=http://www.warmuseum.ca/cwm/exhibitions/guerre/war-impact-e.aspx|title=The War's Impact on Canada|publisher=[[Canadian War Museum]]|accessdate=22 October 2008}}&lt;/ref&gt;&lt;ref&gt;{{cite news |url=http://www.cbc.ca/canada/ottawa/story/2008/05/09/babcock-citizen.html|title=Canada's last WW1 vet gets his citizenship back|publisher=[[CBC News]]|date=9 May 2008|deadurl=yes|archiveurl=https://web.archive.org/web/20080511014947/http://www.cbc.ca/canada/ottawa/story/2008/05/09/babcock-citizen.html|archivedate=11 May 2008}}&lt;/ref&gt; When Britain declared war in 1914, the dominions were automatically at war; at the conclusion, Canada, Australia, New Zealand, and South Africa were individual signatories of the [[Treaty of Versailles]].&lt;ref&gt;[http://foundingdocs.gov.au/item-did-23.html Documenting Democracy] {{webarchive |url=https://web.archive.org/web/20160520203624/http://foundingdocs.gov.au/item-did-23.html |date=20 May 2016 }}. Retrieved 31 March 2012&lt;/ref&gt;

The establishment of the modern state of Israel and the roots of the continuing [[IsraeliPalestinian conflict]] are partially found in the unstable power dynamics of the Middle East that resulted from World War I.{{sfn|Doughty |2005}} Before the end of the war, the [[Ottoman Empire]] had maintained a modest level of peace and stability throughout the Middle East.{{sfn |Hooker |1996}} With the fall of the Ottoman government, power vacuums developed and conflicting claims to land and nationhood began to emerge.{{sfn |Muller |2008}} The political boundaries drawn by the victors of World War I were quickly imposed, sometimes after only cursory consultation with the local population. These continue to be problematic in the 21st-century struggles for [[national identity]].{{sfn |Kaplan |1993}}{{sfn |Salibi |1993}} While the dissolution of the [[Ottoman Empire]] at the end of World War I was pivotal in contributing to the modern political situation of the Middle East, including the [[ArabIsraeli conflict|Arab-Israeli conflict]],&lt;ref name=&quot;Evans_2005&quot;&gt;{{harvnb |Evans |2005}}&lt;/ref&gt;{{sfn |Israeli Foreign Ministry}}&lt;ref name=&quot;Gelvin_2005&quot;&gt;{{harvnb |Gelvin |2005}}&lt;/ref&gt; the end of Ottoman rule also spawned lesser known disputes over water and other natural resources.{{sfn |Isaac |Hosh |1992}}

===Health effects===
[[File:Transporting Ottoman injured at Sirkedji.jpg|thumb |left |Transporting Ottoman wounded at [[Sirkeci]]]]
[[File:Emergency hospital during Influenza epidemic, Camp Funston, Kansas - NCP 1603.jpg|thumb |Emergency military hospital during the [[Spanish flu]] pandemic, which killed about 675,000 people in the United States alone. Camp Funston, Kansas, 1918.]]

The war had profound consequences on the health of soldiers. Of the 60&amp;nbsp;million European military personnel who were mobilized from 1914 to 1918, [[World War I casualties|8&amp;nbsp;million were killed]], 7&amp;nbsp;million were permanently disabled, and 15&amp;nbsp;million were seriously injured. Germany lost 15.1% of its active male population, Austria-Hungary lost 17.1%, and France lost 10.5%.{{sfn |Kitchen |2000 |p=22}} In Germany, civilian deaths were 474,000 higher than in peacetime, due in large part to food shortages and malnutrition that weakened resistance to disease.&lt;ref&gt;{{cite book |first=N.P.|last=Howard|title=The Social and Political Consequences of the Allied Food Blockade of Germany, 191819|work=German History|year=1993|volume=11|issue=2|pages=16188|url=http://libcom.org/files/blockade%20Germany_0.pdf}} table p 166, with 271,000 excess deaths in 1918 and 71,000 in the first half of 1919 while the blockade was still in effect.&lt;/ref&gt; By the end of the war, starvation caused by famine had killed approximately 100,000&amp;nbsp;people in Lebanon.{{sfn |Saadi |2009}} Between 5 and 10 million people died in the [[Russian famine of 1921]].&lt;ref&gt;{{cite web |url=http://www.hoover.org/publications/digest/6731711.html|publisher=Hoover Institution|work=Hoover Digest|date=30 January 2007|title=Food as a Weapon|first=Bertrand M.|last=Patenaude|archiveurl=https://web.archive.org/web/20080719190529/http://www.hoover.org/publications/digest/6731711.html|archivedate=19 July 2008|accessdate=14 August 2014}}&lt;/ref&gt; By 1922, there were between 4.5 million and 7 million homeless children in Russia as a result of nearly a decade of devastation from World War I, the Russian Civil War, and the subsequent famine of 19201922.{{sfn |Ball |1996 |pp=16, 211}} Numerous anti-Soviet Russians fled the country after the Revolution; by the 1930s, the northern Chinese city of [[Harbin]] had 100,000&amp;nbsp;Russians.&lt;ref&gt;{{cite news|url=http://www.highbeam.com/doc/1G1-16051029.html|title=The Russians are coming (Russian influence in Harbin, Manchuria, China; economic relations)|work=The Economist (US)|date=14 January 1995}} (via Highbeam.com)&lt;/ref&gt; Thousands more emigrated to France, England, and the United States.

In Australia, the effects of the war on the economy were no less severe. The Australian prime minister, [[Billy Hughes]], wrote to the British prime minister, [[Lloyd George]], &quot;You have assured us that you cannot get better terms. I much regret it, and hope even now that some way may be found of securing agreement for demanding reparation commensurate with the tremendous sacrifices made by the British Empire and her Allies.&quot; Australia received 5,571,720 war reparations, but the direct cost of the war to Australia had been 376,993,052, and, by the mid-1930s, repatriation pensions, war gratuities, interest and sinking fund charges were 831,280,947.{{sfn |Souter |2000 |p=354}} Of about 416,000 Australians who served, about 60,000 were killed and another 152,000 were wounded.&lt;ref&gt;{{cite book |last=Tucker|first=Spencer|title=Encyclopedia of World War I|publisher=ABC-CLIO|location=Santa Barbara, CA|year=2005|page=273|isbn=1-85109-420-2|url={{google books|plainurl=y|id=2YqjfHLyyj8C|page=273}} |accessdate=7 May 2010}}&lt;/ref&gt;

Diseases flourished in the chaotic wartime conditions. In 1914 alone, louse-borne [[epidemic typhus]] killed 200,000 in Serbia.{{sfn |Tschanz}} From 1918 to 1922, Russia had about 25&amp;nbsp;million infections and 3 million deaths from epidemic typhus.{{sfn |Conlon}} In 1923, 13 million Russians contracted malaria, a sharp increase from the pre-war years.&lt;ref&gt;{{cite book |last=Taliaferro|first=William Hay|title=Medicine and the War|url={{google books|plainurl=y|id=HcOAnAINJZAC|page=65}} |year=1972 |pages=65 |isbn=0-8369-2629-3}}&lt;/ref&gt; In addition, a major influenza epidemic spread around the world. Overall, the [[1918 flu pandemic]] killed at least 50 million people.{{sfn |Knobler |2005}}&lt;ref&gt;{{cite book |last1=Kamps|first1=Bernd Sebastian|last2=Reyes-Tern|first2=Gustavo|title=Influenza|url=http://www.influenzareport.com/ir/overview.htm|series=Influenza Report|publisher=Flying Publisher|isbn=3-924774-51-X|accessdate=17 November 2009}}&lt;/ref&gt;

Lobbying by [[Chaim Weizmann]] and fear that American Jews would encourage the United States to support Germany culminated in the British government's [[Balfour Declaration]] of 1917, endorsing creation of a [[Jewish homeland]] in Palestine.&lt;ref&gt;{{cite encyclopedia |url=http://www.britannica.com/EBchecked/topic/50162/Balfour-Declaration|title=Balfour Declaration (United Kingdom 1917)|work=Encyclopdia Britannica}}&lt;/ref&gt; A total of more than 1,172,000 Jewish soldiers served in the Allied and Central Power forces in World War I, including 275,000 in Austria-Hungary and 450,000 in Tsarist Russia.&lt;ref&gt;{{cite web |url=http://www.jewishagency.org/JewishAgency/English/Jewish+Education/Compelling+Content/Jewish+History/Zionist+Institutions/JAFI+Timeline/1917-1919.htm|title=Timeline of The Jewish Agency for Israel:19171919|publisher=The Jewish Agency for Israel|accessdate=29 August 2013|deadurl=yes|archiveurl=https://web.archive.org/web/20130520072856/http://www.jewishagency.org/JewishAgency/English/Jewish%20Education/Compelling%20Content/Jewish%20History/Zionist%20Institutions/JAFI%20Timeline/1917-1919.htm|archivedate=20 May 2013|df=}}&lt;/ref&gt;

The social disruption and widespread violence of the Russian Revolution of 1917 and the ensuing [[Russian Civil War]] sparked more than 2,000 [[pogrom]]s in the former Russian Empire, mostly in [[Ukraine after the Russian Revolution|Ukraine]].&lt;ref&gt;{{cite web|url=https://www.jewishvirtuallibrary.org/jsource/judaica/ejud_0002_0016_0_15895.html|title=Pogroms|work=[[Encyclopaedia Judaica]]|accessdate=17 November 2009|publisher=American-Israeli Cooperative Enterprise}}&lt;/ref&gt; An estimated 60,000200,000&amp;nbsp;civilian Jews were killed in the atrocities.&lt;ref&gt;{{cite web|url=https://www.jewishvirtuallibrary.org/jsource/History/modtimeline.html|title=Jewish Modern and Contemporary Periods (ca. 17001917)|work=Jewish Virtual Library|accessdate=17 November 2009|publisher=American-Israeli Cooperative Enterprise}}&lt;/ref&gt;

In the aftermath of World War I, Greece [[Greco-Turkish War (19191922)|fought]] against Turkish nationalists led by [[Mustafa Kemal Atatrk|Mustafa Kemal]], a war that eventually resulted in a [[Population exchange between Greece and Turkey|massive population exchange between the two countries]] under the [[Treaty of Lausanne]].&lt;ref&gt;[http://www.spiegel.de/international/0,1518,451140,00.html &quot;The Diaspora Welcomes the Pope&quot;] {{webarchive|url=https://web.archive.org/web/20120604185021/http://www.spiegel.de/international/0%2C1518%2C451140%2C00.html |date= 4 June 2012 }}, ''Der Spiegel'' Online. 28 November 2006.&lt;/ref&gt; According to various sources,&lt;ref&gt;[[R. J. Rummel]], &quot;The Holocaust in Comparative and Historical Perspective&quot;, 1998, ''Idea Journal of Social Issues'', Vol.3 no.2&lt;/ref&gt; several hundred thousand Greeks died during this period, which was tied in with the [[Greek Genocide]].&lt;ref&gt;{{cite news |url=https://www.nytimes.com/2000/09/17/nyregion/a-few-words-in-greek-tell-of-a-homeland-lost.html|first=Chris|last=Hedges|title=A Few Words in Greek Tell of a Homeland Lost|work=The New York Times|date=17 September 2000}}&lt;/ref&gt;

==Technology==
{{See also |Technology during World War I |Weapons of World War I}}

===Ground warfare===
{{See also |Tanks in World War I }}
[[File:Tanks on parade in London at the end of World War I, 1918 (3056450509).jpg|thumb|left|Tanks on parade in London at the end of World War I]]
[[File:Austin21.jpg|thumb|right |A Russian armoured car, 1919]]

World War I began as a clash of 20th-century technology and 19th-century [[military tactics|tactics]], with the inevitably large ensuing casualties. By the end of 1917, however, the major armies, now numbering millions of men, had modernised and were making use of telephone, [[Wireless |wireless communication]],{{sfn |Hartcup |1988 |p=154}} [[Armored car (military)|armoured cars]], [[tank]]s,{{sfn |Hartcup |1988 |pp=8286}} and aircraft. Infantry formations were reorganised, so that 100-man companies&lt;!--- surely most companies at the start of the war had more than 200-men!---&gt; were no longer the main unit of manoeuvre; instead, squads of 10 or so men, under the command of a junior NCO, were favoured.

Artillery also underwent a revolution. In 1914, cannons were positioned in the front line and fired directly at their targets. By 1917, [[indirect fire]] with guns (as well as mortars and even machine guns) was commonplace, using new techniques for spotting and ranging, notably aircraft and the often overlooked [[field telephone]].&lt;ref&gt;Sterling, Christopher H.; Military Communications: From Ancient Times to the 21st Century (2008). Santa Barbara: ABC-CLIO. {{ISBN|978-1-85109-732-6}} p. 444.&lt;/ref&gt; [[Counter-battery fire|Counter-battery]] missions became commonplace, also, and sound detection was used to locate enemy batteries.

Germany was far ahead of the Allies in using heavy indirect fire. The German Army employed {{convert |150 |mm |0 |abbr=on}} and {{convert |210 |mm |0 |abbr=on}} [[howitzer]]s in 1914, when typical French and British guns were only {{convert |75 |mm |0 |abbr=on}} and {{convert |105 |mm |0 |abbr=on}}. The British had a 6-inch (152&amp;nbsp;mm) howitzer, but it was so heavy it had to be hauled to the field in pieces and assembled. The Germans also fielded Austrian {{convert |305 |mm |0 |abbr=on}} and {{convert |420 |mm |0 |abbr=on}} guns and, even at the beginning of the war, had inventories of various calibers of ''[[Minenwerfer]]'', which were ideally suited for trench warfare.{{sfn |Mosier |2001 |pp=4248}}&lt;ref&gt;{{cite book|last=Jager|first=Herbert|title=German Artillery of World War One|publisher=Crowood Press|date=2001|pages=224|isbn=978-1861264039}}&lt;/ref&gt;

[[File:38cmBttrPommern.jpg|thumb|right|38-cm &quot;[[Batterie Pommern|Lange Max]]&quot; of [[Koekelare]] (Leugenboom), biggest gun of the world in 1917.]]
In 1917, on 27 June the Germans used their biggest gun of the world [[Batterie Pommern]], nicknamed &quot;[[Lange Max Museum|Lange Max]]&quot;. This gun from [[Krupp]] was able to shoot 750&amp;nbsp;kg shells from [[Koekelare]] to [[Dunkirk]], which is about 50&amp;nbsp;km away.

Much of the combat involved [[trench warfare]], in which hundreds often died for each metre gained. Many of the deadliest battles in history occurred during World War I. Such battles include [[Battle of Passchendaele|Ypres]], the [[First Battle of the Marne|Marne]], [[Battle of Cambrai (1917)|Cambrai]], the [[Battle of the Somme|Somme]], [[Battle of Verdun|Verdun]], and [[Gallipoli Campaign|Gallipoli]]. The Germans employed the [[Haber process]] of [[nitrogen fixation]] to provide their forces with a constant supply of gunpowder despite the British naval blockade.{{sfn |Hartcup |1988}} Artillery was responsible for the largest number of casualties{{sfn |Raudzens |1990 |p=421}} and consumed vast quantities of explosives. The large number of head wounds caused by exploding shells and [[Fragmentation (weaponry)|fragmentation]] forced the combatant nations to develop the modern steel [[helmet]], led by the French, who introduced the [[Adrian helmet]] in 1915. It was quickly followed by the [[Brodie helmet]], worn by British Imperial and US troops, and in 1916 by the distinctive German ''[[Stahlhelm]]'', a design, with improvements, still in use today.

{{quote |source=|
&lt;poem&gt;Gas! GAS! Quick, boys!  An ecstasy of fumbling,
Fitting the clumsy helmets just in time;
But someone still was yelling out and stumbling,
And flound'ring like a man in fire or lime&amp;nbsp;...
Dim, through the misty panes and thick green light,
As under a green sea, I saw him drowning.&lt;/poem&gt;|[[Wilfred Owen]], ''[[Dulce et Decorum est]]'', 1917&lt;ref name=&quot;Wilfred Owen 2004&quot;&gt;''Wilfred Owen: poems'', (Faber and Faber, 2004)&lt;/ref&gt;}}

[[File:mustard gas burns.jpg|thumb |A Canadian soldier with [[mustard gas]] burns, c. 19171918]]

The widespread use of chemical warfare was a distinguishing feature of the conflict. Gases used included [[chlorine]], [[mustard gas]] and [[phosgene]]. Few war casualties were caused by gas,{{sfn |Raudzens |1990}} as effective countermeasures to gas attacks were quickly created, such as [[gas mask]]s. The use of [[chemical warfare]] and small-scale [[Aerial bombing of cities|strategic bombing]] were both outlawed by the [[Hague Conventions of 1899 and 1907]], and both proved to be of limited effectiveness,{{sfn |Heller |1984}} though they captured the public imagination.&lt;ref&gt;Postwar pulp novels on future &quot;gas wars&quot; included Reginald Glossop's 1932 novel ''Ghastly Dew'' and Neil Bell's 1931 novel ''The Gas War of 1940''.&lt;/ref&gt;

The most powerful land-based weapons were [[railway gun]]s, weighing dozens of tons apiece.&lt;ref&gt;{{YouTube|Hl4jJJ9b9MA|&quot;Heavy Railroad Artillery&quot;}}&lt;/ref&gt; The German ones were nicknamed [[Big Bertha (howitzer)|Big Berthas]], even though the namesake was not a railway gun. Germany developed the [[Paris Gun]], able to bombard Paris from over {{convert |100 |km |mi}}, though shells were relatively light at 94&amp;nbsp;kilograms (210&amp;nbsp;lb).

[[File:Vickers machine gun in the Battle of Passchendaele - September 1917.jpg|thumb |British [[Vickers machine gun]], 1917]]
Trenches, machine guns, air reconnaissance, barbed wire, and modern artillery with fragmentation [[Shell (projectile)|shells]] helped bring the battle lines of World War I to a stalemate. The British and the French sought a solution with the creation of the tank and [[mechanised warfare]]. The British [[Mark I (tank)|first tanks]] were used during the [[Battle of the Somme]] on 15 September 1916. Mechanical reliability was an issue, but the experiment proved its worth. Within a year, the British were fielding tanks by the hundreds, and they showed their potential during the [[Battle of Cambrai (1917)|Battle of Cambrai]] in November 1917, by breaking the Hindenburg Line, while [[combined arms]] teams captured 8,000 enemy soldiers and 100&amp;nbsp;guns. Meanwhile, the French introduced the first tanks with a rotating turret, the [[Renault FT]], which became a decisive tool of the victory. The conflict also saw the introduction of [[Light machine gun|light automatic weapons]] and [[submachine gun]]s, such as the [[Lewis Gun]], the [[Browning Automatic Rifle|Browning automatic rifle]], and the [[Bergmann MP18]].

Another new weapon, the [[flamethrower]], was first used by the German army and later adopted by other forces. Although not of high tactical value, the flamethrower was a powerful, demoralising weapon that caused terror on the battlefield.

[[Trench railways]] evolved to supply the enormous quantities of food, water, and ammunition required to support large numbers of soldiers in areas where conventional transportation systems had been destroyed. Internal combustion engines and improved traction systems for automobiles and trucks/lorries eventually rendered trench railways obsolete.

===Naval===
[[File:Bundesarchiv DVM 10 Bild-23-61-15, Panzerkreuzer &quot;SMS Goeben&quot;.jpg|thumb|The {{sclass-|Moltke|battlecruiser|0}} {{ship|Ottoman battlecruiser|Yavz Sultn Selm}}]]

Germany deployed [[U-boat]]s ([[submarine]]s) after the war began. Alternating between restricted and unrestricted submarine warfare in the Atlantic, the [[Kaiserliche Marine]] employed them to deprive the British Isles of vital supplies. The deaths of British merchant sailors and the seeming invulnerability of U-boats led to the development of depth charges (1916), [[hydrophone]]s (passive [[sonar]], 1917), [[blimp]]s, [[hunter-killer submarine]]s ([[British R-class submarine|HMS ''R-1'']], 1917), forward-throwing [[anti-submarine weapon]]s, and dipping hydrophones (the latter two both abandoned in 1918).&lt;ref name=&quot;price1980&quot;/&gt; To extend their operations, the Germans proposed supply submarines (1916). Most of these would be forgotten in the [[interwar period]] until World War II revived the need.&lt;ref&gt;Lawrence Sondhaus, ''The Great War at Sea: A Naval History of the First World War'' (2014).&lt;/ref&gt;

===Aviation===
{{Main article |Aviation in World War I}}
[[File:Sopwith F-1 Camel.jpg|thumb|left|[[RAF]] [[Sopwith Camel]]. In April 1917, the average life expectancy of a British pilot on the Western Front was 93 flying hours.&lt;ref&gt;{{cite book|first1=Eric|last1=Lawson|first2=Jane|last2=Lawson|year=2002|url={{google books|plainurl=y|id=9PGHckhHiX0C}}pg=PT123 |title=The First Air Campaign: August 1914 November 1918 |publisher=Da Capo Press |p=123 |isbn= 0-306-81213-4}}&lt;/ref&gt;]]

[[Fixed-wing aircraft]] were first used militarily by the Italians in Libya on 23 October 1911 during the [[Italo-Turkish War]] for reconnaissance, soon followed by the dropping of grenades and [[aerial photography]] the next year. By 1914, their military utility was obvious. They were initially used for [[reconnaissance]] and [[Close air support|ground attack]]. To shoot down enemy planes, [[anti-aircraft guns]] and [[fighter aircraft]] were developed. [[Strategic bomber]]s were created, principally by the Germans and British, though the former used [[Zeppelin]]s as well.&lt;ref name=&quot;Cross 1991&quot;&gt;{{harvnb |Cross |1991}}&lt;/ref&gt; Towards the end of the conflict, [[aircraft carrier]]s were used for the first time, with {{HMS |Furious |47 |6}}&lt;nowiki/&gt;launching [[Sopwith Camels]] in [[Tondern raid|a raid]] to destroy the Zeppelin hangars at [[Tondern]] in 1918.{{sfn |Cross |1991 |pp=5657}}

Manned [[observation balloon]]s, floating high above the trenches, were used as stationary reconnaissance platforms, reporting enemy movements and directing artillery. Balloons commonly had a crew of two, equipped with [[parachute]]s,{{sfn |Winter |1983}} so that if there was an enemy air attack the crew could parachute to safety. At the time, parachutes were too heavy to be used by pilots of aircraft (with their marginal power output), and smaller versions were not developed until the end of the war; they were also opposed by the British leadership, who feared they might promote cowardice.&lt;ref name=FullCircle&gt;{{harvnb |Johnson |2001}}&lt;/ref&gt;

Recognised for their value as observation platforms, balloons were important targets for enemy aircraft. To defend them against air attack, they were heavily protected by antiaircraft guns and patrolled by friendly aircraft; to attack them, unusual weapons such as air-to-air rockets were tried. Thus, the reconnaissance value of blimps and balloons contributed to the development of air-to-air combat between all types of aircraft, and to the trench stalemate, because it was impossible to move large numbers of troops undetected. The Germans conducted air raids on England during 1915 and 1916 with airships, hoping to damage British morale and cause aircraft to be diverted from the front lines, and indeed the resulting panic led to the diversion of several squadrons of fighters from France.&lt;ref name=&quot;Cross 1991&quot;/&gt;&lt;ref name=FullCircle/&gt;

==War crimes==

===Baralong incidents===
{{Main article |Baralong incidents}}
[[File:HMS Baralong.jpg|thumb|HMS ''Baralong''.]]

On 19 August 1915, the German submarine [[SM U-27 (Germany)|U-27]] was sunk by the British [[Q-ship]] {{HMS|Baralong}}. All German survivors were [[summarily executed]] by ''Baralong''{{'}}s crew on the orders of Lieutenant [[Godfrey Herbert]], the captain of the ship. The shooting was reported to the media by American citizens who were on board the ''Nicosia'', a British freighter loaded with war supplies, which was stopped by U-27 just minutes before the incident.&lt;ref&gt;Halpern, Paul G. (1994). A Naval History of World War I. Routledge, p. 301; {{ISBN|1-85728-498-4}}&lt;/ref&gt;

On 24 September, ''Baralong'' destroyed [[SM U-41 (Germany)|U-41]], which was in the process of sinking the cargo ship ''Urbino''. According to Karl Goetz, the submarine's commander, ''Baralong'' continued to fly the U.S. flag after firing on U-41 and then rammed the lifeboat  carrying the German survivors  sinking it.&lt;ref&gt;Hadley, Michael L. (1995). Count Not the Dead: The Popular Image of the German Submarine. McGill-Queen's Press  MQUP, p. 36; {{ISBN|0-7735-1282-9}}.&lt;/ref&gt;

===Torpedoing of HMHS ''Llandovery Castle''===
The Canadian hospital ship {{HMHS|Llandovery Castle}} was torpedoed by the German submarine [[SM U-86]] on 27 June 1918 in violation of international law. Only 24 of the 258 medical personnel, patients, and crew survived. Survivors reported that the U-boat surfaced and ran down the lifeboats, machine-gunning survivors in the water. The U-boat captain, [[Helmut Patzig]], was charged with war crimes in Germany following the war, but escaped prosecution by going to the [[Free City of Danzig]], beyond the jurisdiction of German courts.&lt;ref name=&quot;Davies2013c&quot;&gt;{{cite book|first=J D|last=Davies|authorlink=J. D. Davies (historian and author)|title=Britannia's Dragon: A Naval History of Wales|url={{google books|plainurl=y|id=urs7AwAAQBAJ|page=158}} |year=2013 |publisher=History Press Limited |isbn=978-0-7524-9410-4 |page=158}}&lt;/ref&gt;

===Chemical weapons in warfare===
{{Main article |Chemical weapons in World War I}}
[[File:French soldiers making a gas and flame attack on German trenches in Flanders. Belgium., ca. 1900 - 1982 - NARA - 530722.tif|thumb|left|French soldiers making a gas and flame attack on German trenches in Flanders]]

The first successful use of [[Chemical warfare|poison gas]] as a weapon of warfare occurred during the Second Battle of Ypres (22 April  25 May 1915).&lt;ref&gt;A German attempt in January on the Russian front failed to cause casualties.&lt;/ref&gt; Gas was soon used by all major belligerents throughout the war. It is estimated that the use of chemical weapons employed by both sides throughout the war had inflicted 1.3 million casualties. For example, the British had over 180,000 chemical weapons casualties during the war, and up to one-third of American casualties were caused by them. The Russian Army reportedly suffered roughly 500,000 chemical weapon casualties in World War I.&lt;ref&gt;Schneider, Barry R. (28 February 1999). Future War and Counterproliferation: US Military Responses to NBC. Praeger, p. 84; {{ISBN|0-275-96278-4}}&lt;/ref&gt; The use of chemical weapons in warfare was in direct violation of the [[Hague Conventions of 1899 and 1907#Hague Convention of 1899|1899 Hague Declaration Concerning Asphyxiating Gases]] and the [[Hague Convention of 1907|1907 Hague Convention on Land Warfare]], which prohibited their use.&lt;ref&gt;{{cite book|url={{google books|plainurl=y|id=hEH7KcpN-OcC|page=34}} |title=The Anatomy of the Nuremberg Trials: A Personal Memoir |first=Telford |last=Taylor |date=1 November 1993 |publisher=[[Little, Brown and Company]] |isbn=0-316-83400-9 |accessdate=20 June 2013}}&lt;/ref&gt;&lt;ref&gt;{{cite book|url={{google books|plainurl=y|id=0PYx0j3wRvAC|page=7}} |title=Cornerstones of Security: Arms Control Treaties in the Nuclear Era |first1=Thomas |last1=Graham |first2=Damien J. |last2=Lavera |date=May 2003 |pages=79 |publisher=[[University of Washington Press]] |isbn=0-295-98296-9 |accessdate=5 July 2013}}&lt;/ref&gt;

The effect of poison gas was not limited to combatants. Civilians were at risk from the gases as winds blew the poison gases through their towns, and rarely received warnings or alerts of potential danger. In addition to absent warning systems, civilians often did not have access to effective gas masks. An estimated 100,000260,000 civilian casualties were caused by chemical weapons during the conflict and tens of thousands more (along with military personnel) died from scarring of the lungs, skin damage, and cerebral damage in the years after the conflict ended. Many commanders on both sides knew such weapons would cause major harm to civilians but nonetheless continued to use them. British [[Field marshal (United Kingdom)|Field Marshal]] [[Sir Douglas Haig]] wrote in his diary, &quot;My officers and I were aware that such weapons would cause harm to women and children living in nearby towns, as strong winds were common in the battlefront. However, because the weapon was to be directed against the enemy, none of us were overly concerned at all.&quot;&lt;ref&gt;{{cite book|title=The Poisonous Cloud: Chemical Warfare in the First World War|first=L. F.|last=Haber|date=20 February 1986|pages=106108|publisher=[[Clarendon Press]]|isbn=0-19-858142-4}}&lt;/ref&gt;&lt;ref&gt;{{cite book|title=Dew of Death: The Story of Lewisite, America's World War I Weapon of Mass destruction|first=Joel A.|last=Vilensky|date=20 February 1986|pages=7880|publisher=[[Indiana University Press]]|isbn=0-253-34612-6}}&lt;/ref&gt;&lt;ref&gt;{{cite book|title=Handbook of Chemical and Biological Warfare Agents, Second Edition|first=D. Hank|last=Ellison|date=24 August 2007|pages=567570|publisher=[[CRC Press]]|isbn=0-8493-1434-8}}&lt;/ref&gt;&lt;ref&gt;{{cite book|title=War Made New: Weapons, Warriors, and the Making of the Modern World|first=Max|last=Boot|date=16 August 2007|pages=245250|publisher=Gotham|isbn=1-59240-315-8}}&lt;/ref&gt;

===Genocide and ethnic cleansing===
{{See also |Armenian Genocide |Assyrian genocide |Greek genocide |Genocide denial}}
[[File:Morgenthau336.jpg|thumb |Armenians killed during the Armenian Genocide. Image taken from ''Ambassador Morgenthau's Story'', written by [[Henry Morgenthau, Sr.]] and published in 1918.&lt;ref&gt;{{cite book |author=Henry Morgenthau |title=Ambassador Mogenthau's story |publisher=Brigham Young University |url=http://net.lib.byu.edu/~rdh7/wwi/comment/morgenthau/Morgen25.htm |year=1918 |chapter=XXV: Talaat Tells Why He &quot;Deports&quot; the Armenians}}&lt;/ref&gt;]]
[[File:Hromadn poprava srbskho obyvatelstva.jpg|thumb|Austro-Hungarian soldiers executing men and women in Serbia, 1916&lt;ref&gt;{{cite book|last1=Honzk|first1=Miroslav|last2=Honzkov|first2=Hana|title=1914/1918, Lta zkzy a nadje|year=1984|publisher=Panorama|location=Czech Republic}}&lt;/ref&gt;]]

The [[ethnic cleansing]] of the Ottoman Empire's [[Armenians|Armenian]] population, including mass deportations and executions, during the final years of the Ottoman Empire is considered [[genocide]].&lt;ref name=&quot;IAGSletter&quot;&gt;{{cite web|url=http://www.genocidewatch.org/TurkishPMIAGSOpenLetterreArmenia6-13-05.htm|archiveurl=https://web.archive.org/web/20071006024502/http://www.genocidewatch.org/TurkishPMIAGSOpenLetterreArmenia6-13-05.htm|archivedate=6 October 2007|author=[[International Association of Genocide Scholars]]|title=Open Letter to the Prime Minister of Turkey Recep Tayyip Erdoan|date=13 June 2005|publisher=[[Genocide Watch]] (via archive.org)|deadurl=yes|df=}}&lt;/ref&gt; The Ottomans carried out organized and systematic massacres of the Armenian population at the beginning of the war and portrayed deliberately provoked acts of Armenian resistance as rebellions to justify further extermination.&lt;ref name=leverkun&gt;{{cite book|last=Vartparonian|first=Paul Leverkuehn|others=translated by Alasdair Lean; with a preface by Jorge and a historical introduction by Hilmar|title=A German officer during the Armenian genocide: a biography of Max von Scheubner-Richter|year=2008|publisher=Taderon Press for the Gomidas Institute|location=London|isbn=1-903656-81-8|url=https://books.google.com/books?id=_hItAQAAIAAJ&amp;q|author2=Kaiser}}&lt;/ref&gt; In early 1915, a number of Armenians volunteered to join the Russian forces and the Ottoman government used this as a pretext to issue the [[Tehcir Law]] (Law on Deportation), which authorized the deportation of Armenians from the Empire's eastern provinces to Syria between 1915 and 1918. The Armenians were intentionally [[Death march|marched to death]] and a number were attacked by Ottoman brigands.{{sfn |Ferguson |2006 |p=177}} While an exact number of deaths is unknown, the [[International Association of Genocide Scholars]] estimates 1.5 million.&lt;ref name=&quot;IAGSletter&quot;/&gt;&lt;ref&gt;{{cite web|url=http://www.genocidescholars.org/sites/default/files/document%09%5Bcurrent-page%3A1%5D/documents/US%20Congress_%20Armenian%20Resolution.pdf|title=International Association Of Genocide Scholars|format=PDF|accessdate=12 March 2013}}&lt;/ref&gt; The government of Turkey has consistently [[Armenian Genocide denial|denied the genocide]], arguing that those who died were victims of inter-ethnic fighting, famine, or disease during World War I; these claims are rejected by most historians.{{sfn |Fromkin |1989 |pp=212215}} Other ethnic groups were similarly attacked by the Ottoman Empire during this period, including [[Assyrian Genocide|Assyrians]] and [[Greek genocide|Greeks]], and some scholars consider those events to be part of the same policy of extermination.&lt;ref&gt;{{cite web|author=International Association of Genocide Scholars|format=PDF|url=http://www.genocidescholars.org/images/Resolution_on_genocides_committed_by_the_Ottoman_Empire.pdf|archiveurl=https://web.archive.org/web/20080422005726/http://genocidescholars.org/images/Resolution_on_genocides_committed_by_the_Ottoman_Empire.pdf|archivedate=22 April 2008|deadurl=yes|title=Resolution on genocides committed by the Ottoman empire|df=}}&lt;/ref&gt;&lt;ref&gt;{{cite book|last=Gaunt|first=David|url={{google books|plainurl=y|id=4mug9LrpLKcC}} |title=Massacres, Resistance, Protectors: Muslim-Christian Relations in Eastern Anatolia during World War I |location=Piscataway, New Jersey |publisher=Gorgias Press |year=2006}}&lt;/ref&gt;&lt;ref&gt;{{cite journal |doi=10.1080/14623520801950820|last1=Schaller|first1=Dominik J|last2=Zimmerer|first2=Jrgen|year=2008|title=Late Ottoman genocides: the dissolution of the Ottoman Empire and Young Turkish population and extermination policies&amp;nbsp; introduction|journal=Journal of Genocide Research|volume=10|issue=1|pages=714|postscript=.}}&lt;/ref&gt;

====Russian Empire====
{{Main article |Anti-Jewish pogroms in the Russian Empire}}
{{See also |Russian occupation of Eastern Galicia, 19141915 |Volhynia |Volga Germans}}
&lt;!--Approximately 200,000 Germans living in [[Volhynia]] and about 600,000 Jews were deported by the Russian authorities.&lt;ref&gt;{{cite web |url=http://lib.ndsu.nodak.edu/grhc/history_culture/history/people.html|title=A People on the Move: Germans in Russia and in the Former Soviet Union: 17631997|publisher=North Dakota State University Libraries|accessdate=17 November 2009}}&lt;/ref&gt;&lt;ref name=&quot;WWI and the Jews&quot;&gt;{{cite web |url=http://www.myjewishlearning.com/history/Modern_History/1914-1948/WWI_and_the_Jews.shtml|title=WWI and the Jews|publisher=MyJewishLearning.com|accessdate=17 November 2009}}&lt;/ref&gt;&lt;ref name=&quot;Timeline 1900s&quot;&gt;{{cite web |url=http://www.loc.gov/exhibits/haventohome/timeline/haven-timeline_3.html|title=Timeline 1900s|publisher=The Library of Congress}}&lt;/ref&gt; In 1916, an order was issued to deport around 650,000 [[Volga Germans]] to the east as well, but the Russian Revolution prevented this from being carried out.&lt;ref&gt;{{cite web |url=http://archive.prairiepublic.org/features/GFR/timeline.htm|title=The Germans from Russia: Children of the Steppe/Children of the Prairie|publisher=Prairie Public Broadcasting|accessdate=17 November 2009}}&lt;/ref&gt;--&gt;

Many [[pogrom]]s accompanied the [[Russian Revolution]] of 1917 and the ensuing [[Russian Civil War]]. 60,000200,000 civilian Jews were killed in the atrocities throughout the former Russian Empire (mostly within the [[Pale of Settlement]] in present-day [[Ukraine]]).&lt;ref&gt;{{cite web |url=https://www.jewishvirtuallibrary.org/jsource/judaica/ejud_0002_0016_0_15895.html|title=Pogroms|work=[[Encyclopaedia Judaica]]|publisher=Jewish Virtual Library|accessdate=17 November 2009}}&lt;/ref&gt;&lt;!--&lt;ref&gt;{{cite web |url=https://www.jewishvirtuallibrary.org/jsource/History/modtimeline.html|title=Jewish Modern and Contemporary Periods (ca. 17001917)|publisher=Jewish Virtual Library|accessdate=17 November 2009}}&lt;/ref&gt;--&gt;

===Rape of Belgium===
{{Main article |Rape of Belgium}}
The German invaders treated any resistancesuch as sabotaging rail linesas illegal and immoral, and shot the offenders and burned buildings in retaliation. In addition, they tended to suspect that most civilians were potential ''[[francs-tireurs]]'' ([[guerrillas]]) and, accordingly, took and sometimes killed hostages from among the civilian population. The German army executed over 6,500 French and Belgian civilians between August and November 1914, usually in near-random large-scale shootings of civilians ordered by junior German officers. The German Army destroyed 15,00020,000 buildingsmost famously the university library at [[Leuven|Louvain]]and generated a wave of refugees of over a million people. Over half the German regiments in Belgium were involved in major incidents.{{sfn |Horne |Kramer |2001 |loc=ch 12, esp. p. 76}} Thousands of workers were shipped to Germany to work in factories. British propaganda dramatizing the [[Rape of Belgium]] attracted much attention in the United States, while Berlin said it was both lawful and necessary because of the threat of franc-tireurs like those in France in 1870.&lt;ref&gt;The claim of franc-tireurs in Belgium has been rejected: {{harvnb |Horne |Kramer |2001 |loc=ch 34}}&lt;/ref&gt; The British and French magnified the reports and disseminated them at home and in the United States, where they played a major role in dissolving support for Germany.{{sfn |Horne |Kramer |2001 |loc=ch 58}}{{sfn |Keegan |1998 |pp=8283}}

==Soldiers' experiences==
{{Main article |List of last surviving World War I veterans by country |World War I casualties |Commonwealth War Graves Commission |American Battle Monuments Commission}}
[[File:BVRC-Great-War-Contingent 1914.jpg|thumb|The First Contingent of the [[Bermuda Volunteer Rifle Corps]] to the [[Royal Lincolnshire Regiment|1 Lincolns]], training in Bermuda for the Western Front, winter 19141915. The two BVRC contingents suffered 75% casualties.]]

The British soldiers of the war were initially volunteers but increasingly were [[conscription|conscripted]] into service. Surviving veterans, returning home, often found that they could only discuss their experiences amongst themselves. Grouping together, they formed &quot;veterans' associations&quot; or &quot;Legions&quot;. A small number of personal accounts of American veterans have been collected by the [[Library of Congress]] [[Veterans History Project]].&lt;ref&gt;{{Cite web|url=http://memory.loc.gov/diglib/vhp/search?query=&amp;field=all&amp;war=worldwari|title=Search Results (+(war:&quot;worldwari&quot;)) : Veterans History Project |publisher=American Folklife Center, Library of Congress |access-date=23 May 2017}}&lt;/ref&gt;

===Prisoners of war===
{{Main article |World War I prisoners of war in Germany}}
[[File:German prisoners in a French prison camp. French Pictorial Service., 1917 - 1919 - NARA - 533724.tif|thumb|left |German prisoners in a French prison camp during the later part of the war]]

About eight million men surrendered and were held in [[Prisoner-of-war camp|POW camps]] during the war. All nations pledged to follow the [[Hague Conventions (1899 and 1907)|Hague Conventions]] on fair treatment of [[prisoners of war]], and the survival rate for POWs was generally much higher than that of their peers at the front.{{sfn |Phillimore |Bellot |1919 |pp=464}} Individual surrenders were uncommon; large units usually surrendered ''en masse''. At the siege of Maubeuge about 40,000 French soldiers surrendered, at the [[battle of Galicia]] Russians took about 100,000 to 120,000 Austrian captives, at the [[Brusilov Offensive]] about 325,000 to 417,000 Germans and Austrians surrendered to Russians, and at the [[Battle of Tannenberg]] 92,000 Russians surrendered. When the besieged garrison of [[Kaunas]] surrendered in 1915, some 20,000 Russians became prisoners, at the battle near [[Przasnysz]] (FebruaryMarch 1915) 14,000 Germans surrendered to Russians, and at the [[First Battle of the Marne]] about 12,000 Germans surrendered to the Allies. 2531% of Russian losses (as a proportion of those captured, wounded, or killed) were to prisoner status; for Austria-Hungary 32%, for Italy 26%, for France 12%, for Germany 9%; for Britain 7%. Prisoners from the Allied armies totalled about 1.4&amp;nbsp;million (not including Russia, which lost 2.53.5 million men as prisoners). From the Central Powers about 3.3&amp;nbsp;million men became prisoners; most of them surrendered to Russians.{{sfn |Ferguson |1999 |pp=3689}} Germany held 2.5&amp;nbsp;million prisoners; Russia held 2.22.9&amp;nbsp;million; while Britain and France held about 720,000. Most were captured just before the Armistice. The United States held 48,000. The most dangerous moment was the act of surrender, when helpless soldiers were sometimes gunned down.{{sfn |Blair |2005}}{{sfn |Cook |2006 |pp=637665}} Once prisoners reached a camp, conditions were, in general, satisfactory (and much better than in World War II), thanks in part to the efforts of the [[International Red Cross]] and inspections by neutral nations. However, conditions were terrible in Russia: [[starvation]] was common for prisoners and civilians alike; about 1520% of the prisoners in Russia died and in Central Powers imprisonment8% of Russians.&lt;ref&gt;{{cite web|url=http://profismart.ru/web/bookreader-115250-24.php|archive-url=https://archive.is/20130417092302/http://profismart.ru/web/bookreader-115250-24.php|dead-url=yes|archive-date=17 April 2013|title=            24   |publisher=Profismart.ru|accessdate=13 March 2013}}&lt;/ref&gt; In Germany, food was scarce, but only 5% died.{{sfn |Speed |1990}}{{sfn |Ferguson |1999 |loc=Chapter 13}}{{sfn |Morton |1992}}

[[File:1stGazaBritishPrisoners00118v.jpg|thumb|250px|British prisoners guarded by Ottoman forces after the [[First Battle of Gaza]] in 1917.]]
The Ottoman Empire often treated POWs poorly.{{sfn |Bass |2002 |p=107}} Some 11,800 British Empire soldiers, most of them Indians, became prisoners after the [[Siege of Kut]] in [[Mesopotamia]] in April 1916; 4,250 died in captivity.&lt;ref&gt;{{cite web|publisher=British National Archives|title=The Mesopotamia campaign|url=http://www.nationalarchives.gov.uk/pathways/firstworldwar/battles/mesopotamia.htm|accessdate=10 March 2007}}&lt;/ref&gt; Although many were in a poor condition when captured, Ottoman officers forced them to march {{convert |1100 |km |mi |0}} to [[Anatolia]]. A survivor said: &quot;We were driven along like beasts; to drop out was to die.&quot;&lt;ref&gt;{{cite web|url=http://www.awm.gov.au/stolenyears/ww1/turkey/story2.asp|publisher=Australian War Memorial|work=Stolen Years: Australian Prisoners of War|title=Prisoners of Turkey: Men of Kut ''Driven along like beasts''|accessdate=10 December 2008|deadurl=yes|archiveurl=https://web.archive.org/web/20090108200459/http://www.awm.gov.au/stolenyears/ww1/turkey/story2.asp|archivedate=8 January 2009|df=}}&lt;/ref&gt; The survivors were then forced to build a railway through the [[Taurus Mountains]].

In Russia, when the prisoners from the [[Czech Legion]] of the Austro-Hungarian army were released in 1917, they re-armed themselves and briefly became a military and diplomatic force during the Russian Civil War.

While the Allied prisoners of the Central Powers were quickly sent home at the end of active hostilities, the same treatment was not granted to Central Power prisoners of the Allies and Russia, many of whom served as [[forced labor]], e.g., in France until 1920. They were released only after many approaches by the Red Cross to the [[Allied Supreme Council]].&lt;ref&gt;{{cite web|url=http://www.icrc.org/Web/Eng/siteeng0.nsf/html/57JQGQ|title=ICRC in WWI: overview of activities|publisher=Icrc.org|accessdate=15 June 2010|deadurl=yes|archiveurl=https://web.archive.org/web/20100719030032/http://www.icrc.org/web/eng/siteeng0.nsf/html/57JQGQ|archivedate=19 July 2010|df=}}&lt;/ref&gt; German prisoners were still being held in Russia as late as 1924.&lt;ref&gt;{{cite news|url=http://www.time.com/time/magazine/article/0,9171,768983,00.html|title=GERMANY: Notes, Sep. 1, 1924|work=Time|date=1 September 1924|accessdate=15 June 2010}}&lt;/ref&gt;

===Military attachs and war correspondents===
{{Main article |Military attachs and war correspondents in the First World War}}
Military and civilian observers from every major power closely followed the course of the war. Many were able to report on events from a perspective somewhat akin to modern &quot;[[embedded journalism|embedded]]&quot; positions within the opposing land and naval forces.

==Support and opposition to the war==

===Support===
[[File:Affiche-guerre Femmes-au-travail.jpg|thumb |Poster urging women to join the British war effort, published by the [[Young Women's Christian Association]]]]

In the Balkans, [[Yugoslav nationalism|Yugoslav nationalists]] such as the leader, [[Ante Trumbi]], strongly supported the war, desiring the freedom of [[Yugoslavs]] from [[Austria-Hungary]] and other foreign powers and the creation of an independent [[Yugoslavia]]. The [[Yugoslav Committee]] was formed in Paris on 30 April 1915 but shortly moved its office to London; Trumbi led the Committee.{{sfn |Tucker |Roberts |2005 |p=1189}} In April 1918, the Rome Congress of Oppressed Nationalities met, including [[Czechoslovak]], [[Italians|Italian]], [[Poles|Polish]], [[Transylvanian]], and [[Yugoslavia|Yugoslav]] representatives who urged the Allies to support national [[self-determination]] for the peoples residing within [[Austria-Hungary]].&lt;ref name=autogenerated3/&gt;

In the Middle East, [[Arab nationalism]] soared in Ottoman territories in response to the rise of Turkish nationalism during the war, with Arab nationalist leaders advocating the creation of a [[Pan-Arabism|pan-Arab]] state. In 1916, the [[Arab Revolt]] began in Ottoman-controlled territories of the Middle East in an effort to achieve independence.{{sfn |Tucker |Roberts |2005 |p=117}}

In East Africa, [[Iyasu V]] of [[Ethiopia]] was supporting the [[Dervish state]] who were at war with the British in the [[Somaliland Campaign]].&lt;ref&gt;{{cite book|last1=Mukhtar|first1=Mohammed|title=Historical Dictionary of Somalia|date=25 February 2003|publisher=Scarecrow Press|page=126|url=https://books.google.com/books?id=DPwOsOcNy5YC&amp;pg=PA126&amp;dq=iyasu+dervish&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwjJjrCxr7LSAhVG4YMKHTEkDgwQ6AEIGjAA#v=onepage&amp;q=iyasu%20dervish&amp;f=false|accessdate=28 February 2017}}&lt;/ref&gt; Von Syburg, the German envoy in [[Addis Ababa]], said, &quot;now the time has come for Ethiopia to regain the coast of the Red Sea driving the Italians home, to restore the Empire to its ancient size.&quot; The [[Ethiopian Empire]] was on the verge of entering World War I on the side of the Central Powers before Iyasu's overthrow due to Allied pressure on the Ethiopian aristocracy.&lt;ref&gt;{{cite news|title=How Ethiopian prince scuppered Germany's WW1 plans|url=http://www.bbc.com/news/world-37428682|accessdate=28 February 2017|agency=BBC News|date=25 September 2016}}&lt;/ref&gt;

A number of socialist parties initially supported the war when it began in August 1914.&lt;ref name=autogenerated3&gt;{{harvnb |Tucker |Roberts |2005 |p=1001}}&lt;/ref&gt; But European socialists split on national lines, with the concept of [[class conflict]] held by radical socialists such as Marxists and [[Syndicalism|syndicalists]] being overborne by their patriotic support for war.{{sfn |Tucker |Roberts |2005 |p=1069}} Once the war began, Austrian, British, French, German, and Russian socialists followed the rising nationalist current by supporting their countries' intervention in the war.{{sfn|Tucker |Roberts |2005 |p=884}}

[[Italian nationalism]] was stirred by the outbreak of the war and was initially strongly supported by a variety of political factions. One of the most prominent and popular Italian nationalist supporters of the war was [[Gabriele d'Annunzio]], who promoted [[Italian irredentism]] and helped sway the Italian public to support intervention in the war.{{sfn |Tucker |Roberts |2005 |p=335}} The [[Italian Liberal Party]], under the leadership of [[Paolo Boselli]], promoted intervention in the war on the side of the Allies and used the Dante Alighieri Society to promote Italian nationalism.{{sfn |Tucker |Roberts |2005 |p=219}} Italian socialists were divided on whether to support the war or oppose it; some were militant supporters of the war, including [[Benito Mussolini]] and [[Leonida Bissolati]].{{sfn |Tucker |Roberts |2005 |p=209}} However, the [[Italian Socialist Party]] decided to oppose the war after anti-militarist protestors were killed, resulting in a [[general strike]] called [[Red Week (Italy)|Red Week]].&lt;ref name=autogenerated6&gt;{{harvnb |Tucker |Roberts |2005 |p=596}}&lt;/ref&gt; The Italian Socialist Party purged itself of pro-war nationalist members, including Mussolini.&lt;ref name=autogenerated6/&gt; Mussolini, a [[Syndicalism|syndicalist]] who supported the war on grounds of irredentist claims on Italian-populated regions of Austria-Hungary, formed the pro-interventionist ''[[Il Popolo d'Italia]]'' and the ''Fasci Rivoluzionario d'Azione Internazionalista'' (&quot;Revolutionary [[Fasci]] for International Action&quot;) in October 1914 that later developed into the ''[[Fasci di Combattimento]]'' in 1919, the origin of fascism.{{sfn |Tucker |Roberts |2005 |p=826}} Mussolini's nationalism enabled him to raise funds from [[Italian Ansaldo company|Ansaldo]] (an armaments firm) and other companies to create ''Il Popolo d'Italia'' to convince socialists and revolutionaries to support the war.&lt;ref&gt;Dennis Mack Smith. 1997. ''Modern Italy; A Political History''. Ann Arbor: The University of Michigan Press. Pp. 284.&lt;/ref&gt;

===Opposition===
{{Main article |Opposition to World War I |French Army Mutinies}}
[[File:Sackville Street (Dublin) after the 1916 Easter Rising.JPG|thumb|left|Sackville Street (now [[O'Connell Street]]) after the 1916 [[Easter Rising]] in [[Dublin]]]]
[[File:The Deserter.jpg|thumb |''The Deserter'', 1916. Anti-war cartoon depicting Jesus facing a [[firing squad]] with soldiers from five European countries.]]

Once war was declared, many socialists and trade unions backed their governments. Among the exceptions were the [[Bolshevik]]s, the [[Socialist Party of America]], and the [[Italian Socialist Party]], and individuals such as [[Karl Liebknecht]], [[Rosa Luxemburg]], and their followers in Germany.

[[Benedict XV]], elected to the papacy less than three months into World War I, made the war and its consequences the main focus of his early pontificate. In stark contrast to his [[pope Pius X|predecessor]],&lt;ref&gt;{{cite book|title=History of the Church|year=1981|publisher=Burns &amp; Oates|location=London|isbn=0-86012-091-0 |translator-first=Margit |translator-last=Resch|volume=9|series=The Church in the industrial age|first=Roger|last=Aubert|editor=Hubert Jedin|editor2=John Dolan|page=521|chapter=Chapter 37: The Outbreak of World War I}}&lt;/ref&gt; five days after his election he spoke of his determination to do what he could to bring peace. His first encyclical, ''[[Ad beatissimi Apostolorum]]'', given 1 November 1914, was concerned with this subject. Benedict XV found his abilities and unique position as a religious emissary of peace ignored by the belligerent powers. The 1915 Treaty of London between Italy and the Triple Entente included secret provisions whereby the Allies agreed with Italy to ignore papal peace moves towards the Central Powers. Consequently, the publication of Benedict's proposed [[World War I#15 August 1917: peace offer by the Pope|seven-point Peace Note]] of August 1917 was roundly ignored by all parties except Austria-Hungary.&lt;ref&gt;{{cite web|title=Who's Who&amp;nbsp; Pope Benedict XV|publisher=firstworldwar.com|date=22 August 2009|url=http://www.firstworldwar.com/bio/popebenedict.htm}}&lt;/ref&gt;

In [[United Kingdom of Great Britain and Ireland|Britain]], in 1914, the [[Public Schools Act 1868|Public Schools]] [[Officers' Training Corps]] annual camp was held at Tidworth Pennings, near [[Salisbury Plain]]. Head of the [[British Army]], [[Lord Kitchener of Khartoum|Lord Kitchener]], was to review the [[cadet]]s, but the imminence of the war prevented him. General [[Horace Smith-Dorrien]] was sent instead. He surprised the two-or-three thousand cadets by declaring (in the words of Donald Christopher Smith, a [[Bermuda|Bermudian]] cadet who was present),
&lt;blockquote&gt;that war should be avoided at almost any cost, that war would solve nothing, that the whole of Europe and more besides would be reduced to ruin, and that the loss of life would be so large that whole populations would be decimated. In our ignorance I, and many of us, felt almost ashamed of a British General who uttered such depressing and unpatriotic sentiments, but during the next four years, those of us who survived the holocaustprobably not more than one-quarter of uslearned how right the General's prognosis was and how courageous he had been to utter it.&lt;ref&gt;''&quot;Merely For the Record&quot;: The Memoirs of Donald Christopher Smith 18941980''. By Donald Christopher Smith. Edited by John William Cox, Jr. Bermuda.&lt;/ref&gt;&lt;/blockquote&gt;
Voicing these sentiments did not hinder Smith-Dorrien's career, or prevent him from doing his duty in World War I to the best of his abilities.

[[File:1917 - Execution  Verdun lors des mutineries.jpg|thumb|left|Possible execution at [[Verdun]] at the time of the mutinies in 1917. The original French text accompanying this photograph notes however that the uniforms are those of 1914/15 and that the execution may be that of a spy at the beginning of the war.]]

Many countries jailed those who spoke out against the conflict. These included [[Eugene Debs]] in the United States and [[Bertrand Russell]] in Britain. In the US, the [[Espionage Act of 1917]] and [[Sedition Act of 1918]] made it a federal crime to oppose military recruitment or make any statements deemed &quot;disloyal&quot;. Publications at all critical of the government were removed from circulation by postal censors,&lt;ref name=&quot;Karp-PoW-1979&quot;/&gt; and many served long prison sentences for statements of fact deemed unpatriotic.

A number of nationalists opposed intervention, particularly within states that the nationalists were hostile to. Although the vast majority of Irish people consented to participate in the war in 1914 and 1915, a minority of advanced [[Irish nationalism|Irish nationalists]] staunchly opposed taking part.&lt;ref&gt;{{cite book|last=Pennell|first=Catriona|title=A Kingdom United: Popular Responses to the Outbreak of the First World War in Britain and Ireland|year=2012|publisher=Oxford University Press|location=Oxford|isbn=978-0-19-959058-2}}&lt;/ref&gt; The war began amid the Home Rule crisis in Ireland that had resurfaced in 1912 and, by July 1914, there was a serious possibility of an outbreak of civil war in Ireland. Irish nationalists and Marxists attempted to pursue Irish independence, culminating in the [[Easter Rising]] of 1916, with Germany sending 20,000 rifles to Ireland to stir unrest in Britain.{{sfn |Tucker |Roberts |2005 |p=584}} The UK government placed Ireland under [[martial law]] in response to the Easter Rising; although, once the immediate threat of revolution had dissipated, the authorities did try to make concessions to nationalist feeling.&lt;ref&gt;O'Halpin, Eunan, ''The Decline of the Union: British Government in Ireland, 18921920'', (Dublin, 1987)&lt;/ref&gt; However, opposition to involvement in the war increased in Ireland, resulting in the [[Conscription Crisis of 1918]].

Other opposition came from [[conscientious objector]]ssome socialist, some religiouswho refused to fight. In Britain, 16,000 people asked for conscientious objector status.{{sfn |Lehmann |van der Veer |1999 |p=62}} Some of them, most notably prominent peace activist [[Stephen Henry Hobhouse]], refused both military and [[alternative service]].&lt;ref&gt;Brock, Peter, ''These Strange Criminals: An Anthology of Prison Memoirs by Conscientious Objectors to Military Service from the Great War to the Cold War'', p. 14, Toronto: University of Toronto Press, 2004, {{ISBN|0-8020-8707-8}}&lt;/ref&gt; Many suffered years of prison, including [[solitary confinement]] and bread and water diets. Even after the war, in Britain many job advertisements were marked &quot;No conscientious objectors need apply&quot;.{{Cite quote|date=June 2017}}

The [[Central Asian Revolt]] started in the summer of 1916, when the [[Russian Empire]] government ended its exemption of Muslims from military service.&lt;ref&gt;{{cite web|url=http://www.country-data.com/cgi-bin/query/r-12499.html|title=Soviet Union  Uzbeks|publisher=Country-data.com|accessdate=13 March 2013}}&lt;/ref&gt;

In 1917, a series of [[French Army Mutinies]] led to dozens of soldiers being executed and many more imprisoned.

[[File:Bundesarchiv Bild 183-R72520, Kiel, Novemberrevolution, Matrosenaufstand.jpg|thumb|[[German Revolution]], Kiel, 1918]]

In [[Milan]], in May 1917, [[Bolshevik]] revolutionaries organised and engaged in rioting calling for an end to the war, and managed to close down factories and stop public transportation.&lt;ref name=&quot;Seton_6&quot;&gt;Seton-Watson, Christopher. 1967. ''Italy from Liberalism to Fascism: 1870 to 1925''. London: Methuen &amp; Co. Ltd. Pp. 471&lt;/ref&gt; The Italian army was forced to enter [[Milan]] with tanks and machine guns to face Bolsheviks and [[Anarchism|anarchists]], who fought violently until 23 May when the army gained control of the city. Almost 50 people (including three Italian soldiers) were killed and over 800 people arrested.&lt;ref name=&quot;Seton_6&quot;/&gt;

In September 1917, [[Russian Expeditionary Force in France|Russian soldiers in France]] began questioning why they were fighting for the French at all and mutinied.{{sfn |Cockfield |1997 |pp=171237}} In Russia, opposition to the war led to soldiers also establishing their own revolutionary committees, which helped foment the [[October Revolution]] of 1917, with the call going up for &quot;bread, land, and peace&quot;.{{Cite quote|date=June 2017}} The Bolsheviks agreed to a peace treaty with Germany, the [[Treaty of Brest-Litovsk|peace of Brest-Litovsk]], despite its harsh conditions.

In northern [[German Empire|Germany]], the end of October 1918 saw the beginning of the [[German Revolution of 19181919]]. Units of the German Navy refused to set sail for a last, large-scale operation in a war they saw as good as lost; this initiated the uprising. The [[Wilhelmshaven mutiny|sailors' revolt]], which then ensued in the naval ports of [[Wilhelmshaven]] and [[Kiel]], spread across the whole country within days and led to the proclamation of a republic on 9 November 1918 and shortly thereafter to the abdication of [[Kaiser Wilhelm II]].

====Conscription====
[[File:Young men registering for military conscription, New York City, June 5, 1917.jpg|thumb |Young men registering for conscription, [[New York City]], 5 June 1917]]
[[Conscription]] was common in most European countries. However it was controversial in English speaking countries. It was especially unpopular among minority ethnic groupsespecially the Irish Catholics in Ireland&lt;ref&gt;Alan J. Ward, &quot;Lloyd George and the 1918 Irish conscription crisis&quot;. ''Historical Journal'' (1974) 17#1 pp: 107129.&lt;/ref&gt; and Australia, and the French Catholics in Canada.

====Conscription in Canada====
{{Main|Conscription Crisis of 1917}}
In Canada the issue produced [[Conscription Crisis of 1917|a major political crisis that permanently alienated the Francophiles.]] It opened a political gap between [[French Canadian]]s, who believed their true loyalty was to Canada and not to the British Empire, and members of the Anglophone majority, who saw the war as a duty to their British heritage.&lt;ref&gt;{{cite web|url=http://www.cbc.ca/history/EPISCONTENTSE1EP12CH2PA3LE.html|title=The Conscription Crisis|publisher=CBC|date=2001}}&lt;/ref&gt;

====Conscription in Australia====
{{Main|Conscription in Australia}}
In Australia, a sustained pro-conscription campaign by [[Billy Hughes]], the Prime Minister, caused a split in the [[Australian Labor Party]], so Hughes formed the [[Nationalist Party of Australia]] in 1917 to pursue the matter. Farmers, the [[labour movement]], the Catholic Church, and the Irish Catholics successfully opposed Hughes' push, which was [[Australian plebiscite, 1917|rejected in two plebiscites]].&lt;ref&gt;J. M. Main, ''Conscription: the Australian debate, 19011970'' (1970) [http://espace.library.uq.edu.au/view/UQ:338722 abstract] {{webarchive |url=https://archive.is/20150707113023/http://espace.library.uq.edu.au/view/UQ:338722 |date=7 July 2015 }}&lt;/ref&gt;

====Conscription in Britain====
{{Main|Conscription in the United Kingdom}}
In Britain, conscription resulted in the calling up of nearly every physically fit man in Britainsix of ten million eligible. Of these, about 750,000 lost their lives. Most deaths were to young unmarried men; however, 160,000 wives lost husbands and 300,000 children lost fathers.{{sfn |Havighurst |1985 |p=131}} In the United States, conscription began in 1917 and was generally well received, with a few pockets of opposition in isolated rural areas.&lt;ref&gt;John Whiteclay Chambers, ''To raise an army: The draft comes to modern America'' (1987).&lt;/ref&gt;

===Diplomacy===
{{Main|Diplomatic history of World War I}} The non-military diplomatic and propaganda interactions among the nations were designed to build support for the cause, or to undermine support for the enemy. For the most part, wartime diplomacy focused on five issues: propaganda campaigns; defining and redefining the war goals, which became harsher as the war went on; luring neutral nations (Italy, Ottoman Empire, Bulgaria, Romania) into the coalition by offering slices of enemy territory; and encouragement by the Allies of nationalistic minority movements inside the Central Powers, especially among Czechs, Poles, and Arabs. In addition, there were multiple peace proposals coming from neutrals, or one side or the other; none of them progressed very far.&lt;ref&gt;David Stevenson, ''The First World War and International Politics'' (1988).&lt;/ref&gt;&lt;ref&gt;Z.A.B. Zeman, ''Diplomatic History of the First World War'' (1971)&lt;/ref&gt;&lt;ref&gt;See * Carnegie Endowment for International Peace. ''Official Statements of War Aims and Peace Proposals: December 1916 to November 1918'', edited by James Brown Scott. (1921) 515pp [https://archive.org/details/cu31924016943106 online free]&lt;/ref&gt;

==Legacy and memory==

{{quote |&lt;poem&gt;...&amp;nbsp;&quot;Strange, friend,&quot; I said, &quot;Here is no cause to mourn.&quot;
&quot;None,&quot; said the other, &quot;Save the undone years&quot;...&amp;nbsp;&lt;/poem&gt; |[[Wilfred Owen]], ''Strange Meeting'', 1918&lt;ref name=&quot;Wilfred Owen 2004&quot;/&gt;}}

{{quote |&lt;poem&gt;The War was an unprecedented triumph for natural science. &lt;nowiki&gt;[&lt;/nowiki&gt;[[Francis Bacon|Francis]]&lt;nowiki&gt;]&lt;/nowiki&gt; Bacon had promised that knowledge would be power, and power it was: power to destroy the bodies and souls of men more rapidly than had ever been done by human agency before. This triumph paved the way to other triumphs: improvements in transport, in sanitation, in surgery, medicine, and psychiatry, in commerce and industry, and, above all, in preparations for the next war.&lt;/poem&gt; |[[R. G. Collingwood]], writing in 1939.&lt;ref&gt;R. G. Collingwood ''An Autobiography'', 1939, page 90.&lt;/ref&gt;}}

The first tentative efforts to comprehend the meaning and consequences of modern warfare began during the initial phases of the war, and this process continued throughout and after the end of hostilities, and is still underway, more than a century later.

===Historiography===
Historian Heather Jones argues that the historiography has been reinvigorated by the cultural turn in recent years. Scholars have raised entirely new questions regarding military occupation, radicalization of politics, race, and the male body. Furthermore, new research has revised our understanding of five major topics that historians have long debated. These are: Why did the war begin? Why did the Allies win? Were the generals to blame for the high casualty rates? How did the soldiers endure the horrors of trench warfare? To what extent did the civilian homefront accept and endorse the war effort?&lt;ref&gt;Heather Jones, &quot;As the centenary approaches: the regeneration of First World War historiography&quot;. ''Historical Journal'' (2013) 56#3 pp: 857878, esp. p. 858&lt;/ref&gt;

===Memorials===
[[File:Pagny le Chateau monument morts 002b.jpg|thumb |A typical village [[war memorial]] to soldiers killed in World War I]]
{{Main article |World War I memorials}}
Memorials were erected in thousands of villages and towns. Close to battlefields, those buried in improvised burial grounds were gradually moved to formal graveyards under the care of organisations such as the [[Commonwealth War Graves Commission]], the [[American Battle Monuments Commission]], the [[German War Graves Commission]], and [[Le Souvenir franais]]. Many of these graveyards also have central monuments to the missing or [[Tomb of the Unknown Soldier|unidentified]] dead, such as the [[Menin Gate]] memorial and the [[Thiepval Memorial to the Missing of the Somme]].

In 1915 [[John McCrae]], a Canadian army doctor, wrote the poem ''[[In Flanders Fields]]'' as a salute to those who perished in the Great War. Published in [[Punch (magazine)|''Punch'']] on 8 December 1915, it is still recited today, especially on [[Armistice Day|Remembrance Day]] and [[Memorial Day]].&lt;ref&gt;{{cite web|url=http://www.histori.ca/minutes/minute.do?id=10200|title=John McCrae|publisher=Historica|deadurl=yes|archiveurl=https://web.archive.org/web/20110609170125/http://www.histori.ca/minutes/minute.do?id=10200|archivedate=9 June 2011|df=}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.thecanadianencyclopedia.com/en/article/john-mccrae/|first=Evans|last=David|title=John McCrae|work=Canadian Encyclopedia}}&lt;/ref&gt;

[[National World War I Museum and Memorial]] in [[Kansas City, Missouri]], is a memorial dedicated to all Americans who served in World War I. The [[Liberty Memorial]] was dedicated on 1 November 1921, when the supreme Allied commanders spoke to a crowd of more than 100,000 people.&lt;ref name=&quot;kclibrary.org&quot;&gt;{{cite web|url=http://www.kclibrary.org/blog/week-kansas-city-history/monumental-undertaking|title=Monumental Undertaking|work=kclibrary.org}}&lt;/ref&gt;

The UK Government has budgeted substantial resources to [[World War I centenary|the commemoration of the war during the period 2014 to 2018]]. The lead body is the [[Imperial War Museum]].&lt;ref&gt;{{cite web|url=http://www.1914.org|title=Commemoration website|publisher=1914.org|accessdate=28 February 2014}}&lt;/ref&gt; On 3 August 2014, French President [[Francois Hollande]] and German President [[Joachim Gauck]] together marked [[Centenary of the outbreak of World War I|the centenary of Germany's declaration of war on France]] by laying the first stone of a memorial in Vieil Armand, known in German as [[Hartmannswillerkopf]], for French and German soldiers killed in the war.&lt;ref name=&quot;HartmannswillerkopfMemorial&quot;&gt;{{cite news|title=French, German Presidents Mark World War I Anniversary|url=http://www.francenews.net/index.php/sid/224398825/scat/e597bd109c960ae3/ht/French-German-Presidents-Mark-World-War-I-Anniversary|accessdate=3 August 2014|publisher=France News.Net}}&lt;/ref&gt;

===Cultural memory===
{{globalize|section|Britain|date=June 2017}}
{{Further information |World War I in popular culture}}
{{double image |right |John McCrae in uniform circa 1914.jpg |150 |Siegfried Sassoon by George Charles Beresford (1915).jpg |150 |Left: [[John McCrae]], author of ''[[In Flanders Fields]]''.&lt;br/&gt;Right: [[Siegfried Sassoon]]}}
World War I had a lasting impact on social memory. It was seen by many in Britain as signalling the end of an era of stability stretching back to the [[Victorian era|Victorian period]], and across Europe many regarded it as a watershed.&lt;ref&gt;{{cite book |first=Mark David|last=Sheftall|title=Altered Memories of the Great War: Divergent Narratives of Britain, Australia, New Zealand, and Canada|year=2010}}&lt;/ref&gt; Historian Samuel Hynes explained:

{{quote |A generation of innocent young men, their heads full of high abstractions like Honour, Glory and England, went off to war to make the world safe for democracy. They were slaughtered in stupid battles planned by stupid generals. Those who survived were shocked, disillusioned and embittered by their war experiences, and saw that their real enemies were not the Germans, but the old men at home who had lied to them. They rejected the values of the society that had sent them to war, and in doing so separated their own generation from the past and from their cultural inheritance.&lt;ref name=&quot;Hynes1991&quot;/&gt;}}

This has become the most common perception of World War I, perpetuated by the art, cinema, poems, and stories published subsequently. Films such as ''[[All Quiet on the Western Front (1930 film)|All Quiet on the Western Front]]'', ''[[Paths of Glory]]'' and ''[[King &amp; Country]]'' have perpetuated the idea, while war-time films including ''Camrades'', ''[[Poppies of Flanders]]'', and ''[[Shoulder Arms]]'' indicate that the most contemporary views of the war were overall far more positive.{{sfn |Todman |2005 |p=153-221}} Likewise, the art of [[Paul Nash (artist)|Paul Nash]], [[John Nash (artist)|John Nash]], [[Christopher Nevinson]], and [[Henry Tonks]] in Britain painted a negative view of the conflict in keeping with the growing perception, while popular war-time artists such as [[Muirhead Bone]] painted more serene and pleasant interpretations subsequently rejected as inaccurate.&lt;ref name=&quot;Hynes1991&quot;&gt;{{cite book |last=Hynes|first=Samuel Lynn|title=A war imagined: the First World War and English culture|year=1991|publisher=Atheneum|isbn=978-0-689-12128-9|pages=ixii}}&lt;/ref&gt; Several historians like John Terraine, Niall Ferguson and Gary Sheffield have challenged these interpretations as partial and [[polemic]]al views:

&lt;blockquote&gt;These beliefs did not become widely shared because they offered the only accurate interpretation of wartime events. In every respect, the war was much more complicated than they suggest. In recent years, historians have argued persuasively against almost every popular clich of World War I. It has been pointed out that, although the losses were devastating, their greatest impact was socially and geographically limited. The many emotions other than horror experienced by soldiers in and out of the front line, including comradeship, boredom, and even enjoyment, have been recognised. The war is not now seen as a 'fight about nothing', but as a war of ideals, a struggle between aggressive militarism and more or less liberal democracy. It has been acknowledged that British generals were often capable men facing difficult challenges, and that it was under their command that the British army played a major part in the defeat of the Germans in 1918: a great forgotten victory.{{sfn |Todman |2005 |p=153-221}}&lt;/blockquote&gt;

Though these views have been discounted as &quot;myths&quot;,&lt;ref name=&quot;Hynes1991&quot;/&gt;&lt;ref name=&quot;Fussell2000&quot;&gt;{{cite book |last=Fussell|first=Paul|title=The Great War and modern memory|url={{google books|plainurl=y|id=D9iNQYfeKdwC}} |accessdate=18 May 2010 |year=2000 |publisher=Oxford University Press |isbn=978-0-19-513332-5 |pages=178}}&lt;/ref&gt; they are common. They have dynamically changed according to contemporary influences, reflecting in the 1950s perceptions of the war as &quot;aimless&quot; following the contrasting Second World War and emphasising conflict within the ranks during times of class conflict in the 1960s. The majority of additions to the contrary are often rejected.{{sfn |Todman |2005 |p=153-221}}

===Social trauma===

[[File:Cover-of-book-for-WWI-veterans-by-William-Brown-Meloney-born-1878.jpg|thumb |upright |A 1919 book for veterans, from the US [[United States Department of War|War Department]]]]

The social trauma caused by unprecedented rates of casualties manifested itself in different ways, which have been the subject of subsequent historical debate.{{sfn |Todman |2005 |p=xixv}}

The [[optimism]] of ''[[Belle poque|la belle poque]]'' was destroyed, and those who had fought in the war were referred to as the [[Lost Generation]].{{sfn |Roden}} For years afterwards, people mourned the dead, the missing, and the many disabled.{{sfn |Wohl |1979}} Many soldiers returned with severe trauma, suffering from [[combat stress reaction|shell shock]] (also called neurasthenia, a condition related to [[posttraumatic stress disorder]]).{{sfn |Tucker |Roberts |2005 |pp=1081086}} Many more returned home with few after-effects; however, their silence about the war contributed to the conflict's growing mythological status. Though many participants did not share in the experiences of combat or spend any significant time at the front, or had positive memories of their service, the images of suffering and trauma became the widely shared perception. Such historians as Dan Todman, [[Paul Fussell]], and Samuel Heyns have all published works since the 1990s arguing that these common perceptions of the war are factually incorrect.{{sfn |Todman |2005 |p=xixv}}

===Discontent in Germany===
The rise of [[Nazism]] and [[Fascism]] included a revival of the nationalist spirit and a rejection of many post-war changes. Similarly, the popularity of the [[stab-in-the-back legend]] (German: ''Dolchstolegende'') was a testament to the psychological state of defeated Germany and was a rejection of responsibility for the conflict. This conspiracy theory of betrayal became common, and the German populace came to see themselves as victims. The widespread acceptance of the &quot;stab-in-the-back&quot; theory delegitimized the Weimar government and destabilized the system, opening it to extremes of right and left.

Communist and fascist movements around Europe drew strength from this theory and enjoyed a new level of popularity. These feelings were most pronounced in areas directly or harshly affected by the war. [[Adolf Hitler]] was able to gain popularity by using German discontent with the still controversial [[Treaty of Versailles]].&lt;ref&gt;{{cite web|url=http://www.bbc.co.uk/history/worldwars/wwone/war_end_01.shtml|publisher=BBC|title=The Ending of World War One, and the Legacy of Peace|first=Martin|last=Kitchen}}&lt;/ref&gt; World War II was in part a continuation of the power struggle never fully resolved by World War I. Furthermore, it was common for Germans in the 1930s to justify acts of aggression due to perceived injustices imposed by the victors of World War I.&lt;ref&gt;{{cite encyclopedia |url=http://www.britannica.com/eb/article-9110199/World-War-II|archiveurl=https://web.archive.org/web/20080624163832/http://www.britannica.com/eb/article-9110199/World-War-II#53532.toc|archivedate=24 June 2008|title=World War II|work=Britannica Online Encyclopedia|accessdate=12 November 2009|publisher=[[Encyclopdia Britannica, Inc.]]|deadurl=yes|df=}}&lt;/ref&gt;&lt;ref&gt;{{cite magazine |last=Baker|first=Kevin|url=http://www.harpers.org/StabbedInTheBack.html|title=Stabbed in the Back! The past and future of a right-wing myth|periodical=Harper's Magazine|date=June 2006|archiveurl=https://web.archive.org/web/20060715174503/http://www.harpers.org/StabbedInTheBack.html|archivedate=15 July 2006|deadurl=yes|df=}}&lt;/ref&gt;{{sfn |Chickering |2004}} American historian [[William Rubinstein]] wrote that:

&lt;blockquote&gt;The 'Age of Totalitarianism' included nearly all of the infamous examples of genocide in modern history, headed by the Jewish Holocaust, but also comprising the mass murders and purges of the Communist world, other mass killings carried out by Nazi Germany and its allies, and also the Armenian Genocide of 1915. All these slaughters, it is argued here, had a common origin, the collapse of the elite structure and normal modes of government of much of central, eastern and southern Europe as a result of World War I, without which surely neither Communism nor Fascism would have existed except in the minds of unknown agitators and crackpots.&lt;ref&gt;{{cite book |last=Rubinstein|first=W. D.|year=2004|url={{google books|plainurl=y|id=nMMAk4VwLLwC}} |title=Genocide: a history |publisher=Pearson Education |page=7 |isbn=0-582-50601-8}}&lt;/ref&gt;&lt;/blockquote&gt;

===Economic effects===
{{See also |Economic history of World War I}}
[[File:The Girl Behind the Gun 1915.jpg|thumb|Poster showing women workers, 1915]]

One of the most dramatic effects of the war was the expansion of governmental powers and responsibilities in Britain, France, the United States, and the Dominions of the British Empire. To harness all the power of their societies, governments created new ministries and powers. New taxes were levied and laws enacted, all designed to bolster the [[war effort]]; many have lasted to this day. Similarly, the war strained the abilities of some formerly large and bureaucratised governments, such as in Austria-Hungary and Germany.

[[Gross domestic product]] (GDP) increased for three Allies (Britain, Italy, and the United States), but decreased in France and Russia, in neutral Netherlands, and in the three main Central Powers. The shrinkage in GDP in Austria, Russia, France, and the Ottoman Empire ranged between 30% and 40%. In Austria, for example, most pigs were slaughtered, so at war's end there was no meat.

In all nations, the government's share of GDP increased, surpassing 50% in both Germany and France and nearly reaching that level in Britain. To pay for purchases in the United States, Britain cashed in its extensive investments in American railroads and then began borrowing heavily on [[Wall Street]]. President Wilson was on the verge of cutting off the loans in late 1916, but allowed a great increase in [[Federal government of the United States|U.S. government]] lending to the Allies. After 1919, the U.S. demanded repayment of these loans. The repayments were, in part, funded by German reparations that, in turn, were supported by American loans to Germany. This circular system collapsed in 1931 and the loans were never repaid. Britain still owed the United States $4.4 [[1,000,000,000|billion]]&lt;ref&gt;10{{sup|9}} in this context&amp;nbsp; see [[Long and short scales]]&lt;/ref&gt; of World War I debt in 1934, and this money was never repaid.&lt;ref&gt;&quot;[http://news.bbc.co.uk/2/hi/uk_news/magazine/4757181.stm What's a little debt between friends?] {{webarchive |url=https://web.archive.org/web/20100610152357/http://news.bbc.co.uk/2/hi/uk_news/magazine/4757181.stm |date=10 June 2010 }}&quot;. BBC News. 10 May 2006.&lt;/ref&gt;

Macro- and micro-economic consequences devolved from the war. Families were altered by the departure of many men. With the death or absence of the primary wage earner, women were forced into the workforce in unprecedented numbers. At the same time, industry needed to replace the lost labourers sent to war. This aided the struggle for [[suffragette|voting rights for women]].&lt;ref&gt;{{cite book|last=Noakes|first=Lucy|title=Women in the British Army: War and the Gentle Sex, 19071948|year=2006|publisher=Routledge|location=Abingdon, England|isbn=0-415-39056-7|page=48}}&lt;/ref&gt;

World War I further compounded the gender imbalance, adding to the phenomenon of [[surplus women]]. The deaths of nearly one million men during the war in Britain increased the gender gap by almost a million: from 670,000 to 1,700,000. The number of unmarried women seeking economic means grew dramatically. In addition, demobilisation and economic decline following the war caused high unemployment. The war increased female employment; however, the return of demobilised men displaced many from the workforce, as did the closure of many of the wartime factories.

In Britain, rationing was finally imposed in early 1918, limited to meat, sugar, and fats (butter and margarine), but not bread. The new system worked smoothly. From 1914 to 1918, trade union membership doubled, from a little over four million to a little over eight million.

Britain turned to her colonies for help in obtaining essential war materials whose supply from traditional sources had become difficult. Geologists such as [[Albert Ernest Kitson]] were called on to find new resources of precious minerals in the African colonies. Kitson discovered important new deposits of [[manganese]], used in munitions production, in the [[Gold Coast (region)|Gold Coast]].{{sfn |Green |1938 |pp=CXXVI}}

[[Article 231 of the Treaty of Versailles|Article 231]] of the [[Treaty of Versailles]] (the so-called &quot;war guilt&quot; clause) stated Germany accepted responsibility for &quot;all the loss and damage to which the Allied and Associated Governments and their nationals have been subjected as a consequence of the war imposed upon them by the aggression of Germany and her allies.&quot;&lt;ref&gt;{{cite book|author=Anton Kaes et al., eds.|title=The Weimar Republic Sourcebook|url=https://books.google.com/books?id=J4A1gt4-VCsC&amp;pg=PA8|year=1994|publisher=University of California Press|page=8}}&lt;/ref&gt; It was worded as such to lay a legal basis for [[World War I reparations|reparations]], and a similar clause was inserted in the treaties with Austria and Hungary. However neither of them interpreted it as an admission of war guilt.&quot;&lt;ref&gt;Marls, The Myths of Reparations, pp.&amp;nbsp;2312&lt;/ref&gt; In 1921, the total reparation sum was placed at 132 billion gold marks. However, &quot;Allied experts knew that Germany could not pay&quot; this sum. The total sum was divided into three categories, with the third being &quot;deliberately designed to be chimerical&quot; and its &quot;primary function was to mislead public opinion&amp;nbsp;... into believing the &quot;total sum was being maintained.&quot;&lt;ref name=Marks237&gt;Marks, p. 237&lt;/ref&gt; Thus, 50 billion gold marks (12.5 billion dollars) &quot;represented the actual Allied assessment of German capacity to pay&quot; and &quot;therefore&amp;nbsp;... represented the total German reparations&quot; figure that had to be paid.&lt;ref name=Marks237/&gt;

This figure could be paid in cash or in kind (coal, timber, chemical dyes, etc.). In addition, some of the territory lostvia the treaty of Versailleswas credited towards the reparation figure as were other acts such as helping to restore the Library of Louvain.&lt;ref&gt;Marks, pp.&amp;nbsp;223234&lt;/ref&gt; By 1929, the [[Great Depression]] arrived, causing political chaos throughout the world.&lt;ref&gt;''World War One: A Short History'' By Norman Stone&lt;/ref&gt; In 1932 the payment of reparations was suspended by the international community, by which point Germany had only paid the equivalent of 20.598 billion gold marks in reparations.&lt;ref&gt;Marks, p. 233&lt;/ref&gt; With the rise of [[Adolf Hitler]], all bonds and loans that had been issued and taken out during the 1920s and early 1930s were cancelled. [[David A. Andelman|David Andelman]] notes &quot;refusing to pay doesn't make an agreement null and void. The bonds, the agreement, still exist.&quot; Thus, following the [[World War II|Second World War]], at the [[Agreement on German External Debts|London Conference]] in 1953, Germany agreed to resume payment on the money borrowed. On 3 October 2010, Germany made the final payment on these bonds.{{efn|The World War I officially ended when Germany paid off the final amount of reparations imposed on it by the Allies.&lt;ref&gt;{{cite web|title=First World War officially ends|url=http://www.telegraph.co.uk/news/worldnews/europe/germany/8029948/First-World-War-officially-ends.html|work=The Telegraph|accessdate=15 March 2017|quote=The final payment of 59.5 million, writes off the crippling debt that was the price for one world war and laid the foundations for another.|first=Allan|last=Hall|date=28 September 2010|location=Berlin}}&lt;/ref&gt;&lt;ref&gt;{{cite news|url=http://www.time.com/time/world/article/0,8599,2023140,00.html|title=Why Did World War I Just End?|last1=Suddath|first1=Claire|date=4 October 2010|work=Time|accessdate=1 July 2013|quote=World War I ended over the weekend. Germany made its final reparations-related payment for the Great War on Oct. 3, nearly 92 years after the country's defeat by the Allies.}}&lt;/ref&gt;&lt;ref&gt;{{cite news|url=http://news.blogs.cnn.com/2010/09/30/world-war-i-to-finally-end-this-weekend/|title=World War I to finally end for Germany this weekend|date=30 September 2010|work=CNN|accessdate=15 March 2017|quote=Germany and the Allies can call it even on World War I this weekend.}}&lt;/ref&gt;&lt;ref&gt;{{cite news|url=https://www.nytimes.com/2010/12/26/opinion/26macmillan.html|title=Ending the War to End All Wars|date=25 December 2010|work=The New York Times |accessdate=15 March 2017|quote=NOT many people noticed at the time, but World War I ended this year.|first=Margaret|last=MacMillan}}&lt;/ref&gt;}}

The war contributed to the evolution of the [[wristwatch]] from women's jewelry to a practical everyday item, replacing the [[pocketwatch]], which requires a free hand to operate.&lt;ref name=&quot;npr&quot;&gt;{{cite web|url=http://www.npr.org/templates/transcript/transcript.php?storyId=521792062|title=From Wristwatches To Radio, How World War I Ushered In The Modern World|publisher=NPR}}&lt;/ref&gt; Military funding of advancements in radio contributed to the postwar popularity of the medium.&lt;ref name=&quot;npr&quot; /&gt;
{{clear}}

==See also==
{{div col||30em}}
* [[Outline of World War I]]
* [[Death rates in the 20th century]]
* [[Diplomatic history of World War I]]
* [[European Civil War]]
* [[List of people associated with World War I]]
* [[Lists of wars]]
* [[List of wars and anthropogenic disasters by death toll]]
* [[Lists of World War I topics]]
* [[Timeline of World War I]]
* [[World War I casualties]]
* [[World War I medal abbreviations]]
{{div col end}}

==Footnotes==
{{Notelist|30em}}

==References==
{{Reflist|30em}}

==Bibliography==
&lt;!--This list is too long already, please make any additions in the linked list articles rather than here--&gt;
&lt;!--DO ''not'' SIMPLY ADD BOOKS ABOUT WORLD WAR I HEREADD THEM TO &quot;LIST OF WORLD WAR I BOOKS&quot;--&gt;
:For a comprehensive bibliography see [[List of books about World War I]]
{{Refbegin|30em}}
*{{cite book |author-link=American Battle Monuments Commission|title=American Armies and Battlefields in Europe: A History, Guide, and Reference Book|publisher=US Government Printing Office|year=1938|url=http://www.secstate.wa.gov/history/ww1/maps.aspx|oclc=59803706|author=American Battle Monuments Commission}}
*{{cite book |title=Army Art of World War I|publisher=[[United States Army Center of Military History]]: Smithsonian Institution, National Museum of American History|year=1993|url=http://www.secstate.wa.gov/history/publications_detail.aspx?p=28|oclc=28608539}}
*{{cite book|last=Ayers|first=Leonard Porter|authorlink=Leonard Porter Ayres|title=The War with Germany: A Statistical Summary|publisher=Government Printing Office|year=1919|url={{google books|plainurl=y|id=OCLC01187647|page=1111}} |ref=harv }}
*{{cite book |last=Bade|first=Klaus J|last2=Brown|first2=Allison (tr.)|title=Migration in European History|series=The making of Europe|location=Oxford|publisher=Blackwell|year=2003|isbn=0-631-18939-4|oclc=52695573}} (translated from the German)
*{{cite book |last=Balakian|first=Peter |author-link=Peter Balakian|title=The Burning Tigris: The Armenian Genocide and America's Response|location=New York|publisher=HarperCollins|year=2003|isbn=978-0-06-019840-4|oclc=56822108}}
*{{cite book |last=Ball|first=Alan M|title=And Now My Soul Is Hardened: Abandoned Children in Soviet Russia, 19181930|location=Berkeley|publisher=University of California Press|year=1996|isbn=978-0-520-20694-6}}, reviewed in {{cite journal|last=Hegarty|first=Thomas J|title=And Now My Soul Is Hardened: Abandoned Children in Soviet Russia, 19181930|date=MarchJune 1998|url=http://www.highbeam.com/doc/1P3-38678108.html|journal=Canadian Slavonic Papers}} (via Highbeam.com)
*{{cite book|last=Bass|first=Gary Jonathan|title=Stay the Hand of Vengeance: The Politics of War Crimes Tribunals|publisher=Princeton University Press|location=Princeton, New Jersey|year=2002|pages=424pp|isbn=0-691-09278-8|oclc=248021790}}
*{{cite book |last=Blair|first=Dale|title=No Quarter: Unlawful Killing and Surrender in the Australian War Experience, 19151918|year=2005|isbn=1-74027-291-9|oclc=62514621|publisher=Ginninderra Press|location=Charnwood, Australia}}
*{{cite book |last=Brands|first=Henry William |author-link=H. W. Brands|title=T. R.: The Last Romantic|location=New York|publisher=Basic Books|year=1997|isbn=0-465-06958-4|oclc=36954615}}
* {{cite book|first=Gail|last=Braybon|title=Evidence, History, and the Great War: Historians and the Impact of 191418|url={{google books|plainurl=y|id=hFqZcQmlOBsC|page=8}} |date= 2004 |publisher=Berghahn Books |page=8 |isbn=978-1-57181-801-0 |ref=harv}}
*{{cite book|last1=Brown|first1=Judith M.|authorlink=Judith M. Brown|year=1994|title=Modern India: The Origins of an Asian Democracy|location=Oxford and New York|publisher=Oxford University Press|isbn=0-19-873113-2}}
*{{cite book |last=Chickering|first=Rodger|title=Imperial Germany and the Great War, 19141918|location=Cambridge|publisher=Cambridge University Press|year=2004|isbn=0-521-83908-4|oclc=55523473}}
*{{cite book|last=Clark|first=Charles Upson|title=Bessarabia, Russia and Roumania on the Black Sea|url=http://depts.washington.edu/cartah/text_archive/clark/meta_pag.shtml|publisher=Dodd, Mead|location=New York|year=1927|oclc=150789848}}
* {{cite book|ref=harv|last=Clark|first=Christopher|author-link=Chris Clark (historian)|title=The Sleepwalkers: How Europe Went to War in 1914|url=https://books.google.com/books?id=TE0iZ4U2ZvUC&amp;pg=PP1|year=2013|publisher=HarperCollins|isbn=978-0-06-219922-5}}
*{{cite book |last=Clark|first=Christopher|title=The Sleepwalkers: How Europe Went to War in 1914|publisher=Harper Books|location=New York|year=2014|isbn=978-0-06-114666-4}}
*{{cite book |last=Cockfield|first=Jamie H|year=1997|title=With snow on their boots : The tragic odyssey of the Russian Expeditionary Force in France during World War I|publisher=Palgrave Macmillan|isbn=0-312-22082-0}}
*{{cite book |last=Conlon|first=Joseph M|url=http://entomology.montana.edu/historybug/TYPHUS-Conlon.pdf|format=PDF|title=The historical impact of epidemic typhus|publisher=Montana State University|accessdate=21 April 2009|deadurl=yes|archiveurl=https://web.archive.org/web/20100611213940/http://entomology.montana.edu/historybug/TYPHUS-Conlon.pdf|archivedate=11 June 2010|df=}}
*{{cite book |last=Cook|first=Tim|title=The politics of surrender: Canadian soldiers and the killing of prisoners in the First World War|journal=The Journal of Military History|volume=70|issue=3|year=2006|pages=637665|doi=10.1353/jmh.2006.0158}}
*{{cite book |last=Cross|first=Wilbur L|title=Zeppelins of World War I|publisher=Paragon Press|location=New York|year=1991|isbn=978-1-55778-382-0|oclc=22860189}}
* {{cite book|first=David|last=Crowe|title=The Essentials of European History: 1914 to 1935, World War I and Europe in crisis|url={{google books|plainurl=y|id=ONDZngEACAAJ}}|year=2001|publisher=Research and Education Association|isbn=978-0-87891-710-5|ref=harv}}
*{{cite book|last=DiNardo|first=Richard|title=Invasion: The Conquest of Serbia, 1915|year=2015|publisher=Praeger|location=Santa Barbara, California|isbn=978-1-4408-0092-4|ref=harv}}
*{{cite book |last=Djoki|first=Dejan|title=Yugoslavism : histories of a failed idea, 19181992|location=London|publisher=Hurst|year=2003|oclc=51093251}}
*{{cite book |last=Doughty|first=Robert A.|year=2005|url={{google books|plainurl=y|id=vZRmHkdGk44C}} |title=Pyrrhic victory: French strategy and operations in the Great War |isbn=978-0-674-01880-8 |publisher=Harvard University Press}}
*{{cite book |last=Duffy|first=Michael|url=http://www.firstworldwar.com/battles/somme.htm|title=Somme|publisher=First World War.com|accessdate=25 February 2007|isbn=0-297-84689-2}}
*{{cite book |last=Dupuy|first=R. Ernest and Trevor N.|title=The Harper's Encyclopedia of Military History, 4th Edition|publisher=Harper Collins Publishers|year=1993|isbn=978-0-06-270056-8}}
* ''Encyclopdia Britannica'' (12th ed. 1922) comprises the 11th edition plus three new volumes 30-31-32 that cover events since 1911 with thorough coverage of the war as well as every country and colony. [[s:1922 Encyclopdia Britannica|partly online and list of article titles]]
** {{cite book|url={{google books|plainurl=y|id=CMYUAAAAQAAJ}} |title= ABBE to ENGLISH HISTORY online free }}
** [[commons:Category:1922 Encyclopdia Britannica scans|scans of each page of vol 30-31-32]]
*{{cite book |last=Evans|first=David|series=Teach yourself|title=The First World War|location=London|publisher=Hodder Arnold|year=2004|isbn=0-340-88489-4|oclc=224332259}}
*{{cite book |last=Evans|first=Leslie|title=Future of Iraq, Israel-Palestine Conflict, and Central Asia Weighed at International Conference|url=http://www.international.ucla.edu/article.asp?parentid=24920|publisher=UCLA International Institute|date=27 May 2005|accessdate=30 December 2008|deadurl=yes|archiveurl=https://web.archive.org/web/20080524084407/http://www.international.ucla.edu/article.asp?parentid=24920|archivedate=24 May 2008|df=}}
*{{cite book |last=Falls|first=Cyril Bentham|authorlink=Cyril Falls|year=1960|title=The First World War|publisher=Longmans|location=London|oclc=460327352|isbn=1-84342-272-7}}
*{{cite book |last=Farwell|first=Byron|authorlink=Byron Farwell|year=1989|title=The Great War in Africa, 19141918|publisher=W. W. Norton|isbn=978-0-393-30564-7}}
*{{cite book |last=Ferguson|first=Niall |author-link=Niall Ferguson|title=The Pity of War|year=1999|publisher=Basic Books|location=New York|isbn=0-465-05711-X|oclc=41124439|pages=563pp}}
*{{cite book |last=Ferguson|first=Niall|title=The War of the World: Twentieth-Century Conflict and the Descent of the West|location=New York|publisher=Penguin Press|year=2006|isbn=1-59420-100-5}}
*{{cite book |last=Fortescue|first=Granville Roland |author-link=Granville Roland Fortescue|title=London in Gloom over Gallipoli; Captain Fortescue in Book and Ashmead-Bartlett in Lecture Declare Campaign Lost|work=New York Times|date=28 October 1915|url=https://query.nytimes.com/gst/abstract.html?res=9907E3DE1E38E633A2575BC2A9669D946496D6CF}}
*{{cite book|last=Fromkin|first=David|title=A Peace to End All Peace: The Fall of the Ottoman Empire and the Creation of the Modern Middle East|year=1989|publisher=Henry Holt and Co|location=New York|isbn=0-8050-0857-8|ref=harv}}
*{{cite book |last=Fromkin|first=David|title=Europe's Last Summer: Who Started the Great War in 1914?|year=2004|publisher=Alfred A. Knopf|location=New York|isbn=0-375-41156-9|oclc=53937943}}
*{{cite book |last=Gelvin|first=James L |author-link=James L. Gelvin|title=The Israel-Palestine Conflict: One Hundred Years of War|location=Cambridge|publisher=Cambridge University Press|year=2005|isbn=0-521-85289-7|oclc=59879560}}
*{{cite book |last=Grant|first=R.G.|title=Battle: A Visual Journey Through 5,000 Years of Combat|publisher=DK Publishing|year=2005|isbn=978-0-7566-5578-5}}
*{{cite book |last=Gray|first=Randal|last2=Argyle|first2=Christopher|year=1990|title=Chronicle of the First World War|location=New York|publisher=Facts on File|isbn=978-0-8160-2595-4|oclc=19398100}}
*{{cite book |last=Gilbert|first=Martin|title=First World War|publisher=Stoddart Publishing|year=1994|isbn=978-0-7737-2848-6}}
*{{cite book |last=Gilbert|first=Martin |author-link=Martin Gilbert|title=The First World War: A Complete History|publisher=Owl Books|location=Clearwater, Florida|year=2004|page=306|isbn=0-8050-7617-4|oclc=34792651}}
*{{cite book |last=Goodspeed|first=Donald James|title=The German Wars 19141945|place=New York|publisher=Random House; Bonanza|year=1985|isbn=978-0-517-46790-9}}
*{{cite book |last=Gray|first=Randal|title=Kaiserschlacht 1918: the final German offensive|publisher=Osprey|year=1991|isbn=978-1-85532-157-1}}
*{{cite journal |last=Green|first=John Frederick Norman|title=Obituary: [[Albert Ernest Kitson]]|publisher=Geological Society|journal=Geological Society Quarterly Journal|volume=94|year=1938}}
*{{cite book |last=Halpern|first=Paul G|title=A Naval History of World War I|publisher=Routledge|location=New York|year=1995|isbn=1-85728-498-4|oclc=60281302}}
*{{cite book |last=Harris|first=J. P.|title=Douglas Haig and the First World War|publisher=CUP|location=Cambridge|edition=2009|year=2008|isbn=978-0-521-89802-7}}
*{{cite book |last=Hartcup|first=Guy |author-link=Guy Hartcup|title=The War of Invention; Scientific Developments, 191418|publisher=Brassey's Defence Publishers|year=1988|isbn=0-08-033591-8}}
*{{cite book |last=Havighurst|first=Alfred F|title=Britain in transition: the twentieth century|edition=4|publisher=University of Chicago Press|year=1985|isbn=978-0-226-31971-1}}
*{{cite book |last=Heller|first=Charles E|title=Chemical warfare in World War I : the American experience, 19171918|location=Fort Leavenworth, Kansas|publisher=Combat Studies Institute|year=1984|url=http://www-cgsc.army.mil/carl/resources/csi/Heller/HELLER.asp|oclc=123244486|deadurl=yes|archiveurl=https://web.archive.org/web/20070704205655/http://www-cgsc.army.mil/carl/resources/csi/Heller/HELLER.asp|archivedate=4 July 2007|df=}}
*{{cite book |last=Heyman|first=Neil M|title=World War I|series=Guides to historic events of the twentieth century|publisher=Greenwood Press|location=Westport, Connecticut|year=1997|isbn=0-313-29880-7|oclc=36292837}}
*{{cite book |last=Hickey|first=Michael|series=The First World War|volume=4|title=The Mediterranean Front 19141923|location=New York|publisher=Routledge|year=2003|pages=6065|isbn=0-415-96844-5|oclc=52375688}}
*{{cite book |last=Hinterhoff|first=Eugene|title=The Campaign in Armenia|work=Marshall Cavendish Illustrated Encyclopedia of World War I |editor-last=Young |editor-first=Peter|volume=ii|publisher=Marshall Cavendish|year=1984|location=New York|isbn=0-86307-181-3}}
* Hirschfeld, Gerhard et al. eds. ''Brill's Encyclopedia of the First World War'' (2012), 1105pp
* {{cite journal|ref=harv|last=Holmes|first=T. M.|title=Absolute Numbers: The Schlieffen Plan as a Critique of German Strategy in 1914|journal=[[War in History]]|volume=XXI|issue=2|date=April 2014|pages=194, 211|publisher=Edward Arnold|location=London|issn=1477-0385}}
*{{cite book |last=Hooker|first=Richard|year=1996|title=The Ottomans|url=http://www.wsu.edu/~dee/OTTOMAN/OTTOMAN1.HTM|publisher=Washington State University|archiveurl=https://web.archive.org/web/19991008042702/http://www.wsu.edu/~dee/OTTOMAN/OTTOMAN1.HTM|archivedate=8 October 1999|deadurl=yes|df=}}
*{{cite book |last=Hooker|first=Richard|year=1996|title=The Ottomans|url=http://www.wsu.edu/~dee/OTTOMAN/OTTOMAN1.HTM|publisher=Washington State University|archiveurl=https://web.archive.org/web/19991008042702/http://www.wsu.edu/~dee/OTTOMAN/OTTOMAN1.HTM|archivedate=8 October 1999|deadurl=yes|df=}}
*{{cite book |last1=Horne|first1=John|last2=Kramer|first2=Alan|title=German Atrocities, 1914: A History of Denial|publisher=Yale University Press|year=2001|oclc=47181922}}
*{{cite book |last=Hovannisian|first=Richard G.|authorlink=Richard G. Hovannisian|title=Armenia on the Road to Independence, 1918|publisher=University of California Press|location=Berkeley|year=1967|isbn=0-520-00574-0}}
*{{cite book |last=Hull|first=Isabel Virginia |author-link=Isabel Virginia Hull|title=Absolute destruction: military culture and the practices of war in Imperial Germany|publisher=Cornell University Press|year=2006|isbn=978-0-8014-7293-0}}
*{{cite book |last=Humphries|first=Mark Osborne|chapter=&quot;Old Wine in New Bottles&quot;: A Comparison of British and Canadian Preparations for the Battle of Arras |editor-last=Hayes |editor-first=Geoffrey |editor2-last=Iarocci |editor2-first=Andrew |editor3-last=Bechthold |editor3-first=Mike|title=Vimy Ridge: A Canadian Reassessment|publisher=Wilfrid Laurier University Press|location=Waterloo|year=2007|pages=6585|url={{google books|plainurl=y|id=Pf5y7sehRwAC|page=66}} |isbn=0-88920-508-6}}
*{{cite book |last=Inglis|first=David|url=http://summit.sfu.ca/system/files/iritems1/6687/b17448906.pdf|format=PDF|title=Vimy Ridge: 19171992, A Canadian Myth over Seventy Five Years|publisher=Simon Fraser University|location=Burnaby|year=1995}}
*{{cite book |last1=Isaac|first1=Jad|last2=Hosh|first2=Leonardo|title=Roots of the Water Conflict in the Middle East|url=http://www.oranim.ac.il/courses/meast/water/Roots+of+the+Water+Conflict+in+the+Middle+East.htm|archiveurl=https://web.archive.org/web/20060928053605/http://www.oranim.ac.il/courses/meast/water/Roots%20of%20the%20Water%20Conflict%20in%20the%20Middle%20East.htm|archivedate=28 September 2006|date=79 May 1992|location=University of Waterloo|deadurl=yes|df=}}
*{{cite book |last=Jenkins|first=Burris A|title=Facing the Hindenburg Line|publisher=BiblioBazaar|year=2009|isbn=978-1-110-81238-7}}
*{{cite book |last=Johnson|first=James Edgar |author-link=Johnnie Johnson (RAF officer)|title=Full Circle: The Story of Air Fighting|year=2001|isbn=0-304-35860-6|oclc=45991828|publisher=Cassell|location=London}}
*{{cite book |last=Jones|first=Howard|title=Crucible of Power: A History of US Foreign Relations Since 1897|publisher=Scholarly Resources Books|location=Wilmington, Delaware|year=2001|isbn=0-8420-2918-4|oclc=46640675}}
*{{cite book |last=Kaplan|first=Robert D|title=Syria: Identity Crisis|url=https://www.theatlantic.com/doc/199302/kaplan|periodical=The Atlantic|date=February 1993|accessdate=30 December 2008}}
*{{cite book |last=Karp|first=Walter|title=The Politics of War|year=1979|edition=1st|isbn=0-06-012265-X|oclc=4593327}}, Wilson's maneuvering US into war
*{{cite book |last=Keegan|first=John |author-link=John Keegan|title=The First World War|publisher=Hutchinson|year=1998|isbn=0-09-180178-8}}, general military history
*{{cite book |last=Keene|first=Jennifer D|title=World War I|series=Daily Life Through History Series|publisher=Greenwood Press|location=Westport, Connecticut|year=2006|page=5|isbn=0-313-33181-2|oclc=70883191}}
*{{cite journal |last=Kernek|first=Sterling|date=December 1970|title=The British Government's Reactions to President Wilson's 'Peace' Note of December 1916|journal=The Historical Journal|volume=13|issue=4|jstor=2637713|pages=721766|doi=10.1017/S0018246X00009481}}
*{{cite book |last=Kitchen|first=Martin|title=Europe Between the Wars|location=New York|publisher=Longman|year=2000|origyear=1980|isbn=0-582-41869-0|oclc=247285240}}
*{{cite book  |editor-last=Knobler |editor-first=Stacey L|title=The Threat of Pandemic Influenza: Are We Ready? Workshop Summary|year=2005|location=Washington DC|publisher=National Academies Press|isbn=0-309-09504-2|oclc=57422232|url=http://www.nap.edu/books/0309095042/html/7.html}}
*{{cite book |last=Kurlander|first=Eric|year=2006|title=Steffen Bruendel. Volksgemeinschaft oder Volksstaat: Die &quot;Ideen von 1914&quot; und die Neuordnung Deutschlands im Ersten Weltkrieg|url=http://www.h-net.org/reviews/showrev.cgi?path=101921145898314|publisher=H-net|format=Book review|accessdate=17 November 2009}}
*{{cite book  |editor1-last=Lehmann |editor1-first=Hartmut |editor2-last=van der Veer |editor2-first=Peter|title=Nation and religion: perspectives on Europe and Asia|publisher=Princeton University Press|location=Princeton, New Jersey|year=1999|isbn=0-691-01232-6|oclc=39727826}}
*{{cite journal |last=Love|first=Dave|date=May 1996|title=The Second Battle of Ypres, April 1915|journal=Sabretasche|volume=26|issue=4|url=http://www.worldwar1.com/sf2ypres.htm}}
*{{cite book |last=Lyons|first=Michael J|title=World War I: A Short History|edition=2nd|publisher=Prentice Hall|year=1999|isbn=0-13-020551-6}}
*{{cite book |last=Ludendorff|first=Erich|authorlink=Erich Ludendorff|title=My War Memories, 19141918|oclc=60104290|year=1919}} also published by Harper as &quot;Ludendorff's Own Story, August 1914&amp;nbsp; November 1918: The Great War from the Siege of Lige to the Signing of the Armistice as Viewed from the Grand Headquarters of the German Army&quot; {{OCLC |561160}} (original title ''Meine Kriegserinnerungen, 19141918'')
*{{cite book |last=Magliveras|first=Konstantinos D|year=1999|title=Exclusion from Participation in International Organisations: The Law and Practice behind Member States' Expulsion and Suspension of Membership|publisher=Martinus Nijhoff Publishers|isbn=90-411-1239-1}}
*{{cite book |last=Martel|first=Gordon|year=2003|title=The Origins of the First World War|publisher=Pearson Longman, Harlow}}
*{{cite book |last=Mawdsley|first=Evan|year=2008|title=The Russian Civil War|edition=Edinburgh|publisher=Birlinn location|isbn=1-84341-041-9|ref=harv}}
*{{cite book |last=McLellan|first=Edwin N|url=http://www.ibiblio.org/hyperwar/AMH/XX/WWI/USMC/USMC-WWI.html#XIV|title=The United States Marine Corps in the World War}}
*{{cite book |last=Meyer|first=Gerald J|year=2006|title=A World Undone: The Story of the Great War 1914 to 1918|publisher=Random House|isbn=978-0-553-80354-9}}
*{{cite book |last1=Millett|first1=Allan Reed|last2=Murray|first2=Williamson|title=Military Effectiveness|location=Boston|publisher=Allen Unwin|year=1988|isbn=0-04-445053-2|oclc=220072268}}
*{{cite book |last=Moon|first=John Ellis van Courtland|title=United States Chemical Warfare Policy in World War II: A Captive of Coalition Policy?|journal=The Journal of Military History|volume=60|issue=3|date=July 1996|pages=495511|doi=10.2307/2944522|publisher=Society for Military History|jstor=2944522}}
*{{cite book |last=Morton|first=Desmond|title=Silent Battle: Canadian Prisoners of War in Germany, 19141919|year=1992|location=Toronto|publisher=Lester Publishing|isbn=1-895555-17-5|oclc=29565680}}
*{{cite book |last=Mosier|first=John|title=Myth of the Great War: How the Germans Won the Battles and How the Americans Saved the Allies|year=2001|publisher=Harper Collins|location=New York|isbn=0-06-019676-9|chapter=Germany and the Development of Combined Arms Tactics}}
*{{cite journal |last=Muller|first=Jerry Z|title=Us and Them&amp;nbsp; The Enduring Power of Ethnic Nationalism|periodical=Foreign Affairs|publisher=[[Council on Foreign Relations]]|url=http://www.foreignaffairs.com/20080301faessay87203/jerry-z-muller/us-and-them.html|date=MarchApril 2008|accessdate=30 December 2008}}
*{{cite book |last=Neiberg|first=Michael S|title=Fighting the Great War: A Global History|location=Cambridge, Mass|publisher=Harvard University Press|year=2005|isbn=0-674-01696-3|oclc=56592292}}
*{{cite book |last=Nicholson|first=Gerald WL|title=Canadian Expeditionary Force, 19141919: Official History of the Canadian Army in the First World War|year=1962|edition=1st|location=Ottawa|publisher=Queens Printer and Controller of Stationary|oclc=2317262|url=http://www.censol.ca/research/greatwar/nicholson/index.htm|archiveurl=https://web.archive.org/web/20070516162359/http://www.censol.ca/research/greatwar/nicholson/index.htm|archivedate=16 May 2007|deadurl=yes|df=}}
*{{cite book |last=Northedge|first=FS|year=1986|title=The League of Nations: Its Life and Times, 19201946|publisher=Holmes &amp; Meier|location=New York|isbn=0-7185-1316-9}}
*{{cite journal |url=http://net.lib.byu.edu/estu/wwi/comment/Italy/Page04.htm|first=Thomas Nelson|last=Page|title=Italy and the World War|at=Chapter XI|publisher=Brigham Young University}} cites &quot;Cf. articles signed XXX in ''La Revue de Deux Mondes'', 1 and 15 March 1920&quot;
*{{cite journal |last=Painter|first=David S.|authorlink=David S. Painter|year=2012|title=Oil and the American Century|url=http://jah.oxfordjournals.org/content/99/1/24.full.pdf|journal=[[The Journal of American History]]|volume=99|issue=1|pages=2439|doi=10.1093/jahist/jas073}}
*{{cite journal |last1=Phillimore|first1=George Grenville|last2=Bellot|first2=Hugh HL|title=Treatment of Prisoners of War|journal=Transactions of the Grotius Society|volume=5|year=1919|pages=4764|oclc=43267276}}
*{{cite book |last=Pitt|first=Barrie|title=1918: The Last Act|location=Barnsley|publisher=Pen and Sword|isbn=0-85052-974-3|oclc=56468232|year=2003}}
*{{cite book |last=Price|first=Alfred|title=Aircraft versus Submarine: the Evolution of the Anti-submarine Aircraft, 1912 to 1980|publisher=Jane's Publishing|location=London|year=1980|isbn=0-7106-0008-9|oclc=10324173}} Deals with technical developments, including the first dipping [[hydrophones]]
*{{cite book |last=Prior|first=Robin|year=1999|title=The First World War|location=London|publisher=Cassell|isbn=0-304-35256-X}}
*{{cite journal |last=Raudzens|first=George|title=War-Winning Weapons: The Measurement of Technological Determinism in Military History|journal=The Journal of Military History|volume=54|issue=4|date=October 1990|pages=403434|doi=10.2307/1986064|publisher=Society for Military History|jstor=1986064}}
*{{cite book |last=Repington|first=Charles  Court|authorlink=Charles  Court Repington|title=The First World War, 19141918|year=1920|volume=2|publisher=Constable|location=London|url=https://archive.org/details/firstworldwar19102repiuoft|isbn=1-113-19764-1}}
*{{cite journal |last=Rickard|first=J|date=5 March 2001|url=http://www.historyofwar.org/articles/people_ludendorff.html|title={{sic|nolink=y|Erich von Ludendorff|expected=Erich Ludendorff}}, 18651937, German General |work=Military History Encyclopedia on the Web |publisher=HistoryOfWar.org |accessdate=6 February 2008}}
*{{cite journal|last=Rickard|first=J|date=27 August 2007|title=The Ludendorff Offensives, 21 March-18 July 1918|url=http://www.historyofwar.org/scripts/fluffy/fcp.pl?words=20+July+1918&amp;d=/battles_ludendorff.html}}
*{{cite journal|last=Roden|first=Mike|url=http://www.aftermathww1.com/lostgen.asp|title=The Lost Generation&amp;nbsp; myth and reality|work=Aftermath&amp;nbsp; when the boys came home|accessdate=6 November 2009}}
*{{cite news |last=Saadi|first=Abdul-Ilah|title=Dreaming of Greater Syria|publisher=Al Jazeera|url=http://english.aljazeera.net/focus/arabunity/2008/02/2008525183842614205.html|date=12 February 2009|accessdate=14 August 2014}}
*{{cite book |last=Sachar|first=Howard Morley|title=The emergence of the Middle East, 19141924|publisher=Allen Lane|year=1970|oclc=153103197|isbn=0-7139-0158-6}}
*{{cite book|last=Salibi|first=Kamal Suleiman|year=1993|publisher=I.B. Tauris|chapter=How it all began&amp;nbsp; A concise history of Lebanon|title=A House of Many Mansions&amp;nbsp; the history of Lebanon reconsidered|url=http://almashriq.hiof.no/lebanon/900/902/Kamal-Salibi/|isbn=1-85043-091-8|oclc=224705916}}
*{{cite journal  |last=Schindler|first=J|title=Steamrollered in Galicia: The Austro-Hungarian Army and the Brusilov Offensive, 1916|journal=War in History|volume=10|issue=1|year=2003|pages=2759|doi=10.1191/0968344503wh260oa}}
*{{cite book |last=Shanafelt|first=Gary W|title=The secret enemy: Austria-Hungary and the German alliance, 19141918|year=1985|publisher=East European Monographs|isbn=978-0-88033-080-0}}
*{{cite book |last1=Shapiro|first1=Fred R|last2=Epstein|first2=Joseph|title=The Yale Book of Quotations|publisher=Yale University Press|year=2006|isbn=0-300-10798-6}}
* {{cite book|first1=David James|last1=Smith|title=One Morning In Sarajevo|url={{google books|plainurl=y|id=GzsnSU9J5sAC}} |year=2010 |publisher=Hachette UK |quote=He was photographed on the way to the station and the photograph has been reproduced many times in books and articles, claiming to depict the arrest of Gavrilo Princip. But there is no photograph of Gavro's arrest  this photograph shows the arrest of Behr. |isbn=978-0-297-85608-5 |ref=harv}}
*{{cite book|last=Souter|first=Gavin|title=Lion &amp; Kangaroo: the initiation of Australia|year=2000|publisher=Text Publishing|location=Melbourne|oclc=222801639}}
*{{cite journal |last=Sisemore|first=James D|year=2003|url=http://cgsc.cdmhost.com/cdm4/item_viewer.php?CISOROOT=/p4013coll2&amp;CISOPTR=113|title=The Russo-Japanese War, Lessons Not Learned|publisher=[[US Army Command and General Staff College]]}}
*{{cite web |last=Smele|first=Jonathan|title=War and Revolution in Russia 19141921|url=http://www.bbc.co.uk/history/worldwars/wwone/eastern_front_01.shtml|publisher=BBC|work=World Wars in-depth|accessdate=12 November 2009|archiveurl=https://www.webcitation.org/635RR9gbC?url=http://www.bbc.co.uk/history/worldwars/wwone/eastern_front_01.shtml|archivedate=10 November 2011}}
*{{cite book |last=Speed|first=Richard B, III|title=Prisoners, Diplomats and the Great War: A Study in the Diplomacy of Captivity|year=1990|location=New York|publisher=Greenwood Press|isbn=0-313-26729-4|oclc=20694547}}
*{{cite book |last=Stevenson|first=David |author-link=David Stevenson (historian)|title=Armaments and the Coming of War: Europe, 19041914|year=1996|location=New York|publisher=Oxford University Press|isbn=0-19-820208-3|oclc=33079190}}
*{{cite book |last=Stevenson|first=David|title=Cataclysm: The First World War as Political Tragedy|year=2004|pages=560pp|isbn=0-465-08184-3|oclc=54001282|publisher=Basic Books|location=New York}}
*{{cite book|last=Strachan|first=Hew|authorlink=Hew Strachan|title=The First World War: Volume I: To Arms|year=2003|location=New York|publisher=Viking|isbn=0-670-03295-6|oclc=53075929}}
*{{cite book |last=Taylor|first=Alan John Percivale |author-link=A.J.P. Taylor|title=The First World War: An Illustrated History|publisher=Hamish Hamilton|year=1963|isbn=0-399-50260-2|oclc=2054370}}
*{{cite book |last=Taylor|first=Alan John Percivale|title=The First World War and its aftermath, 19141919|location=London|publisher=Folio Society|oclc=49988231|year=1998|series=Century of Conflict, 18481948}}
*{{cite journal |last=Taylor|first=John M|title=Audacious Cruise of the Emden|journal=The Quarterly Journal of Military History|volume=19|issue=4|date=Summer 2007|pages=3847|issn=0899-3718|doi=10.1353/jmh.2007.0331 |doi-broken-date=2017-01-15}}
*{{cite book |last=Terraine|first=John|title=Ordeal of Victory|year=1963|publisher=J. B. Lippincott|location=Philadelphia|pages=508pp|oclc=1345833|isbn=0-09-068120-7}}
* {{cite book|first=Dan|last=Todman|title=The Great War: Myth and Memory|url={{google books|plainurl=y|id=VMrQAgAAQBAJ}}|date=2005|publisher=A &amp; C Black|isbn=978-0-8264-6728-7 |ref=harv}}
* {{cite book|first=Jozo|last=Tomasevich|authorlink=Jozo Tomasevich|title=War and Revolution in Yugoslavia: 1941 - 1945|url=https://books.google.com/books?id=fqUSGevFe5MC&amp;pg=PA485|accessdate=4 December 2013|year=2001|publisher=Stanford University Press|isbn=978-0-8047-7924-1|ref=harv}}
*{{cite book|last=Tschanz|first=David W|url=http://www.entomology.montana.edu/historybug/WWI/TEF.htm|title=Typhus fever on the Eastern front in World War I|publisher=Montana State University|accessdate=12 November 2009|deadurl=yes|archiveurl=https://web.archive.org/web/20100611212917/http://entomology.montana.edu/historybug/WWI/TEF.htm|archivedate=11 June 2010|df=}}
*{{cite book |last=Tuchman|first=Barbara Wertheim|authorlink=Barbara Tuchman|title=The Zimmermann Telegram|location=New York|publisher=Macmillan|year=1966|edition=2nd|isbn=0-02-620320-0|oclc=233392415}}
*{{cite book|last=Tucker|first=Spencer C|last2=Roberts|first2=Priscilla Mary|title=Encyclopedia of World War I|location=Santa Barbara|publisher=ABC-Clio|year=2005|isbn=1-85109-420-2|oclc=61247250}}
*{{cite book |last1=Tucker|first1=Spencer C|last2=Wood|first2=Laura Matysek|last3=Murphy|first3=Justin D|title=The European powers in the First World War: an encyclopedia|publisher=Taylor &amp; Francis|year=1999|url=https://books.google.co.uk/books?id=gv3GEyB19wIC|isbn=978-0-8153-3351-7}}
* {{cite book|last=Velikonja|first=Mitja|title=Religious Separation and Political Intolerance in Bosnia-Herzegovina|url=https://books.google.com/books?id=Rf8P-7ExoKYC&amp;pg=PA141|year=2003|publisher=Texas A&amp;M University Press|isbn=978-1-58544-226-3|ref=harv}}
*{{cite book |last=von der Porten|first=Edward P|title=German Navy in World War II|location=New York|publisher=T. Y. Crowell|year=1969|oclc=164543865|isbn=0-213-17961-X}}
*{{cite book |last=Westwell|first=Ian|title=World War I Day by Day|publisher=MBI Publishing|location=St. Paul, Minnesota|year=2004|pages=192pp|isbn=0-7603-1937-5|oclc=57533366}}
*{{cite book |last=Wilgus|first=William John|title=Transporting the A. E. F. in Western Europe, 19171919|location=New York|publisher=Columbia University Press|year=1931|oclc=1161730}}
*{{cite book |last=Willmott|first=H.P.|year=2003|title=World War I|location=New York|publisher=Dorling Kindersley|isbn=0-7894-9627-5|oclc=52541937}}
*{{cite journal |last=Winegard|first=Timothy|title=Here at Vimy: A Retrospective&amp;nbsp; The 90th Anniversary of the Battle of Vimy Ridge|journal=Canadian Military Journal|volume=8|issue=2|url=http://www.journal.forces.gc.ca/vo8/no2/winegard-eng.asp}}
*{{cite book |last=Winter|first=Denis|title=The First of the Few: Fighter Pilots of the First World War|year=1983|publisher=Penguin|isbn=978-0-14-005256-5}}
*{{cite book |last=Wohl|first=Robert|title=The Generation of 1914|edition=3|year=1979|publisher=Harvard University Press|isbn=978-0-674-34466-2}}
*{{cite book|last=Zieger|first=Robert H|title=America's Great War: World War I and the American experience|publisher=Rowman &amp; Littlefield|location=Lanham, Maryland|year=2001|page=50|isbn=0-8476-9645-6}}
*{{cite magazine |periodical=The Economist|title=History in brief (Israel)|date=28 July 2005|url=http://www.economist.com/node/4221793|accessdate=30 December 2008}}
*{{cite web |author=Israeli Foreign Ministry|title=Ottoman Rule|publisher=Jewish Virtual Library|url=https://www.jewishvirtuallibrary.org/jsource/History/Ottoman.html|accessdate=30 December 2008}}
*{{cite book|last1=De Groot|first1=Gerard J|title=The First World War|date=2001|publisher=Palgrave|location=Basingstoke|isbn=0-333-74534-5}}
*{{cite book|last1=Turner|first1=Leonard Charles Frederick|title=Origins of the First World War|date=1976|publisher=Edward Arnold|location=London|isbn=0-393-09947-4}}
*{{cite book|last1=Henig|first1=Ruth B. (Ruth Beatrice)|title=The origins of the First World War|date=1994|publisher=Routledge|location=London|isbn=0-415-10233-2}}
*{{cite book|last1=Stevenson|first1=David|title=The First World War and international politics|date=1988|publisher=University Press|location=Oxford|isbn=0-19-873049-7}}

===Primary sources===
* Collins, Ross F. ed. ''World War I: Primary Documents on Events from 1914 to 1919'' (Greenwood Press, 2008) [https://www.questia.com/library/120085141/world-war-i-primary-documents-on-events-from-1914 online]

===Historiography and memory===
*{{cite magazine |last=Baker|first=Kevin|title=Stabbed in the Back! The past and future of a right-wing myth|periodical=Harper's Magazine|date=June 2006}}
* Deak, John. &quot;The Great War and the Forgotten Realm: The Habsburg Monarchy and the First World War&quot; ''Journal of Modern History'' (2014) 86#2 pp: 336380.
* Iriye, Akira. &quot;The Historiographic Impact of the Great War&quot;. ''Diplomatic History'' (July 2014) {{doi|10.1093/dh/dhu035}}
* Jones, Heather. &quot;As the centenary approaches: the regeneration of First World War historiography&quot;. ''Historical Journal''  (2013) 56#3 pp: 857878.
* Jones, Heather. &quot;Goodbye to all that?: Memory and meaning in the commemoration of the first world war&quot;. ''Juncture'' (2014) 20#4 pp: 287291.
* Kitchen, James E., Alisa Miller and Laura Rowe, eds. ''Other Combatants, Other Fronts: Competing Histories of the First World War'' (2011) [https://www.amazon.com/Other-Combatants-Fronts-Competing-Histories/dp/1443827371/  excerpt]
* Kramer, Alan. &quot;Recent Historiography of the First World War  Part I&quot;, ''Journal of Modern European History'' (Feb. 2014) 12#1 pp 527; &quot;Recent Historiography of the First World War (Part II)&quot;, (May 2014) 12#2 pp 155174
* Mulligan, William. &quot;The Trial Continues: New Directions in the Study of the Origins of the First World War&quot;. ''English Historical Review'' (2014) 129#538  pp: 639666.
* Reynolds, David. ''The Long Shadow: The Legacies of the Great War in the Twentieth Century'' (2014) [https://www.amazon.com/Long-Shadow-Legacies-Twentieth-Century/dp/0393088634/ Excerpt and text search]
* Sanborn, Joshua. &quot;Russian Historiography on the Origins of the First World War Since the Fischer Controversy&quot;. ''Journal of Contemporary History'' (2013) 48#2 pp: 350362.
* Sharp, Heather. &quot;Representing Australia's Involvement in the First World War: Discrepancies between Public Discourses and School History Textbooks from 1916 to 1936&quot;. ''Journal of Educational Media, Memory, and Society'' (2014) 6#1 pp: 123.
* Trout, Stephen. ''&quot;On the Battlefield of Memory: The First World War and American Remembrance, 19191941'' (2013)
* Turan, mer. &quot;Turkish Historiography of the First World War&quot;. Middle East ''Critique'' (2014) 23#2 pp: 241257.
* Winter, Jay, ed. ''The Cambridge History of the First World War'' (2 vol. Cambridge University Press, 2014)
{{Refend}}

==External links==
{{Spoken Wikipedia-3 |2006-06-24 |World War I (part 1).ogg |World War I (part 2).ogg |World War I (part 3).ogg}}
* [http://www.1914-1918-online.net/ 19141918-online International Encyclopedia of the First World War]
* [http://www.greatwar.nl/ The Heritage of the Great War / First World War. Graphic color photos, pictures and music]
* [http://www.firstworldwar.com/ A multimedia history of World War I]
* European Newspapers from the [http://www.theeuropeanlibrary.org/tel4/newspapers/search?query=&amp;decade=1910-1919&amp;month=7&amp;year=1914&amp;&amp;count=50 start of the First World War] and the [http://www.theeuropeanlibrary.org/tel4/newspapers/search?query=&amp;decade=1910-1919&amp;month=11&amp;year=1918&amp;count=50 end of the war]
* [http://www.americanhistoryprojects.com/downloads/World-War-I.ppt Powerpoint summary of the war]
* [http://wwi.lib.byu.edu/index.php/Main_Page The World War I Document Archive] Wiki, Brigham Young University
* [http://maps.omniatlas.com/europe/19140905/ Maps of Europe] covering the history of World War I at omniatlas.com
* [https://networks.h-net.org/world-war-i-crossroads &quot;World War I Crossroads&quot;] current discussions by scholars
* [http://www.americanhistoryprojects.com/downloads/military.htm#J. World War I (First World War) Guide to websites]
* [https://www.mtholyoke.edu/acad/intrel/ww1.htm Documents from Mount Holyoke College]
* [http://project.efg1914.eu/ EFG1914&amp;nbsp; Film digitisation project on First World War]
* [http://www.europeanfilmgateway.eu/node/33/efg1914/multilingual%3A1 WWI Films on the European Film Gateway]
* [http://www.britishpathe.com/workspaces/page/ww1-the-definitive-collection The British Path WW1 Film Archive]
* [http://digitalcollections.library.ubc.ca/cdm/landingpage/collection/WWIphoto World War I British press photograph collection]  A sampling of images distributed by the British government during the war to diplomats overseas, from the UBC Library Digital Collections
*[http://memory.loc.gov/diglib/vhp/search?query=&amp;field=all&amp;war=worldwari Personal accounts of American World War I veterans], Veterans History Project, Library of Congress.

===Animated maps===
* [http://www.the-map-as-history.com/demos/tome06/ An animated map &quot;Europe plunges into war&quot;]
* [http://www.the-map-as-history.com/demos/tome03/ An animated map of Europe at the end of the war]

===Library guides===
* [http://natlib.govt.nz/researchers/guides/first-world-war National Library of New Zealand]
* [http://guides.sl.nsw.gov.au/wwi-and-australia State Library of New South Wales]
* [http://www.loc.gov/rr/program/bib/wwi/wwi.html US Library of Congress]
* [http://libraries.iub.edu/guide-world-war-i-resources Indiana University Bloomington], USA
* [http://guides.nyu.edu/content.php?pid=568692 New York University], USA
* [https://web.archive.org/web/20141020223852/http://guides.library.ualberta.ca/worldwar1914 University of Alberta], Canada

{{WWI history by nation}}
{{World War I}}

{{Authority control}}
{{Subject bar |book1=World War I |portal1=World War I |portal2=War |portal3=History | commons= y |n= y |wikt= y |b= y |q= y |v= y }}

[[Category:World Wars]]
[[Category:World War I| ]]&lt;!--please leave the empty space as standard--&gt;
[[Category:Articles containing video clips]]
[[Category:Modern history of Italy]]
[[Category:French Third Republic]]
[[Category:Global conflicts]]
[[Category:History of Austria-Hungary]]
[[Category:1910s in Serbia]]
[[Category:History of the United States (18651918)]]
[[Category:Russo-Turkish Wars]]
[[Category:Wars involving Armenia]]
[[Category:Wars involving Australia]]
[[Category:Wars involving Azerbaijan]]
[[Category:Wars involving Belgium]]
[[Category:Wars involving Brazil]]
[[Category:Wars involving British India]]
[[Category:Wars involving Bulgaria]]
[[Category:Wars involving Canada]]
[[Category:Wars involving Costa Rica]]
[[Category:Wars involving Cuba]]
[[Category:Wars involving France]]
[[Category:Wars involving Germany]]
[[Category:Wars involving Greece]]
[[Category:Wars involving Guatemala]]
[[Category:Wars involving Haiti]]
[[Category:Wars involving Honduras]]
[[Category:Wars involving Ireland]]
[[Category:Wars involving Italy]]
[[Category:Wars involving Japan]]
[[Category:Wars involving Korea]]
[[Category:Wars involving Liberia]]
[[Category:Wars involving Malta]]
[[Category:Wars involving Montenegro]]
[[Category:Wars involving Nepal]]
[[Category:Wars involving New Zealand]]
[[Category:Wars involving Nicaragua]]
[[Category:Wars involving Panama]]
[[Category:Wars involving Portugal]]
[[Category:Wars involving Rhodesia]]
[[Category:Wars involving Romania]]
[[Category:Wars involving Russia]]
[[Category:Wars involving Serbia]]
[[Category:Wars involving South Africa]]
[[Category:Wars involving Sri Lanka]]
[[Category:Wars involving Sudan]]
[[Category:Wars involving Taiwan]]
[[Category:Wars involving Thailand]]
[[Category:Wars involving the Habsburg Monarchy]]
[[Category:Wars involving the Ottoman Empire]]
[[Category:Wars involving the Republic of China]]
[[Category:Wars involving the states and peoples of Oceania]]
[[Category:Wars involving the United Kingdom]]
[[Category:Wars involving the United States]]</text>
      <sha1>ti96esxo9e43yfvpruk6tcan8p5mr6h</sha1>
    </revision>
  </page>
  <page>
    <title>World War One</title>
    <ns>0</ns>
    <id>59089</id>
    <redirect title="World War I" />
    <revision>
      <id>779636539</id>
      <parentid>779636494</parentid>
      <timestamp>2017-05-10T01:56:16Z</timestamp>
      <contributor>
        <username>GorillaWarfare</username>
        <id>4968133</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/Bfallis20|Bfallis20]] ([[User talk:Bfallis20|talk]]) ([[WP:HG|HG]]) (3.1.20)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="114">#REDIRECT [[World War I]]

{{Redirect category shell|
{{R from modification}}
{{R hatnote}}
{{R unprintworthy}}
}}</text>
      <sha1>045jas36vq5ymgz16xfhe9xoqxu1ba8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:'</title>
    <ns>10</ns>
    <id>5593936</id>
    <revision>
      <id>700770577</id>
      <parentid>694728302</parentid>
      <timestamp>2016-01-20T14:48:54Z</timestamp>
      <contributor>
        <username>Huntster</username>
        <id>92632</id>
      </contributor>
      <comment>Change per talk page discussion. If there are any issues found, contact me or another admin to revert.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="177">&lt;span class=&quot;nowrap&quot; style=&quot;padding-left:0.1em;&quot;&gt;&amp;#39;&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>ey7sacklsawhwpz5k5ytshi6df53r90</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Age in weeks</title>
    <ns>10</ns>
    <id>12356328</id>
    <revision>
      <id>645341762</id>
      <parentid>640258221</parentid>
      <timestamp>2015-02-02T19:06:17Z</timestamp>
      <contributor>
        <username>Nsaa</username>
        <id>113357</id>
      </contributor>
      <comment>Create a document page</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="586">&lt;includeonly&gt;{{#expr:floor {{#expr:
          (
        + {{Gregorian serial date
                      |month = {{{month2|{{CURRENTMONTH}}}}}
                      |day = {{{day2|{{CURRENTDAY}}}}}
                      |year = {{{year2|{{CURRENTYEAR}}}}}
          }}
        - {{Gregorian serial date
                      |month = {{{month1|{{CURRENTMONTH}}}}}
                      |day = {{{day1|{{CURRENTDAY}}}}}
                      |year = {{{year1|{{CURRENTYEAR}}}}}
          }}
          ) 
        / 7
          }} }}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>oe6pijv3oig5971asxuzu7hp7cf90t2</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Age in years, months, weeks and days</title>
    <ns>10</ns>
    <id>26862108</id>
    <revision>
      <id>640118962</id>
      <parentid>632466514</parentid>
      <timestamp>2014-12-29T17:56:50Z</timestamp>
      <contributor>
        <username>HJ Mitchell</username>
        <id>9336033</id>
      </contributor>
      <minor/>
      <comment>Protected Template:Age in years, months, weeks and days: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only autoconfirmed users] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2246">{{Age in years, months, weeks and days/display
 |years={{#expr: {{{year2 | {{CURRENTYEAR}} }}} - {{{year1 | {{{year | {{CURRENTYEAR}} }}} }}} - {{#ifexpr: {{{month2 | {{CURRENTMONTH}} }}} &gt; {{{month1 | {{{month | {{CURRENTMONTH}} }}} }}}
  |0
  |{{#ifexpr: {{{month2 | {{CURRENTMONTH}} }}} &lt; {{{month1 | {{{month | {{CURRENTMONTH}} }}} }}}
   |1
   |{{#ifexpr: {{{day2 | {{CURRENTDAY}} }}} &gt;= {{{day1 | {{{day | {{CURRENTDAY}} }}} }}}
    |0
    |1
   }}
  }}
 }}}}
 |months={{#expr: {{{month2 | {{CURRENTMONTH}} }}} - {{{month1 | {{{month | {{CURRENTMONTH}} }}} }}} + {{#ifexpr: {{{day2 | {{CURRENTDAY}} }}} &gt;= {{{day1 | {{{day | {{CURRENTDAY}} }}} }}}
  |{{#ifexpr: {{{month2 | {{CURRENTMONTH}} }}} &gt;= {{{month1 | {{{month | {{CURRENTMONTH}} }}} }}}
   |0
   |12
  }}
  |{{#ifexpr: {{{month2 | {{CURRENTMONTH}} }}} &gt; {{{month1 | {{{month | {{CURRENTMONTH}} }}} }}}
   |-1
   |11
  }}
 }}}}
 |weeks={{#ifexpr: ({{{day2 | {{CURRENTDAY}} }}} &lt; {{{day1 | {{{day | {{CURRENTDAY}} }}} }}})
   |{{age in weeks
     |day1   = {{{day1 | {{{day | {{CURRENTDAY}} }}} }}}
     |month1 = {{#expr:(({{{month2 | {{CURRENTMONTH}} }}} + 10) mod 12) + 1}}
     |year1  = {{#expr:{{{year2 | {{CURRENTYEAR}} }}} - ({{{month2 | {{CURRENTMONTH}} }}} = 1)}}
     |day2   = {{{day2 | {{CURRENTDAY}} }}} 
     |month2 = {{{month2 | {{CURRENTMONTH}} }}}
     |year2  = {{{year2 | {{CURRENTYEAR}} }}} 
     }}
   |{{age in weeks
     |day1   = {{{day1 | {{{day | {{CURRENTDAY}} }}} }}}
     |month1 = {{{month2 | {{CURRENTMONTH}} }}}
     |year1  = {{{year2 | {{CURRENTYEAR}} }}}
     |day2   = {{{day2 | {{CURRENTDAY}} }}} 
     |month2 = {{{month2 | {{CURRENTMONTH}} }}}
     |year2  = {{{year2 | {{CURRENTYEAR}} }}} 
 }}}}
 |days={{#expr: ({{{day2 | {{CURRENTDAY}} }}} - {{{day1 | {{{day | {{CURRENTDAY}} }}} }}} + {{#ifexpr: {{{day2 | {{CURRENTDAY}} }}} &gt;= {{{day1 | {{{day | {{CURRENTDAY}} }}} }}}
  |0
  |{{#switch: {{{month2 | {{CURRENTMONTH}} }}}
   |5|7|10|12 = 30
   |1|2|4|6|8|9|11 = 31
   |3={{#ifexpr: {{{year2 | {{CURRENTYEAR}} }}} mod 4 = 0
    |{{#ifexpr: ({{{year2 | {{CURRENTYEAR}} }}} mod 100 = 0) and  ({{{year2 | {{CURRENTYEAR}} }}} mod 400 != 0) 
     |28
     |29
     }}
    |28
   }}
  }}
 }}) mod 7}}
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>hxlmf8xbgf1i2iypqzql4v87qgs6zwg</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Age in years, months, weeks and days/display</title>
    <ns>10</ns>
    <id>26862344</id>
    <revision>
      <id>804536377</id>
      <parentid>675608572</parentid>
      <timestamp>2017-10-09T17:20:27Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Age in years, months, weeks and days/display]]&quot;: [[WP:High-risk templates|Highly visible template]]; 1,000+ transclusions ([Edit=Require autoconfirmed or confirmed access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="644">{{#switch:{{{years|}}}
 ||0=
 |{{plural|{{{years}}}|year|nb=yes}}{{#switch: {{#expr: 
   ({{{months|0}}} and {{{months|1}}}) +
   ({{{weeks|0}}} and {{{weeks|1}}}) +
   ({{{days|0}}} and {{{days|1}}})
  }}
  |0=
  |1=&amp;#32;and&amp;#32;
  |,&amp;#32;
 }}
}}{{#switch:{{{months|}}}
 ||0=
 |{{plural|{{{months}}}|month|nb=yes}}{{#switch: {{#expr: 
   ({{{weeks|0}}} and {{{weeks|1}}}) +
   ({{{days|0}}} and {{{days|1}}})
  }}
  |0=
  |1=&amp;#32;and&amp;#32;
  |,&amp;#32;
 }}
}}{{#switch:{{{weeks|}}}
 ||0=
 |{{plural|{{{weeks}}}|week|nb=yes}}{{#switch: {{{days|0}}}
   |0=
   |&amp;#32;and&amp;#32;
  }}
}}{{#switch:{{{days|}}}
 ||0=
 |{{plural|{{{days|0}}}|day|nb=yes}}
}}</text>
      <sha1>7li1tzdbgcl9zjjkn7rik2dp8qqah1x</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Aligned table</title>
    <ns>10</ns>
    <id>41873333</id>
    <revision>
      <id>745333196</id>
      <parentid>659217541</parentid>
      <timestamp>2016-10-20T14:49:42Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="110">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:aligned table|table}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2blrypc09jwqw1omu8ienw215a7iiri</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ambox</title>
    <ns>10</ns>
    <id>13179742</id>
    <revision>
      <id>704688422</id>
      <parentid>578398722</parentid>
      <timestamp>2016-02-12T23:50:56Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <minor/>
      <comment>add temporary tracking category for small amboxes</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="220">{{#invoke:Message box|ambox}}{{#ifeq:{{{small}}}|left|[[Category:Articles using small message boxes]]}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>j0j11qao0sl45x6kzzme1ycda7wiz9f</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Authority control</title>
    <ns>10</ns>
    <id>23327809</id>
    <revision>
      <id>698202675</id>
      <parentid>698202329</parentid>
      <timestamp>2016-01-04T17:05:10Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>rm spurious period (added by module)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="998">{{#invoke:Authority control|authorityControl}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;&lt;!-- tracking categories to compare with Wikidata 
--&gt;{{#switch:{{NAMESPACE}}||{{ns:14}}=&lt;!-- Only articles and categories. 
--&gt;{{#invoke:Check for unknown parameters|check|unknown=[[Category:Pages using authority control with parameters]]|preview=Page using [[Template:Authority control]] with &quot;_VALUE_&quot;, please move this to Wikidata if possible}}&lt;!--
--&gt;{{#ifeq:{{{VIAF|}}}|
    |&lt;!-- empty or no VIAF in template --&gt;
    |&lt;!-- VIAF in template 
  --&gt;{{#ifeq:{{#property:P214}}|
      |&lt;!-- no property P214 at Wikidata --&gt; [[Category:VIAF not on Wikidata]] &lt;!-- These we still need to import --&gt;
      |&lt;!-- property P214 at Wikidata    --&gt; 
       {{#ifeq:{{{VIAF|}}}|{{#property:P214}}
        |&lt;!-- same ID: We want to end up here --&gt;
        |[[Category:VIAF different on Wikidata]] &lt;!-- Figure out the best link, FIXME: multiple values on Wikidata --&gt;
       }}
     }}
  }}
}}&lt;/includeonly&gt;</text>
      <sha1>hpf5q0aod8ov7l14auaw059lm34vl92</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Better source</title>
    <ns>10</ns>
    <id>32727530</id>
    <revision>
      <id>784083705</id>
      <parentid>683895443</parentid>
      <timestamp>2017-06-06T10:55:42Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="637">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
&lt;!--{{Better source}} begin--&gt;{{Fix
| subst = &lt;includeonly&gt;{{subst:&lt;/includeonly&gt;&lt;includeonly&gt;substcheck}}&lt;/includeonly&gt;
| link  = WP:NOTRS
| text  = better&amp;nbsp;source&amp;nbsp;needed
| class = noprint Template-Fact
| title = {{{reason|This claim needs references to better sources.}}}
| date  = {{{date|}}}
| cat   = [[Category:All articles lacking reliable references]]
| cat-date = Category:Articles lacking reliable references
}}&lt;!--{{Better source}} end--&gt;
}}&lt;noinclude&gt;
&lt;!-- Add categories and interwikis to the /doc subpage, please, not here! --&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>tk3hp3tv1dylzi9x5n3e8qw2fsr902e</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Campaignbox</title>
    <ns>10</ns>
    <id>1138310</id>
    <revision>
      <id>649303418</id>
      <parentid>608066591</parentid>
      <timestamp>2015-03-01T00:17:44Z</timestamp>
      <contributor>
        <username>Technical 13</username>
        <id>14450599</id>
      </contributor>
      <comment>Undid revision 608066591 by [[Special:Contributions/Frietjes|Frietjes]] ([[User talk:Frietjes|talk]]) per edit request.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="491">&lt;includeonly&gt;{{Military navigation
|name = {{#if:{{{raw_name|}}} |{{{raw_name|}}} |{{#if:{{{title|}}} |{{{name|}}} |}} }}
|state = {{{state|}}}
|border = {{{border|}}}
|title = &lt;span style=&quot;line-height:1.6em&quot;&gt;{{#if:{{{title|}}}|{{{title}}}|{{{name}}}}}&lt;/span&gt;
|bodyclass = {{{bodyclass|}}}
|listclass = {{{listclass|}}}
|list1 = {{{battles|}}}
|below = {{{notes|}}}
}}{{#ifeq:{{NAMESPACE}}|Template|[[Category:Campaignbox templates]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>m49w3uao8u826onh0uudufowzrdfvw8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Campaignbox World War I</title>
    <ns>10</ns>
    <id>8222607</id>
    <revision>
      <id>794885332</id>
      <parentid>786959757</parentid>
      <timestamp>2017-08-10T16:34:12Z</timestamp>
      <contributor>
        <ip>2602:30A:2C79:D630:8D36:E16:8437:5167</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1349">{{Campaignbox
| name = Campaignbox World War I
| title = Theatres of [[World War I]]
| listclass = hlist
| battles =
;[[European theatre of World War I|European]]
* [[Western Front (World War I)|Western Front]]
* [[Eastern Front (World War I)|Eastern Front]]
* [[Italian Front (World War I)|Italian Front]]
* [[Balkans Campaign (World War I)|Balkans]]

;[[Middle Eastern theatre of World War I|Middle Eastern]]
* [[Caucasus Campaign|Caucasus]]
* [[Persian Campaign|Persia]]
* [[Gallipoli Campaign|Gallipoli]]
* [[Mesopotamian campaign|Mesopotamia]]
* [[Sinai and Palestine Campaign|Sinai and Palestine]]
* [[Arab Revolt]]
* [[South Arabia during World War I|South Arabia]]

;[[African theatre of World War I|African]]
* [[South-West Africa campaign|South-West Africa]]
* [[Togoland Campaign|Togoland]]
* [[Kamerun Campaign|Cameroon]]
* [[East African Campaign (World War I)|East Africa]]
* [[Military operations in North Africa during World War I|North Africa]]

;[[Asian and Pacific theatre of World War I|Asian and Pacific theatre]]

;[[Naval warfare of World War I|Naval theaters]]
* [[U-boat Campaign (World War I)|U-boat]]
* [[Atlantic U-boat campaign of World War I|Atlantic Ocean]]
* [[Naval warfare in the Mediterranean during World War I|Mediterranean]]

}}&lt;noinclude&gt;
[[Category:World War I campaignbox templates|World War I]]
&lt;/noinclude&gt;</text>
      <sha1>64pjps393w5z3ysfoqg26o5xgwurunr</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Catalog lookup link</title>
    <ns>10</ns>
    <id>50392128</id>
    <revision>
      <id>796840033</id>
      <parentid>718903401</parentid>
      <timestamp>2017-08-23T10:36:34Z</timestamp>
      <contributor>
        <username>Matthiaspaul</username>
        <id>13467261</id>
      </contributor>
      <comment>added leadout-postfix parameter (to specialcase MR template oddities)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3580">{{#if:{{trim|{{{1|}}}}}|{{#if:{{{article-link|}}}|[[{{{article-link|}}}{{#if:{{{article-name|}}}|{{!}}{{{article-name|}}}}}]]{{{article-postfix|}}}&amp;nbsp;|{{{article-name|}}}{{{article-postfix|}}}{{#if:{{{article-name|}}}|&amp;nbsp;}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{1|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{1|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{1|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{2|}}}}}|{{#if:{{trim|{{{3|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{2|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{2|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{2|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{3|}}}}}|{{#if:{{trim|{{{4|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{3|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{3|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{3|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{4|}}}}}|{{#if:{{trim|{{{5|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{4|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{4|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{4|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{5|}}}}}|{{#if:{{trim|{{{6|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{5|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{5|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{5|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{6|}}}}}|{{#if:{{trim|{{{7|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{6|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{6|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{6|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{7|}}}}}|{{#if:{{trim|{{{8|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{7|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{7|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{7|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{8|}}}}}|{{#if:{{trim|{{{9|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{8|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{8|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{8|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{9|}}}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{9|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{9|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{9|}}}}}{{{item-postfix|}}}}}}}}}}}}}}}}}}}}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>pjazjidcsvxcmpqqpfzz5kqeowvyug7</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Category handler</title>
    <ns>10</ns>
    <id>25084818</id>
    <revision>
      <id>577959188</id>
      <parentid>577959113</parentid>
      <timestamp>2013-10-20T10:48:53Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Category handler: [[WP:High-risk templates|Highly visible template]]: allow template editors to edit ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="148">{{#invoke:Category handler|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories to the /doc subpage, and interwikis to Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>og6fhyj2ssd4fmzpqzuodk12q3cms0z</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Citation needed</title>
    <ns>10</ns>
    <id>2048472</id>
    <revision>
      <id>654624993</id>
      <parentid>654624898</parentid>
      <timestamp>2015-04-02T12:03:07Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <minor/>
      <comment>try again</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="515">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{Fix
|name={{{name|Citation needed}}}
|link=Wikipedia:Citation needed
|text=citation needed
|class=Template-Fact
|title={{{reason|This claim needs references to reliable sources.}}}
|date={{{date|}}}
|cat=[[Category:All articles with unsourced statements]]
|cat-date=Category:Articles with unsourced statements
}}{{#if:{{{1|}}}|[[Category:Pages containing citation needed template with deprecated parameters]]}}
}}&lt;noinclude&gt;

{{Documentation}}

&lt;/noinclude&gt;</text>
      <sha1>gacd4ag6cry31kvoa6np8uzxo7bq89z</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Citation not found</title>
    <ns>10</ns>
    <id>26962646</id>
    <revision>
      <id>631517930</id>
      <parentid>554101062</parentid>
      <timestamp>2014-10-28T21:32:10Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>Clean up [[:Category:Pages using duplicate arguments in template calls|duplicate template parameters]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="285">&lt;includeonly&gt;{{fix
|text=citation not found
|date={{{date|}}}
|cat=[[Category:All articles with broken links to citations]]
|link=&lt;!--Template:Fix sfn--&gt;Template:Harvard citation documentation#Wikilink to citation does not work}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>mre8v457ogys4obk0u5443b0oqwox88</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite AV media</title>
    <ns>10</ns>
    <id>2327169</id>
    <revision>
      <id>774811519</id>
      <parentid>690395471</parentid>
      <timestamp>2017-04-10T20:26:44Z</timestamp>
      <contributor>
        <username>Lectonar</username>
        <id>128863</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Cite AV media]]&quot;: request at rfpp ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="132">&lt;includeonly&gt;{{#invoke:Citation/CS1 | citation
|CitationClass=audio-visual
}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}} &lt;/noinclude&gt;</text>
      <sha1>5uc4e2t6myaznmqj6pk8sugy3rcqv8a</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite book</title>
    <ns>10</ns>
    <id>4086375</id>
    <revision>
      <id>690395469</id>
      <parentid>579832408</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite book: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (indef...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="123">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=book
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>hq4yscm08hccl43rjw83qi7egacgxec</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite encyclopedia</title>
    <ns>10</ns>
    <id>1664277</id>
    <revision>
      <id>690395481</id>
      <parentid>579832446</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite encyclopedia: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="166">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=encyclopaedia
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}

[[Category:Lua-based templates]]
&lt;/noinclude&gt;</text>
      <sha1>jdzpxvlfcwjuua45ovk7i5lcp6qre48</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite journal</title>
    <ns>10</ns>
    <id>4740319</id>
    <revision>
      <id>690395473</id>
      <parentid>579832342</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite journal: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (in...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="126">&lt;includeonly&gt;{{#invoke:Citation/CS1|citation
|CitationClass=journal
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>9fcytsszanq7xbwi3p28zsneear9938</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite magazine</title>
    <ns>10</ns>
    <id>7559370</id>
    <revision>
      <id>745413566</id>
      <parentid>693869073</parentid>
      <timestamp>2016-10-21T00:01:16Z</timestamp>
      <contributor>
        <username>Zzuuzz</username>
        <id>365454</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite magazine: [[Wikipedia:High-risk templates|High risk template]] 11k+ transclusions ([Edit=Require template editor access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="127">&lt;includeonly&gt;{{#invoke:Citation/CS1|citation
|CitationClass=magazine
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ihdnkvb90c6voz3z3uc97mmw5bytrkw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite news</title>
    <ns>10</ns>
    <id>4321630</id>
    <revision>
      <id>690395488</id>
      <parentid>579832384</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite news: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (indef...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="123">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=news
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>pbjnspfej5gxihr9izxrzkow3f1uf3i</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite quote</title>
    <ns>10</ns>
    <id>6047222</id>
    <revision>
      <id>783576257</id>
      <parentid>670635710</parentid>
      <timestamp>2017-06-03T07:00:21Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove parameter $N from [[Module:Unsubst]] using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="281">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{fix
|link=Wikipedia:MOSQUOTE
|text=this quote needs a citation
|title=The text near this tag needs citation.
|date={{{date|}}}
|cat=[[Category:Articles with unsourced quotes]]
}}
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ka120zzuxocm0gb93usvlcy9nporgdq</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite web</title>
    <ns>10</ns>
    <id>1252907</id>
    <revision>
      <id>753103437</id>
      <parentid>753063659</parentid>
      <timestamp>2016-12-05T05:36:52Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Cite web]]&quot;: restore old protection ([Edit=Require administrator access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="122">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=web
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>rcgmbcxu7hvs583g1f3rzz4c4dkizda</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Clarify</title>
    <ns>10</ns>
    <id>7774601</id>
    <revision>
      <id>784083754</id>
      <parentid>692035460</parentid>
      <timestamp>2017-06-06T10:55:55Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="424">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{Fix-span
|link=Wikipedia:Please clarify
|text=clarification needed
|title={{delink|{{{reason|The text near this tag may need clarification or removal of jargon.}}}}}
|date={{{date|}}}
|pre-text={{{pre-text|}}}
|post-text={{{post-text|}}}
|cat-date=Category:Wikipedia articles needing clarification
|content={{{text|}}}
}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ews7q9prv01iuwm618rmojilerinpjx</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Clear</title>
    <ns>10</ns>
    <id>1239772</id>
    <revision>
      <id>684162145</id>
      <parentid>683948339</parentid>
      <timestamp>2015-10-04T23:53:36Z</timestamp>
      <contributor>
        <username>Nyttend</username>
        <id>1960810</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Clear: Enable access by template editors; NeilN is okay with this move ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="81">&lt;div style=&quot;clear:{{{1|both}}};&quot;&gt;&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>6mk3e4afot6hzu6tzbljxxk83e14xv6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Collapsible list</title>
    <ns>10</ns>
    <id>11611050</id>
    <revision>
      <id>579833069</id>
      <parentid>563807645</parentid>
      <timestamp>2013-11-02T05:07:45Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Collapsible list: Enable access by template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="187">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:collapsible list|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>kjyb9efpgwjge2zs29nhobc7dc3xkmh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Column-width</title>
    <ns>10</ns>
    <id>29216399</id>
    <revision>
      <id>638540885</id>
      <parentid>579832996</parentid>
      <timestamp>2014-12-17T20:09:33Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>redundant</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="165">&lt;includeonly&gt;-moz-column-width: {{{1|30em}}}; -webkit-column-width: {{{1|30em}}}; column-width: {{{1|30em}}};&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>sum88q311kc02222mb4cgzbikcx7fqy</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Comma separated entries</title>
    <ns>10</ns>
    <id>31103313</id>
    <revision>
      <id>664153012</id>
      <parentid>579832984</parentid>
      <timestamp>2015-05-26T18:05:33Z</timestamp>
      <contributor>
        <username>Izkala</username>
        <id>23051379</id>
      </contributor>
      <comment>Switch to using [[Module:Separated entries]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="189">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:Separated entries|comma}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>t57s6wp0qm3dwvu86y28fxzb2w1xmci</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Convert</title>
    <ns>10</ns>
    <id>8387047</id>
    <revision>
      <id>585529792</id>
      <parentid>577834328</parentid>
      <timestamp>2013-12-11T02:15:54Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Upgrade to Lua module;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="116">&lt;includeonly&gt;{{{{{|safesubst:}}}#invoke:convert|convert}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>81befqhh89lu562bonqr8252bepuvfp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Austria-Hungary</title>
    <ns>10</ns>
    <id>9020592</id>
    <revision>
      <id>647191229</id>
      <parentid>610093806</parentid>
      <timestamp>2015-02-15T03:05:39Z</timestamp>
      <contributor>
        <username>Xaosflux</username>
        <id>502540</id>
      </contributor>
      <comment>update image, requested at talk</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="327">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Austria-Hungary
| flag alias = Flag of Austria-Hungary (1869-1918).svg
| flag alias-naval = Austria-Hungary-flag-1869-1914-naval-1786-1869-merchant.svg
| link alias-naval = Austro-Hungarian Navy
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
}}</text>
      <sha1>pslhj9mu7sa3jrbzrlm226pp5lpqcd4</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Belgium</title>
    <ns>10</ns>
    <id>8873110</id>
    <revision>
      <id>792909307</id>
      <parentid>792709504</parentid>
      <timestamp>2017-07-29T14:30:58Z</timestamp>
      <contributor>
        <username>Sodacan</username>
        <id>8272776</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="816">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Belgium
| flag alias = Flag of Belgium (civil).svg
| flag alias-government = Government Ensign of Belgium.svg
| flag alias-state = Flag of Belgium.svg
| flag alias-1830 = Flag of Belgium (1830).svg
| flag alias-1858 = Royal ensign of Belgium (1858).svg
| flag alias-army = Flag of the Belgian Land Component.svg
| link alias-army = Belgian Land Component
| flag alias-naval = Naval Ensign of Belgium.svg
| link alias-naval = Belgian Marine Component
| flag alias-air force = Air Force Ensign of Belgium.svg
| link alias-air force = Belgian Air Component
| size = {{{size|}}}
| name = {{{name|}}}
| altlink = {{{altlink|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = state
| var2 = government
| var3 = 1830
| var4 = 1858
| redir1 = BEL
&lt;/noinclude&gt;
}}</text>
      <sha1>md5cwryx3ah8e054kexhhhgk1io8kyj</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data British Empire</title>
    <ns>10</ns>
    <id>22438483</id>
    <revision>
      <id>804536493</id>
      <parentid>545623696</parentid>
      <timestamp>2017-10-09T17:20:34Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Country data British Empire]]&quot;: [[WP:High-risk templates|Highly visible template]]; 1,000+ transclusions ([Edit=Require autoconfirmed or confirmed access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="243">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = British Empire
| flag alias = Flag of the United Kingdom.svg
| size = {{{size|}}}
| name = {{{name|}}}
&lt;noinclude&gt;
| related1 = United Kingdom
&lt;/noinclude&gt;
}}&lt;noinclude&gt;
&lt;/noinclude&gt;</text>
      <sha1>e8sqv73e8hl3902z9pf38kv6quiw4xu</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data China</title>
    <ns>10</ns>
    <id>9020711</id>
    <revision>
      <id>793681406</id>
      <parentid>793186682</parentid>
      <timestamp>2017-08-03T08:48:25Z</timestamp>
      <contributor>
        <username>Illegitimate Barrister</username>
        <id>12006778</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1633">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = China
| flag alias = Flag of the People's Republic of China.svg
| flag alias-1862 = Flag of the Qing Dynasty (1862-1889).svg
| flag alias-1889 = Flag of the Qing Dynasty (1889-1912).svg
| flag alias-1912 = Flag of the Republic of China (1912-1928).svg
| link-alias-1912 = Republic of China (1912-1949)
| flag alias-1929 = Flag of the Republic of China.svg
| link-alias-1929 = Republic of China (1912-1949)
| flag alias-1949 = Flag of China (WFB 2000).png
| flag alias-2004 = Flag of China (WFB 2004).gif
| flag alias-2009 = Flag of China (WFB 2009).gif
| flag alias-military = People's Liberation Army Flag of the People's Republic of China.svg
| flag alias-army = Ground Force Flag of the People's Republic of China.svg
| link alias-army = People's Liberation Army Ground Force
| flag alias-naval = Naval Ensign of the People's Republic of China.svg
| link alias-naval = People's Liberation Army Navy
| flag alias-air force = Air Force Flag of the People's Republic of China.svg
| link alias-air force = People's Liberation Army Air Force
| name alias-football = China PR
| size = {{{size|}}}
| name = {{{name|}}}
| altlink = {{{altlink|}}}
| altvar = {{{altvar|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = 1889
| var2 = 1912
| var3 = 1929
| var4 = 1949
| var5 = 2004
| var6 = 2009
| var7 = military
| redir1 = CHN
| redir2 = People's Republic of China
| redir3 = China, People's Republic of
| redir4 = China (People's Republic of)
| redir5 = PRC
| related1 = Qing dynasty
| related2 = Republic of China
| related3 = Republic of China (19121949)
&lt;/noinclude&gt;
}}</text>
      <sha1>i9i63bby93h4ca33solxm7a0sx0jn9x</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Empire of Japan</title>
    <ns>10</ns>
    <id>12383730</id>
    <revision>
      <id>721957463</id>
      <parentid>651344698</parentid>
      <timestamp>2016-05-25T02:42:57Z</timestamp>
      <contributor>
        <username>Illegitimate Barrister</username>
        <id>12006778</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="627">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Empire of Japan
| shortname alias = Japan
| flag alias = Merchant flag of Japan (1870).svg
| flag alias-naval = Naval ensign of the Empire of Japan.svg
| link alias-naval = Imperial Japanese Navy
| flag alias-army = War flag of the Imperial Japanese Army.svg
| link alias-army = Imperial Japanese Army
| flag alias-air force = War flag of the Imperial Japanese Army.svg
| link alias-air force = Imperial Japanese Army Air Service
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| related1 = Japan
| cat = Japan empire
&lt;/noinclude&gt;
}}</text>
      <sha1>hymik3s4pl8l7gcwuc7ol3ysummr8ey</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data First Portuguese Republic</title>
    <ns>10</ns>
    <id>43579161</id>
    <revision>
      <id>621501515</id>
      <timestamp>2014-08-16T16:10:48Z</timestamp>
      <contributor>
        <username>Mr Hall of England</username>
        <id>6919636</id>
      </contributor>
      <comment>[[WP:AES|]]Created page with '{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}} | alias = First Portuguese Republic | shortname alias = Portugal | flag alias = Flag of Portugal.svg | size =...'</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="255">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = First Portuguese Republic
| shortname alias = Portugal
| flag alias = Flag of Portugal.svg
| size = {{{size|}}}
| name = {{{name|}}}
&lt;noinclude&gt;
| cat = First Portuguese Republic
&lt;/noinclude&gt;
}}</text>
      <sha1>ckj3tryap64lvwx71ug25czpv66mq9c</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data French Third Republic</title>
    <ns>10</ns>
    <id>38077083</id>
    <revision>
      <id>806187849</id>
      <parentid>805734788</parentid>
      <timestamp>2017-10-20T08:45:48Z</timestamp>
      <contributor>
        <username>S.A. Julio</username>
        <id>26343411</id>
      </contributor>
      <comment>restoring ([[WP:BRD]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="188">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = French Third Republic
| shortname alias = France
| flag alias = Flag of France.svg
| size = {{{size|}}}
| name = {{{name|}}}
}}</text>
      <sha1>hr1vw2kiksg3vjeijxcvold58psmejm</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data German Empire</title>
    <ns>10</ns>
    <id>9087472</id>
    <revision>
      <id>742867633</id>
      <parentid>577850978</parentid>
      <timestamp>2016-10-06T08:49:21Z</timestamp>
      <contributor>
        <username>Illegitimate Barrister</username>
        <id>12006778</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="458">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = German Empire
| shortname alias = Germany
| flag alias = Flag of the German Empire.svg
| flag alias-naval = War Ensign of Germany 1903-1918.svg
| link alias-naval = Kaiserliche Marine
| link alias-army = Imperial German Army
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| related1 = Germany
| related2 = Weimar Republic
| related3 = Nazi Germany
&lt;/noinclude&gt;
}}</text>
      <sha1>pvrrmffd3jvb0gz88mxgl501vbmbwx0</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Kingdom of Bulgaria</title>
    <ns>10</ns>
    <id>28124453</id>
    <revision>
      <id>545957609</id>
      <parentid>508454559</parentid>
      <timestamp>2013-03-21T11:12:00Z</timestamp>
      <contributor>
        <username>Addbot</username>
        <id>6569922</id>
      </contributor>
      <minor/>
      <comment>[[User:Addbot|Bot:]] Migrating 8 interwiki links, now provided by [[Wikipedia:Wikidata|Wikidata]] on [[d:q7363045]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="286">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Kingdom of Bulgaria
| shortname alias = Bulgaria
| flag alias = Flag of Bulgaria.svg
| size = {{{size|}}}
| name = {{{name|}}}
&lt;noinclude&gt;
| related1 = Bulgaria
| cat = Bulgaria kingdom
&lt;/noinclude&gt;
}}&lt;noinclude&gt;
&lt;/noinclude&gt;</text>
      <sha1>aws3g2xr912nyqskgx4464l07ghnbgf</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Kingdom of Greece</title>
    <ns>10</ns>
    <id>24232133</id>
    <revision>
      <id>609923535</id>
      <parentid>598574918</parentid>
      <timestamp>2014-05-24T09:42:48Z</timestamp>
      <contributor>
        <username>SiBr4</username>
        <id>16981284</id>
      </contributor>
      <minor/>
      <comment>Removed unnecessary templatename parameter using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1007">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Kingdom of Greece
| shortname alias = Greece
| flag alias = State flag of Greece (18631924;193573).svg
| flag alias-1831 = State flag of Greece (1833-1862).svg
| flag alias-1831-naval = Naval Ensign of Greece (1833-1858).svg
| flag alias-1863 = Flag of Greece (1822-1978).svg
| flag alias-1863-naval = Flag of Greece.svg
| flag alias-1863-rstandard = Greek Royal Flag 1863.svg
| flag alias-1935 = State flag of Greece (18631924;193573).svg
| flag alias-1935-naval = Naval Ensign of Kingdom of Greece.svg
| flag alias-1935-royal = Hellenic Royal Flag 1935.svg
| flag alias-1936-rstandard =Royal Standard of the Kingdom of Greece (1936-1967).svg
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = 1831
| var2 = 1831-naval
| var3 = 1863
| var4 = 1863-naval
| var5 = 1863-rstandard
| var6 = 1935
| var7 = 1935-naval
| var8 = 1935-royal 
| var9 = 1936-rstandard
| cat = Greece kingdom
&lt;/noinclude&gt;
}}</text>
      <sha1>n0lwqenelw352fsgluw8l61neqaaahw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Kingdom of Italy</title>
    <ns>10</ns>
    <id>22423652</id>
    <revision>
      <id>795312040</id>
      <parentid>782393604</parentid>
      <timestamp>2017-08-13T12:20:54Z</timestamp>
      <contributor>
        <username>Olonia</username>
        <id>15217905</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="674">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Kingdom of Italy
| shortname alias = Italy
| flag alias = Flag of Italy (1861-1946) crowned.svg
| flag alias-civil = Flag of Italy (1861-1946).svg
| flag alias-naval= Flag of Italy (1861-1946) crowned.svg
| link alias-naval = Regia Marina
| link alias-air force = Regia Aeronautica
| flag alias-army = Flag of Italy (1860).svg
| link alias-army = Royal Italian Army
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = civil
| related1 = Italy
| related2 = Napoleonic Italy
| related3 = Italian Social Republic
| related4 = House of Savoy
| cat = Italy kingdom
&lt;/noinclude&gt;
}}</text>
      <sha1>4pp8lrxq090gza96296n75hvre8m4s1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Kingdom of Montenegro</title>
    <ns>10</ns>
    <id>30043282</id>
    <revision>
      <id>546059497</id>
      <parentid>508454815</parentid>
      <timestamp>2013-03-21T19:19:42Z</timestamp>
      <contributor>
        <username>Addbot</username>
        <id>6569922</id>
      </contributor>
      <minor/>
      <comment>[[User:Addbot|Bot:]] Migrating 2 interwiki links, now provided by [[Wikipedia:Wikidata|Wikidata]] on [[d:q7666679]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="400">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Kingdom of Montenegro
| shortname alias = Montenegro
| flag alias = Flag of the Kingdom of Montenegro.svg
| size = {{{size|}}}
| name = {{{name|}}}
&lt;noinclude&gt;
| related1 = Montenegro
| related2 = Principality of Montenegro
| related3 = Kingdom of Montenegro (19411944)
| cat = Montenegro kingdom
&lt;/noinclude&gt;
}}&lt;noinclude&gt;
&lt;/noinclude&gt;</text>
      <sha1>85hd6u0ecxp3m892tjjp4mptyvs3g6g</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Kingdom of Romania</title>
    <ns>10</ns>
    <id>21969860</id>
    <revision>
      <id>798706016</id>
      <parentid>782392370</parentid>
      <timestamp>2017-09-03T09:33:16Z</timestamp>
      <contributor>
        <username>Codrinb</username>
        <id>366026</id>
      </contributor>
      <comment>added more related entities</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="458">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Kingdom of Romania
| shortname alias = Romania
| flag alias = Flag of Romania.svg
| flag alias-naval = Naval ensign of Romania (1922-1947).svg
| link alias-naval = Royal Romanian Navy
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| related1 = Romania
| related2 = Wallachia
| related3 = Moldavia
| related4 = Transylvania
| cat = Romanian kingdom
&lt;/noinclude&gt;
}}</text>
      <sha1>eftxfo0971vqbya3rq2j4oel7018fjq</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Kingdom of Serbia</title>
    <ns>10</ns>
    <id>16337996</id>
    <revision>
      <id>610639523</id>
      <parentid>577850777</parentid>
      <timestamp>2014-05-29T13:14:01Z</timestamp>
      <contributor>
        <username>SiBr4</username>
        <id>16981284</id>
      </contributor>
      <minor/>
      <comment>Removed redundant interwikis ([[d:Q6179085]]) using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="356">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Kingdom of Serbia
| shortname alias = Serbia
| flag alias = State Flag of Serbia (1882-1918).svg
| size = {{{size|}}}
| name = {{{name|}}}
&lt;noinclude&gt;
| related1 = Serbia
| related2 = SR Serbia
| related3 = Serbia and Montenegro
| related4 = Serbian Empire
| cat = Serbia kingdom
&lt;/noinclude&gt;
}}</text>
      <sha1>m3cz8b5mhn51aqi1iv7p0egjy6h6xrs</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Ottoman Empire</title>
    <ns>10</ns>
    <id>9089818</id>
    <revision>
      <id>694789135</id>
      <parentid>693938364</parentid>
      <timestamp>2015-12-11T15:40:41Z</timestamp>
      <contributor>
        <username>Ahecht</username>
        <id>2016996</id>
      </contributor>
      <comment>Remove &quot;fictitious&quot; flags per edit request at [[Template_talk:Country_data_Ottoman_Empire#Template-protected_edit_request_on_5_December_2015]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="715">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Ottoman Empire
| flag alias = Flag of the Ottoman Empire.svg
| flag alias-1844 = Flag of the Ottoman Empire.svg
| flag alias-army = Flag of the Ottoman Empire.svg
| link alias-army = Ottoman Army
| flag alias-naval = Flag of the Ottoman Empire.svg
| flag alias-naval-1793 = Flag of the Ottoman Empire.svg
| flag alias-naval-1844 = Flag of the Ottoman Empire.svg
| link alias-naval = Ottoman Navy
| flag alias-air force = Ottomaanse Vlag.png
| link alias-air force = Ottoman Air Force
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var4 = 1844
| var6 = naval-1793
| var7 = naval-1844
| related1 = Turkey
&lt;/noinclude&gt;
}}</text>
      <sha1>r725gdi3id6xp8r082taamm5elepxmq</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Republic of China (19121949)</title>
    <ns>10</ns>
    <id>33167794</id>
    <revision>
      <id>804130247</id>
      <parentid>799709630</parentid>
      <timestamp>2017-10-06T23:21:07Z</timestamp>
      <contributor>
        <username>Wrestlingring</username>
        <id>21938861</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="970">{{ {{{1&lt;noinclude&gt;
|country showdata
&lt;/noinclude&gt;}}}
| alias = Republic of China (191249)
| shortname alias = China
| flag alias = Flag of the Republic of China (2).svg
| flag alias-1912 = Flag of the Republic of China 1912-1928.svg
| flag alias-army = Flag of the Republic of China Army.svg
| flag alias-civil = Civil Ensign of the Republic of China.svg
| link alias-army = National Revolutionary Army
| link alias-naval = Republic of China Navy
| link alias-air force = Republic of China Air Force
| link alias-football = China {{{mw|}}} national football team
| name alias-football = China
| link alias-tennis = China {{{mw}}} Cup team
| name alias-tennis = China
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
| altlink = {{{altlink|}}}
| altvar = {{{altvar|}}}
&lt;noinclude&gt;
| var1 = 1912
| var2 = civil
| related1 = Republic of China
| related2 = China
| related3 = Taiwan
| cat = China republic 1912
&lt;/noinclude&gt;
}}&lt;noinclude&gt;

&lt;/noinclude&gt;</text>
      <sha1>q8ladz54lwmcl7gn1fcbr1medlzkw1y</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Russian Empire</title>
    <ns>10</ns>
    <id>13795408</id>
    <revision>
      <id>805145704</id>
      <parentid>786261146</parentid>
      <timestamp>2017-10-13T10:55:41Z</timestamp>
      <contributor>
        <username>Illegitimate Barrister</username>
        <id>12006778</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="614">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Russian Empire
| shortname alias = Russia
| flag alias = Flag of Russia (1696-1917).svg
| flag alias-1858 = Romanov Flag.svg
| flag alias-1914 = Flag of Russia (19141917).svg
| flag alias-naval = Naval Ensign of Russia.svg
| link alias-naval = Imperial Russian Navy
| link alias-football = Russian Empire national football team
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
| altlink = {{{altlink|}}}
| altvar = {{{altvar|}}}
&lt;noinclude&gt;
| var1 = 1858
| var2 = 1914
| related1 = Russia
| related2 = Russian SFSR
&lt;/noinclude&gt;
}}</text>
      <sha1>qmvme7fchv9upsjj96d6pwq09qw8oul</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Thailand</title>
    <ns>10</ns>
    <id>8955029</id>
    <revision>
      <id>743192046</id>
      <parentid>743191968</parentid>
      <timestamp>2016-10-08T11:31:17Z</timestamp>
      <contributor>
        <username>Illegitimate Barrister</username>
        <id>12006778</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="912">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Thailand
| flag alias = Flag of Thailand.svg
| flag alias-1767 = Flag of Thailand (Ayutthaya period).svg
| flag alias-1782 = Flag of Thailand (1782).svg
| flag alias-1817 = Flag of Thailand (1817).svg
| flag alias-1855 = Flag of Thailand 1855.svg
| flag alias-1916 = Flag of Thailand (1916).svg
| flag alias-1917 =State Flag of Thailand (1916).svg
| flag alias-naval = Naval Ensign of Thailand.svg
| link alias-naval = Royal Thai Navy
| flag alias-air force = Flag of the Royal Thai Air Force.svg
| link alias-air force = Royal Thai Air Force
| flag alias-army= Flag of the Royal Thai Army.svg
| link alias-army=Royal Thai Army
| size = {{{size|}}}
| name = {{{name|}}}
| altlink = {{{altlink|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = 1767
| var2 =  1782
| var3 = 1817
| var4 = 1855
| var5 = 1916
| var6 = 1917
| redir1 = THA
&lt;/noinclude&gt;
}}</text>
      <sha1>m1kalhb1zbcy2s4i6n64cgfzud8xpb9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data United States</title>
    <ns>10</ns>
    <id>8953176</id>
    <revision>
      <id>770809010</id>
      <parentid>767123668</parentid>
      <timestamp>2017-03-17T18:31:50Z</timestamp>
      <contributor>
        <username>Illegitimate Barrister</username>
        <id>12006778</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2845">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = United States
| flag alias = Flag of the United States.svg
| flag alias-1776 = Grand Union Flag.svg
| flag alias-1777 = US flag 13 stars  Betsy Ross.svg
| flag alias-1795 = Star-Spangled Banner flag.svg
| flag alias-1818 = US flag 20 stars.svg
| flag alias-1819 = US flag 21 stars.svg
| flag alias-1820 = US flag 23 stars.svg
| flag alias-1822 = US flag 24 stars.svg
| flag alias-1836 = US flag 25 stars.svg
| flag alias-1837 = US flag 26 stars.svg
| flag alias-1845 = US flag 27 stars.svg
| flag alias-1846 = US flag 28 stars.svg
| flag alias-1847 = US flag 29 stars.svg
| flag alias-1848 = US flag 30 stars.svg
| flag alias-1851 = U.S. flag, 31 stars.svg
| flag alias-1858 = US flag 32 stars.svg
| flag alias-1859 = US flag 33 stars.svg
| flag alias-1861 = US flag 34 stars.svg
| flag alias-1863 = US flag 35 stars.svg
| flag alias-1865 = US flag 36 stars.svg
| flag alias-1867 = US flag 37 stars.svg
| flag alias-1877 = US flag 38 stars.svg
| flag alias-1890 = US flag 43 stars.svg
| flag alias-1891 = US flag 44 stars.svg
| flag alias-1896 = US flag 45 stars.svg
| flag alias-1908 = US flag 46 stars.svg
| flag alias-1912 = U.S. flag, 48 stars.svg
| flag alias-1959 = US flag 49 stars.svg
| flag alias-1960 = Flag of the United States (Pantone).svg
| flag alias-air force = Flag of the United States Air Force.svg
| flag alias-coast guard = Ensign of the United States Coast Guard.svg
| flag alias-coast guard-1915 = Ensign of the United States Coast Guard (1915-1953).png
| link alias-naval = {{#switch:{{{variant|}}}|coast guard|coast guard-1915=United States Coast Guard|United States Navy}}
| flag alias-army = Flag of the United States Army.svg
| link alias-football = United States {{{mw|men's}}} national {{{age|}}} soccer team
| link alias-basketball = United States {{{mw|men's}}} national {{{age|}}} basketball team
| link alias-field hockey = United States {{{mw|men's}}} national field hockey team
| link alias-Australian rules football = United States {{{mw|men's}}} national Australian rules football team
| size = {{{size|}}}
| name = {{{name|}}}
| altlink = {{{altlink|}}}
| altvar = {{{altvar|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = 1776  
| var2 = 1777   
| var3 = 1795   
| var4 = 1818   
| var5 = 1819  
| var6 = 1820   
| var7 = 1822   
| var8 = 1836   
| var9 = 1837  
| var10 = 1845  
| var11 = 1846   
| var12 = 1847   
| var13 = 1848  
| var14 = 1851  
| var15 = 1858  
| var16 = 1859  
| var17 = 1861  
| var18 = 1863   
| var19 = 1865 
| var20 = 1867  
| var21 = 1877 
| var22 = 1890  
| var23 = 1891   
| var24 = 1896   
| var25 = 1908   
| var26 = 1912  
| var27 = 1959   
| var28 = 1960   
| var29 = coast guard
| var30 = coast guard-1915
| redir1 = USA
| redir2 = US
| redir3 = United States of America
| redir4 = U.S.
&lt;/noinclude&gt;
}}</text>
      <sha1>shk9thw9fohtxpq7xlnqwfn9269soup</sha1>
    </revision>
  </page>
  <page>
    <title>Template:DMCA</title>
    <ns>10</ns>
    <id>23226218</id>
    <revision>
      <id>774491639</id>
      <parentid>296800547</parentid>
      <timestamp>2017-04-08T20:40:50Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:DMCA]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="197">{{Dated maintenance category
 |onlyarticles=yes
 |1={{{1|}}}
 |2={{{2|}}}
 |3={{{3|}}}
 |4={{{4|}}}
 |5={{{5|}}}
}}&lt;noinclude&gt;
{{documentation|Template:Dated maintenance category/doc}}
&lt;/noinclude&gt;</text>
      <sha1>cl1tba6o83bu6hpmnvwvbcse6qwofoo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Dated maintenance category</title>
    <ns>10</ns>
    <id>22598546</id>
    <revision>
      <id>589732290</id>
      <parentid>584337311</parentid>
      <timestamp>2014-01-08T08:14:55Z</timestamp>
      <contributor>
        <username>John of Reading</username>
        <id>11308236</id>
      </contributor>
      <comment>Second attempt. Those spaces upset inline templates such as {{As of}}. Instead, try an unconditional &lt;nowiki/&gt;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="660">&lt;nowiki/&gt;&lt;!--This nowiki helps to prevent whitespace at the top of articles--&gt;{{#ifeq:{{FULLROOTPAGENAME}}|Wikipedia:Template messages|&lt;!--Do not categorize--&gt;|&lt;!--
--&gt;{{#ifexpr:{{#if:{{NAMESPACE}}|0|1}}+{{#ifeq:{{{onlyarticles|no}}}|yes|0|1}}
 |{{#if:{{{3|}}}
  |[[Category:{{{1}}} {{{2}}} {{{3}}}]]&lt;!--
--&gt;{{#ifexist:Category:{{{1}}} {{{2}}} {{{3}}}
    |&lt;!--
 --&gt;|[[Category:Articles with invalid date parameter in template]]&lt;!--
--&gt;}}
  |[[Category:{{#if:{{{5|}}}
               |{{{5}}}&lt;!--
            --&gt;|{{{1}}}&lt;!--
           --&gt;}}]]&lt;!--
--&gt;}}{{#if:{{{4|}}}
      |[[Category:{{{4}}}]]}}&lt;!--
  --&gt;}}&lt;!--
--&gt;}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>7p59j4cq4i8wg65odpv5287yu50sczo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Delink</title>
    <ns>10</ns>
    <id>28069338</id>
    <revision>
      <id>696877808</id>
      <parentid>695173639</parentid>
      <timestamp>2015-12-26T16:26:10Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>{{documentation}} does this</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="179">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:delink|delink}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>nxxwkb2lon9wgne4irg9ctbsle6zwiy</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Div col</title>
    <ns>10</ns>
    <id>12679552</id>
    <revision>
      <id>678987988</id>
      <parentid>649557752</parentid>
      <timestamp>2015-09-01T20:48:19Z</timestamp>
      <contributor>
        <username>NeilN</username>
        <id>409043</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Div col: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="864">&lt;includeonly&gt;&lt;div class=&quot;div-col columns &lt;!--
 --&gt;{{#if: {{{colwidth|{{{2|}}}}}}
    | column-width
    | column-count column-count-{{{cols|{{#if:1|{{{1|2}}}}}}}} }}&quot; style=&quot;&lt;!--
 --&gt;{{#if: {{{colwidth|{{{2|}}}}}}
    | {{column-width|{{{colwidth|{{#if:1|{{{2}}}}}}}}}}
    | {{column-count|{{{cols|{{#if:1|{{{1|2}}}}}}}}}} }} &lt;!--
 --&gt;{{#if: {{{gap|}}}
    | {{column-gap|{{{gap}}}}} }}&lt;!--
 --&gt;{{#switch: {{{rules|}}}
    | = &lt;!--empty--&gt;
    | yes = {{column-rule}}
    | {{Column-rule|{{{rules}}}}} }} &lt;!--
 --&gt;{{#ifeq: {{{small|}}}|yes
    | font-size:90%; }} &lt;!--
 --&gt;{{#if: {{{style|}}}
    | {{{style}}} }}&quot;&gt;&lt;!--
 --&gt;{{#if: {{{content|}}}
    |{{{content}}}&lt;/div&gt;}}&lt;!-- Inventory how many pages use small=yes 
 --&gt;{{#ifeq: {{{small|}}}|yes
    |[[Category:Pages using div col with small parameter]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>hbim3y4k2xn4gvbjtheg2ftcylf40bd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Div col end</title>
    <ns>10</ns>
    <id>12679680</id>
    <revision>
      <id>683947856</id>
      <parentid>627002509</parentid>
      <timestamp>2015-10-03T15:58:07Z</timestamp>
      <contributor>
        <username>NeilN</username>
        <id>409043</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Div col end: per request at [[WP:RFPP]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="96">&lt;includeonly&gt;&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation|Template:Div col/doc}}
&lt;/noinclude&gt;</text>
      <sha1>e0rj08wj8gm7na2mxp8t9b3l4y8kspb</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Doi</title>
    <ns>10</ns>
    <id>973537</id>
    <revision>
      <id>797301639</id>
      <parentid>740965101</parentid>
      <timestamp>2017-08-26T05:26:04Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <comment>url change per edit request by [[User:Paradoctor]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="395">{{hide in print|{{#ifeq:{{str left|{{{1}}}|3}}|10.|[[Digital object identifier|doi]]:[https://doi.org/{{urlencode:{{{1|{{{id}}}}}}}} {{#tag:nowiki|{{{1|{{{id}}}}}}}}]|&lt;includeonly&gt;[[Category:Pages with DOI errors]]&lt;span class=&quot;error&quot;&gt;Error: Bad DOI specified!&lt;/span&gt;&lt;/includeonly&gt;}}&lt;!--
--&gt;}}&lt;!--
--&gt;{{only in print|doi:{{{1|{{{id}}}}}}&lt;!--
--&gt;}}&lt;!--
--&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>dgco15rhy5046l1ygrd6zcv5oy1y1fd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Double image</title>
    <ns>10</ns>
    <id>4896066</id>
    <revision>
      <id>588770515</id>
      <parentid>588770472</parentid>
      <timestamp>2014-01-02T05:33:21Z</timestamp>
      <contributor>
        <username>Codename Lisa</username>
        <id>16847332</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="778">&lt;noinclude&gt;{{Deprecated template|Double image|Multiple image|date=January 2014|note=See [[WP:Templates for discussion/Log/2013_November 7|TfD discussion]].}}
&lt;/noinclude&gt;&lt;includeonly&gt;{{multiple image
| align        = {{{{{|safesubst:}}}#switch: {{{1|}}}
  |left|right    = {{{1|}}}
  |center|centre = center
}}
| direction    = horizontal
| image1       = {{{2}}}
| width1       = {{{3|0}}}
| alt1         = {{{8|}}}
| caption1     = {{{{{|safesubst:}}}#if: {{{7|}}} | {{{6|}}} }}
| image2       = {{{4}}}
| width2       = {{{5|0}}}
| alt2         = {{{9|}}}
| caption2     = {{{7|}}}
| footer       = {{{{{|safesubst:}}}#if: {{{7|}}} || {{{6|}}} }}
| footer_align = left
| valign       = {{{valign|middle}}} &lt;!-- style=&quot;vertical-align:{{{valign|middle}}};&quot; --&gt;
}}&lt;/includeonly&gt;</text>
      <sha1>mg7dc89zkq643rw8mwp0q0tu1a1pmjp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Efn</title>
    <ns>10</ns>
    <id>34043836</id>
    <revision>
      <id>797740242</id>
      <parentid>744219331</parentid>
      <timestamp>2017-08-28T22:18:23Z</timestamp>
      <contributor>
        <username>SMcCandlish</username>
        <id>378390</id>
      </contributor>
      <comment>parameter aliases for cross-compatibility with other templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="602">&lt;includeonly&gt;{{#if:{{{name|}}}
 |{{#tag:ref|{{{1|{{{reference|{{{content|{{{text|}}}}}}}}}}}}|name={{{name|}}}|group={{#switch: {{{group|}}}
    | note
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group|}}}
    | #default = lower-alpha
   }}
 }}
 |{{#tag:ref|{{{1|{{{reference|{{{content|{{{text|}}}}}}}}}}}}|group={{#switch: {{{group|}}}
    | note
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group|}}}
    | #default = lower-alpha
   }}
 }}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>cy2hvj1zss95pdjzsgcbg4q4cq6tzl8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Error-small</title>
    <ns>10</ns>
    <id>55072963</id>
    <revision>
      <id>799379119</id>
      <parentid>797851439</parentid>
      <timestamp>2017-09-07T10:40:18Z</timestamp>
      <contributor>
        <username>The Anome</username>
        <id>76</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Error-small]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">{{#invoke:Error|error|{{{message|{{{1}}}}}}|tag=span}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>mmp4mio3xf3ajmqs6mv2pzi1u0i96x1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Events leading to World War I</title>
    <ns>10</ns>
    <id>44427515</id>
    <revision>
      <id>801679201</id>
      <parentid>797202397</parentid>
      <timestamp>2017-09-21T04:19:02Z</timestamp>
      <contributor>
        <username>DocWatson42</username>
        <id>38455</id>
      </contributor>
      <minor/>
      <comment>Changed a hyphen to an en dash.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="882">{{sidebar
|name = Events leading to World War I
|style = width:auto;
|titleclass = navbox-title
|titlestyle = font-size:110%;
|title = Events leading to [[World War I]]
|content1 = {{aligned table|fullwidth=y|leftright=y
|[[Triple Alliance (1882)|Triple Alliance]]|1882
|[[Franco-Russian Alliance]]|1894
|[[Anglo-German naval arms race]]|1898&amp;ndash;1912
|[[Venezuelan crisis of 1902-03|Venezuela Naval Blockade]]|19021903
|[[Entente Cordiale]]|1904
|[[Russo-Japanese War]]|1904&amp;ndash;1905
|[[First Moroccan Crisis]]|1905&amp;ndash;1906
|[[Anglo-Russian Entente]]|1907
|[[Bosnian crisis]]|1908&amp;ndash;1909
|[[Agadir Crisis]]|1911
|[[Italo-Turkish War]]|1911&amp;ndash;1912
|[[Balkan Wars]]|1912&amp;ndash;1913
|[[Assassination of Archduke Franz Ferdinand of Austria|Assassination of Franz Ferdinand]]|1914
|[[July Crisis]]|1914
}}}}&lt;noinclude&gt;

[[Category:World War I templates]]

&lt;/noinclude&gt;</text>
      <sha1>el9a3hzccysvrgtzkfhfl049wxvzlfr</sha1>
    </revision>
  </page>
  <page>
    <title>Template:FULLROOTPAGENAME</title>
    <ns>10</ns>
    <id>34701984</id>
    <revision>
      <id>774489771</id>
      <parentid>476439833</parentid>
      <timestamp>2017-04-08T20:24:42Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:FULLROOTPAGENAME]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="420">{{ {{{|safesubst:}}}#if: {{ {{{|safesubst:}}}Ns has subpages | {{ {{{|safesubst:}}}#if:{{{1|}}}|{{ {{{|safesubst:}}}NAMESPACE:{{{1}}}}}|{{ {{{|safesubst:}}}NAMESPACE}}}} }} 
  | {{ {{{|safesubst:}}}#titleparts:{{ {{{|safesubst:}}}#if:{{{1|}}}|{{{1}}}|{{ {{{|safesubst:}}}FULLPAGENAME}}}}|1}}
  | {{ {{{|safesubst:}}}#if:{{{1|}}}|{{{1}}}|{{ {{{|safesubst:}}}FULLPAGENAME}}}}
}}&lt;noinclude&gt;

{{documentation}}

&lt;/noinclude&gt;</text>
      <sha1>t4jn967jlk6ph7qu71w2b8f5083yjrl</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Fix</title>
    <ns>10</ns>
    <id>5632010</id>
    <revision>
      <id>713657347</id>
      <parentid>607989926</parentid>
      <timestamp>2016-04-05T08:42:07Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <minor/>
      <comment>delink tooltip to prevent rendering errors, suggested by [[User:SMcCandlish]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1119">{{#switch:{{{subst|}}}
 |={{category handler
  |template=[[Category:Templates needing substitution checking]]
  |nocat={{{nocat|&lt;noinclude&gt;true&lt;/noinclude&gt;}}}
 }}
 |SUBST=[[Category:Pages with incorrectly substituted templates]]
}}{{Category handler
 |main={{Fix/category
  |cat-date={{{cat-date|}}} 
  |cat={{{cat|}}} 
  |cat-date2={{{cat-date2|}}} 
  |cat2={{{cat2|}}} 
  |cat-date3={{{cat-date3|}}} 
  |cat3={{{cat3|}}} 
  |date={{{date|}}}
 }}
 |template={{#if:{{{name|}}}|{{#ifeq:{{{name}}}|{{ROOTPAGENAME}}||{{#if:{{{date|}}}||[[Category:Templates including undated clean-up tags]]}}}}}} 
 |subpage=no
}}{{#if:{{{text|}}}
 |&lt;sup class=&quot;noprint Inline-Template {{{class|}}}&quot; style=&quot;white-space:nowrap;&quot;&gt;&amp;#91;&lt;i&gt;{{#if:{{{pre-text|}}}
  |{{{pre-text}}}&amp;#32;
 }}[[{{{link|Wikipedia:Cleanup}}}|&lt;span title=&quot;{{delink|1={{{title|{{{link|Wikipedia:Cleanup}}}}}}{{#if:{{{date|}}}|&lt;nowiki /&gt; ({{{date}}})}}}}&quot;&gt;{{{text|}}}&lt;/span&gt;]]{{#if:{{{post-text|}}}
  |&amp;#32;{{{post-text}}}
 }}&lt;/i&gt;&amp;#93;&lt;/sup&gt;|{{{special|}}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add cats and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>nhc50m229srb98o7kaym2eq6ywx211f</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Fix-span</title>
    <ns>10</ns>
    <id>29459344</id>
    <revision>
      <id>711464884</id>
      <parentid>699023158</parentid>
      <timestamp>2016-03-23T01:15:46Z</timestamp>
      <contributor>
        <username>Ahecht</username>
        <id>2016996</id>
      </contributor>
      <comment>Darken text color from #888 to #595959, which is the lightest color that passes [[WCAG]] AAA</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1248">&lt;span class=&quot;{{{span-class|cleanup-needed-content}}}&quot; style=&quot;padding-left:0.1em; padding-right:0.1em; color:#595959; border:1px solid #DDD;&quot;&gt;{{{content|}}}&lt;/span&gt;{{#switch:{{{subst|}}}
 |={{category handler
  |template=[[Category:Templates needing substitution checking]]
  |nocat={{{nocat|&lt;noinclude&gt;true&lt;/noinclude&gt;}}}
 }}
 |SUBST=[[Category:Pages with incorrectly substituted templates]]
}}{{Category handler
 |main={{Fix/category
  |cat-date={{{cat-date|}}} 
  |cat={{{cat|}}} 
  |cat-date2={{{cat-date2|}}} 
  |cat2={{{cat2|}}} 
  |cat-date3={{{cat-date3|}}} 
  |cat3={{{cat3|}}} 
  |date={{{date|}}}
 }}
 |template={{#if:{{{name|}}}|{{#ifeq:{{{name}}}|{{ROOTPAGENAME}}||{{#if:{{{date|}}}||[[Category:Templates including undated clean-up tags]]}}}}}} 
 |subpage=no
}}{{#if:{{{special|}}}
 |{{{special|}}}
 |&lt;sup class=&quot;noprint Inline-Template {{{class|}}}&quot; style=&quot;margin-left:0.1em; white-space:nowrap;&quot;&gt;&amp;#91;&lt;i&gt;{{#if:{{{pre-text|}}}
  |{{{pre-text}}}&amp;#32;
 }}[[{{{link|Wikipedia:Cleanup}}}|&lt;span title=&quot;{{replace|{{{title|{{{link|Wikipedia:Cleanup}}}}}}|&quot;|&amp;quot;}}{{#if:{{{date|}}}|&lt;nowiki/&gt; ({{{date}}})}}&quot;&gt;{{{text|}}}&lt;/span&gt;]]{{#if:{{{post-text|}}}
  |&amp;#32;{{{post-text}}}
 }}&lt;/i&gt;&amp;#93;&lt;/sup&gt;
}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2kcqlmefezszom4yq6prwauosqn92b2</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Fix/category</title>
    <ns>10</ns>
    <id>34017846</id>
    <revision>
      <id>774489703</id>
      <parentid>471928517</parentid>
      <timestamp>2017-04-08T20:24:09Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Fix/category]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="858">&lt;noinclude&gt;{{pp-template|small=yes}}&lt;/noinclude&gt;{{{cat|[[Category:All pages needing cleanup]]}}}{{#if:{{{cat-date|}}}
  |[[{{{cat-date}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}{{#if:{{{cat2|}}}|{{{cat2}}}}}{{#if:{{{cat-date2|}}}
  |[[{{{cat-date2}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date2}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}{{#if:{{{cat3|}}}|{{{cat3}}}}}{{#if:{{{cat-date3|}}}
  |[[{{{cat-date3}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date3}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}</text>
      <sha1>gpikm5p2yggfosi6w5maxtx5my3u9im</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flag</title>
    <ns>10</ns>
    <id>1695548</id>
    <revision>
      <id>638605379</id>
      <parentid>637523521</parentid>
      <timestamp>2014-12-18T05:55:14Z</timestamp>
      <contributor>
        <username>Plastikspork</username>
        <id>5075409</id>
      </contributor>
      <comment>Closing</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="148">{{country data {{{1|}}}|flag/core|name={{{name|{{{1|}}}}}}|variant={{{variant|{{{2|}}}}}}|size={{{size|}}}}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>ofumtldgk38cy4vntgy93o2oniuxo2q</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flag/core</title>
    <ns>10</ns>
    <id>1938204</id>
    <revision>
      <id>693897002</id>
      <parentid>619865791</parentid>
      <timestamp>2015-12-05T18:10:03Z</timestamp>
      <contributor>
        <username>SiBr4</username>
        <id>16981284</id>
      </contributor>
      <comment>Default to placeholder flag, to avoid breaking if a bot blanks a &quot;flag alias&quot; parameter</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="378">&lt;span class=&quot;flagicon&quot;&gt;[[File:{{{flag alias-{{{variant}}}|{{#if:{{{flag alias|}}}|{{{flag alias}}}|Flag placeholder.svg}}}}}|{{#if:{{{size|}}}|{{{size}}}|23x15px}}|{{{border-{{{variant}}}|{{{border|border}}}}}} |alt=|link=]]&amp;nbsp;{{#ifeq:{{{size}}}|23x16px|&amp;nbsp;}}{{#ifeq:{{{alias}}}|Nepal|&amp;nbsp;&amp;nbsp;}}&lt;/span&gt;[[{{{alias}}}|{{{name}}}]]&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>ndkzxczprmtimhsxyhz8kipl09powaw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flagcountry</title>
    <ns>10</ns>
    <id>1718071</id>
    <revision>
      <id>647326346</id>
      <parentid>638605302</parentid>
      <timestamp>2015-02-16T01:18:18Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Flagcountry: [[WP:High-risk templates|Highly visible template]]: allow template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="146">{{country data {{{1}}}|flagcountry/core|variant={{{variant|{{{2|}}}}}}|size={{{size|}}}|name={{{name|}}}}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>s25s6cnwqhpfa977bsj98mmq5j89k5e</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flagcountry/core</title>
    <ns>10</ns>
    <id>2057595</id>
    <revision>
      <id>748158206</id>
      <parentid>651539558</parentid>
      <timestamp>2016-11-06T17:58:30Z</timestamp>
      <contributor>
        <username>GPHemsley</username>
        <id>22090</id>
      </contributor>
      <comment>Add support for {{{link alias-{{{variant}}}}}} parameter.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="416">&lt;span class=&quot;flagicon&quot;&gt;[[File:{{{flag alias-{{{variant}}}|{{{flag alias}}}}}}|{{#if:{{{size|}}}|{{{size}}}|23x15px}}|{{{border-{{{variant}}}|{{{border|border}}}}}} |alt=|link=]]&amp;nbsp;{{#ifeq:{{{size}}}|23x16px|&amp;nbsp;}}{{#ifeq:{{{alias}}}|Nepal|&amp;nbsp;&amp;nbsp;}}&lt;/span&gt;[[{{{link alias-{{{variant}}}|{{{alias}}}}}}|{{#if:{{{name|}}}|{{{name}}}|{{{shortname alias|{{{alias}}}}}}}}]]&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>pe9fn06rn3rliga4g8phabzx2n6012i</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flagicon</title>
    <ns>10</ns>
    <id>2075417</id>
    <revision>
      <id>638605349</id>
      <parentid>637524733</parentid>
      <timestamp>2014-12-18T05:54:53Z</timestamp>
      <contributor>
        <username>Plastikspork</username>
        <id>5075409</id>
      </contributor>
      <comment>Closing</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="127">{{country data {{{1|}}}|flagicon/core|variant={{{variant|{{{2|}}}}}}|size={{{size|}}}}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>dmhm3yz9zkfz2b9aeazgucpbhxz0qqo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flagicon/core</title>
    <ns>10</ns>
    <id>2048255</id>
    <revision>
      <id>695263225</id>
      <parentid>647326370</parentid>
      <timestamp>2015-12-14T21:50:44Z</timestamp>
      <contributor>
        <username>SiBr4</username>
        <id>16981284</id>
      </contributor>
      <comment>Default to placeholder flag in absence of flag alias (see also [[Template:Flag/core]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="293">&lt;span class=&quot;flagicon&quot;&gt;[[File:{{{flag alias-{{{variant}}}|{{#if:{{{flag alias|}}}|{{{flag alias}}}|Flag placeholder.svg}}}}}|{{#if:{{{size|}}}|{{{size}}}|23x15px}}|{{{border-{{{variant}}}|{{{border|border}}}}}} |alt={{{alias}}}|link={{{alias}}}]]&lt;/span&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>96ivn0w0bxhlm01zt7a1dqhm2onhawx</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flagicon image</title>
    <ns>10</ns>
    <id>15665914</id>
    <revision>
      <id>637141100</id>
      <parentid>637077051</parentid>
      <timestamp>2014-12-08T08:49:31Z</timestamp>
      <contributor>
        <username>SiBr4</username>
        <id>16981284</id>
      </contributor>
      <comment>Unbordered transparent image if first parameter is empty or undefined (see talk page)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="192">&lt;span class=&quot;flagicon&quot;&gt;[[File:{{#if:{{{1|}}}|{{{1}}}|Flag placeholder.svg}}|{{{size|23x15px}}}|{{{border|{{#if:{{{1|}}}|border}}}}} |alt=|link=]]&lt;/span&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>r6ss4fqqbsfcks65n3qjjrirz57uizm</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Further information</title>
    <ns>10</ns>
    <id>1721317</id>
    <revision>
      <id>806005498</id>
      <parentid>804511078</parentid>
      <timestamp>2017-10-19T01:32:24Z</timestamp>
      <contributor>
        <username>Primefac</username>
        <id>11508456</id>
      </contributor>
      <comment>Updating TFD template: discussion was relisted ([[WP:XFDC|XFDcloser]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="417">{{Tfm/dated|page=Further information|otherpage=Details|link=Wikipedia:Templates for discussion/Log/2017 October 19#Template:Further information|type=disabled|bigbox={{#invoke:Noinclude|noinclude|text=yes}}}}&lt;includeonly&gt;{{#invoke:labelled list hatnote|labelledList|Further information}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>6e7ghwgmogfi3lg3i1mihbt77gddr1o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Globalize</title>
    <ns>10</ns>
    <id>1058710</id>
    <revision>
      <id>784064308</id>
      <parentid>733987169</parentid>
      <timestamp>2017-06-06T08:06:00Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1655">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
&lt;!-- {{Globalize}} begin --&gt;{{ambox
| name  = Globalize
| subst = &lt;includeonly&gt;{{subst:substcheck}}&lt;/includeonly&gt;
| type  = content
| class = ambox-globalize
| image = [[File:ambox globe content.svg|50x40px|alt=Globe icon.|link=]]
| issue = The examples and perspective in this {{{1|article}}} '''{{#if:{{{2|}}}{{{3|}}}{{{4|}}}|deal primarily with {{#if:{{{4|}}}|{{{2name|{{{2}}}}}}, {{{3name|{{{3}}}}}}, and {{{4name|{{{4}}}}}}|{{#if:{{{3|}}}|{{{2name|{{{2}}}}}} and {{{3name|{{{3}}}}}}|{{{2name|{{{2}}}}}}}}}} and do|may}} not represent a [[Wikipedia:WikiProject Countering systemic bias|worldwide view]] of the subject'''.
| fix   = You may [{{fullurl:{{FULLPAGENAME}}|action=edit}} improve this article], discuss the issue on the {{#if:{{{discussion|}}}{{{discuss|}}}{{{talk|}}}
 |[[{{{discussion|}}}{{{discuss|}}}{{{talk|}}}|talk page]]
 |[[{{TALKPAGENAME}}|talk page]], or [[Wikipedia:Article wizard|create a new article]], as appropriate
}}.
| removalnotice = yes
| date  = {{{date|}}}
| small = {{{small|}}}
| cat   = Articles with limited geographic scope
| all   = {{#if:{{{2|}}}|{{#ifexist:Category:{{{2}}}-centric|{{{2}}}-centric|Pages in non-existent country centric categories}}}}
| all2  = {{#if:{{{3|}}}|{{#ifexist:Category:{{{3}}}-centric|{{{3}}}-centric|Pages in non-existent country centric categories}}}}
| all3  = {{#if:{{{4|}}}|{{#ifexist:Category:{{{4}}}-centric|{{{4}}}-centric|Pages in non-existent country centric categories}}}}
}}&lt;!-- {{Globalize}} end --&gt;
}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add categories and inter-wikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>qt2ay1k7v81y8gzei5ogqtq6j940w95</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Google books</title>
    <ns>10</ns>
    <id>15651324</id>
    <revision>
      <id>805503742</id>
      <parentid>805503598</parentid>
      <timestamp>2017-10-15T20:49:52Z</timestamp>
      <contributor>
        <username>Jonesey95</username>
        <id>9755426</id>
      </contributor>
      <comment>trim whitespace in id</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="642">{{#if:{{{plainurl|{{{plain-url|}}}}}}|https://books.google.com/books?id={{trim|{{{1|{{{id}}}}}}}}{{#if:{{{page|}}}|&amp;pg=PA{{{page|}}}|{{#if:{{{pg|}}}|&amp;pg={{{pg}}}}}}}{{#if:{{{text|}}}|&amp;dq={{urlencode:&quot;{{{text|}}}&quot;}}}}{{#if:{{{keywords|}}}|&amp;q={{urlencode:{{{keywords}}}}}}}|''[https://books.google.com/books?id={{trim|{{{1|{{{id}}}}}}}}{{#if:{{{page|}}}|&amp;pg=PA{{{page|}}}|{{#if:{{{pg|}}}|&amp;pg={{{pg}}}}}}}{{#if:{{{text|}}}|&amp;dq={{urlencode:&quot;{{{text|}}}&quot;}}}}{{#if:{{{keywords|}}}|&amp;q={{urlencode:{{{keywords}}}}}}} {{{2|{{{title|{{PAGENAME}}}}}}}}]''{{#if:{{{page|}}}|, p. {{{page}}},}} at [[Google Books]]}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>1a7m8ttpmk70kvk9e9gw8z2r3otlpyx</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Gregorian serial date</title>
    <ns>10</ns>
    <id>5139015</id>
    <revision>
      <id>771840324</id>
      <parentid>376909202</parentid>
      <timestamp>2017-03-23T20:34:38Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Gregorian serial date]]&quot;: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1782">{{#expr: 
        &lt;!--Days from all years past:--&gt;

        + (({{{year|{{CURRENTYEAR}}}}} - 1) * 365)
        + ((({{{year|{{CURRENTYEAR}}}}} - 1) - (({{{year|{{CURRENTYEAR}}}}} - 1) mod 4)) / 4)     &lt;!--add a day for every leap--&gt;
        - ((({{{year|{{CURRENTYEAR}}}}} - 1) - (({{{year|{{CURRENTYEAR}}}}} - 1) mod 100)) / 100) &lt;!--subtract 100 year exception--&gt;
        + ((({{{year|{{CURRENTYEAR}}}}} - 1) - (({{{year|{{CURRENTYEAR}}}}} - 1) mod 400)) / 400) &lt;!--readd 400 year exception--&gt;

       &lt;!--Days so far this year:--&gt;
 
        + {{ #ifexpr:    &lt;!--add days for past months this year--&gt; &lt;!--Gives 1 or 2 extra days because of February--&gt;
                     ({{{month|{{CURRENTMONTH}}}}} - 1) &lt; 8 
                     | ( ({{{month|{{CURRENTMONTH}}}}} - 1) * 30.5 round 0) 
                     | ( ({{{month|{{CURRENTMONTH}}}}} - 1) * 30.5 + 0.9 round 0 ) 
          }} 
        - {{ #ifexpr: ({{{month|{{CURRENTMONTH}}}}} &lt;= 2) | 0 |  
             {{ #ifexpr:    &lt;!-- if leap year  --&gt;
                     ({{{year|{{CURRENTYEAR}}}}} / 4) = ({{{year|{{CURRENTYEAR}}}}} / 4 round 0)          &lt;!--If divisible by 4--&gt;
                      and ({{{year|{{CURRENTYEAR}}}}} / 100 != {{{year|{{CURRENTYEAR}}}}} / 100 round 0)  &lt;!--and not by 100--&gt;
                | 1 | 2 
             }}
          }}
        + {{ #ifexpr: ({{{month|{{CURRENTMONTH}}}}} &lt;= 2) | 0 |
             {{ #ifexpr: &lt;!--400 year exception--&gt;
                     ({{{year|{{CURRENTYEAR}}}}} / 400) = ({{{year|{{CURRENTYEAR}}}}} / 400 round 0) 
                | 1 | 0 
             }}
          }} 
        + {{{day|{{CURRENTDAY}}}}}
 }}{{#ifexpr: {{{year|{{CURRENTYEAR}}}}} &lt; 1 |
        _ERROR - Can not handle dates before January 1, 1 A.D.
   }}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>knj2qocovus95zi2z24hd29kxszvu60</sha1>
    </revision>
  </page>
  <page>
    <title>Template:HMHS</title>
    <ns>10</ns>
    <id>27954287</id>
    <revision>
      <id>373311348</id>
      <parentid>372003819</parentid>
      <timestamp>2010-07-13T19:26:29Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>1981037</id>
      </contributor>
      <minor/>
      <comment>Cleanup per Category:Wikipedia pages with incorrect protection templates. [[:Category:Wikipedia pages with incorrect protection templates|You can help!]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="208">&lt;includeonly&gt;{{ship|HMHS|{{{1}}}|{{#if:{{{2|}}}|{{{2}}}}}|{{#if:{{{3|}}}|{{{3}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{template doc}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>j8lrpjkn1hac2o48uha956x2jv3qgzd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:HMS</title>
    <ns>10</ns>
    <id>10840750</id>
    <revision>
      <id>577888721</id>
      <parentid>388688726</parentid>
      <timestamp>2013-10-19T20:44:22Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:HMS: allow template editors to modify ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="207">&lt;includeonly&gt;{{ship|HMS|{{{1}}}|{{#if:{{{2|}}}|{{{2}}}}}|{{#if:{{{3|}}}|{{{3}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{template doc}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>hadsbi9xe91p919c6ghsbwxd64mnrq9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Harv</title>
    <ns>10</ns>
    <id>3083829</id>
    <redirect title="Template:Harvard citation" />
    <restrictions>edit=sysop:move=sysop</restrictions>
    <revision>
      <id>95236892</id>
      <parentid>27653786</parentid>
      <timestamp>2006-12-19T03:27:09Z</timestamp>
      <contributor>
        <username>Renesis</username>
        <id>475878</id>
      </contributor>
      <minor/>
      <comment>Protected Template:Harv: Redirect to hprotected template [edit=sysop:move=sysop]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="39">#REDIRECT [[Template:Harvard citation]]</text>
      <sha1>dn9qlg927pkdnmfh95oeycbtkzo47bk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Harvard citation</title>
    <ns>10</ns>
    <id>3103864</id>
    <restrictions>edit=sysop:move=sysop</restrictions>
    <revision>
      <id>548015256</id>
      <parentid>497725581</parentid>
      <timestamp>2013-03-31T18:16:40Z</timestamp>
      <contributor>
        <username>Dragons flight</username>
        <id>16980</id>
      </contributor>
      <comment>install Lua version</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="110">&lt;includeonly&gt;{{#invoke:Footnotes | harvard_citation }}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>j2bg5ou8e9i0iwd8fq4izjdt9fy9a5y</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Harvard citation no brackets</title>
    <ns>10</ns>
    <id>5326834</id>
    <revision>
      <id>760004509</id>
      <parentid>548015171</parentid>
      <timestamp>2017-01-14T11:06:04Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Harvard citation no brackets]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="118">&lt;includeonly&gt;{{#invoke:Footnotes|harvard_citation_no_bracket}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>0tplhctpagkpfr9gwi3hcd6af9ii5yc</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Harvid</title>
    <ns>10</ns>
    <id>25416230</id>
    <redirect title="Template:SfnRef" />
    <revision>
      <id>804521304</id>
      <parentid>777138639</parentid>
      <timestamp>2017-10-09T15:34:13Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Harvid]]&quot;: [[WP:High-risk templates|Highly visible template]]; 39,000+ transclusions ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="67">#REDIRECT [[Template:SfnRef]]
{{R from merge}} {{R semi-protected}}</text>
      <sha1>f2gbqubafgd45ltc941qxars92gw1mb</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Harvnb</title>
    <ns>10</ns>
    <id>5326925</id>
    <redirect title="Template:Harvard citation no brackets" />
    <revision>
      <id>774336434</id>
      <parentid>103261552</parentid>
      <timestamp>2017-04-07T19:22:02Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Harvnb]]&quot;: Matching redirect target ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="50">#REDIRECT[[Template:Harvard citation no brackets]]</text>
      <sha1>3shv1t0unnkqbpog36jda0nnq7r7rca</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Hide in print</title>
    <ns>10</ns>
    <id>21706434</id>
    <revision>
      <id>774484343</id>
      <parentid>628460954</parentid>
      <timestamp>2017-04-08T19:40:49Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Hide in print]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="109">&lt;includeonly&gt;{{{1|}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
[[Category:Exclude in print|!]]
&lt;/noinclude&gt;</text>
      <sha1>73og27prhvo5g5zugn2d87cnvzb68h8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:ISBN</title>
    <ns>10</ns>
    <id>51604275</id>
    <revision>
      <id>801657419</id>
      <parentid>798892531</parentid>
      <timestamp>2017-09-21T01:06:26Z</timestamp>
      <contributor>
        <username>MRD2014</username>
        <id>21640150</id>
      </contributor>
      <comment>bypass redirect per talk</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3397">{{#if:{{{1|&lt;noinclude&gt;$&lt;/noinclude&gt;}}}|{{Catalog lookup link|{{{1|}}}|{{{2|}}}|{{{3|}}}|{{{4|}}}|{{{5|}}}|{{{6|}}}|{{{7|}}}|{{{8|}}}|{{{9|}}}|article-link={{#ifeq:{{yesno-no|{{{plainlink|}}}}}|yes||International Standard Book Number}}|article-name={{#ifeq:{{yesno-no|{{{plainlink|}}}}}|yes||ISBN}}|link-prefix=[Special:BookSources/|item-prefix={{!}}|item-postfix=]|list-leadout={{{leadout|}}}}}{{#if:{{trim|{{{1|}}}}}|{{#ifeq:{{yesno-no|{{{invalid1|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{1|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{2|}}}}}|{{#ifeq:{{yesno-no|{{{invalid2|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{2|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{3|}}}}}|{{#ifeq:{{yesno-no|{{{invalid3|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{3|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{4|}}}}}|{{#ifeq:{{yesno-no|{{{invalid4|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{4|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{5|}}}}}|{{#ifeq:{{yesno-no|{{{invalid5|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{5|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{6|}}}}}|{{#ifeq:{{yesno-no|{{{invalid6|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{6|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{7|}}}}}|{{#ifeq:{{yesno-no|{{{invalid7|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{7|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{8|}}}}}|{{#ifeq:{{yesno-no|{{{invalid8|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{8|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{9|}}}}}|{{#ifeq:{{yesno-no|{{{invalid9|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{9|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}}}}}}}}}}}}}}}}}}}|{{error-small|Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Missing [[ISBN]].}}}}&lt;noinclude&gt;{{documentation}}&lt;!-- Add categories and interwiki lines to the /doc subpage, not here! --&gt;&lt;/noinclude&gt;</text>
      <sha1>5bzfl5yo5chykn0se0i9zyszdx18fvs</sha1>
    </revision>
  </page>
  <page>
    <title>Template:If empty</title>
    <ns>10</ns>
    <id>16635679</id>
    <revision>
      <id>639393821</id>
      <parentid>639393034</parentid>
      <timestamp>2014-12-23T22:03:50Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>make this substable</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="102">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:If empty|main}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>dl9p9t1ge8vz1f67zrvu4lp7md161es</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Infobox military conflict</title>
    <ns>10</ns>
    <id>1519061</id>
    <revision>
      <id>628656290</id>
      <parentid>612304565</parentid>
      <timestamp>2014-10-07T14:48:16Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>use Lua. tested extensively in sandbox, no known issues</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="109">&lt;includeonly&gt;{{#invoke:Infobox military conflict|main}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>ood3rlzzd5zabv43up0b3ht91tqlve9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:London Gazette</title>
    <ns>10</ns>
    <id>12389422</id>
    <revision>
      <id>785584743</id>
      <parentid>785406729</parentid>
      <timestamp>2017-06-14T09:58:42Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>unsupported parameter error message;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2220">{{#if: {{#if: {{{issue|}}}|{{#if: {{{date|}}} | yes}} }}&lt;!-- only when both params are passed
--&gt;|{{cite magazine
 |newspaper={{#if: {{{nolink|}}}|The {{#switch: {{lc:{{{city|}}} }}
                 | b | belfast = Belfast
                 | e | edinburgh = Edinburgh
                 | o | oxford = Oxford
                 | #default = London
                 }} Gazette|&lt;!--with a
      link--&gt;[[The {{#switch: {{lc:{{{city|}}} }}
                 | b | belfast = Belfast
                 | e | edinburgh = Edinburgh
                 | o | oxford = Oxford
                 | #default = London
                 }} Gazette]]&lt;!--
         --&gt;}}
 |type={{#invoke:Gazette util|type_param|display-supp={{{display-supp|}}} |supp={{{supp|}}}}}

 |url={{#invoke:Gazette util|url_param|city={{{city|}}}|issue={{{issue|}}}|supp={{{supp|}}}|page={{{page|}}}|pages={{{pages|}}}}}

 |title={{#if: {{{title|}}}|{{{title}}}|No. {{{issue|}}} }}
 |issue={{#if: {{{title|}}}|{{{issue|}}} }}

 |page={{#invoke:Gazette util|make_page_param|param=page|page={{{page|}}}|pages={{{pages|}}}}}
 |pages={{#invoke:Gazette util|make_page_param|param=pages|page={{{page|}}}|pages={{{pages|}}}}}

 |date={{{date|}}}
 |postscript={{{postscript|}}}
 |ref={{{ref|{{harvid|Gazette|{{{issue|}}}&lt;!----&gt;}}&lt;!----&gt;}}}
 |mode={{{mode|}}}
 |quote={{{quote|}}}
}}&lt;!--End of {{cite magazine}}--&gt;{{#invoke:Gazette util|page_error|page={{{page|}}}|pages={{{pages|}}}}}
|{{Error|1=You must specify {{And list|{{#if:{{{issue|}}}||'''''issue='''''}}|{{#if:{{{date|}}}||'''''date='''''}}}} when using {{tl|London Gazette}}.}}
}}&lt;!-- End of main #if
--&gt;{{main other|{{#if:{{{ps|}}}{{{separator|}}}{{{startpage|}}}{{{endpage|}}}{{{accessdate|}}}{{{access-date|}}}|&lt;span style=&quot;font-size:100%; font-weight:normal&quot; class=&quot;error&quot;&gt; London Gazette uses unsupported parameters ([[Template:London Gazette#Error messages|help]])&lt;/span&gt;[[Category:Pages containing London Gazette template with deprecated parameters]]}}&lt;!--
            --&gt;{{#ifeq:{{{supp|}}}|y|[[Category:Pages containing London Gazette template with parameter supp set to y|{{{issue|}}}]]}}&lt;!--
--&gt;}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>7yfpscm775ll7qwkz6pdbi7x946vtiq</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Longitem</title>
    <ns>10</ns>
    <id>38040101</id>
    <revision>
      <id>718758673</id>
      <parentid>718071292</parentid>
      <timestamp>2016-05-05T12:44:24Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>I have to sort this out; adding tracking category.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="230">&lt;div style=&quot;padding:0.1em 0;line-height:1.2em;{{{style|}}}&quot;&gt;{{{1}}}&lt;/div&gt;&lt;includeonly&gt;{{#if:{{{2|}}}|[[Category:Pages using Template:Longitem with unnamed style parameter]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>druaduufanfoh3rf6p66canulwflngz</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main</title>
    <ns>10</ns>
    <id>1208356</id>
    <revision>
      <id>771512324</id>
      <parentid>697196828</parentid>
      <timestamp>2017-03-21T23:21:15Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <minor/>
      <comment>Anthony Appleyard moved page [[Template:Main article]] to [[Template:Main]]: [https://en.wikipedia.org/wiki/Template_talk:Main_article#edittemplateprotected]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="138">{{#invoke:main|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>jkpvpyms818jhpg2lkzsq5qur195qbr</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main article</title>
    <ns>10</ns>
    <id>53560346</id>
    <redirect title="Template:Main" />
    <revision>
      <id>771512326</id>
      <timestamp>2017-03-21T23:21:16Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <comment>Anthony Appleyard moved page [[Template:Main article]] to [[Template:Main]]: [https://en.wikipedia.org/wiki/Template_talk:Main_article#edittemplateprotected]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="44">#REDIRECT [[Template:Main]]

{{R from move}}</text>
      <sha1>jyxj6hsq03mwmz6m8pkogauxy595atk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main other</title>
    <ns>10</ns>
    <id>17220251</id>
    <revision>
      <id>388689011</id>
      <parentid>334818505</parentid>
      <timestamp>2010-10-04T14:46:48Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>remove {{pp-template}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="409">{{#switch:
  &lt;!--If no or empty &quot;demospace&quot; parameter then detect namespace--&gt;
  {{#if:{{{demospace|}}} 
  | {{lc: {{{demospace}}} }}    &lt;!--Use lower case &quot;demospace&quot;--&gt;
  | {{#ifeq:{{NAMESPACE}}|{{ns:0}}
    | main
    | other
    }} 
  }}
| main     = {{{1|}}}
| other
| #default = {{{2|}}}
}}&lt;noinclude&gt;

{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>ngt28vb1n5t4bh1su57btnqyofkd1d5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Military navigation</title>
    <ns>10</ns>
    <id>11992644</id>
    <revision>
      <id>778685739</id>
      <parentid>778656930</parentid>
      <timestamp>2017-05-04T17:21:02Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>update from sandbox, tested in the testcases, saving old version in the sandbox for comparison if there are any issues</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="256">&lt;includeonly&gt;{{#invoke:Military navigation|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation|Wikipedia:WikiProject Military history/Military navigation}}

[[Category:Navigational box wrapper templates]]
[[Category:Military navigational boxes| ]]
&lt;/noinclude&gt;</text>
      <sha1>jsqaco52t54gvty1nu6j5uyt0oisg74</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Multiple image</title>
    <ns>10</ns>
    <id>16911774</id>
    <revision>
      <id>634254991</id>
      <parentid>634097939</parentid>
      <timestamp>2014-11-17T18:41:05Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>use lua version as discussed on the talk page (please do revert though if this causes serious problems)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="131">{{#invoke:Multiple image|render}}&lt;noinclude&gt;{{documentation}}&lt;!-- PLEASE ADD CATEGORIES TO THE /doc SUBPAGE, THANKS --&gt;&lt;/noinclude&gt;</text>
      <sha1>q9oxjh8m7wtojz4v77x8mc2nmpowt0r</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Namespace detect</title>
    <ns>10</ns>
    <id>17433896</id>
    <revision>
      <id>772147338</id>
      <parentid>561364979</parentid>
      <timestamp>2017-03-25T16:04:13Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Namespace detect]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access]...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="151">{{#invoke:Namespace detect|main}}&lt;noinclude&gt;

{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>7fql4vchisqvmhro3g553443bccqcde</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Nobold</title>
    <ns>10</ns>
    <id>10981056</id>
    <revision>
      <id>772147408</id>
      <parentid>224914185</parentid>
      <timestamp>2017-03-25T16:04:17Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Nobold]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indefinit...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="164">&lt;span style=&quot;font-weight:normal;&quot;&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- PLEASE ADD CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS --&gt;
&lt;/noinclude&gt;</text>
      <sha1>jd091g26r8rrz2i74pnanvl0wum30wj</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Notelist</title>
    <ns>10</ns>
    <id>34230427</id>
    <revision>
      <id>744219698</id>
      <parentid>591018129</parentid>
      <timestamp>2016-10-13T21:20:40Z</timestamp>
      <contributor>
        <username>Geni</username>
        <id>55582</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Notelist: locking down everything used on the Hillary page ([Edit=Require template editor access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="286">{{reflist|{{{1|{{{colwidth|}}}}}}|refs={{{refs|{{{notes|}}}}}}|group={{#switch: {{{group|}}}
    | note
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group|}}}
    | #default = lower-alpha
   }}}}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>sg0j66m0cnvsmzurho8oogz4n9in4cm</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ns has subpages</title>
    <ns>10</ns>
    <id>22589696</id>
    <revision>
      <id>637438114</id>
      <parentid>637437596</parentid>
      <timestamp>2014-12-10T06:37:09Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>convert this to use [[Module:Ns has subpages]] - this gets the subpage status directly from MediaWiki, avoiding the need to update the template when namespaces change</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="185">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:Ns has subpages|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>0pg457y46td6p53rdt8tyc76jeg9pa8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:OCLC</title>
    <ns>10</ns>
    <id>6952153</id>
    <revision>
      <id>800876292</id>
      <parentid>719604996</parentid>
      <timestamp>2017-09-16T06:33:12Z</timestamp>
      <contributor>
        <username>JJMC89</username>
        <id>24812038</id>
      </contributor>
      <comment>httpsperrequest</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="380">{{Catalog lookup link|{{{oclc|{{{1|}}}}}}|{{{2|}}}|{{{3|}}}|{{{4|}}}|{{{5|}}}|{{{6|}}}|{{{7|}}}|{{{8|}}}|{{{9|}}}|article-link=OCLC|link-prefix=https://www.worldcat.org/oclc/|list-leadout={{{leadout|}}}|link-postfix={{#if:{{{show|}}}|/editions}}|item-postfix={{#if:{{{show|}}}|&amp;#32;({{#ifeq:{{{show|}}}|all|all editions|{{{show|}}}}})}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>rojts1ix1bcxjy5m4dmwrjobjoo3t43</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Only in print</title>
    <ns>10</ns>
    <id>21722702</id>
    <revision>
      <id>772147387</id>
      <parentid>633160743</parentid>
      <timestamp>2017-03-25T16:04:15Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Only in print]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (in...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="79">{{#if:{{hide in print|1}}||{{{1|}}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>rm8emca34tsah296fr9jh9dzgyhnfxo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ordered list</title>
    <ns>10</ns>
    <id>36372751</id>
    <revision>
      <id>695189167</id>
      <parentid>619136328</parentid>
      <timestamp>2015-12-14T10:30:21Z</timestamp>
      <contributor>
        <username>The Earwig</username>
        <id>7418060</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Ordered list]]&quot;: [[WP:High-risk templates|Highly visible template]]: thousands of mainspace transclusions; match siblings; unlikely to be edited ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="178">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:list|ordered}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>n9z3yrhcknctpjb3o8a5r4mv3ke55up</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Plainlist</title>
    <ns>10</ns>
    <id>33825240</id>
    <revision>
      <id>628943872</id>
      <parentid>628943729</parentid>
      <timestamp>2014-10-09T16:30:47Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Plainlist: Change to template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="236">&lt;div class=&quot;plainlist {{{class|}}}&quot; {{#if:{{{style|}}}{{{indent|}}}|style=&quot;{{#if:{{{indent|}}}|margin-left: {{#expr:{{{indent}}}*1.6}}em;}} {{{style|}}}&quot;}}&gt;{{#if:{{{1|}}}|
{{{1}}}
&lt;/div&gt;}}&lt;noinclude&gt;&lt;/div&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>nztwpfg54h3oaq8h3bzhtwuqxochv0z</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Plural</title>
    <ns>10</ns>
    <id>4356402</id>
    <revision>
      <id>583036096</id>
      <parentid>583035467</parentid>
      <timestamp>2013-11-24T02:42:57Z</timestamp>
      <contributor>
        <username>Anomie</username>
        <id>301903</id>
      </contributor>
      <comment>Stupid comment in {{yesno}}'s default output...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="267">{{{1}}}{{{{{|safesubst:}}}#if:{{{{{|safesubst:}}}yesno|{{{nb|no}}}|no=}}|&amp;nbsp;|&amp;#32;}}{{{{{|safesubst:}}}plural:{{{1}}}|{{{2}}}|{{{3|{{{2}}}s}}}|{{{4}}}}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>qe8lfbag8802rshn2e8oxgezewwrvd8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Pp-move-indef</title>
    <ns>10</ns>
    <id>20814756</id>
    <revision>
      <id>626025152</id>
      <parentid>626025082</parentid>
      <timestamp>2014-09-18T01:43:57Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Pp-move-indef: [[WP:High-risk templates|Highly visible template]]: allow template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="174">&lt;includeonly&gt;{{#invoke:Pp-move-indef|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>ige1ruktwt70sig3zmubaou2g290avd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Pp-semi-indef</title>
    <ns>10</ns>
    <id>7896691</id>
    <revision>
      <id>772120871</id>
      <parentid>619983103</parentid>
      <timestamp>2017-03-25T12:38:46Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Pp-semi-indef]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor acces...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="178">&lt;includeonly&gt;{{#invoke:Protection banner|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>5t6lal9n9hcpwsso2obr7pcyjbg26xc</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Quote</title>
    <ns>10</ns>
    <id>994397</id>
    <revision>
      <id>803201188</id>
      <parentid>728423023</parentid>
      <timestamp>2017-10-01T03:00:21Z</timestamp>
      <contributor>
        <username>Izno</username>
        <id>2927383</id>
      </contributor>
      <comment>clean cite</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1201">&lt;blockquote class=&quot;templatequote&quot; {{#if:{{{style|}}}|style=&quot;{{{style}}}&quot;}}&gt;{{{text|{{{content|{{{quotetext|{{{quote|{{{1|&lt;includeonly&gt;{{error|Error: No text given for quotation (or equals sign used in the actual argument to an unnamed parameter)}}[[Category:Pages incorrectly using the quote template]]&lt;/includeonly&gt;&lt;noinclude&gt;{{lorem ipsum}}&lt;/noinclude&gt;}}}}}}}}}}}}}}}{{#if:{{{sign|}}}{{{cite|}}}{{{author|}}}{{{by|}}}{{{personquoted|}}}{{{source|}}}{{{ts|}}}{{{title|}}}{{{publication|}}}{{{quotesource|}}}{{{2|}}}{{{3|}}}{{{4|}}}{{{char|}}}{{{character|}}}|{{#if:{{{multiline|}}}|&lt;nowiki /&gt;}}
&lt;div class=&quot;templatequotecite&quot;&gt;&amp;thinsp;&lt;cite&gt;{{#if:{{{char|{{{character|}}}}}}|{{{char|{{{character|}}}}}}, in&amp;#32;}}{{Comma separated entries
 | {{if empty|{{{sign|}}}|{{{cite|}}}|{{{author|}}}|{{{by|}}}|{{{personquoted|}}}|{{{2|}}}}}
 | {{if empty|{{{title|}}}|{{{publication|}}}|{{{ts|}}}|{{{quotesource|}}}|{{{3|}}}}}
 | {{if empty|{{{source|}}}|{{{4|}}}}}
 }}&lt;/cite&gt;&lt;/div&gt;
}}
&lt;/blockquote&gt;{{#if:{{{class|}}}{{{id|}}}{{{diff|}}}{{{4|}}}{{{5|}}}|[[Category:Pages incorrectly using the quote template]]}}&lt;noinclude&gt;
{{documentation}}&lt;!-- Add categories to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>s8dwj2x5obwnzhkskmviq1h3sww7hto</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Redirect-multi</title>
    <ns>10</ns>
    <id>50525075</id>
    <revision>
      <id>804461605</id>
      <parentid>804461309</parentid>
      <timestamp>2017-10-09T04:22:15Z</timestamp>
      <contributor>
        <username>Alex Shih</username>
        <id>1104175</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Redirect-multi]]&quot;: [[WP:High-risk templates|Highly visible template]]: Changing to semi as no need for TE protection with only 320 pages transcluded ([Edit=Require autoconfirmed or confirmed access] (indefinite)...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="107">&lt;includeonly&gt;{{#invoke:Redirect-multi|redirectMulti}}&lt;/includeonly&gt;&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>7op6b1aqafeuwacwsiegr69j9w6hg8v</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Refbegin</title>
    <ns>10</ns>
    <id>9391283</id>
    <revision>
      <id>780001198</id>
      <parentid>772120876</parentid>
      <timestamp>2017-05-12T09:46:40Z</timestamp>
      <contributor>
        <username>TheDJ</username>
        <id>244887</id>
      </contributor>
      <comment>Use class from MediaWiki:Common.css to implement hanging indentation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="828">&lt;includeonly&gt;&lt;div class=&quot;refbegin &lt;!--
--&gt;{{#if: {{{indent|}}}
    | refbegin-hanging-indents }} &lt;!--
 --&gt;{{#if: {{{normalfont|}}}
    | refbegin-100 }} &lt;!--
 --&gt;{{#if: {{{1|}}}
    | columns {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | references-column-width 
      | references-column-count references-column-count-{{#if:1|{{{1}}}}} }}
    | {{#if: {{{colwidth|}}}
      | references-column-width }} }}&quot; style=&quot;&lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | {{column-width|{{#if:1|{{{1}}}}}}}
      | {{column-count|{{#if:1|{{{1}}}}}}} }}
    | {{#if: {{{colwidth|}}}
      | {{column-width|{{{colwidth}}}}} }} }}&quot;&gt;&lt;!--
 --&gt;{{#if: {{{normalfont|}}}
    | [[Category:Pages using refbegin with normalfont parameter]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
{{/TemplateData}}
&lt;/noinclude&gt;</text>
      <sha1>jviesmg7qfir8shmypzzu26dk3g9eiw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Refend</title>
    <ns>10</ns>
    <id>10023179</id>
    <revision>
      <id>792167400</id>
      <parentid>772120878</parentid>
      <timestamp>2017-07-24T21:40:56Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>remove &lt;/dl&gt; since no &lt;dl&gt; in Template:Refbegin</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="246">&lt;includeonly&gt;&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{template doc|Template:refbegin/doc}}
{{TemplateDataHeader}}
&lt;templatedata&gt;
{
    &quot;description&quot;: &quot;Ends a reference lists started by {{refbegin}}.&quot;,
    &quot;params&quot;: {
    }
}
&lt;/templatedata&gt;
&lt;/noinclude&gt;</text>
      <sha1>kcrxzrf6v4rvbl0yhnfcb5labufpnsp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Reflist</title>
    <ns>10</ns>
    <id>7585648</id>
    <revision>
      <id>794499661</id>
      <parentid>794499298</parentid>
      <timestamp>2017-08-08T12:05:27Z</timestamp>
      <contributor>
        <username>Anomie</username>
        <id>301903</id>
      </contributor>
      <comment>Please stop, you apparently don't know what you're doing here and shouldn't fool around with heavily-used live templates. I'll post an explanation to the talk page momentarily.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1008">&lt;div class=&quot;reflist &lt;!--
 --&gt;{{#if: {{{1|}}} {{{colwidth|}}}
    | columns references-column-width
	}}&quot; style=&quot;&lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | {{column-width|1={{{1}}}}}
      | {{#switch:{{{1|}}}|1=|2={{column-width|1=30em}}|#default={{column-width|1=25em}}}} }}
    | {{#if: {{{colwidth|}}}
      | {{column-width|1={{{colwidth}}}}} }} }} list-style-type: &lt;!--
 --&gt;{{{liststyle|{{#switch: {{{group|}}}
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group}}}
    | #default = decimal}}}}};&quot;&gt;
{{#tag:references|{{{refs|}}}|group={{{group|}}}|responsive={{#if:{{{1|}}}{{{colwidth|}}}|0|1}}}}&lt;/div&gt;{{#invoke:Check for unknown parameters|check|unknown={{main other|[[Category:Pages using reflist with unknown parameters|_VALUE_{{PAGENAME}}]]}}|preview=Page using [[Template:Reflist]] with unknown parameter &quot;_VALUE_&quot;|ignoreblank=y| 1 | colwidth | group | liststyle | refs }}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2k096ppl7lxbcjqmfluu9x2sc91rmzl</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Replace</title>
    <ns>10</ns>
    <id>38650247</id>
    <revision>
      <id>772120877</id>
      <parentid>564920036</parentid>
      <timestamp>2017-03-25T12:38:46Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Replace]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (in...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="118">{{#invoke:String|replace|source={{{1}}}|{{{2}}}|{{{3}}}|count={{{count|}}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>oj2tscoy8898n76iv7osxnuvz9krei1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:SMS</title>
    <ns>10</ns>
    <id>19000394</id>
    <revision>
      <id>577888731</id>
      <parentid>255205591</parentid>
      <timestamp>2013-10-19T20:44:28Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:SMS: allow template editors to modify ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="255">&lt;includeonly&gt;{{ship|{{#if:{{{sub|}}}|SM|SMS}}|{{{1}}}|{{#if:{{{2|}}}|{{{2}}}}}|{{#if:{{{3|}}}|{{{3}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{template doc}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
{{pp-template|small=yes}}
&lt;/noinclude&gt;</text>
      <sha1>hicflmf2jogq285dxyqeorvh19k98gq</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sclass-</title>
    <ns>10</ns>
    <id>37274690</id>
    <revision>
      <id>553619822</id>
      <parentid>538395378</parentid>
      <timestamp>2013-05-05T12:02:52Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Sync to sandbox; Adds class-name disambiguation;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="142">&lt;includeonly&gt;{{sclass/core|{{{1}}}|{{{2}}}|{{{3|}}}|{{{4|}}}|{{{5|}}}|format=sclass-}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>nv6t09s32jkhech2c4w2k6zasqjtxwa</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sclass/core</title>
    <ns>10</ns>
    <id>37532400</id>
    <revision>
      <id>804996649</id>
      <parentid>802465491</parentid>
      <timestamp>2017-10-12T12:09:11Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>+ error cat;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1544">&lt;includeonly&gt;[[{{#switch:{{{format}}}
|sclass = {{{1}}} class {{{2}}} {{#if:{{{5|}}}|({{{5}}})}}{{!}}''{{{1}}}''
|sclass2 = {{{1}}} class {{{2}}} {{#if:{{{5|}}}|({{{5}}})}}{{!}}{{{1}}}
|sclass- = {{#if:1 | {{{1}}} }}-class {{{2}}} {{#if:{{{5|}}}|({{{5}}})}}{{!}}''{{#if:1 | {{{1}}} }}''
|sclass2- = {{#if:1 | {{{1}}} }}-class {{{2}}} {{#if:{{{5|}}}|({{{5}}})}}{{!}}{{#if:1 | {{{1}}} }}
}}{{#if: {{{3|}}} | {{#switch:{{{3|3}}}
|0 =-class]]
|1 =-class&amp;nbsp;{{{2}}}]]
|2 =-class]] {{{2}}}
|3 =-class]] [[{{#if:{{{4|}}}|{{{2}}} ({{{4}}}){{!}}{{{2}}}|{{{2}}}}}]]
|4 =&amp;nbsp;class]]
|5 =]]
|6 ={{#ifeq: {{{format}}} |sclass|-class&amp;nbsp;{{{2}}}]] |]] {{red|'''ERROR:''' invalid option {{{3}}}}}}}[[Category:WPSHIPS: sclass invalid option]]
|]] {{red|'''ERROR:''' invalid option {{{3}}}}}[[Category:WPSHIPS: sclass invalid option]]
}} | -class]] [[{{#if:{{{4|}}}|{{{2}}} ({{{4}}}){{!}}{{{2}}}|{{{2}}}}}]] }}{{#switch:{{{format}}}
|sclass = {{#ifeq:{{#invoke:Redirect|isRedirect|{{{1}}} class {{{2}}}}}|yes|
{{#if:{{#invoke:String|match|s={{#invoke:Redirect|main|{{{1}}} class {{{2}}}}} |pattern={{{1}}}%-class |plain=false |nomatch=}}|[[Category:WPSHIPS: sclass redirect]]}}}}
|sclass2 = {{#ifeq:{{#invoke:Redirect|isRedirect|{{{1}}} class {{{2}}}}}|yes|
{{#if:{{#invoke:String|match|s={{#invoke:Redirect|main|{{{1}}} class {{{2}}}}} |pattern={{{1}}}%-class |plain=false |nomatch=}}|[[Category:WPSHIPS: sclass2 redirect]]}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>2nfsqawlqbe23janwvvs3ncd78xfgtd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:See also</title>
    <ns>10</ns>
    <id>1721254</id>
    <revision>
      <id>763260609</id>
      <parentid>725632232</parentid>
      <timestamp>2017-02-02T05:40:25Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Updated from sandbox to use [[Module:Labelled list hatnote]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="199">&lt;includeonly&gt;{{#invoke:Labelled list hatnote|labelledList|See also}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>dn9i3dv2bt8lqifr6vkbycoya78rnav</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sfn</title>
    <ns>10</ns>
    <id>23092408</id>
    <revision>
      <id>772120894</id>
      <parentid>735583552</parentid>
      <timestamp>2017-03-25T12:38:46Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Sfn]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indefi...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">&lt;includeonly&gt;{{#invoke:Footnotes|sfn}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>dph4d78ri4yz9o2me1bhno2a113h471</sha1>
    </revision>
  </page>
  <page>
    <title>Template:SfnRef</title>
    <ns>10</ns>
    <id>25072600</id>
    <revision>
      <id>744219786</id>
      <parentid>533867813</parentid>
      <timestamp>2016-10-13T21:21:21Z</timestamp>
      <contributor>
        <username>Geni</username>
        <id>55582</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:SfnRef: locking down everything used on the Hillary page ([Edit=Require template editor access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="224">CITEREF{{#if:||{{anchorencode:{{{1|}}}}}}}{{#if:||{{anchorencode:{{{2|}}}}}}}{{#if:||{{anchorencode:{{{3|}}}}}}}{{#if:||{{anchorencode:{{{4|}}}}}}}{{#if:||{{anchorencode:{{{5|}}}}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ig1kziqy8yoiyqxckskh3r7zw2vyx80</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ship</title>
    <ns>10</ns>
    <id>2530840</id>
    <revision>
      <id>706806906</id>
      <parentid>651327948</parentid>
      <timestamp>2016-02-25T11:31:47Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <minor/>
      <comment>Synch from sandbox;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="760">&lt;noinclude&gt;{{Template sandbox notice}}&lt;/noinclude&gt;&lt;includeonly&gt;{{safesubst:#if:{{{up|}}}
| {{{1}}}&amp;#32;
}}[[{{safesubst:#if:{{{1|}}}|{{{1}}}&amp;#32;}}{{{2}}}{{safesubst:#if:{{{3|}}}| &amp;#32;({{{3}}})}}|{{safesubst:#switch:{{{4|7}}}
|1 = {{safesubst:#if:{{{3|}}}|{{{3}}}|Hull Number Missing}}
|2 = ''{{{2}}}''
|3 = ''{{{2}}}''&amp;nbsp;{{safesubst:#if:{{{3|}}}|({{{3}}})|Hull Number Missing}}
|4 = Invalid Optional Parameter
|5 = {{{1}}}&amp;nbsp;{{safesubst:#if:{{{3|}}}|({{{3}}})|Hull Number Missing}}
|6 = {{safesubst:#if:{{{1|}}}|{{{1}}}&amp;nbsp;}}''{{{2}}}''
| {{safesubst:#if:{{{1|}}}|{{{1}}}&amp;nbsp;}}''{{{2}}}''{{safesubst:#if:{{{3|}}}|&amp;nbsp;({{{3}}})}}
}}]]&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}} 
&lt;!-- Add categories to the /doc subpage, not here!  --&gt;
&lt;/noinclude&gt;</text>
      <sha1>pcnb6zwj4c7v6hdv4yay950zlj1zcy1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sic</title>
    <ns>10</ns>
    <id>3023388</id>
    <revision>
      <id>733697942</id>
      <parentid>573329636</parentid>
      <timestamp>2016-08-09T14:47:54Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Sic: Protecting admin inactive, allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="586">&lt;!--
 
Display the first two default parameters unless ?
  
--&gt;{{#ifeq:{{{1|?}}}|?|{{{2|}}}{{{3|}}}|{{{1|}}}{{{2|}}}}}&lt;!--

Display options for [sic] linked, unlinked(default) or hidden.

--&gt;{{#if:{{{hide|}}}||&amp;#32;&amp;#91;''{{#if:{{{nolink|}}}|sic|[[sic]]}}{{#ifeq:{{{1|}}}|?|?}}''&amp;#93;}}&lt;!--

Categorisation options. Currently disabled - see https://en.wikipedia.org/wiki/Help_talk:CS1_errors#.7B.7Bsic.7C.3F.7Cnolink.3Dy.7D.7D

--&gt;&lt;!--{{#ifeq:{{{1|}}}|?|{{#if:{{NAMESPACE}}||[[Category:Articles containing possible transcription errors]]}}}}--&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>8s7juujysdujm9nqndhogzys241u9do</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sidebar</title>
    <ns>10</ns>
    <id>1960394</id>
    <revision>
      <id>609956138</id>
      <parentid>609911857</parentid>
      <timestamp>2014-05-24T15:42:30Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>appears to work in testcases, deploy it live</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">&lt;includeonly&gt;{{#invoke:Sidebar|sidebar}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>2zokwtfwvucgrlrksr937kmldrijnwv</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Small</title>
    <ns>10</ns>
    <id>2385304</id>
    <revision>
      <id>772120953</id>
      <parentid>724652062</parentid>
      <timestamp>2017-03-25T12:38:48Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Small]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (inde...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="227">&lt;small&gt;{{{1}}}&lt;/small&gt;{{#if:{{{1|}}}||&lt;includeonly&gt;[[Category:Pages using small with an empty input parameter]]&lt;/includeonly&gt;}}&lt;noinclude&gt;
&lt;!--Categories and interwikis go in the /doc sub-page.--&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>96iwidee2498xqoreidy0ouswl2zp8o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Spoken Wikipedia-3</title>
    <ns>10</ns>
    <id>1775911</id>
    <revision>
      <id>804354558</id>
      <parentid>798841605</parentid>
      <timestamp>2017-10-08T12:57:41Z</timestamp>
      <contributor>
        <username>Nardog</username>
        <id>5908908</id>
      </contributor>
      <comment>implement a tracking category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="825">&lt;div id=&quot;section_SpokenWikipedia&quot; class=&quot;infobox sisterproject noprint&quot;&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;'''Listen to this article (3 parts){{}} [[:File:{{{2}}}|(info)]]'''&lt;/div&gt;
&lt;div style=&quot;text-align:center; font-size:90%; margin-bottom:.4em;&quot;&gt;''[[Media:{{{2}}}|Part 1]]&amp;nbsp; [[Media:{{{3}}}|Part 2]]&amp;nbsp; [[Media:{{{4}}}|Part 3]]''&lt;/div&gt;
{{Spoken Wikipedia boilerplate|{{{1}}}|{{{2}}} }}&lt;!-- tracking category begin --&gt;{{#if:{{{2|}}}|{{#ifexist:Media:{{{2}}}||[[Category:Pages linking to missing files]]}}{{#ifexist:Media:{{{3}}}||[[Category:Pages linking to missing files]]}}{{#ifexist:Media:{{{4}}}||[[Category:Pages linking to missing files]]}}}}&lt;!-- tracking category end --&gt;&lt;noinclude&gt;
{{convert to use Sidebar}}
[[Category:Title templates]]
[[Category:Templates that add a tracking category]]
&lt;/noinclude&gt;</text>
      <sha1>1b49zasntua0n2zrih1e4yo3cv0u6eh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Spoken Wikipedia boilerplate</title>
    <ns>10</ns>
    <id>4112363</id>
    <revision>
      <id>799467576</id>
      <parentid>799467527</parentid>
      <timestamp>2017-09-07T22:16:45Z</timestamp>
      <contributor>
        <username>Ahecht</username>
        <id>2016996</id>
      </contributor>
      <comment>rm extra &quot;article&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="887">&lt;div style=&quot;float: left; margin-left: 5px;&quot;&gt;[[Image:Sound-icon.svg|45px|none|alt=|link=|Spoken Wikipedia]]&lt;/div&gt;
&lt;div style=&quot;font-size: xx-small; line-height: 1.6em; margin-left: 60px;&quot;&gt;This audio file was created from a revision of the article &quot;&lt;span class=&quot;fn&quot;&gt;{{PAGENAME}}&lt;/span&gt;&quot; dated {{{1}}}, and does not reflect subsequent edits to the {{#if:{{NAMESPACE}}|page|article}}. ([[Wikipedia:Media help|Audio help]])&lt;/div&gt;
&lt;div style=&quot;text-align: center; clear: both&quot;&gt;'''[[{{SITENAME}}:Spoken articles|More spoken {{#if:{{NAMESPACE}}|page|article}}s]]'''&lt;/div&gt;
{{#if:{{NAMESPACE}}||[[Category:Spoken articles]]}}
&lt;/div&gt;
{{#if:{{NAMESPACE}}
 |
 | {{Top icon
  | imagename = Sound-icon.svg
  | wikilink  = {{#if:{{{2|}}}|File:{{{2}}}|Wikipedia:WikiProject Spoken Wikipedia}}
  | text      = Listen to this article
  | id        = spoken-icon
}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>g1ph7twevxiwfv8p4is35iyvbtbbp66</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Start and end dates</title>
    <ns>10</ns>
    <id>43490969</id>
    <revision>
      <id>803116691</id>
      <parentid>803116595</parentid>
      <timestamp>2017-09-30T15:21:15Z</timestamp>
      <contributor>
        <ip>240F:7:162B:1:809E:3252:89D5:9285</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1059">&lt;includeonly&gt;{{#if:{{{df|}}}
|{{#ifeq:{{{1}}}|{{{4}}}
  |{{#ifeq:{{{2}}}|{{{5}}}
     |{{#time:j|{{{1}}}-{{{2}}}-{{{3}}}}}{{#time:j&quot;&amp;nbsp;&quot;F&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
     |{{#time:j&quot;&amp;nbsp;&quot;F|{{{1}}}-{{{2}}}-{{{3}}}}}&amp;nbsp; {{#time:j&quot;&amp;nbsp;&quot;F&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
   }}
  |{{#time:j&quot;&amp;nbsp;&quot;F&quot;&amp;nbsp;&quot;Y|{{{1}}}-{{{2}}}-{{{3}}}}}&amp;nbsp; {{#time:j&quot;&amp;nbsp;&quot;F&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
}}
|{{#ifeq:{{{1}}}|{{{4}}}
  |{{#ifeq:{{{2}}}|{{{5}}}
     |{{#time:F&quot;&amp;nbsp;&quot;j|{{{1}}}-{{{2}}}-{{{3}}}}}{{#time:j,&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
     |{{#time:F&quot;&amp;nbsp;&quot;j|{{{1}}}-{{{2}}}-{{{3}}}}}&amp;nbsp; {{#time:F&quot;&amp;nbsp;&quot;j,&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
   }}
  |{{#time:F&quot;&amp;nbsp;&quot;j,&quot;&amp;nbsp;&quot;Y|{{{1}}}-{{{2}}}-{{{3}}}}}&amp;nbsp; {{#time:F&quot;&amp;nbsp;&quot;j,&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
}}
}}&lt;span style=&quot;display:none&quot;&gt; (&lt;span class=&quot;dtstart&quot;&gt;{{#time:Y-m-d|{{{1}}}-{{{2}}}-{{{3}}}}}&lt;/span&gt;&amp;nbsp; &lt;span class=&quot;dtend&quot;&gt;{{#time:Y-m-d|{{{4}}}-{{{5}}}-{{{6}}}}}&lt;/span&gt;)&lt;/span&gt;&lt;/includeonly&gt;&lt;noinclude&gt;

{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>coy3g5pfv0832qw035g62jx59ybso01</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Str left</title>
    <ns>10</ns>
    <id>21696393</id>
    <revision>
      <id>741880261</id>
      <parentid>605122708</parentid>
      <timestamp>2016-09-30T07:01:19Z</timestamp>
      <contributor>
        <username>Ymblanter</username>
        <id>14596827</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Str left: [[WP:High-risk templates|Highly visible template]]: RFPP request ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="184">&lt;includeonly&gt;{{safesubst:padleft:|{{{2|1}}}|{{{1}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>3rrdme1fpv80h1kdk9b7zwlkqd34dfk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Subject bar</title>
    <ns>10</ns>
    <id>30675556</id>
    <revision>
      <id>744219834</id>
      <parentid>672148295</parentid>
      <timestamp>2016-10-13T21:21:45Z</timestamp>
      <contributor>
        <username>Geni</username>
        <id>55582</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Subject bar: locking down everything used on the Hillary page ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="145">{{#invoke:subject bar|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>3butff6wb9tpwx5jw631dqgze314mh1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sup</title>
    <ns>10</ns>
    <id>825724</id>
    <revision>
      <id>772120948</id>
      <parentid>241733016</parentid>
      <timestamp>2017-03-25T12:38:48Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Sup]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indefi...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="151">&lt;includeonly&gt;&lt;sup&gt;{{{1}}}&lt;/sup&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add cats and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>p7jtnmtnj3q8sxqqsv78o732eq15smw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Tfm/dated</title>
    <ns>10</ns>
    <id>51277497</id>
    <revision>
      <id>771705123</id>
      <parentid>771634383</parentid>
      <timestamp>2017-03-23T01:25:42Z</timestamp>
      <contributor>
        <username>Jc86035</username>
        <id>17245768</id>
      </contributor>
      <minor/>
      <comment>restored nbsps</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2608">{{ {{{|safesubst:}}}#invoke:Unsubst||type= |page= |link= |help= |$B={{#ifeq:{{{bigbox|&lt;noinclude&gt;yes&lt;/noinclude&gt;}}}|yes|{{Ombox
  |type  = move
  |image = none
  |small = {{{small|no}}}
  |text  = {{#ifeq:{{PAGENAME}}|{{{page}}}
   |This [[Help:Template|template]]
   |[[Template:{{{page}}}]]
  }} is '''being considered for merging with [[Template:{{{otherpage}}}]].''' Please discuss this matter at [[{{{link}}}|'''this template's entry''']] at templates for discussion to help reach a consensus.
{{#ifeq:{{{help}}}|off||----
''&lt;small class=&quot;plainlinks&quot; style=&quot;line-height:1.3em;&quot;&gt;[[Wikipedia:Maintenance|Maintenance]] use only:&lt;br&gt;1. [{{fullurl:{{{link}}}|action=edit&amp;editintro=Wikipedia:Templates_for_discussion/editnotice&amp;section=1}} Edit the Tfd log] to create the discussion entry.&lt;br&gt;2. Please consider notifying the [{{fullurl:{{FULLPAGENAME}}|action=history}} author(s)] by placing &lt;span class=&quot;nowrap&quot;&gt;{{tlx|Tfmnotice|{{{page}}}|{{{otherpage}}}|subst=yes}} &lt;nowiki&gt;~~~~&lt;/nowiki&gt;&lt;/span&gt; on their talk page(s).&lt;/small&gt;''
 }}}}{{category handler
  | all = [[Category:Templates for merging]]
  | nocat = {{{nocat|{{#ifeq:{{FULLBASEPAGENAME}}|Template:Tfm|true}}}}}
  | category2 = {{{category|}}}
 }}|{{#switch:{{lc:{{{type}}}}}
 |tiny = &lt;span style=&quot;padding: 0; font-size: xx-small; font-weight: bold; color: #000000; background-color: #f9f9f9;&quot;&gt;[[{{{link}}}|See Tfd]]&lt;/span&gt;
 |inline = &lt;span style=&quot;padding: 0; font-size: xx-small; color: #000; border: 1px solid #aaa; background-color: #f9f9f9;&quot;&gt;The [[Help:Template|template]] ''[[Template:{{{page}}}|{{{page}}}]]'' is being [[{{{link}}}|considered for merging]].&lt;/span&gt;&amp;nbsp;
 |infobox|box|sidebar = &lt;div class=&quot;boilerplate metadata plainlinks&quot; id=&quot;tfd&quot; style=&quot;background-color: transparent; padding: 0 0.2em; color: #000; text-align: center; position: relative; float: right; border-bottom: 1px solid #AAAAAA; width: {{#if:{{{width|}}}|{{{width}}}|22em}}&quot;&gt;&lt;span style=&quot;font-size: xx-small;&quot;&gt;&amp;nbsp;The [[Help:Template|template]] ''[[Template:{{{page}}}|{{{page}}}]]'' is being [[{{{link}}}|considered for merging]].&amp;nbsp;&lt;/span&gt;&lt;/div&gt;
 |disabled = &lt;!-- No output --&gt;
 |#default = &lt;div class=&quot;boilerplate metadata plainlinks&quot; id=&quot;tfd&quot; style=&quot;background-color: transparent; padding: 0; font-size:xx-small; color:#000000; text-align: center; border-bottom:1px solid #AAAAAA;&quot;&gt;&amp;nbsp;The [[Help:Template|template]] below (''[[Template:{{{page}}}|{{{page}}}]]'') is being considered for merging. See [[{{{link}}}|templates for discussion]] to help reach a consensus.&amp;nbsp;&lt;/div&gt;
}}}}}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>qrcxu6ddqc7yicpuy8bksjrlvgxogye</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Tl</title>
    <ns>10</ns>
    <id>1487430</id>
    <revision>
      <id>776260390</id>
      <parentid>622723682</parentid>
      <timestamp>2017-04-19T22:28:34Z</timestamp>
      <contributor>
        <username>Lectonar</username>
        <id>128863</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Tl]]&quot;: request at rfp ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="168">&amp;#123;&amp;#123;[[Template:{{{1}}}|{{{1}}}]]&amp;#125;&amp;#125;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>h0vr3yvr9jdyd17x82vnav21ngwmxuk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Top icon</title>
    <ns>10</ns>
    <id>20101811</id>
    <revision>
      <id>723232837</id>
      <parentid>721870988</parentid>
      <timestamp>2016-06-01T20:45:03Z</timestamp>
      <contributor>
        <username>Debresser</username>
        <id>6999039</id>
      </contributor>
      <comment>Category detection not needed any more. About 1,000 userpages (and even a few articles!) fixes, only 3 left and their users have a message on their page.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="670">&lt;includeonly&gt;&lt;nowiki /&gt;&lt;!-- This nowiki tag helps prevent whitespace at the top of articles. --&gt;{{#tag:indicator
|[[File:{{{image|{{{imagename|}}}}}}|{{#if:{{{width|}}}|{{{width}}}|20}}x{{#if:{{{height|}}}|{{{height}}}|20}}px
 |{{#if:{{{link|{{{wikilink|}}}}}}|link={{{link|{{{wikilink}}}}}}}}
 |{{#if:{{{alt|}}}|alt={{{alt}}}}}
 |{{{text|{{{description|}}}}}}]]
|name = {{#if:{{{sortkey|}}}|{{{sortkey}}}-}}{{#if:{{{name|}}}|{{{name}}}|{{#if:{{{id|}}}|{{{id}}}|{{{image|{{{imagename|}}}}}}}}}}
}}{{Category handler
|user = {{{usercat|}}}
|main = {{{maincat|}}}
|subpage = {{{subpage|no}}}
|nocat = {{{nocat|}}}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>amdag3f7v9n3xfy83qtymnk8ejlp8qv</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Trim</title>
    <ns>10</ns>
    <id>21815705</id>
    <revision>
      <id>668935791</id>
      <parentid>412919929</parentid>
      <timestamp>2015-06-27T18:27:45Z</timestamp>
      <contributor>
        <username>Plastikspork</username>
        <id>5075409</id>
      </contributor>
      <comment>Merging [[Template:Strip whitespace]] per TfD</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="114">&lt;includeonly&gt;{{ {{{|safesubst:}}}#if:1|{{{x|{{{1|}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;

{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>h9devvk8f6nt34tp7zb17s39ge5wquh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Use British English</title>
    <ns>10</ns>
    <id>27566674</id>
    <revision>
      <id>784071094</id>
      <parentid>778226346</parentid>
      <timestamp>2017-06-06T09:05:31Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="144">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{DMCA|Use British English|from|{{{date|}}}}}
}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>k4i5jn2t0nisy1zb6e8ouv4snocf9n6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Use dmy dates</title>
    <ns>10</ns>
    <id>21044097</id>
    <revision>
      <id>784071134</id>
      <parentid>778226301</parentid>
      <timestamp>2017-06-06T09:05:49Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="138">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{DMCA|Use dmy dates|from|{{{date|}}}}}
}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>bp7zcbjc9uasbebcc8ijm5fqmeb3052</sha1>
    </revision>
  </page>
  <page>
    <title>Template:WWI history by nation</title>
    <ns>10</ns>
    <id>15664202</id>
    <revision>
      <id>801649453</id>
      <parentid>798519558</parentid>
      <timestamp>2017-09-21T00:00:06Z</timestamp>
      <contributor>
        <username>Neve-selbert</username>
        <id>25820411</id>
      </contributor>
      <minor/>
      <comment>Redirect bypass from [[History of the United Kingdom during the First World War]] to [[History of the United Kingdom during World War I]] using [[:en:Wikipedia:Tools/Navigation_popups|popups]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2521">{{Military navigation
| name = WWI history by nation
| title = [[Participants in World War I|History of World War I by region and country]]
| state = {{{state|autocollapse}}}
| style = wide
| listclass = hlist

|group1 = Africa
|list1 =
* [[German campaign in Angola|Angola]]
* [[East African Campaign (World War I)|East Africa]]
* [[Sinai and Palestine Campaign|Egypt]]
* [[Liberia in World War I|Liberia]]
* [[Zaian War|Morocco]]
* [[South West Africa campaign|South West Africa]]
* [[Southern Rhodesia in World War I|Southern Rhodesia]]

|group2 = North America
|list2 =
* [[Military history of Canada during World War I|Canada]]
* [[United States in World War I|United States]]

|group3 = South America
|list3 =
* [[Brazil during World War I|Brazil]]

|group4 = Asia
|list4 =
* [[Caucasus Campaign|Caucasus]]
* [[Indian Army during World War I|India]]
* [[Persian Campaign|Iran]]
* [[Mesopotamian campaign|Iraq]]
* [[Japan during World War I|Japan]]
* [[Sinai and Palestine Campaign|Levant]] 
* [[Siam in World War I|Siam]]
* [[History of Vietnam during World War I|Vietnam]]
* [[South Arabia during World War I|Yemen]]

|group5 = Europe
|list5 =
* [[Austria-Hungary during World War I|Austria-Hungary]]
* [[Belgium in World War I|Belgium]]
* [[Bulgaria during World War I|Bulgaria]]
* [[Croatia during World War I|Croatia]]
* [[German occupation of Estonia during World War I|Estonia]]
* [[French Army in World War I|France]]
* [[History of Germany during World War I|Germany]]
* [[Greece during World War I|Greece]]
* [[Hungary in World War I|Hungary]]
* [[Ireland and World War I|Ireland]]
* [[Military history of Italy during World War I|Italy]]
* [[German occupation of Luxembourg during World War I|Luxembourg]]
* [[History of Poland during World War I|Poland]]
* [[History of the Ottoman Empire during World War I|Ottoman Empire]]
* [[Portugal during World War I|Portugal]]
* [[Romania during World War I|Romania]]
* [[Eastern Front (World War I)|Russia]]
* [[Serbian_Campaign_of_World_War_I|Serbia]]
* [[Spain during World War I|Spain]]
* [[Sweden during World War I|Sweden]]
* [[Switzerland during the World Wars|Switzerland]]
* [[Ukraine during World War I|Ukraine]]
* [[History of the United Kingdom during World War I|United Kingdom]]

|group6 = Oceania
|list6 =
* [[Military history of Australia during World War I|Australia]]
* [[Military history of New Zealand during World War I|New Zealand]]

}}&lt;noinclude&gt;
{{collapsible option}}

[[Category:World War I navigational boxes|{{PAGENAME}}]]
&lt;/noinclude&gt;</text>
      <sha1>c0maf5gidy1bfqp2uc9qchlzhsd494x</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Webarchive</title>
    <ns>10</ns>
    <id>22577742</id>
    <revision>
      <id>769654926</id>
      <parentid>750709028</parentid>
      <timestamp>2017-03-10T21:29:55Z</timestamp>
      <contributor>
        <username>Rich Farmbrough</username>
        <id>82835</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="176">&lt;includeonly&gt;{{#invoke:webarchive|webarchive}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- PLEASE ADD CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS --&gt;
&lt;/noinclude&gt;</text>
      <sha1>af0jh9wqwfjf3uyx3ywwvb039disnpm</sha1>
    </revision>
  </page>
  <page>
    <title>Template:World War I</title>
    <ns>10</ns>
    <id>2622140</id>
    <revision>
      <id>805948074</id>
      <parentid>802818201</parentid>
      <timestamp>2017-10-18T17:29:37Z</timestamp>
      <contributor>
        <username>ImperatorPublius</username>
        <id>26945452</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11976">{{Military navigation
| name = World War I
| state = {{{state&lt;includeonly&gt;|{{{1|collapsed}}}&lt;/includeonly&gt;}}}
| style = wide
| title = [[World War I]]
| groupstyle = text-align:left;
| listclass = hlist


| aboveclass = hlist
| above = 
* [[Home front during World War I|Home fronts]]


&lt;!---------------------- Theatres -------------------------&gt;

| group1 = Theatres
| list1 =
 {{Military navigation|border=child|style=wide
  | groupstyle = width:8em;font-weight:normal;
  | liststyle = width:auto;

  | group1 = [[European theatre of World War I|European]]
  | list1 =
* [[Balkans Campaign (World War I)|Balkans]]
* [[Western Front (World War I)|Western Front]]
* [[Eastern Front (World War I)|Eastern Front]]
* [[Italian Front (World War I)|Italian Front]]

  | group2 = [[Middle Eastern theatre of World War I|Middle Eastern]]
  | list2 =
* [[Gallipoli Campaign|Gallipoli]]
* [[Sinai and Palestine Campaign|Sinai and Palestine]]
* [[Caucasus Campaign|Caucasus]]
* [[Persian Campaign|Persia]]
* [[Mesopotamian campaign|Mesopotamia]]
* [[South Arabia during World War I|South Arabia]]

  | group3 = [[African theatre of World War I|African]]
  | list3 =
* [[South-West Africa campaign|South-West]]
* [[East African Campaign (World War I)|East]]
* [[Kamerun Campaign|Kamerun]]
* [[Togoland Campaign|Togoland]]
* [[Military operations in North Africa during World War I|North]]

  | group4 = [[Asian and Pacific theatre of World War I|Asian and Pacific]]
  | list4 =
* [[Siege of Tsingtao|Tsingtao]]
* [[Occupation of German Samoa|German New Guinea and Samoa]]

  | group5 = [[Naval warfare of World War I|At sea]]
  | list5 =
* [[Atlantic U-boat campaign of World War I|North Atlantic U-boat campaign]]
* [[Naval warfare in the Mediterranean during World War I|Mediterranean]]
* [[Naval warfare of World War I#North Sea|North Sea]]
* [[Naval warfare of World War I#Baltic Sea|Baltic]] 

&lt;!--------- Spacer ----------&gt;
* Indian, Pacific and South Atlantic Oceans
** [[Bombardment of Papeete|Papeete]]
** [[Bombardment of Madras|Madras]]
** [[Battle of Penang|Penang]] 
** [[Battle of Cocos|Cocos]]
** [[Battle of Coronel|Coronel]]
** [[Battle of the Falkland Islands|Falkland Islands]]
** [[Battle of Ms a Tierra|Ms a Tierra]]
 }}


&lt;!-------------------- Participants -----------------------&gt;

| group2 = {{longitem|[[Participants in World War I|Principal&lt;br/&gt;participants]]&lt;br/&gt;{{nobold|([[List of people associated with World War I|people]])}}}}
| list2  =
 {{Military navigation|border=child|style=wide
  | groupstyle = width:8em;font-weight:normal;
  | liststyle = width:auto;

  | group1 = [[Allies of World War I|Entente powers]]
  | list1 =
* [[Belgium in World War I|Belgium]]
* [[Brazil during World War I|Brazil]]
* [[History of the Republic of China#World War I and brief Manchu restoration|China]]
* [[French Army in World War I|France]]
** [[French colonial empire|French Empire]]
* [[Greece during World War I|Greece]]
* [[Military history of Italy during World War I|Italy]]
* [[Japan during World War I|Japan]]
* [[History of Montenegro#First World War|Montenegro]]
* [[Portugal during World War I|Portuguese Empire]]
* [[Romania during World War I|Romania]]
* [[Eastern Front (World War I)|Russia]]
** [[History of Russia (18921917)#Russia at war, 19141916|Russian Empire]]
** [[Russian Republic]]
* [[History of Serbia#Serbia in World War I|Serbia]]
* [[History of the United Kingdom during World War I|United Kingdom]]
** [[British Empire]]
* [[United States in World War I|United States]]

  | group2 = [[Central Powers]]
  | list2 =
* [[History of Germany during World War I|Germany]] 
&lt;!-------------------- Spacer -----------------------&gt;
* [[Austria-Hungary#World_War_I|Austria-Hungary]]
* [[Defeat and dissolution of the Ottoman Empire#World War I|Ottoman Empire]]
* [[Bulgaria during World War I|Bulgaria]]
  }}


&lt;!---------------------- Timeline -------------------------&gt;

| group3 = [[Timeline of World War I|Timeline]]
| list3 =
 {{Military navigation|border=child|style=wide
  | groupstyle = width:8em;font-weight:normal;
  | liststyle = width:auto;

  | group1 = Pre-War conflicts
  | list1 =
* [[Scramble for Africa]] (18801914)
* [[Russo-Japanese War]] (1905)
* [[First Moroccan Crisis|First Moroccan (Tangier) Crisis]] (190506)
* [[Agadir Crisis]] (1911)
* [[Italo-Turkish War]] (191112)
* [[French conquest of Morocco]] (191112)
* [[First Balkan War]] (191213)
* [[Second Balkan War]] (1913)

  | group2 = Prelude
  | list2 =
* [[Causes of World War I|Origins]]
* [[Assassination of Archduke Franz Ferdinand of Austria|Sarajevo assassination]]
* [[Anti-Serb riots in Sarajevo]]
* [[July Crisis]]

  | group3 = Autumn 1914
  | list3 =
* [[Battle of the Frontiers]]
* [[Battle of Cer]]
* [[First Battle of the Marne]]
* [[Siege of Tsingtao]]
* [[Battle of Tannenberg]]
* [[Battle of Galicia]]
* [[First Battle of the Masurian Lakes|Battle of the Masurian Lakes]]
* [[Battle of Kolubara]]
* [[Battle of Sarikamish]]
* [[Race to the Sea]]
* [[First Battle of Ypres]]

  | group4 = 1915
  | list4 =
* [[Second Battle of the Masurian Lakes]]
* [[Second Battle of Ypres]]
* [[Gallipoli Campaign|Battle of Gallipoli]]
* [[Second Battle of Artois]]
* [[Battles of the Isonzo]]
* [[Gorlice-Tarnw Offensive]]
* [[Great Retreat (Russian)|Great Retreat]]
* [[Second Battle of Champagne]]
* [[Kosovo Offensive (1915)|Kosovo Offensive]]
* [[Siege of Kut]]
* [[Battle of Loos]]

  | group5 = 1916
  | list5 =
* [[Erzurum Offensive]]
* [[Battle of Verdun]]
* [[Lake Naroch Offensive]]
* [[Battle of Asiago]]
* [[Battle of Jutland]]
* [[Battle of the Somme]]
** [[First day on the Somme|first day]]
* [[Brusilov Offensive]]
* [[Baranovichi Offensive]]
* [[Battle of Romani]]
* [[Monastir Offensive]]
* [[Battle of Transylvania]]

  | group6 = 1917
  | list6 =
* [[Fall of Baghdad (1917)|Capture of Baghdad]]
* [[First Battle of Gaza]]
* [[Zimmermann Telegram]]
* [[Battle of Arras (1917)|Second Battle of Arras]]
* [[Second Battle of the Aisne]]
* [[Kerensky Offensive]]
* [[Battle of Passchendaele|Third Battle of Ypres (Passchendaele)]]
* [[Battle of Mreti]]
* [[Battle of Caporetto]]
* [[Southern Palestine Offensive]]
* [[Battle of Cambrai (1917)|Battle of Cambrai]]
* [[Armistice of Erzincan]]

  | group7 = 1918
  | list7 =
* [[Operation Faustschlag]]
* [[Treaty of Brest-Litovsk]]
* [[Spring Offensive]]
* [[Second Battle of the Marne]]
* [[Battle of Baku]]
* [[Hundred Days Offensive]]
* [[Vardar Offensive]]
* [[Battle of Megiddo (1918)|Battle of Megiddo]]
* [[Third Transjordan attack]]
* [[Meuse-Argonne Offensive]]
* [[Battle of Vittorio Veneto]]
* [[Battle of Aleppo (1918)|Battle of Aleppo]]
* [[Armistice of Salonica]]
* [[Armistice of Mudros]]
* [[Armistice of Villa Giusti]]
* [[Armistice of 11 November 1918|Armistice with Germany]]

  | group8 = Other conflicts
  | list8 =
* [[Mexican Revolution]] (191020)
* [[Somaliland Campaign]] (191020)
* [[Libyan resistance movement]] (191143)
* [[Maritz rebellion|Maritz Rebellion]] (191415)
* [[Zaian War]] (191421)
* [[HinduGerman Conspiracy|Indo-German Conspiracy]] (191419)
* [[Senussi Campaign]] (191516)
* [[Volta-Bani War]] (191517)
* [[Easter Rising]] (1916)
* [[Anglo-Egyptian Darfur Expedition]] (1916)
* [[Kaocen revolt|Kaocen Revolt]] (191617)
* [[Russian Revolution]] (1917)
* [[Finnish Civil War]] (1918)

  | group9 = Post-War conflicts 
  | list9 =
* [[Russian Civil War]] (191721)
* [[UkrainianSoviet War]] (191721)
* [[ArmenianAzerbaijani War]] (191820)
* [[GeorgianArmenian War]] (1918)
* [[German Revolution of 191819|German Revolution]] (191819)
* [[Revolutions and interventions in Hungary (191820)|Revolutions and interventions in Hungary]] (191820)
* [[HungarianRomanian War]] (191819)
* [[Greater Poland Uprising (191819)|Greater Poland Uprising]] (191819)
* [[Estonian War of Independence]] (191820)
* [[Latvian War of Independence]] (191820)
* [[Lithuanian Wars of Independence]] (191820)
&lt;!-------------------- Spacer -----------------------&gt;
* [[Third Anglo-Afghan War]] (1919)
* [[Egyptian revolution of 1919|Egyptian Revolution]] (1919)
* [[PolishUkrainian War]] (191819)
* [[PolishSoviet War]] (191921)
* [[Irish War of Independence]] (191921)
* [[Turkish War of Independence]]
** [[Greco-Turkish War (191922)|Greco-Turkish War]] (191923)
** [[TurkishArmenian War]] (1920)
&lt;!-------------------- Spacer -----------------------&gt;
* [[Iraqi revolt against the British|Iraqi revolt]] (1920)
* [[PolishLithuanian War]] (1920)
* [[Vlora War]] (1920)
* [[Franco-Syrian War]] (1920)
* [[Red Army invasion of Georgia|SovietGeorgian War]] (1921)
* [[Irish Civil War]] (192223)
 }}


&lt;!----------------------- Aspects -------------------------&gt;

| group4 = Aspects
| list4  =
 {{Military navigation|border=child|style=wide
  | groupstyle = width:8em;font-weight:normal;
  | liststyle = width:auto;

  | group1 = [[Opposition to World War I|Opposition]]
  | list1 = 
* [[Pacifism#World_War_I|Pacifism]]
* [[Anti-war movement#World War I|Anti-war movement]]

  | group2 = Deployment
  | list2 =
* [[Schlieffen Plan]] (German)
* [[Plan XVII]] (French)

  | group3 = Warfare
  | list3 =
* [[List of military engagements of World War I|Military engagements]]
* [[Naval warfare of World War I|Naval warfare]]
* [[Convoys in World War I|Convoy system]]
* [[Aviation in World War I|Air warfare]]
* [[World War I cryptography|Cryptography]]
** [[Room 40]]
* [[Horses in World War I|Horse use]]
* [[Chemical weapons in World War I|Poison gas]]
* [[War Department Light Railways|Railways]]
* [[Strategic bombing during World War I|Strategic bombing]]
* [[Technology during World War I|Technology]]
* [[Trench warfare]]
* [[Total war]]
* [[Christmas truce]]
* [[List of last World War I veterans by country|Last surviving veterans]]

  | group4 = {{longitem|Civilian impact&lt;br/&gt;Atrocities&lt;br/&gt;Prisoners}}
  | list4 =
* [[World War I casualties|Casualties]]
* [[Economic history of World War I|Economic history]]
* [[1918 flu pandemic]]
* [[Destruction of Kalisz]]
* [[Rape of Belgium]]
* [[German occupation of Belgium during World War I|German occupation of Belgium]]
* [[German occupation of Luxembourg during World War I|German occupation of Luxembourg]]
* [[German occupation of north-east France during World War I|German occupation of northeastern France]]
* [[Ober Ost]]
* [[Ottoman casualties of World War I|Ottoman people]]
** [[Armenian Genocide]]
** [[Assyrian genocide]]
** [[Greek genocide|Pontic Greek genocide]]
* [[Blockade of Germany]]
* [[Women in World War I|Women]]
** [[Australian women in World War I|Australia]]
* [[World War I in popular culture|Popular culture]]
* [[German prisoners of war in the United States]]

  | group5 = {{longitem|Agreements}}
  | list5 =
* [[Partitioning of the Ottoman Empire]]
* [[SykesPicot Agreement]]
* [[Agreement of Saint-Jean-de-Maurienne]]
* [[French Armenian Legion|French-Armenian Agreement]]
* [[Damascus Protocol|Damascus Protocol]]
* [[Paris Peace Conference, 1919|Paris Peace Conference]]
* [[VenizelosTittoni agreement]]

  | group6 = {{longitem|Treaties}}
  | list6 =
* [[Treaty of Brest-Litovsk]]
* [[Treaty of Lausanne]]
* [[Treaty of London (1915)|Treaty of London]]
* [[Treaty of Neuilly-sur-Seine|Treaty of Neuilly]]
* [[Treaty of Saint-Germain-en-Laye (1919)|Treaty of St. Germain]]
* [[Treaty of Svres]]
* [[Treaty of Trianon]]
* [[Treaty of Versailles]]

  | group7 = Consequences
  | list7 =
* [[Aftermath of World War I|Aftermath]]
* &quot;[[Fourteen Points]]&quot;
* [[League of Nations]]
* [[World War I memorials]]
* [[First World War centenary|Centenary]]
** [[Centenary of the outbreak of World War I|outbreak]]
 }}


| belowclass = hlist
| below = 
* [[:Category:World War I|Category]]
* [[Portal:World War I|Portal]]

}}&lt;noinclude&gt;
{{collapsible option |statename=optional |default=collapsed}}

[[Category:World War I navigational boxes| ]]
&lt;/noinclude&gt;</text>
      <sha1>ila95ehkyg1bape3jsxcfhy5idpzm6c</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Yesno</title>
    <ns>10</ns>
    <id>22255088</id>
    <revision>
      <id>669640856</id>
      <parentid>391649268</parentid>
      <timestamp>2015-07-02T14:46:21Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <comment>add support for true/false, per request</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="355">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#switch: {{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;lc: {{{1|}}} }}
 |no
 |n
 |false
 |0        = {{{no|&lt;!-- null --&gt;}}}
 |         = {{{blank|{{{no|&lt;!-- null --&gt;}}}}}}
 |        = {{{|}}}
 |yes
 |y
 |true
 |1        = {{{yes|yes}}}
 |#default = {{{def|{{{yes|yes}}}}}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2mck1f9936qc4xwrhvyhyan994ced9o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Yesno-no</title>
    <ns>10</ns>
    <id>48375573</id>
    <revision>
      <id>804450734</id>
      <parentid>772215751</parentid>
      <timestamp>2017-10-09T02:26:13Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Yesno-no]]&quot;: [[WP:High-risk templates|Highly visible template]]; 282,000+ transclusions ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="317">&lt;noinclude&gt;{{pp-template|small=yes}}&lt;/noinclude&gt;{{safesubst:&lt;noinclude /&gt;yesno|{{{1}}}|yes={{{yes|yes}}}|no={{{no|no}}}|blank={{{blank|no}}}|={{{|no}}}|def={{{def|no}}}}}&lt;noinclude&gt;
{{Documentation|Template:Yesno/doc}}
&lt;!--Categories go in the doc page referenced above; interwikis go in Wikidata.--&gt;
&lt;/noinclude&gt;</text>
      <sha1>axdkqes1fzx1wl8jcihjv6i0yujbx8h</sha1>
    </revision>
  </page>
  <page>
    <title>Template:YouTube</title>
    <ns>10</ns>
    <id>5579775</id>
    <revision>
      <id>761470977</id>
      <parentid>755450633</parentid>
      <timestamp>2017-01-23T04:12:31Z</timestamp>
      <contributor>
        <username>JJMC89</username>
        <id>24812038</id>
      </contributor>
      <comment>{{PAGENAMEBASE}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2425">[https://www.youtube.com/{{#if:{{{user|{{{u|}}}}}}
 |user/{{{user|{{{u|}}}}}} {{#if:{{{title|{{{1|}}}}}}|&lt;span class=&quot;plainlinks&quot;&gt;{{{title|{{{1}}}}}}&lt;/span&gt;|{{PAGENAMEBASE}}}}{{{suffix|'s}}} channel]
 |{{#if:{{{channel|{{{c|}}}}}}
  |channel/{{{channel|{{{c|}}}}}} {{#if:{{{title|{{{1|}}}}}}|&lt;span class=&quot;plainlinks&quot;&gt;{{{title|{{{1}}}}}}&lt;/span&gt;|{{PAGENAMEBASE}}}}{{{suffix|'s}}} channel]
  |{{#if:{{{show|{{{s|}}}}}}
   |show/{{{show|{{{s|}}}}}} {{#if:{{{title|{{{1|}}}}}}|&lt;span class=&quot;plainlinks&quot;&gt;{{{title|{{{1}}}}}}&lt;/span&gt;|''{{PAGENAMEBASE}}''}}] show
   |{{#if:{{{playlist|{{{p|}}}}}}
    |playlist?list={{{playlist|{{{p|}}}}}} {{#if:{{{title|{{{1|}}}}}}|&lt;span class=&quot;plainlinks&quot;&gt;{{{title|{{{1}}}}}}&lt;/span&gt;|{{PAGENAMEBASE}}}}] playlist
    |{{#if:{{{id|{{{1&lt;includeonly&gt;|&lt;/includeonly&gt;}}}}}}
     |watch?v={{Trim|{{{id|{{{1|}}}}}}}} {{#if:{{{title|}}}|&lt;span class=&quot;plainlinks&quot;&gt;{{{title}}}&lt;/span&gt;|{{#if:{{{id|}}}|{{#if:{{{1|}}}|&lt;span class=&quot;plainlinks&quot;&gt;{{{1}}}&lt;/span&gt;|Video}}|{{#if:{{{2|}}}|&lt;span class=&quot;plainlinks&quot;&gt;{{{2}}}&lt;/span&gt;|Video}}}}}}]
     | {{error|Error:No page id specified}}]{{Namespace detect
  |talk=|wikipedia=|help=|template=|module=
  |other=[[Category:Articles using YouTube with invalid parameters]]
     }}
    }}
   }}
  }}
 }}
}} on {{#ifeq:{{{link}}}|no
 |YouTube
 |[[YouTube]]
}}{{#ifexpr:{{#expr:
  {{#if:{{{user|}}}|1|0}}+
  {{#if:{{{u|}}}|1|0}}+
  {{#if:{{{channel|}}}|1|0}}+
  {{#if:{{{c|}}}|1|0}}+
  {{#if:{{{show|}}}|1|0}}+
  {{#if:{{{s|}}}|1|0}}+
  {{#if:{{{playlist|}}}|1|0}}+
  {{#if:{{{p|}}}|1|0}}+
  {{#if:{{{id|}}}|1|0}}+
  {{#if:{{{2|}}}|1|0}}+
  {{#if:{{{title|}}}|{{#if:{{{1|{{{2|}}}}}}|1|0}}|0}}
 }}&gt;1
 |{{Namespace detect
  |talk=|wikipedia=|help=|template=|module=
  |other=[[Category:Articles using YouTube with invalid parameters]]
 }}
}}{{#if:{{{user|}}}{{{u|}}}{{{channel|}}}{{{c|}}}
 ||{{#ifeq:{{{suffix|}}}|
  ||{{Namespace detect
   |talk=|wikipedia=|help=|template=|module=
   |other=[[Category:Articles using YouTube with invalid parameters]]
  }}
 }}
}}{{#invoke:Check for unknown parameters|check|unknown={{Namespace detect|talk=|wikipedia=|help=|template=|module=|other=[[Category:Pages using YouTube with unknown parameters|_VALUE_{{PAGENAME}}]]}}|preview=Page using [[Template:YouTube]] with unknown parameter &quot;_VALUE_&quot;|ignoreblank=y| 1 | 2 | c | channel | id | link | p | playlist | s | show | suffix | title | u | user }}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>kghonlxq8du2gy42s8jmw20ryc3uhrk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:</title>
    <ns>10</ns>
    <id>7599646</id>
    <revision>
      <id>636441209</id>
      <parentid>612824946</parentid>
      <timestamp>2014-12-03T10:06:52Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>move bold tag</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="139">&amp;nbsp;&lt;b&gt;&amp;middot;&lt;/b&gt;&amp;#32;&lt;noinclude&gt;

{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>m6es8khirlfrhpczjy4j6v6cxs2jadq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Aligned table</title>
    <ns>828</ns>
    <id>41873595</id>
    <revision>
      <id>796397183</id>
      <parentid>755158064</parentid>
      <timestamp>2017-08-20T15:26:33Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>even/odd rowstyles</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5697">-- This module implements {{aligned table}}
local p = {}

local function isnotempty(s)
	return s and s:match( '^%s*(.-)%s*$' ) ~= ''
end

function p.table(frame)
	local args = (frame.args[3] ~= nil) and frame.args or frame:getParent().args
	local entries = {}
	local colclass = {}
	local colstyle = {}
	local cols = tonumber(args['cols']) or 2

	-- create the root table
	local root = mw.html.create('table')

	-- add table style for fullwidth
	if isnotempty(args['fullwidth']) then
		root
			:css('width', '100%')
			:css('border-collapse', 'collapse')
			:css('border-spacing', '0px 0px')
			:css('border', 'none')
	end

	-- add table classes
	if isnotempty(args['class']) then
		root:addClass(args['class'])
	end

	-- add table style
	if isnotempty(args['style']) then
		root:cssText(args['style'])
	end

	-- build arrays with the column styles and classes
	if isnotempty(args['leftright']) then
		colstyle[1] = 'text-align:left;'
		colstyle[2] = 'text-align:right;'
	end
	for i = 1,cols do
		colclass[ i ] = colclass[ i ] or ''
		colstyle[ i ] = colstyle[ i ] or ''
		if isnotempty(args['colstyle']) then
			colstyle[ i ] = args['colstyle'] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colalign' .. tostring(i)]) then
			colstyle[ i ] = 'text-align:' .. args['colalign' .. tostring(i)] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'align']) then
			colstyle[ i ] = 'text-align:' .. args['col' .. tostring(i) .. 'align'] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['align' .. tostring(i)]) then
			colstyle[ i ] = 'text-align:' .. args['align' .. tostring(i)] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colnowrap' .. tostring(i)]) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'nowrap']) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		elseif isnotempty(args['nowrap' .. tostring(i)]) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		end
		if isnotempty(args['colwidth' .. tostring(i)]) then
			colstyle[ i ] = 'width:' .. args['colwidth' .. tostring(i)] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'width']) then
			colstyle[ i ] = 'width:' .. args['col' .. tostring(i) .. 'width'] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['colwidth']) then
			colstyle[ i ] = 'width:' .. args['colwidth'] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colstyle' .. tostring(i)]) then
			colstyle[ i ] = colstyle[ i ] .. args['colstyle' .. tostring(i)]
		elseif isnotempty(args['col' .. tostring(i) .. 'style']) then
			colstyle[ i ] = colstyle[ i ] .. args['col' .. tostring(i) .. 'style']
		elseif isnotempty(args['style' .. tostring(i)]) then
			colstyle[ i ] = colstyle[ i ] .. args['style' .. tostring(i)]
		end
		if isnotempty(args['colclass' .. tostring(i)]) then
			colclass[ i ] =  args['colclass' .. tostring(i)]
		elseif isnotempty(args['col' .. tostring(i) .. 'class']) then
			colclass[ i ] =  args['col' .. tostring(i) .. 'class']
		elseif isnotempty(args['class' .. tostring(i)]) then
			colclass[ i ] =  args['class' .. tostring(i)]
		end
	end
	-- compute the maximum cell index
	local cellcount = 0
	for k, v in pairs( args ) do
		if type( k ) == 'number' then
			cellcount = math.max(cellcount, k)
		end
	end
	-- compute the number of rows
	local rows = math.ceil(cellcount / cols)

	-- build the table content
	if isnotempty(args['title']) then
		local caption = root:tag('caption')
		caption:cssText(args['titlestyle'])
		caption:wikitext(args['title'])
	end
	if isnotempty(args['above']) then
		local row = root:tag('tr')
		local cell = row:tag('th')
		cell:attr('colspan', cols)
		cell:cssText(args['abovestyle'])
		cell:wikitext(args['above'])
	end
	for j=1,rows do
		-- start a new row
		local row = root:tag('tr')
		if isnotempty(args['rowstyle']) then
			row:cssText(args['rowstyle'])
		else
			row:css('vertical-align', 'top')
		end
		-- loop over the cells in the row
		for i=1,cols do
			local cell
			if isnotempty(args['row' .. tostring(j) .. 'header']) then
				cell = row:tag('th'):attr('scope','col')
			elseif isnotempty(args['col' .. tostring(i) .. 'header']) then
				cell = row:tag('th'):attr('scope','row')
			else
				cell = row:tag('td')
			end
			if args['class' .. tostring(j) .. '.' .. tostring(i)] then
				cell:addClass(args['class' .. tostring(j) .. '.' .. tostring(i)])
			else
				if args['rowclass' .. tostring(j)] then
					cell:addClass(args['rowclass' .. tostring(j)])
				elseif args['row' .. tostring(j) .. 'class'] then
					cell:addClass(args['row' .. tostring(j) .. 'class'])
				elseif args['rowevenclass'] and math.fmod(j,2) == 0 then
					cell:addClass(args['rowevenclass'])
				elseif args['rowoddclass'] and math.fmod(j,2) == 1 then	
					cell:addClass(args['rowoddclass'])
				end
				if colclass[i] ~= '' then
					cell:addClass(colclass[i])
				end
			end
			if args['style' .. tostring(j) .. '.' .. tostring(i)] then
				cell:cssText(args['style' .. tostring(j) .. '.' .. tostring(i)])
			else
				if args['rowstyle' .. tostring(j)] then
					cell:cssText(args['rowstyle' .. tostring(j)])
				elseif args['rowevenstyle'] and math.fmod(j,2) == 0 then
					cell:cssText(args['rowevenstyle'])
				elseif args['rowoddstyle'] and math.fmod(j,2) == 1 then	
					cell:cssText(args['rowoddstyle'])
				elseif args['row' .. tostring(j) .. 'style'] then
					cell:cssText(args['row' .. tostring(j) .. 'style'])
				end
				if isnotempty(colstyle[i]) then
					cell:cssText(colstyle[i])
				end
			end
			cell:wikitext(mw.ustring.gsub(args[cols*(j - 1) + i] or '', '^(.-)%s*$', '%1') or '')
		end
	end
	-- return the root table
	return tostring(root)
end

return p</text>
      <sha1>o4d457cy79tvvxs2d2fc2e8bxgel3bq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Arguments</title>
    <ns>828</ns>
    <id>41298065</id>
    <revision>
      <id>696500078</id>
      <parentid>668829606</parentid>
      <timestamp>2015-12-23T16:07:27Z</timestamp>
      <contributor>
        <username>Xaosflux</username>
        <id>502540</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Module:Arguments: used in the mediawiki interface ex: [[MediaWiki:Watchlist-details]] ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10054">-- This module provides easy processing of arguments passed to Scribunto from
-- #invoke. It is intended for use by other Lua modules, and should not be
-- called from #invoke directly.

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType

local arguments = {}

-- Generate four different tidyVal functions, so that we don't have to check the
-- options every time we call it.

local function tidyValDefault(key, val)
	if type(val) == 'string' then
		val = val:match('^%s*(.-)%s*$')
		if val == '' then
			return nil
		else
			return val
		end
	else
		return val
	end
end

local function tidyValTrimOnly(key, val)
	if type(val) == 'string' then
		return val:match('^%s*(.-)%s*$')
	else
		return val
	end
end

local function tidyValRemoveBlanksOnly(key, val)
	if type(val) == 'string' then
		if val:find('%S') then
			return val
		else
			return nil
		end
	else
		return val
	end
end

local function tidyValNoChange(key, val)
	return val
end

local function matchesTitle(given, title)
	local tp = type( given )
	return (tp == 'string' or tp == 'number') and mw.title.new( given ).prefixedText == title
end

local translate_mt = { __index = function(t, k) return k end }

function arguments.getArgs(frame, options)
	checkType('getArgs', 1, frame, 'table', true)
	checkType('getArgs', 2, options, 'table', true)
	frame = frame or {}
	options = options or {}

	--[[
	-- Set up argument translation.
	--]]
	options.translate = options.translate or {}
	if getmetatable(options.translate) == nil then
		setmetatable(options.translate, translate_mt)
	end
	if options.backtranslate == nil then
		options.backtranslate = {}
		for k,v in pairs(options.translate) do
			options.backtranslate[v] = k
		end
	end
	if options.backtranslate and getmetatable(options.backtranslate) == nil then
		setmetatable(options.backtranslate, {
			__index = function(t, k)
				if options.translate[k] ~= k then
					return nil
				else
					return k
				end
			end
		})
	end

	--[[
	-- Get the argument tables. If we were passed a valid frame object, get the
	-- frame arguments (fargs) and the parent frame arguments (pargs), depending
	-- on the options set and on the parent frame's availability. If we weren't
	-- passed a valid frame object, we are being called from another Lua module
	-- or from the debug console, so assume that we were passed a table of args
	-- directly, and assign it to a new variable (luaArgs).
	--]]
	local fargs, pargs, luaArgs
	if type(frame.args) == 'table' and type(frame.getParent) == 'function' then
		if options.wrappers then
			--[[
			-- The wrappers option makes Module:Arguments look up arguments in
			-- either the frame argument table or the parent argument table, but
			-- not both. This means that users can use either the #invoke syntax
			-- or a wrapper template without the loss of performance associated
			-- with looking arguments up in both the frame and the parent frame.
			-- Module:Arguments will look up arguments in the parent frame
			-- if it finds the parent frame's title in options.wrapper;
			-- otherwise it will look up arguments in the frame object passed
			-- to getArgs.
			--]]
			local parent = frame:getParent()
			if not parent then
				fargs = frame.args
			else
				local title = parent:getTitle():gsub('/sandbox$', '')
				local found = false
				if matchesTitle(options.wrappers, title) then
					found = true
				elseif type(options.wrappers) == 'table' then
					for _,v in pairs(options.wrappers) do
						if matchesTitle(v, title) then
							found = true
							break
						end
					end
				end

				-- We test for false specifically here so that nil (the default) acts like true.
				if found or options.frameOnly == false then
					pargs = parent.args
				end
				if not found or options.parentOnly == false then
					fargs = frame.args
				end
			end
		else
			-- options.wrapper isn't set, so check the other options.
			if not options.parentOnly then
				fargs = frame.args
			end
			if not options.frameOnly then
				local parent = frame:getParent()
				pargs = parent and parent.args or nil
			end
		end
		if options.parentFirst then
			fargs, pargs = pargs, fargs
		end
	else
		luaArgs = frame
	end

	-- Set the order of precedence of the argument tables. If the variables are
	-- nil, nothing will be added to the table, which is how we avoid clashes
	-- between the frame/parent args and the Lua args.
	local argTables = {fargs}
	argTables[#argTables + 1] = pargs
	argTables[#argTables + 1] = luaArgs

	--[[
	-- Generate the tidyVal function. If it has been specified by the user, we
	-- use that; if not, we choose one of four functions depending on the
	-- options chosen. This is so that we don't have to call the options table
	-- every time the function is called.
	--]]
	local tidyVal = options.valueFunc
	if tidyVal then
		if type(tidyVal) ~= 'function' then
			error(
				&quot;bad value assigned to option 'valueFunc'&quot;
					.. '(function expected, got '
					.. type(tidyVal)
					.. ')',
				2
			)
		end
	elseif options.trim ~= false then
		if options.removeBlanks ~= false then
			tidyVal = tidyValDefault
		else
			tidyVal = tidyValTrimOnly
		end
	else
		if options.removeBlanks ~= false then
			tidyVal = tidyValRemoveBlanksOnly
		else
			tidyVal = tidyValNoChange
		end
	end

	--[[
	-- Set up the args, metaArgs and nilArgs tables. args will be the one
	-- accessed from functions, and metaArgs will hold the actual arguments. Nil
	-- arguments are memoized in nilArgs, and the metatable connects all of them
	-- together.
	--]]
	local args, metaArgs, nilArgs, metatable = {}, {}, {}, {}
	setmetatable(args, metatable)

	local function mergeArgs(tables)
		--[[
		-- Accepts multiple tables as input and merges their keys and values
		-- into one table. If a value is already present it is not overwritten;
		-- tables listed earlier have precedence. We are also memoizing nil
		-- values, which can be overwritten if they are 's' (soft).
		--]]
		for _, t in ipairs(tables) do
			for key, val in pairs(t) do
				if metaArgs[key] == nil and nilArgs[key] ~= 'h' then
					local tidiedVal = tidyVal(key, val)
					if tidiedVal == nil then
						nilArgs[key] = 's'
					else
						metaArgs[key] = tidiedVal
					end
				end
			end
		end
	end

	--[[
	-- Define metatable behaviour. Arguments are memoized in the metaArgs table,
	-- and are only fetched from the argument tables once. Fetching arguments
	-- from the argument tables is the most resource-intensive step in this
	-- module, so we try and avoid it where possible. For this reason, nil
	-- arguments are also memoized, in the nilArgs table. Also, we keep a record
	-- in the metatable of when pairs and ipairs have been called, so we do not
	-- run pairs and ipairs on the argument tables more than once. We also do
	-- not run ipairs on fargs and pargs if pairs has already been run, as all
	-- the arguments will already have been copied over.
	--]]

	metatable.__index = function (t, key)
		--[[
		-- Fetches an argument when the args table is indexed. First we check
		-- to see if the value is memoized, and if not we try and fetch it from
		-- the argument tables. When we check memoization, we need to check
		-- metaArgs before nilArgs, as both can be non-nil at the same time.
		-- If the argument is not present in metaArgs, we also check whether
		-- pairs has been run yet. If pairs has already been run, we return nil.
		-- This is because all the arguments will have already been copied into
		-- metaArgs by the mergeArgs function, meaning that any other arguments
		-- must be nil.
		--]]
		if type(key) == 'string' then
			key = options.translate[key]
		end
		local val = metaArgs[key]
		if val ~= nil then
			return val
		elseif metatable.donePairs or nilArgs[key] then
			return nil
		end
		for _, argTable in ipairs(argTables) do
			local argTableVal = tidyVal(key, argTable[key])
			if argTableVal ~= nil then
				metaArgs[key] = argTableVal
				return argTableVal
			end
		end
		nilArgs[key] = 'h'
		return nil
	end

	metatable.__newindex = function (t, key, val)
		-- This function is called when a module tries to add a new value to the
		-- args table, or tries to change an existing value.
		if type(key) == 'string' then
			key = options.translate[key]
		end
		if options.readOnly then
			error(
				'could not write to argument table key &quot;'
					.. tostring(key)
					.. '&quot;; the table is read-only',
				2
			)
		elseif options.noOverwrite and args[key] ~= nil then
			error(
				'could not write to argument table key &quot;'
					.. tostring(key)
					.. '&quot;; overwriting existing arguments is not permitted',
				2
			)
		elseif val == nil then
			--[[
			-- If the argument is to be overwritten with nil, we need to erase
			-- the value in metaArgs, so that __index, __pairs and __ipairs do
			-- not use a previous existing value, if present; and we also need
			-- to memoize the nil in nilArgs, so that the value isn't looked
			-- up in the argument tables if it is accessed again.
			--]]
			metaArgs[key] = nil
			nilArgs[key] = 'h'
		else
			metaArgs[key] = val
		end
	end

	local function translatenext(invariant)
		local k, v = next(invariant.t, invariant.k)
		invariant.k = k
		if k == nil then
			return nil
		elseif type(k) ~= 'string' or not options.backtranslate then
			return k, v
		else
			local backtranslate = options.backtranslate[k]
			if backtranslate == nil then
				-- Skip this one. This is a tail call, so this won't cause stack overflow
				return translatenext(invariant)
			else
				return backtranslate, v
			end
		end
	end

	metatable.__pairs = function ()
		-- Called when pairs is run on the args table.
		if not metatable.donePairs then
			mergeArgs(argTables)
			metatable.donePairs = true
		end
		return translatenext, { t = metaArgs }
	end

	local function inext(t, i)
		-- This uses our __index metamethod
		local v = t[i + 1]
		if v ~= nil then
			return i + 1, v
		end
	end

	metatable.__ipairs = function (t)
		-- Called when ipairs is run on the args table.
		return inext, t, 0
	end

	return args
end

return arguments</text>
      <sha1>5qx9tzlul9ser30uxj9nbasjt92cevn</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Authority control</title>
    <ns>828</ns>
    <id>39028170</id>
    <revision>
      <id>806800815</id>
      <parentid>800916723</parentid>
      <timestamp>2017-10-24T06:49:37Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from [[Module:Authority control/sandbox]] using more efficient code from [[User:/Module:Authority control]] by [[User:|Eran]] per [[Template talk:Authority control#Technical improvement]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="15394">require('Module:No globals')

local function getCatForId( id )
	local title = mw.title.getCurrentTitle()
	local namespace = title.namespace
	if namespace == 0 then
		return '[[Category:Wikipedia articles with ' .. id .. ' identifiers]]'
	elseif namespace == 2 and not title.isSubpage then
		return '[[Category:User pages with ' .. id .. ' identifiers]]'
	else
		return '[[Category:Miscellaneous pages with ' .. id .. ' identifiers]]'
	end
end

local function viafLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[https://viaf.org/viaf/' .. id .. ' ' .. id .. ']' .. getCatForId( 'VIAF' )
end

local function kulturnavLink( id )
	return '[http://kulturnav.org/language/en/' .. id .. ' id]'
end

local function sikartLink( id )
	return '[http://www.sikart.ch/KuenstlerInnen.aspx?id=' .. id .. '&amp;lng=en ' .. id .. ']'
end

local function tlsLink( id )
	local id2 = id:gsub(' +', '_')
	return '[http://tls.theaterwissenschaft.ch/wiki/' .. id2 .. ' ' .. id .. ']'
end

local function ciniiLink( id )
	return '[http://ci.nii.ac.jp/author/' .. id .. '?l=en ' .. id .. ']'
end

local function bneLink( id )
	return '[http://catalogo.bne.es/uhtbin/authoritybrowse.cgi?action=display&amp;authority_id=' .. id .. ' ' .. id .. ']'
end

local function uscongressLink( id )
	return '[http://bioguide.congress.gov/scripts/biodisplay.pl?index=' .. id .. ' ' .. id .. ']'
end

local function narapersonLink( id )
	return '[https://research.archives.gov/person/' .. id .. ' ' .. id .. ']'
end

local function naraorganizationLink( id )
	return '[https://research.archives.gov/organization/' .. id .. ' ' .. id .. ']'
end

local function botanistLink( id )
	local id2 = id:gsub(' +', '%20')
	return '[http://www.ipni.org/ipni/advAuthorSearch.do?find_abbreviation=' .. id2 .. ' ' .. id .. ']'
end

local function mgpLink( id )
	-- TODO Implement some sanity checking regex
	return '[http://www.genealogy.ams.org/id.php?id=' .. id .. ' ' .. id .. ']'
end

local function rslLink( id )
	-- TODO Implement some sanity checking regex
	return '[http://aleph.rsl.ru/F?func=find-b&amp;find_code=SYS&amp;adjacent=Y&amp;local_base=RSL11&amp;request=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function leonoreLink( id )
-- Identifiants allant de LH/1/1  LH/2794/54 (lgionnaires)
-- Identifiants allant de C/0/1  C/0/84 (84 lgionnaires clbres)
-- Identifiants allant de 19800035/1/1  19800035/385/51670 (lgionnaires dcds entre 1954 et 1977, et quelques dossiers de lgionnaires dcds avant 1954)
	if not string.match( id, '^LH/%d%d?%d?%d?/%d%d?%d?$' ) and
	   not string.match( id, '^C/0/%d%d?$' ) and
	   not string.match( id, '^19800035/%d%d?%d?%d?/%d%d?%d?%d?%d?$' ) then
		return false
	end
	return '[http://www.culture.gouv.fr/public/mistral/leonore_fr?ACTION=CHERCHER&amp;FIELD_1=COTE&amp;VALUE_1=' .. id .. ' ' .. id .. ']'
end

local function sbnLink( id )
	if not string.match( id, '^IT\\ICCU\\%d%d%d%d%d%d%d%d%d%d$' ) and not string.match( id, '^IT\\ICCU\\%u%u[%d%u]%u\\%d%d%d%d%d%d$' ) then
		return false
	end
	return '[http://opac.sbn.it/opacsbn/opac/iccu/scheda_authority.jsp?bid=' .. id .. ' ' .. id .. ']' .. getCatForId( 'SBN' )
end

local function nkcLink( id )
	return '[http://aleph.nkp.cz/F/?func=find-c&amp;local_base=aut&amp;ccl_term=ica=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function nclLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://aleweb.ncl.edu.tw/F/?func=accref&amp;acc_sequence=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function ndlLink( id )
	return '[https://id.ndl.go.jp/auth/ndlna/' .. id .. ' ' .. id .. ']'
end

local function sudocLink( id )
	if not string.match( id, '^%d%d%d%d%d%d%d%d[%dxX]$' ) then
		return false
	end
	return '[https://www.idref.fr/' .. id .. ' ' .. id .. ']'
end

local function hlsLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.hls-dhs-dss.ch/textes/f/F' .. id .. '.php ' .. id .. ']'
end

local function lirLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.e-lir.ch/e-LIR___Lexicon.' .. id .. '.450.0.html ' .. id .. ']'
end

local function splitLccn( id )
	if id:match( '^%l%l?%l?%d%d%d%d%d%d%d%d%d?%d?$' ) then
		id = id:gsub( '^(%l+)(%d+)(%d%d%d%d%d%d)$', '%1/%2/%3' )
	end
	if id:match( '^%l%l?%l?/%d%d%d?%d?/%d+$' ) then
		return mw.text.split( id, '/' )
	end
	return false
end

local function append(str, c, length)
	while str:len() &lt; length do
		str = c .. str
	end
	return str
end

local function lccnLink( id )
	local parts = splitLccn( id )
	if not parts then
		return false
	end
	local lccnType = parts[1] ~= 'sh' and 'names' or 'subjects'
	id = parts[1] .. parts[2] .. append( parts[3], '0', 6 )
	return '[http://id.loc.gov/authorities/' .. lccnType .. '/' .. id .. ' ' .. id .. ']' .. getCatForId( 'LCCN' )
end

local function mbLink( id )
	-- TODO Implement some sanity checking regex
	return '[https://musicbrainz.org/artist/' .. id .. ' ' .. id .. ']' .. getCatForId( 'MusicBrainz' )
end

--Returns the ISNI check digit isni must be a string where the 15 first elements are digits
local function getIsniCheckDigit( isni )
	local total = 0
	for i = 1, 15 do
		local digit = isni:byte( i ) - 48 --Get integer value
		total = (total + digit) * 2
	end
	local remainder = total % 11
	local result = (12 - remainder) % 11
	if result == 10 then
		return &quot;X&quot;
	end
	return tostring( result )
end

--Validate ISNI (and ORCID) and retuns it as a 16 characters string or returns false if it's invalid
--See http://support.orcid.org/knowledgebase/articles/116780-structure-of-the-orcid-identifier
local function validateIsni( id )
	id = id:gsub( '[ %-]', '' ):upper()
	if not id:match( '^%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d[%dX]$' ) then
		return false
	end
	if getIsniCheckDigit( id ) ~= string.char( id:byte( 16 ) ) then
		return false
	end
	return id
end

local function isniLink( id )
	id = validateIsni( id )
	if not id then
		return false
	end
	return '[http://isni.org/isni/' .. id .. ' ' .. id:sub( 1, 4 ) .. ' ' .. id:sub( 5, 8 ) .. ' '  .. id:sub( 9, 12 ) .. ' '  .. id:sub( 13, 16 ) .. ']' .. getCatForId( 'ISNI' )
end

local function orcidLink( id )
	id = validateIsni( id )
	if not id then
		return false
	end
	id = id:sub( 1, 4 ) .. '-' .. id:sub( 5, 8 ) .. '-'  .. id:sub( 9, 12 ) .. '-'  .. id:sub( 13, 16 )
	return '[https://orcid.org/' .. id .. ' ' .. id .. ']' .. getCatForId( 'ORCID' )
end

local function gndLink( id )
	return '[http://d-nb.info/gnd/' .. id .. ' ' .. id .. ']' .. getCatForId( 'GND' )
end

local function selibrLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[https://libris.kb.se/auth/' .. id .. ' ' .. id .. ']' .. getCatForId( 'SELIBR' )
end

local function bnfLink( id )
	--Add cb prefix if it has been removed
	if not string.match( id, '^cb.+$' ) then
		id = 'cb' .. id
	end

	return '[http://catalogue.bnf.fr/ark:/12148/' .. id .. ' ' .. id .. '] [http://data.bnf.fr/ark:/12148/' .. id .. ' (data)]' .. getCatForId( 'BNF' )
end

local function bpnLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.biografischportaal.nl/en/persoon/' .. id .. ' ' .. id .. ']' .. getCatForId( 'BPN' )
end

local function ridLink( id )
	return '[https://www.researcherid.com/rid/' .. id .. ' ' .. id .. ']' .. getCatForId( 'RID' )
end

local function bibsysLink( id )
	return '[https://authority.bibsys.no/authority/rest/authorities/html/' .. id .. ' ' .. id .. ']' .. getCatForId( 'BIBSYS' )
end

local function ulanLink( id )
	return '[https://www.getty.edu/vow/ULANFullDisplay?find=&amp;role=&amp;nation=&amp;subjectid=' .. id .. ' ' .. id .. ']' .. getCatForId( 'ULAN' )
end

local function nlaLink( id )
	return '[https://nla.gov.au/anbd.aut-an' .. id .. ' ' .. id .. ']' .. getCatForId( 'NLA' )
end

local function rkdartistsLink( id )
	return '[https://rkd.nl/en/explore/artists/' .. id .. ' ' .. id .. ']' .. getCatForId( 'RKDartists' )
end

local function snacLink( id )
	return '[http://socialarchive.iath.virginia.edu/ark:/99166/' .. id .. ' ' .. id .. ']' .. getCatForId( 'SNAC-ID' )
end

local function dblpLink( id )
	return '[http://dblp.org/pid/' .. id .. ' ' .. id .. ']' .. getCatForId( 'DBLP' )
end

local function acmLink( id )
	return '[https://dl.acm.org/author_page.cfm?id=' .. id .. ' ' .. id .. ']' .. getCatForId( 'ACM-DL' )
end

local function autoresuyLink( id )
	return '[http://autores.uy/autor/' .. id .. ' ' .. id .. ']' ..  getCatForId( 'autores.uy' )
end

local function picLink( id )
	return '[https://pic.nypl.org/constituents/' .. id .. ' ' .. id .. ']' .. getCatForId( 'PIC' )
end

local function getIdsFromWikidata( itemId, property )
	local ids = {}
	local statements = mw.wikibase.getBestStatements( itemId, property )
	if statements then
		for _, statement in ipairs( statements ) do
			if statement.mainsnak.datavalue then
				table.insert( ids, statement.mainsnak.datavalue.value )
			end
		end
	end
	return ids
end

local function matchesWikidataRequirements( itemId, reqs )
	for _, group in ipairs( reqs ) do
		local property = 'P' .. group[1]
		local qid = group[2]
		local statements = mw.wikibase.getBestStatements( itemId, property )
		if statements ~= nil then
			for _, statement in ipairs( statements ) do
				if statement.mainsnak.datavalue ~= nil then
					if statement.mainsnak.datavalue.value['numeric-id'] == qid then
						return true
					end
				end
			end
		end
	end
	return false
end

local function createRow( id, label, rawValue, link, withUid )
	if link then
		if withUid then
			return '*&lt;span class=&quot;nowrap&quot;&gt;' .. label .. ' &lt;span class=&quot;uid&quot;&gt;' .. link .. '&lt;/span&gt;&lt;/span&gt;\n'
		else
			return '*&lt;span class=&quot;nowrap&quot;&gt;' .. label .. ' ' .. link .. '&lt;/span&gt;\n'
		end
	else
		return '* &lt;span class=&quot;error&quot;&gt;The ' .. id .. ' id ' .. rawValue .. ' is not valid.&lt;/span&gt;[[Category:Wikipedia articles with faulty authority control identifiers (' .. id .. ')]]\n'
	end
end

--In this order: name of the parameter, label, propertyId in Wikidata, formatting function
local conf = {
	{ 'VIAF', '[[Virtual International Authority File|VIAF]]', 214, viafLink },
	{ 'LCCN', '[[Library of Congress Control Number|LCCN]]', 244, lccnLink },
	{ 'ISNI', '[[International Standard Name Identifier|ISNI]]', 213, isniLink },
	{ 'ORCID', '[[ORCID]]', 496, orcidLink },
	{ 'GND', '[[Integrated Authority File|GND]]', 227, gndLink },
	{ 'SELIBR', '[[LIBRIS|SELIBR]]', 906, selibrLink },
	{ 'SUDOC', '[[Systme universitaire de documentation|SUDOC]]', 269, sudocLink },
	{ 'BNF', '[[Bibliothque nationale de France|BNF]]', 268, bnfLink },
	{ 'BPN', '[[Biografisch Portaal|BPN]]', 651, bpnLink },
	{ 'RID', '[[ResearcherID]]', 1053, ridLink },
	{ 'BIBSYS', '[[BIBSYS]]', 1015, bibsysLink },
	{ 'ULAN', '[[Union List of Artist Names|ULAN]]', 245, ulanLink },
	{ 'HDS', '[[Historical Dictionary of Switzerland|HDS]]', 902, hlsLink },
	{ 'LIR', '[[Historical Dictionary of Switzerland#Lexicon_Istoric_Retic|LIR]]', 886, lirLink },
	{ 'MBA', '[[MusicBrainz]]', 434, mbLink },
	{ 'MGP', '[[Mathematics Genealogy Project|MGP]]', 549, mgpLink },
	{ 'NLA', '[[National Library of Australia|NLA]]', 409, nlaLink },
	{ 'NDL', '[[National Diet Library|NDL]]', 349, ndlLink },
	{ 'NCL', '[[National Central Library|NCL]]', 1048, nclLink },
	{ 'NKC', '[[National Library of the Czech Republic|NKC]]', 691, nkcLink },
	{ 'Lonore', '[[Base Lonore|Lonore]]', 640, leonoreLink },
	{ 'SBN', '[[Istituto Centrale per il Catalogo Unico|ICCU]]', 396, sbnLink },
	{ 'RLS', '[[Russian State Library|RLS]]', 947, rslLink },
	{ 'Botanist', '[[Author citation (botany)|Botanist]]', 428, botanistLink },
	{ 'NARA-person', '[[National Archives and Records Administration|NARA]]', 1222, narapersonLink },
	{ 'NARA-organization', '[[National Archives and Records Administration|NARA]]', 1223, naraorganizationLink },
	{ 'USCongress', '[[Biographical Directory of the United States Congress|US Congress]]', 1157, uscongressLink },
	{ 'BNE', '[[Biblioteca Nacional de Espaa|BNE]]', 950, bneLink },
	{ 'CINII', '[[CiNii]]', 271, ciniiLink },
	{ 'TLS', '[[Theaterlexikon der Schweiz|TLS]]', 1362, tlsLink },
	{ 'SIKART', '[[SIKART]]', 781, sikartLink },
	{ 'KULTURNAV', '[[KulturNav]]', 1248, kulturnavLink },
	{ 'RKDartists', '[[Netherlands Institute for Art History#Online artist pages|RKD]]', 650, rkdartistsLink },
	{ 'SNAC-ID', '[[Institute for Advanced Technology in the Humanities|IATH]]', 3430, snacLink },
	{ 'DBLP', '[[DBLP]]', 2456, dblpLink },
	{ 'ACM-DL', '[[ACM Digital Library|ACM DL]]', 864, acmLink },
	{ 'autores.uy', '[[autores.uy]]', 2558, autoresuyLink },
	{ 'PIC', '[[:d:Q23892012|PIC]]', 2750, picLink },
}

-- Check that the Wikidata item has this property--&gt;value before adding it
local reqs = {}

local p = {}

function p.authorityControl( frame )
	local parentArgs = frame:getParent().args
	--Create rows
	local elements = {}

	--redirect PND to GND
	if (parentArgs.GND == nil or parentArgs.GND == '') and parentArgs.PND ~= nil and parentArgs.PND ~= '' then
		parentArgs.GND = parentArgs.PND
	end

	--Wikidata fallback if requested
	local itemId = mw.wikibase.getEntityIdForCurrentPage()
	if itemId ~= nil then
		for _, params in ipairs( conf ) do
			if params[3] ~= 0 then
				local val = parentArgs[params[1]]
				if not val or val == '' then
					local canUseWikidata = nil
					if reqs[params[1]] ~= nil then
						canUseWikidata = matchesWikidataRequirements( itemId, reqs[params[1]] )
					else
						canUseWikidata = true
					end
					if canUseWikidata then
						local wikidataIds = getIdsFromWikidata( itemId, 'P' .. params[3] )
						if wikidataIds[1] then
							parentArgs[params[1]] = wikidataIds[1]
						end
					end
				end
			end
		end
	end

	--Worldcat
	if parentArgs['WORLDCATID'] and parentArgs['WORLDCATID'] ~= '' then
		table.insert( elements, createRow( 'WORLDCATID', '', parentArgs['WORLDCATID'], '[https://www.worldcat.org/identities/' .. parentArgs['WORLDCATID'] .. ' WorldCat Identities]', false ) ) --Validation?
	elseif parentArgs['VIAF'] and string.match( parentArgs['VIAF'], '^%d+$' ) then -- Hackishly copy the validation code; this should go away when we move to using P1793 and P1630
		table.insert( elements, createRow( 'VIAF', '', parentArgs['VIAF'], '[https://www.worldcat.org/identities/containsVIAFID/' .. parentArgs['VIAF'] .. ' WorldCat Identities]', false ) )
	elseif parentArgs['LCCN'] and parentArgs['LCCN'] ~= '' then
		local lccnParts = splitLccn( parentArgs['LCCN'] )
		if lccnParts and lccnParts[1] ~= 'sh' then
			table.insert( elements, createRow( 'LCCN', '', parentArgs['LCCN'], '[https://www.worldcat.org/identities/lccn-' .. lccnParts[1] .. lccnParts[2] .. '-' .. lccnParts[3] .. ' WorldCat Identities]', false ) )
		end
	end

	--Configured rows
	local rct = 0
	for _, params in ipairs( conf ) do
		local val = parentArgs[params[1]]
		if val and val ~= '' then
			table.insert( elements, createRow( params[1], params[2] .. ':', val, params[4]( val ), true ) )
			rct = rct + 1
		end
	end
	local Navbox = require('Module:Navbox')
	local elementscats = ''
	if rct &gt; 13 then
		elementscats  = '[[Category:AC with ' .. rct .. ' elements]]'
	end

	if #elements ~= 0 then
		return Navbox._navbox( {
			name  = 'Authority control',
			bodyclass = 'hlist',
			group1 = '[[Help:Authority control|Authority control]]' .. elementscats,
			list1 = table.concat( elements )
			} )
	else
		return &quot;&quot;
	end
end

return p</text>
      <sha1>q2m0aw21lfndledhk1dbf0493olqwrg</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler</title>
    <ns>828</ns>
    <id>39772274</id>
    <revision>
      <id>617942873</id>
      <parentid>616811662</parentid>
      <timestamp>2014-07-22T05:08:26Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>allow invocations specifying the page parameter to use the mw.loadData optimisations, and don't call mw.title.new every time</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7871">--------------------------------------------------------------------------------
--                                                                            --
--                              CATEGORY HANDLER                              --
--                                                                            --
--      This module implements the {{category handler}} template in Lua,      --
--      with a few improvements: all namespaces and all namespace aliases     --
--      are supported, and namespace names are detected automatically for     --
--      the local wiki. This module requires [[Module:Namespace detect]]      --
--      and [[Module:Yesno]] to be available on the local wiki. It can be     --
--      configured for different wikis by altering the values in              --
--      [[Module:Category handler/config]], and pages can be blacklisted      --
--      from categorisation by using [[Module:Category handler/blacklist]].   --
--                                                                            --
--------------------------------------------------------------------------------

-- Load required modules
local yesno = require('Module:Yesno')

-- Lazily load things we don't always need
local mShared, mappings

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function trimWhitespace(s, removeBlanks)
	if type(s) ~= 'string' then
		return s
	end
	s = s:match('^%s*(.-)%s*$')
	if removeBlanks then
		if s ~= '' then
			return s
		else
			return nil
		end
	else
		return s
	end
end

--------------------------------------------------------------------------------
-- CategoryHandler class
--------------------------------------------------------------------------------

local CategoryHandler = {}
CategoryHandler.__index = CategoryHandler

function CategoryHandler.new(data, args)
	local obj = setmetatable({ _data = data, _args = args }, CategoryHandler)
	
	-- Set the title object
	do
		local pagename = obj:parameter('demopage')
		local success, titleObj
		if pagename then
			success, titleObj = pcall(mw.title.new, pagename)
		end
		if success and titleObj then
			obj.title = titleObj
			if titleObj == mw.title.getCurrentTitle() then
				obj._usesCurrentTitle = true
			end
		else
			obj.title = mw.title.getCurrentTitle()
			obj._usesCurrentTitle = true
		end
	end

	-- Set suppression parameter values
	for _, key in ipairs{'nocat', 'categories'} do
		local value = obj:parameter(key)
		value = trimWhitespace(value, true)
		obj['_' .. key] = yesno(value)
	end
	do
		local subpage = obj:parameter('subpage')
		local category2 = obj:parameter('category2')
		if type(subpage) == 'string' then
			subpage = mw.ustring.lower(subpage)
		end
		if type(category2) == 'string' then
			subpage = mw.ustring.lower(category2)
		end
		obj._subpage = trimWhitespace(subpage, true)
		obj._category2 = trimWhitespace(category2) -- don't remove blank values
	end
	return obj
end

function CategoryHandler:parameter(key)
	local parameterNames = self._data.parameters[key]
	local pntype = type(parameterNames)
	if pntype == 'string' or pntype == 'number' then
		return self._args[parameterNames]
	elseif pntype == 'table' then
		for _, name in ipairs(parameterNames) do
			local value = self._args[name]
			if value ~= nil then
				return value
			end
		end
		return nil
	else
		error(string.format(
			'invalid config key &quot;%s&quot;',
			tostring(key)
		), 2)
	end
end

function CategoryHandler:isSuppressedByArguments()
	return
		-- See if a category suppression argument has been set.
		self._nocat == true
		or self._categories == false
		or (
			self._category2
			and self._category2 ~= self._data.category2Yes
			and self._category2 ~= self._data.category2Negative
		)

		-- Check whether we are on a subpage, and see if categories are
		-- suppressed based on our subpage status.
		or self._subpage == self._data.subpageNo and self.title.isSubpage
		or self._subpage == self._data.subpageOnly and not self.title.isSubpage
end

function CategoryHandler:shouldSkipBlacklistCheck()
	-- Check whether the category suppression arguments indicate we
	-- should skip the blacklist check.
	return self._nocat == false
		or self._categories == true
		or self._category2 == self._data.category2Yes
end

function CategoryHandler:matchesBlacklist()
	if self._usesCurrentTitle then
		return self._data.currentTitleMatchesBlacklist
	else
		mShared = mShared or require('Module:Category handler/shared')
		return mShared.matchesBlacklist(
			self.title.prefixedText,
			mw.loadData('Module:Category handler/blacklist')
		)
	end
end

function CategoryHandler:isSuppressed()
	-- Find if categories are suppressed by either the arguments or by
	-- matching the blacklist.
	return self:isSuppressedByArguments()
		or not self:shouldSkipBlacklistCheck() and self:matchesBlacklist()
end

function CategoryHandler:getNamespaceParameters()
	if self._usesCurrentTitle then
		return self._data.currentTitleNamespaceParameters
	else
		if not mappings then
			mShared = mShared or require('Module:Category handler/shared')
			mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
		end
		return mShared.getNamespaceParameters(
			self.title,
			mappings
		)
	end
end

function CategoryHandler:namespaceParametersExist()
	-- Find whether any namespace parameters have been specified.
	-- We use the order &quot;all&quot; --&gt; namespace params --&gt; &quot;other&quot; as this is what
	-- the old template did.
	if self:parameter('all') then
		return true
	end
	if not mappings then
		mShared = mShared or require('Module:Category handler/shared')
		mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
	end
	for ns, params in pairs(mappings) do
		for i, param in ipairs(params) do
			if self._args[param] then
				return true
			end
		end
	end
	if self:parameter('other') then
		return true
	end
	return false
end

function CategoryHandler:getCategories()
	local params = self:getNamespaceParameters()
	local nsCategory
	for i, param in ipairs(params) do
		local value = self._args[param]
		if value ~= nil then
			nsCategory = value
			break
		end
	end
	if nsCategory ~= nil or self:namespaceParametersExist() then
		-- Namespace parameters exist - advanced usage.
		if nsCategory == nil then
			nsCategory = self:parameter('other')
		end
		local ret = {self:parameter('all')}
		local numParam = tonumber(nsCategory)
		if numParam and numParam &gt;= 1 and math.floor(numParam) == numParam then
			-- nsCategory is an integer
			ret[#ret + 1] = self._args[numParam]
		else
			ret[#ret + 1] = nsCategory
		end
		if #ret &lt; 1 then
			return nil
		else
			return table.concat(ret)
		end
	elseif self._data.defaultNamespaces[self.title.namespace] then
		-- Namespace parameters don't exist, simple usage.
		return self._args[1]
	end
	return nil
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- Used for testing purposes.
	return {
		CategoryHandler = CategoryHandler
	}
end

function p._main(args, data)
	data = data or mw.loadData('Module:Category handler/data')
	local handler = CategoryHandler.new(data, args)
	if handler:isSuppressed() then
		return nil
	end
	return handler:getCategories()
end

function p.main(frame, data)
	data = data or mw.loadData('Module:Category handler/data')
	local args = require('Module:Arguments').getArgs(frame, {
		wrappers = data.wrappers,
		valueFunc = function (k, v)
			v = trimWhitespace(v)
			if type(k) == 'number' then
				if v ~= '' then
					return v
				else
					return nil
				end
			else
				return v
			end
		end
	})
	return p._main(args, data)
end

return p</text>
      <sha1>letwavu3yvlayfzew66uuwixmwebq5b</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/blacklist</title>
    <ns>828</ns>
    <id>43232926</id>
    <revision>
      <id>757409491</id>
      <parentid>757402070</parentid>
      <timestamp>2016-12-30T14:53:53Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>on second thoughts, blacklisting sandboxes for all templates is probably a bad idea</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="764">-- This module contains the blacklist used by [[Module:Category handler]].
-- Pages that match Lua patterns in this list will not be categorised unless
-- categorisation is explicitly requested.

return {
	'^Main Page$', -- don't categorise the main page.

	-- Don't categorise the following pages or their subpages.
	-- &quot;%f[/\0]&quot; matches if the next character is &quot;/&quot; or the end of the string.
	'^Wikipedia:Cascade%-protected items%f[/\0]',
	'^User:UBX%f[/\0]', -- The userbox &quot;template&quot; space.
	'^User talk:UBX%f[/\0]',

	-- Don't categorise subpages of these pages, but allow
	-- categorisation of the base page.
	'^Wikipedia:Template messages/.*$',

	-- Don't categorise archives.
	'/[aA]rchive',
	&quot;^Wikipedia:Administrators' noticeboard/IncidentArchive%d+$&quot;,
}</text>
      <sha1>hwue3i1eua4tsdxlsbcs4f5syudywbe</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/config</title>
    <ns>828</ns>
    <id>42291997</id>
    <revision>
      <id>616764079</id>
      <parentid>616045566</parentid>
      <timestamp>2014-07-13T09:05:36Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/config: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5755">--------------------------------------------------------------------------------
--            [[Module:Category handler]] configuration data                  --
--       Language-specific parameter names and values can be set here.        --
--       For blacklist config, see [[Module:Category handler/blacklist]].     --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                       Start configuration data                             --
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names.                  --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- foo = 'parameter name',                                                    --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'},        --
--------------------------------------------------------------------------------

cfg.parameters = {
	
	-- The nocat and categories parameter suppress
	-- categorisation. They are used with Module:Yesno, and work as follows:
	--
	-- cfg.nocat:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is suppressed
	-- false                                    Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- nil                                      Categorisation is allowed
	--
	-- cfg.categories:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- false                                    Categorisation is suppressed
	-- nil                                      Categorisation is allowed
	nocat = 'nocat',
	categories = 'categories',
	
	-- The parameter name for the legacy &quot;category2&quot; parameter. This skips the
	-- blacklist if set to the cfg.category2Yes value, and suppresses
	-- categorisation if present but equal to anything other than
	-- cfg.category2Yes or cfg.category2Negative.
	category2 = 'category2',
	
	-- cfg.subpage is the parameter name to specify how to behave on subpages.
	subpage = 'subpage',
	
	-- The parameter for data to return in all namespaces.
	all = 'all',
	
	-- The parameter name for data to return if no data is specified for the
	-- namespace that is detected.
	other = 'other',
	
	-- The parameter name used to specify a page other than the current page;
	-- used for testing and demonstration.
	demopage = 'page',
}

--------------------------------------------------------------------------------
--                              Parameter values                              --
-- These are set values that can be used with certain parameters. Only one    --
-- value can be specified, like this:                                         --
--                                                                            --
-- cfg.foo = 'value name'                                                     --                                               --
--------------------------------------------------------------------------------

-- The following settings are used with the cfg.category2 parameter. Setting
-- cfg.category2 to cfg.category2Yes skips the blacklist, and if cfg.category2
-- is present but equal to anything other than cfg.category2Yes or
-- cfg.category2Negative then it supresses cateogrisation.
cfg.category2Yes = 'yes'
cfg.category2Negative = ''

-- The following settings are used with the cfg.subpage parameter.
-- cfg.subpageNo is the value to specify to not categorise on subpages;
-- cfg.subpageOnly is the value to specify to only categorise on subpages.
cfg.subpageNo = 'no'
cfg.subpageOnly = 'only'

--------------------------------------------------------------------------------
--                           Default namespaces                               --
-- This is a table of namespaces to categorise by default. The keys are the   --
-- namespace numbers.                                                         --
--------------------------------------------------------------------------------

cfg.defaultNamespaces = {
	[  0] = true, -- main
	[  6] = true, -- file
	[ 12] = true, -- help
	[ 14] = true, -- category
	[100] = true, -- portal
	[108] = true, -- book
}

--------------------------------------------------------------------------------
--                                Wrappers                                    --
-- This is a wrapper template or a list of wrapper templates to be passed to  --
-- [[Module:Arguments]].                                                      --
--------------------------------------------------------------------------------

cfg.wrappers = 'Template:Category handler'

--------------------------------------------------------------------------------
--                           End configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>6ga9hbq2pdwalsvx68i53dmbr421rq5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/data</title>
    <ns>828</ns>
    <id>43233647</id>
    <revision>
      <id>616764105</id>
      <parentid>616020360</parentid>
      <timestamp>2014-07-13T09:05:55Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/data: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="631">-- This module assembles data to be passed to [[Module:Category handler]] using
-- mw.loadData. This includes the configuration data and whether the current
-- page matches the title blacklist.

local data = require('Module:Category handler/config')
local mShared = require('Module:Category handler/shared')
local blacklist = require('Module:Category handler/blacklist')
local title = mw.title.getCurrentTitle()

data.currentTitleMatchesBlacklist = mShared.matchesBlacklist(
	title.prefixedText,
	blacklist
)

data.currentTitleNamespaceParameters = mShared.getNamespaceParameters(
	title,
	mShared.getParamMappings()
)

return data</text>
      <sha1>k26mwixuaeijisfddb0sxkg82iux8v4</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/shared</title>
    <ns>828</ns>
    <id>43232937</id>
    <revision>
      <id>616764145</id>
      <parentid>616020201</parentid>
      <timestamp>2014-07-13T09:06:15Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/shared: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="888">-- This module contains shared functions used by [[Module:Category handler]]
-- and its submodules.

local p = {}

function p.matchesBlacklist(page, blacklist)
	for i, pattern in ipairs(blacklist) do
		local match = mw.ustring.match(page, pattern)
		if match then
			return true
		end
	end
	return false
end

function p.getParamMappings(useLoadData)
	local dataPage = 'Module:Namespace detect/data'
	if useLoadData then
		return mw.loadData(dataPage).mappings
	else
		return require(dataPage).mappings
	end
end

function p.getNamespaceParameters(titleObj, mappings)
	-- We don't use title.nsText for the namespace name because it adds
	-- underscores.
	local mappingsKey
	if titleObj.isTalkPage then
		mappingsKey = 'talk'
	else
		mappingsKey = mw.site.namespaces[titleObj.namespace].name
	end
	mappingsKey = mw.ustring.lower(mappingsKey)
	return mappings[mappingsKey] or {}
end

return p</text>
      <sha1>omlsnhudxz6juptvtxz7ns97jutbzc5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Check for unknown parameters</title>
    <ns>828</ns>
    <id>42286729</id>
    <revision>
      <id>726655795</id>
      <parentid>726655742</parentid>
      <timestamp>2016-06-23T14:41:43Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2400">-- This module may be used to compare the arguments passed to the parent
-- with a list of arguments, returning a specified result if an argument is
-- not on the list
local p = {}

local function trim(s)
	return s:match('^%s*(.-)%s*$')
end

local function isnotempty(s)
	return s and trim(s) ~= ''
end

function p.check (frame)
	local args = frame.args
	local pargs = frame:getParent().args
	local ignoreblank = isnotempty(frame.args['ignoreblank'])
	local showblankpos = isnotempty(frame.args['showblankpositional'])
	local knownargs = {}
	local unknown = frame.args['unknown'] or 'Found _VALUE_, '
	local preview = frame.args['preview']

	local values = {}
	local res = {}
	local regexps = {}

	-- create the list of known args, regular expressions, and the return string
	for k, v in pairs(args) do
		if type(k) == 'number' then
			v = trim(v)
			knownargs[v] = 1
		elseif k:find('^regexp[1-9][0-9]*$') then
			table.insert(regexps, '^' .. v .. '$')
		end
	end
	if isnotempty(preview) then 
		preview = '&lt;div class=&quot;hatnote&quot; style=&quot;color:red&quot;&gt;&lt;strong&gt;Warning:&lt;/strong&gt; ' .. preview .. ' (this message is shown only in preview).&lt;/div&gt;'
	elseif preview == nil then
		preview = unknown
	end

	-- loop over the parent args, and make sure they are on the list
	for k, v in pairs(pargs) do
		if type(k) == 'string' and knownargs[k] == nil then
			local knownflag = false
			for i, regexp in ipairs(regexps) do
				if mw.ustring.match(k, regexp) then
					knownflag = true
					break
				end
			end
			if not knownflag and ( not ignoreblank or isnotempty(v) )  then
				k = mw.ustring.gsub(k, '[^%w\-_ ]', '?')
				table.insert(values, k)
			end
		elseif type(k) == 'number' and 
			knownargs[tostring(k)] == nil and
			( showblankpos or isnotempty(v) )
		then
			local vlen = mw.ustring.len(v)
			v = mw.ustring.sub(v, 1, (vlen &lt; 25) and vlen or 25) 
			v = mw.ustring.gsub(v, '[^%w\-_ ]', '?')
			table.insert(values, k .. ' = ' .. v .. ((vlen &gt;= 25) and ' ...' or ''))
		end
	end

	-- add resuls to the output tables
	if #values &gt; 0 then
		if frame:preprocess( &quot;{{REVISIONID}}&quot; ) == &quot;&quot; then
			unknown = preview
		end
		for k, v in pairs(values) do
			if v == '' then
			-- Fix odd bug for | = which gets stripped to the empty string and
			-- breaks category links
			v = ' '
			end
			local r =  unknown:gsub('_VALUE_', v)
			table.insert(res, r)
		end
	end

	return table.concat(res)
end

return p</text>
      <sha1>hrayw1t1r2ij1wg65qi0jh0x6y31ba4</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Check isxn</title>
    <ns>828</ns>
    <id>47420247</id>
    <revision>
      <id>783139241</id>
      <parentid>712698918</parentid>
      <timestamp>2017-05-31T10:38:54Z</timestamp>
      <contributor>
        <username>The Anome</username>
        <id>76</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:Check isxn]]&quot;: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5972">-- This template is a copy of the ISXN validation code from [[Module:Citation/CS1]]
-- which allows for validating ISBN, ISMN, and ISSN without invoking a citation template

local p = {}

--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------

ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit. ISBN-13 is checked in check_isbn().
If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length and stripped of dashes,
spaces and other non-isxn characters.

]]

local function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of byte values '0'  0x30 .. '9'   0x39, 'X'  0x58
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( &quot;X&quot; ) then		-- if checkdigit is X (compares the byte value of 'X' which is 0x58)
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N  _ 1 3 &gt;----------------------------------------------

ISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.
If the number is valid, the result will be 0. Before calling this function, isbn-13/ismn must be checked for length
and stripped of dashes, spaces and other non-isxn-13 characters.

]]

local function is_valid_isxn_13 (isxn_str)
	local temp=0;
	
	isxn_str = { isxn_str:byte(1, 13) };										-- make a table of byte values '0'  0x30 .. '9'   0x39
	for i, v in ipairs( isxn_str ) do
		temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );				-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit
	end
	return temp % 10 == 0;														-- sum modulo 10 is zero when isbn-13/ismn is correct
end

--[[--------------------------&lt; C H E C K _ I S B N &gt;------------------------------------------------------------

Determines whether an ISBN string is valid

]]

local function check_isbn( isbn_str, error_string )
	if nil ~= isbn_str:match(&quot;[^%s-0-9X]&quot;) then -- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
		return error_string;
	end
	isbn_str = isbn_str:gsub( &quot;-&quot;, &quot;&quot; ):gsub( &quot; &quot;, &quot;&quot; );	-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return error_string;
	end

	if len == 10 then
		if isbn_str:match( &quot;^%d*X?$&quot; ) == nil then 
			return error_string; 
		end
		return is_valid_isxn(isbn_str, 10) and '' or error_string;
	else
		local temp = 0;
		if isbn_str:match( &quot;^97[89]%d*$&quot; ) == nil then -- isbn13 begins with 978 or 979; ismn begins with 979
			return error_string; 
		end
		return is_valid_isxn_13 (isbn_str) and '' or error_string;
	end
end

--[[--------------------------&lt; C H E C K _ I S M N &gt;------------------------------------------------------------

Determines whether an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the
same check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf
section 2, pages 912.

]]

local function check_ismn (id, error_string)
	local text;
	local valid_ismn = true;

	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );													-- strip spaces, hyphens, and endashes from the ismn

	if 13 ~= id:len() or id:match( &quot;^9790%d*$&quot; ) == nil then					-- ismn must be 13 digits and begin 9790
		valid_ismn = false;
	else
		valid_ismn=is_valid_isxn_13 (id);										-- validate ismn
	end

	return valid_ismn and '' or error_string
end

--[[--------------------------&lt; I S S N &gt;----------------------------------------------------------------------

Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but has separated the two groups of four
digits with a space.  When that condition occurred, the resulting link looked like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length and makes sure that the checkdigit agrees
with the calculated value.  Incorrect length (8 digits), characters other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn
error message.

]]

local function check_issn(id, error_string)
	local issn_copy = id;		-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local text;
	local valid_issn = true;

	if not id:match ('^%d%d%d%d%-%d%d%d[%dX]$') then
		return error_string;
	end
	
	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );									-- strip spaces, hyphens, and endashes from the issn

	if 8 ~= id:len() or nil == id:match( &quot;^%d*X?$&quot; ) then		-- validate the issn: 8 digits long, containing only 0-9 or X in the last position
		valid_issn=false;										-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);						-- validate issn
	end

	return valid_issn and '' or error_string
end


------------------------------&lt; E N T R Y   P O I N T S &gt;--------------------------------------------------====

function p.check_isbn(frame)
	return check_isbn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

function p.check_ismn(frame)
	return check_ismn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

function p.check_issn(frame)
	return check_issn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

return p</text>
      <sha1>m39a8k5gmtbg6x3k2f7rizj3jk5on20</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1</title>
    <ns>828</ns>
    <id>38573037</id>
    <revision>
      <id>782677680</id>
      <parentid>777958692</parentid>
      <timestamp>2017-05-28T13:34:26Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>interim fix to kern_quotes(); see [[Help_talk:Citation_Style_1#single_quote_for_an_ASCII_quote|discussion]];</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="167324">
local cs1 ={};

--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local dates, year_date_check, reformat_dates, date_hyphen_to_dash				-- functions in Module:Citation/CS1/Date_validation

local is_set, in_array, substitute, error_comment, set_error, select_one,		-- functions in Module:Citation/CS1/Utilities
	add_maint_cat, wrap_style, safe_for_italics, remove_wiki_link;

local z ={};																	-- tables in Module:Citation/CS1/Utilities

local extract_ids, extract_id_access_levels, build_id_list, is_embargoed;		-- functions in Module:Citation/CS1/Identifiers

local make_coins_title, get_coins_pages, COinS;									-- functions in Module:Citation/CS1/COinS

local cfg = {};																	-- table of configuration tables that are defined in Module:Citation/CS1/Configuration
local whitelist = {};															-- table of tables listing valid template parameter names; defined in Module:Citation/CS1/Whitelist


--[[--------------------------&lt; P A G E   S C O P E   V A R I A B L E S &gt;--------------------------------------

delare variables here that have page-wide scope that are not brought in from other modules; thatare created here
and used here

]]

local added_deprecated_cat;														-- boolean flag so that the category is added only once
local added_prop_cats = {};														-- list of property categories that have been added to z.properties_cats
local added_vanc_errs;															-- boolean flag so we only emit one Vancouver error / category

local Frame;																	-- holds the module's frame table


--[[--------------------------&lt; F I R S T _ S E T &gt;------------------------------------------------------------

Locates and returns the first set value in a table of values where the order established in the table,
left-to-right (or top-to-bottom), is the order in which the values are evaluated.  Returns nil if none are set.

This version replaces the original 'for _, val in pairs do' and a similar version that used ipairs.  With the pairs
version the order of evaluation could not be guaranteed.  With the ipairs version, a nil value would terminate
the for-loop before it reached the actual end of the list.

]]

local function first_set (list, count)
	local i = 1;
	while i &lt;= count do															-- loop through all items in list
		if is_set( list[i] ) then
			return list[i];														-- return the first set list member
		end
		i = i + 1;																-- point to next
	end
end

--[[--------------------------&lt; A D D _ P R O P _ C A T &gt;--------------------------------------------------------

Adds a category to z.properties_cats using names from the configuration file with additional text if any.

added_prop_cats is a table declared in page scope variables above

]]

local function add_prop_cat (key, arguments)
	if not added_prop_cats [key] then
		added_prop_cats [key] = true;											-- note that we've added this category
		table.insert( z.properties_cats, substitute (cfg.prop_cats [key], arguments));		-- make name then add to table
	end
end

--[[--------------------------&lt; A D D _ V A N C _ E R R O R &gt;----------------------------------------------------

Adds a single Vancouver system error message to the template's output regardless of how many error actually exist.
To prevent duplication, added_vanc_errs is nil until an error message is emitted.

added_vanc_errs is a boolean declared in page scope variables above

]]

local function add_vanc_error (source)
	if not added_vanc_errs then
		added_vanc_errs = true;													-- note that we've added this category
		table.insert( z.message_tail, { set_error( 'vancouver', {source}, true ) } );
	end
end


--[[--------------------------&lt; I S _ S C H E M E &gt;------------------------------------------------------------

does this thing that purports to be a uri scheme seem to be a valid scheme?  The scheme is checked to see if it
is in agreement with http://tools.ietf.org/html/std66#section-3.1 which says:
	Scheme names consist of a sequence of characters beginning with a
   letter and followed by any combination of letters, digits, plus
   (&quot;+&quot;), period (&quot;.&quot;), or hyphen (&quot;-&quot;).

returns true if it does, else false

]]

local function is_scheme (scheme)
	return scheme and scheme:match ('^%a[%a%d%+%.%-]*:');						-- true if scheme is set and matches the pattern
end


--[=[-------------------------&lt; I S _ D O M A I N _ N A M E &gt;--------------------------------------------------

Does this thing that purports to be a domain name seem to be a valid domain name?

Syntax defined here: http://tools.ietf.org/html/rfc1034#section-3.5
BNF defined here: https://tools.ietf.org/html/rfc4234
Single character names are generally reserved; see https://tools.ietf.org/html/draft-ietf-dnsind-iana-dns-01#page-15;
	see also [[Single-letter second-level domain]]
list of tlds: https://www.iana.org/domains/root/db

rfc952 (modified by rfc 1123) requires the first and last character of a hostname to be a letter or a digit.  Between
the first and last characters the name may use letters, digits, and the hyphen.

Also allowed are IPv4 addresses. IPv6 not supported

domain is expected to be stripped of any path so that the last character in the last character of the tld.  tld
is two or more alpha characters.  Any preceding '//' (from splitting a url with a scheme) will be stripped
here.  Perhaps not necessary but retained incase it is necessary for IPv4 dot decimal.

There are several tests:
	the first character of the whole domain name including subdomains must be a letter or a digit
	internationalized domain name (ascii characters with .xn-- ASCII Compatible Encoding (ACE) prefix xn-- in the tld) see https://tools.ietf.org/html/rfc3490
	single-letter/digit second-level domains in the .org TLD
	q, x, and z SL domains in the .com TLD
	i and q SL domains in the .net TLD
	single-letter SL domains in the ccTLDs (where the ccTLD is two letters)
	two-character SL domains in gTLDs (where the gTLD is two or more letters)
	three-plus-character SL domains in gTLDs (where the gTLD is two or more letters)
	IPv4 dot-decimal address format; TLD not allowed

returns true if domain appears to be a proper name and tld or IPv4 address, else false

]=]

local function is_domain_name (domain)
	if not domain then
		return false;															-- if not set, abandon
	end
	
	domain = domain:gsub ('^//', '');											-- strip '//' from domain name if present; done here so we only have to do it once
	
	if not domain:match ('^[%a%d]') then										-- first character must be letter or digit
		return false;
	end
																				-- Do most common case first
	if domain:match ('%f[%a%d][%a%d][%a%d%-]+[%a%d]%.%a%a+$') then				-- three or more character hostname.hostname or hostname.tld
		return true;
	elseif domain:match ('%f[%a%d][%a%d][%a%d%-]+[%a%d]%.xn%-%-[%a%d]+$') then	-- internationalized domain name with ACE prefix
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.org$') then							-- one character .org hostname
		return true;
	elseif domain:match ('%f[%a][qxz]%.com$') then								-- assigned one character .com hostname (x.com times out 2015-12-10)
		return true;
	elseif domain:match ('%f[%a][iq]%.net$') then								-- assigned one character .net hostname (q.net registered but not active 2015-12-10)
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.%a%a$') then							-- one character hostname and cctld (2 chars)
		return true;
	elseif domain:match ('%f[%a%d][%a%d][%a%d]%.%a%a+$') then					-- two character hostname and tld
		return true;
	elseif domain:match ('^%d%d?%d?%.%d%d?%d?%.%d%d?%d?%.%d%d?%d?') then		-- IPv4 address
		return true;
	else
		return false;
	end
end


--[[--------------------------&lt; I S _ U R L &gt;------------------------------------------------------------------

returns true if the scheme and domain parts of a url appear to be a valid url; else false.

This function is the last step in the validation process.  This function is separate because there are cases that
are not covered by split_url(), for example is_parameter_ext_wikilink() which is looking for bracketted external
wikilinks.

]]

local function is_url (scheme, domain)
	if is_set (scheme) then														-- if scheme is set check it and domain
		return is_scheme (scheme) and is_domain_name (domain);
	else
		return is_domain_name (domain);											-- scheme not set when url is protocol relative
	end
end


--[[--------------------------&lt; S P L I T _ U R L &gt;------------------------------------------------------------

Split a url into a scheme, authority indicator, and domain.

First remove Fully Qualified Domain Name terminator (a dot following tld) (if any) and any path(/), query(?) or fragment(#).

If protocol relative url, return nil scheme and domain else return nil for both scheme and domain.

When not protocol relative, get scheme, authority indicator, and domain.  If there is an authority indicator (one
or more '/' characters immediately following the scheme's colon), make sure that there are only 2.

Strip off any port and path;

]]

local function split_url (url_str)
	local scheme, authority, domain;
	
	url_str = url_str:gsub ('([%a%d])%.?[/%?#].*$', '%1');						-- strip FQDN terminator and path(/), query(?), fragment (#) (the capture prevents false replacement of '//')

	if url_str:match ('^//%S*') then											-- if there is what appears to be a protocol relative url
		domain = url_str:match ('^//(%S*)')
	elseif url_str:match ('%S-:/*%S+') then										-- if there is what appears to be a scheme, optional authority indicator, and domain name
		scheme, authority, domain = url_str:match ('(%S-:)(/*)(%S+)');			-- extract the scheme, authority indicator, and domain portions
		authority = authority:gsub ('//', '', 1);								-- replace place 1 pair of '/' with nothing;
		if is_set(authority) then												-- if anything left (1 or 3+ '/' where authority should be) then
			return scheme;														-- return scheme only making domain nil which will cause an error message
		end
		domain = domain:gsub ('(%a):%d+', '%1');								-- strip port number if present
	end
	
	return scheme, domain;
end


--[[--------------------------&lt; L I N K _ P A R A M _ O K &gt;---------------------------------------------------

checks the content of |title-link=, |series-link=, |author-link= etc for properly formatted content: no wikilinks, no urls

Link parameters are to hold the title of a wikipedia article so none of the WP:TITLESPECIALCHARACTERS are allowed:
	# &lt; &gt; [ ] | { } _
except the underscore which is used as a space in wiki urls and # which is used for section links

returns false when the value contains any of these characters.

When there are no illegal characters, this function returns TRUE if value DOES NOT appear to be a valid url (the
|&lt;param&gt;-link= parameter is ok); else false when value appears to be a valid url (the |&lt;param&gt;-link= parameter is NOT ok).

]]

local function link_param_ok (value)
	local scheme, domain;
	if value:find ('[&lt;&gt;%[%]|{}]') then											-- if any prohibited characters
		return false;
	end

	scheme, domain = split_url (value);											-- get scheme or nil and domain or nil from url; 
	return not is_url (scheme, domain);											-- return true if value DOES NOT appear to be a valid url
end

--[[--------------------------&lt; L I N K _ T I T L E _ O K &gt;---------------------------------------------------

Use link_param_ok() to validate |&lt;param&gt;-link= value and its matching |&lt;title&gt;= value.

|&lt;title&gt;= may be wikilinked but not when |&lt;param&gt;-link= has a value.  This function emits an error message when
that condition exists

]]

local function link_title_ok (link, lorig, title, torig)
local orig;

	if is_set (link) then 														-- don't bother if &lt;param&gt;-link doesn't have a value
		if not link_param_ok (link) then										-- check |&lt;param&gt;-link= markup
			orig = lorig;														-- identify the failing link parameter
		elseif title:find ('%[%[') then											-- check |title= for wikilink markup
			orig = torig;														-- identify the failing |title= parameter
		end
	end

	if is_set (orig) then
		table.insert( z.message_tail, { set_error( 'bad_paramlink', orig)});	-- url or wikilink in |title= with |title-link=;
	end
end


--[[--------------------------&lt; C H E C K _ U R L &gt;------------------------------------------------------------

Determines whether a URL string appears to be valid.

First we test for space characters.  If any are found, return false.  Then split the url into scheme and domain
portions, or for protocol relative (//example.com) urls, just the domain.  Use is_url() to validate the two
portions of the url.  If both are valid, or for protocol relative if domain is valid, return true, else false.

Because it is different from a standard url, and because this module used external_link() to make external links
that work for standard and news: links, we validate newsgroup names here.  The specification for a newsgroup name
is at https://tools.ietf.org/html/rfc5536#section-3.1.4

]]

local function check_url( url_str )
	if nil == url_str:match (&quot;^%S+$&quot;) then										-- if there are any spaces in |url=value it can't be a proper url
		return false;
	end
	local scheme, domain;

	scheme, domain = split_url (url_str);										-- get scheme or nil and domain or nil from url;
	
	if 'news:' == scheme then													-- special case for newsgroups
		return domain:match('^[%a%d%+%-_]+%.[%a%d%+%-_%.]*[%a%d%+%-_]$');
	end
	
	return is_url (scheme, domain);												-- return true if value appears to be a valid url
end


--[=[-------------------------&lt; I S _ P A R A M E T E R _ E X T _ W I K I L I N K &gt;----------------------------

Return true if a parameter value has a string that begins and ends with square brackets [ and ] and the first
non-space characters following the opening bracket appear to be a url.  The test will also find external wikilinks
that use protocol relative urls. Also finds bare urls.

The frontier pattern prevents a match on interwiki links which are similar to scheme:path urls.  The tests that
find bracketed urls are required because the parameters that call this test (currently |title=, |chapter=, |work=,
and |publisher=) may have wikilinks and there are articles or redirects like '//Hus' so, while uncommon, |title=[[//Hus]]
is possible as might be [[en://Hus]].

]=]

local function is_parameter_ext_wikilink (value)
local scheme, domain;

	if value:match ('%f[%[]%[%a%S*:%S+.*%]') then								-- if ext wikilink with scheme and domain: [xxxx://yyyyy.zzz]
		scheme, domain = split_url (value:match ('%f[%[]%[(%a%S*:%S+).*%]'));
	elseif value:match ('%f[%[]%[//%S+.*%]') then								-- if protocol relative ext wikilink: [//yyyyy.zzz]
		scheme, domain = split_url (value:match ('%f[%[]%[(//%S+).*%]'));
	elseif value:match ('%a%S*:%S+') then										-- if bare url with scheme; may have leading or trailing plain text
		scheme, domain = split_url (value:match ('(%a%S*:%S+)'));
	elseif value:match ('//%S+') then											-- if protocol relative bare url: //yyyyy.zzz; may have leading or trailing plain text
		scheme, domain = split_url (value:match ('(//%S+)'));					-- what is left should be the domain
	else
		return false;															-- didn't find anything that is obviously a url
	end

	return is_url (scheme, domain);												-- return true if value appears to be a valid url
end


--[[-------------------------&lt; C H E C K _ F O R _ U R L &gt;-----------------------------------------------------

loop through a list of parameters and their values.  Look at the value and if it has an external link, emit an error message.

]]

local function check_for_url (parameter_list)
local error_message = '';
	for k, v in pairs (parameter_list) do										-- for each parameter in the list
		if is_parameter_ext_wikilink (v) then									-- look at the value; if there is a url add an error message
			if is_set(error_message) then										-- once we've added the first portion of the error message ...
				error_message=error_message .. &quot;, &quot;;							-- ... add a comma space separator
			end
			error_message=error_message .. &quot;&amp;#124;&quot; .. k .. &quot;=&quot;;				-- add the failed parameter
		end
	end
	if is_set (error_message) then												-- done looping, if there is an error message, display it
		table.insert( z.message_tail, { set_error( 'param_has_ext_link', {error_message}, true ) } );
	end
end


--[[--------------------------&lt; S A F E _ F O R _ U R L &gt;------------------------------------------------------

Escape sequences for content that will be used for URL descriptions

]]

local function safe_for_url( str )
	if str:match( &quot;%[%[.-%]%]&quot; ) ~= nil then 
		table.insert( z.message_tail, { set_error( 'wikilink_in_url', {}, true ) } );
	end
	
	return str:gsub( '[%[%]\n]', {	
		['['] = '&amp;#91;',
		[']'] = '&amp;#93;',
		['\n'] = ' ' } );
end

--[[--------------------------&lt; E X T E R N A L _ L I N K &gt;----------------------------------------------------

Format an external link with error checking

]]

local function external_link( URL, label, source, access)
	local error_str = &quot;&quot;;
	local domain;
	local path;
	local base_url;
	
	if not is_set( label ) then
		label = URL;
		if is_set( source ) then
			error_str = set_error( 'bare_url_missing_title', { wrap_style ('parameter', source) }, false, &quot; &quot; );
		else
			error( cfg.messages[&quot;bare_url_no_origin&quot;] );
		end			
	end
	if not check_url( URL ) then
		error_str = set_error( 'bad_url', {wrap_style ('parameter', source)}, false, &quot; &quot; ) .. error_str;
	end
	
	domain, path = URL:match ('^([/%.%-%+:%a%d]+)([/%?#].*)$');					-- split the url into scheme plus domain and path
	if path then																-- if there is a path portion
		path = path:gsub ('[%[%]]', {['[']='%5b',[']']='%5d'});					-- replace '[' and ']' with their percent encoded values
		URL=domain..path;														-- and reassemble
	end
	
	if is_set (access) then														-- access level (subscription, registration, limited)
		local label_head = '';
		local label_tail;
		local markup = '';														-- can't start a span inside italic markup and end it outside the italic markup

		label = safe_for_url (label);											-- replace square brackets and newlines (is this necessary? already done above?)
		if label:match (&quot;(.*)%s+(.+)('''?)$&quot;) then								-- for italicized titles (cite book, etc)
			label_head, label_tail, markup = label:match (&quot;(.*)%s+(.+)('''?)$&quot;);	-- split the label at the right-most space; separate the markup
		elseif label:match (&quot;(.*)%s+(.+)$&quot;) then								-- for upright titles (journal, news, magazine, etc)
			label_head, label_tail = label:match (&quot;(.*)%s+(.+)$&quot;);				-- split the label at the right-most space; no markup 
		elseif label:match (&quot;(.+)('''?)$&quot;) then									-- single word label with markup
			label_tail, markup = label:match (&quot;(.+)('''?)$&quot;);					-- save label text as label tail; separate the markup
		else
			label_tail = label;
		end

		base_url = table.concat (
			{
			'&lt;span class=&quot;plainlinks&quot;&gt;[',										-- opening css
			URL,																-- the url
			' ',																-- the required space
			label_head,															-- all but the last word of the label
			' &lt;span class=&quot;nowrap&quot;&gt;',											-- nowrap css for the last word and the signal icon
			label_tail,															-- last (or only) word of the label inside the span
			'&lt;span style=&quot;padding-left:0.15em&quot;&gt;',								-- signal spacing css
			cfg.presentation[access],											-- the appropriate icon
			'&lt;/span&gt;&lt;/span&gt;',													-- close signal spacing and nowrap spans
			markup,																-- insert italic markup if any
			']&lt;/span&gt;'															-- close the plain links span
			});
	else
		base_url = table.concat({ &quot;[&quot;, URL, &quot; &quot;, safe_for_url( label ), &quot;]&quot; });	-- no signal markup
	end
	
	return table.concat({ base_url, error_str });
end


--[[--------------------------&lt; D E P R E C A T E D _ P A R A M E T E R &gt;--------------------------------------

Categorize and emit an error message when the citation contains one or more deprecated parameters.  The function includes the
offending parameter name to the error message.  Only one error message is emitted regardless of the number of deprecated
parameters in the citation.

added_deprecated_cat is a boolean declared in page scope variables above

]]

local function deprecated_parameter(name)
	if not added_deprecated_cat then
		added_deprecated_cat = true;											-- note that we've added this category
		table.insert( z.message_tail, { set_error( 'deprecated_params', {name}, true ) } );		-- add error message
	end
end

--[[--------------------------&lt; K E R N _ Q U O T E S &gt;--------------------------------------------------------

Apply kerning to open the space between the quote mark provided by the Module and a leading or trailing quote mark contained in a |title= or |chapter= parameter's value.
This function will positive kern either single or double quotes:
	&quot;'Unkerned title with leading and trailing single quote marks'&quot;
	&quot; 'Kerned title with leading and trailing single quote marks' &quot; (in real life the kerning isn't as wide as this example)
Double single quotes (italic or bold wikimarkup) are not kerned.

Replaces unicode quotemarks with typewriter quote marks regardless of the need for kerning.

Call this function for chapter titles, for website titles, etc; not for book titles.

]]

local function kern_quotes (str)
	local cap='';
	local cap2='';
																				-- TODO: move this elswhere so that all title-holding elements get these quote marks replaced?
--	str= mw.ustring.gsub (str, '[]', '\&quot;');									-- replace  (U+201C &amp; U+201D) with &quot; (typewriter double quote mark)
--	str= mw.ustring.gsub (str, '[]', '\'');									-- replace  (U+2018 &amp; U+2019) with ' (typewriter single quote mark)
	
	cap, cap2 = str:match (&quot;^([\&quot;\'])([^\'].+)&quot;);								-- match leading double or single quote but not double single quotes
	if is_set (cap) then
		str = substitute (cfg.presentation['kern-left'], {cap, cap2});
	end

	cap, cap2 = str:match (&quot;^(.+[^\'])([\&quot;\'])$&quot;)
	if is_set (cap) then
		str = substitute (cfg.presentation['kern-right'], {cap, cap2});
	end
	return str;
end

--[[--------------------------&lt; F O R M A T _ S C R I P T _ V A L U E &gt;----------------------------------------

|script-title= holds title parameters that are not written in Latin based scripts: Chinese, Japanese, Arabic, Hebrew, etc. These scripts should
not be italicized and may be written right-to-left.  The value supplied by |script-title= is concatenated onto Title after Title has been wrapped
in italic markup.

Regardless of language, all values provided by |script-title= are wrapped in &lt;bdi&gt;...&lt;/bdi&gt; tags to isolate rtl languages from the English left to right.

|script-title= provides a unique feature.  The value in |script-title= may be prefixed with a two-character ISO639-1 language code and a colon:
	|script-title=ja:*** *** (where * represents a Japanese character)
Spaces between the two-character code and the colon and the colon and the first script character are allowed:
	|script-title=ja : *** ***
	|script-title=ja: *** ***
	|script-title=ja :*** ***
Spaces preceding the prefix are allowed: |script-title = ja:*** ***

The prefix is checked for validity.  If it is a valid ISO639-1 language code, the lang attribute (lang=&quot;ja&quot;) is added to the &lt;bdi&gt; tag so that browsers can
know the language the tag contains.  This may help the browser render the script more correctly.  If the prefix is invalid, the lang attribute
is not added.  At this time there is no error message for this condition.

Supports |script-title= and |script-chapter=

TODO: error messages when prefix is invalid ISO639-1 code; when script_value has prefix but no script;
]]

local function format_script_value (script_value)
	local lang='';																-- initialize to empty string
	local name;
	if script_value:match('^%l%l%s*:') then										-- if first 3 non-space characters are script language prefix
		lang = script_value:match('^(%l%l)%s*:%s*%S.*');						-- get the language prefix or nil if there is no script
		if not is_set (lang) then
			return '';															-- script_value was just the prefix so return empty string
		end
																				-- if we get this far we have prefix and script
		name = mw.language.fetchLanguageName( lang, &quot;en&quot; );						-- get language name so that we can use it to categorize
		if is_set (name) then													-- is prefix a proper ISO 639-1 language code?
			script_value = script_value:gsub ('^%l%l%s*:%s*', '');				-- strip prefix from script
																				-- is prefix one of these language codes?
			if in_array (lang, cfg.script_lang_codes) then
				add_prop_cat ('script_with_name', {name, lang})
			else
				add_prop_cat ('script')
			end
			lang = ' lang=&quot;' .. lang .. '&quot; ';									-- convert prefix into a lang attribute
		else
			lang = '';															-- invalid so set lang to empty string
		end
	end
	script_value = substitute (cfg.presentation['bdi'], {lang, script_value});	-- isolate in case script is rtl

	return script_value;
end

--[[--------------------------&lt; S C R I P T _ C O N C A T E N A T E &gt;------------------------------------------

Initially for |title= and |script-title=, this function concatenates those two parameter values after the script value has been 
wrapped in &lt;bdi&gt; tags.
]]

local function script_concatenate (title, script)
	if is_set (script) then
		script = format_script_value (script);									-- &lt;bdi&gt; tags, lang atribute, categorization, etc; returns empty string on error
		if is_set (script) then
			title = title .. ' ' .. script;										-- concatenate title and script title
		end
	end
	return title;
end


--[[--------------------------&lt; W R A P _ M S G &gt;--------------------------------------------------------------

Applies additional message text to various parameter values. Supplied string is wrapped using a message_list
configuration taking one argument.  Supports lower case text for {{citation}} templates.  Additional text taken
from citation_config.messages - the reason this function is similar to but separate from wrap_style().

]]

local function wrap_msg (key, str, lower)
	if not is_set( str ) then
		return &quot;&quot;;
	end
	if true == lower then
		local msg;
		msg = cfg.messages[key]:lower();										-- set the message to lower case before 
		return substitute( msg, str );										-- including template text
	else
		return substitute( cfg.messages[key], str );
	end		
end


--[[--------------------------&lt; F O R M A T _ C H A P T E R _ T I T L E &gt;--------------------------------------

Format the four chapter parameters: |script-chapter=, |chapter=, |trans-chapter=, and |chapter-url= into a single Chapter meta-
parameter (chapter_url_source used for error messages).

]]

local function format_chapter_title (scriptchapter, chapter, transchapter, chapterurl, chapter_url_source, no_quotes)
	local chapter_error = '';
	
	if not is_set (chapter) then
		chapter = '';															-- to be safe for concatenation
	else
		if false == no_quotes then
			chapter = kern_quotes (chapter);										-- if necessary, separate chapter title's leading and trailing quote marks from Module provided quote marks
			chapter = wrap_style ('quoted-title', chapter);
		end
	end

	chapter = script_concatenate (chapter, scriptchapter)						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped

	if is_set (transchapter) then
		transchapter = wrap_style ('trans-quoted-title', transchapter);
		if is_set (chapter) then
			chapter = chapter ..  ' ' .. transchapter;
		else																	-- here when transchapter without chapter or script-chapter
			chapter = transchapter;												-- 
			chapter_error = ' ' .. set_error ('trans_missing_title', {'chapter'});
		end
	end

	if is_set (chapterurl) then
		chapter = external_link (chapterurl, chapter, chapter_url_source, nil);		-- adds bare_url_missing_title error if appropriate
	end

	return chapter .. chapter_error;
end

--[[--------------------------&lt; H A S _ I N V I S I B L E _ C H A R S &gt;----------------------------------------

This function searches a parameter's value for nonprintable or invisible characters.  The search stops at the
first match.

This function will detect the visible replacement character when it is part of the wikisource.

Detects but ignores nowiki and math stripmarkers.  Also detects other named stripmarkers (gallery, math, pre, ref)
and identifies them with a slightly different error message.  See also coins_cleanup().

Detects but ignores the character pattern that results from the transclusion of {{'}} templates.

Output of this function is an error message that identifies the character or the Unicode group, or the stripmarker
that was detected along with its position (or, for multi-byte characters, the position of its first byte) in the
parameter value.

]]

local function has_invisible_chars (param, v)
	local position = '';														-- position of invisible char or starting position of stripmarker
	local dummy;																-- end of matching string; not used but required to hold end position when a capture is returned
	local capture;																-- used by stripmarker detection to hold name of the stripmarker
	local i=1;
	local stripmarker, apostrophe;
	
	capture = string.match (v, '[%w%p ]*');										-- Test for values that are simple ASCII text and bypass other tests if true
	if capture == v then														-- if same there are no unicode characters
		return;
	end

	while cfg.invisible_chars[i] do
		local char=cfg.invisible_chars[i][1]									-- the character or group name
		local pattern=cfg.invisible_chars[i][2]									-- the pattern used to find it
		position, dummy, capture = mw.ustring.find (v, pattern)					-- see if the parameter value contains characters that match the pattern
		
		if position then
			if 'nowiki' == capture or 'math' == capture then 					-- nowiki, math stripmarker (not an error condition)
				stripmarker = true;												-- set a flag
			elseif true == stripmarker and 'delete' == char then				-- because stripmakers begin and end with the delete char, assume that we've found one end of a stripmarker
				position = nil;													-- unset
			else
				local err_msg;
				if capture then
					err_msg = capture .. ' ' .. char;
				else
					err_msg = char .. ' ' .. 'character';
				end

				table.insert( z.message_tail, { set_error( 'invisible_char', {err_msg, wrap_style ('parameter', param), position}, true ) } );	-- add error message
				return;															-- and done with this parameter
			end
		end
		i=i+1;																	-- bump our index
	end
end


--[[--------------------------&lt; A R G U M E N T _ W R A P P E R &gt;----------------------------------------------

Argument wrapper.  This function provides support for argument mapping defined in the configuration file so that
multiple names can be transparently aliased to single internal variable.

]]

local function argument_wrapper( args )
	local origin = {};
	
	return setmetatable({
		ORIGIN = function( self, k )
			local dummy = self[k]; --force the variable to be loaded.
			return origin[k];
		end
	},
	{
		__index = function ( tbl, k )
			if origin[k] ~= nil then
				return nil;
			end
			
			local args, list, v = args, cfg.aliases[k];
			
			if type( list ) == 'table' then
				v, origin[k] = select_one( args, list, 'redundant_parameters' );
				if origin[k] == nil then
					origin[k] = ''; -- Empty string, not nil
				end
			elseif list ~= nil then
				v, origin[k] = args[list], list;
			else
				-- maybe let through instead of raising an error?
				-- v, origin[k] = args[k], k;
				error( cfg.messages['unknown_argument_map'] );
			end
			
			-- Empty strings, not nil;
			if v == nil then
				v = cfg.defaults[k] or '';
				origin[k] = '';
			end
			
			tbl = rawset( tbl, k, v );
			return v;
		end,
	});
end

--[[--------------------------&lt; V A L I D A T E &gt;--------------------------------------------------------------

Looks for a parameter's name in one of several whitelists.

Parameters in the whitelist can have three values:
	true - active, supported parameters
	false - deprecated, supported parameters
	nil - unsupported parameters
	
]]

--local function validate( name )
local function validate( name, cite_class )
	local name = tostring( name );
	local state;
	
	if in_array (cite_class, {'arxiv', 'biorxiv', 'citeseerx'}) then				-- limited parameter sets allowed for these templates
		state = whitelist.limited_basic_arguments[ name ];
		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end

		if 'arxiv' == cite_class then											-- basic parameters unique to these templates
			state = whitelist.arxiv_basic_arguments[name];
		end
		if 'biorxiv' == cite_class then
			state = whitelist.biorxiv_basic_arguments[name];
		end
		if 'citeseerx' == cite_class then
			state = whitelist.citeseerx_basic_arguments[name];
		end

		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end
																				-- limited enumerated parameters list
		name = name:gsub( &quot;%d+&quot;, &quot;#&quot; );											-- replace digit(s) with # (last25 becomes last#)
		state = whitelist.limited_numbered_arguments[ name ];
		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end

		return false;															-- not supported because not found or name is set to nil
	end																			-- end limited parameter-set templates
		
	state = whitelist.basic_arguments[ name ];									-- all other templates; all normal parameters allowed
											
	if true == state then return true; end										-- valid actively supported parameter
	if false == state then
		deprecated_parameter (name);											-- parameter is deprecated but still supported
		return true;
	end
																				-- all enumerated parameters allowed
	name = name:gsub( &quot;%d+&quot;, &quot;#&quot; );												-- replace digit(s) with # (last25 becomes last#
	state = whitelist.numbered_arguments[ name ];

	if true == state then return true; end										-- valid actively supported parameter
	if false == state then
		deprecated_parameter (name);											-- parameter is deprecated but still supported
		return true;
	end
	
	return false;																-- not supported because not found or name is set to nil
end


--[[--------------------------&lt; N O W R A P _ D A T E &gt;--------------------------------------------------------

When date is YYYY-MM-DD format wrap in nowrap span: &lt;span ...&gt;YYYY-MM-DD&lt;/span&gt;.  When date is DD MMMM YYYY or is
MMMM DD, YYYY then wrap in nowrap span: &lt;span ...&gt;DD MMMM&lt;/span&gt; YYYY or &lt;span ...&gt;MMMM DD,&lt;/span&gt; YYYY

DOES NOT yet support MMMM YYYY or any of the date ranges.

]]

local function nowrap_date (date)
	local cap='';
	local cap2='';

	if date:match(&quot;^%d%d%d%d%-%d%d%-%d%d$&quot;) then
		date = substitute (cfg.presentation['nowrap1'], date);
	
	elseif date:match(&quot;^%a+%s*%d%d?,%s+%d%d%d%d$&quot;) or date:match (&quot;^%d%d?%s*%a+%s+%d%d%d%d$&quot;) then
		cap, cap2 = string.match (date, &quot;^(.*)%s+(%d%d%d%d)$&quot;);
		date = substitute (cfg.presentation['nowrap2'], {cap, cap2});
	end
	
	return date;
end

--[[--------------------------&lt; S E T _ T I T L E T Y P E &gt;----------------------------------------------------

This function sets default title types (equivalent to the citation including |type=&lt;default value&gt;) for those templates that have defaults.
Also handles the special case where it is desirable to omit the title type from the rendered citation (|type=none).

]]

local function set_titletype (cite_class, title_type)
	if is_set(title_type) then
		if &quot;none&quot; == title_type then
			title_type = &quot;&quot;;													-- if |type=none then type parameter not displayed
		end
		return title_type;														-- if |type= has been set to any other value use that value
	end

	return cfg.title_types [cite_class] or '';									-- set template's default title type; else empty string for concatenation
end


--[[--------------------------&lt; H Y P H E N _ T O _ D A S H &gt;--------------------------------------------------

Converts a hyphen to a dash

]]

local function hyphen_to_dash( str )
	if not is_set(str) or str:match( &quot;[%[%]{}&lt;&gt;]&quot; ) ~= nil then
		return str;
	end	
	return str:gsub( '-', '' );
end


--[[--------------------------&lt; S A F E _ J O I N &gt;------------------------------------------------------------

Joins a sequence of strings together while checking for duplicate separation characters.

]]

local function safe_join( tbl, duplicate_char )
	--[[
	Note: we use string functions here, rather than ustring functions.
	
	This has considerably faster performance and should work correctly as 
	long as the duplicate_char is strict ASCII.  The strings
	in tbl may be ASCII or UTF8.
	]]
	
	local str = '';																-- the output string
	local comp = '';															-- what does 'comp' mean?
	local end_chr = '';
	local trim;
	for _, value in ipairs( tbl ) do
		if value == nil then value = ''; end
		
		if str == '' then														-- if output string is empty
			str = value;														-- assign value to it (first time through the loop)
		elseif value ~= '' then
			if value:sub(1,1) == '&lt;' then										-- Special case of values enclosed in spans and other markup.
				comp = value:gsub( &quot;%b&lt;&gt;&quot;, &quot;&quot; );								-- remove html markup (&lt;span&gt;string&lt;/span&gt; -&gt; string)
			else
				comp = value;
			end
																				-- typically duplicate_char is sepc
			if comp:sub(1,1) == duplicate_char then								-- is first charactier same as duplicate_char? why test first character?
																				--   Because individual string segments often (always?) begin with terminal punct for th
																				--   preceding segment: 'First element' .. 'sepc next element' .. etc?
				trim = false;
				end_chr = str:sub(-1,-1);										-- get the last character of the output string
				-- str = str .. &quot;&lt;HERE(enchr=&quot; .. end_chr.. &quot;)&quot;					-- debug stuff?
				if end_chr == duplicate_char then								-- if same as separator
					str = str:sub(1,-2);										-- remove it
				elseif end_chr == &quot;'&quot; then										-- if it might be wikimarkup
					if str:sub(-3,-1) == duplicate_char .. &quot;''&quot; then			-- if last three chars of str are sepc'' 
						str = str:sub(1, -4) .. &quot;''&quot;;							-- remove them and add back ''
					elseif str:sub(-5,-1) == duplicate_char .. &quot;]]''&quot; then		-- if last five chars of str are sepc]]'' 
						trim = true;											-- why? why do this and next differently from previous?
					elseif str:sub(-4,-1) == duplicate_char .. &quot;]''&quot; then		-- if last four chars of str are sepc]'' 
						trim = true;											-- same question
					end
				elseif end_chr == &quot;]&quot; then										-- if it might be wikimarkup
					if str:sub(-3,-1) == duplicate_char .. &quot;]]&quot; then			-- if last three chars of str are sepc]] wikilink 
						trim = true;
					elseif str:sub(-2,-1) == duplicate_char .. &quot;]&quot; then			-- if last two chars of str are sepc] external link
						trim = true;
					elseif str:sub(-4,-1) == duplicate_char .. &quot;'']&quot; then		-- normal case when |url=something &amp; |title=Title.
						trim = true;
					end
				elseif end_chr == &quot; &quot; then										-- if last char of output string is a space
					if str:sub(-2,-1) == duplicate_char .. &quot; &quot; then				-- if last two chars of str are &lt;sepc&gt;&lt;space&gt;
						str = str:sub(1,-3);									-- remove them both
					end
				end

				if trim then
					if value ~= comp then 										-- value does not equal comp when value contains html markup
						local dup2 = duplicate_char;
						if dup2:match( &quot;%A&quot; ) then dup2 = &quot;%&quot; .. dup2; end		-- if duplicate_char not a letter then escape it
						
						value = value:gsub( &quot;(%b&lt;&gt;)&quot; .. dup2, &quot;%1&quot;, 1 )			-- remove duplicate_char if it follows html markup
					else
						value = value:sub( 2, -1 );								-- remove duplicate_char when it is first character
					end
				end
			end
			str = str .. value;													--add it to the output string
		end
	end
	return str;
end  


--[[--------------------------&lt; I S _ S U F F I X &gt;------------------------------------------------------------

returns true is suffix is properly formed Jr, Sr, or ordinal in the range 29.  Puncutation not allowed.

]]

local function is_suffix (suffix)
	if in_array (suffix, {'Jr', 'Sr', '2nd', '3rd'}) or suffix:match ('^%dth$') then
		return true;
	end
	return false;
end

--[[--------------------------&lt; I S _ G O O D _ V A N C _ N A M E &gt;--------------------------------------------

For Vancouver Style, author/editor names are supposed to be rendered in Latin (read ASCII) characters.  When a name
uses characters that contain diacritical marks, those characters are to converted to the corresponding Latin character.
When a name is written using a non-Latin alphabet or logogram, that name is to be transliterated into Latin characters.
These things are not currently possible in this module so are left to the editor to do.

This test allows |first= and |last= names to contain any of the letters defined in the four Unicode Latin character sets
	[http://www.unicode.org/charts/PDF/U0000.pdf C0 Controls and Basic Latin] 0041005A, 0061007A
	[http://www.unicode.org/charts/PDF/U0080.pdf C1 Controls and Latin-1 Supplement] 00C000D6, 00D800F6, 00F800FF
	[http://www.unicode.org/charts/PDF/U0100.pdf Latin Extended-A] 0100017F
	[http://www.unicode.org/charts/PDF/U0180.pdf Latin Extended-B] 018001BF, 01C4024F

|lastn= also allowed to contain hyphens, spaces, and apostrophes. (http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35029/)
|firstn= also allowed to contain hyphens, spaces, apostrophes, and periods

This original test:
	if nil == mw.ustring.find (last, &quot;^[A-Za-z----%-%s%']*$&quot;) or nil == mw.ustring.find (first, &quot;^[A-Za-z----%-%s%'%.]+[2-6%a]*$&quot;) then
was written ouside of the code editor and pasted here because the code editor gets confused between character insertion point and cursor position.
The test has been rewritten to use decimal character escape sequence for the individual bytes of the unicode characters so that it is not necessary
to use an external editor to maintain this code.

	\195\128-\195\150  - (U+00C0U+00D6  C0 controls)
	\195\152-\195\182  - (U+00D8-U+00F6  C0 controls)
	\195\184-\198\191  - (U+00F8-U+01BF  C0 controls, Latin extended A &amp; B)
	\199\132-\201\143  - (U+01C4-U+024F  Latin extended B)

]]

local function is_good_vanc_name (last, first)
	local first, suffix = first:match ('(.-),?%s*([%dJS][%drndth]+)%.?$') or first;		-- if first has something that looks like a generational suffix, get it

	if is_set (suffix) then
		if not is_suffix (suffix) then
			add_vanc_error ('suffix');
			return false;														-- not a name with an appropriate suffix
		end
	end
	if nil == mw.ustring.find (last, &quot;^[A-Za-z\195\128-\195\150\195\152-\195\182\195\184-\198\191\199\132-\201\143%-%s%']*$&quot;) or
		nil == mw.ustring.find (first, &quot;^[A-Za-z\195\128-\195\150\195\152-\195\182\195\184-\198\191\199\132-\201\143%-%s%'%.]*$&quot;) then
			add_vanc_error ('non-Latin character');
			return false;														-- not a string of latin characters; Vancouver requires Romanization
	end;
	return true;
end

--[[--------------------------&lt; R E D U C E _ T O _ I N I T I A L S &gt;------------------------------------------

Attempts to convert names to initials in support of |name-list-format=vanc.  

Names in |firstn= may be separated by spaces or hyphens, or for initials, a period. See http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35062/.

Vancouver style requires family rank designations (Jr, II, III, etc) to be rendered as Jr, 2nd, 3rd, etc.  See http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35085/.
This code only accepts and understands generational suffix in the Vancouver format because Roman numerals look like, and can be mistaken for, initials.

This function uses ustring functions because firstname initials may be any of the unicode Latin characters accepted by is_good_vanc_name ().

]]

local function reduce_to_initials(first)
	local name, suffix = mw.ustring.match(first, &quot;^(%u+) ([%dJS][%drndth]+)$&quot;);

	if not name then															-- if not initials and a suffix
		name = mw.ustring.match(first, &quot;^(%u+)$&quot;);								-- is it just intials?
	end

	if name then																-- if first is initials with or without suffix
		if 3 &gt; mw.ustring.len (name) then										-- if one or two initials
			if suffix then														-- if there is a suffix
				if is_suffix (suffix) then										-- is it legitimate?
					return first;												-- one or two initials and a valid suffix so nothing to do
				else
					add_vanc_error ('suffix');									-- one or two initials with invalid suffix so error message
					return first;												-- and return first unmolested
				end
			else
				return first;													-- one or two initials without suffix; nothing to do
			end
		end
	end																			-- if here then name has 3 or more uppercase letters so treat them as a word


	local initials, names = {}, {};												-- tables to hold name parts and initials
	local i = 1;																-- counter for number of initials

	names = mw.text.split (first, '[%s,]+');									-- split into a table of names and possible suffix

	while names[i] do															-- loop through the table
		if 1 &lt; i and names[i]:match ('[%dJS][%drndth]+%.?$') then				-- if not the first name, and looks like a suffix (may have trailing dot)
			names[i] = names[i]:gsub ('%.', '');								-- remove terminal dot if present
			if is_suffix (names[i]) then										-- if a legitimate suffix
				table.insert (initials, ' ' .. names[i]);						-- add a separator space, insert at end of initials table
				break;															-- and done because suffix must fall at the end of a name
			end																	-- no error message if not a suffix; possibly because of Romanization
		end
		if 3 &gt; i then
			table.insert (initials, mw.ustring.sub(names[i],1,1));				-- insert the intial at end of initials table
		end
		i = i+1;																-- bump the counter
	end
			
	return table.concat(initials)												-- Vancouver format does not include spaces.
end

--[[--------------------------&lt; L I S T  _ P E O P L E &gt;-------------------------------------------------------

Formats a list of people (e.g. authors / editors) 

]]

local function list_people(control, people, etal)
	local sep;
	local namesep;
	local format = control.format
	local maximum = control.maximum
	local lastauthoramp = control.lastauthoramp;
	local text = {}

	if 'vanc' == format then													-- Vancouver-like author/editor name styling?
		sep = ',';																-- name-list separator between authors is a comma
		namesep = ' ';															-- last/first separator is a space
	elseif 'mla' == control.mode then
		sep = ',';																-- name-list separator between authors is a comma
		namesep = ', '															-- last/first separator is &lt;comma&gt;&lt;space&gt;
	else
		sep = ';'																-- name-list separator between authors is a semicolon
		namesep = ', '															-- last/first separator is &lt;comma&gt;&lt;space&gt;
	end
	
	if sep:sub(-1,-1) ~= &quot; &quot; then sep = sep .. &quot; &quot; end
	if is_set (maximum) and maximum &lt; 1 then return &quot;&quot;, 0; end					-- returned 0 is for EditorCount; not used for authors
	
	for i,person in ipairs(people) do
		if is_set(person.last) then
			local mask = person.mask
			local one
			local sep_one = sep;
			if is_set (maximum) and i &gt; maximum then
				etal = true;
				break;
			elseif (mask ~= nil) then
				local n = tonumber(mask)
				if (n ~= nil) then
					one = string.rep(&quot;&amp;mdash;&quot;,n)
				else
					one = mask;
					sep_one = &quot; &quot;;
				end
			else
				one = person.last
				local first = person.first
				if is_set(first) then
					if 'mla' == control.mode then 
						if i == 1 then											-- for mla
							one = one .. namesep .. first;						-- first name last, first
						else													-- all other names
							one = first .. ' ' .. one;							-- first last
						end
					else
						if ( &quot;vanc&quot; == format ) then								-- if vancouver format
							one = one:gsub ('%.', '');								-- remove periods from surnames (http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35029/)
							if not person.corporate and is_good_vanc_name (one, first) then					-- and name is all Latin characters; corporate authors not tested
								first = reduce_to_initials(first)					-- attempt to convert first name(s) to initials
							end
						end
						one = one .. namesep .. first;
					end
				end
				if is_set(person.link) and person.link ~= control.page_name then
					one = &quot;[[&quot; .. person.link .. &quot;|&quot; .. one .. &quot;]]&quot;				-- link author/editor if this page is not the author's/editor's page
				end
			end
			table.insert( text, one )
			table.insert( text, sep_one )
		end
	end

	local count = #text / 2;													-- (number of names + number of separators) divided by 2
	if count &gt; 0 then 
		if count &gt; 1 and is_set(lastauthoramp) and not etal then
			if 'mla' == control.mode then
				text[#text-2] = &quot;, and &quot;;										-- replace last separator with ', and ' text
			else
				text[#text-2] = &quot; &amp; &quot;;											-- replace last separator with ampersand text
			end
		end
		text[#text] = nil;														-- erase the last separator
	end
	
	local result = table.concat(text)											-- construct list
	if etal and is_set (result) then											-- etal may be set by |display-authors=etal but we might not have a last-first list
		result = result .. sep .. ' ' .. cfg.messages['et al'];					-- we've go a last-first list and etal so add et al.
	end
	
	return result, count
end

--[[--------------------------&lt; A N C H O R _ I D &gt;------------------------------------------------------------

Generates a CITEREF anchor ID if we have at least one name or a date.  Otherwise returns an empty string.

namelist is one of the contributor-, author-, or editor-name lists chosen in that order.  year is Year or anchor_year.

]]
local function anchor_id (namelist, year)
	local names={};																-- a table for the one to four names and year
	for i,v in ipairs (namelist) do												-- loop through the list and take up to the first four last names
		names[i] = v.last 
		if i == 4 then break end												-- if four then done
	end
	table.insert (names, year);													-- add the year at the end
	local id = table.concat(names);												-- concatenate names and year for CITEREF id
	if is_set (id) then															-- if concatenation is not an empty string
		return &quot;CITEREF&quot; .. id;													-- add the CITEREF portion
	else
		return '';																-- return an empty string; no reason to include CITEREF id in this citation
	end
end


--[[--------------------------&lt; N A M E _ H A S _ E T A L &gt;----------------------------------------------------

Evaluates the content of author and editor name parameters for variations on the theme of et al.  If found,
the et al. is removed, a flag is set to true and the function returns the modified name and the flag.

This function never sets the flag to false but returns it's previous state because it may have been set by
previous passes through this function or by the parameters |display-authors=etal or |display-editors=etal

]]

local function name_has_etal (name, etal, nocat)

	if is_set (name) then														-- name can be nil in which case just return
		local etal_pattern = &quot;[;,]? *[\&quot;']*%f[%a][Ee][Tt] *[Aa][Ll][%.\&quot;']*$&quot;	-- variations on the 'et al' theme
		local others_pattern = &quot;[;,]? *%f[%a]and [Oo]thers&quot;;					-- and alternate to et al.
		
		if name:match (etal_pattern) then										-- variants on et al.
			name = name:gsub (etal_pattern, '');								-- if found, remove
			etal = true;														-- set flag (may have been set previously here or by |display-authors=etal)
			if not nocat then													-- no categorization for |vauthors=
				add_maint_cat ('etal');											-- and add a category if not already added
			end
		elseif name:match (others_pattern) then									-- if not 'et al.', then 'and others'?
			name = name:gsub (others_pattern, '');								-- if found, remove
			etal = true;														-- set flag (may have been set previously here or by |display-authors=etal)
			if not nocat then													-- no categorization for |vauthors=
				add_maint_cat ('etal');											-- and add a category if not already added
			end
		end
	end
	return name, etal;															-- 
end


--[[--------------------------&lt; N A M E _ H A S _ E D _ M A R K U P &gt;------------------------------------------

Evaluates the content of author and editor parameters for extranious editor annotations: ed, ed., eds, (Ed.), etc.
These annotation do not belong in author parameters and are redundant in editor parameters.  If found, the function
adds the editor markup maintenance category.

]]

local function name_has_ed_markup (name, list_name)
	local _, pattern;
	local patterns = {															-- these patterns match annotations at end of name
		'%f[%(%[][%(%[]%s*[Ee][Dd][Ss]?%.?%s*[%)%]]?$',							-- (ed) or (eds): leading '(', case insensitive 'ed', optional 's', '.' and/or ')'
		'[,%.%s]%f[e]eds?%.?$',													-- ed or eds: without '('or ')'; case sensitive (ED could be initials Ed could be name)
		'%f[%(%[][%(%[]%s*[Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%.?%s*[%)%]]?$',			-- (editor) or (editors): leading '(', case insensitive, optional '.' and/or ')'
		'[,%.%s]%f[Ee][Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%.?$',						-- editor or editors: without '('or ')'; case insensitive
		
																				-- these patterns match annotations at beginning of name
		'^eds?[%.,;]',															-- ed. or eds.: lower case only, optional 's', requires '.'
		'^[%(%[]%s*[Ee][Dd][Ss]?%.?%s*[%)%]]',									-- (ed) or (eds): also sqare brackets, case insensitive, optional 's', '.'
		'^[%(%[]?%s*[Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%A',							-- (editor or (editors: also sq brackets, case insensitive, optional brackets, 's'
		'^[%(%[]?%s*[Ee][Dd][Ii][Tt][Ee][Dd]%A',								-- (edited: also sq brackets, case insensitive, optional brackets

		}

	if is_set (name) then
		for _, pattern in ipairs (patterns) do									-- spin through patterns table and
			if name:match (pattern) then
				add_maint_cat ('extra_text_names', cfg.special_case_translation [list_name]);	-- add a maint cat for this template
				break;
			end
		end
	end
	return name;																-- and done
end


--[[--------------------------&lt; N A M E _ H A S _ M U L T _ N A M E S &gt;----------------------------------------

Evaluates the content of author and editor (surnames only) parameters for multiple names.  Multiple names are
indicated if there is more than one comma and or semicolon.  If found, the function adds the multiple name
(author or editor) maintenance category.

]]

local function name_has_mult_names (name, list_name)
local count, _;
	if is_set (name) then
		_, count = name:gsub ('[;,]', '');										-- count the number of separator-like characters
		
		if 1 &lt; count then														-- param could be |author= or |editor= so one separator character is acceptable
			add_maint_cat ('mult_names', cfg.special_case_translation [list_name]);	-- more than one separator indicates multiple names so add a maint cat for this template
		end
	end
	return name;																-- and done
end


--[[--------------------------&lt; N A M E _ C H E C K S &gt;--------------------------------------------------------
This function calls various name checking functions used to validate the content of the various name-holding
parameters.

]]

local function name_checks (last, first, list_name)
	if is_set (last) then
		if last:match ('^%(%(.*%)%)$') then										-- if wrapped in doubled parentheses, accept as written 
			last = last:match ('^%(%((.*)%)%)$');								-- strip parens
		else
			last = name_has_mult_names (last, list_name);						-- check for multiple names in the parameter (last only)
			last = name_has_ed_markup (last, list_name);						-- check for extraneous 'editor' annotation
		end
	end
	if is_set (first) then
		if first:match ('^%(%(.*%)%)$') then									-- if wrapped in doubled parentheses, accept as written 
			first = first:match ('^%(%((.*)%)%)$');								-- strip parens
		else
			first = name_has_ed_markup (first, list_name);						-- check for extraneous 'editor' annotation
		end
	end
	return last, first;															-- done
	end


--[[--------------------------&lt; E X T R A C T _ N A M E S &gt;----------------------------------------------------
Gets name list from the input arguments

Searches through args in sequential order to find |lastn= and |firstn= parameters (or their aliases), and their matching link and mask parameters.
Stops searching when both |lastn= and |firstn= are not found in args after two sequential attempts: found |last1=, |last2=, and |last3= but doesn't
find |last4= and |last5= then the search is done.

This function emits an error message when there is a |firstn= without a matching |lastn=.  When there are 'holes' in the list of last names, |last1= and |last3=
are present but |last2= is missing, an error message is emitted. |lastn= is not required to have a matching |firstn=.

When an author or editor parameter contains some form of 'et al.', the 'et al.' is stripped from the parameter and a flag (etal) returned
that will cause list_people() to add the static 'et al.' text from Module:Citation/CS1/Configuration.  This keeps 'et al.' out of the 
template's metadata.  When this occurs, the page is added to a maintenance category.

]]

local function extract_names(args, list_name)
	local names = {};			-- table of names
	local last;					-- individual name components
	local first;
	local link;
	local mask;
	local i = 1;				-- loop counter/indexer
	local n = 1;				-- output table indexer
	local count = 0;			-- used to count the number of times we haven't found a |last= (or alias for authors, |editor-last or alias for editors)
	local etal=false;			-- return value set to true when we find some form of et al. in an author parameter

	local err_msg_list_name = list_name:match (&quot;(%w+)List&quot;) .. 's list';		-- modify AuthorList or EditorList for use in error messages if necessary
	while true do
		last = select_one( args, cfg.aliases[list_name .. '-Last'], 'redundant_parameters', i );		-- search through args for name components beginning at 1
		first = select_one( args, cfg.aliases[list_name .. '-First'], 'redundant_parameters', i );
		link = select_one( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i );
		mask = select_one( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i );

		last, etal = name_has_etal (last, etal, false);							-- find and remove variations on et al.
		first, etal = name_has_etal (first, etal, false);						-- find and remove variations on et al.
		last, first= name_checks (last, first, list_name);						-- multiple names, extraneous annotation, etc checks
		
		if first and not last then												-- if there is a firstn without a matching lastn
			table.insert( z.message_tail, { set_error( 'first_missing_last', {err_msg_list_name, i}, true ) } );	-- add this error message
		elseif not first and not last then										-- if both firstn and lastn aren't found, are we done?
			count = count + 1;													-- number of times we haven't found last and first
			if 2 &lt;= count then													-- two missing names and we give up
				break;															-- normal exit or there is a two-name hole in the list; can't tell which
			end
		else																	-- we have last with or without a first
			link_title_ok (link, list_name:match (&quot;(%w+)List&quot;):lower() .. '-link' .. i, last, list_name:match (&quot;(%w+)List&quot;):lower() .. '-last' .. i);	-- check for improper wikimarkup

			names[n] = {last = last, first = first, link = link, mask = mask, corporate=false};	-- add this name to our names list (corporate for |vauthors= only)
			n = n + 1;															-- point to next location in the names table
			if 1 == count then													-- if the previous name was missing
				table.insert( z.message_tail, { set_error( 'missing_name', {err_msg_list_name, i-1}, true ) } );		-- add this error message
			end
			count = 0;															-- reset the counter, we're looking for two consecutive missing names
		end
		i = i + 1;																-- point to next args location
	end
	
	return names, etal;															-- all done, return our list of names
end

--[[--------------------------&lt; G E T _ I S O 6 3 9 _ C O D E &gt;------------------------------------------------

Validates language names provided in |language= parameter if not an ISO639-1 or 639-2 code.

Returns the language name and associated two- or three-character code.  Because case of the source may be incorrect
or different from the case that WikiMedia uses, the name comparisons are done in lower case and when a match is
found, the Wikimedia version (assumed to be correct) is returned along with the code.  When there is no match, we
return the original language name string.

mw.language.fetchLanguageNames(&lt;local wiki language&gt;, 'all') return a list of languages that in some cases may include
extensions. For example, code 'cbk-zam' and its associated name 'Chavacano de Zamboanga' (MediaWiki does not support
code 'cbk' or name 'Chavacano'.

Names but that are included in the list will be found if that name is provided in the |language= parameter.  For example,
if |language=Chavacano de Zamboanga, that name will be found with the associated code 'cbk-zam'.  When names are found
and the associated code is not two or three characters, this function returns only the Wikimedia language name.

Adapted from code taken from Module:Check ISO 639-1.

]]

local function get_iso639_code (lang, this_wiki_code)
	if 'bangla' == lang:lower() then											-- special case related to Wikimedia remap of code 'bn' at mw:Extension:CLDR
		return 'Bengali', 'bn';													-- make sure rendered version is properly capitalized
	end

	local languages = mw.language.fetchLanguageNames(this_wiki_code, 'all')		-- get a list of language names known to Wikimedia
																				-- ('all' is required for North Ndebele, South Ndebele, and Ojibwa)
	local langlc = mw.ustring.lower(lang);										-- lower case version for comparisons
	
	for code, name in pairs(languages) do										-- scan the list to see if we can find our language
		if langlc == mw.ustring.lower(name) then
			if 2 ~= code:len() and 3 ~= code:len() then							-- two- or three-character codes only; extensions not supported
				return name;													-- so return the name but not the code
			end
			return name, code;													-- found it, return name to ensure proper capitalization and the the code
		end
	end
	return lang;																-- not valid language; return language in original case and nil for the code
end


--[[--------------------------&lt; L A N G U A G E _ P A R A M E T E R &gt;------------------------------------------

Gets language name from a provided two- or three-character ISO 639 code.  If a code is recognized by MediaWiki,
use the returned name; if not, then use the value that was provided with the language parameter.

When |language= contains a recognized language (either code or name), the page is assigned to the category for
that code: Category:Norwegian-language sources (no).  For valid three-character code languages, the page is assigned
to the single category for '639-2' codes: Category:CS1 ISO 639-2 language sources.

Languages that are the same as the local wiki are not categorized.  MediaWiki does not recognize three-character
equivalents of two-character codes: code 'ar' is recognized bit code 'ara' is not.

This function supports multiple languages in the form |language=nb, French, th where the language names or codes are
separated from each other by commas.

]]

local function language_parameter (lang)
	local code;																	-- the two- or three-character language code
	local name;																	-- the language name
	local language_list = {};													-- table of language names to be rendered
	local names_table = {};														-- table made from the value assigned to |language=

	local this_wiki = mw.getContentLanguage();									-- get a language object for this wiki
	local this_wiki_code = this_wiki:getCode()									-- get this wiki's language code
	local this_wiki_name = mw.language.fetchLanguageName(this_wiki_code, this_wiki_code);	-- get this wiki's language name

	names_table = mw.text.split (lang, '%s*,%s*');								-- names should be a comma separated list

	for _, lang in ipairs (names_table) do										-- reuse lang

		if lang:match ('^%a%a%-') then											-- strip ietf language tags from code; TODO: is there a need to support 3-char with tag?
			lang = lang:match ('(%a%a)%-')										-- keep only 639-1 code portion to lang; TODO: do something with 3166 alpha 2 country code?
		end
		if 2 == lang:len() or 3 == lang:len() then								-- if two-or three-character code
			name = mw.language.fetchLanguageName( lang:lower(), this_wiki_code);	-- get language name if |language= is a proper code
		end
	
		if is_set (name) then													-- if |language= specified a valid code
			code = lang:lower();												-- save it
		else
			name, code = get_iso639_code (lang, this_wiki_code);				-- attempt to get code from name (assign name here so that we are sure of proper capitalization)
		end
	
		if is_set (code) then													-- only 2- or 3-character codes
			if 'bn' == code then name = 'Bengali' end;							-- override wikimedia when code is 'bn'
			if this_wiki_code ~= code then										-- when the language is not the same as this wiki's language
				if 2 == code:len() then											-- and is a two-character code
					add_prop_cat ('foreign_lang_source', {name, code})			-- categorize it
				else															-- or is a recognized language (but has a three-character code)
					add_prop_cat ('foreign_lang_source_2', {code})				-- categorize it differently TODO: support mutliple three-character code categories per cs1|2 template
				end
			end
		else
			add_maint_cat ('unknown_lang');										-- add maint category if not already added
		end
		
		table.insert (language_list, name);
		name = '';																-- so we can reuse it
	end
	
	code = #language_list														-- reuse code as number of languages in the list
	if 2 &gt;= code then
		name = table.concat (language_list, ' and ')							-- insert '&lt;space&gt;and&lt;space&gt;' between two language names
	elseif 2 &lt; code then
		language_list[code] = 'and ' .. language_list[code];					-- prepend last name with 'and&lt;space&gt;'
		name = table.concat (language_list, ', ')								-- and concatenate with '&lt;comma&gt;&lt;space&gt;' separators
	end
	if this_wiki_name == name then
		return '';																-- if one language and that language is this wiki's return an empty string (no annotation)
	end
	return (&quot; &quot; .. wrap_msg ('language', name));								-- otherwise wrap with '(in ...)'
	--[[ TODO: should only return blank or name rather than full list
	so we can clean up the bunched parenthetical elements Language, Type, Format
	]]
end

--[[--------------------------&lt; S E T _ C S 1 _ S T Y L E &gt;----------------------------------------------------

Set style settings for CS1 citation templates. Returns separator and postscript settings

]]

local function set_cs1_style (ps)
	if not is_set (ps) then														-- unless explicitely set to something
		ps = '.';																-- terminate the rendered citation with a period
	end
	return '.', ps;																-- separator is a full stop
end

--[[--------------------------&lt; S E T _ C S 2 _ S T Y L E &gt;----------------------------------------------------

Set style settings for CS2 citation templates. Returns separator, postscript, ref settings

]]

local function set_cs2_style (ps, ref)
	if not is_set (ps) then														-- if |postscript= has not been set, set cs2 default
		ps = '';																-- make sure it isn't nil
	end
	if not is_set (ref) then													-- if |ref= is not set
		ref = &quot;harv&quot;;															-- set default |ref=harv
	end
	return ',', ps, ref;														-- separator is a comma
end

--[[--------------------------&lt; G E T _ S E T T I N G S _ F R O M _ C I T E _ C L A S S &gt;----------------------

When |mode= is not set or when its value is invalid, use config.CitationClass and parameter values to establish
rendered style.

]]

local function get_settings_from_cite_class (ps, ref, cite_class)
	local sep;
	if (cite_class == &quot;citation&quot;) then											-- for citation templates (CS2)
		sep, ps, ref = set_cs2_style (ps, ref);
	else																		-- not a citation template so CS1
		sep, ps = set_cs1_style (ps);
	end

	return sep, ps, ref															-- return them all
end

--[[--------------------------&lt; S E T _ S T Y L E &gt;------------------------------------------------------------

Establish basic style settings to be used when rendering the citation.  Uses |mode= if set and valid or uses
config.CitationClass from the template's #invoke: to establish style.

]]

local function set_style (mode, ps, ref, cite_class)
	local sep;
	if 'cs2' == mode then														-- if this template is to be rendered in CS2 (citation) style
		sep, ps, ref = set_cs2_style (ps, ref);
	elseif 'cs1' == mode then													-- if this template is to be rendered in CS1 (cite xxx) style
		sep, ps = set_cs1_style (ps);
	elseif 'mla' == mode then													-- if this template is to be rendered in mla style use cs1 for bot cs1 &amp; cs2 templates
		sep, ps = set_cs1_style (ps);
	else																		-- anything but cs1 or cs2
		sep, ps, ref = get_settings_from_cite_class (ps, ref, cite_class);		-- get settings based on the template's CitationClass
	end
	if 'none' == ps:lower() then												-- if assigned value is 'none' then
		ps = '';																-- set to empty string
	end
	
	return sep, ps, ref
end

--[=[-------------------------&lt; I S _ P D F &gt;------------------------------------------------------------------

Determines if a url has the file extension that is one of the pdf file extensions used by [[MediaWiki:Common.css]] when
applying the pdf icon to external links.

returns true if file extension is one of the recognized extension, else false

]=]

local function is_pdf (url)
	return url:match ('%.pdf[%?#]?') or url:match ('%.PDF[%?#]?');
end

--[[--------------------------&lt; S T Y L E _ F O R M A T &gt;------------------------------------------------------

Applies css style to |format=, |chapter-format=, etc.  Also emits an error message if the format parameter does
not have a matching url parameter.  If the format parameter is not set and the url contains a file extension that
is recognized as a pdf document by MediaWiki's commons.css, this code will set the format parameter to (PDF) with
the appropriate styling.

]]

local function style_format (format, url, fmt_param, url_param)
	if is_set (format) then
		format = wrap_style ('format', format);									-- add leading space, parenthases, resize
		if not is_set (url) then
			format = format .. set_error( 'format_missing_url', {fmt_param, url_param} );	-- add an error message
		end
	elseif is_pdf (url) then													-- format is not set so if url is a pdf file then
		format = wrap_style ('format', 'PDF');									-- set format to pdf
	else
		format = '';															-- empty string for concatenation
	end
	return format;
end

--[[--------------------------&lt; G E T _ D I S P L A Y _ A U T H O R S _ E D I T O R S &gt;------------------------

Returns a number that defines the number of names displayed for author and editor name lists and a boolean flag
to indicate when et al. should be appended to the name list.

When the value assigned to |display-xxxxors= is a number greater than or equal to zero, return the number and
the previous state of the 'etal' flag (false by default but may have been set to true if the name list contains
some variant of the text 'et al.').

When the value assigned to |display-xxxxors= is the keyword 'etal', return a number that is one greater than the
number of authors in the list and set the 'etal' flag true.  This will cause the list_people() to display all of
the names in the name list followed by 'et al.'

In all other cases, returns nil and the previous state of the 'etal' flag.

inputs:
	max: A['DisplayAuthors'] or A['DisplayEditors']; a number or some flavor of etal
	count: #a or #e
	list_name: 'authors' or 'editors'
	etal: author_etal or editor_etal

]]

local function get_display_authors_editors (max, count, list_name, etal)
	if is_set (max) then
		if 'etal' == max:lower():gsub(&quot;[ '%.]&quot;, '') then						-- the :gsub() portion makes 'etal' from a variety of 'et al.' spellings and stylings
			max = count + 1;													-- number of authors + 1 so display all author name plus et al.
			etal = true;														-- overrides value set by extract_names()
		elseif max:match ('^%d+$') then											-- if is a string of numbers
			max = tonumber (max);												-- make it a number
			if max &gt;= count then												-- if |display-xxxxors= value greater than or equal to number of authors/editors
				add_maint_cat ('disp_auth_ed', cfg.special_case_translation [list_name]);
			end
		else																	-- not a valid keyword or number
			table.insert( z.message_tail, { set_error( 'invalid_param_val', {'display-' .. list_name, max}, true ) } );		-- add error message
			max = nil;															-- unset; as if |display-xxxxors= had not been set
		end
	end
	
	return max, etal;
end

--[[--------------------------&lt; E X T R A _ T E X T _ I N _ P A G E _ C H E C K &gt;------------------------------

Adds page to Category:CS1 maint: extra text if |page= or |pages= has what appears to be some form of p. or pp. 
abbreviation in the first characters of the parameter content.

check Page and Pages for extraneous p, p., pp, and pp. at start of parameter value:
	good pattern: '^P[^%.P%l]' matches when |page(s)= begins PX or P# but not Px where x and X are letters and # is a dgiit
	bad pattern: '^[Pp][Pp]' matches matches when |page(s)= begins pp or pP or Pp or PP

]]

local function extra_text_in_page_check (page)
--	local good_pattern = '^P[^%.P%l]';
	local good_pattern = '^P[^%.Pp]';											-- ok to begin with uppercase P: P7 (pg 7 of section P) but not p123 (page 123) TODO: add Gg for PG or Pg?
--	local bad_pattern = '^[Pp][Pp]';
	local bad_pattern = '^[Pp]?[Pp]%.?[ %d]';

	if not page:match (good_pattern) and (page:match (bad_pattern) or  page:match ('^[Pp]ages?')) then
		add_maint_cat ('extra_text');
	end
--		if Page:match ('^[Pp]?[Pp]%.?[ %d]') or  Page:match ('^[Pp]ages?[ %d]') or
--			Pages:match ('^[Pp]?[Pp]%.?[ %d]') or  Pages:match ('^[Pp]ages?[ %d]') then
--				add_maint_cat ('extra_text');
--		end
end

--[[--------------------------&lt; G E T _ V _ N A M E _ T A B L E &gt;----------------------------------------------

split apart a |vautthors= or |veditors= parameter.  This function allows for corporate names, wrapped in doubled
parentheses to also have commas; in the old version of the code, the doubled parnetheses were included in the
rendered citation and in the metadata.

	|vauthors=Jones AB, White EB, ((Black, Brown, and Co.))

This code is experimental and may not be retained.

]]
local function get_v_name_table (vparam, output_table)
	local name_table = mw.text.split(vparam, &quot;%s*,%s*&quot;);						-- names are separated by commas
	
	local i = 1;
	
	while name_table[i] do
		if name_table[i]:match ('^%(%(.*[^%)][^%)]$') then						-- first segment of corporate with one or more commas; this segment has the opening doubled parens
			local name = name_table[i];
			i=i+1;																-- bump indexer to next segment
			while name_table[i] do
				name = name .. ', ' .. name_table[i];							-- concatenate with previous segments
				if name_table[i]:match ('^.*%)%)$') then						-- if this table member has the closing doubled parens
					break;														-- and done reassembling so
				end
				i=i+1;															-- bump indexer
			end
			table.insert (output_table, name);									-- and add corporate name to the output table
		else
			table.insert (output_table, name_table[i]);							-- add this name 
		end
		i = i+1;
	end	
	return output_table;
end

--[[--------------------------&lt; P A R S E _ V A U T H O R S _ V E D I T O R S &gt;--------------------------------

This function extracts author / editor names from |vauthors= or |veditors= and finds matching |xxxxor-maskn= and
|xxxxor-linkn= in args.  It then returns a table of assembled names just as extract_names() does.

Author / editor names in |vauthors= or |veditors= must be in Vancouver system style. Corporate or institutional names
may sometimes be required and because such names will often fail the is_good_vanc_name() and other format compliance
tests, are wrapped in doubled paranethese ((corporate name)) to suppress the format tests.

Supports generational suffixes Jr, 2nd, 3rd, 4th6th.

This function sets the vancouver error when a reqired comma is missing and when there is a space between an author's initials.

]]

local function parse_vauthors_veditors (args, vparam, list_name)
	local names = {};															-- table of names assembled from |vauthors=, |author-maskn=, |author-linkn=
	local v_name_table = {};
	local etal = false;															-- return value set to true when we find some form of et al. vauthors parameter
	local last, first, link, mask, suffix;
	local corporate = false;

	vparam, etal = name_has_etal (vparam, etal, true);							-- find and remove variations on et al. do not categorize (do it here because et al. might have a period)
	if vparam:find ('%[%[') or vparam:find ('%]%]')	then						-- no wikilinking vauthors names
		add_vanc_error ('wikilink');
	end
	v_name_table = get_v_name_table (vparam, v_name_table);						-- names are separated by commas

	for i, v_name in ipairs(v_name_table) do
		if v_name:match ('^%(%(.+%)%)$') then									-- corporate authors are wrapped in doubled parentheses to supress vanc formatting and error detection
			first = '';															-- set to empty string for concatenation and because it may have been set for previous author/editor
			last = v_name:match ('^%(%((.+)%)%)$')								-- remove doubled parntheses
			corporate = true;													-- flag used in list_people()
		elseif string.find(v_name, &quot;%s&quot;) then
			if v_name:find('[;%.]') then										-- look for commonly occurring punctuation characters; 
				add_vanc_error ('punctuation');
			end
			local lastfirstTable = {}
			lastfirstTable = mw.text.split(v_name, &quot;%s&quot;)
			first = table.remove(lastfirstTable);								-- removes and returns value of last element in table which should be author intials
			if is_suffix (first) then											-- if a valid suffix
				suffix = first													-- save it as a suffix and
				first = table.remove(lastfirstTable);							-- get what should be the initials from the table
			end																	-- no suffix error message here because letter combination may be result of Romanization; check for digits?
			last = table.concat(lastfirstTable, &quot; &quot;)							-- returns a string that is the concatenation of all other names that are not initials
			if mw.ustring.match (last, '%a+%s+%u+%s+%a+') then
				add_vanc_error ('missing comma');								-- matches last II last; the case when a comma is missing
			end
			if mw.ustring.match (v_name, ' %u %u$') then						-- this test is in the wrong place TODO: move or replace with a more appropriate test
				add_vanc_error ('name');										-- matches a space between two intiials
			end
		else
			first = '';															-- set to empty string for concatenation and because it may have been set for previous author/editor
			last = v_name;														-- last name or single corporate name?  Doesn't support multiword corporate names? do we need this?
		end
																
		if is_set (first) then
			if not mw.ustring.match (first, &quot;^%u?%u$&quot;) then						-- first shall contain one or two upper-case letters, nothing else
				add_vanc_error ('initials');									-- too many initials; mixed case initials (which may be ok Romanization); hyphenated initials
			end
			is_good_vanc_name (last, first);									-- check first and last before restoring the suffix which may have a non-Latin digit
			if is_set (suffix) then
				first = first .. ' ' .. suffix;									-- if there was a suffix concatenate with the initials
				suffix = '';													-- unset so we don't add this suffix to all subsequent names
			end
		else
			if not corporate then
				is_good_vanc_name (last, '');
			end
		end
																				-- this from extract_names ()
		link = select_one( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i );
		mask = select_one( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i );
		names[i] = {last = last, first = first, link = link, mask = mask, corporate=corporate};		-- add this assembled name to our names list
	end
	return names, etal;															-- all done, return our list of names
end


--[[--------------------------&lt; S E L E C T _ A U T H O R _ E D I T O R _ S O U R C E &gt;------------------------

Select one of |authors=, |authorn= / |lastn / firstn=, or |vauthors= as the source of the author name list or
select one of |editors=, |editorn= / editor-lastn= / |editor-firstn= or |veditors= as the source of the editor name list.

Only one of these appropriate three will be used.  The hierarchy is: |authorn= (and aliases) highest and |authors= lowest and
similarly, |editorn= (and aliases) highest and |editors= lowest

When looking for |authorn= / |editorn= parameters, test |xxxxor1= and |xxxxor2= (and all of their aliases); stops after the second
test which mimicks the test used in extract_names() when looking for a hole in the author name list.  There may be a better
way to do this, I just haven't discovered what that way is.

Emits an error message when more than one xxxxor name source is provided.

In this function, vxxxxors = vauthors or veditors; xxxxors = authors or editors as appropriate.

]]

local function select_author_editor_source (vxxxxors, xxxxors, args, list_name)
local lastfirst = false;
	if select_one( args, cfg.aliases[list_name .. '-Last'], 'none', 1 ) or		-- do this twice incase we have a |first1= without a |last1=; this ...
		select_one( args, cfg.aliases[list_name .. '-First'], 'none', 1 ) or	-- ... also catches the case where |first= is used with |vauthors=
		select_one( args, cfg.aliases[list_name .. '-Last'], 'none', 2 ) or
		select_one( args, cfg.aliases[list_name .. '-First'], 'none', 2 ) then
			lastfirst=true;
	end

	if (is_set (vxxxxors) and true == lastfirst) or								-- these are the three error conditions
		(is_set (vxxxxors) and is_set (xxxxors)) or
		(true == lastfirst and is_set (xxxxors)) then
			local err_name;
			if 'AuthorList' == list_name then									-- figure out which name should be used in error message
				err_name = 'author';
			else
				err_name = 'editor';
			end
			table.insert( z.message_tail, { set_error( 'redundant_parameters',
				{err_name .. '-name-list parameters'}, true ) } );				-- add error message
	end

	if true == lastfirst then return 1 end;										-- return a number indicating which author name source to use
	if is_set (vxxxxors) then return 2 end;
	if is_set (xxxxors) then return 3 end;
	return 1;																	-- no authors so return 1; this allows missing author name test to run in case there is a first without last 
end


--[[--------------------------&lt; I S _ V A L I D _ P A R A M E T E R _ V A L U E &gt;------------------------------

This function is used to validate a parameter's assigned value for those parameters that have only a limited number
of allowable values (yes, y, true, no, etc).  When the parameter value has not been assigned a value (missing or empty
in the source template) the function refurns true.  If the parameter value is one of the list of allowed values returns
true; else, emits an error message and returns false.

]]

local function is_valid_parameter_value (value, name, possible, cite_class)
-- begin hack to limit |mode=mla to a specific set of templates
	if ('mode' == name) and ('mla' == value) and not in_array (cite_class, {'book', 'journal', 'news'}) then
		table.insert( z.message_tail, { set_error( 'invalid_param_val', {name, value}, true ) } );	-- not an allowed value so add error message
		return false
	end
-- end hack

	if not is_set (value) then
		return true;															-- an empty parameter is ok
	elseif in_array(value:lower(), possible) then
		return true;
	else
		table.insert( z.message_tail, { set_error( 'invalid_param_val', {name, value}, true ) } );	-- not an allowed value so add error message
		return false
	end
end


--[[--------------------------&lt; T E R M I N A T E _ N A M E _ L I S T &gt;----------------------------------------

This function terminates a name list (author, contributor, editor) with a separator character (sepc) and a space
when the last character is not a sepc character or when the last three characters are not sepc followed by two
closing square brackets (close of a wikilink).  When either of these is true, the name_list is terminated with a
single space character.

]]

local function terminate_name_list (name_list, sepc)
	if (string.sub (name_list,-3,-1) == sepc .. '. ') then						-- if already properly terminated
		return name_list;														-- just return the name list
	elseif (string.sub (name_list,-1,-1) == sepc) or (string.sub (name_list,-3,-1) == sepc .. ']]') then	-- if last name in list ends with sepc char
		return name_list .. &quot; &quot;;												-- don't add another
	else
		return name_list .. sepc .. ' ';										-- otherwise terninate the name list
	end
end


--[[-------------------------&lt; F O R M A T _ V O L U M E _ I S S U E &gt;----------------------------------------

returns the concatenation of the formatted volume and issue parameters as a single string; or formatted volume
or formatted issue, or an empty string if neither are set.

]]
	
local function format_volume_issue (volume, issue, cite_class, origin, sepc, lower, mode)
	if not is_set (volume) and not is_set (issue) then
		return '';
	end
	
	if ('mla' == mode) and ('journal' == cite_class) then						-- same as cs1 for magazines
		lower = true;															-- mla 8th edition; force these to lower case
		if is_set (volume) and is_set (issue) then
			return wrap_msg ('vol-no', {sepc, volume, issue}, lower);
		elseif is_set (volume) then
			return wrap_msg ('vol', {sepc, volume}, lower);
		else
			return '';
		end
	end

	if 'magazine' == cite_class or (in_array (cite_class, {'citation', 'map'}) and 'magazine' == origin) then
		if is_set (volume) and is_set (issue) then
			return wrap_msg ('vol-no', {sepc, volume, issue}, lower);
		elseif is_set (volume) then
			return wrap_msg ('vol', {sepc, volume}, lower);
		else
			return wrap_msg ('issue', {sepc, issue}, lower);
		end
	end

	local vol = '';
		
	if is_set (volume) then
		if (4 &lt; mw.ustring.len(volume)) then
			vol = substitute (cfg.messages['j-vol'], {sepc, volume});
		else
			vol = substitute (cfg.presentation['vol-bold'], {sepc, hyphen_to_dash(volume)});
		end
	end
	if is_set (issue) then
		return vol .. substitute (cfg.messages['j-issue'], issue);
	end
	return vol;
end


--[[-------------------------&lt; N O R M A L I Z E _ P A G E _ L I S T &gt;-----------------------------------------

not currently used

normalizes a comma, ampersand, and/or space separated list to be '&lt;value&gt;, &lt;value&gt;, ..., &lt;value&gt;'
returns list unchanged if there are no commas else strips whitespace and then reformats the list

]]
--[[
local function normalize_page_list (list)
	if not list:find ('[,&amp; ]') then return list end								-- if list is not delimited with commas, ampersands, or spaces; done
	
	list = mw.text.split (list, '[,&amp;%s]+');										-- make a table of values
	list = table.concat (list, ', ');											-- and now make a normalized list
	return list;
end
]]


--[[-------------------------&lt; F O R M A T _ P A G E S _ S H E E T S &gt;-----------------------------------------

adds static text to one of |page(s)= or |sheet(s)= values and returns it with all of the others set to empty strings.
The return order is:
	page, pages, sheet, sheets

Singular has priority over plural when both are provided.

]]

local function format_pages_sheets (page, pages, sheet, sheets, cite_class, origin, sepc, nopp, lower, mode)
	if 'map' == cite_class then													-- only cite map supports sheet(s) as in-source locators
		if is_set (sheet) then
			if 'journal' == origin then
				return '', '', wrap_msg ('j-sheet', sheet, lower), '';
			else
				return '', '', wrap_msg ('sheet', {sepc, sheet}, lower), '';
			end
		elseif is_set (sheets) then
			if 'journal' == origin then
				return '', '', '', wrap_msg ('j-sheets', sheets, lower);
			else
				return '', '', '', wrap_msg ('sheets', {sepc, sheets}, lower);
			end
		end
	end

	local is_journal = 'journal' == cite_class or (in_array (cite_class, {'citation', 'map'}) and 'journal' == origin);
	
	if is_journal and 'mla' == mode then
		is_journal = false;														-- mla always uses p &amp; pp
	end

	if is_set (page) then
		if is_journal then
			return substitute (cfg.messages['j-page(s)'], page), '', '', '';
		elseif not nopp then
			return substitute (cfg.messages['p-prefix'], {sepc, page}), '', '', '';
		else
			return substitute (cfg.messages['nopp'], {sepc, page}), '', '', '';
		end
	elseif is_set(pages) then
		if is_journal then
			return substitute (cfg.messages['j-page(s)'], pages), '', '', '';
		elseif tonumber(pages) ~= nil and not nopp then										-- if pages is only digits, assume a single page number
			return '', substitute (cfg.messages['p-prefix'], {sepc, pages}), '', '';
		elseif not nopp then
			return '', substitute (cfg.messages['pp-prefix'], {sepc, pages}), '', '';
		else
			return '', substitute (cfg.messages['nopp'], {sepc, pages}), '', '';
		end
	end
	
	return '', '', '', '';														-- return empty strings
end


--[=[-------------------------&lt; A R C H I V E _ U R L _ C H E C K &gt;--------------------------------------------

Check archive.org urls to make sure they at least look like they are pointing at valid archives and not to the 
save snapshot url or to calendar pages.  When the archive url is 'https://web.archive.org/save/' (or http://...)
archive.org saves a snapshot of the target page in the url.  That is something that Wikipedia should not allow
unwitting readers to do.

When the archive.org url does not have a complete timestamp, archive.org chooses a snapshot according to its own
algorithm or provides a calendar 'search' result.  [[WP:ELNO]] discourages links to search results.

This function looks at the value assigned to |archive-url= and returns empty strings for |archive-url= and
|archive-date= and an error message when:
	|archive-url= holds an archive.org save command url
	|archive-url= is an archive.org url that does not have a complete timestamp (YYYYMMDDhhmmss 14 digits) in the
		correct place
otherwise returns |archive-url= and |archive-date=

There are two mostly compatible archive.org urls:
	//web.archive.org/&lt;timestamp&gt;...		-- the old form
	//web.archive.org/web/&lt;timestamp&gt;...	-- the new form

The old form does not support or map to the new form when it contains a display flag.  There are four identified flags
('id_', 'js_', 'cs_', 'im_') but since archive.org ignores others following the same form (two letters and an underscore)
we don't check for these specific flags but we do check the form.

This function supports a preview mode.  When the article is rendered in preview mode, this funct may return a modified
archive url:
	for save command errors, return undated wildcard (/*/)
	for timestamp errors when the timestamp has a wildcard, return the url unmodified
	for timestamp errors when the timestamp does not have a wildcard, return with timestamp limited to six digits plus wildcard (/yyyymm*/)

]=]

local function archive_url_check (url, date)
	local err_msg = '';															-- start with the error message empty
	local path, timestamp, flag;												-- portions of the archive.or url
	
	if (not url:match('//web%.archive%.org/')) and (not url:match('//liveweb%.archive%.org/')) then		-- also deprecated liveweb Wayback machine url
		return url, date;														-- not an archive.org archive, return ArchiveURL and ArchiveDate
	end

	if url:match('//web%.archive%.org/save/') then								-- if a save command url, we don't want to allow saving of the target page 
		err_msg = 'save command';
		url = url:gsub ('(//web%.archive%.org)/save/', '%1/*/', 1);				-- for preview mode: modify ArchiveURL
	elseif url:match('//liveweb%.archive%.org/') then
		err_msg = 'liveweb';
	else
		path, timestamp, flag = url:match('//web%.archive%.org/([^%d]*)(%d+)([^/]*)/');		-- split out some of the url parts for evaluation
		
		if not is_set(timestamp) or 14 ~= timestamp:len() then					-- path and flag optional, must have 14-digit timestamp here
			err_msg = 'timestamp';
			if '*' ~= flag then
				url=url:gsub ('(//web%.archive%.org/[^%d]*%d?%d?%d?%d?%d?%d?)[^/]*', '%1*', 1)	-- for preview, modify ts to be yearmo* max (0-6 digits plus splat)
			end
		elseif is_set(path) and 'web/' ~= path then								-- older archive urls do not have the extra 'web/' path element
			err_msg = 'path';
		elseif is_set (flag) and not is_set (path) then							-- flag not allowed with the old form url (without the 'web/' path element)
			err_msg = 'flag';
		elseif is_set (flag) and not flag:match ('%a%a_') then					-- flag if present must be two alpha characters and underscore (requires 'web/' path element)
			err_msg = 'flag';
		else
			return url, date;													-- return archiveURL and ArchiveDate
		end
	end
																				-- if here, something not right so
	table.insert( z.message_tail, { set_error( 'archive_url', {err_msg}, true ) } );	-- add error message and
	if is_set (Frame:preprocess('{{REVISIONID}}')) then
		return '', '';															-- return empty strings for archiveURL and ArchiveDate
	else
		return url, date;														-- preview mode so return archiveURL and ArchiveDate
	end
end


--[[--------------------------&lt; M I S S I N G _ P I P E _ C H E C K &gt;------------------------------------------

Look at the contents of a parameter. If the content has a string of characters and digits followed by an equal
sign, compare the alphanumeric string to the list of cs1|2 parameters.  If found, then the string is possibly a
parameter that is missing its pipe:
	{{cite ... |title=Title access-date=2016-03-17}}

cs1|2 shares some parameter names with xml/html atributes: class=, title=, etc.  To prevent false positives xml/html
tags are removed before the search.

If a missing pipe is detected, this function adds the missing pipe maintenance category.

]]

local function missing_pipe_check (value)
	local capture;
	value = value:gsub ('%b&lt;&gt;', '');											-- remove xml/html tags because attributes: class=, title=, etc 

	capture = value:match ('%s+(%a[%a%d]+)%s*=') or value:match ('^(%a[%a%d]+)%s*=');	-- find and categorize parameters with possible missing pipes
	if capture and validate (capture) then								-- if the capture is a valid parameter name
		add_maint_cat ('missing_pipe');
	end
end


--[[--------------------------&lt; C I T A T I O N 0 &gt;------------------------------------------------------------

This is the main function doing the majority of the citation formatting.

]]

local function citation0( config, args)
	--[[ 
	Load Input Parameters
	The argument_wrapper facilitates the mapping of multiple aliases to single internal variable.
	]]
	local A = argument_wrapper( args );
	local i 

	-- Pick out the relevant fields from the arguments.  Different citation templates
	-- define different field names for the same underlying things.	

-- set default parameter values defined by |mode= parameter.  If |mode= is empty or omitted, use CitationClass to set these values
	local Mode = A['Mode'];
	if not is_valid_parameter_value (Mode, 'mode', cfg.keywords['mode'], config.CitationClass) then
		Mode = '';
	end

	local author_etal;
	local a	= {};																-- authors list from |lastn= / |firstn= pairs or |vauthors=
	local Authors;
	local NameListFormat = A['NameListFormat'];
	local Collaboration = A['Collaboration'];

	do																			-- to limit scope of selected
		local selected = select_author_editor_source (A['Vauthors'], A['Authors'], args, 'AuthorList');
		if 1 == selected then
			a, author_etal = extract_names (args, 'AuthorList');				-- fetch author list from |authorn= / |lastn= / |firstn=, |author-linkn=, and |author-maskn=
		elseif 2 == selected then
			NameListFormat = 'vanc';											-- override whatever |name-list-format= might be
			a, author_etal = parse_vauthors_veditors (args, args.vauthors, 'AuthorList');	-- fetch author list from |vauthors=, |author-linkn=, and |author-maskn=
		elseif 3 == selected then
			Authors = A['Authors'];												-- use content of |authors=
			if 'authors' == A:ORIGIN('Authors') then							-- but add a maint cat if the parameter is |authors=
				add_maint_cat ('authors');										-- because use of this parameter is discouraged; what to do about the aliases is a TODO:
			end
		end
		if is_set (Collaboration) then
			author_etal = true;													-- so that |display-authors=etal not required
		end
	end

	local Others = A['Others'];

	local editor_etal;
	local e	= {};																-- editors list from |editor-lastn= / |editor-firstn= pairs or |veditors=
	local Editors;

	do																			-- to limit scope of selected
		local selected = select_author_editor_source (A['Veditors'], A['Editors'], args, 'EditorList');
		if 1 == selected then
			e, editor_etal = extract_names (args, 'EditorList');				-- fetch editor list from |editorn= / |editor-lastn= / |editor-firstn=, |editor-linkn=, and |editor-maskn=
		elseif 2 == selected then
			NameListFormat = 'vanc';											-- override whatever |name-list-format= might be
			e, editor_etal = parse_vauthors_veditors (args, args.veditors, 'EditorList');	-- fetch editor list from |veditors=, |editor-linkn=, and |editor-maskn=
		elseif 3 == selected then
			Editors = A['Editors'];												-- use content of |editors=
			add_maint_cat ('editors');											-- but add a maint cat because use of this parameter is discouraged
		end
	end

	local t = {};																-- translators list from |translator-lastn= / translator-firstn= pairs
	local Translators;															-- assembled translators name list
	t = extract_names (args, 'TranslatorList');									-- fetch translator list from |translatorn= / |translator-lastn=, -firstn=, -linkn=, -maskn=
	

	local interviewers_list = {};
	local Interviewers = A['Interviewers']
	if is_set (Interviewers) then												-- add a maint cat if the |interviewers= is used
		add_maint_cat ('interviewers');											-- because use of this parameter is discouraged
	else
		interviewers_list = extract_names (args, 'InterviewerList');			-- else, process preferred interviewers parameters
	end

	local c = {};																-- contributors list from |contributor-lastn= / contributor-firstn= pairs
	local Contributors;															-- assembled contributors name list
	local Contribution = A['Contribution'];
	if in_array(config.CitationClass, {&quot;book&quot;,&quot;citation&quot;}) and not is_set(A['Periodical']) then	-- |contributor= and |contribution= only supported in book cites
		c = extract_names (args, 'ContributorList');							-- fetch contributor list from |contributorn= / |contributor-lastn=, -firstn=, -linkn=, -maskn=
		
		if 0 &lt; #c then
			if not is_set (Contribution) then									-- |contributor= requires |contribution=
				table.insert( z.message_tail, { set_error( 'contributor_missing_required_param', 'contribution')});	-- add missing contribution error message
				c = {};															-- blank the contributors' table; it is used as a flag later
			end
			if 0 == #a then														-- |contributor= requires |author=
				table.insert( z.message_tail, { set_error( 'contributor_missing_required_param', 'author')});	-- add missing author error message
				c = {};															-- blank the contributors' table; it is used as a flag later
			end
		end
	else																		-- if not a book cite
		if select_one (args, cfg.aliases['ContributorList-Last'], 'redundant_parameters', 1 ) then	-- are there contributor name list parameters?
			table.insert( z.message_tail, { set_error( 'contributor_ignored')});	-- add contributor ignored error message
		end
		Contribution = nil;														-- unset
	end

	if not is_valid_parameter_value (NameListFormat, 'name-list-format', cfg.keywords['name-list-format']) then			-- only accepted value for this parameter is 'vanc'
		NameListFormat = '';													-- anything else, set to empty string
	end

	local Year = A['Year'];
	local PublicationDate = A['PublicationDate'];
	local OrigYear = A['OrigYear'];
	local Date = A['Date'];
	local LayDate = A['LayDate'];
	------------------------------------------------- Get title data
	local Title = A['Title'];
	local ScriptTitle = A['ScriptTitle'];
	local BookTitle = A['BookTitle'];
	local Conference = A['Conference'];
	local TransTitle = A['TransTitle'];
	local TitleNote = A['TitleNote'];
	local TitleLink = A['TitleLink'];
			link_title_ok (TitleLink, A:ORIGIN ('TitleLink'), Title, 'title');	-- check for wikimarkup in |title-link= or wikimarkup in |title= when |title-link= is set

	local Chapter = A['Chapter'];
	local ScriptChapter = A['ScriptChapter'];
	local ChapterLink	-- = A['ChapterLink'];									-- deprecated as a parameter but still used internally by cite episode
	local TransChapter = A['TransChapter'];
	local TitleType = A['TitleType'];
	local Degree = A['Degree'];
	local Docket = A['Docket'];
	local ArchiveFormat = A['ArchiveFormat'];

	local ArchiveDate;
	local ArchiveURL;

	ArchiveURL, ArchiveDate = archive_url_check (A['ArchiveURL'], A['ArchiveDate'])
	
	local DeadURL = A['DeadURL']
		if not is_valid_parameter_value (DeadURL, 'dead-url', cfg.keywords ['deadurl']) then	-- set in config.defaults to 'yes'
			DeadURL = '';														-- anything else, set to empty string
		end

	local URL = A['URL']
	local URLorigin = A:ORIGIN('URL');											-- get name of parameter that holds URL
	local ChapterURL = A['ChapterURL'];
	local ChapterURLorigin = A:ORIGIN('ChapterURL');							-- get name of parameter that holds ChapterURL
	local ConferenceFormat = A['ConferenceFormat'];
	local ConferenceURL = A['ConferenceURL'];
	local ConferenceURLorigin = A:ORIGIN('ConferenceURL');						-- get name of parameter that holds ConferenceURL
	local Periodical = A['Periodical'];
	local Periodical_origin = A:ORIGIN('Periodical');							-- get the name of the periodical parameter

	local Series = A['Series'];
	
	local Volume;
	local Issue;
	local Page;
	local Pages;
	local At;
																				-- previously conference books did not support volume
--	if in_array (config.CitationClass, cfg.templates_using_volume) and not ('conference' == config.CitationClass and not is_set (Periodical)) then
	if in_array (config.CitationClass, cfg.templates_using_volume) then
		Volume = A['Volume'];
	end
																				-- conference &amp; map books do not support issue
	if in_array (config.CitationClass, cfg.templates_using_issue) and not (in_array (config.CitationClass, {'conference', 'map'}) and not is_set (Periodical))then
		Issue = A['Issue'];
	end
	local Position = '';
	if not in_array (config.CitationClass, cfg.templates_not_using_page) then
		Page = A['Page'];
		Pages = hyphen_to_dash( A['Pages'] );	
		At = A['At'];
	end

	local Edition = A['Edition'];
	local PublicationPlace = A['PublicationPlace']
	local Place = A['Place'];
	
	local PublisherName = A['PublisherName'];
	local RegistrationRequired = A['RegistrationRequired'];
		if not is_valid_parameter_value (RegistrationRequired, 'registration', cfg.keywords ['yes_true_y']) then
			RegistrationRequired=nil;
		end
	local SubscriptionRequired = A['SubscriptionRequired'];
		if not is_valid_parameter_value (SubscriptionRequired, 'subscription', cfg.keywords ['yes_true_y']) then
			SubscriptionRequired=nil;
		end
	local UrlAccess = A['UrlAccess'];
		if not is_valid_parameter_value (UrlAccess, 'url-access', cfg.keywords ['url-access']) then
			UrlAccess = nil;
		end
		if not is_set(URL) and is_set(UrlAccess) then
			UrlAccess = nil;
			table.insert( z.message_tail, { set_error( 'param_access_requires_param', {'url'}, true ) } );
		end

		if is_set (UrlAccess) and is_set (SubscriptionRequired) then			-- while not aliases, these are much the same so if both are set
			table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'url-access') .. ' and ' .. wrap_style ('parameter', 'subscription')}, true ) } );		-- add error message
			SubscriptionRequired = nil;											-- unset; prefer |access= over |subscription=
		end
		if is_set (UrlAccess) and is_set (RegistrationRequired) then			-- these are not the same but contradictory so if both are set
			table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'url-access') .. ' and ' .. wrap_style ('parameter', 'registration')}, true ) } );		-- add error message
			RegistrationRequired = nil;											-- unset; prefer |access= over |registration=
		end


	local Via = A['Via'];
	local AccessDate = A['AccessDate'];
	local Agency = A['Agency'];

	local Language = A['Language'];
	local Format = A['Format'];
	local ChapterFormat = A['ChapterFormat'];
	local DoiBroken = A['DoiBroken'];
	local ID = A['ID'];
	local ASINTLD = A['ASINTLD'];
	local IgnoreISBN = A['IgnoreISBN'];
		if not is_valid_parameter_value (IgnoreISBN, 'ignore-isbn-error', cfg.keywords ['yes_true_y']) then
			IgnoreISBN = nil;													-- anything else, set to empty string
		end
	local Embargo = A['Embargo'];
	local Class = A['Class'];													-- arxiv class identifier

	local ID_list = extract_ids( args );
	local ID_access_levels = extract_id_access_levels( args, ID_list );

	local Quote = A['Quote'];

	local LayFormat = A['LayFormat'];
	local LayURL = A['LayURL'];
	local LaySource = A['LaySource'];
	local Transcript = A['Transcript'];
	local TranscriptFormat = A['TranscriptFormat'];
	local TranscriptURL = A['TranscriptURL'] 
	local TranscriptURLorigin = A:ORIGIN('TranscriptURL');						-- get name of parameter that holds TranscriptURL

	local LastAuthorAmp = A['LastAuthorAmp'];
		if not is_valid_parameter_value (LastAuthorAmp, 'last-author-amp', cfg.keywords ['yes_true_y']) then
			LastAuthorAmp = nil;												-- set to empty string
		end
		if 'mla' == Mode then												
			LastAuthorAmp = 'yes';												-- replaces last author/editor separator with ' and ' text
		end
	local no_tracking_cats = A['NoTracking'];
		if not is_valid_parameter_value (no_tracking_cats, 'no-tracking', cfg.keywords ['yes_true_y']) then
			no_tracking_cats = nil;												-- set to empty string
		end

--local variables that are not cs1 parameters
	local use_lowercase;														-- controls capitalization of certain static text
	local this_page = mw.title.getCurrentTitle();								-- also used for COinS and for language
	local anchor_year;															-- used in the CITEREF identifier
	local COinS_date = {};														-- holds date info extracted from |date= for the COinS metadata by Module:Date verification

	local DF = A['DF'];															-- date format set in cs1|2 template
	if not is_valid_parameter_value (DF, 'df', cfg.keywords['date-format']) then	-- validate reformatting keyword
		DF = '';																-- not valid, set to empty string
	end

	local sepc;											-- separator between citation elements for CS1 a period, for CS2, a comma
	local PostScript;
	local Ref;
	sepc, PostScript, Ref = set_style (Mode:lower(), A['PostScript'], A['Ref'], config.CitationClass);
	use_lowercase = ( sepc == ',' );					-- used to control capitalization for certain static text

--check this page to see if it is in one of the namespaces that cs1 is not supposed to add to the error categories
	if not is_set (no_tracking_cats) then										-- ignore if we are already not going to categorize this page
		if in_array (this_page.nsText, cfg.uncategorized_namespaces) then
			no_tracking_cats = &quot;true&quot;;											-- set no_tracking_cats
		end
		for _,v in ipairs (cfg.uncategorized_subpages) do						-- cycle through page name patterns
			if this_page.text:match (v) then									-- test page name against each pattern
				no_tracking_cats = &quot;true&quot;;										-- set no_tracking_cats
				break;															-- bail out if one is found
			end
		end
	end

-- check for extra |page=, |pages= or |at= parameters. (also sheet and sheets while we're at it)
	select_one( args, {'page', 'p', 'pp', 'pages', 'at', 'sheet', 'sheets'}, 'redundant_parameters' );		-- this is a dummy call simply to get the error message and category

	local NoPP = A['NoPP'] 
	if is_set (NoPP) and is_valid_parameter_value (NoPP, 'nopp', cfg.keywords ['yes_true_y']) then
		NoPP = true;
	else
		NoPP = nil;																-- unset, used as a flag later
	end

	if is_set(Page) then
		if is_set(Pages) or is_set(At) then
			Pages = '';															-- unset the others
			At = '';
		end
		extra_text_in_page_check (Page);										-- add this page to maint cat if |page= value begins with what looks like p. or pp.
	elseif is_set(Pages) then
		if is_set(At) then
			At = '';															-- unset
		end
		extra_text_in_page_check (Pages);										-- add this page to maint cat if |pages= value begins with what looks like p. or pp.
	end	

-- both |publication-place= and |place= (|location=) allowed if different
	if not is_set(PublicationPlace) and is_set(Place) then
		PublicationPlace = Place;							-- promote |place= (|location=) to |publication-place
	end
	
	if PublicationPlace == Place then Place = ''; end		-- don't need both if they are the same
	
--[[
Parameter remapping for cite encyclopedia:
When the citation has these parameters:
	|encyclopedia and |title then map |title to |article and |encyclopedia to |title
	|encyclopedia and |article then map |encyclopedia to |title
	|encyclopedia then map |encyclopedia to |title

	|trans_title maps to |trans_chapter when |title is re-mapped
	|url maps to |chapterurl when |title is remapped

All other combinations of |encyclopedia, |title, and |article are not modified

]]

local Encyclopedia = A['Encyclopedia'];

	if ( config.CitationClass == &quot;encyclopaedia&quot; ) or ( config.CitationClass == &quot;citation&quot; and is_set (Encyclopedia)) then	-- test code for citation
		if is_set(Periodical) then												-- Periodical is set when |encyclopedia is set
			if is_set(Title) or is_set (ScriptTitle) then
				if not is_set(Chapter) then
					Chapter = Title;											-- |encyclopedia and |title are set so map |title to |article and |encyclopedia to |title
					ScriptChapter = ScriptTitle;
					TransChapter = TransTitle;
					ChapterURL = URL;
					if not is_set (ChapterURL) and is_set (TitleLink) then
						Chapter= '[[' .. TitleLink .. '|' .. Chapter .. ']]';
					end
					Title = Periodical;
					ChapterFormat = Format;
					Periodical = '';											-- redundant so unset
					TransTitle = '';
					URL = '';
					Format = '';
					TitleLink = '';
					ScriptTitle = '';
				end
			else																-- |title not set
				Title = Periodical;												-- |encyclopedia set and |article set or not set so map |encyclopedia to |title
				Periodical = '';												-- redundant so unset
			end
		end
	end

-- Special case for cite techreport.
	if (config.CitationClass == &quot;techreport&quot;) then								-- special case for cite techreport
		if is_set(A['Number']) then												-- cite techreport uses 'number', which other citations alias to 'issue'
			if not is_set(ID) then												-- can we use ID for the &quot;number&quot;?
				ID = A['Number'];												-- yes, use it
			else																-- ID has a value so emit error message
				table.insert( z.message_tail, { set_error('redundant_parameters', {wrap_style ('parameter', 'id') .. ' and ' .. wrap_style ('parameter', 'number')}, true )});
			end
		end	
	end

-- special case for cite mailing list
	if (config.CitationClass == &quot;mailinglist&quot;) then
		Periodical = A ['MailingList'];
	elseif 'mailinglist' == A:ORIGIN('Periodical') then
		Periodical = '';														-- unset because mailing list is only used for cite mailing list
	end

-- Account for the oddity that is {{cite conference}}, before generation of COinS data.
	if 'conference' == config.CitationClass then
		if is_set(BookTitle) then
			Chapter = Title;
--			ChapterLink = TitleLink;											-- |chapterlink= is deprecated
			ChapterURL = URL;
			ChapterURLorigin = URLorigin;
			URLorigin = '';
			ChapterFormat = Format;
			TransChapter = TransTitle;
			Title = BookTitle;
			Format = '';
--			TitleLink = '';
			TransTitle = '';
			URL = '';
		end
	elseif 'speech' ~= config.CitationClass then
		Conference = '';														-- not cite conference or cite speech so make sure this is empty string
	end

-- cite map oddities
	local Cartography = &quot;&quot;;
	local Scale = &quot;&quot;;
	local Sheet = A['Sheet'] or '';
	local Sheets = A['Sheets'] or '';
	if config.CitationClass == &quot;map&quot; then
		Chapter = A['Map'];
		ChapterURL = A['MapURL'];
		TransChapter = A['TransMap'];
		ChapterURLorigin = A:ORIGIN('MapURL');
		ChapterFormat = A['MapFormat'];
		
		Cartography = A['Cartography'];
		if is_set( Cartography ) then
			Cartography = sepc .. &quot; &quot; .. wrap_msg ('cartography', Cartography, use_lowercase);
		end		
		Scale = A['Scale'];
		if is_set( Scale ) then
			Scale = sepc .. &quot; &quot; .. Scale;
		end
	end

-- Account for the oddities that are {{cite episode}} and {{cite serial}}, before generation of COinS data.
	if 'episode' == config.CitationClass or 'serial' == config.CitationClass then
		local AirDate = A['AirDate'];
		local SeriesLink = A['SeriesLink'];

		link_title_ok (SeriesLink, A:ORIGIN ('SeriesLink'), Series, 'series');	-- check for wikimarkup in |series-link= or wikimarkup in |series= when |series-link= is set

		local Network = A['Network'];
		local Station = A['Station'];
		local s, n = {}, {};
																				-- do common parameters first
		if is_set(Network) then table.insert(n, Network); end
		if is_set(Station) then table.insert(n, Station); end
		ID = table.concat(n, sepc .. ' ');
		
		if not is_set (Date) and is_set (AirDate) then							-- promote airdate to date
			Date = AirDate;
		end

		if 'episode' == config.CitationClass then								-- handle the oddities that are strictly {{cite episode}}
			local Season = A['Season'];
			local SeriesNumber = A['SeriesNumber'];

			if is_set (Season) and is_set (SeriesNumber) then					-- these are mutually exclusive so if both are set
				table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'season') .. ' and ' .. wrap_style ('parameter', 'seriesno')}, true ) } );		-- add error message
				SeriesNumber = '';												-- unset; prefer |season= over |seriesno=
			end
																				-- assemble a table of parts concatenated later into Series
			if is_set(Season) then table.insert(s, wrap_msg ('season', Season, use_lowercase)); end
			if is_set(SeriesNumber) then table.insert(s, wrap_msg ('series', SeriesNumber, use_lowercase)); end
			if is_set(Issue) then table.insert(s, wrap_msg ('episode', Issue, use_lowercase)); end
			Issue = '';															-- unset because this is not a unique parameter
	
			Chapter = Title;													-- promote title parameters to chapter
			ScriptChapter = ScriptTitle;
			ChapterLink = TitleLink;											-- alias episodelink
			TransChapter = TransTitle;
			ChapterURL = URL;
			ChapterURLorigin = A:ORIGIN('URL');
			
			Title = Series;														-- promote series to title
			TitleLink = SeriesLink;
			Series = table.concat(s, sepc .. ' ');								-- this is concatenation of season, seriesno, episode number

			if is_set (ChapterLink) and not is_set (ChapterURL) then			-- link but not URL
				Chapter = '[[' .. ChapterLink .. '|' .. Chapter .. ']]';		-- ok to wikilink
			elseif is_set (ChapterLink) and is_set (ChapterURL) then			-- if both are set, URL links episode;
				Series = '[[' .. ChapterLink .. '|' .. Series .. ']]';			-- series links with ChapterLink (episodelink -&gt; TitleLink -&gt; ChapterLink) ugly
			end
			URL = '';															-- unset
			TransTitle = '';
			ScriptTitle = '';
			
		else																	-- now oddities that are cite serial
			Issue = '';															-- unset because this parameter no longer supported by the citation/core version of cite serial
			Chapter = A['Episode'];												-- TODO: make |episode= available to cite episode someday?
			if is_set (Series) and is_set (SeriesLink) then
				Series = '[[' .. SeriesLink .. '|' .. Series .. ']]';
			end
			Series = wrap_style ('italic-title', Series);						-- series is italicized
		end	
	end
-- end of {{cite episode}} stuff

-- Account for the oddities that are {{cite arxiv}}, {{cite biorxiv}}, {{cite citeseerx}}, before generation of COinS data.
	do
		if in_array (config.CitationClass, {'arxiv', 'biorxiv', 'citeseerx'}) then
			if not is_set (ID_list[config.CitationClass:upper()]) then			-- |arxiv= or |eprint= required for cite arxiv; |biorxiv= &amp; |citeseerx= required for their templates
				table.insert( z.message_tail, { set_error( config.CitationClass .. '_missing', {}, true ) } );		-- add error message
			end
			
			if 'arxiv' == config.CitationClass then
				Periodical = 'arXiv';											-- set to arXiv for COinS; after that, must be set to empty string
			end
			if 'biorxiv' == config.CitationClass then
				Periodical = 'bioRxiv';											-- set to bioRxiv for COinS; after that, must be set to empty string
			end
			if 'citeseerx' == config.CitationClass then
				Periodical = 'CiteSeerX';										-- set to CiteSeerX for COinS; after that, must be set to empty string
			end
		end
	end

-- handle type parameter for those CS1 citations that have default values
	if in_array(config.CitationClass, {&quot;AV-media-notes&quot;, &quot;interview&quot;, &quot;mailinglist&quot;, &quot;map&quot;, &quot;podcast&quot;, &quot;pressrelease&quot;, &quot;report&quot;, &quot;techreport&quot;, &quot;thesis&quot;}) then
		TitleType = set_titletype (config.CitationClass, TitleType);
		if is_set(Degree) and &quot;Thesis&quot; == TitleType then						-- special case for cite thesis
			TitleType = Degree .. ' ' .. cfg.title_types ['thesis']:lower();
		end
	end

	if is_set(TitleType) then													-- if type parameter is specified
		TitleType = substitute( cfg.messages['type'], TitleType);				-- display it in parentheses
	-- TODO: Hack on TitleType to fix bunched parentheses problem
	end

-- legacy: promote PublicationDate to Date if neither Date nor Year are set.
	if not is_set (Date) then
		Date = Year;															-- promote Year to Date
		Year = nil;																-- make nil so Year as empty string isn't used for CITEREF
		if not is_set (Date) and is_set(PublicationDate) then					-- use PublicationDate when |date= and |year= are not set
			Date = PublicationDate;												-- promote PublicationDate to Date
			PublicationDate = '';												-- unset, no longer needed
		end
	end

	if PublicationDate == Date then PublicationDate = ''; end					-- if PublicationDate is same as Date, don't display in rendered citation

--[[
Go test all of the date-holding parameters for valid MOS:DATE format and make sure that dates are real dates. This must be done before we do COinS because here is where
we get the date used in the metadata.

Date validation supporting code is in Module:Citation/CS1/Date_validation
]]
	do	-- create defined block to contain local variables error_message, date_parameters_list, mismatch
		local error_message = '';
																				-- AirDate has been promoted to Date so not necessary to check it
		local date_parameters_list = {['access-date']=AccessDate, ['archive-date']=ArchiveDate, ['date']=Date, ['doi-broken-date']=DoiBroken,
				['embargo']=Embargo, ['lay-date']=LayDate, ['publication-date']=PublicationDate, ['year']=Year};

		anchor_year, Embargo, error_message = dates(date_parameters_list, COinS_date);

		if is_set (Year) and is_set (Date) then									-- both |date= and |year= not normally needed; 
			local mismatch = year_date_check (Year, Date)
			if 0 == mismatch then												-- |year= does not match a year-value in |date=
				if is_set (error_message) then									-- if there is already an error message
					error_message = error_message .. ', ';						-- tack on this additional message
				end
				error_message = error_message .. '&amp;#124;year= / &amp;#124;date= mismatch';
			elseif 1 == mismatch then											-- |year= matches year-value in |date=
				add_maint_cat ('date_year');
			end
		end
		
		if not is_set(error_message) then										-- error free dates only
			local modified = false;												-- flag
			if is_set (DF) then													-- if we need to reformat dates
				modified = reformat_dates (date_parameters_list, DF, false);	-- reformat to DF format, use long month names if appropriate
			end

			if true == date_hyphen_to_dash (date_parameters_list) then					-- convert hyphens to dashes where appropriate
				modified = true;
				add_maint_cat ('date_format');									-- hyphens were converted so add maint category
			end
			
			if modified then													-- if the date_parameters_list values were modified
				AccessDate = date_parameters_list['access-date'];				-- overwrite date holding parameters with modified values
				ArchiveDate = date_parameters_list['archive-date'];
				Date = date_parameters_list['date'];
				DoiBroken = date_parameters_list['doi-broken-date'];
				LayDate = date_parameters_list['lay-date'];
				PublicationDate = date_parameters_list['publication-date'];
			end
		else
			table.insert( z.message_tail, { set_error( 'bad_date', {error_message}, true ) } );	-- add this error message
		end
	end	-- end of do

-- Account for the oddity that is {{cite journal}} with |pmc= set and |url= not set.  Do this after date check but before COInS.
-- Here we unset Embargo if PMC not embargoed (|embargo= not set in the citation) or if the embargo time has expired. Otherwise, holds embargo date
	Embargo = is_embargoed (Embargo);											-- 

	if config.CitationClass == &quot;journal&quot; and not is_set(URL) and is_set(ID_list['PMC']) then
		if not is_set (Embargo) then											-- if not embargoed or embargo has expired
			URL=cfg.id_handlers['PMC'].prefix .. ID_list['PMC'];				-- set url to be the same as the PMC external link if not embargoed
			URLorigin = cfg.id_handlers['PMC'].parameters[1];					-- set URLorigin to parameter name for use in error message if citation is missing a |title=
			if is_set(AccessDate) then											-- access date requires |url=; pmc created url is not |url=
				table.insert( z.message_tail, { set_error( 'accessdate_missing_url', {}, true ) } );
				AccessDate = '';												-- unset
			end

		end
	end

-- At this point fields may be nil if they weren't specified in the template use.  We can use that fact.
	-- Test if citation has no title
	if	not is_set(Title) and
		not is_set(TransTitle) and
		not is_set(ScriptTitle) then
			if 'episode' == config.CitationClass then							-- special case for cite episode; TODO: is there a better way to do this?
				table.insert( z.message_tail, { set_error( 'citation_missing_title', {'series'}, true ) } );
			else
				table.insert( z.message_tail, { set_error( 'citation_missing_title', {'title'}, true ) } );
			end
	end
	
	if 'none' == Title and in_array (config.CitationClass, {'journal', 'citation'}) and is_set (Periodical) and 'journal' == A:ORIGIN('Periodical') then	-- special case for journal cites
		Title = '';																-- set title to empty string
		add_maint_cat ('untitled');
	end

	check_for_url ({															-- add error message when any of these parameters contains a URL
		['title']=Title,
		[A:ORIGIN('Chapter')]=Chapter,
		[A:ORIGIN('Periodical')]=Periodical,
		[A:ORIGIN('PublisherName')] = PublisherName
		});

	-- COinS metadata (see &lt;http://ocoins.info/&gt;) for automated parsing of citation information.
	-- handle the oddity that is cite encyclopedia and {{citation |encyclopedia=something}}. Here we presume that
	-- when Periodical, Title, and Chapter are all set, then Periodical is the book (encyclopedia) title, Title
	-- is the article title, and Chapter is a section within the article.  So, we remap 
	
	local coins_chapter = Chapter;												-- default assuming that remapping not required
	local coins_title = Title;													-- et tu
	if 'encyclopaedia' == config.CitationClass or ('citation' == config.CitationClass and is_set (Encyclopedia)) then
		if is_set (Chapter) and is_set (Title) and is_set (Periodical) then		-- if all are used then
			coins_chapter = Title;												-- remap
			coins_title = Periodical;
		end
	end
	local coins_author = a;														-- default for coins rft.au 
	if 0 &lt; #c then																-- but if contributor list
		coins_author = c;														-- use that instead
	end

	-- this is the function call to COinS()
	local OCinSoutput = COinS({
		['Periodical'] = Periodical,
		['Encyclopedia'] = Encyclopedia,
		['Chapter'] = make_coins_title (coins_chapter, ScriptChapter),			-- Chapter and ScriptChapter stripped of bold / italic wikimarkup
		['Degree'] = Degree;													-- cite thesis only
		['Title'] = make_coins_title (coins_title, ScriptTitle),				-- Title and ScriptTitle stripped of bold / italic wikimarkup
		['PublicationPlace'] = PublicationPlace,
		['Date'] = COinS_date.rftdate,											-- COinS_date has correctly formatted date if Date is valid;
		['Season'] = COinS_date.rftssn,
		['Chron'] =  COinS_date.rftchron or (not COinS_date.rftdate and Date) or '',	-- chron but if not set and invalid date format use Date; keep this last bit?
		['Series'] = Series,
		['Volume'] = Volume,
		['Issue'] = Issue,
		['Pages'] = get_coins_pages (first_set ({Sheet, Sheets, Page, Pages, At}, 5)),				-- pages stripped of external links
		['Edition'] = Edition,
		['PublisherName'] = PublisherName,
		['URL'] = first_set ({ChapterURL, URL}, 2),
		['Authors'] = coins_author,
		['ID_list'] = ID_list,
		['RawPage'] = this_page.prefixedText,
	}, config.CitationClass);

-- Account for the oddities that are {{cite arxiv}}, AFTER generation of COinS data.
--	if 'arxiv' == config.CitationClass then										-- we have set rft.jtitle in COinS to arXiv, now unset so it isn't displayed
	if in_array (config.CitationClass, {'arxiv', 'biorxiv', 'citeseerx'}) then	-- we have set rft.jtitle in COinS to arXiv, bioRxiv, or CiteSeerX now unset so it isn't displayed
		Periodical = '';														-- periodical not allowed in these templates; if article has been published, use cite journal
	end

-- special case for cite newsgroup.  Do this after COinS because we are modifying Publishername to include some static text
	if 'newsgroup' == config.CitationClass then
		if is_set (PublisherName) then
			PublisherName = substitute (cfg.messages['newsgroup'], external_link( 'news:' .. PublisherName, PublisherName, A:ORIGIN('PublisherName'), nil ));
		end
	end



	-- Now perform various field substitutions.
	-- We also add leading spaces and surrounding markup and punctuation to the
	-- various parts of the citation, but only when they are non-nil.
	local EditorCount;															-- used only for choosing {ed.) or (eds.) annotation at end of editor name-list
	do
		local last_first_list;
		local control = { 
			format = NameListFormat,											-- empty string or 'vanc'
			maximum = nil,														-- as if display-authors or display-editors not set
			lastauthoramp = LastAuthorAmp,
			page_name = this_page.text,											-- get current page name so that we don't wikilink to it via editorlinkn
			mode = Mode
		};

		do																		-- do editor name list first because the now unsupported coauthors used to modify control table
			control.maximum , editor_etal = get_display_authors_editors (A['DisplayEditors'], #e, 'editors', editor_etal);
			last_first_list, EditorCount = list_people(control, e, editor_etal);

			if is_set (Editors) then
				if editor_etal then
					Editors = Editors .. ' ' .. cfg.messages['et al'];			-- add et al. to editors parameter beause |display-editors=etal
					EditorCount = 2;											-- with et al., |editors= is multiple names; spoof to display (eds.) annotation
				else
					EditorCount = 2;											-- we don't know but assume |editors= is multiple names; spoof to display (eds.) annotation
				end
			else
				Editors = last_first_list;										-- either an author name list or an empty string
			end

			if 1 == EditorCount and (true == editor_etal or 1 &lt; #e) then		-- only one editor displayed but includes etal then 
				EditorCount = 2;												-- spoof to display (eds.) annotation
			end
		end
		do																		-- now do interviewers
			control.maximum = #interviewers_list;							-- number of interviewerss
			Interviewers = list_people(control, interviewers_list, false);	-- et al not currently supported
		end
		do																		-- now do translators
			control.maximum = #t;												-- number of translators
			Translators = list_people(control, t, false);						-- et al not currently supported
		end
		do																		-- now do contributors
			control.maximum = #c;												-- number of contributors
			Contributors = list_people(control, c, false);						-- et al not currently supported
		end
		do																		-- now do authors
			control.maximum , author_etal = get_display_authors_editors (A['DisplayAuthors'], #a, 'authors', author_etal);

			last_first_list = list_people(control, a, author_etal);

			if is_set (Authors) then
				Authors, author_etal = name_has_etal (Authors, author_etal, false);	-- find and remove variations on et al.
				if author_etal then
					Authors = Authors .. ' ' .. cfg.messages['et al'];			-- add et al. to authors parameter
				end
			else
				Authors = last_first_list;										-- either an author name list or an empty string
			end
		end																		-- end of do
	
		if is_set (Authors) and is_set (Collaboration) then
			Authors = Authors .. ' (' .. Collaboration .. ')';					-- add collaboration after et al.
		end

	end

-- apply |[xx-]format= styling; at the end, these parameters hold correctly styled format annotation,
-- an error message if the associated url is not set, or an empty string for concatenation
	ArchiveFormat = style_format (ArchiveFormat, ArchiveURL, 'archive-format', 'archive-url');
	ConferenceFormat = style_format (ConferenceFormat, ConferenceURL, 'conference-format', 'conference-url');
	Format = style_format (Format, URL, 'format', 'url');
	LayFormat = style_format (LayFormat, LayURL, 'lay-format', 'lay-url');
	TranscriptFormat = style_format (TranscriptFormat, TranscriptURL, 'transcript-format', 'transcripturl');

-- special case for chapter format so no error message or cat when chapter not supported
	if not (in_array(config.CitationClass, {'web', 'news', 'journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'arxiv', 'biorxiv', 'citeseerx'}) or
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia))) then
			ChapterFormat = style_format (ChapterFormat, ChapterURL, 'chapter-format', 'chapter-url');
	end

	if not is_set(URL) then
		if in_array(config.CitationClass, {&quot;web&quot;,&quot;podcast&quot;, &quot;mailinglist&quot;}) then	-- |url= required for cite web, cite podcast, and cite mailinglist
			table.insert( z.message_tail, { set_error( 'cite_web_url', {}, true ) } );
		end
		
		-- do we have |accessdate= without either |url= or |chapter-url=?
		if is_set(AccessDate) and not is_set(ChapterURL)then					-- ChapterURL may be set when URL is not set;
			table.insert( z.message_tail, { set_error( 'accessdate_missing_url', {}, true ) } );
			AccessDate = '';
		end
	end

	local OriginalURL, OriginalURLorigin, OriginalFormat, OriginalAccess;
	DeadURL = DeadURL:lower();													-- used later when assembling archived text
	if is_set( ArchiveURL ) then
		if is_set (ChapterURL) then 											-- URL not set so if chapter-url is set apply archive url to it
			OriginalURL = ChapterURL;											-- save copy of source chapter's url for archive text
			OriginalURLorigin = ChapterURLorigin;								-- name of chapter-url parameter for error messages
			OriginalFormat = ChapterFormat;										-- and original |format=
			if 'no' ~= DeadURL then
				ChapterURL = ArchiveURL											-- swap-in the archive's url
				ChapterURLorigin = A:ORIGIN('ArchiveURL')						-- name of archive-url parameter for error messages
				ChapterFormat = ArchiveFormat or '';							-- swap in archive's format
			end
		elseif is_set (URL) then
			OriginalURL = URL;													-- save copy of original source URL
			OriginalURLorigin = URLorigin;										-- name of url parameter for error messages
			OriginalFormat = Format; 											-- and original |format=
			OriginalAccess = UrlAccess;
			if 'no' ~= DeadURL then												-- if URL set then archive-url applies to it
				URL = ArchiveURL												-- swap-in the archive's url
				URLorigin = A:ORIGIN('ArchiveURL')								-- name of archive url parameter for error messages
				Format = ArchiveFormat or '';									-- swap in archive's format
				UrlAccess = nil;												-- restricted access levels do not make sense for archived urls
			end
 		end
	end

	if in_array(config.CitationClass, {'web','news','journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'arxiv', 'biorxiv', 'citeseerx'}) or	-- if any of the 'periodical' cites except encyclopedia
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia)) then
			local chap_param;
			if is_set (Chapter) then											-- get a parameter name from one of these chapter related meta-parameters
				chap_param = A:ORIGIN ('Chapter')
			elseif is_set (TransChapter) then
				chap_param = A:ORIGIN ('TransChapter')
			elseif is_set (ChapterURL) then
				chap_param = A:ORIGIN ('ChapterURL')
			elseif is_set (ScriptChapter) then
				chap_param = A:ORIGIN ('ScriptChapter')
			else is_set (ChapterFormat)
				chap_param = A:ORIGIN ('ChapterFormat')
			end

			if is_set (chap_param) then											-- if we found one
				table.insert( z.message_tail, { set_error( 'chapter_ignored', {chap_param}, true ) } );		-- add error message
				Chapter = '';													-- and set them to empty string to be safe with concatenation
				TransChapter = '';
				ChapterURL = '';
				ScriptChapter = '';
				ChapterFormat = '';
			end
	else																		-- otherwise, format chapter / article title
		local no_quotes = false;												-- default assume that we will be quoting the chapter parameter value
		if is_set (Contribution) and 0 &lt; #c then								-- if this is a contribution with contributor(s)
			if in_array (Contribution:lower(), cfg.keywords.contribution) then	-- and a generic contribution title
				no_quotes = true;												-- then render it unquoted
			end
		end

		Chapter = format_chapter_title (ScriptChapter, Chapter, TransChapter, ChapterURL, ChapterURLorigin, no_quotes);		-- Contribution is also in Chapter
		if is_set (Chapter) then
			Chapter = Chapter .. ChapterFormat ;
			if 'map' == config.CitationClass and is_set (TitleType) then
				Chapter = Chapter .. ' ' .. TitleType;							-- map annotation here; not after title
			end
			Chapter = Chapter.. sepc .. ' ';
		elseif is_set (ChapterFormat) then										-- |chapter= not set but |chapter-format= is so ...
			Chapter = ChapterFormat .. sepc .. ' ';								-- ... ChapterFormat has error message, we want to see it
		end
	end

	-- Format main title.
	if is_set(TitleLink) and is_set(Title) then
		Title = &quot;[[&quot; .. TitleLink .. &quot;|&quot; .. Title .. &quot;]]&quot;
	end

	if in_array(config.CitationClass, {'web', 'news', 'journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'mailinglist', 'interview', 'arxiv', 'biorxiv', 'citeseerx'}) or
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia)) or
		('map' == config.CitationClass and is_set (Periodical)) then			-- special case for cite map when the map is in a periodical treat as an article
			Title = kern_quotes (Title);										-- if necessary, separate title's leading and trailing quote marks from Module provided quote marks
			Title = wrap_style ('quoted-title', Title);
			Title = script_concatenate (Title, ScriptTitle);					-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
			TransTitle= wrap_style ('trans-quoted-title', TransTitle );
	elseif 'report' == config.CitationClass then								-- no styling for cite report
		Title = script_concatenate (Title, ScriptTitle);						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
		TransTitle= wrap_style ('trans-quoted-title', TransTitle );				-- for cite report, use this form for trans-title
	else
		Title = wrap_style ('italic-title', Title);
		Title = script_concatenate (Title, ScriptTitle);						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
		TransTitle = wrap_style ('trans-italic-title', TransTitle);
	end

	local TransError = &quot;&quot;;
	if is_set(TransTitle) then
		if is_set(Title) then
			TransTitle = &quot; &quot; .. TransTitle;
		else
			TransError = &quot; &quot; .. set_error( 'trans_missing_title', {'title'} );
		end
	end
	
	if is_set(Title) then
		if not is_set(TitleLink) and is_set(URL) then
			
			Title = external_link( URL, Title, URLorigin, UrlAccess ) .. TransTitle .. TransError .. Format;
-- this experiment hidden 2016-04-10; see Help_talk:Citation_Style_1#Recycled_urls
--			local temp_title = external_link( URL, Title, URLorigin ) .. TransError .. Format;	-- do this so we get error message even if url is usurped no archive
--			if in_array (DeadURL, {'unfit no archive', 'usurped no archive'}) then	-- when url links to inappropriate location and there is no archive of original source available
--				local err_msg
--				if temp_title:match ('%[%S+%s+(.+)%](&lt;.+)') then				-- if there is an error message
--					Title, err_msg = temp_title:match ('%[%S+%s+(.+)%](&lt;.+)');	-- strip off external link; TODO: find a better to do this
--					Title = Title .. (err_msg or '');
--				end
--			else
--				Title = temp_title;
--			end

			URL = '';															-- unset these because no longer needed
			Format = &quot;&quot;;
		else
			Title = Title .. TransTitle .. TransError;
		end
	end

	if is_set(Place) then
		Place = &quot; &quot; .. wrap_msg ('written', Place, use_lowercase) .. sepc .. &quot; &quot;;
	end

	if is_set (Conference) then
		if is_set (ConferenceURL) then
			Conference = external_link( ConferenceURL, Conference, ConferenceURLorigin, nil );
		end
		Conference = sepc .. &quot; &quot; .. Conference .. ConferenceFormat;
	elseif is_set(ConferenceURL) then
		Conference = sepc .. &quot; &quot; .. external_link( ConferenceURL, nil, ConferenceURLorigin, nil );
	end

	if not is_set(Position) then
		local Minutes = A['Minutes'];
		local Time = A['Time'];

		if is_set(Minutes) then
			if is_set (Time) then
				table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'minutes') .. ' and ' .. wrap_style ('parameter', 'time')}, true ) } );
			end
			Position = &quot; &quot; .. Minutes .. &quot; &quot; .. cfg.messages['minutes'];
		else
			if is_set(Time) then
				local TimeCaption = A['TimeCaption']
				if not is_set(TimeCaption) then
					TimeCaption = cfg.messages['event'];
					if sepc ~= '.' then
						TimeCaption = TimeCaption:lower();
					end
				end
				Position = &quot; &quot; .. TimeCaption .. &quot; &quot; .. Time;
			end
		end
	else
		Position = &quot; &quot; .. Position;
		At = '';
	end

	Page, Pages, Sheet, Sheets = format_pages_sheets (Page, Pages, Sheet, Sheets, config.CitationClass, Periodical_origin, sepc, NoPP, use_lowercase, Mode);

	At = is_set(At) and (sepc .. &quot; &quot; .. At) or &quot;&quot;;
	Position = is_set(Position) and (sepc .. &quot; &quot; .. Position) or &quot;&quot;;
	if config.CitationClass == 'map' then
		local Section = A['Section'];
		local Sections = A['Sections'];
		local Inset = A['Inset'];
		
		if is_set( Inset ) then
			Inset = sepc .. &quot; &quot; .. wrap_msg ('inset', Inset, use_lowercase);
		end			

		if is_set( Sections ) then
			Section = sepc .. &quot; &quot; .. wrap_msg ('sections', Sections, use_lowercase);
		elseif is_set( Section ) then
			Section = sepc .. &quot; &quot; .. wrap_msg ('section', Section, use_lowercase);
		end
		At = At .. Inset .. Section;		
	end	

	if is_set (Language) then
		Language = language_parameter (Language);								-- format, categories, name from ISO639-1, etc
	else
		Language=&quot;&quot;;															-- language not specified so make sure this is an empty string;
	--[[ TODO: need to extract the wrap_msg from language_parameter
	so that we can solve parentheses bunching problem with Format/Language/TitleType
	]]
	end

	Others = is_set(Others) and (sepc .. &quot; &quot; .. Others) or &quot;&quot;;
	
	if is_set (Translators) then
		if 'mla' == Mode then
			Others = sepc .. ' Trans. ' .. Translators .. Others;
		else
			Others = sepc .. ' ' .. wrap_msg ('translated', Translators, use_lowercase) .. Others;
		end
	end
	if is_set (Interviewers) then
		Others = sepc .. ' ' .. wrap_msg ('interview', Interviewers, use_lowercase) .. Others;
	end
	
	TitleNote = is_set(TitleNote) and (sepc .. &quot; &quot; .. TitleNote) or &quot;&quot;;
	if is_set (Edition) then
		if Edition:match ('%f[%a][Ee]d%.?$') or Edition:match ('%f[%a][Ee]dition$') then
			add_maint_cat ('extra_text', 'edition');
		end
		if 'mla' == Mode then
			Edition = '. ' .. Edition .. ' ed.';
		else
			Edition = &quot; &quot; .. wrap_msg ('edition', Edition);
		end
	else
		Edition = '';
	end

	Series = is_set(Series) and (sepc .. &quot; &quot; .. Series) or &quot;&quot;;
	if 'mla' == Mode then														-- not in brackets for mla
		OrigYear = is_set(OrigYear) and (&quot;. &quot; .. OrigYear) or &quot;&quot;;
	else
		OrigYear = is_set(OrigYear) and (&quot; [&quot; .. OrigYear .. &quot;]&quot;) or &quot;&quot;;
	end
	Agency = is_set(Agency) and (sepc .. &quot; &quot; .. Agency) or &quot;&quot;;

	Volume = format_volume_issue (Volume, Issue, config.CitationClass, Periodical_origin, sepc, use_lowercase, Mode);

	------------------------------------ totally unrelated data
	if is_set(Via) then
		Via = &quot; &quot; .. wrap_msg ('via', Via);
	end

--[[
Subscription implies paywall; Registration does not.  If both are used in a citation, the subscription required link
note is displayed. There are no error messages for this condition.

]]
	if is_set (SubscriptionRequired) then
		SubscriptionRequired = sepc .. &quot; &quot; .. cfg.messages['subscription'];		-- subscription required message
	elseif is_set (RegistrationRequired) then
		SubscriptionRequired = sepc .. &quot; &quot; .. cfg.messages['registration'];		-- registration required message
	else
		SubscriptionRequired = '';												-- either or both might be set to something other than yes true y
	end

	if is_set(AccessDate) then
		local retrv_text = &quot; &quot; .. cfg.messages['retrieved']

		AccessDate = nowrap_date (AccessDate);									-- wrap in nowrap span if date in appropriate format
		if 'mla' == Mode then													-- retrieved text not used in mla
			AccessDate = ' ' .. AccessDate;
		else
			if (sepc ~= &quot;.&quot;) then retrv_text = retrv_text:lower() end			-- if mode is cs2, lower case
			AccessDate = substitute (retrv_text, AccessDate);					-- add retrieved text
		end
		AccessDate = substitute (cfg.presentation['accessdate'], {sepc, AccessDate});	-- allow editors to hide accessdates
	end
	
	if is_set(ID) then ID = sepc ..&quot; &quot;.. ID; end
   	if &quot;thesis&quot; == config.CitationClass and is_set(Docket) then
		ID = sepc ..&quot; Docket &quot;.. Docket .. ID;
	end
   	if &quot;report&quot; == config.CitationClass and is_set(Docket) then					-- for cite report when |docket= is set
		ID = sepc .. ' ' .. Docket;												-- overwrite ID even if |id= is set
	end

	ID_list = build_id_list( ID_list, {IdAccessLevels=ID_access_levels, DoiBroken = DoiBroken, ASINTLD = ASINTLD, IgnoreISBN = IgnoreISBN, Embargo=Embargo, Class = Class} );

	if is_set(URL) then
		URL = &quot; &quot; .. external_link( URL, nil, URLorigin, UrlAccess );
	end

	if is_set(Quote) then
		if Quote:sub(1,1) == '&quot;' and Quote:sub(-1,-1) == '&quot;' then				-- if first and last characters of quote are quote marks
			Quote = Quote:sub(2,-2);											-- strip them off
		end
		Quote = sepc ..&quot; &quot; .. wrap_style ('quoted-text', Quote ); 				-- wrap in &lt;q&gt;...&lt;/q&gt; tags
		PostScript = &quot;&quot;;														-- cs1|2 does not supply terminal punctuation when |quote= is set
	end
	
	local Archived
	if is_set(ArchiveURL) then
		if not is_set(ArchiveDate) then
			ArchiveDate = set_error('archive_missing_date');
		end
		if &quot;no&quot; == DeadURL then
			local arch_text = cfg.messages['archived'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			Archived = sepc .. &quot; &quot; .. substitute( cfg.messages['archived-not-dead'],
				{ external_link( ArchiveURL, arch_text, A:ORIGIN('ArchiveURL'), nil ) .. ArchiveFormat, ArchiveDate } );
			if not is_set(OriginalURL) then
				Archived = Archived .. &quot; &quot; .. set_error('archive_missing_url');							   
			end
		elseif is_set(OriginalURL) then											-- DeadURL is empty, 'yes', 'true', 'y', 'unfit', 'usurped'
			local arch_text = cfg.messages['archived-dead'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			if in_array (DeadURL, {'unfit', 'usurped', 'bot: unknown'}) then
				Archived = sepc .. &quot; &quot; .. 'Archived from the original on ' .. ArchiveDate;	-- format already styled
				if 'bot: unknown' == DeadURL then
					add_maint_cat ('bot:_unknown');								-- and add a category if not already added
				else
					add_maint_cat ('unfit');									-- and add a category if not already added
				end
			else																-- DeadURL is empty, 'yes', 'true', or 'y'
				Archived = sepc .. &quot; &quot; .. substitute( arch_text,
					{ external_link( OriginalURL, cfg.messages['original'], OriginalURLorigin, OriginalAccess ) .. OriginalFormat, ArchiveDate } );	-- format already styled
			end	
		else
			local arch_text = cfg.messages['archived-missing'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			Archived = sepc .. &quot; &quot; .. substitute( arch_text, 
				{ set_error('archive_missing_url'), ArchiveDate } );
		end
	elseif is_set (ArchiveFormat) then
		Archived = ArchiveFormat;												-- if set and ArchiveURL not set ArchiveFormat has error message
	else
		Archived = &quot;&quot;
	end
	
	local Lay = '';
	if is_set(LayURL) then
		if is_set(LayDate) then LayDate = &quot; (&quot; .. LayDate .. &quot;)&quot; end
		if is_set(LaySource) then 
			LaySource = &quot; &amp;ndash; ''&quot; .. safe_for_italics(LaySource) .. &quot;''&quot;;
		else
			LaySource = &quot;&quot;;
		end
		if sepc == '.' then
			Lay = sepc .. &quot; &quot; .. external_link( LayURL, cfg.messages['lay summary'], A:ORIGIN('LayURL'), nil ) .. LayFormat .. LaySource .. LayDate
		else
			Lay = sepc .. &quot; &quot; .. external_link( LayURL, cfg.messages['lay summary']:lower(), A:ORIGIN('LayURL'), nil ) .. LayFormat .. LaySource .. LayDate
		end			
	elseif is_set (LayFormat) then												-- Test if |lay-format= is given without giving a |lay-url=
		Lay = sepc .. LayFormat;												-- if set and LayURL not set, then LayFormat has error message
	end

	if is_set(Transcript) then
		if is_set(TranscriptURL) then
			Transcript = external_link( TranscriptURL, Transcript, TranscriptURLorigin, nil );
		end
		Transcript = sepc .. ' ' .. Transcript .. TranscriptFormat;
	elseif is_set(TranscriptURL) then
		Transcript = external_link( TranscriptURL, nil, TranscriptURLorigin, nil );
	end

	local Publisher;
	if is_set(PublicationDate) then
		PublicationDate = wrap_msg ('published', PublicationDate);
	end
	if is_set(PublisherName) then
		if is_set(PublicationPlace) then
			Publisher = sepc .. &quot; &quot; .. PublicationPlace .. &quot;: &quot; .. PublisherName .. PublicationDate;
		else
			Publisher = sepc .. &quot; &quot; .. PublisherName .. PublicationDate;  
		end			
	elseif is_set(PublicationPlace) then 
		Publisher= sepc .. &quot; &quot; .. PublicationPlace .. PublicationDate;
	else 
		Publisher = PublicationDate;
	end
	
	-- Several of the above rely upon detecting this as nil, so do it last.
	if is_set(Periodical) then
		if is_set(Title) or is_set(TitleNote) then 
			Periodical = sepc .. &quot; &quot; .. wrap_style ('italic-title', Periodical) 
		else 
			Periodical = wrap_style ('italic-title', Periodical)
		end
	end

--[[
Handle the oddity that is cite speech.  This code overrides whatever may be the value assigned to TitleNote (through |department=) and forces it to be &quot; (Speech)&quot; so that
the annotation directly follows the |title= parameter value in the citation rather than the |event= parameter value (if provided).
]]
	if &quot;speech&quot; == config.CitationClass then				-- cite speech only
		TitleNote = &quot; (Speech)&quot;;							-- annotate the citation
		if is_set (Periodical) then							-- if Periodical, perhaps because of an included |website= or |journal= parameter 
			if is_set (Conference) then						-- and if |event= is set
				Conference = Conference .. sepc .. &quot; &quot;;		-- then add appropriate punctuation to the end of the Conference variable before rendering
			end
		end
	end

	-- Piece all bits together at last.  Here, all should be non-nil.
	-- We build things this way because it is more efficient in LUA
	-- not to keep reassigning to the same string variable over and over.

	local tcommon;
	local tcommon2;																-- used for book cite when |contributor= is set
	
	if in_array(config.CitationClass, {&quot;journal&quot;,&quot;citation&quot;}) and is_set(Periodical) then
		if is_set(Others) then Others = Others .. sepc .. &quot; &quot; end
		if 'mla' == Mode then
			tcommon = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Edition, Publisher, Agency, Volume}, sepc );
		else
			tcommon = safe_join( {Others, Title, TitleNote, Conference, Periodical, Format, TitleType, Series, 
				Language, Edition, Publisher, Agency, Volume}, sepc );
		end		
	elseif in_array(config.CitationClass, {&quot;book&quot;,&quot;citation&quot;}) and not is_set(Periodical) then		-- special cases for book cites
		if is_set (Contributors) then											-- when we are citing foreword, preface, introduction, etc
			tcommon = safe_join( {Title, TitleNote}, sepc );					-- author and other stuff will come after this and before tcommon2
			if 'mla' == Mode then
				tcommon2 = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Volume, Edition, Publisher, Agency}, sepc );
			else
				tcommon2 = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Volume, Others, Edition, Publisher, Agency}, sepc );
			end
		elseif 'mla' == Mode then
			tcommon = safe_join( {TitleNote, Conference, Periodical, Format, TitleType, Series, Language, Volume, Publisher, Agency}, sepc );
		else
			tcommon = safe_join( {Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, Volume, Others, Edition, Publisher, Agency}, sepc );
		end

	elseif 'map' == config.CitationClass then									-- special cases for cite map
		if is_set (Chapter) then												-- map in a book; TitleType is part of Chapter
			tcommon = safe_join( {Title, Format, Edition, Scale, Series, Language, Cartography, Others, Publisher, Volume}, sepc );
		elseif is_set (Periodical) then											-- map in a periodical
			tcommon = safe_join( {Title, TitleType, Format, Periodical, Scale, Series, Language, Cartography, Others, Publisher, Volume}, sepc );
		else																	-- a sheet or stand-alone map
			tcommon = safe_join( {Title, TitleType, Format, Edition, Scale, Series, Language, Cartography, Others, Publisher}, sepc );
		end
		
	elseif 'episode' == config.CitationClass then								-- special case for cite episode
		tcommon = safe_join( {Title, TitleNote, TitleType, Series, Transcript, Language, Edition, Publisher}, sepc );

	elseif ('news' == config.CitationClass) and ('mla' == Mode) then			-- special case for cite news in MLA mode
		tcommon = safe_join( {Periodical, Format, TitleType, Series, Language, Edition, Agency}, sepc );

	elseif ('web' == config.CitationClass) and ('mla' == Mode) then				-- special case for cite web in MLA mode
		tcommon = safe_join( {Periodical, Format, TitleType, Series, Language, 
			Edition, Publisher, Agency}, sepc );

	else																		-- all other CS1 templates
		tcommon = safe_join( {Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, 
			Volume, Others, Edition, Publisher, Agency}, sepc );
	end
	
	if #ID_list &gt; 0 then
		ID_list = safe_join( { sepc .. &quot; &quot;,  table.concat( ID_list, sepc .. &quot; &quot; ), ID }, sepc );
	else
		ID_list = ID;
	end
	
	local idcommon = safe_join( { ID_list, URL, Archived, AccessDate, Via, SubscriptionRequired, Lay, Quote }, sepc );
	local text;
	local pgtext = Position .. Sheet .. Sheets .. Page .. Pages .. At;

	if is_set(Date) then
		if ('mla' == Mode) then
			if in_array (config.CitationClass, {'book', 'news', 'web'}) then
				Date = ', ' .. Date;											-- origyear follows title in mla
			elseif 'journal' == config.CitationClass then
				Date = ', (' .. Date .. ')';
			end
		elseif is_set (Authors) or is_set (Editors) then						-- date follows authors or editors when authors not set
			Date = &quot; (&quot; .. Date ..&quot;)&quot; .. OrigYear .. sepc .. &quot; &quot;;				-- in paranetheses
		else																	-- neither of authors and editors set
			if (string.sub(tcommon,-1,-1) == sepc) then							-- if the last character of tcommon is sepc
				Date = &quot; &quot; .. Date .. OrigYear;									-- Date does not begin with sepc
			else
				Date = sepc .. &quot; &quot; .. Date .. OrigYear;							-- Date begins with sepc
			end
		end
	end	
	if is_set(Authors) then
		if (not is_set (Date)) or ('mla' == Mode) then							-- when date is set it's in parentheses; no Authors termination
			Authors = terminate_name_list (Authors, sepc);						-- when no date, terminate with 0 or 1 sepc and a space
		end
		if is_set(Editors) then
			local in_text = &quot; &quot;;
			local post_text = &quot;&quot;;
			if is_set(Chapter) and 0 == #c and 'mla' ~= Mode then
				in_text = in_text .. cfg.messages['in'] .. &quot; &quot;
				if (sepc ~= '.') then in_text = in_text:lower() end				-- lowercase for cs2
			elseif is_set(Chapter) and 'mla' == Mode then
				if EditorCount &lt;= 1 then
					in_text = '. Ed. ';
				else
					in_text = '. Eds. ';
				end
			else
				if EditorCount &lt;= 1 then
					post_text = &quot;, &quot; .. cfg.messages['editor'];
				else
					post_text = &quot;, &quot; .. cfg.messages['editors'];
				end
			end 
			Editors = terminate_name_list (in_text .. Editors .. post_text, sepc);	-- terminate with 0 or 1 sepc and a space
		end
		if is_set (Contributors) then											-- book cite and we're citing the intro, preface, etc
			local by_text = sepc .. ' ' .. cfg.messages['by'] .. ' ';
			if (sepc ~= '.') then by_text = by_text:lower() end					-- lowercase for cs2
			Authors = by_text .. Authors;										-- author follows title so tweak it here
			if is_set (Editors) and is_set (Date) and ('mla' ~= Mode) then		-- when Editors make sure that Authors gets terminated
				Authors = terminate_name_list (Authors, sepc);					-- terminate with 0 or 1 sepc and a space
			end
			if (not is_set (Date)) or ('mla' == Mode) then											-- when date is set it's in parentheses; no Contributors termination
				Contributors = terminate_name_list (Contributors, sepc);		-- terminate with 0 or 1 sepc and a space
			end
			if 'mla' == Mode then
				text = safe_join( {Contributors, Chapter, tcommon, OrigYear, Authors, Place, Others, Editors, tcommon2, Date, pgtext, idcommon }, sepc );
			else
				text = safe_join( {Contributors, Date, Chapter, tcommon, Authors, Place, Editors, tcommon2, pgtext, idcommon }, sepc );
			end
		elseif 'mla' == Mode then
			tcommon = tcommon .. Date;											-- hack to avoid duplicate separators
			text = safe_join( {Authors, Chapter, Title, OrigYear, Others, Editors, Edition, Place, tcommon, pgtext, idcommon }, sepc );
		else
			text = safe_join( {Authors, Date, Chapter, Place, Editors, tcommon, pgtext, idcommon }, sepc );
		end
	elseif is_set(Editors) then
		if is_set(Date) then
			if EditorCount &lt;= 1 then
				Editors = Editors .. &quot;, &quot; .. cfg.messages['editor'];
			else
				Editors = Editors .. &quot;, &quot; .. cfg.messages['editors'];
			end
		else
			if EditorCount &lt;= 1 then
				Editors = Editors .. &quot; (&quot; .. cfg.messages['editor'] .. &quot;)&quot; .. sepc .. &quot; &quot;
			else
				Editors = Editors .. &quot; (&quot; .. cfg.messages['editors'] .. &quot;)&quot; .. sepc .. &quot; &quot;
			end
		end
		if 'mla' == Mode then
			if in_array(config.CitationClass, {'journal', 'news', 'web'}) and is_set(Periodical) then
				text = safe_join( {Editors, Title, Place, tcommon, pgtext, Date, idcommon}, sepc );
			else
				text = safe_join( {Editors, Chapter, Title, Place, tcommon, Date, pgtext, idcommon}, sepc );
			end
		else
			text = safe_join( {Editors, Date, Chapter, Place, tcommon, pgtext, idcommon}, sepc );
		end
	elseif 'mla' == Mode then
		if in_array(config.CitationClass, {'journal', 'news', 'web'}) and is_set(Periodical) then
			text = safe_join( {Title, Place, tcommon, pgtext, Date, idcommon}, sepc );
		else
			text = safe_join( {Chapter, Title, Place, tcommon, Date, pgtext, idcommon}, sepc );
		end
	else
		if in_array(config.CitationClass, {&quot;journal&quot;,&quot;citation&quot;}) and is_set(Periodical) then
			text = safe_join( {Chapter, Place, tcommon, pgtext, Date, idcommon}, sepc );
		else
			text = safe_join( {Chapter, Place, tcommon, Date, pgtext, idcommon}, sepc );
		end
	end
	
	if is_set(PostScript) and PostScript ~= sepc then
		text = safe_join( {text, sepc}, sepc );  --Deals with italics, spaces, etc.
		text = text:sub(1,-sepc:len()-1);
	end	
	
	text = safe_join( {text, PostScript}, sepc );

	-- Now enclose the whole thing in a &lt;cite/&gt; element
	local options = {};
	
	if is_set(config.CitationClass) and config.CitationClass ~= &quot;citation&quot; then
		options.class = config.CitationClass;
		options.class = &quot;citation &quot; .. config.CitationClass;					-- class=citation required for blue highlight when used with |ref=
	else
		options.class = &quot;citation&quot;;
	end
	
	if is_set(Ref) and Ref:lower() ~= &quot;none&quot; then								-- set reference anchor if appropriate
		local id = Ref
		if ('harv' == Ref ) then
			local namelist = {};												-- holds selected contributor, author, editor name list
			local year = first_set ({Year, anchor_year}, 2);					-- Year first for legacy citations and for YMD dates that require disambiguation

			if #c &gt; 0 then														-- if there is a contributor list
				namelist = c;													-- select it
			elseif #a &gt; 0 then													-- or an author list
				namelist = a;
			elseif #e &gt; 0 then													-- or an editor list
				namelist = e;
			end
			if #namelist &gt; 0 then												-- if there are names in namelist
				id = anchor_id (namelist, year);								-- go make the CITEREF anchor
			else
				id = '';														-- unset
			end
		end
		options.id = id;
	end
	
	if string.len(text:gsub(&quot;&lt;span[^&gt;/]*&gt;(.-)&lt;/span&gt;&quot;, &quot;%1&quot;):gsub(&quot;%b&lt;&gt;&quot;,&quot;&quot;)) &lt;= 2 then	-- remove &lt;span&gt; tags and other html-like markup; then get length of what remains
		z.error_categories = {};
		text = set_error('empty_citation');
		z.message_tail = {};
	end
	
	if is_set(options.id) then													-- here we wrap the rendered citation in &lt;cite ...&gt;...&lt;/cite&gt; tags
		text = substitute (cfg.presentation['cite-id'], {mw.uri.anchorEncode(options.id), mw.text.nowiki(options.class), text});	-- when |ref= is set
	else
		text = substitute (cfg.presentation['cite'], {mw.text.nowiki(options.class), text});	-- all other cases
	end		

	text = text .. substitute (cfg.presentation['ocins'], {OCinSoutput});		-- append metadata to the citation
	
	if #z.message_tail ~= 0 then
		text = text .. &quot; &quot;;
		for i,v in ipairs( z.message_tail ) do
			if is_set(v[1]) then
				if i == #z.message_tail then
					text = text .. error_comment( v[1], v[2] );
				else
					text = text .. error_comment( v[1] .. &quot;; &quot;, v[2] );
				end
			end
		end
	end

	if #z.maintenance_cats ~= 0 then
		text = text .. '&lt;span class=&quot;citation-comment&quot; style=&quot;display:none; color:#33aa33; margin-left:0.3em&quot;&gt;';
		for _, v in ipairs( z.maintenance_cats ) do								-- append maintenance categories
			text = text .. v .. ' ([[:Category:' .. v ..'|link]])';
		end
		text = text .. '&lt;/span&gt;';												-- maintenance mesages (realy just the names of the categories for now)
	end
	
	no_tracking_cats = no_tracking_cats:lower();
	if in_array(no_tracking_cats, {&quot;&quot;, &quot;no&quot;, &quot;false&quot;, &quot;n&quot;}) then
		for _, v in ipairs( z.error_categories ) do
			text = text .. '[[Category:' .. v ..']]';
		end
		for _, v in ipairs( z.maintenance_cats ) do								-- append maintenance categories
			text = text .. '[[Category:' .. v ..']]';
		end
		for _, v in ipairs( z.properties_cats ) do								-- append maintenance categories
			text = text .. '[[Category:' .. v ..']]';
		end
	end
	
	return text
end


--[[--------------------------&lt; C S 1 . C I T A T I O N &gt;------------------------------------------------------

This is used by templates such as {{cite book}} to create the actual citation text.

]]

function cs1.citation(frame)
	Frame = frame;																-- save a copy incase we need to display an error message in preview mode
	local pframe = frame:getParent()
	local validation, utilities, identifiers, metadata;
	
	if nil ~= string.find (frame:getTitle(), 'sandbox', 1, true) then			-- did the {{#invoke:}} use sandbox version?
		cfg = mw.loadData ('Module:Citation/CS1/Configuration/sandbox');		-- load sandbox versions of support modules
		whitelist = mw.loadData ('Module:Citation/CS1/Whitelist/sandbox');
		utilities = require ('Module:Citation/CS1/Utilities/sandbox');
		validation = require ('Module:Citation/CS1/Date_validation/sandbox');
		identifiers = require ('Module:Citation/CS1/Identifiers/sandbox');
		metadata = require ('Module:Citation/CS1/COinS/sandbox');
		
	else																		-- otherwise
		cfg = mw.loadData ('Module:Citation/CS1/Configuration');				-- load live versions of support modules
		whitelist = mw.loadData ('Module:Citation/CS1/Whitelist');
		utilities = require ('Module:Citation/CS1/Utilities');
		validation = require ('Module:Citation/CS1/Date_validation');
		identifiers = require ('Module:Citation/CS1/Identifiers');
		metadata = require ('Module:Citation/CS1/COinS');
	end

	utilities.set_selected_modules (cfg);										-- so that functions in Utilities can see the cfg tables
	identifiers.set_selected_modules (cfg, utilities);							-- so that functions in Identifiers can see the selected cfg tables and selected Utilities module
	validation.set_selected_modules (utilities);								-- so that functions in Date validataion can see the selected Utilities module
	metadata.set_selected_modules (cfg, utilities);								-- so that functions in COinS can see the selected cfg tables and selected Utilities module

	dates = validation.dates;													-- imported functions from Module:Citation/CS1/Date validation
	year_date_check = validation.year_date_check;
	reformat_dates = validation.reformat_dates;
	date_hyphen_to_dash = validation.date_hyphen_to_dash;
	
	is_set = utilities.is_set;													-- imported functions from Module:Citation/CS1/Utilities
	in_array = utilities.in_array;
	substitute = utilities.substitute;
	error_comment = utilities.error_comment;
	set_error = utilities.set_error;
	select_one = utilities.select_one;
	add_maint_cat = utilities.add_maint_cat;
	wrap_style = utilities.wrap_style;
	safe_for_italics = utilities.safe_for_italics;
	remove_wiki_link = utilities.remove_wiki_link;

	z = utilities.z;															-- table of error and category tables in Module:Citation/CS1/Utilities

	extract_ids = identifiers.extract_ids;										-- imported functions from Module:Citation/CS1/Identifiers
	build_id_list = identifiers.build_id_list;
	is_embargoed = identifiers.is_embargoed;
	extract_id_access_levels = identifiers.extract_id_access_levels;
	
	make_coins_title = metadata.make_coins_title;								-- imported functions from Module:Citation/CS1/COinS
	get_coins_pages = metadata.get_coins_pages;
	COinS = metadata.COinS;

	local args = {};															-- table where we store all of the template's arguments
	local suggestions = {};														-- table where we store suggestions if we need to loadData them
	local error_text, error_state;

	local config = {};															-- table to store parameters from the module {{#invoke:}}
	for k, v in pairs( frame.args ) do
		config[k] = v;
--		args[k] = v;															-- debug tool that allows us to render a citation from module {{#invoke:}}
	end	

	local capture;																-- the single supported capture when matching unknown parameters using patterns
	for k, v in pairs( pframe.args ) do
		if v ~= '' then
			if not validate( k, config.CitationClass ) then			
				error_text = &quot;&quot;;
				if type( k ) ~= 'string' then
					-- Exclude empty numbered parameters
					if v:match(&quot;%S+&quot;) ~= nil then
						error_text, error_state = set_error( 'text_ignored', {v}, true );
					end
				elseif validate( k:lower(), config.CitationClass ) then 
					error_text, error_state = set_error( 'parameter_ignored_suggest', {k, k:lower()}, true );
				else
					if nil == suggestions.suggestions then						-- if this table is nil then we need to load it
						if nil ~= string.find (frame:getTitle(), 'sandbox', 1, true) then			-- did the {{#invoke:}} use sandbox version?
							suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions/sandbox' );	-- use the sandbox version
						else
							suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions' );			-- use the live version
						end
					end
					for pattern, param in pairs (suggestions.patterns) do		-- loop through the patterns to see if we can suggest a proper parameter
						capture = k:match (pattern);							-- the whole match if no caputre in pattern else the capture if a match
						if capture then											-- if the pattern matches 
							param = substitute( param, capture );				-- add the capture to the suggested parameter (typically the enumerator)
							error_text, error_state = set_error( 'parameter_ignored_suggest', {k, param}, true );	-- set the error message
						end
					end
					if not is_set (error_text) then								-- couldn't match with a pattern, is there an expicit suggestion?
						if suggestions.suggestions[ k:lower() ] ~= nil then
							error_text, error_state = set_error( 'parameter_ignored_suggest', {k, suggestions.suggestions[ k:lower() ]}, true );
						else
							error_text, error_state = set_error( 'parameter_ignored', {k}, true );
							v = '';												-- unset value assigned to unrecognized parameters (this for the limited parameter lists)
						end
					end
				end				  
				if error_text ~= '' then
					table.insert( z.message_tail, {error_text, error_state} );
				end				
			end
			missing_pipe_check (v);												-- do we think that there is a parameter that is missing a pipe?
			
			args[k] = v;
		elseif args[k] ~= nil or (k == 'postscript') then
			args[k] = v;
		end		
	end	

	for k, v in pairs( args ) do
		if 'string' == type (k) then											-- don't evaluate positional parameters
			has_invisible_chars (k, v);
		end
	end
	return citation0( config, args)
end

return cs1;</text>
      <sha1>3f3q4btal4dccpz3fgm2gs5lzro4q94</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/COinS</title>
    <ns>828</ns>
    <id>48828620</id>
    <revision>
      <id>778352763</id>
      <parentid>777799217</parentid>
      <timestamp>2017-05-02T16:22:11Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>long-time corrupted-metadata bug fixed;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="16669">
local coins = {};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array, remove_wiki_link;										-- functions in Module:Citation/CS1/Utilities

local cfg;																		-- table of configuration tables that are defined in Module:Citation/CS1/Configuration


--[[--------------------------&lt; S T R I P _ A P O S T R O P H E _ M A R K U P &gt;--------------------------------

Strip wiki italic and bold markup from argument so that it doesn't contaminate COinS metadata.
This function strips common patterns of apostrophe markup.  We presume that editors who have taken the time to
markup a title have, as a result, provided valid markup. When they don't, some single apostrophes are left behind.

]]

local function strip_apostrophe_markup (argument)
	if not is_set (argument) then return argument; end

	if argument:find ( &quot;''&quot;, 1, true ) == nil then								-- Is there at least one double apostrophe?  If not, exit.
		return argument;
	end

	while true do
		if argument:find ( &quot;'''''&quot;, 1, true ) then								-- bold italic (5)
			argument=argument:gsub(&quot;%'%'%'%'%'&quot;, &quot;&quot;);							-- remove all instances of it
		elseif argument:find ( &quot;''''&quot;, 1, true ) then							-- italic start and end without content (4)
			argument=argument:gsub(&quot;%'%'%'%'&quot;, &quot;&quot;);
		elseif argument:find ( &quot;'''&quot;, 1, true ) then							-- bold (3)
			argument=argument:gsub(&quot;%'%'%'&quot;, &quot;&quot;);
		elseif argument:find ( &quot;''&quot;, 1, true ) then								-- italic (2)
			argument=argument:gsub(&quot;%'%'&quot;, &quot;&quot;);
		else
			break;
		end
	end
	return argument;															-- done
end


--[[--------------------------&lt; M A K E _ C O I N S _ T I T L E &gt;----------------------------------------------

Makes a title for COinS from Title and / or ScriptTitle (or any other name-script pairs)

Apostrophe markup (bold, italics) is stripped from each value so that the COinS metadata isn't corrupted with strings
of %27%27...

]]

local function make_coins_title (title, script)
	if is_set (title) then
		title = strip_apostrophe_markup (title);								-- strip any apostrophe markup
	else
		title='';																-- if not set, make sure title is an empty string
	end
	if is_set (script) then
		script = script:gsub ('^%l%l%s*:%s*', '');								-- remove language prefix if present (script value may now be empty string)
		script = strip_apostrophe_markup (script);								-- strip any apostrophe markup
	else
		script='';																-- if not set, make sure script is an empty string
	end
	if is_set (title) and is_set (script) then
		script = ' ' .. script;													-- add a space before we concatenate
	end
	return title .. script;														-- return the concatenation
end


--[[--------------------------&lt; E S C A P E _ L U A _ M A G I C _ C H A R S &gt;----------------------------------

Returns a string where all of lua's magic characters have been escaped.  This is important because functions like
string.gsub() treat their pattern and replace strings as patterns, not literal strings.
]]

local function escape_lua_magic_chars (argument)
	argument = argument:gsub(&quot;%%&quot;, &quot;%%%%&quot;);										-- replace % with %%
	argument = argument:gsub(&quot;([%^%$%(%)%.%[%]%*%+%-%?])&quot;, &quot;%%%1&quot;);				-- replace all other lua magic pattern characters
	return argument;
end


--[[--------------------------&lt; G E T _ C O I N S _ P A G E S &gt;------------------------------------------------

Extract page numbers from external wikilinks in any of the |page=, |pages=, or |at= parameters for use in COinS.

]]

local function get_coins_pages (pages)
	local pattern;
	if not is_set (pages) then return pages; end								-- if no page numbers then we're done
	
	while true do
		pattern = pages:match(&quot;%[(%w*:?//[^ ]+%s+)[%w%d].*%]&quot;);					-- pattern is the opening bracket, the url and following space(s): &quot;[url &quot;
		if nil == pattern then break; end										-- no more urls
		pattern = escape_lua_magic_chars (pattern);								-- pattern is not a literal string; escape lua's magic pattern characters
		pages = pages:gsub(pattern, &quot;&quot;);										-- remove as many instances of pattern as possible
	end
	pages = pages:gsub(&quot;[%[%]]&quot;, &quot;&quot;);											-- remove the brackets
	pages = pages:gsub(&quot;&quot;, &quot;-&quot; );							-- replace endashes with hyphens
	pages = pages:gsub(&quot;&amp;%w+;&quot;, &quot;-&quot; );						-- and replace html entities (&amp;ndash; etc.) with hyphens; do we need to replace numerical entities like &amp;#32; and the like?
	return pages;
end


--[=[-------------------------&lt; C O I N S _ R E P L A C E _ M A T H _ S T R I P M A R K E R &gt;------------------

There are three options for math markup rendering that depend on the editor's math preference settings.  These
settings are at [[Special:Preferences#mw-prefsection-rendering]] and are
	PNG images
	TeX source
	MathML with SVG or PNG fallback

All three are heavy with html and css which doesn't belong in the metadata.

Without this function, the metadata saved in the raw wikitext contained the rendering determined by the settings
of the last editor to save the page.

This function gets the rendered form of an equation according to the editor's preference before the page is saved.  It
then searches the rendering for the text equivalent of the rendered equation and replaces the rendering with that so
that the page is saved without extraneous html/css markup and with a reasonably readable text form of the equation.

When a replacement is made, this function returns true and the value with replacement; otherwise false and the intital
value.  To replace multipe equations it is necesary to call this function from within a loop.

]=]

local function coins_replace_math_stripmarker (value)
	local stripmarker = cfg.stripmarkers['math'];
	local rendering = value:match (stripmarker);								-- is there a math stripmarker

	if not rendering then														-- when value doesn't have a math stripmarker, abandon this test
		return false, value;
	end
	
	rendering = mw.text.unstripNoWiki (rendering);								-- convert stripmarker into rendered value (or nil? ''? when math render error)
	
	if rendering:match ('alt=&quot;[^&quot;]+&quot;') then										-- if PNG math option
		rendering = rendering:match ('alt=&quot;([^&quot;]+)&quot;');							-- extract just the math text
	elseif rendering:match ('$%s+.+%s+%$') then									-- if TeX math option; $ is legit character that is escapes as \$
		rendering = rendering:match ('$%s+(.+)%s+%$')							-- extract just the math text
	elseif rendering:match ('&lt;annotation[^&gt;]+&gt;.+&lt;/annotation&gt;') then			-- if MathML math option
		rendering = rendering:match ('&lt;annotation[^&gt;]+&gt;(.+)&lt;/annotation&gt;')		-- extract just the math text
	else
		return false, value;													-- had math stripmarker but not one of the three defined forms
	end
	
	return true, value:gsub (stripmarker, rendering, 1);
end


--[[--------------------------&lt; C O I N S _ C L E A N U P &gt;----------------------------------------------------

Cleanup parameter values for the metadata by removing or replacing invisible characters and certain html entities.

2015-12-10: there is a bug in mw.text.unstripNoWiki ().  It replaces math stripmarkers with the appropriate content
when it shouldn't.  See https://phabricator.wikimedia.org/T121085 and Wikipedia_talk:Lua#stripmarkers_and_mw.text.unstripNoWiki.28.29

TODO: move the replacement patterns and replacement values into a table in /Configuration similar to the invisible
characters table?

]]

local function coins_cleanup (value)
	local replaced = true;														-- default state to get the do loop running

	while replaced do															-- loop until all math stripmarkers replaced
		replaced, value = coins_replace_math_stripmarker (value);				-- replace math stripmarker with text representation of the equation
	end

	value = value:gsub (cfg.stripmarkers['math'], &quot;MATH RENDER ERROR&quot;);						-- one or more couldn't be replaced; insert vague error message
	
	value = mw.text.unstripNoWiki (value);										-- replace nowiki stripmarkers with their content
	value = value:gsub ('&lt;span class=&quot;nowrap&quot; style=&quot;padding%-left:0%.1em;&quot;&gt;&amp;#39;(s?)&lt;/span&gt;', &quot;'%1&quot;);	-- replace {{'}} or {{'s}} with simple apostrophe or apostrophe-s
	value = value:gsub ('&amp;nbsp;', ' ');											-- replace &amp;nbsp; entity with plain space
	value = value:gsub ('\226\128\138', ' ');									-- replace hair space with plain space
	value = value:gsub ('&amp;zwj;', '');											-- remove &amp;zwj; entities
	value = mw.ustring.gsub (value, '[\226\128\141\226\128\139\194\173]', '');	-- remove zero-width joiner, zero-width space, soft hyphen
	value = value:gsub ('[\009\010\013]', ' ');									-- replace horizontal tab, line feed, carriage return with plain space
	return value;
end


--[[--------------------------&lt; C O I N S &gt;--------------------------------------------------------------------

COinS metadata (see &lt;http://ocoins.info/&gt;) allows automated tools to parse the citation information.

]]

local function COinS(data, class)
	if 'table' ~= type(data) or nil == next(data) then
		return '';
	end

	for k, v in pairs (data) do													-- spin through all of the metadata parameter values
		if 'ID_list' ~= k and 'Authors' ~= k then								-- except the ID_list and Author tables (author nowiki stripmarker done when Author table processed)
			data[k] = coins_cleanup (v);
		end
	end

	local ctx_ver = &quot;Z39.88-2004&quot;;
	
	-- treat table strictly as an array with only set values.
	local OCinSoutput = setmetatable( {}, {
		__newindex = function(self, key, value)
			if is_set(value) then
				rawset( self, #self+1, table.concat{ key, '=', mw.uri.encode( remove_wiki_link( value ) ) } );
			end
		end
	});
	
	if in_array (class, {'arxiv', 'biorxiv', 'citeseerx', 'journal', 'news'}) or (in_array (class, {'conference', 'interview', 'map', 'press release', 'web'}) and is_set(data.Periodical)) or 
		('citation' == class and is_set(data.Periodical) and not is_set (data.Encyclopedia)) then
			OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:journal&quot;;			-- journal metadata identifier
			if in_array (class, {'arxiv', 'biorxiv', 'citeseerx'}) then			-- set genre according to the type of citation template we are rendering
				OCinSoutput[&quot;rft.genre&quot;] = &quot;preprint&quot;;							-- cite arxiv, cite biorxiv, cite citeseerx
			elseif 'conference' == class then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;conference&quot;;						-- cite conference (when Periodical set)
			elseif 'web' == class then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;unknown&quot;;							-- cite web (when Periodical set)
			else
				OCinSoutput[&quot;rft.genre&quot;] = &quot;article&quot;;							-- journal and other 'periodical' articles
			end
			OCinSoutput[&quot;rft.jtitle&quot;] = data.Periodical;						-- journal only
			OCinSoutput[&quot;rft.atitle&quot;] = data.Title;								-- 'periodical' article titles

																				-- these used only for periodicals
			OCinSoutput[&quot;rft.ssn&quot;] = data.Season;								-- keywords: winter, spring, summer, fall
			OCinSoutput[&quot;rft.chron&quot;] = data.Chron;								-- free-form date components
			OCinSoutput[&quot;rft.volume&quot;] = data.Volume;							-- does not apply to books
			OCinSoutput[&quot;rft.issue&quot;] = data.Issue;
			OCinSoutput[&quot;rft.pages&quot;] = data.Pages;								-- also used in book metadata

	elseif 'thesis' ~= class then												-- all others except cite thesis are treated as 'book' metadata; genre distinguishes
		OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:book&quot;;					-- book metadata identifier
		if 'report' == class or 'techreport' == class then						-- cite report and cite techreport
			OCinSoutput[&quot;rft.genre&quot;] = &quot;report&quot;;
		elseif 'conference' == class then										-- cite conference when Periodical not set
			OCinSoutput[&quot;rft.genre&quot;] = &quot;conference&quot;;
			OCinSoutput[&quot;rft.atitle&quot;] = data.Chapter;							-- conference paper as chapter in proceedings (book)
		elseif in_array (class, {'book', 'citation', 'encyclopaedia', 'interview', 'map'}) then
			if is_set (data.Chapter) then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;bookitem&quot;;
				OCinSoutput[&quot;rft.atitle&quot;] = data.Chapter;						-- book chapter, encyclopedia article, interview in a book, or map title
			else
				if 'map' == class or 'interview' == class then
					OCinSoutput[&quot;rft.genre&quot;] = 'unknown';						-- standalone map or interview
				else
					OCinSoutput[&quot;rft.genre&quot;] = 'book';							-- book and encyclopedia
				end
			end
		else	--{'audio-visual', 'AV-media-notes', 'DVD-notes', 'episode', 'interview', 'mailinglist', 'map', 'newsgroup', 'podcast', 'press release', 'serial', 'sign', 'speech', 'web'}
			OCinSoutput[&quot;rft.genre&quot;] = &quot;unknown&quot;;
		end
		OCinSoutput[&quot;rft.btitle&quot;] = data.Title;									-- book only
		OCinSoutput[&quot;rft.place&quot;] = data.PublicationPlace;						-- book only
		OCinSoutput[&quot;rft.series&quot;] = data.Series;								-- book only
		OCinSoutput[&quot;rft.pages&quot;] = data.Pages;									-- book, journal
		OCinSoutput[&quot;rft.edition&quot;] = data.Edition;								-- book only
		OCinSoutput[&quot;rft.pub&quot;] = data.PublisherName;							-- book and dissertation
		
	else																		-- cite thesis
		OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:dissertation&quot;;			-- dissertation metadata identifier
		OCinSoutput[&quot;rft.title&quot;] = data.Title;									-- dissertation (also patent but that is not yet supported)
		OCinSoutput[&quot;rft.degree&quot;] = data.Degree;								-- dissertation only
		OCinSoutput['rft.inst'] = data.PublisherName;							-- book and dissertation
	end
																				-- and now common parameters (as much as possible)
	OCinSoutput[&quot;rft.date&quot;] = data.Date;										-- book, journal, dissertation
	
	for k, v in pairs( data.ID_list ) do										-- what to do about these? For now assume that they are common to all?
--		if k == 'ISBN' then v = clean_isbn( v ) end
		if k == 'ISBN' then v = v:gsub( &quot;[^-0-9X]&quot;, &quot;&quot; ); end
		local id = cfg.id_handlers[k].COinS;
		if string.sub( id or &quot;&quot;, 1, 4 ) == 'info' then							-- for ids that are in the info:registry
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ id, &quot;/&quot;, v };
		elseif string.sub (id or &quot;&quot;, 1, 3 ) == 'rft' then						-- for isbn, issn, eissn, etc that have defined COinS keywords
			OCinSoutput[ id ] = v;
		elseif id then															-- when cfg.id_handlers[k].COinS is not nil
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ cfg.id_handlers[k].prefix, v };	-- others; provide a url
		end
	end

--[[	
	for k, v in pairs( data.ID_list ) do										-- what to do about these? For now assume that they are common to all?
		local id, value = cfg.id_handlers[k].COinS;
		if k == 'ISBN' then value = clean_isbn( v ); else value = v; end
		if string.sub( id or &quot;&quot;, 1, 4 ) == 'info' then
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ id, &quot;/&quot;, v };
		else
			OCinSoutput[ id ] = value;
		end
	end
]]
	local last, first;
	for k, v in ipairs( data.Authors ) do
		last, first = coins_cleanup (v.last), coins_cleanup (v.first or '');	-- replace any nowiki strip markers, non-printing or invisible characers
		if k == 1 then															-- for the first author name only
			if is_set(last)  and is_set(first) then								-- set these COinS values if |first= and |last= specify the first author name
				OCinSoutput[&quot;rft.aulast&quot;] = last;								-- book, journal, dissertation
				OCinSoutput[&quot;rft.aufirst&quot;] = first;								-- book, journal, dissertation
			elseif is_set(last) then 
				OCinSoutput[&quot;rft.au&quot;] = last;									-- book, journal, dissertation -- otherwise use this form for the first name
			end
		else																	-- for all other authors
			if is_set(last) and is_set(first) then
				OCinSoutput[&quot;rft.au&quot;] = table.concat{ last, &quot;, &quot;, first };		-- book, journal, dissertation
			elseif is_set(last) then
				OCinSoutput[&quot;rft.au&quot;] = last;									-- book, journal, dissertation
			end
		end
	end

	OCinSoutput.rft_id = data.URL;
	OCinSoutput.rfr_id = table.concat{ &quot;info:sid/&quot;, mw.site.server:match( &quot;[^/]*$&quot; ), &quot;:&quot;, data.RawPage };
	OCinSoutput = setmetatable( OCinSoutput, nil );
	
	-- sort with version string always first, and combine.
	table.sort( OCinSoutput );
	table.insert( OCinSoutput, 1, &quot;ctx_ver=&quot; .. ctx_ver );  -- such as &quot;Z39.88-2004&quot;
	return table.concat(OCinSoutput, &quot;&amp;&quot;);
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table and imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	cfg = cfg_table_ptr;

	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;
	remove_wiki_link = utilities_page_ptr.remove_wiki_link;
end



return {
	make_coins_title = make_coins_title,
	get_coins_pages = get_coins_pages,
	COinS = COinS,
	set_selected_modules = set_selected_modules,
	}</text>
      <sha1>4995qhrt3cjizstwz85s4vt36gml0uj</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Configuration</title>
    <ns>828</ns>
    <id>39043527</id>
    <revision>
      <id>777956985</id>
      <parentid>777799228</parentid>
      <timestamp>2017-04-30T09:19:32Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>unsupport |ARXIV= and |BIBCODE=;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="43304">
local citation_config = {};

-- override &lt;code&gt;...&lt;/code&gt; styling to remove color, border, and padding.  &lt;code&gt; css is specified here:
-- https://git.wikimedia.org/blob/mediawiki%2Fcore.git/69cd73811f7aadd093050dbf20ed70ef0b42a713/skins%2Fcommon%2FcommonElements.css#L199
local code_style=&quot;color:inherit; border:inherit; padding:inherit;&quot;;

--[[--------------------------&lt; U N C A T E G O R I Z E D _ N A M E S P A C E S &gt;------------------------------

List of namespaces that should not be included in citation error categories.  Same as setting notracking = true by default

Note: Namespace names should use underscores instead of spaces.

]]
local uncategorized_namespaces = { 'User', 'Talk', 'User_talk', 'Wikipedia_talk', 'File_talk', 'Template_talk',
	'Help_talk', 'Category_talk', 'Portal_talk', 'Book_talk', 'Draft', 'Draft_talk', 'Education_Program_talk',
	'Module_talk', 'MediaWiki_talk' };

local uncategorized_subpages = {'/[Ss]andbox', '/[Tt]estcases'};		-- list of Lua patterns found in page names of pages we should not categorize

--[[--------------------------&lt; M E S S A G E S &gt;--------------------------------------------------------------

Translation table

The following contains fixed text that may be output as part of a citation.
This is separated from the main body to aid in future translations of this
module.

]]

local messages = {
	['archived-dead'] = 'Archived from $1 on $2',
	['archived-not-dead'] = '$1 from the original on $2',
	['archived-missing'] = 'Archived from the original$1 on $2',
	['archived'] = 'Archived',
	['by'] = 'By',																-- contributions to authored works: introduction, foreword, afterword
	['cartography'] = 'Cartography by $1',
	['editor'] = 'ed.',
	['editors'] = 'eds.',
	['edition'] = '($1 ed.)',
	['episode'] = 'Episode $1',
	['et al'] = 'et al.',
	['in'] = 'In',																-- edited works
	['inactive'] = 'inactive',
	['inset'] = '$1 inset',
	['interview'] = 'Interview with $1',										
	['lay summary'] = 'Lay summary',
	['newsgroup'] = '[[Usenet newsgroup|Newsgroup]]:&amp;nbsp;$1',
	['original'] = 'the original',
	['published'] = ' (published $1)',
	['retrieved'] = 'Retrieved $1',
	['season'] = 'Season $1',
	['section'] = ' $1',
	['sections'] = ' $1',
	['series'] = 'Series $1',
	['translated'] = 'Translated by $1',
	['type'] = ' ($1)',															-- for titletype
	['written'] = 'Written at $1',

	['vol'] = '$1 Vol.&amp;nbsp;$2',												-- $1 is sepc; bold journal style volume is in presentation{}
	['vol-no'] = '$1 Vol.&amp;nbsp;$2 no.&amp;nbsp;$3',									-- sepc, volume, issue
	['issue'] = '$1 No.&amp;nbsp;$2',												-- $1 is sepc

	['j-vol'] = '$1 $2',														-- sepc, volume; bold journal volume is in presentation{}
	['j-issue'] = ' ($1)',

	['nopp'] = '$1 $2';															-- page(s) without prefix; $1 is sepc

	['p-prefix'] = &quot;$1 p.&amp;nbsp;$2&quot;,												-- $1 is sepc
	['pp-prefix'] = &quot;$1 pp.&amp;nbsp;$2&quot;,											-- $1 is sepc
	['j-page(s)'] = ': $1',														-- same for page and pages

	['sheet'] = '$1 Sheet&amp;nbsp;$2',												-- $1 is sepc
	['sheets'] = '$1 Sheets&amp;nbsp;$2',											-- $1 is sepc
	['j-sheet'] = ': Sheet&amp;nbsp;$1',
	['j-sheets'] = ': Sheets&amp;nbsp;$1',
	
	['subscription'] = '&lt;span style=&quot;font-size:90%; color:#555&quot;&gt;(Subscription required (&lt;span title=&quot;The site requires a paid subscription to access this page.&quot; style=&quot;border-bottom:1px dotted;cursor:help&quot;&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
		'[[Category:Pages containing links to subscription-only content]]',
	
	['registration']='&lt;span style=&quot;font-size:90%; color:#555&quot;&gt;(Registration required (&lt;span title=&quot;The site requires registration to access this page.&quot; style=&quot;border-bottom:1px dotted;cursor:help&quot;&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
		'[[Category:Pages with login required references or sources]]',
	
	['language'] = '(in $1)',
	['via'] = &quot; &amp;ndash; via $1&quot;,
	['event'] = 'Event occurs at',
	['minutes'] = 'minutes in',
	
	['parameter-separator'] = ', ',
	['parameter-final-separator'] = ', and ',
	['parameter-pair-separator'] = ' and ',
	
	-- Determines the location of the help page
	['help page link'] = 'Help:CS1 errors',
	['help page label'] = 'help',
	
	-- Internal errors (should only occur if configuration is bad)
	['undefined_error'] = 'Called with an undefined error condition',
	['unknown_manual_ID'] = 'Unrecognized manual ID mode',
	['unknown_ID_mode'] = 'Unrecognized ID mode',
	['unknown_argument_map'] = 'Argument map not defined for this variable',
	['bare_url_no_origin'] = 'Bare url found but origin indicator is nil or empty',
}

--[[--------------------------&lt; P R E S E N T A T I O N &gt;------------------------------------------------------

Fixed presentation markup.  Originally part of citation_config.messages it has been moved into its own, more semantically
correct place.

]]
local presentation = 
	{
	-- Error output
	-- .error class is specified at https://git.wikimedia.org/blob/mediawiki%2Fcore.git/9553bd02a5595da05c184f7521721fb1b79b3935/skins%2Fcommon%2Fshared.css#L538
	-- .citation-comment class is specified at Help:CS1_errors#Controlling_error_message_display
	['hidden-error'] = '&lt;span style=&quot;display:none;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;$1&lt;/span&gt;',
	['visible-error'] = '&lt;span style=&quot;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;$1&lt;/span&gt;',

	['accessdate'] = '&lt;span class=&quot;reference-accessdate&quot;&gt;$1$2&lt;/span&gt;',			-- to allow editors to hide accessdate using personal css

	['bdi'] = '&lt;bdi$1&gt;$2&lt;/bdi&gt;',												-- bidirectional isolation used with |script-title= and the like

	['cite'] = '&lt;cite class=&quot;$1&quot;&gt;$2&lt;/cite&gt;';									-- |ref= not set so no id=&quot;...&quot; attribute
	['cite-id'] = '&lt;cite id=&quot;$1&quot; class=&quot;$2&quot;&gt;$3&lt;/cite&gt;';							-- for use when |ref= is set

	['format'] = ' &lt;span style=&quot;font-size:85%;&quot;&gt;($1)&lt;/span&gt;',					-- for |format=, |chapter-format=, etc
	
																				-- various access levels, for |access=, |doi-access=, |arxiv=, ...
																				-- narrow no-break space &amp;#8239; may work better than nowrap css. Or not? browser support?

	['access-signal'] = '&lt;span class=&quot;plainlinks&quot;&gt;$1&amp;#8239;$2&lt;/span&gt;',			-- external link with appropriate lock icon
		['free'] = '[[File:Lock-green.svg|9px|link=|alt=Freely accessible|Freely accessible]]',
		['registration'] = '[[File:Lock-blue-alt-2.svg|9px|link=|alt=Free registration required|Free registration required]]',
		['limited'] = '[[File:Lock-blue-alt-2.svg|9px|link=|alt=Free access subject to limited trial, subscription normally required|Free access subject to limited trial, subscription normally required]]',
		['subscription'] = '[[File:Lock-red-alt.svg|9px|link=|alt=Paid subscription required|Paid subscription required]]',

	['italic-title'] = &quot;''$1''&quot;,

	['kern-left'] = '&lt;span style=&quot;padding-left:0.2em;&quot;&gt;$1&lt;/span&gt;$2',			-- spacing to use when title contains leading single or double quote mark
	['kern-right'] = '$1&lt;span style=&quot;padding-right:0.2em;&quot;&gt;$2&lt;/span&gt;',			-- spacing to use when title contains trailing single or double quote mark

	['nowrap1'] = '&lt;span class=&quot;nowrap&quot;&gt;$1&lt;/span&gt;',								-- for nowrapping an item: &lt;span ...&gt;yyyy-mm-dd&lt;/span&gt;
	['nowrap2'] = '&lt;span class=&quot;nowrap&quot;&gt;$1&lt;/span&gt; $2',							-- for nowrapping portions of an item: &lt;span ...&gt;dd mmmm&lt;/span&gt; yyyy (note white space)

	['ocins'] = '&lt;span title=&quot;$1&quot; class=&quot;Z3988&quot;&gt;&lt;span style=&quot;display:none;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;',		-- Note: Using display: none on the COinS span breaks some clients

	['parameter'] = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',

	['quoted-text'] = '&lt;q&gt;$1&lt;/q&gt;',												-- for wrapping |quote= content
	['quoted-title'] = '&quot;$1&quot;',

	['trans-italic-title'] = &quot;&amp;#91;''$1''&amp;#93;&quot;,
	['trans-quoted-title'] = &quot;&amp;#91;$1&amp;#93;&quot;,
	['vol-bold'] = '$1 &lt;b&gt;$2&lt;/b&gt;',												-- sepc, volume; for bold journal cites; for other cites ['vol'] in messages{}
	}

	
--[[--------------------------&lt; A L I A S E S &gt;----------------------------------------------------------------

Aliases table for commonly passed parameters

]]

local aliases = {
	['AccessDate'] = {'access-date', 'accessdate'},
	['Agency'] = 'agency',
	['AirDate'] = {'air-date', 'airdate'},
	['ArchiveDate'] = {'archive-date', 'archivedate'},
	['ArchiveFormat'] = 'archive-format',
	['ArchiveURL'] = {'archive-url', 'archiveurl'},
	['ASINTLD'] = {'ASIN-TLD', 'asin-tld'},
	['At'] = 'at',
	['Authors'] = {'authors', 'people', 'host', 'credits'},
	['BookTitle'] = {'book-title', 'booktitle'},
	['Cartography'] = 'cartography',
	['Chapter'] = {'chapter', 'contribution', 'entry', 'article', 'section'},
	['ChapterFormat'] = {'chapter-format', 'contribution-format', 'section-format'};
	['ChapterURL'] = {'chapter-url', 'chapterurl', 'contribution-url', 'contributionurl', 'section-url', 'sectionurl'},
	['Class'] = 'class',														-- cite arxiv and arxiv identifiers
	['Collaboration'] = 'collaboration',
	['Conference'] = {'conference', 'event'},
	['ConferenceFormat'] = {'conference-format', 'event-format'},
	['ConferenceURL'] = {'conference-url', 'conferenceurl', 'event-url', 'eventurl'},
	['Contribution'] = 'contribution',											-- introduction, foreword, afterword, etc; required when |contributor= set
	['Date'] = 'date',
	['DeadURL'] = {'dead-url', 'deadurl'},
	['Degree'] = 'degree',
	['DF'] = 'df',
	['DisplayAuthors'] = {'display-authors', 'displayauthors'},
	['DisplayEditors'] = {'display-editors', 'displayeditors'},
	['Docket'] = 'docket',
	['DoiBroken'] = {'doi-broken', 'doi-broken-date', 'doi-inactive-date', 'doi_brokendate', 'doi_inactivedate'},
	['Edition'] = 'edition',
	['Editors'] = 'editors',
	['Embargo'] = 'embargo',
	['Encyclopedia'] = {'encyclopedia', 'encyclopaedia'},						-- this one only used by citation
	['Episode'] = 'episode',													-- cite serial only TODO: make available to cite episode?
	['Format'] = 'format',
	['ID'] = {'id', 'ID'},
	['IgnoreISBN'] = {'ignore-isbn-error', 'ignoreisbnerror'},
	['Inset'] = 'inset',
	['Issue'] = {'issue', 'number'},
	['Interviewers'] = 'interviewers',
	['Language'] = {'language', 'in'},
	['LastAuthorAmp'] = {'last-author-amp', 'lastauthoramp'},
	['LayDate'] = {'lay-date', 'laydate'},
	['LayFormat'] = 'lay-format',
	['LaySource'] = {'lay-source', 'laysource'},
	['LayURL'] = {'lay-url', 'lay-summary', 'layurl', 'laysummary'},
	['MailingList'] = {'mailinglist', 'mailing-list'},							-- cite mailing list only
	['Map'] = 'map',															-- cite map only
	['MapFormat'] = 'map-format',												-- cite map only
	['MapURL'] = {'mapurl', 'map-url'},											-- cite map only
	['MessageID'] = 'message-id',
	['Minutes'] = 'minutes',
	['Mode'] = 'mode',
	['NameListFormat'] = 'name-list-format',
	['Network'] = 'network',
	['NoPP'] = {'no-pp', 'nopp'},
	['NoTracking'] = {'template-doc-demo', 'template doc demo', 'no-cat', 'nocat',
		'no-tracking', 'notracking'},
	['Number'] = 'number',														-- this case only for cite techreport
	['OrigYear'] = {'orig-year', 'origyear'},
	['Others'] = 'others',
	['Page'] = {'p', 'page'},
	['Pages'] = {'pp', 'pages'},
	['Periodical'] = {'journal', 'newspaper', 'magazine', 'work',
		'website',  'periodical', 'encyclopedia', 'encyclopaedia', 'dictionary', 'mailinglist'},
	['Place'] = {'place', 'location'},
	['PostScript'] = 'postscript',
	['PublicationDate'] = {'publicationdate', 'publication-date'},
	['PublicationPlace'] = {'publication-place', 'publicationplace'},
	['PublisherName'] = {'publisher', 'distributor', 'institution', 'newsgroup'},
	['Quote'] = {'quote', 'quotation'},
	['Ref'] = 'ref',
	['RegistrationRequired'] = 'registration',
	['Scale'] = 'scale',
	['ScriptChapter'] = 'script-chapter',
	['ScriptTitle'] = 'script-title',
	['Section'] = 'section',
	['Season'] = 'season',
	['Sections'] = 'sections',													-- cite map only
	['Series'] = {'series', 'version'},
	['SeriesSeparator'] = 'series-separator',
	['SeriesLink'] = {'series-link', 'serieslink'},
	['SeriesNumber'] = {'series-number', 'series-no', 'seriesnumber', 'seriesno'},
	['Sheet'] = 'sheet',														-- cite map only
	['Sheets'] = 'sheets',														-- cite map only
	['Station'] = 'station',
	['SubscriptionRequired'] = 'subscription',
	['Time'] = 'time',
	['TimeCaption'] = {'time-caption', 'timecaption'},
	['Title'] = 'title',
	['TitleLink'] = {'title-link', 'episode-link', 'titlelink', 'episodelink'},
	['TitleNote'] = 'department',
	['TitleType'] = {'type', 'medium'},
	['TransChapter'] = {'trans-chapter', 'trans_chapter'},
	['TransMap'] = 'trans-map',													-- cite map only
	['Transcript'] = 'transcript',
	['TranscriptFormat'] = 'transcript-format',
	['TranscriptURL'] = {'transcript-url', 'transcripturl'},
	['TransTitle'] = {'trans-title', 'trans_title'},
	['URL'] = {'url', 'URL'},
	['UrlAccess'] = {'url-access'},
	['Vauthors'] = 'vauthors',
	['Veditors'] = 'veditors',
	['Via'] = 'via',
	['Volume'] = 'volume',
	['Year'] = 'year',

	['AuthorList-First'] = {&quot;first#&quot;, &quot;given#&quot;, &quot;author-first#&quot;, &quot;author#-first&quot;},
	['AuthorList-Last'] = {&quot;last#&quot;, &quot;author#&quot;, &quot;surname#&quot;, &quot;author-last#&quot;, &quot;author#-last&quot;, &quot;subject#&quot;},
	['AuthorList-Link'] = {&quot;authorlink#&quot;, &quot;author-link#&quot;, &quot;author#-link&quot;, &quot;subjectlink#&quot;, &quot;author#link&quot;, &quot;subject-link#&quot;, &quot;subject#-link&quot;, &quot;subject#link&quot;},
	['AuthorList-Mask'] = {&quot;author-mask#&quot;, &quot;authormask#&quot;, &quot;author#mask&quot;, &quot;author#-mask&quot;},
	
	['ContributorList-First'] = {'contributor-first#', 'contributor#-first', 'contributor-given#', 'contributor#-given'},
	['ContributorList-Last'] = {'contributor#', 'contributor-last#', 'contributor#-last', 'contributor-surname#', 'contributor#-surname'},
	['ContributorList-Link'] = {'contributor-link#', 'contributor#-link'},
	['ContributorList-Mask'] = {'contributor-mask#', 'contributor#-mask'},

	['EditorList-First'] = {&quot;editor-first#&quot;, &quot;editor#-first&quot;, &quot;editor-given#&quot;, &quot;editor#-given&quot;},
	['EditorList-Last'] = {&quot;editor#&quot;, &quot;editor-last#&quot;, &quot;editor#-last&quot;, &quot;editor-surname#&quot;, &quot;editor#-surname&quot;},
	['EditorList-Link'] = {&quot;editor-link#&quot;, &quot;editor#-link&quot;, &quot;editorlink#&quot;, &quot;editor#link&quot;},
	['EditorList-Mask'] = {&quot;editor-mask#&quot;, &quot;editor#-mask&quot;, &quot;editormask#&quot;, &quot;editor#mask&quot;},
	
	['InterviewerList-First'] = {'interviewer-first#', 'interviewer#-first'},
	['InterviewerList-Last'] = {'interviewer#', 'interviewer-last#', 'interviewer#-last'},
	['InterviewerList-Link'] = {'interviewer-link#', 'interviewer#-link'},
	['InterviewerList-Mask'] = {'interviewer-mask#', 'interviewer#-mask'},

	['TranslatorList-First'] = {'translator-first#', 'translator#-first', 'translator-given#', 'translator#-given'},
	['TranslatorList-Last'] = {'translator#', 'translator-last#', 'translator#-last', 'translator-surname#', 'translator#-surname'},
	['TranslatorList-Link'] = {'translator-link#', 'translator#-link'},
	['TranslatorList-Mask'] = {'translator-mask#', 'translator#-mask'},
}

--[[--------------------------&lt; S P E C I A L   C A S E   T R A N S L A T I O N S &gt;----------------------------

This table is primarily here to support internationalization.  Translations in this table are used, for example,
when an error message, category name, etc is extracted from the English alias key.  There may be other cases where
this translation table may be useful.

]]

local special_case_translation = {
	['AuthorList'] = &quot;authors list&quot;,											-- these for multiple names maint categories
	['ContributorList'] = &quot;contributors list&quot;,
	['EditorList'] = &quot;editors list&quot;,
	['InterviewerList'] = &quot;interviewers list&quot;,
	['TranslatorList'] = &quot;translators list&quot;,
	
	['authors'] = &quot;authors&quot;,													-- used in get_display_authors_editors()
	['editors'] = &quot;editors&quot;,
	}

--[[--------------------------&lt; D E F A U L T S &gt;--------------------------------------------------------------

Default parameter values

TODO: keep this?  Only one default?
]]

local defaults = {
	['DeadURL'] = 'yes',
}


--[[--------------------------&lt; V O L U M E ,  I S S U E ,  P A G E S &gt;----------------------------------------

These tables hold cite class values (from the template invocation) and identify those templates that support
|volume=, |issue=, and |page(s)= parameters.  Cite conference and cite map require further qualification which
is handled in the main module.

]]

local templates_using_volume = {'citation', 'audio-visual', 'book', 'conference', 'encyclopaedia', 'interview', 'journal', 'magazine', 'map', 'news', 'report', 'techreport', 'thesis'}
local templates_using_issue = {'citation', 'conference', 'episode', 'interview', 'journal', 'magazine', 'map', 'news'}
local templates_not_using_page = {'audio-visual', 'episode', 'mailinglist', 'newsgroup', 'podcast', 'serial', 'sign', 'speech'}



--[[--------------------------&lt; K E Y W O R D S &gt;--------------------------------------------------------------

This table holds keywords for those parameters that have defined sets of acceptible keywords.

]]

local keywords = {
	['yes_true_y'] = {'yes', 'true', 'y'},										-- ignore-isbn-error, last-author-amp, no-tracking, nopp, registration, subscription
--	['deadurl'] = {'yes', 'true', 'y', 'no', 'unfit', 'usurped', 'unfit no archive', 'usurped no archive'},		-- hidden 2016-04-10; see Help_talk:Citation_Style_1#Recycled_urls
	['deadurl'] = {'yes', 'true', 'y', 'no', 'unfit', 'usurped', 'bot: unknown'},
	['mode'] = {'cs1', 'cs2', 'mla'},
	['name-list-format'] = {'vanc'},
	['contribution'] = {'afterword', 'foreword', 'introduction', 'preface'},	-- generic contribution titles that are rendered unquoted in the 'chapter' position
	['date-format'] = {'dmy', 'dmy-all', 'mdy', 'mdy-all', 'ymd', 'ymd-all'},
	['url-access'] = {'subscription', 'limited', 'registration'}, 	   -- access level of a URL (subscription required, limited access, free registration required), free to read by default
    ['id-access'] = {'free'},                                          -- access level of an identifier (free to read), subscription required (or no full text) by default
}


--[[--------------------------&lt; S T R I P M A R K E R S &gt;------------------------------------------------------

Common pattern definition location for stripmarkers so that we don't have to go hunting for them if (when)
MediaWiki changes their form.

]]

local stripmarkers = {
	['any'] = '\127[^\127]*UNIQ%-%-(%a+)%-[%a%d]+%-QINU[^\127]*\127',			-- capture returns name of stripmarker
	['math'] = '\127[^\127]*UNIQ%-%-math%-[%a%d]+%-QINU[^\127]*\127'			-- math stripmarkers used in coins_cleanup() and coins_replace_math_stripmarker()
	}


--[[--------------------------&lt; I N V I S I B L E _ C H A R A C T E R S &gt;--------------------------------------

This table holds non-printing or invisible characters indexed either by name or by Unicode group. Values are decimal
representations of UTF-8 codes.  The table is organized as a table of tables because the lua pairs keyword returns
table data in an arbitrary order.  Here, we want to process the table from top to bottom because the entries at
the top of the table are also found in the ranges specified by the entries at the bottom of the table.

This list contains patterns for templates like {{'}} which isn't an error but transcludes characters that are
invisible.  These kinds of patterns must be recognized by the functions that use this list.

Also here is a pattern that recognizes stripmarkers that begin and end with the delete characters.  The nowiki
stripmarker is not an error but some others are because the parameter values that include them become part of the
template's metadata before stripmarker replacement.

]]

local invisible_chars = {
	{'replacement', '\239\191\189'},											-- U+FFFD, EF BF BD
	{'zero width joiner', '\226\128\141'},										-- U+200D, E2 80 8D
	{'zero width space', '\226\128\139'},										-- U+200B, E2 80 8B
	{'hair space', '\226\128\138'},												-- U+200A, E2 80 8A
	{'soft hyphen', '\194\173'},												-- U+00AD, C2 AD
	{'horizontal tab', '\009'},													-- U+0009 (HT), 09
	{'line feed', '\010'},														-- U+000A (LF), 0A
	{'carriage return', '\013'},												-- U+000D (CR), 0D
	{'stripmarker', stripmarkers.any},											-- stripmarker; may or may not be an error; capture returns the stripmaker type
	{'delete', '\127'},															-- U+007F (DEL), 7F; must be done after stripmarker test
	{'C0 control', '[\000-\008\011\012\014-\031]'},								-- U+0000U+001F (NULLUS), 001F (except HT, LF, CR (09, 0A, 0D))
	{'C1 control', '[\194\128-\194\159]'},										-- U+0080U+009F (XXXAPC), C2 80  C2 9F
--	{'Specials', '[\239\191\185-\239\191\191]'},								-- U+FFF9-U+FFFF, EF BF B9  EF BF BF
--	{'Private use area', '[\238\128\128-\239\163\191]'},						-- U+E000U+F8FF, EE 80 80  EF A3 BF
--	{'Supplementary Private Use Area-A', '[\243\176\128\128-\243\191\191\189]'},	-- U+F0000U+FFFFD, F3 B0 80 80  F3 BF BF BD
--	{'Supplementary Private Use Area-B', '[\244\128\128\128-\244\143\191\189]'},	-- U+100000U+10FFFD, F4 80 80 80  F4 8F BF BD
}


--[[--------------------------&lt; L A N G U A G E S &gt;------------------------------------------------------------

This table is used to hold ISO 639-1 two-character language codes that apply only to |script-title= and |script-chapter=

]]

local script_lang_codes = {'am', 'ar', 'be', 'bg', 'bn', 'bs', 'dv', 'el',		-- ISO 639-1 codes only for |script-title= and |script-chapter=
	'fa', 'he', 'hy', 'ja', 'ka', 'kn', 'ko', 'ku',
	'mk', 'ml', 'mr', 'my', 'ps', 'ru', 'sd', 'sr',
	'th', 'uk', 'ug', 'ur', 'yi', 'zh'};


--[[--------------------------&lt; M A I N T E N A N C E _ C A T E G O R I E S &gt;----------------------------------

Here we name maintenance categories to be used in maintenance messages.

]]

local maint_cats = {
	['ASIN'] = 'CS1 maint: ASIN uses ISBN',
	['authors'] = 'CS1 maint: Uses authors parameter',
	['bot:_unknown'] = 'CS1 maint: BOT: original-url status unknown',
	['date_format'] = 'CS1 maint: Date format',
	['date_year'] = 'CS1 maint: Date and year',
	['disp_auth_ed'] = 'CS1 maint: display-$1',									-- $1 is authors or editors; gets value from special_case_translation table
	['editors'] = 'CS1 maint: Uses editors parameter',
	['embargo'] = 'CS1 maint: PMC embargo expired',
	['english'] = 'CS1 maint: English language specified',
	['etal'] = 'CS1 maint: Explicit use of et al.',
	['extra_text'] = 'CS1 maint: Extra text',
	['extra_text_names'] = 'CS1 maint: Extra text: $1',							-- $1 is &lt;name&gt;s list; gets value from special_case_translation table
	['ignore_isbn_err'] = 'CS1 maint: Ignored ISBN errors',
	['interviewers'] = 'CS1 maint: Uses interviewers parameter',
	['missing_pipe'] = 'CS1 maint: Missing pipe',
	['mult_names'] = 'CS1 maint: Multiple names: $1',							-- $1 is &lt;name&gt;s list; gets value from special_case_translation table
	['pmc_format'] = 'CS1 maint: PMC format',
	['unfit'] = 'CS1 maint: Unfit url',
	['unknown_lang'] = 'CS1 maint: Unrecognized language',
	['untitled'] = 'CS1 maint: Untitled periodical',
	}

--[[--------------------------&lt; P R O P E R T I E S _ C A T E G O R I E S &gt;------------------------------------

Here we name properties categories

]]

local prop_cats = {
	['foreign_lang_source'] = 'CS1 $1-language sources ($2)',					-- |language= categories; $1 is language name, $2 is ISO639-1 code
	['foreign_lang_source_2'] = 'CS1 foreign language sources (ISO 639-2)|$1',	-- |language= category; a cat for ISO639-2 languages; $1 is the ISO 639-2 code
	['script'] = 'CS1 uses foreign language script',							-- when language specified by |script-title=xx: doesn't have its own category
	['script_with_name'] = 'CS1 uses $1-language script ($2)',					-- |script-title=xx: has matching category; $1 is language name, $2 is ISO639-1 code
	}



--[[--------------------------&lt; T I T L E _ T Y P E S &gt;--------------------------------------------------------

Here we map a template's CitationClass to TitleType (default values for |type= parameter)

]]

local title_types = {
	['AV-media-notes'] = 'Media notes',
	['interview'] = 'Interview',
	['mailinglist'] = 'Mailing list',
	['map'] = 'Map',
	['podcast'] = 'Podcast',
	['pressrelease'] = 'Press release',
	['report'] = 'Report',
	['techreport'] = 'Technical report',
	['thesis'] = 'Thesis',
	}

--[[--------------------------&lt; E R R O R _ C O N D I T I O N S &gt;----------------------------------------------

Error condition table

The following contains a list of IDs for various error conditions defined in the code.  For each ID, we specify a
text message to display, an error category to include, and whether the error message should be wrapped as a hidden comment.

Anchor changes require identical changes to matching anchor in Help:CS1 errors

]]

local error_conditions = {
	accessdate_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;access-date=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'accessdate_missing_url',
		category = 'Pages using citations with accessdate and no URL',
		hidden = true },
	archive_missing_date = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-date=&lt;/code&gt;',
		anchor = 'archive_missing_date',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'archive_missing_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; is malformed: $1',
		anchor = 'archive_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	arxiv_missing = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;arxiv=&lt;/code&gt; required',
		anchor = 'arxiv_missing',
		category = 'CS1 errors: arXiv',											-- same as bad arxiv
		hidden = false },
	arxiv_params_not_supported = {
		message = 'Unsupported parameter(s) in cite arXiv',
		anchor = 'arxiv_params_not_supported',
		category = 'CS1 errors: arXiv',											-- same as bad arxiv
		hidden = false },
	bad_arxiv = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;arxiv=&lt;/code&gt; value',
		anchor = 'bad_arxiv',
		category = 'CS1 errors: arXiv',
		hidden = false },
	bad_asin = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;asin=&lt;/code&gt; value',
		anchor = 'bad_asin',
		category ='CS1 errors: ASIN',
		hidden = false },
	bad_bibcode = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;bibcode=&lt;/code&gt; $1',
		anchor = 'bad_bibcode',
		category = 'CS1 errors: bibcode',
		hidden = false },
	bad_biorxiv = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;biorxiv=&lt;/code&gt; value',
		anchor = 'bad_biorxiv',
		category = 'CS1 errors: bioRxiv',
		hidden = false },
	bad_citeseerx = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;citeseerx=&lt;/code&gt; value',
		anchor = 'bad_citeseerx',
		category = 'CS1 errors: citeseerx',
		hidden = false },
	bad_date = {
		message = 'Check date values in: &lt;code style=&quot;'..code_style..'&quot;&gt;$1&lt;/code&gt;',
		anchor = 'bad_date',
		category = 'CS1 errors: dates',
		hidden = false },
	bad_doi = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;doi=&lt;/code&gt; value',
		anchor = 'bad_doi',
		category = 'CS1 errors: DOI',
		hidden = false },
	bad_hdl = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;hdl=&lt;/code&gt; value',
		anchor = 'bad_hdl',
		category = 'CS1 errors: HDL',
		hidden = false },
	bad_isbn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;isbn=&lt;/code&gt; value: $1',
		anchor = 'bad_isbn',
		category = 'CS1 errors: ISBN',
		hidden = false },
	bad_ismn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ismn=&lt;/code&gt; value',
		anchor = 'bad_ismn',
		category = 'CS1 errors: ISMN',
		hidden = false },
	bad_issn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1issn=&lt;/code&gt; value',
		anchor = 'bad_issn',
		category = 'CS1 errors: ISSN',
		hidden = false },
	bad_lccn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;lccn=&lt;/code&gt; value',
		anchor = 'bad_lccn',
		category = 'CS1 errors: LCCN',
		hidden = false },
	bad_message_id = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;message-id=&lt;/code&gt; value',
		anchor = 'bad_message_id',
		category = 'CS1 errors: message-id',
		hidden = false },
	bad_ol = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ol=&lt;/code&gt; value',
		anchor = 'bad_ol',
		category = 'CS1 errors: OL',
		hidden = false },
	bad_paramlink = {															-- for |title-link=, |author/editor/translator-link=, |series-link=, |episode-link=
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; value',
		anchor = 'bad_paramlink',
		category = 'CS1 errors: parameter link',
		hidden = false },
	bad_pmc = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;pmc=&lt;/code&gt; value',
		anchor = 'bad_pmc',
		category = 'CS1 errors: PMC',
		hidden = false },
	bad_pmid = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;pmid=&lt;/code&gt; value',
		anchor = 'bad_pmid',
		category = 'CS1 errors: PMID',
		hidden = false },
	bad_oclc = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;oclc=&lt;/code&gt; value',
		anchor = 'bad_oclc',
		category = 'CS1 errors: OCLC',
		hidden = false },
	bad_ssrn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ssrn=&lt;/code&gt; value',
		anchor = 'bad_ssrn',
		category = 'CS1 errors: SSRN',
		hidden = false },
	bad_url = {
		message = 'Check $1 value',
		anchor = 'bad_url',
		category = 'Pages with URL errors',
		hidden = false },
	bare_url_missing_title = {
		message = '$1 missing title',
		anchor = 'bare_url_missing_title',
		category = 'Pages with citations having bare URLs',
		hidden = false },
	chapter_ignored = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'chapter_ignored',
		category = 'CS1 errors: chapter ignored',
		hidden = false },
	citation_missing_title = {
		message = 'Missing or empty &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'citation_missing_title',
		category = 'Pages with citations lacking titles',
		hidden = false },
	cite_web_url = {															-- this error applies to cite web and to cite podcast
		message = 'Missing or empty &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'cite_web_url',
		category = 'Pages using web citations with no URL',
		hidden = true },
	contributor_ignored = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;contributor=&lt;/code&gt; ignored&lt;/code&gt;',
		anchor = 'contributor_ignored',
		category = 'CS1 errors: contributor',
		hidden = false },
	contributor_missing_required_param = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;contributor=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'contributor_missing_required_param',
		category = 'CS1 errors: contributor',
		hidden = false },
	deprecated_params = {
		message = 'Cite uses deprecated parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'deprecated_params',
		category = 'CS1 errors: deprecated parameters',
		hidden = false },
	empty_citation = {
		message = 'Empty citation',
		anchor = 'empty_citation',
		category = 'Pages with empty citations',
		hidden = false },
	first_missing_last = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;first$2=&lt;/code&gt; missing &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;last$2=&lt;/code&gt; in $1',
		anchor = 'first_missing_last',
		category = 'CS1 errors: missing author or editor',
		hidden = false },
	format_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$2=&lt;/code&gt;',
		anchor = 'format_missing_url',
		category = 'Pages using citations with format and no URL',
		hidden = true },
	invalid_param_val = {
		message = 'Invalid &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=$2&lt;/code&gt;',
		anchor = 'invalid_param_val',
		category = 'CS1 errors: invalid parameter value',
		hidden = false },
	invisible_char = {
		message = '$1 in $2 at position $3',
		anchor = 'invisible_char',
		category = 'CS1 errors: invisible characters',
		hidden = false },
	missing_name = {
		message = 'Missing &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;last$2=&lt;/code&gt; in $1',
		anchor = 'missing_name',
		category = 'CS1 errors: missing author or editor',
		hidden = false },
	param_access_requires_param = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1-access=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'param_access_requires_param',
		category = 'CS1 errors: param-access',
		hidden = false },
	param_has_ext_link = {
		message = 'External link in &lt;code style=&quot;'..code_style..'&quot;&gt;$1&lt;/code&gt;',
		anchor = 'param_has_ext_link',
		category = 'CS1 errors: external links',
		hidden = false },
	parameter_ignored = {
		message = 'Unknown parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'parameter_ignored',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	parameter_ignored_suggest = {
		message = 'Unknown parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored (&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$2=&lt;/code&gt; suggested)',
		anchor = 'parameter_ignored_suggest',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	redundant_parameters = {
		message = 'More than one of $1 specified',
		anchor = 'redundant_parameters',
		category = 'Pages with citations having redundant parameters',
		hidden = false },
	text_ignored = {
		message = 'Text &quot;$1&quot; ignored',
		anchor = 'text_ignored',
		category = 'Pages with citations using unnamed parameters',
		hidden = false },
	trans_missing_title = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;trans-$1=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'trans_missing_title',
		category = 'CS1 errors: translated title',
		hidden = false },
	vancouver = {
		message = 'Vancouver style error: $1',
		anchor = 'vancouver',
		category = 'CS1 errors: Vancouver style',
		hidden = false },
	wikilink_in_url = {
		message = 'URLwikilink conflict',										-- uses ndash
		anchor = 'wikilink_in_url',
		category = 'CS1 errors: URLwikilink conflict',							-- uses ndash
		hidden = false },
}

--[[--------------------------&lt; I D _ H A N D L E R S &gt;--------------------------------------------------------

The following contains a list of values for various defined identifiers.  For each identifier we specify a
variety of information necessary to properly render the identifier in the citation.

	parameters: a list of parameter aliases for this identifier
	link: Wikipedia article name
	label: the alternate name to apply to link
	mode: 	'manual' when there is a specific function in the code to handle the identifier;
			'external' for identifiers that link outside of Wikipedia;
	prefix: the first part of a url that will be concatenated with a second part which usually contains the identifier
	encode: true if uri should be percent encoded; otherwise false
	COinS: identifier link or keyword for use in COinS:
		for identifiers registered at info-uri.info use: info:....
		for identifiers that have COinS keywords, use the keyword: rft.isbn, rft.issn, rft.eissn
		for others make a url using the value in prefix, use the keyword: pre (not checked; any text other than 'info' or 'rft' works here)
		set to nil to leave the identifier out of the COinS
	separator: character or text between label and the identifier in the rendered citation
	access: use this parameter to set the access level for all instances of this identifier.
			the value must be a valid access level for an identifier (see ['id-access'] in this file).
	custom_access: to enable custom access level for an identifier, set this parameter
			to the parameter that should control it (normally 'id-access')
]]

local id_handlers = {
	['ARXIV'] = {
		parameters = {'arxiv', 'eprint'},
		link = 'arXiv',
		label = 'arXiv',
		mode = 'manual',
		prefix = '//arxiv.org/abs/', 											-- protocol relative tested 2013-09-04
		encode = false,
		COinS = 'info:arxiv',
		separator = ':',
		access = 'free',														-- free to read
	},
	['ASIN'] = {
		parameters = { 'asin', 'ASIN' },
		link = 'Amazon Standard Identification Number',
		label = 'ASIN',
		mode = 'manual',
		prefix = '//www.amazon.',
		COinS = nil,															-- no COinS for this id (needs thinking on implementation because |asin-tld=)
		separator = '&amp;nbsp;',
		encode = false;
	},
	['BIBCODE'] = {
		parameters = {'bibcode'},
		link = 'Bibcode',
		label = 'Bibcode',
--		mode = 'external',
		mode = 'manual',
		prefix = 'http://adsabs.harvard.edu/abs/',
		encode = false,
		COinS = 'info:bibcode',
		separator = ':',
		custom_access = 'bibcode-access',
	},
	['BIORXIV'] = {
		parameters = {'biorxiv'},
		link = 'bioRxiv',
		label = 'bioRxiv',
		mode = 'manual',
		prefix = '//doi.org/10.1101/',
		COinS = 'pre',															-- use prefix value
		access = 'free',														-- free to read
		encode = true,
		separator = '&amp;nbsp;',
	},
	['CITESEERX'] = {
		parameters = {'citeseerx'},
		link = 'CiteSeerX',
		label = 'CiteSeerX',
		mode = 'manual',														-- manual for custom validation of the &quot;doi&quot;
		prefix = '//citeseerx.ist.psu.edu/viewdoc/summary?doi=',
		COinS =  'pre',															-- use prefix value
		access = 'free',														-- free to read
		encode = true,
		separator = '&amp;nbsp;',
	},
	['DOI'] = {
		parameters = { 'doi', 'DOI' },
		link = 'Digital object identifier',
		label = 'doi',
		mode = 'manual',
		prefix = '//doi.org/',
		COinS = 'info:doi',
		separator = ':',
		encode = true,
		custom_access = 'doi-access',
	},
	['EISSN'] = {
		parameters = {'eissn', 'EISSN'},
		link = 'International_Standard_Serial_Number#Electronic_ISSN',
		label = 'eISSN',
		mode = 'manual',
		prefix = '//www.worldcat.org/issn/',
		COinS = 'rft.eissn',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['HDL'] = {
		parameters = { 'hdl', 'HDL' },
		link = 'Handle System',
		label = 'hdl',
		mode = 'manual',
		prefix = '//hdl.handle.net/',
		COinS = 'info:hdl',
		separator = ':',
		encode = true,
		custom_access = 'hdl-access',
	},
	['ISBN'] = {
		parameters = {'isbn', 'ISBN', 'isbn13', 'ISBN13'},
		link = 'International Standard Book Number',
		label = 'ISBN',
		mode = 'manual',
		prefix = 'Special:BookSources/',
		COinS = 'rft.isbn',
		separator = '&amp;nbsp;',
	},
	['ISMN'] = {
		parameters = {'ismn', 'ISMN'},
		link = 'International Standard Music Number',
		label = 'ISMN',
		mode = 'manual',
		prefix = '',															-- not currently used;
		COinS = 'nil',															-- nil because we can't use pre or rft or info:
		separator = '&amp;nbsp;',
	},
	['ISSN'] = {
		parameters = {'issn', 'ISSN'},
		link = 'International Standard Serial Number',
		label = 'ISSN',
		mode = 'manual',
		prefix = '//www.worldcat.org/issn/',
		COinS = 'rft.issn',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['JFM'] = {
		parameters = {'jfm', 'JFM'},
		link = 'Jahrbuch ber die Fortschritte der Mathematik',
		label = 'JFM',
		mode = 'external',
		prefix = '//zbmath.org/?format=complete&amp;q=an:',
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	['JSTOR'] = {
		parameters = {'jstor', 'JSTOR'},
		link = 'JSTOR',
		label = 'JSTOR',
		mode = 'external',
		prefix = '//www.jstor.org/stable/', 									-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
		custom_access = 'jstor-access',
	},
	['LCCN'] = {
		parameters = {'LCCN', 'lccn'},
		link = 'Library of Congress Control Number',
		label = 'LCCN',
		mode = 'manual',
		prefix = '//lccn.loc.gov/', 											-- protocol relative tested 2015-12-28
		COinS = 'info:lccn',													-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
	},
	['MR'] = {
		parameters = {'MR', 'mr'},
		link = 'Mathematical Reviews',
		label = 'MR',
		mode = 'external',
		prefix = '//www.ams.org/mathscinet-getitem?mr=', 						-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	['OCLC'] = {
		parameters = {'OCLC', 'oclc'},
		link = 'OCLC',
		label = 'OCLC',
		mode = 'manual',
		prefix = '//www.worldcat.org/oclc/',
		COinS = 'info:oclcnum',
		encode = true,
		separator = '&amp;nbsp;',
	},
	['OL'] = {
		parameters = { 'ol', 'OL' },
		link = 'Open Library',
		label = 'OL',
		mode = 'manual',
		prefix = '//openlibrary.org/',
		COinS = nil,															-- no COinS for this id (needs thinking on implementation because /authors/books/works/OL)
		separator = '&amp;nbsp;',
		encode = true,
		custom_access = 'ol-access',
	},
	['OSTI'] = {
		parameters = {'OSTI', 'osti'},
		link = 'Office of Scientific and Technical Information',
		label = 'OSTI',
		mode = 'external',
		prefix = '//www.osti.gov/energycitations/product.biblio.jsp?osti_id=',	-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		custom_access = 'osti-access',
	},
	['PMC'] = {
		parameters = {'PMC', 'pmc'},
		link = 'PubMed Central',
		label = 'PMC',
		mode = 'manual',
		prefix = '//www.ncbi.nlm.nih.gov/pmc/articles/PMC',
		suffix = &quot; &quot;,
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		access = 'free',														-- free to read
	},
	['PMID'] = {
		parameters = {'PMID', 'pmid'},
		link = 'PubMed Identifier',
		label = 'PMID',
		mode = 'manual',
		prefix = '//www.ncbi.nlm.nih.gov/pubmed/',
		COinS = 'info:pmid',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['RFC'] = {
		parameters = {'RFC', 'rfc'},
		link = 'Request for Comments',
		label = 'RFC',
		mode = 'external',
		prefix = '//tools.ietf.org/html/rfc',
		COinS = 'pre',															-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
		access = 'free',														-- free to read
	},
	['SSRN'] = {
		parameters = {'SSRN', 'ssrn'},
		link = 'Social Science Research Network',
		label = 'SSRN',
		mode = 'manual',
		prefix = '//ssrn.com/abstract=', 										-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		access = 'free',														-- always free to read
	},
	['USENETID'] = {
		parameters = {'message-id'},
		link = 'Usenet',
		label = 'Usenet:',
		mode = 'manual',
		prefix = 'news:',
		encode = false,
		COinS = 'pre',															-- use prefix value
		separator = '&amp;nbsp;',
	},
	['ZBL'] = {
		parameters = {'ZBL', 'zbl'},
		link = 'Zentralblatt MATH',
		label = 'Zbl',
		mode = 'external',
		prefix = '//zbmath.org/?format=complete&amp;q=an:',
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
}

return 	{
	aliases = aliases,
	special_case_translation = special_case_translation,
	defaults = defaults,
	error_conditions = error_conditions,
	id_handlers = id_handlers,
	keywords = keywords,
	stripmarkers=stripmarkers,
	invisible_chars = invisible_chars,
	maint_cats = maint_cats,
	messages = messages,
	presentation = presentation,
	prop_cats = prop_cats,
	script_lang_codes = script_lang_codes,
	title_types = title_types,
	uncategorized_namespaces = uncategorized_namespaces,
	uncategorized_subpages = uncategorized_subpages,
	templates_using_volume = templates_using_volume,
	templates_using_issue = templates_using_issue,
	templates_not_using_page = templates_not_using_page,
	}</text>
      <sha1>9geurrccsx2nykua36cseygw8s5xo1h</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Date validation</title>
    <ns>828</ns>
    <id>42164542</id>
    <revision>
      <id>732205419</id>
      <parentid>723701925</parentid>
      <timestamp>2016-07-30T09:55:09Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Synch from sandbox;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="41095">
local p = {}


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array;																	-- imported function from selected Module:Citation/CS1/Utilities


--[=[-------------------------&lt; I S _ V A L I D _ A C C E S S D A T E &gt;----------------------------------------

returns true if:
	Wikipedia start date &lt;= accessdate &lt; today + 2 days

Wikipedia start date is 2001-01-15T00:00:00 UTC which is 979516800 seconds after 1970-01-01T00:00:00 UTC (the start of Unix time)
accessdate is the date provided in |accessdate= at time 00:00:00 UTC
today is the current date at time 00:00:00 UTC plus 48 hours
	if today is 2015-01-01T00:00:00 then
		adding 24 hours gives 2015-01-02T00:00:00  one second more than today
		adding 24 hours gives 2015-01-03T00:00:00  one second more than tomorrow

This function does not work if it is fed month names for languages other than English.  Wikimedia #time: parser
apparently doesn't understand non-Engish date month names. This function will always return false when the date
contains a non-English month name because good1 is false after the call to lang.formatDate().  To get around that
call this function with YYYY-MM-DD format dates.

]=]

local function is_valid_accessdate (accessdate)
	local lang = mw.getContentLanguage();
	local good1, good2;
	local access_ts, tomorrow_ts;												-- to hold unix time stamps representing the dates
		
	good1, access_ts = pcall( lang.formatDate, lang, 'U', accessdate );			-- convert accessdate value to unix timesatmp 
	good2, tomorrow_ts = pcall( lang.formatDate, lang, 'U', 'today + 2 days' );	-- today midnight + 2 days is one second more than all day tomorrow
	
	if good1 and good2 then
		access_ts = tonumber (access_ts);										-- convert to numbers for the comparison
		tomorrow_ts = tonumber (tomorrow_ts);
	else
		return false;															-- one or both failed to convert to unix time stamp
	end

	if 979516800 &lt;= access_ts and access_ts &lt; tomorrow_ts then					-- Wikipedia start date &lt;= accessdate &lt; tomorrow's date
		return true;
	else
		return false;															-- accessdate out of range
	end
end


--[[--------------------------&lt; G E T _ M O N T H _ N U M B E R &gt;----------------------------------------------

returns a number according to the month in a date: 1 for January, etc.  Capitalization and spelling must be correct. If not a valid month, returns 0

]]

local function get_month_number (month)
local long_months = {['January']=1, ['February']=2, ['March']=3, ['April']=4, ['May']=5, ['June']=6, ['July']=7, ['August']=8, ['September']=9, ['October']=10, ['November']=11, ['December']=12};
local short_months = {['Jan']=1, ['Feb']=2, ['Mar']=3, ['Apr']=4, ['May']=5, ['Jun']=6, ['Jul']=7, ['Aug']=8, ['Sep']=9, ['Oct']=10, ['Nov']=11, ['Dec']=12};
	return long_months[month] or												-- if month is the long-form name
		short_months[month] or													-- if month is the short-form name
		0;																		-- misspelled, improper case, or not a month name
end


--[[--------------------------&lt; I S _ V A L I D _ E M B A R G O _ D A T E &gt;------------------------------------

returns true and date value if that value has proper dmy, mdy, ymd format.

returns false and 9999 (embargoed forever) when date value is not proper format; assumes that when |embargo= is
set, the editor intended to embargo a pmc but |embargo= does not hold a single date.

]]

local function is_valid_embargo_date (v)
	if v:match ('^%d%d%d%d%-%d%d%-%d%d$') or									-- ymd
		v:match ('^%d%d?%s+%a+%s+%d%d%d%d$') or									-- dmy
		v:match ('^%a+%s+%d%d?%s*,%s*%d%d%d%d$') then							-- mdy
			return true, v;
	end
	return false, '9999';														-- if here not good date so return false and set embargo date to long time in future
end


--[[--------------------------&lt; G E T _ S E A S O N _ N U M B E R &gt;--------------------------------------------

returns a number according to the sequence of seasons in a year: 1 for Winter, etc.  Capitalization and spelling must be correct. If not a valid season, returns 0

]]

local function get_season_number (season)
local season_list = {['Winter']=21, ['Spring']=22, ['Summer']=23, ['Fall']=24, ['Autumn']=24};	-- make sure these numbers do not overlap month numbers
local temp;
	temp=season_list[season];
	if temp then return temp; end												-- if season is a valid name return its number
	return 0;																	-- misspelled, improper case, or not a season name
end

--[[--------------------------&lt; I S _ P R O P E R _ N A M E &gt;--------------------------------------------------

returns a non-zero number if date contains a recognized proper name.  Capitalization and spelling must be correct.

]]

local function is_proper_name (name)
local name_list = {['Christmas']=31}
local temp;
	temp=name_list[name];
	if temp then return temp; end				-- if name is a valid name return its number
	return 0;									-- misspelled, improper case, or not a proper name
end

--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ O R _ S E A S O N &gt;------------------------------

--returns true if month or season is valid (properly spelled, capitalized, abbreviated)

]]

local function is_valid_month_or_season (month_season)
	if 0 == get_month_number (month_season) then		-- if month text isn't one of the twelve months, might be a season
		if 0 == get_season_number (month_season) then	-- not a month, is it a season?
			return false;								-- return false not a month or one of the five seasons
		end
	end
	return true;
end

--[[--------------------------&lt; I S _ V A L I D _ Y E A R &gt;----------------------------------------------------

Function gets current year from the server and compares it to year from a citation parameter.  Years more than one year in the future are not acceptable.

]]
local year_limit;
local function is_valid_year(year)
	if not is_set(year_limit) then
		year_limit = tonumber(os.date(&quot;%Y&quot;))+1;			-- global variable so we only have to fetch it once
	end
	return tonumber(year) &lt;= year_limit;				-- false if year is in the future more than one year
end

--[[--------------------------&lt; I S _ V A L I D _ D A T E &gt;----------------------------------------------------
Returns true if day is less than or equal to the number of days in month and year is no farther into the future
than next year; else returns false.

Assumes Julian calendar prior to year 1582 and Gregorian calendar thereafter. Accounts for Julian calendar leap
years before 1582 and Gregorian leap years after 1582. Where the two calendars overlap (1582 to approximately
1923) dates are assumed to be Gregorian.

]]

local function is_valid_date (year, month, day)
local days_in_month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
local month_length;
	if not is_valid_year(year) then												-- no farther into the future than next year
		return false;
	end
	
	month = tonumber(month);													-- required for YYYY-MM-DD dates
	
	if (2==month) then															-- if February
		month_length = 28;														-- then 28 days unless
		if 1582 &gt; tonumber(year) then											-- Julian calendar
			if 0==(year%4) then
				month_length = 29;
			end
		else																	-- Gregorian calendar
			if (0==(year%4) and (0~=(year%100) or 0==(year%400))) then			-- is a leap year?
				month_length = 29;												-- if leap year then 29 days in February
			end
		end
	else
		month_length=days_in_month[month];
	end

	if tonumber (day) &gt; month_length then
		return false;
	end
	return true;
end

--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ R A N G E _ S T Y L E &gt;--------------------------

Months in a range are expected to have the same style: JanMar or OctoberDecember but not FebruaryMar or JulAugust. 
There is a special test for May because it can be either short or long form.

Returns true when style for both months is the same

]]

local function is_valid_month_range_style (month1, month2)
local len1 = month1:len();
local len2 = month2:len();
	if len1 == len2 then
		return true;															-- both months are short form so return true
	elseif 'May' == month1 or 'May'== month2 then
		return true;															-- both months are long form so return true
	elseif 3 == len1 or 3 == len2 then
		return false;															-- months are mixed form so return false
	else
		return true;															-- both months are long form so return true
	end
end


--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ S E A S O N _ R A N G E &gt;------------------------

Check a pair of months or seasons to see if both are valid members of a month or season pair.

Month pairs are expected to be left to right, earliest to latest in time.

Similarly, seasons are also left to right, earliest to latest in time.  There is an oddity with seasons: winter is assigned a value of 1, spring 2, ...,
fall and autumn 4.  Because winter can follow fall/autumn at the end of a calender year, a special test is made to see if |date=Fall-Winter yyyy (4-1) is the date.

]]

local function is_valid_month_season_range(range_start, range_end)
	local range_start_number = get_month_number (range_start);
	local range_end_number;
	
	if 0 == range_start_number then												-- is this a month range?
		local range_start_number = get_season_number (range_start);				-- not a month; is it a season? get start season number
		range_end_number = get_season_number (range_end);						-- get end season number

		if 0 ~= range_start_number then											-- is start of range a season?
			if range_start_number &lt; range_end_number then						-- range_start is a season
				return true;													-- return true when range_end is also a season and follows start season; else false
			end
			if 24 == range_start_number and 21 == range_end_number then			-- special case when season range is Fall-Winter or Autumn-Winter
				return true;
			end
		end
		return false;		-- range_start is not a month or a season; or range_start is a season and range_end is not; or improper season sequence
	end

	range_end_number = get_month_number (range_end);							-- get end month number
	if range_start_number &lt; range_end_number then								-- range_start is a month; does range_start precede range_end?
		if is_valid_month_range_style (range_start, range_end) then				-- do months have the same style?
			return true;														-- proper order and same style
		end
	end
	return false;																-- range_start month number is greater than or equal to range end number; or range end isn't a month
end


--[[--------------------------&lt; M A K E _ C O I N S _ D A T E &gt;------------------------------------------------

This function receives a table of date parts for one or two dates and an empty table reference declared in
Module:Citation/CS1.  The function is called only for |date= parameters and only if the |date=&lt;value&gt; is 
determined to be a valid date format.  The question of what to do with invalid date formats is not answered here.

The date parts in the input table are converted to an ISO 8601 conforming date string:
	single whole dates:		yyyy-mm-dd
	month and year dates:	yyyy-mm
	year dates:				yyyy
	ranges:					yyyy-mm-dd/yyyy-mm-dd
							yyyy-mm/yyyy-mm
							yyyy/yyyy

Dates in the Julian calendar are reduced to year or year/year so that we don't have to do calendar conversion from
Julian to Proleptic Gregorian.

The input table has:
	year, year2  always present; if before 1582, ignore months and days if present
	month, month2  0 if not provided, 1-12 for months, 21-24 for seasons; 31 proper name dates
	day, day2   0 if not provided, 1-31 for days
	
the output table receives:
	rftdate:	an IS8601 formatted date
	rftchron:	a free-form version of the date, usually without year which is in rftdate (season ranges and propername dates)
	rftssn:		one of four season keywords: winter, spring, summer, fall (lowercase)

]]

local function make_COinS_date (input, tCOinS_date)
	local date;																	-- one date or first date in a range
	local date2 = '';															-- end of range date
	
	if 1582 &gt; tonumber(input.year) or 20 &lt; tonumber(input.month) then			-- Julian calendar or season so &amp;rft.date gets year only
		date = input.year;
		if 0 ~= input.year2 and input.year ~= input.year2 then					-- if a range, only the second year portion when not the same as range start year
			date = string.format ('%.4d/%.4d', tonumber(input.year), tonumber(input.year2))		-- assemble the date range
		end
		if 20 &lt; tonumber(input.month) then										-- if season or propername date
			local season = {[21]='winter', [22]='spring', [23]='summer', [24]='fall', [31]='Christmas'};	-- seasons lowercase, no autumn; proper names use title case
			if 0 == input.month2 then											-- single season date
				if 30 &lt;tonumber(input.month) then
					tCOinS_date.rftchron = season[input.month];					-- proper name dates
				else
					tCOinS_date.rftssn = season[input.month];					-- seasons
				end
			else																-- season range with a second season specified
				if input.year ~= input.year2 then								-- season year  season year range or season yearyear
					tCOinS_date.rftssn = season[input.month];					-- start of range season; keep this?
					if 0~= input.month2 then
						tCOinS_date.rftchron = string.format ('%s %s  %s %s', season[input.month], input.year, season[input.month2], input.year2);
					end
				else															-- seasonseason year range
					tCOinS_date.rftssn = season[input.month];					-- start of range season; keep this?
					tCOinS_date.rftchron = season[input.month] .. '' .. season[input.month2];	-- seasonseason year range
				end
			end
		end
		tCOinS_date.rftdate = date;
		return;																	-- done
	end
	
	if 0 ~= input.day then
		date = string.format ('%s-%.2d-%.2d', input.year, tonumber(input.month), tonumber(input.day));	-- whole date
	elseif 0 ~= input.month then
		date = string.format ('%s-%.2d', input.year, tonumber(input.month));	-- year and month
	else
		date = string.format ('%s', input.year);								-- just year
	end

	if 0 ~= input.year2 then
		if 0 ~= input.day2 then
			date2 = string.format ('/%s-%.2d-%.2d', input.year2, tonumber(input.month2), tonumber(input.day2));		-- whole date
		elseif 0 ~= input.month2 then
			date2 = string.format ('/%s-%.2d', input.year2, tonumber(input.month2));	-- year and month
		else
			date2 = string.format ('/%s', input.year2);							-- just year
		end
	end
	
	tCOinS_date.rftdate = date .. date2;										-- date2 has the '/' separator
	return;
end


--[[--------------------------&lt; C H E C K _ D A T E &gt;----------------------------------------------------------

Check date format to see that it is one of the formats approved by WP:DATESNO or WP:DATERANGE. Exception: only
allowed range separator is endash.  Additionally, check the date to see that it is a real date: no 31 in 30-day
months; no 29 February when not a leap year.  Months, both long-form and three character abbreviations, and seasons
must be spelled correctly.  Future years beyond next year are not allowed.

If the date fails the format tests, this function returns false and does not return values for anchor_year and
COinS_date.  When this happens, the date parameter is used in the COinS metadata and the CITEREF identifier gets
its year from the year parameter if present otherwise CITEREF does not get a date value.

Inputs:
	date_string - date string from date-holding parameters (date, year, accessdate, embargo, archivedate, etc.)

Returns:
	false if date string is not a real date; else
	true, anchor_year, COinS_date
		anchor_year can be used in CITEREF anchors
		COinS_date is ISO 8601 format date; see make_COInS_date()

]]

local function check_date (date_string, tCOinS_date, test_accessdate)
	local year;			-- assume that year2, months, and days are not used;
	local year2=0;		-- second year in a year range
	local month=0;
	local month2=0;		-- second month in a month range
	local day=0;
	local day2=0;		-- second day in a day range
	local anchor_year;
	local coins_date;

	if date_string:match(&quot;^%d%d%d%d%-%d%d%-%d%d$&quot;) then										-- year-initial numerical year month day format
		year, month, day=string.match(date_string, &quot;(%d%d%d%d)%-(%d%d)%-(%d%d)&quot;);
		if 12 &lt; tonumber(month) or 1 &gt; tonumber(month) or 1582 &gt; tonumber(year) or 0 == tonumber(day) then return false; end	-- month or day number not valid or not Gregorian calendar
		anchor_year = year;

	elseif date_string:match(&quot;^%a+ +[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then						-- month-initial: month day, year
		month, day, anchor_year, year=string.match(date_string, &quot;(%a+)%s*(%d%d?),%s*((%d%d%d%d)%a?)&quot;);
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
				
	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d?[%-][1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then				-- month-initial day range: month dayday, year; days are separated by endash
		month, day, day2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?)[%-](%d%d?), +((%d%d%d%d)%a?)&quot;);
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
		month2=month;																		-- for metadata
		year2=year;

	elseif date_string:match(&quot;^[1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then						-- day-initial: day month year
		day, month, anchor_year, year=string.match(date_string, &quot;(%d%d*)%s*(%a+)%s*((%d%d%d%d)%a?)&quot;);
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d?[%-][1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then				-- day-range-initial: dayday month year; days are separated by endash
		day, day2, month, anchor_year, year=mw.ustring.match(date_string, &quot;(%d%d?)[%-](%d%d?) +(%a+) +((%d%d%d%d)%a?)&quot;);
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
		month2=month;																		-- for metadata
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d? +%a+ [%-] [1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then		-- day initial month-day-range: day month - day month year; uses spaced endash
		day, month, day2, month2, anchor_year, year=mw.ustring.match(date_string, &quot;(%d%d?) +(%a+) [%-] (%d%d?) +(%a+) +((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end	-- date range order is left to right: earlier to later;
		month = get_month_number (month);													-- for metadata
		month2 = get_month_number (month2);
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d? [%-] %a+ +[1-9]%d?, +[1-9]%d%d%d?%a?$&quot;) then		-- month initial month-day-range: month day  month day, year;  uses spaced endash
		month, day, month2, day2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?) [%-] (%a+) +(%d%d?), +((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end
		month = get_month_number (month);													-- for metadata
		month2 = get_month_number (month2);
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d? +%a+ +[1-9]%d%d%d [%-] [1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then		-- day initial month-day-year-range: day month year - day month year; uses spaced endash
		day, month, year, day2, month2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%d%d?) +(%a+) +(%d%d%d%d?) [%-] (%d%d?) +(%a+) +((%d%d%d%d?)%a?)&quot;);
		if tonumber(year2) &lt;= tonumber(year) then return false; end												-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) or not is_valid_month_range_style(month, month2) then return false; end		-- year2 no more than one year in the future; months same style
		month = get_month_number (month);																		-- for metadata
		month2 = get_month_number (month2);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d?, +[1-9]%d%d%d [%-] %a+ +[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then		-- month initial month-day-year-range: month day, year  month day, year;  uses spaced endash
		month, day, year, month2, day2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?), +(%d%d%d%d) [%-] (%a+) +(%d%d?), +((%d%d%d%d)%a?)&quot;);
		if tonumber(year2) &lt;= tonumber(year) then return false; end												-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) or not is_valid_month_range_style(month, month2) then return false; end		-- year2 no more than one year in the future; months same style
		month = get_month_number (month);																		-- for metadata
		month2 = get_month_number (month2);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d[%-]%d%d%a?$&quot;) then								-- special case Winter/Summer year-year (YYYY-YY); year separated with unspaced endash
		local century;
		month, year, century, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +((%d%d)%d%d)[%-]((%d%d)%a?)&quot;);
		if 'Winter' ~= month and 'Summer' ~= month then return false end;					-- 'month' can only be Winter or Summer
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		year2 = century..year2;																-- add the century to year2 for comparisons
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		month = get_season_number (month);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d[%-][1-9]%d%d%d%a?$&quot;) then						-- special case Winter/Summer year-year; year separated with unspaced endash
		month, year, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d%d%d)[%-]((%d%d%d%d)%a?)&quot;);
		if 'Winter' ~= month and 'Summer' ~= month then return false end;					-- 'month' can only be Winter or Summer
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		month = get_season_number (month);													-- for metadata

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d +[%-] +%a+ +[1-9]%d%d%d%a?$&quot;) then				-- month/season year - month/season year; separated by spaced endash
		month, year, month2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d%d%d) +[%-] +(%a+) +((%d%d%d%d)%a?)&quot;);
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end							-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		if 0 ~= get_month_number(month) and 0 ~= get_month_number(month2) and is_valid_month_range_style(month, month2) then 	-- both must be month year, same month style
			month = get_month_number(month);
			month2 = get_month_number(month2);
		elseif 0 ~= get_season_number(month) and 0 ~= get_season_number(month2) then		-- both must be or season year, not mixed
			month = get_season_number(month);
			month2 = get_season_number(month2);
		else
			 return false;
		end

	elseif mw.ustring.match(date_string, &quot;^%a+[%-]%a+ +[1-9]%d%d%d%a?$&quot;) then					-- month/season range year; months separated by endash 
		month, month2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+)[%-](%a+)%s*((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or (not is_valid_year(year)) then return false; end
		if 0 ~= get_month_number(month) then									-- determined to be a valid range so just check this one to know if month or season
			month = get_month_number(month);
			month2 = get_month_number(month2);
		else
			month = get_season_number(month);
			month2 = get_season_number(month2);
		end
		year2=year;
		
	elseif date_string:match(&quot;^%a+ +%d%d%d%d%a?$&quot;) then							-- month/season year or proper-name year
		month, anchor_year, year=date_string:match(&quot;(%a+)%s*((%d%d%d%d)%a?)&quot;);
		if not is_valid_year(year) then return false; end
		if not is_valid_month_or_season (month) and 0 == is_proper_name (month) then return false; end
		if 0 ~= get_month_number(month) then									-- determined to be a valid range so just check this one to know if month or season
			month = get_month_number(month);
		elseif 0 ~= get_season_number(month) then
			month = get_season_number(month);
		else
			month = is_proper_name (month);										-- must be proper name; not supported in COinS
		end

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d%d%d?[%-][1-9]%d%d%d?%a?$&quot;) then				-- Year range: YYY-YYY or YYY-YYYY or YYYYYYYY; separated by unspaced endash; 100-9999
		year, anchor_year, year2=mw.ustring.match(date_string, &quot;(%d%d%d%d?)[%-]((%d%d%d%d?)%a?)&quot;);
		anchor_year=year..''..anchor_year;										-- assemble anchor year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d%d%d[%-]%d%d%a?$&quot;) then						-- Year range: YYYYYY; separated by unspaced endash
		local century;
		year, century, anchor_year, year2=mw.ustring.match(date_string, &quot;((%d%d)%d%d)[%-]((%d%d)%a?)&quot;);
		anchor_year=year..''..anchor_year;										-- assemble anchor year from both years
		if 13 &gt; tonumber(year2) then return false; end							-- don't allow 2003-05 which might be May 2003
		year2 = century..year2;													-- add the century to year2 for comparisons
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif date_string:match(&quot;^[1-9]%d%d%d?%a?$&quot;) then							-- year; here accept either YYY or YYYY
		anchor_year, year=date_string:match(&quot;((%d%d%d%d?)%a?)&quot;);
		if false == is_valid_year(year) then
			return false;
		end

	else
		return false;															-- date format not one of the MOS:DATE approved formats
	end

	if test_accessdate then														-- test accessdate here because we have numerical date parts
		if 0 ~= year and 0 ~= month and 0 ~= day and 							-- all parts of a single date required
			0 == year2 and 0 == month2 and 0 == day2 then						-- none of these; accessdate must not be a range
				if not is_valid_accessdate (year..'-'..month..'-'..day) then	
					return false;												-- return false when accessdate out of bounds
				end
		else
			return false;														-- return false when accessdate is a range of two dates
		end
	end

	local result=true;															-- check whole dates for validity; assume true because not all dates will go through this test
	if 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 == day2 then		-- YMD (simple whole date)
		result=is_valid_date(year,month,day);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 ~= day2 then	-- YMD-d (day range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-md (day month range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month2,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 ~= year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-ymd (day month year range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year2,month2,day2);
	end
	
	if false == result then return false; end

	if nil ~= tCOinS_date then													-- this table only passed into this function when testing |date= parameter values
		make_COinS_date ({year=year, month=month, day=day, year2=year2, month2=month2, day2=day2}, tCOinS_date);	-- make an ISO 8601 date string for COinS
	end
	
	return true, anchor_year;													-- format is good and date string represents a real date
end	


--[[--------------------------&lt; D A T E S &gt;--------------------------------------------------------------------

Cycle the date-holding parameters in passed table date_parameters_list through check_date() to check compliance with MOS:DATE. For all valid dates, check_date() returns
true. The |date= parameter test is unique, it is the only date holding parameter from which values for anchor_year (used in CITEREF identifiers) and COinS_date (used in
the COinS metadata) are derived.  The |date= parameter is the only date-holding parameter that is allowed to contain the no-date keywords &quot;n.d.&quot; or &quot;nd&quot; (without quotes).

Unlike most error messages created in this module, only one error message is created by this function. Because all of the date holding parameters are processed serially,
a single error message is created as the dates are tested.

]]

local function dates(date_parameters_list, tCOinS_date)
	local anchor_year;		-- will return as nil if the date being tested is not |date=
	local COinS_date;		-- will return as nil if the date being tested is not |date=
	local embargo_date;															-- if embargo date is a good dmy, mdy, ymd date then holds original value else reset to 9999
	local error_message = &quot;&quot;;
	local good_date = false;
	
	for k, v in pairs(date_parameters_list) do									-- for each date-holding parameter in the list
		if is_set(v) then														-- if the parameter has a value
			if v:match(&quot;^c%. [1-9]%d%d%d?%a?$&quot;) then							-- special case for c. year or with or without CITEREF disambiguator - only |date= and |year=
				local year = v:match(&quot;c%. ([1-9]%d%d%d?)%a?&quot;);					-- get the year portion so it can be tested
				if 'date'==k then
					anchor_year, COinS_date = v:match(&quot;((c%. [1-9]%d%d%d?)%a?)&quot;);	-- anchor year and COinS_date only from |date= parameter
					good_date = is_valid_year(year);
				elseif 'year'==k then
					good_date = is_valid_year(year);
				end
			elseif 'date'==k then												-- if the parameter is |date=
				if v:match(&quot;^n%.d%.%a?$&quot;) then									-- if |date=n.d. with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((n%.d%.)%a?)&quot;);	--&quot;n.d.&quot;; no error when date parameter is set to no date
				elseif v:match(&quot;^nd%a?$&quot;) then									-- if |date=nd with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((nd)%a?)&quot;);	--&quot;nd&quot;;	no error when date parameter is set to no date
				else
					good_date, anchor_year, COinS_date = check_date (v, tCOinS_date);	-- go test the date
				end
			elseif 'year'==k then												-- if the parameter is |year= it should hold only a year value
				if v:match(&quot;^[1-9]%d%d%d?%a?$&quot;) then							-- if |year= 3 or 4 digits only with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((%d+)%a?)&quot;);
				end
			elseif 'access-date'==k then										-- if the parameter is |date=
				good_date = check_date (v, nil, true);							-- go test the date; nil is a placeholder; true is the test_accessdate flag
			elseif 'embargo'==k then											-- if the parameter is |embargo=
				good_date = check_date (v);										-- go test the date
				if true == good_date then										-- if the date is a valid date
					good_date, embargo_date = is_valid_embargo_date (v);		-- is |embargo= date a single dmy, mdy, or ymd formatted date? yes:returns embargo; no: returns 9999
				end
			else																-- any other date-holding parameter
				good_date = check_date (v);										-- go test the date
			end
			if false==good_date then											-- assemble one error message so we don't add the tracking category multiple times
				if is_set(error_message) then									-- once we've added the first portion of the error message ...
					error_message=error_message .. &quot;, &quot;;						-- ... add a comma space separator
				end
				error_message=error_message .. &quot;&amp;#124;&quot; .. k .. &quot;=&quot;;			-- add the failed parameter
			end
		end
	end
	return anchor_year, embargo_date, error_message;											-- and done
end


--[[--------------------------&lt; Y E A R _ D A T E _ C H E C K &gt;------------------------------------------------

Compare the value provided in |year= with the year value(s) provided in |date=.  This function returns a numeric value:
	0 - year value does not match the year value in date
	1 - (default) year value matches the year value in date or one of the year values when date contains two years
	2 - year value matches the year value in date when date is in the form YYYY-MM-DD and year is disambiguated (|year=YYYYx)

]]

local function year_date_check (year_string, date_string)
	local year;
	local date1;
	local date2;
	local result = 1;															-- result of the test; assume that the test passes
	
	year = year_string:match ('(%d%d%d%d?)');

	if date_string:match ('%d%d%d%d%-%d%d%-%d%d') and year_string:match ('%d%d%d%d%a') then	--special case where both date and year are required YYYY-MM-DD and YYYYx
		date1 = date_string:match ('(%d%d%d%d)');
		year = year_string:match ('(%d%d%d%d)');
		if year ~= date1 then
			result = 0;															-- years don't match
		else
			result = 2;															-- years match; but because disambiguated, don't add to maint cat
		end
		
	elseif date_string:match (&quot;%d%d%d%d?.-%d%d%d%d?&quot;) then						-- any of the standard range formats of date with two three- or four-digit years
		date1, date2 = date_string:match (&quot;(%d%d%d%d?).-(%d%d%d%d?)&quot;);
		if year ~= date1 and year ~= date2 then
			result = 0;
		end

	elseif mw.ustring.match(date_string, &quot;%d%d%d%d[%-]%d%d&quot;) then								-- YYYY-YY date ranges
		local century;
		date1, century, date2 = mw.ustring.match(date_string, &quot;((%d%d)%d%d)[%-]+(%d%d)&quot;);
		date2 = century..date2;													-- convert YY to YYYY
		if year ~= date1 and year ~= date2 then
			result = 0;
		end

	elseif date_string:match (&quot;%d%d%d%d?&quot;) then									-- any of the standard formats of date with one year
		date1 = date_string:match (&quot;(%d%d%d%d?)&quot;);
		if year ~= date1 then
			result = 0;
		end
	else
		result = 0;																-- no recognizable year in date
	end
	return result;
end


--[[-------------------------&lt; R E F O R M A T   T A B L E S &gt;------------------------------------------------

These table are used exclusively for reformatting dates

]]

local source_patterns = {						-- this table holds patterns that match allowed date formats used to extract date components
	['dmy'] = '(%d%d?)%s+(%a+)%s+(%d%d%d%d)',
	['mdy'] = '(%a+)%s+(%d%d?),%s+(%d%d%d%d)',
	['ymd'] = '(%d%d%d%d)%-(%d%d)-(%d%d)',
	}

local short_formats = {							-- this table holds format strings used by os.date() for short month names
	['dmy'] = '%e %b %Y',
	['mdy'] = '%b %e, %Y',
	['ymd'] = '%F',
	}

local long_formats = {							-- this table holds format strings used by os.date() for long month names
	['dmy'] = '%e %B %Y',
	['mdy'] = '%B %e, %Y',
	['ymd'] = '%F',
	}


--[[-------------------------&lt; G E T _ D M Y _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from DMY formatted date, places them in the source_date table, and returns.

]]

local function get_dmy_date_parts (date, source_date)
	source_date.day, source_date.month, source_date.year = date:match (source_patterns['dmy']);	-- get date components as strings
	source_date.month = get_month_number (source_date.month);					-- get month number
end


--[[-------------------------&lt; G E T _ M D Y _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from MDY formatted date, places them in the source_date table, and returns.

]]

local function get_mdy_date_parts (date, source_date)
	source_date.month, source_date.day, source_date.year = date:match (source_patterns['mdy']);	-- get date components as strings
	source_date.month = get_month_number (source_date.month);					-- get month number
end


--[[-------------------------&lt; G E T _ Y M D _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from YMD formatted date, places them in the source_date table, and returns.

]]

local function get_ymd_date_parts (date, source_date)
	source_date.year, source_date.month, source_date.day = date:match (source_patterns['ymd']);	-- get date components as strings
end


--[[-------------------------&lt; R E F O R M A T _ D A T E S &gt;--------------------------------------------------

Reformats existing dates into the format specified by format and short.

format is one of several keywords: dmy, dmy-all, mdy, mdy-all, ymd, ymd-all.  The all version includes access- and
archive-dates; otherwise these dates are not reformatted

Date ranges, season dates, proper name dates are not currently supported.

]]

local function reformat_dates (date_parameters_list, format, short)
	local all = false;															-- set to false to skip access- and archive-dates
	local format_str;
	local source_date = {};
	
	if format:match('%a+%-all') then
		format = format:match('(%a+)%-all');									-- extract the format
		all = true;																-- set to true to format access- and archive-dates
	end
	
	for param_name, param_val in pairs(date_parameters_list) do					-- for each date-holding parameter in the list
		if is_set(param_val) then												-- if the parameter has a value
			if not all and in_array (param_name, {'access-date', 'archive-date'}) then	-- if access- or archive-date and format not xxx-all
				param_val = '';													-- set to empty string so we don't process this date
			end
			for source, pattern in pairs(source_patterns) do
				if param_val:match(pattern) then
					if 'ymd' == source then
						get_ymd_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					elseif 'dmy' == source then
						get_dmy_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					elseif 'mdy' == source then
						get_mdy_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					end

					if 'ymd' == format and 1582 &gt; tonumber(source_date.year) then	-- ymd format dates not allowed before 1582
						return false;											-- abandon reformatting
					end
					
					if short then
						format_str = short_formats[format];
					else
						format_str = long_formats[format];
					end
																				-- convert date and save;
					date_parameters_list[param_name] = mw.text.trim (os.date (format_str, os.time(source_date)));	-- strip leading space when single digit day and %e is first format
				end
			end
		end
	end
	return true;																-- declare success and done
end


--[[--------------------------&lt; D A T E _ H Y P H E N _ T O _ D A S H &gt;----------------------------------------

Loops through the list of date-holding parameters and converts any hyphen to an ndash.  Not called if the cs1|2
template has any date errors.

Modifies the date_parameters_list and returns true if hyphens are replaced, else returns false.

]]

local function date_hyphen_to_dash (date_parameters_list)
	local result = false;
	local n;
	for param_name, param_val in pairs(date_parameters_list) do					-- for each date-holding parameter in the list
		if not param_val:match ('%d%d%d%d%-%d%d%-%d%d') then					-- for those that are not ymd dates
			param_val, n = param_val:gsub ('%-', '');							-- replace any hyphen with ndash
			if 0 ~= n then
				date_parameters_list[param_name] = param_val;					-- update the list
				result = true;
			end
		end
	end
	return result;																-- so we know if 
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (utilities_page_ptr)
	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;											-- import functions from select Module:Citation/CS1/Utilities module
end



return {																		-- return exported functions
	dates = dates,
	year_date_check = year_date_check,
	reformat_dates = reformat_dates,
	date_hyphen_to_dash = date_hyphen_to_dash,
	set_selected_modules = set_selected_modules
	}</text>
      <sha1>i1fv7pqohu4tjsyxsm6wr9x4cy0aoey</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Identifiers</title>
    <ns>828</ns>
    <id>48812124</id>
    <revision>
      <id>803686721</id>
      <parentid>777799222</parentid>
      <timestamp>2017-10-04T00:50:45Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <minor/>
      <comment>ssrn limit -&gt; 3500000;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="42381">
local identifiers = {};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array, set_error, select_one, add_maint_cat, substitute;					-- functions in Module:Citation/CS1/Utilities

local z;																		-- table of tables defined in Module:Citation/CS1/Utilities

local cfg;																		-- table of configuration tables that are defined in Module:Citation/CS1/Configuration


--[[--------------------------&lt; E X T E R N A L _ L I N K _ I D &gt;----------------------------------------------

Formats a wiki style external link

]]

local function external_link_id(options)
	local url_string = options.id;
	local ext_link;
	
	if options.encode == true or options.encode == nil then
		url_string = mw.uri.encode( url_string );
	end
	
	ext_link = mw.ustring.format ('[%s%s%s %s]', options.prefix, url_string, options.suffix or &quot;&quot;, mw.text.nowiki(options.id));
	if is_set(options.access) then
		ext_link = substitute (cfg.presentation['access-signal'], {ext_link, cfg.presentation[options.access]});	-- add the free-to-read / paywall lock
	end
	
	return mw.ustring.format( '[[%s|%s]]%s%s', options.link, options.label, options.separator or &quot;&amp;nbsp;&quot;, ext_link);
end


--[[--------------------------&lt; I N T E R N A L _ L I N K _ I D &gt;----------------------------------------------

Formats a wiki style internal link

]]

local function internal_link_id(options)
	return mw.ustring.format( '[[%s|%s]]%s[[%s%s%s|%s]]',
		options.link, options.label, options.separator or &quot;&amp;nbsp;&quot;,
		options.prefix, options.id, options.suffix or &quot;&quot;,
		mw.text.nowiki(options.id)
	);
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------

ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit.
ISBN-13 is checked in check_isbn().

If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length
and stripped of dashes, spaces and other non-isxn characters.

]]

local function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of byte values '0'  0x30 .. '9'   0x39, 'X'  0x58
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( &quot;X&quot; ) then		-- if checkdigit is X (compares the byte value of 'X' which is 0x58)
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N  _ 1 3 &gt;----------------------------------------------

ISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.
If the number is valid, the result will be 0. Before calling this function, isbn-13/ismn must be checked for length
and stripped of dashes, spaces and other non-isxn-13 characters.

]]

local function is_valid_isxn_13 (isxn_str)
	local temp=0;
	
	isxn_str = { isxn_str:byte(1, 13) };										-- make a table of byte values '0'  0x30 .. '9'   0x39
	for i, v in ipairs( isxn_str ) do
		temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );				-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit
	end
	return temp % 10 == 0;														-- sum modulo 10 is zero when isbn-13/ismn is correct
end


--[[--------------------------&lt; C H E C K _ I S B N &gt;------------------------------------------------------------

Determines whether an ISBN string is valid

]]

local function check_isbn( isbn_str )
	if nil ~= isbn_str:match(&quot;[^%s-0-9X]&quot;) then
		return false, 'invalid character';										-- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
	end
	isbn_str = isbn_str:gsub( &quot;-&quot;, &quot;&quot; ):gsub( &quot; &quot;, &quot;&quot; );						-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return false, 'length';													-- fail if incorrect length
	end

	if len == 10 then
		if isbn_str:match( &quot;^%d*X?$&quot; ) == nil then								-- fail if isbn_str has 'X' anywhere but last position
			return false, 'invalid form';									
		end
		return is_valid_isxn(isbn_str, 10), 'checksum';
	else
		if isbn_str:match( &quot;^%d+$&quot; ) == nil then
			return false, 'invalid character';									-- fail if isbn13 is not all digits
		end
		if isbn_str:match( &quot;^97[89]%d*$&quot; ) == nil then
			return false, 'invalid prefix';										-- fail when isbn13 does not begin with 978 or 979
		end
		return is_valid_isxn_13 (isbn_str), 'checksum';
	end
end


--[[--------------------------&lt; I S M N &gt;----------------------------------------------------------------------

Determines whether an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the
same check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf
section 2, pages 912.

]]

local function ismn (id)
	local handler = cfg.id_handlers['ISMN'];
	local text;
	local valid_ismn = true;
	local id_copy;

	id_copy = id;																-- save a copy because this testing is destructive
	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );													-- strip spaces, hyphens, and endashes from the ismn

	if 13 ~= id:len() or id:match( &quot;^9790%d*$&quot; ) == nil then					-- ismn must be 13 digits and begin 9790
		valid_ismn = false;
	else
		valid_ismn=is_valid_isxn_13 (id);										-- validate ismn
	end

--	text = internal_link_id({link = handler.link, label = handler.label,		-- use this (or external version) when there is some place to link to
--		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	text=&quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]&quot; .. handler.separator .. id_copy;		-- because no place to link to yet

	if false == valid_ismn then
		text = text .. ' ' .. set_error( 'bad_ismn' )							-- add an error message if the ismn is invalid
	end 
	
	return text;
end


--[[--------------------------&lt; I S S N &gt;----------------------------------------------------------------------

Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but
has separated the two groups of four digits with a space.  When that condition occurred, the resulting link looked
like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length
and makes sure that the checkdigit agrees with the calculated value.  Incorrect length (8 digits), characters
other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn error message.  The
issn is always displayed with a hyphen, even if the issn was given as a single group of 8 digits.

]]

local function issn(id, e)
	local issn_copy = id;		-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local handler;
	local text;
	local valid_issn = true;
	
	if e then
		 handler = cfg.id_handlers['EISSN'];
	else
		 handler = cfg.id_handlers['ISSN'];
	end

	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );									-- strip spaces, hyphens, and endashes from the issn

	if 8 ~= id:len() or nil == id:match( &quot;^%d*X?$&quot; ) then		-- validate the issn: 8 digits long, containing only 0-9 or X in the last position
		valid_issn=false;										-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);						-- validate issn
	end

	if true == valid_issn then
		id = string.sub( id, 1, 4 ) .. &quot;-&quot; .. string.sub( id, 5 );	-- if valid, display correctly formatted version
	else
		id = issn_copy;											-- if not valid, use the show the invalid issn with error message
	end
	
	text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if false == valid_issn then
		text = text .. ' ' .. set_error( 'bad_issn', e and 'e' or '' )			-- add an error message if the issn is invalid
	end 
	
	return text
end


--[[--------------------------&lt; A M A Z O N &gt;------------------------------------------------------------------

Formats a link to Amazon.  Do simple error checking: asin must be mix of 10 numeric or uppercase alpha
characters.  If a mix, first character must be uppercase alpha; if all numeric, asins must be 10-digit
isbn. If 10-digit isbn, add a maintenance category so a bot or awb script can replace |asin= with |isbn=.
Error message if not 10 characters, if not isbn10, if mixed and first character is a digit.

]]

local function amazon(id, domain)
	local err_cat = &quot;&quot;

	if not id:match(&quot;^[%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u]$&quot;) then
		err_cat =  ' ' .. set_error ('bad_asin');								-- asin is not a mix of 10 uppercase alpha and numeric characters
	else
		if id:match(&quot;^%d%d%d%d%d%d%d%d%d[%dX]$&quot;) then								-- if 10-digit numeric (or 9 digits with terminal X)
			if check_isbn( id ) then												-- see if asin value is isbn10
				add_maint_cat ('ASIN');
			elseif not is_set (err_cat) then
				err_cat =  ' ' .. set_error ('bad_asin');						-- asin is not isbn10
			end
		elseif not id:match(&quot;^%u[%d%u]+$&quot;) then
			err_cat =  ' ' .. set_error ('bad_asin');							-- asin doesn't begin with uppercase alpha
		end
	end
	if not is_set(domain) then 
		domain = &quot;com&quot;;
	elseif in_array (domain, {'jp', 'uk'}) then			-- Japan, United Kingdom
		domain = &quot;co.&quot; .. domain;
	elseif in_array (domain, {'au', 'br', 'mx'}) then	-- Australia, Brazil, Mexico
		domain = &quot;com.&quot; .. domain;
	end
	local handler = cfg.id_handlers['ASIN'];
	return external_link_id({link=handler.link,
		label=handler.label, prefix=handler.prefix .. domain .. &quot;/dp/&quot;,
		id=id, encode=handler.encode, separator = handler.separator}) .. err_cat;
end


--[[--------------------------&lt; A R X I V &gt;--------------------------------------------------------------------

See: http://arxiv.org/help/arxiv_identifier

format and error check arXiv identifier.  There are three valid forms of the identifier:
the first form, valid only between date codes 9108 and 0703 is:
	arXiv:&lt;archive&gt;.&lt;class&gt;/&lt;date code&gt;&lt;number&gt;&lt;version&gt;
where:
	&lt;archive&gt; is a string of alpha characters - may be hyphenated; no other punctuation
	&lt;class&gt; is a string of alpha characters - may be hyphenated; no other punctuation
	&lt;date code&gt; is four digits in the form YYMM where YY is the last two digits of the four-digit year and MM is the month number January = 01
		first digit of YY for this form can only 9 and 0
	&lt;number&gt; is a three-digit number
	&lt;version&gt; is a 1 or more digit number preceded with a lowercase v; no spaces (undocumented)
	
the second form, valid from April 2007 through December 2014 is:
	arXiv:&lt;date code&gt;.&lt;number&gt;&lt;version&gt;
where:
	&lt;date code&gt; is four digits in the form YYMM where YY is the last two digits of the four-digit year and MM is the month number January = 01
	&lt;number&gt; is a four-digit number
	&lt;version&gt; is a 1 or more digit number preceded with a lowercase v; no spaces

the third form, valid from January 2015 is:
	arXiv:&lt;date code&gt;.&lt;number&gt;&lt;version&gt;
where:
	&lt;date code&gt; and &lt;version&gt; are as defined for 0704-1412
	&lt;number&gt; is a five-digit number
]]

local function arxiv (id, class)
	local handler = cfg.id_handlers['ARXIV'];
	local year, month, version;
	local err_cat = '';
	local text;
	
	if id:match(&quot;^%a[%a%.%-]+/[90]%d[01]%d%d%d%d$&quot;) or id:match(&quot;^%a[%a%.%-]+/[90]%d[01]%d%d%d%dv%d+$&quot;) then	-- test for the 9108-0703 format w/ &amp; w/o version
		year, month = id:match(&quot;^%a[%a%.%-]+/([90]%d)([01]%d)%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((not (90 &lt; year or 8 &gt; year)) or (1 &gt; month or 12 &lt; month)) or		-- if invalid year or invalid month
			((91 == year and 7 &gt; month) or (7 == year and 3 &lt; month)) then		-- if years ok, are starting and ending months ok?
				err_cat = ' ' .. set_error( 'bad_arxiv' );						-- set error message
		end
	elseif id:match(&quot;^%d%d[01]%d%.%d%d%d%d$&quot;) or id:match(&quot;^%d%d[01]%d%.%d%d%d%dv%d+$&quot;) then	-- test for the 0704-1412 w/ &amp; w/o version
		year, month = id:match(&quot;^(%d%d)([01]%d)%.%d%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((7 &gt; year) or (14 &lt; year) or (1 &gt; month or 12 &lt; month)) or			-- is year invalid or is month invalid? (doesn't test for future years)
			((7 == year) and (4 &gt; month)) then --or									-- when year is 07, is month invalid (before April)?
				err_cat = ' ' .. set_error( 'bad_arxiv' );						-- set error message
		end
	elseif id:match(&quot;^%d%d[01]%d%.%d%d%d%d%d$&quot;) or id:match(&quot;^%d%d[01]%d%.%d%d%d%d%dv%d+$&quot;) then	-- test for the 1501- format w/ &amp; w/o version
		year, month = id:match(&quot;^(%d%d)([01]%d)%.%d%d%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((15 &gt; year) or (1 &gt; month or 12 &lt; month)) then						-- is year invalid or is month invalid? (doesn't test for future years)
			err_cat = ' ' .. set_error( 'bad_arxiv' );							-- set error message
		end
	else
		err_cat = ' ' .. set_error( 'bad_arxiv' );								-- arXiv id doesn't match any format
	end

	text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;

	if is_set (class) then
		class = ' [[' .. '//arxiv.org/archive/' .. class .. ' ' .. class .. ']]';	-- external link within square brackets, not wikilink
	else
		class = '';																-- empty string for concatenation
	end
	
	return text .. class;
end


--[[--------------------------&lt; B I O R X I V &gt;-----------------------------------------------------------------

Format bioRxiv id and do simple error checking.  BiorXiv ids are exactly 6 digits.
The bioRxiv id is the number following the last slash in the bioRxiv-issued DOI:
https://doi.org/10.1101/078733 -&gt; 078733

]]

local function biorxiv(id)
	local handler = cfg.id_handlers['BIORXIV'];
	local err_cat =  '';								-- presume that bioRxiv id is valid
	
	if nil == id:match(&quot;^%d%d%d%d%d%d$&quot;) then				-- if bioRxiv id has anything but six digits
		err_cat = ' ' .. set_error( 'bad_biorxiv');	-- set an error message
    end
	
	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator,
			encode=handler.encode, access=handler.access}) .. err_cat;
end


--[[--------------------------&lt; N O R M A L I Z E _ L C C N &gt;--------------------------------------------------

lccn normalization (http://www.loc.gov/marc/lccn-namespace.html#normalization)
1. Remove all blanks.
2. If there is a forward slash (/) in the string, remove it, and remove all characters to the right of the forward slash.
3. If there is a hyphen in the string:
	a. Remove it.
	b. Inspect the substring following (to the right of) the (removed) hyphen. Then (and assuming that steps 1 and 2 have been carried out):
		1. All these characters should be digits, and there should be six or less. (not done in this function)
		2. If the length of the substring is less than 6, left-fill the substring with zeroes until the length is six.

Returns a normalized lccn for lccn() to validate.  There is no error checking (step 3.b.1) performed in this function.
]]

local function normalize_lccn (lccn)
	lccn = lccn:gsub (&quot;%s&quot;, &quot;&quot;);									-- 1. strip whitespace

	if nil ~= string.find (lccn,'/') then
		lccn = lccn:match (&quot;(.-)/&quot;);								-- 2. remove forward slash and all character to the right of it
	end

	local prefix
	local suffix
	prefix, suffix = lccn:match (&quot;(.+)%-(.+)&quot;);						-- 3.a remove hyphen by splitting the string into prefix and suffix

	if nil ~= suffix then											-- if there was a hyphen
		suffix=string.rep(&quot;0&quot;, 6-string.len (suffix)) .. suffix;	-- 3.b.2 left fill the suffix with 0s if suffix length less than 6
		lccn=prefix..suffix;										-- reassemble the lccn
	end
	
	return lccn;
	end


--[[--------------------------&lt; L C C N &gt;----------------------------------------------------------------------

Format LCCN link and do simple error checking.  LCCN is a character string 8-12 characters long. The length of
the LCCN dictates the character type of the first 1-3 characters; the rightmost eight are always digits.
http://info-uri.info/registry/OAIHandler?verb=GetRecord&amp;metadataPrefix=reg&amp;identifier=info:lccn/

length = 8 then all digits
length = 9 then lccn[1] is lower case alpha
length = 10 then lccn[1] and lccn[2] are both lower case alpha or both digits
length = 11 then lccn[1] is lower case alpha, lccn[2] and lccn[3] are both lower case alpha or both digits
length = 12 then lccn[1] and lccn[2] are both lower case alpha

]]

local function lccn(lccn)
	local handler = cfg.id_handlers['LCCN'];
	local err_cat =  '';								-- presume that LCCN is valid
	local id = lccn;									-- local copy of the lccn

	id = normalize_lccn (id);							-- get canonical form (no whitespace, hyphens, forward slashes)
	local len = id:len();								-- get the length of the lccn

	if 8 == len then
		if id:match(&quot;[^%d]&quot;) then						-- if LCCN has anything but digits (nil if only digits)
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- set an error message
		end
	elseif 9 == len then								-- LCCN should be adddddddd
		if nil == id:match(&quot;%l%d%d%d%d%d%d%d%d&quot;) then			-- does it match our pattern?
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- set an error message
		end
	elseif 10 == len then								-- LCCN should be aadddddddd or dddddddddd
		if id:match(&quot;[^%d]&quot;) then							-- if LCCN has anything but digits (nil if only digits) ...
			if nil == id:match(&quot;^%l%l%d%d%d%d%d%d%d%d&quot;) then	-- ... see if it matches our pattern
				err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
			end
		end
	elseif 11 == len then								-- LCCN should be aaadddddddd or adddddddddd
		if not (id:match(&quot;^%l%l%l%d%d%d%d%d%d%d%d&quot;) or id:match(&quot;^%l%d%d%d%d%d%d%d%d%d%d&quot;)) then	-- see if it matches one of our patterns
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
		end
	elseif 12 == len then								-- LCCN should be aadddddddddd
		if not id:match(&quot;^%l%l%d%d%d%d%d%d%d%d%d%d&quot;) then	-- see if it matches our pattern
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
		end
	else
		err_cat = ' ' .. set_error( 'bad_lccn' );		-- wrong length, set an error message
	end

	if not is_set (err_cat) and nil ~= lccn:find ('%s') then
		err_cat = ' ' .. set_error( 'bad_lccn' );		-- lccn contains a space, set an error message
	end

	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=lccn,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; P M I D &gt;----------------------------------------------------------------------

Format PMID and do simple error checking.  PMIDs are sequential numbers beginning at 1 and counting up.  This
code checks the PMID to see that it contains only digits and is less than test_limit; the value in local variable
test_limit will need to be updated periodically as more PMIDs are issued.

]]

local function pmid(id)
	local test_limit = 30000000;						-- update this value as PMIDs approach
	local handler = cfg.id_handlers['PMID'];
	local err_cat =  '';								-- presume that PMID is valid
	
	if id:match(&quot;[^%d]&quot;) then							-- if PMID has anything but digits
		err_cat = ' ' .. set_error( 'bad_pmid' );		-- set an error message
	else												-- PMID is only digits
		local id_num = tonumber(id);					-- convert id to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then		-- if PMID is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_pmid' );	-- set an error message
		end
	end
	
	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; I S _ E M B A R G O E D &gt;------------------------------------------------------

Determines if a PMC identifier's online version is embargoed. Compares the date in |embargo= against today's date.  If embargo date is
in the future, returns the content of |embargo=; otherwise, returns and empty string because the embargo has expired or because
|embargo= was not set in this cite.

]]

local function is_embargoed (embargo)
	if is_set (embargo) then
		local lang = mw.getContentLanguage();
		local good1, embargo_date, good2, todays_date;
		good1, embargo_date = pcall( lang.formatDate, lang, 'U', embargo );
		good2, todays_date = pcall( lang.formatDate, lang, 'U' );
	
		if good1 and good2 then													-- if embargo date and today's date are good dates
			if tonumber( embargo_date ) &gt;= tonumber( todays_date ) then			-- is embargo date is in the future?
				return embargo;													-- still embargoed
			else
				add_maint_cat ('embargo')
				return '';														-- unset because embargo has expired
			end
		end
	end
	return '';																	-- |embargo= not set return empty string
end


--[[--------------------------&lt; P M C &gt;------------------------------------------------------------------------

Format a PMC, do simple error checking, and check for embargoed articles.

The embargo parameter takes a date for a value. If the embargo date is in the future the PMC identifier will not
be linked to the article.  If the embargo date is today or in the past, or if it is empty or omitted, then the
PMC identifier is linked to the article through the link at cfg.id_handlers['PMC'].prefix.

PMC embargo date testing is done in function is_embargoed () which is called earlier because when the citation
has |pmc=&lt;value&gt; but does not have a |url= then |title= is linked with the PMC link.  Function is_embargoed ()
returns the embargo date if the PMC article is still embargoed, otherwise it returns an empty string.

PMCs are sequential numbers beginning at 1 and counting up.  This code checks the PMC to see that it contains only digits and is less
than test_limit; the value in local variable test_limit will need to be updated periodically as more PMCs are issued.

]]

local function pmc(id, embargo)
	local test_limit = 6000000;													-- update this value as PMCs approach
	local handler = cfg.id_handlers['PMC'];
	local err_cat =  '';														-- presume that PMC is valid
	local id_num;
	local text;
	
	id_num = id:match ('^[Pp][Mm][Cc](%d+)$');                                  -- identifier with pmc prefix

	if is_set (id_num) then
		add_maint_cat ('pmc_format');
	else																        -- plain number without pmc prefix
		id_num = id:match ('^%d+$');											-- if here id is all digits
	end

	if is_set (id_num) then														-- id_num has a value so test it
		id_num = tonumber(id_num);												-- convert id_num to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then								-- if PMC is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_pmc' );							-- set an error message
		else
			id = tostring (id_num);												-- make sure id is a string
		end
	else																		-- when id format incorrect
		err_cat = ' ' .. set_error( 'bad_pmc' );								-- set an error message
	end
	
	if is_set (embargo) then													-- is PMC is still embargoed?
		text=&quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]&quot; .. handler.separator .. id .. err_cat;	-- still embargoed so no external link
	else
		text = external_link_id({link = handler.link, label = handler.label,	-- no embargo date or embargo has expired, ok to link to article
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;
	end
	return text;
end


--[[--------------------------&lt; D O I &gt;------------------------------------------------------------------------

Formats a DOI and checks for DOI errors.

DOI names contain two parts: prefix and suffix separated by a forward slash.
	Prefix: directory indicator '10.' followed by a registrant code
	Suffix: character string of any length chosen by the registrant

This function checks a DOI name for: prefix/suffix.  If the doi name contains spaces or endashes, or, if it ends
with a period or a comma, this function will emit a bad_doi error message.

DOI names are case-insensitive and can incorporate any printable Unicode characters so the test for spaces, endash,
and terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely
if ever used in doi names.

]]

local function doi(id, inactive, access)
	local cat = &quot;&quot;
	local handler = cfg.id_handlers['DOI'];
	
	local text;
	if is_set(inactive) then
		local inactive_year = inactive:match(&quot;%d%d%d%d&quot;) or '';		-- try to get the year portion from the inactive date
		text = &quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]:&quot; .. id;
		if is_set(inactive_year) then
			table.insert( z.error_categories, &quot;Pages with DOIs inactive since &quot; .. inactive_year );
		else
			table.insert( z.error_categories, &quot;Pages with inactive DOIs&quot; );	-- when inactive doesn't contain a recognizable year
		end
		inactive = &quot; (&quot; .. cfg.messages['inactive'] .. &quot; &quot; .. inactive .. &quot;)&quot; 
	else 
		text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=access})
		inactive = &quot;&quot; 
	end

	if nil == id:match(&quot;^10%.[^%s]-/[^%s]-[^%.,]$&quot;) then	-- doi must begin with '10.', must contain a fwd slash, must not contain spaces or endashes, and must not end with period or comma
		cat = ' ' .. set_error( 'bad_doi' );
	end
	return text .. inactive .. cat 
end


--[[--------------------------&lt; H D L &gt;------------------------------------------------------------------------

Formats an HDL with minor error checking.

HDL names contain two parts: prefix and suffix separated by a forward slash.
	Prefix: character string using any character in the UCS-2 character set except '/'
	Suffix: character string of any length using any character in the UCS-2 character set chosen by the registrant

This function checks a HDL name for: prefix/suffix.  If the HDL name contains spaces, endashes, or, if it ends
with a period or a comma, this function will emit a bad_hdl error message.

HDL names are case-insensitive and can incorporate any printable Unicode characters so the test for endashes and
terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely
if ever used in HDLs.

]]

local function hdl(id, access)
	local handler = cfg.id_handlers['HDL'];
	
	local text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=access})

	if nil == id:match(&quot;^[^%s]-/[^%s]-[^%.,]$&quot;) then							-- hdl must contain a fwd slash, must not contain spaces, endashes, and must not end with period or comma
		text = text .. ' ' .. set_error( 'bad_hdl' );
	end
	return text;
end


--[[--------------------------&lt; O P E N L I B R A R Y &gt;--------------------------------------------------------

Formats an OpenLibrary link, and checks for associated errors.

]]

local function openlibrary(id, access)
	local code = id:match(&quot;^%d+([AMW])$&quot;);										-- only digits followed by 'A', 'M', or 'W'
	local handler = cfg.id_handlers['OL'];

	if ( code == &quot;A&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'authors/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	elseif ( code == &quot;M&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'books/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	elseif ( code == &quot;W&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'works/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	else
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access}) .. ' ' .. set_error( 'bad_ol' );
	end
end


--[[--------------------------&lt; M E S S A G E _ I D &gt;----------------------------------------------------------

Validate and format a usenet message id.  Simple error checking, looks for 'id-left@id-right' not enclosed in
'&lt;' and/or '&gt;' angle brackets.

]]

local function message_id (id)
	local handler = cfg.id_handlers['USENETID'];

	local text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if not id:match('^.+@.+$') or not id:match('^[^&lt;].*[^&gt;]$')then				-- doesn't have '@' or has one or first or last character is '&lt; or '&gt;'
		text = text .. ' ' .. set_error( 'bad_message_id' )						-- add an error message if the message id is invalid
	end 
	
	return text
end


--[[--------------------------&lt; O C L C &gt;----------------------------------------------------------------------

Validate and format an oclc id.  https://www.oclc.org/batchload/controlnumber.en.html

]]

local function oclc (id)
	local handler = cfg.id_handlers['OCLC'];
	local number;
	local err_msg = '';															-- empty string for concatenation
	
	if id:match('^ocm%d%d%d%d%d%d%d%d$') then									-- ocm prefix and 8 digits; 001 field (12 characters)
		number = id:match('ocm(%d+)');											-- get the number
	elseif id:match('^ocn%d%d%d%d%d%d%d%d%d$') then								-- ocn prefix and 9 digits; 001 field (12 characters)
		number = id:match('ocn(%d+)');											-- get the number
	elseif id:match('^on%d%d%d%d%d%d%d%d%d%d+$') then							-- on prefix and 10 or more digits; 001 field (12 characters)
		number = id:match('^on(%d%d%d%d%d%d%d%d%d%d+)$');						-- get the number
	elseif id:match('^%(OCoLC%)[1-9]%d*$') then									-- (OCoLC) prefix and variable number digits; no leading zeros; 035 field
		number = id:match('%(OCoLC%)([1-9]%d*)');								-- get the number
		if 9 &lt; number:len() then
			number = nil;														-- contrain to 1 to 9 digits; change this when oclc issues 10-digit numbers
		end
	elseif id:match('^%d+$') then												-- no prefix
		number = id;															-- get the number
		if 10 &lt; number:len() then
			number = nil;														-- contrain to 1 to 10 digits; change this when oclc issues 11-digit numbers
		end
	end

	if number then																-- proper format
		id = number;															-- exclude prefix, if any, from external link
	else
		err_msg = ' ' .. set_error( 'bad_oclc' )								-- add an error message if the id is malformed
	end
	
	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode}) .. err_msg;

	return text;
end


--[[--------------------------&lt; B I B C O D E &gt;--------------------------------------------------------------------

Validates (sort of) and formats a bibcode id.

Format for bibcodes is specified here: http://adsabs.harvard.edu/abs_doc/help_pages/data.html#bibcodes

But, this: 2015arXiv151206696F is apparently valid so apparently, the only things that really matter are length, 19 characters
and first four digits must be a year.  This function makes these tests:
	length must be 19 characters
	characters in position
		14 must be digits and must represent a year in the range of 1000  next year
		5 must be a letter
		6 must be letter, ampersand, or dot (ampersand cannot directly precede a dot; &amp;. )
		78 must be letter, digit, ampersand, or dot (ampersand cannot directly precede a dot; &amp;. )
		918 must be letter, digit, or dot
		19 must be a letter or dot

]]

local function bibcode (id, access)
	local handler = cfg.id_handlers['BIBCODE'];
	local err_type;
	local year;

	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode,
		access=access});
	
	if 19 ~= id:len() then
		err_type = 'length';
	else
		year = id:match (&quot;^(%d%d%d%d)[%a][%a&amp;%.][%a&amp;%.%d][%a&amp;%.%d][%a%d%.]+[%a%.]$&quot;)	-- 
		if not year then														-- if nil then no pattern match
			err_type = 'value';													-- so value error
		else
			local next_year = tonumber(os.date ('%Y'))+1;						-- get the current year as a number and add one for next year
			year = tonumber (year);												-- convert year portion of bibcode to a number
			if (1000 &gt; year) or (year &gt; next_year) then
				err_type = 'year';												-- year out of bounds
			end
			if id:find('&amp;%.') then
				err_type = 'journal';											-- journal abbreviation must not have '&amp;.' (if it does its missing a letter)
			end
		end
	end

	if is_set (err_type) then													-- if there was an error detected
		text = text .. ' ' .. set_error( 'bad_bibcode', {err_type});
	end
	return text;
end


--[[--------------------------&lt; C I T E S E E R X &gt;------------------------------------------------------------

CiteSeerX use their own notion of &quot;doi&quot; (not to be confused with the identifiers resolved via doi.org).

The description of the structure of this identifier can be found at Help_talk:Citation_Style_1/Archive_26#CiteSeerX_id_structure
]]

local function citeseerx (id)
	local handler = cfg.id_handlers['CITESEERX'];
	local matched;
	
	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode,
		access=handler.access});
	
	matched = id:match (&quot;^10%.1%.1%.[1-9]%d?%d?%d?%.[1-9]%d?%d?%d?$&quot;);
	if not matched then
		text = text .. ' ' .. set_error( 'bad_citeseerx' );
	end
	return text;
end


--[[--------------------------&lt; S S R N &gt;----------------------------------------------------------------------

Format an ssrn, do simple error checking

SSRNs are sequential numbers beginning at 100? and counting up.  This code checks the ssrn to see that it is
only digits and is greater than 99 and less than test_limit; the value in local variable test_limit will need
to be updated periodically as more SSRNs are issued.

]]

local function ssrn (id)
	local test_limit = 3500000;													-- update this value as SSRNs approach
	local handler = cfg.id_handlers['SSRN'];
	local err_cat =  '';														-- presume that SSRN is valid
	local id_num;
	local text;
	
	id_num = id:match ('^%d+$');												-- id must be all digits

	if is_set (id_num) then														-- id_num has a value so test it
		id_num = tonumber(id_num);												-- convert id_num to a number for range testing
		if 100 &gt; id_num or test_limit &lt; id_num then								-- if SSRN is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_ssrn' );							-- set an error message
		end
	else																		-- when id format incorrect
		err_cat = ' ' .. set_error( 'bad_ssrn' );								-- set an error message
	end
	
	text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;

	return text;
end


--[[--------------------------&lt; B U I L D _ I D _ L I S T &gt;--------------------------------------------------------

Takes a table of IDs created by extract_ids() and turns it into a table of formatted ID outputs.

inputs:
	id_list  table of identifiers built by extract_ids()
	options  table of various template parameter values used to modify some manually handled identifiers

]]

local function build_id_list( id_list, options )
	local new_list, handler = {};

	local function fallback(k) return { __index = function(t,i) return cfg.id_handlers[k][i] end } end;
	
	for k, v in pairs( id_list ) do												-- k is uc identifier name as index to cfg.id_handlers; e.g. cfg.id_handlers['ISBN'], v is a table
		
		-- fallback to read-only cfg
		handler = setmetatable( { ['id'] = v, ['access'] = options.IdAccessLevels[k] }, fallback(k) );

		if handler.mode == 'external' then
			table.insert( new_list, {handler.label, external_link_id( handler ) } );
		elseif handler.mode == 'internal' then
			table.insert( new_list, {handler.label, internal_link_id( handler ) } );
		elseif handler.mode ~= 'manual' then
			error( cfg.messages['unknown_ID_mode'] );
		elseif k == 'BIBCODE' then
			table.insert( new_list, {handler.label, bibcode( v, handler.access ) } );
		elseif k == 'BIORXIV' then
			table.insert( new_list, {handler.label, biorxiv( v ) } );
		elseif k == 'CITESEERX' then
			table.insert( new_list, {handler.label, citeseerx( v ) } );
		elseif k == 'DOI' then
			table.insert( new_list, {handler.label, doi( v, options.DoiBroken, handler.access ) } );
		elseif k == 'HDL' then
			table.insert( new_list, {handler.label, hdl( v, handler.access ) } );
		elseif k == 'ARXIV' then
			table.insert( new_list, {handler.label, arxiv( v, options.Class ) } ); 
		elseif k == 'ASIN' then
			table.insert( new_list, {handler.label, amazon( v, options.ASINTLD ) } ); 
		elseif k == 'LCCN' then
			table.insert( new_list, {handler.label, lccn( v ) } );
		elseif k == 'OL' or k == 'OLA' then
			table.insert( new_list, {handler.label, openlibrary( v, handler.access ) } );
		elseif k == 'PMC' then
			table.insert( new_list, {handler.label, pmc( v, options.Embargo ) } );
		elseif k == 'PMID' then
			table.insert( new_list, {handler.label, pmid( v ) } );
		elseif k == 'OCLC' then
			table.insert( new_list, {handler.label, oclc( v ) } );
		elseif k == 'SSRN' then
			table.insert( new_list, {handler.label, ssrn( v ) } );
		elseif k == 'ISMN' then
			table.insert( new_list, {handler.label, ismn( v ) } );
		elseif k == 'ISSN' then
			table.insert( new_list, {handler.label, issn( v ) } );
		elseif k == 'EISSN' then
			table.insert( new_list, {handler.label, issn( v, true ) } );		-- true distinguishes eissn from issn
		elseif k == 'ISBN' then
			local ISBN = internal_link_id( handler );
			local check;
			local err_type = '';
			check, err_type = check_isbn( v );
			if not check then
				if is_set(options.IgnoreISBN) then								-- ISBN is invalid; if |ignore-isbn-error= set
					add_maint_cat ('ignore_isbn_err');							-- ad a maint category
				else
					ISBN = ISBN .. set_error( 'bad_isbn', {err_type}, false, &quot; &quot;, &quot;&quot; );	-- else display an error message
				end
			elseif is_set(options.IgnoreISBN) then								-- ISBN is OK; if |ignore-isbn-error= set
					add_maint_cat ('ignore_isbn_err');							-- because |ignore-isbn-error= unnecessary
			end
			table.insert( new_list, {handler.label, ISBN } );				
		elseif k == 'USENETID' then
			table.insert( new_list, {handler.label, message_id( v ) } );
		else
			error( cfg.messages['unknown_manual_ID'] );
		end
	end
	
	local function comp( a, b )	-- used in following table.sort()
		return a[1] &lt; b[1];
	end
	
	table.sort( new_list, comp );
	for k, v in ipairs( new_list ) do
		new_list[k] = v[2];
	end
	
	return new_list;
end


--[[--------------------------&lt; E X T R A C T _ I D S &gt;------------------------------------------------------------

Populates ID table from arguments using configuration settings. Loops through cfg.id_handlers and searches args for
any of the parameters listed in each cfg.id_handlers['...'].parameters.  If found, adds the parameter and value to
the identifier list.  Emits redundant error message is more than one alias exists in args

]]

local function extract_ids( args )
	local id_list = {};															-- list of identifiers found in args
	for k, v in pairs( cfg.id_handlers ) do										-- k is uc identifier name as index to cfg.id_handlers; e.g. cfg.id_handlers['ISBN'], v is a table
		v = select_one( args, v.parameters, 'redundant_parameters' );			-- v.parameters is a table of aliases for k; here we pick one from args if present
		if is_set(v) then id_list[k] = v; end									-- if found in args, add identifier to our list
	end
	return id_list;
end


--[[--------------------------&lt; E X T R A C T _ I D _ A C C E S S _ L E V E L S &gt;--------------------------------------

Fetches custom id access levels from arguments using configuration settings.
Parameters which have a predefined access level (e.g. arxiv) do not use this
function as they are directly rendered as free without using an additional parameter.

]]

local function extract_id_access_levels( args, id_list )
	local id_accesses_list = {};
	for k, v in pairs( cfg.id_handlers ) do
		local access_param = v.custom_access;
		local k_lower = string.lower(k);
		if is_set(access_param) then
			local access_level = args[access_param];
			if is_set(access_level) then
				if not in_array (access_level:lower(), cfg.keywords['id-access']) then
					table.insert( z.message_tail, { set_error( 'invalid_param_val', {access_param, access_level}, true ) } );	
					access_level = nil;
				end
				if not is_set(id_list[k]) then
					table.insert( z.message_tail, { set_error( 'param_access_requires_param', {k_lower}, true ) } );
				end
				if is_set(access_level) then
					access_level = access_level:lower();
				end
				id_accesses_list[k] = access_level;
			end
		end
	end
	return id_accesses_list;
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table and imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	cfg = cfg_table_ptr;

	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;
	set_error = utilities_page_ptr.set_error;
	select_one = utilities_page_ptr.select_one;
	add_maint_cat = utilities_page_ptr.add_maint_cat;
	substitute = utilities_page_ptr.substitute;

	z = utilities_page_ptr.z;													-- table of tables in Module:Citation/CS1/Utilities
end


return {
	build_id_list = build_id_list,
	extract_ids = extract_ids,
	extract_id_access_levels = extract_id_access_levels,
	is_embargoed = is_embargoed;
	set_selected_modules = set_selected_modules;
	}</text>
      <sha1>bhgirhnotg5ivjt09o7i94bxtg9i1rp</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Utilities</title>
    <ns>828</ns>
    <id>48808487</id>
    <revision>
      <id>729837287</id>
      <parentid>699961606</parentid>
      <timestamp>2016-07-14T22:01:43Z</timestamp>
      <contributor>
        <username>Redrose64</username>
        <id>9612106</id>
      </contributor>
      <comment>this kind of markup is no longer allowed, and puts pages in [[Category:Pages using invalid self-closed HTML tags]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="11004">local u = {}

local z = {
	error_categories = {};														-- for categorizing citations that contain errors
	error_ids = {};
	message_tail = {};
	maintenance_cats = {};														-- for categorizing citations that aren't erroneous per se, but could use a little work
	properties_cats = {};														-- for categorizing citations based on certain properties, language of source for instance
};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local cfg;																		-- table of tables imported from slected Module:Citation/CS1/Configuration


--[[--------------------------&lt; I S _ S E T &gt;------------------------------------------------------------------

Returns true if argument is set; false otherwise. Argument is 'set' when it exists (not nil) or when it is not an empty string.
This function is global because it is called from both this module and from Date validation

]]
local function is_set( var )
	return not (var == nil or var == '');
end


--[[--------------------------&lt; I N _ A R R A Y &gt;--------------------------------------------------------------

Whether needle is in haystack

]]

local function in_array( needle, haystack )
	if needle == nil then
		return false;
	end
	for n,v in ipairs( haystack ) do
		if v == needle then
			return n;
		end
	end
	return false;
end


--[[--------------------------&lt; S U B S T I T U T E &gt;----------------------------------------------------------

Populates numbered arguments in a message string using an argument table.

]]

local function substitute( msg, args )
	return args and mw.message.newRawMessage( msg, args ):plain() or msg;
end


--[[--------------------------&lt; E R R O R _ C O M M E N T &gt;----------------------------------------------------

Wraps error messages with css markup according to the state of hidden.

]]
local function error_comment( content, hidden )
	return substitute( hidden and cfg.presentation['hidden-error'] or cfg.presentation['visible-error'], content );
end


--[[--------------------------&lt; S E T _ E R R O R &gt;--------------------------------------------------------------

Sets an error condition and returns the appropriate error message.  The actual placement of the error message in the output is
the responsibility of the calling function.

]]
local function set_error( error_id, arguments, raw, prefix, suffix )
	local error_state = cfg.error_conditions[ error_id ];
	
	prefix = prefix or &quot;&quot;;
	suffix = suffix or &quot;&quot;;
	
	if error_state == nil then
		error( cfg.messages['undefined_error'] );
	elseif is_set( error_state.category ) then
		table.insert( z.error_categories, error_state.category );
	end
	
	local message = substitute( error_state.message, arguments );
	
	message = message .. &quot; ([[&quot; .. cfg.messages['help page link'] .. 
		&quot;#&quot; .. error_state.anchor .. &quot;|&quot; ..
		cfg.messages['help page label'] .. &quot;]])&quot;;
	
	z.error_ids[ error_id ] = true;
	if in_array( error_id, { 'bare_url_missing_title', 'trans_missing_title' } )
			and z.error_ids['citation_missing_title'] then
		return '', false;
	end
	
	message = table.concat({ prefix, message, suffix });
	
	if raw == true then
		return message, error_state.hidden;
	end		
		
	return error_comment( message, error_state.hidden );
end


--[[-------------------------&lt; I S _ A L I A S _ U S E D &gt;-----------------------------------------------------

This function is used by select_one() to determine if one of a list of alias parameters is in the argument list
provided by the template.

Input:
	args  pointer to the arguments table from calling template
	alias  one of the list of possible aliases in the aliases lists from Module:Citation/CS1/Configuration
	index  for enumerated parameters, identifies which one
	enumerated  true/false flag used choose how enumerated aliases are examined
	value  value associated with an alias that has previously been selected; nil if not yet selected
	selected  the alias that has previously been selected; nil if not yet selected
	error_list  list of aliases that are duplicates of the alias already selected

Returns:
	value  value associated with alias we selected or that was previously selected or nil if an alias not yet selected
	selected  the alias we selected or the alias that was previously selected or nil if an alias not yet selected

]]

local function is_alias_used (args, alias, index, enumerated, value, selected, error_list)
	if enumerated then															-- is this a test for an enumerated parameters?
		alias = alias:gsub ('#', index);										-- replace '#' with the value in index
	else
		alias = alias:gsub ('#', '');											-- remove '#' if it exists
	end

	if is_set(args[alias]) then													-- alias is in the template's argument list
		if value ~= nil and selected ~= alias then								-- if we have already selected one of the aliases
			local skip;
			for _, v in ipairs(error_list) do									-- spin through the error list to see if we've added this alias
				if v == alias then
					skip = true;
					break;														-- has been added so stop looking 
				end
			end
			if not skip then													-- has not been added so
				table.insert( error_list, alias );								-- add error alias to the error list
			end
		else
			value = args[alias];												-- not yet selected an alias, so select this one
			selected = alias;
		end
	end
	return value, selected;														-- return newly selected alias, or previously selected alias
end


--[[--------------------------&lt; A D D _ M A I N T _ C A T &gt;------------------------------------------------------

Adds a category to z.maintenance_cats using names from the configuration file with additional text if any.
To prevent duplication, the added_maint_cats table lists the categories by key that have been added to z.maintenance_cats.

]]

local added_maint_cats = {}														-- list of maintenance categories that have been added to z.maintenance_cats
local function add_maint_cat (key, arguments)
	if not added_maint_cats [key] then
		added_maint_cats [key] = true;											-- note that we've added this category
		table.insert( z.maintenance_cats, substitute (cfg.maint_cats [key], arguments));	-- make name then add to table
	end
end


--[[--------------------------&lt; S A F E _ F O R _ I T A L I C S &gt;----------------------------------------------

Protects a string that will be wrapped in wiki italic markup '' ... ''

Note: We cannot use &lt;i&gt; for italics, as the expected behavior for italics specified by ''...'' in the title is that
they will be inverted (i.e. unitalicized) in the resulting references.  In addition, &lt;i&gt; and '' tend to interact
poorly under Mediawiki's HTML tidy.

]]

local function safe_for_italics( str )
	if not is_set(str) then
		return str;
	else
		if str:sub(1,1) == &quot;'&quot; then str = &quot;&lt;span&gt;&lt;/span&gt;&quot; .. str; end
		if str:sub(-1,-1) == &quot;'&quot; then str = str .. &quot;&lt;span&gt;&lt;/span&gt;&quot;; end
		
		-- Remove newlines as they break italics.
		return str:gsub( '\n', ' ' );
	end
end


--[[--------------------------&lt; W R A P _ S T Y L E &gt;----------------------------------------------------------

Applies styling to various parameters.  Supplied string is wrapped using a message_list configuration taking one
argument; protects italic styled parameters.  Additional text taken from citation_config.presentation - the reason
this function is similar to but separate from wrap_msg().

]]

local function wrap_style (key, str)
	if not is_set( str ) then
		return &quot;&quot;;
	elseif in_array( key, { 'italic-title', 'trans-italic-title' } ) then
		str = safe_for_italics( str );
	end

	return substitute( cfg.presentation[key], {str} );
end


--[[--------------------------&lt; S E L E C T _ O N E &gt;----------------------------------------------------------

Chooses one matching parameter from a list of parameters to consider.  The list of parameters to consider is just
names.  For parameters that may be enumerated, the position of the numerator in the parameter name is identified
by the '#' so |author-last1= and |author1-last= are represented as 'author-last#' and 'author#-last'.

Because enumerated parameter |&lt;param&gt;1= is an alias of |&lt;param&gt;= we must test for both possibilities.


Generates an error if more than one match is present.

]]

local function select_one( args, aliases_list, error_condition, index )
	local value = nil;															-- the value assigned to the selected parameter
	local selected = '';														-- the name of the parameter we have chosen
	local error_list = {};

	if index ~= nil then index = tostring(index); end

	for _, alias in ipairs( aliases_list ) do									-- for each alias in the aliases list
		if alias:match ('#') then												-- if this alias can be enumerated
			if '1' == index then												-- when index is 1 test for enumerated and non-enumerated aliases
				value, selected = is_alias_used (args, alias, index, false, value, selected, error_list);	-- first test for non-enumerated alias
			end
			value, selected = is_alias_used (args, alias, index, true, value, selected, error_list);		-- test for enumerated alias
		else
			value, selected = is_alias_used (args, alias, index, false, value, selected, error_list);		--test for non-enumerated alias
		end
	end

	if #error_list &gt; 0 and 'none' ~= error_condition then						-- for cases where this code is used outside of extract_names()
		local error_str = &quot;&quot;;
		for _, k in ipairs( error_list ) do
			if error_str ~= &quot;&quot; then error_str = error_str .. cfg.messages['parameter-separator'] end
			error_str = error_str .. wrap_style ('parameter', k);
		end
		if #error_list &gt; 1 then
			error_str = error_str .. cfg.messages['parameter-final-separator'];
		else
			error_str = error_str .. cfg.messages['parameter-pair-separator'];
		end
		error_str = error_str .. wrap_style ('parameter', selected);
		table.insert( z.message_tail, { set_error( error_condition, {error_str}, true ) } );
	end
	
	return value, selected;
end


--[=[-------------------------&lt; R E M O V E _ W I K I _ L I N K &gt;----------------------------------------------

Gets the display text from a wikilink like [[A|B]] or [[B]] gives B

]=]

local function remove_wiki_link (str)
	return (str:gsub( &quot;%[%[([^%[%]]*)%]%]&quot;, function(l)
		return l:gsub( &quot;^[^|]*|(.*)$&quot;, &quot;%1&quot; ):gsub(&quot;^%s*(.-)%s*$&quot;, &quot;%1&quot;);
	end));
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr)
	cfg = cfg_table_ptr;
end



return {																		-- return exported functions and tables
	is_set = is_set,
	in_array = in_array,
	substitute = substitute,
	error_comment = error_comment,
	set_error = set_error,
	select_one = select_one,
	add_maint_cat = add_maint_cat,
	wrap_style = wrap_style;
	safe_for_italics = safe_for_italics;
	remove_wiki_link = remove_wiki_link;
	set_selected_modules = set_selected_modules;
	z = z,
	}</text>
      <sha1>pvch8640xcg83okjfikzjpcsn9567i3</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Whitelist</title>
    <ns>828</ns>
    <id>39013723</id>
    <revision>
      <id>777956977</id>
      <parentid>777799226</parentid>
      <timestamp>2017-04-30T09:19:28Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>unsupport |ARXIV= and |BIBCODE=;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="18820">
--[[--------------------------&lt; P A R A M E T E R S   N O T   S U P P O R T E D &gt;------------------------------

This is a list of parameters that once were but now are no longer supported:

	['albumlink'] = nil,			-- unique alias of titlelink used by old cite AV media notes
	['albumtype'] = nil,			-- controled inappropriate functionality in the old cite AV media notes
	['artist'] = nil,				-- unique alias of others used by old cite AV media notes
	['ARXIV'] = nil,				-- not an initialization
	['Author'] = nil,				-- non-standard capitalization
	['authorformat'] = nil,			-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-format'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-name-separator'] = nil,-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['began'] = nil,				-- module handles date ranges; cite episode and cite series
	['BIBCODE'] = nil,				-- not an initialization
	['callsign'] = nil,				-- cite interview removed
	['call-sign'] = nil,			-- cite interview removed
	['chapterlink'] = nil,			-- if ever necessary to link to a chapter article, |chapter= can be wikilinked 
	['chapter-link'] = nil,			-- 
	['city'] = nil,					-- cite interview removed
	['coauthor'] = nil,				-- redundant to |authorn=; not made part of metadata
	['coauthors'] = nil,			-- redundant to |authorn=; not made part of metadata
	['cointerviewers'] = nil,		-- unique alias of others used by old cite interview
	['day'] = nil,					-- deprecated in {{citation/core}} and somehow undeprecated in Module:Citation/CS1 and now finally removed
	['director'] = nil,				-- unique alias of author used by old cite DVD-notes
	['DoiBroken'] = nil,			-- not used, non-standard captialization
	['Editor'] = nil,				-- non-standard capitalization
	['editorformat'] = nil,			-- primarily used to support Vancouver format which functionality now part of name-list-format
	['EditorSurname'] = nil,		-- non-standard capitalization
	['editor-format'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['EditorGiven'] = nil,			-- non-standard capitalization
	['editor-name-separator'] = nil,-- primarily used to support Vancouver format which functionality now part of name-list-format
	['editor-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['Embargo'] = nil,				-- not used, non-standard capitalization
	['ended'] = nil,				-- module handles date ranges; cite episode and cite series
	['month'] = nil,				-- functionality supported by |date=
	['name-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['notestitle'] = nil,			-- unique alias of chapter used by old cite AV media notes
	['PPrefix'] = nil,				-- non-standard capitalization
	['PPPrefix'] = nil,				-- not used, non-standard capitalization
	['pp-prefix'] = nil,			-- not used, not documented
	['p-prefix'] = nil,				-- not used, not documented
	['program'] = nil,				-- cite interview removed
	['publisherid'] = nil,			-- unique alias of id used by old cite AV media notes and old cite DVD-notes
	['Ref'] = nil,					-- non-standard capitalization
	['separator'] = nil,			-- this functionality now provided by |mode=
	['titleyear'] = nil,			-- unique alias of origyear used by old cite DVD-notes

	['Author#'] = nil,				-- non-standard capitalization
	['authors#'] = nil,				-- no need for multiple lists of author names
	['Editor#'] = nil,				-- non-standard capitalization
	['editors#'] = nil,				-- no need for multiple lists of editor names
	['EditorGiven#'] = nil,			-- non-standard capitalization
	['EditorSurname#'] = nil,		-- non-standard capitalization

]]

--[[--------------------------&lt; S U P P O R T E D   P A R A M E T E R S &gt;--------------------------------------

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local whitelist = {}

local basic_arguments = {
	['accessdate'] = true,
	['access-date'] = true,
	['agency'] = true,
	['airdate'] = true,
	['air-date'] = true,
	['archivedate'] = true,
	['archive-date'] = true,
	['archive-format'] = true,
	['archiveurl'] = true,
	['archive-url'] = true,
	['article'] = true,
	['arxiv'] = true,
	['asin'] = true,
	['ASIN'] = true,
	['asin-tld'] = true,
	['ASIN-TLD'] = true,
	['at'] = true,
	['author'] = true,
	['author-first'] = true,
	['author-last'] = true,
	['authorlink'] = true,
	['author-link'] = true,
	['authormask'] = true,
	['author-mask'] = true,
	['authors'] = true,
	['bibcode'] = true,
	['bibcode-access'] = true,
	['biorxiv'] = true,
	['booktitle'] = true,
	['book-title'] = true,
	['cartography'] = true,
	['chapter'] = true,
	['chapter-format'] = true,
	['chapterurl'] = true,
	['chapter-url'] = true,
	['citeseerx'] = true,
	['class'] = true,				-- cite arxiv and arxiv identifiers
	['collaboration'] = true,
	['conference'] = true,
	['conference-format'] = true,
	['conferenceurl'] = true,
	['conference-url'] = true,
	['contribution'] = true,
	['contribution-format'] = true,
	['contributionurl'] = true,
	['contribution-url'] = true,
	['contributor'] = true,
	['contributor-first'] = true,
	['contributor-last'] = true,
	['contributor-given'] = true,
	['contributor-surname'] = true,
	['contributor-link'] = true,
	['contributor-mask'] = true,
	['credits'] = true,				-- cite episode, cite serial
	['date'] = true,
	['deadurl'] = true,
	['dead-url'] = true,
	['degree'] = true,
	['department'] = true,
	['df'] = true,
	['dictionary'] = true,
	['displayauthors'] = true,
	['display-authors'] = true,
	['displayeditors'] = true,
	['display-editors'] = true,
	['docket'] = true,
	['doi'] = true,
	['DOI'] = true,
	['doi-access'] = true,
	['doi-broken'] = true,
	['doi_brokendate'] = true,					-- @TODO deprecate underscore version?
	['doi-broken-date'] = true,
	['doi_inactivedate'] = true,				-- @TODO deprecate underscore version?
	['doi-inactive-date'] = true,
	['edition'] = true,
	['editor'] = true,
	['editor-first'] = true,
	['editor-given'] = true,
	['editor-last'] = true,
	['editorlink'] = true,
	['editor-link'] = true,
	['editormask'] = true,
	['editor-mask'] = true,
	['editors'] = true,
	['editor-surname'] = true,
	['eissn'] = true,
	['EISSN'] = true,
	['embargo'] = true,
	['encyclopaedia'] = true,
	['encyclopedia'] = true,
	['entry'] = true,
	['episode'] = true,															-- cite serial only TODO: make available to cite episode?
	['episodelink'] = true,														-- cite episode and cite serial
	['episode-link'] = true,													-- cite episode and cite serial
	['eprint'] = true,															-- cite arxiv and arxiv identifiers
	['event'] = true,
	['event-format'] = true,
	['eventurl'] = true,
	['event-url'] = true,
	['first'] = true,
	['format'] = true,
	['given'] = true,
	['hdl'] = true,
	['HDL'] = true,
	['hdl-access'] = true,
	['host'] = true,
	['id'] = true,
	['ID'] = true,
	['ignoreisbnerror'] = true,
	['ignore-isbn-error'] = true,
	['in'] = true,
	['inset'] = true,
	['institution'] = true,
	['interviewer'] = true,
	['interviewer-first'] = true,
	['interviewer-last'] = true,
	['interviewerlink'] = true,
	['interviewer-link'] = true,
	['interviewermask'] = true,
	['interviewer-mask'] = true,
	['interviewers'] = true,
	['isbn'] = true,
	['ISBN'] = true,
	['isbn13'] = true,
	['ISBN13'] = true,
	['ismn'] = true,
	['ISMN'] = true,
	['issn'] = true,
	['ISSN'] = true,
	['issue'] = true,
	['jfm'] = true,
	['JFM'] = true,
	['journal'] = true,
	['jstor'] = true,
	['JSTOR'] = true,
	['jstor-access'] = true,
	['language'] = true,
	['last'] = true,
	['lastauthoramp'] = true,
	['last-author-amp'] = true,
	['laydate'] = true,
	['lay-date'] = true,
	['laysource'] = true,
	['lay-source'] = true,
	['laysummary'] = true,
	['lay-summary'] = true,
	['lay-format'] = true,
	['layurl'] = true,
	['lay-url'] = true,
	['lccn'] = true,
	['LCCN'] = true,
	['location'] = true,
	['magazine'] = true,
	['mailinglist'] = true,				-- cite mailing list only
	['mailing-list'] = true,			-- cite mailing list only
	['map'] = true,						-- cite map only
	['map-format'] = true,				-- cite map only
	['mapurl'] = true,					-- cite map only
	['map-url'] = true,					-- cite map only
	['medium'] = true,
	['message-id'] = true,			-- cite newsgroup
	['minutes'] = true,
	['mode'] = true,
	['mr'] = true,
	['MR'] = true,
	['name-list-format'] = true,
	['network'] = true,
	['newsgroup'] = true,
	['newspaper'] = true,
	['nocat'] = true,
	['no-cat'] = true,
	['nopp'] = true,
	['no-pp'] = true,
	['notracking'] = true,
	['no-tracking'] = true,
	['number'] = true,
	['oclc'] = true,
	['OCLC'] = true,
	['ol'] = true,
	['OL'] = true,
	['ol-access'] = true,
	['origyear'] = true,
	['orig-year'] = true,
	['osti'] = true,
	['OSTI'] = true,
	['osti-access'] = true,
	['others'] = true,
	['p'] = true,
	['page'] = true,
	['pages'] = true,
	['people'] = true,
	['periodical'] = true,
	['place'] = true,
	['pmc'] = true,
	['PMC'] = true,
	['pmid'] = true,
	['PMID'] = true,
	['postscript'] = true,
	['pp'] = true,
	['publicationdate'] = true,
	['publication-date'] = true,
	['publicationplace'] = true,
	['publication-place'] = true,
	['publisher'] = true,
	['quotation'] = true,
	['quote'] = true,
	['ref'] = true,
	['registration'] = true,
	['rfc'] = true,
	['RFC'] = true,
	['scale'] = true,
	['script-chapter'] = true,
	['script-title'] = true,
	['season'] = true,
	['section'] = true,
	['section-format'] = true,
	['sections'] = true,					-- cite map only
	['sectionurl'] = true,
	['section-url'] = true,
	['series'] = true,
	['serieslink'] = true,
	['series-link'] = true,
	['seriesno'] = true,
	['series-no'] = true,
	['seriesnumber'] = true,
	['series-number'] = true,
	['series-separator'] = true,
	['sheet'] = true,															-- cite map only
	['sheets'] = true,															-- cite map only
	['ssrn'] = true,
	['SSRN'] = true,
	['station'] = true,
	['subject'] = true,
	['subjectlink'] = true,
	['subject-link'] = true,
	['subscription'] = true,
	['surname'] = true,
	['template doc demo'] = true,
	['template-doc-demo'] = true,
	['time'] = true,
	['timecaption'] = true,
	['time-caption'] = true,
	['title'] = true,
	['titlelink'] = true,
	['title-link'] = true,
	['trans_chapter'] = true,
	['trans-chapter'] = true,
	['trans-map'] = true,
	['transcript'] = true,
	['transcript-format'] = true,
	['transcripturl'] = true,
	['transcript-url'] = true,
	['trans_title'] = true,
	['trans-title'] = true,
	['translator'] = true,
	['translator-first'] = true,
	['translator-last'] = true,
	['translator-given'] = true,
	['translator-surname'] = true,
	['translator-link'] = true,
	['translator-mask'] = true,
	['type'] = true,
	['url'] = true,
	['URL'] = true,
	['url-access'] = true,
	['vauthors'] = true,
	['veditors'] = true,
	['version'] = true,
	['via'] = true,
	['volume'] = true,
	['website'] = true,
	['work'] = true,
	['year'] = true,
	['zbl'] = true,
	['ZBL'] = true,
}

local numbered_arguments = {
	['author#'] = true,
	['author-first#'] = true,
	['author#-first'] = true,
	['author-last#'] = true,
	['author#-last'] = true,
	['author-link#'] = true,
	['author#link'] = true,
	['author#-link'] = true,
	['authorlink#'] = true,
	['author-mask#'] = true,
	['author#mask'] = true,
	['author#-mask'] = true,
	['authormask#'] = true,
	['contributor#'] = true,
	['contributor-first#'] = true,
	['contributor#-first'] = true,
	['contributor-last#'] = true,
	['contributor#-last'] = true,
	['contributor-given#'] = true,
	['contributor#-given'] = true,
	['contributor-surname#'] = true,
	['contributor#-surname'] = true,
	['contributor-link#'] = true,
	['contributor#-link'] = true,
	['contributor-mask#'] = true,
	['contributor#-mask'] = true,
	['editor#'] = true,
	['editor-first#'] = true,
	['editor#-first'] = true,
	['editor#-given'] = true,
	['editor-given#'] = true,
	['editor-last#'] = true,
	['editor#-last'] = true,
	['editor-link#'] = true,
	['editor#link'] = true,
	['editor#-link'] = true,
	['editorlink#'] = true,
	['editor-mask#'] = true,
	['editor#mask'] = true,
	['editor#-mask'] = true,
	['editormask#'] = true,
	['editor#-surname'] = true,
	['editor-surname#'] = true,
	['first#'] = true,
	['given#'] = true,
	['interviewer#'] = true,
	['interviewer-first#'] = true,
	['interviewer#-first'] = true,
	['interviewer-last#'] = true,
	['interviewer#-last'] = true,
	['interviewer-link#'] = true,
	['interviewer#-link'] = true,
	['interviewer-mask#'] = true,
	['interviewer#-mask'] = true,
	['last#'] = true,
	['subject#'] = true,
	['subject-link#'] = true,
	['subject#link'] = true,
	['subject#-link'] = true,
	['subjectlink#'] = true,
	['surname#'] = true,
	['translator#'] = true,
	['translator-first#'] = true,
	['translator#-first'] = true,
	['translator-last#'] = true,
	['translator#-last'] = true,
	['translator-given#'] = true,
	['translator#-given'] = true,
	['translator-surname#'] = true,
	['translator#-surname'] = true,
	['translator-link#'] = true,
	['translator#-link'] = true,
	['translator-mask#'] = true,
	['translator#-mask'] = true,
}

--[[--------------------------&lt; C I T E   A R X I V   S U P P O R T E D   P A R A M E T E R S &gt;----------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite arxiv template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

--[[
This is a list of parameters that once were but now are no longer supported:
	['ARXIV'] = nil,				-- not an initialization
	['version'] = nil,				-- this is the cite arxiv parameter; |version= still supported by other cs1|2 templates

]]

local arxiv_basic_arguments = {
	['arxiv'] = true,
	['class'] = true,															-- cite arxiv and arxiv identifiers
	['eprint'] = true,															-- cite arxiv and arxiv identifiers
}


--[[--------------------------&lt; C I T E   B I O R X I V   S U P P O R T E D   P A R A M E T E R S &gt;------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite biorxiv template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local biorxiv_basic_arguments = {
	['biorxiv'] = true,
}


--[[--------------------------&lt; C I T E   C I T E S E E R X   S U P P O R T E D   P A R A M E T E R S &gt;--------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite citeseerx template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local citeseerx_basic_arguments = {
	['citeseerx'] = true,
}


--[[--------------------------&lt; L I M I T E D   S U P P O R T E D   P A R A M E T E R S &gt;----------------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite arxiv, cite biorxiv, or cite citeseerx templates.  These parameters are common to
all three templates

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local limited_basic_arguments = {
	['at'] = true,
	['author'] = true,
	['author-first'] = true,
	['author-last'] = true,
	['authorlink'] = true,
	['author-link'] = true,
	['authormask'] = true,
	['author-mask'] = true,
	['authors'] = true,
	['collaboration'] = true,
	['date'] = true,
	['df'] = true,
	['display-authors'] = true,
	['first'] = true,
	['given'] = true,
	['language'] = true,
	['last'] = true,
	['lastauthoramp'] = true,
	['last-author-amp'] = true,
	['mode'] = true,
	['name-list-format'] = true,
	['nocat'] = true,
	['no-cat'] = true,
	['notracking'] = true,
	['no-tracking'] = true,
	['p'] = true,
	['page'] = true,
	['pages'] = true,
	['postscript'] = true,
	['pp'] = true,
	['quotation'] = true,
	['quote'] = true,
	['ref'] = true,
	['surname'] = true,
	['template doc demo'] = true,
	['template-doc-demo'] = true,
	['title'] = true,
	['url'] = true,
	['URL'] = true,
	['vauthors'] = true,
	['year'] = true,
}
local limited_numbered_arguments = {
	['author#'] = true,
	['author-first#'] = true,
	['author#-first'] = true,
	['author-last#'] = true,
	['author#-last'] = true,
	['author-link#'] = true,
	['author#link'] = true,
	['author#-link'] = true,
	['authorlink#'] = true,
	['author-mask#'] = true,
	['author#mask'] = true,
	['author#-mask'] = true,
	['authormask#'] = true,
	['first#'] = true,
	['given#'] = true,
	['last#'] = true,
	['surname#'] = true,
}

return {
	basic_arguments = basic_arguments,
	numbered_arguments = numbered_arguments,
	limited_basic_arguments = limited_basic_arguments,
	limited_numbered_arguments = limited_numbered_arguments,
	arxiv_basic_arguments = arxiv_basic_arguments,
	biorxiv_basic_arguments = biorxiv_basic_arguments,
	citeseerx_basic_arguments = citeseerx_basic_arguments
};</text>
      <sha1>jofaptxmpph8fnllpe14li5b6y100zo</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Collapsible list</title>
    <ns>828</ns>
    <id>39933886</id>
    <revision>
      <id>581779143</id>
      <parentid>563807666</parentid>
      <timestamp>2013-11-15T15:10:01Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Module:Collapsible list: [[Wikipedia:Lua/Modules|High-risk Lua module]]: allow template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3354">-- This module implements {{collapsible list}}.

local p = {}

local function getListItem( data )
    if not type( data ) == 'string' then
        return ''
    end
    return mw.ustring.format( '&lt;li style=&quot;line-height: inherit; margin: 0&quot;&gt;%s&lt;/li&gt;', data )
end

-- Returns an array containing the keys of all positional arguments
-- that contain data (i.e. non-whitespace values).
local function getArgNums( args )
    local nums = {}
    for k, v in pairs( args ) do
        if type( k ) == 'number' and
            k &gt;= 1 and
            math.floor( k ) == k and
            type( v ) == 'string' and
            mw.ustring.match( v, '%S' ) then
                table.insert( nums, k )
        end
    end
    table.sort( nums )
    return nums
end

-- Formats a list of classes, styles or other attributes.
local function formatAttributes( attrType, ... )
    local attributes = { ... }
    local nums = getArgNums( attributes )
    local t = {}
    for i, num in ipairs( nums ) do
        table.insert( t, attributes[ num ] )
    end
    if #t == 0 then
        return '' -- Return the blank string so concatenation will work.
    end
    return mw.ustring.format( ' %s=&quot;%s&quot;', attrType, table.concat( t, ' ' ) )
end

local function buildList( args )
    -- Get the list items.
    local listItems = {}
    local argNums = getArgNums( args )
    for i, num in ipairs( argNums ) do
        table.insert( listItems, getListItem( args[ num ] ) )
    end
    if #listItems == 0 then
        return ''
    end
    listItems = table.concat( listItems )
    
    -- Get class, style and title data.
    local div1class = formatAttributes( 'class', 'NavFrame', not args.expand and 'collapsed' )
    local div1style = formatAttributes(
        'style',
        args.frame_style,
        args.framestyle,
        not ( args.frame_style or args.framestyle ) and 'border: none; padding: 0;'
    )
    local div2class = formatAttributes( 'class', 'NavHead' )
    local div2style = formatAttributes(
        'style',
        'font-size: 105%;',
        args.title_style,
        args.titlestyle,
        not ( args.title_style or args.titlestyle ) and 'background: transparent; text-align: left;'
    )
    local title = args.title or 'List'
    local ulclass = formatAttributes( 'class', 'NavContent', args.hlist and 'hlist' )
    local ulstyle = formatAttributes( 
        'style',
        not args.bullets and 'list-style: none none; margin-left: 0;',
        args.list_style,
        args.liststyle,
        not ( args.list_style or args.liststyle ) and 'text-align: left;',
        'font-size: 105%; margin-top: 0; margin-bottom: 0; line-height: inherit;'
    )
    
    -- Build the list.
    return mw.ustring.format( 
        '&lt;div%s%s&gt;\n&lt;div%s%s&gt;%s&lt;/div&gt;\n&lt;ul%s%s&gt;%s&lt;/ul&gt;\n&lt;/div&gt;',
        div1class, div1style, div2class, div2style, title, ulclass, ulstyle, listItems
    )
end

function p.main( frame )
    local origArgs
    if frame == mw.getCurrentFrame() then
        origArgs = frame:getParent().args
        for k, v in pairs( frame.args ) do
            origArgs = frame.args
            break
        end
    else
        origArgs = frame
    end
    
    local args = {}
    for k, v in pairs( origArgs ) do
        if type( k ) == 'number' or v ~= '' then
            args[ k ] = v
        end
    end
    return buildList( args )
end

return p</text>
      <sha1>5zj2jtxt2eon9yxskfbmu6e9r9r3rpd</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert</title>
    <ns>828</ns>
    <id>38570716</id>
    <revision>
      <id>795876376</id>
      <parentid>788386378</parentid>
      <timestamp>2017-08-17T01:39:24Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="133739">-- Convert a value from one unit of measurement to another.
-- Example: {{convert|123|lb|kg}} --&gt; 123 pounds (56 kg)
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.

local MINUS = ''  -- Unicode U+2212 MINUS SIGN (UTF-8: e2 88 92)
local abs = math.abs
local floor = math.floor
local format = string.format
local log10 = math.log10
local ustring = mw.ustring
local ulen = ustring.len
local usub = ustring.sub

-- Configuration options to keep magic values in one location.
-- Conversion data and message text are defined in separate modules.
local config, maxsigfig
local numdot  -- must be '.' or ',' or a character which works in a regex
local numsep, numsep_remove, numsep_remove2
local data_code, all_units
local text_code
local varname        -- can be a code to use variable names that depend on value
local from_en_table  -- to translate an output string of en digits to local language
local to_en_table    -- to translate an input string of digits in local language to en
-- Use translation_table in convert/text to change the following.
local en_default           -- true uses lang=en unless convert has lang=local or local digits
local group_method = 3     -- code for how many digits are in a group
local per_word = 'per'     -- for units like &quot;liters per kilometer&quot;
local plural_suffix = 's'  -- only other useful value is probably '' to disable plural unit names
local omitsep              -- true to omit separator before local symbol/name

-- All units should be defined in the data module. However, to cater for quick changes
-- and experiments, any unknown unit is looked up in an extra data module, if it exists.
-- That module would be transcluded in only a small number of pages, so there should be
-- little server overhead from making changes, and changes should propagate quickly.
local extra_module  -- name of module with extra units
local extra_units   -- nil or table of extra units from extra_module

-- Some options in the invoking template can set variables used later in the module.
local currency_text  -- for a user-defined currency symbol: {{convert|12|$/ha|$=}} (euro replaces dollar)

local function from_en(text)
	-- Input is a string representing a number in en digits with '.' decimal mark,
	-- without digit grouping (which is done just after calling this).
	-- Return the translation of the string with numdot and digits in local language.
	if numdot ~= '.' then
		text = text:gsub('%.', numdot)
	end
	if from_en_table then
		text = text:gsub('%d', from_en_table)
	end
	return text
end

local function to_en(text)
	-- Input is a string representing a number in the local language with
	-- an optional numdot decimal mark and numsep digit grouping.
	-- Return the translation of the string with '.' mark and en digits,
	-- and no separators (they have to be removed here to handle cases like
	-- numsep = '.' and numdot = ',' with input &quot;1.234.567,8&quot;).
	if to_en_table then
		text = ustring.gsub(text, '%d', to_en_table)
	end
	if numsep_remove then
		text = text:gsub(numsep_remove, '')
	end
	if numsep_remove2 then
		text = text:gsub(numsep_remove2, '')
	end
	if numdot ~= '.' then
		text = text:gsub(numdot, '.')
	end
	return text
end

local function decimal_mark(text)
	-- Return ',' if text probably is using comma for decimal mark, or has no decimal mark.
	-- Return '.' if text probably is using dot for decimal mark.
	-- Otherwise return nothing (decimal mark not known).
	if not text:find('[.,]') then return ',' end
	text = text:gsub('^%-', ''):gsub('%+%d+/%d+$', ''):gsub('[Ee]%-?%d+$', '')
	local decimal =
		text:match('^0?([.,])%d+$') or
		text:match('%d([.,])%d?%d?$') or
		text:match('%d([.,])%d%d%d%d+$')
	if decimal then return decimal end
	if text:match('%.%d+%.') then return ',' end
	if text:match('%,%d+,') then return '.' end
end

local add_warning, with_separator  -- forward declarations
local function to_en_with_check(text, parms)
	-- Version of to_en() for a wiki using numdot = ',' and numsep = '.' to check
	-- text (an input number as a string) which might have been copied from enwiki.
	-- For example, in '1.234' the '.' could be a decimal mark or a group separator.
	-- From viwiki.
	if to_en_table then
		text = ustring.gsub(text, '%d', to_en_table)
	end
	if decimal_mark(text) == '.' then
		local original = text
		text = text:gsub(',', '')  -- for example, interpret &quot;1,234.5&quot; as an enwiki value
		if parms then
			add_warning(parms, 0, 'cvt_enwiki_num', original, with_separator({}, text))
		end
	else
		if numsep_remove then
			text = text:gsub(numsep_remove, '')
		end
		if numsep_remove2 then
			text = text:gsub(numsep_remove2, '')
		end
		if numdot ~= '.' then
			text = text:gsub(numdot, '.')
		end
	end
	return text
end

local function omit_separator(id)
	-- Return true if there should be no separator before id (a unit symbol or name).
	-- For zhwiki, there should be no separator if id uses local characters.
	-- The following kludge should be a sufficient test.
	if omitsep then
		if id:sub(1, 2) == '-{' then  -- for &quot;-{...}-&quot; content language variant
			return true
		end
		if id:byte() &gt; 127 then
			local first = usub(id, 1, 1)
			if first ~= '' and first ~= '' and first ~= '' then
				return true
			end
		end
	end
	return id:sub(1, 1) == '/'  -- no separator before units like &quot;/ha&quot;
end

local spell_module  -- name of module that can spell numbers
local speller       -- function from that module to handle spelling (set if needed)
local wikidata_module, wikidata_data_module  -- names of Wikidata modules
local wikidata_code, wikidata_data  -- exported tables from those modules (set if needed)

local function set_config(args)
	-- Set configuration options from template #invoke or defaults.
	config = args
	maxsigfig = config.maxsigfig or 14  -- maximum number of significant figures
	local data_module, text_module
	local sandbox = config.sandbox and ('/' .. config.sandbox) or ''
	data_module = &quot;Module:Convert/data&quot; .. sandbox
	text_module = &quot;Module:Convert/text&quot; .. sandbox
	extra_module = &quot;Module:Convert/extra&quot; .. sandbox
	wikidata_module = &quot;Module:Convert/wikidata&quot; .. sandbox
	wikidata_data_module = &quot;Module:Convert/wikidata/data&quot; .. sandbox
	spell_module = &quot;Module:ConvertNumeric&quot;
	data_code = mw.loadData(data_module)
	text_code = mw.loadData(text_module)
	all_units = data_code.all_units
	local translation = text_code.translation_table
	if translation then
		numdot = translation.numdot
		numsep = translation.numsep
		if numdot == ',' and numsep == '.' then
			if text_code.all_messages.cvt_enwiki_num then
				to_en = to_en_with_check
			end
		end
		if translation.group then
			group_method = translation.group
		end
		if translation.per_word then
			per_word = translation.per_word
		end
		if translation.plural_suffix then
			plural_suffix = translation.plural_suffix
		end
		varname = translation.varname
		from_en_table = translation.from_en
		local use_workaround = true
		if use_workaround then
			-- 2013-07-05 workaround bug by making a copy of the required table.
			-- mw.ustring.gsub fails with a table (to_en_table) as the replacement,
			-- if the table is accessed via mw.loadData.
			local source = translation.to_en
			if source then
				to_en_table = {}
				for k, v in pairs(source) do
					to_en_table[k] = v
				end
			end
		else
			to_en_table = translation.to_en
		end
		if translation.lang == 'en default' then
			en_default = true  -- for hiwiki
		end
		omitsep = translation.omitsep  -- for zhwiki
	end
	numdot = config.numdot or numdot or '.'  -- decimal mark before fractional digits
	numsep = config.numsep or numsep or ','  -- group separator for numbers
	-- numsep should be ',' or '.' or '' or '&amp;nbsp;' or a Unicode character.
	-- numsep_remove must work in a regex to identify separators to be removed.
	if numsep ~= '' then
		numsep_remove = (numsep == '.') and '%.' or numsep
	end
	if numsep ~= ',' and numdot ~= ',' then
		numsep_remove2 = ','  -- so numbers copied from enwiki will work
	end
end

local function collection()
	-- Return a table to hold items.
	return {
		n = 0,
		add = function (self, item)
			self.n = self.n + 1
			self[self.n] = item
		end,
	}
end

local function divide(numerator, denominator)
	-- Return integers quotient, remainder resulting from dividing the two
	-- given numbers, which should be unsigned integers.
	local quotient, remainder = floor(numerator / denominator), numerator % denominator
	if not (0 &lt;= remainder and remainder &lt; denominator) then
		-- Floating point limits may need this, as in {{convert|160.02|Ym|ydftin}}.
		remainder = 0
	end
	return quotient, remainder
end

local function split(text, delimiter)
	-- Return a numbered table with fields from splitting text.
	-- The delimiter is used in a regex without escaping (for example, '.' would fail).
	-- Each field has any leading/trailing whitespace removed.
	local t = {}
	text = text .. delimiter  -- to get last item
	for item in text:gmatch('%s*(.-)%s*' .. delimiter) do
		table.insert(t, item)
	end
	return t
end

local function strip(text)
	-- If text is a string, return its content with no leading/trailing
	-- whitespace. Otherwise return nil (a nil argument gives a nil result).
	if type(text) == 'string' then
		return text:match(&quot;^%s*(.-)%s*$&quot;)
	end
end

local function table_len(t)
	-- Return length (&lt;100) of a numbered table to replace #t which is
	-- documented to not work if t is accessed via mw.loadData().
	for i = 1, 100 do
		if t[i] == nil then
			return i - 1
		end
	end
end

local function wanted_category(catkey, catsort, want_warning)
	-- Return message category if it is wanted in current namespace,
	-- otherwise return ''.
	local cat
	local title = mw.title.getCurrentTitle()
	if title then
		local nsdefault = '0'  -- default namespace: '0' = article; '0,10' = article and template
		local namespace = title.namespace
		for _, v in ipairs(split(config.nscat or nsdefault, ',')) do
			if namespace == tonumber(v) then
				cat = text_code.all_categories[want_warning and 'warning' or catkey]
				if catsort and catsort ~= '' and cat:sub(-2) == ']]' then
					cat = cat:sub(1, -3) .. '|' .. mw.text.nowiki(usub(catsort, 1, 20)) .. ']]'
				end
				break
			end
		end
	end
	return cat or ''
end

local function message(parms, mcode, is_warning)
	-- Return wikitext for an error message, including category if specified
	-- for the message type.
	-- mcode = numbered table specifying the message:
	--    mcode[1] = 'cvt_xxx' (string used as a key to get message info)
	--    mcode[2] = 'parm1' (string to replace '$1' if any in message)
	--    mcode[3] = 'parm2' (string to replace '$2' if any in message)
	--    mcode[4] = 'parm3' (string to replace '$3' if any in message)
	local msg
	if type(mcode) == 'table' then
		if mcode[1] == 'cvt_no_output' then
			-- Some errors should cause convert to output an empty string,
			-- for example, for an optional field in an infobox.
			return ''
		end
		msg = text_code.all_messages[mcode[1]]
	end
	parms.have_problem = true
	local function subparm(fmt, ...)
		local rep = {}
		for i, v in ipairs({...}) do
			rep['$' .. i] = v
		end
		return (fmt:gsub('$%d+', rep))
	end
	if msg then
		local parts = {}
		local regex, replace = msg.regex, msg.replace
		for i = 1, 3 do
			local limit = 40
			local s = mcode[i + 1]
			if s then
				if regex and replace then
					s = s:gsub(regex, replace)
					limit = nil  -- allow long &quot;should be&quot; messages
				end
				-- Escape user input so it does not break the message.
				-- To avoid tags (like {{convert|1&lt;math&gt;23&lt;/math&gt;|m}}) breaking
				-- the mouseover title, any strip marker starting with char(127) is
				-- replaced with '...' (text not needing i18n).
				local append
				local pos = s:find(string.char(127), 1, true)
				if pos then
					append = '...'
					s = s:sub(1, pos - 1)
				end
				if limit and ulen(s) &gt; limit then
					s = usub(s, 1, limit)
					append = '...'
				end
				s = mw.text.nowiki(s) .. (append or '')
			else
				s = '?'
			end
			parts['$' .. i] = s
		end
		local function ispreview()
			-- Return true if a prominent message should be shown.
			if parms.test == 'preview' or parms.test == 'nopreview' then
				-- For testing, can preview a real message or simulate a preview
				-- when running automated tests.
				return parms.test == 'preview'
			end
			local success, revid = pcall(function ()
				return (parms.frame):preprocess('{{REVISIONID}}') end)
			return success and (revid == '')
		end
		local want_warning = is_warning and
			not config.warnings and  -- show unobtrusive warnings if config.warnings not configured
			not msg.nowarn           -- but use msg settings, not standard warning, if specified
		local title = string.gsub(msg[1] or 'Missing message', '$%d+', parts)
		local text = want_warning and '*' or msg[2] or 'Missing message'
		local cat = wanted_category(msg[3], mcode[2], want_warning)
		local anchor = msg[4] or ''
		local fmtkey = ispreview() and 'cvt_format_preview' or
			(want_warning and 'cvt_format2' or msg.format or 'cvt_format')
		local fmt = text_code.all_messages[fmtkey] or 'convert: bug'
		return subparm(fmt, title:gsub('&quot;', '&amp;quot;'), text, cat, anchor)
	end
	return 'Convert internal error: unknown message'
end

function add_warning(parms, level, key, text1, text2)  -- for forward declaration above
	-- If enabled, add a warning that will be displayed after the convert result.
	-- A higher level is more verbose: more kinds of warnings are displayed.
	-- To reduce output noise, only the first warning is displayed.
	if level &lt;= (tonumber(config.warnings) or 1) then
		if parms.warnings == nil then
			parms.warnings = message(parms, { key, text1, text2 }, true)
		end
	end
end

local function spell_number(parms, inout, number, numerator, denominator)
	-- Return result of spelling (number, numerator, denominator), or
	-- return nil if spelling is not available or not supported for given text.
	-- Examples (each value must be a string or nil):
	--   number  numerator  denominator  output
	--   ------  ---------  -----------  -------------------
	--   &quot;1.23&quot;    nil        nil        one point two three
	--    &quot;1&quot;      &quot;2&quot;        &quot;3&quot;        one and two thirds
	--    nil      &quot;2&quot;        &quot;3&quot;        two thirds
	if not speller then
		local function get_speller(module)
			return require(module).spell_number
		end
		local success
		success, speller = pcall(get_speller, spell_module)
		if not success or type(speller) ~= 'function' then
			add_warning(parms, 1, 'cvt_no_spell', 'spell')
			return nil
		end
	end
	local case
	if parms.spell_upper == inout then
		case = true
		parms.spell_upper = nil  -- only uppercase first word in a multiple unit
	end
	local sp = not parms.opt_sp_us
	local adj = parms.opt_adjectival
	return speller(number, numerator, denominator, case, sp, adj)
end

------------------------------------------------------------------------
-- BEGIN: Code required only for built-in units.
-- LATER: If need much more code, move to another module to simplify this module.
local function speed_of_sound(altitude)
	-- This is for the Mach built-in unit of speed.
	-- Return speed of sound in metres per second at given altitude in feet.
	-- If no altitude given, use default (zero altitude = sea level).
	-- Table gives speed of sound in miles per hour at various altitudes:
	--   altitude = -17,499 to 302,499 feet
	-- mach_table[a + 4] = s where
	--   a = (altitude / 5000) rounded to nearest integer (-3 to 60)
	--   s = speed of sound (mph) at that altitude
	-- LATER: Should calculate result from an interpolation between the next
	-- lower and higher altitudes in table, rather than rounding to nearest.
	-- From: http://www.aerospaceweb.org/question/atmosphere/q0112.shtml
	local mach_table = {                                                       -- a =
		799.5, 787.0, 774.2, 761.207051,                                       -- -3 to  0
		748.0, 734.6, 721.0, 707.0, 692.8, 678.3, 663.5, 660.1, 660.1, 660.1,  --  1 to 10
		660.1, 660.1, 660.1, 662.0, 664.3, 666.5, 668.9, 671.1, 673.4, 675.6,  -- 11 to 20
		677.9, 683.7, 689.9, 696.0, 702.1, 708.1, 714.0, 719.9, 725.8, 731.6,  -- 21 to 30
		737.3, 737.7, 737.7, 736.2, 730.5, 724.6, 718.8, 712.9, 707.0, 701.1,  -- 31 to 40
		695.0, 688.9, 682.8, 676.6, 670.4, 664.1, 657.8, 652.9, 648.3, 643.7,  -- 41 to 50
		639.1, 634.4, 629.6, 624.8, 620.0, 615.2, 613.2, 613.2, 613.2, 613.5,  -- 51 to 60
	}
	altitude = altitude or 0
	local a = (altitude &lt; 0) and -altitude or altitude
	a = floor(a / 5000 + 0.5)
	if altitude &lt; 0 then
		a = -a
	end
	if a &lt; -3 then
		a = -3
	elseif a &gt; 60 then
		a = 60
	end
	return mach_table[a + 4] * 0.44704  -- mph converted to m/s
end
-- END: Code required only for built-in units.
------------------------------------------------------------------------

local function get_range(word)
	-- Return a range (string or table) corresponding to word (like &quot;to&quot;),
	-- or return nil if not a range word.
	local ranges = text_code.ranges
	return ranges.types[word] or ranges.types[ranges.aliases[word]]
end

local function check_mismatch(unit1, unit2)
	-- If unit1 cannot be converted to unit2, return an error message table.
	-- This allows conversion between units of the same type, and between
	-- Nm (normally torque) and ftlb (energy), as in gun-related articles.
	-- This works because Nm is the base unit (scale = 1) for both the
	-- primary type (torque), and the alternate type (energy, where Nm = J).
	-- A match occurs if the primary types are the same, or if unit1 matches
	-- the alternate type of unit2, and vice versa. That provides a whitelist
	-- of which conversions are permitted between normally incompatible types.
	if unit1.utype == unit2.utype or
		(unit1.utype == unit2.alttype and unit1.alttype == unit2.utype) then
		return nil
	end
	return { 'cvt_mismatch', unit1.utype, unit2.utype }
end

local function override_from(out_table, in_table, fields)
	-- Copy the specified fields from in_table to out_table, but do not
	-- copy nil fields (keep any corresponding field in out_table).
	for _, field in ipairs(fields) do
		if in_table[field] then
			out_table[field] = in_table[field]
		end
	end
end

local function shallow_copy(t)
	-- Return a shallow copy of table t.
	-- Do not need the features and overhead of the Scribunto mw.clone().
	local result = {}
	for k, v in pairs(t) do
		result[k] = v
	end
	return result
end

local unit_mt = {
	-- Metatable to get missing values for a unit that does not accept SI prefixes.
	-- Warning: The boolean value 'false' is returned for any missing field
	-- so __index is not called twice for the same field in a given unit.
	__index = function (self, key)
		local value
		if key == 'name1' or key == 'sym_us' then
			value = self.symbol
		elseif key == 'name2' then
			value = self.name1 .. plural_suffix
		elseif key == 'name1_us' then
			value = self.name1
			if not rawget(self, 'name2_us') then
				-- If name1_us is 'foot', do not make name2_us by appending plural_suffix.
				self.name2_us = self.name2
			end
		elseif key == 'name2_us' then
			local raw1_us = rawget(self, 'name1_us')
			if raw1_us then
				value = raw1_us .. plural_suffix
			else
				value = self.name2
			end
		elseif key == 'link' then
			value = self.name1
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local function prefixed_name(unit, name, index)
	-- Return unit name with SI prefix inserted at correct position.
	-- index = 1 (name1), 2 (name2), 3 (name1_us), 4 (name2_us).
	-- The position is a byte (not character) index, so use Lua's sub().
	local pos = rawget(unit, 'prefix_position')
	if type(pos) == 'string' then
		pos = tonumber(split(pos, ',')[index])
	end
	if pos then
		return name:sub(1, pos - 1) .. unit.si_name .. name:sub(pos)
	end
	return unit.si_name .. name
end

local unit_prefixed_mt = {
	-- Metatable to get missing values for a unit that accepts SI prefixes.
	-- Before use, fields si_name, si_prefix must be defined.
	-- The unit must define _symbol, _name1 and
	-- may define _sym_us, _name1_us, _name2_us
	-- (_sym_us, _name2_us may be defined for a language using sp=us
	-- to refer to a variant unrelated to U.S. units).
	__index = function (self, key)
		local value
		if key == 'symbol' then
			value = self.si_prefix .. self._symbol
		elseif key == 'sym_us' then
			value = rawget(self, '_sym_us')
			if value then
				value = self.si_prefix .. value
			else
				value = self.symbol
			end
		elseif key == 'name1' then
			value = prefixed_name(self, self._name1, 1)
		elseif key == 'name2' then
			value = rawget(self, '_name2')
			if value then
				value = prefixed_name(self, value, 2)
			else
				value = self.name1 .. plural_suffix
			end
		elseif key == 'name1_us' then
			value = rawget(self, '_name1_us')
			if value then
				value = prefixed_name(self, value, 3)
			else
				value = self.name1
			end
		elseif key == 'name2_us' then
			value = rawget(self, '_name2_us')
			if value then
				value = prefixed_name(self, value, 4)
			elseif rawget(self, '_name1_us') then
				value = self.name1_us .. plural_suffix
			else
				value = self.name2
			end
		elseif key == 'link' then
			value = self.name1
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local unit_per_mt = {
	-- Metatable to get values for a per unit of form &quot;x/y&quot;.
	-- This is never called to determine a unit name or link because per units
	-- are handled as a special case.
	-- Similarly, the default output is handled elsewhere.
	__index = function (self, key)
		local value
		if key == 'symbol' then
			local per = self.per
			local unit1, unit2 = per[1], per[2]
			if unit1 then
				value = unit1[key] .. '/' .. unit2[key]
			else
				value = '/' .. unit2[key]
			end
		elseif key == 'sym_us' then
			value = self.symbol
		elseif key == 'scale' then
			local per = self.per
			local unit1, unit2 = per[1], per[2]
			value = (unit1 and unit1.scale or 1) * self.scalemultiplier / unit2.scale
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local function make_per(unitcode, unit_table, ulookup)
	-- Return true, t where t is a per unit with unit codes expanded to unit tables,
	-- or return false, t where t is an error message table.
	local result = {
		unitcode = unitcode,
		utype = unit_table.utype,
		per = {}
	}
	override_from(result, unit_table, { 'invert', 'iscomplex', 'default', 'link', 'symbol', 'symlink' })
	result.symbol_raw = (result.symbol or false)  -- to distinguish between a defined exception and a metatable calculation
	local prefix
	for i, v in ipairs(unit_table.per) do
		if i == 1 and v == '' then
			-- First unit symbol can be empty; that gives a nil first unit table.
		elseif i == 1 and text_code.currency[v] then
			prefix = currency_text or v
		else
			local success, t = ulookup(v)
			if not success then return false, t end
			result.per[i] = t
		end
	end
	local multiplier = unit_table.multiplier
	if not result.utype then
		-- Creating an automatic per unit.
		local unit1 = result.per[1]
		local utype = (unit1 and unit1.utype or prefix or '') .. '/' .. result.per[2].utype
		local t = data_code.per_unit_fixups[utype]
		if t then
			if type(t) == 'table' then
				utype = t.utype or utype
				result.link = result.link or t.link
				multiplier = multiplier or t.multiplier
			else
				utype = t
			end
		end
		result.utype = utype
	end
	result.scalemultiplier = multiplier or 1
	result.vprefix = prefix or false  -- set to non-nil to avoid calling __index
	return true, setmetatable(result, unit_per_mt)
end

local function lookup(parms, unitcode, what, utable, fails, depth)
	-- Return true, t where t is a copy of the unit's converter table,
	-- or return false, t where t is an error message table.
	-- Parameter 'what' determines whether combination units are accepted:
	--   'no_combination'  : single unit only
	--   'any_combination' : single unit or combination or output multiple
	--   'only_multiple'   : single unit or output multiple only
	-- Parameter unitcode is a symbol (like 'g'), with an optional SI prefix (like 'kg').
	-- If, for example, 'kg' is in this table, that entry is used;
	-- otherwise the prefix ('k') is applied to the base unit ('g').
	-- If unitcode is a known combination code (and if allowed by what),
	-- a table of output multiple unit tables is included in the result.
	-- For compatibility with the old template, an underscore in a unitcode is
	-- replaced with a space so usage like {{convert|350|board_feet}} works.
	-- Wikignomes may also put two spaces or &quot;&amp;nbsp;&quot; in combinations, so
	-- replace underscore, &quot;&amp;nbsp;&quot;, and multiple spaces with a single space.
	utable = utable or parms.unittable or all_units
	fails = fails or {}
	depth = depth and depth + 1 or 1
	if depth &gt; 9 then
		-- There are ways to mistakenly define units which result in infinite
		-- recursion when lookup() is called. That gives a long delay and very
		-- confusing error messages, so the depth parameter is used as a guard.
		return false, { 'cvt_lookup', unitcode }
	end
	if unitcode == nil or unitcode == '' then
		return false, { 'cvt_no_unit' }
	end
	unitcode = unitcode:gsub('_', ' '):gsub('&amp;nbsp;', ' '):gsub('  +', ' ')
	local function call_make_per(t)
		return make_per(unitcode, t,
			function (ucode) return lookup(parms, ucode, 'no_combination', utable, fails, depth) end
		)
	end
	local t = utable[unitcode]
	if t then
		if t.shouldbe then
			return false, { 'cvt_should_be', t.shouldbe }
		end
		if t.sp_us then
			parms.opt_sp_us = true
		end
		local target = t.target  -- nil, or unitcode is an alias for this target
		if target then
			local success, result = lookup(parms, target, what, utable, fails, depth)
			if not success then return false, result end
			override_from(result, t, { 'customary', 'default', 'link', 'symbol', 'symlink' })
			local multiplier = t.multiplier
			if multiplier then
				result.multiplier = tostring(multiplier)
				result.scale = result.scale * multiplier
			end
			return true, result
		end
		if t.per then
			return call_make_per(t)
		end
		local combo = t.combination  -- nil or a table of unitcodes
		if combo then
			local multiple = t.multiple
			if what == 'no_combination' or (what == 'only_multiple' and not multiple) then
				return false, { 'cvt_bad_unit', unitcode }
			end
			-- Recursively create a combination table containing the
			-- converter table of each unitcode.
			local result = { utype = t.utype, multiple = multiple, combination = {} }
			local cvt = result.combination
			for i, v in ipairs(combo) do
				local success, t = lookup(parms, v, multiple and 'no_combination' or 'only_multiple', utable, fails, depth)
				if not success then return false, t end
				cvt[i] = t
			end
			return true, result
		end
		local result = shallow_copy(t)
		result.unitcode = unitcode
		if result.prefixes then
			result.si_name = ''
			result.si_prefix = ''
			return true, setmetatable(result, unit_prefixed_mt)
		end
		return true, setmetatable(result, unit_mt)
	end
	local SIprefixes = text_code.SIprefixes
	for plen = SIprefixes[1] or 2, 1, -1 do
		-- Look for an SI prefix; should never occur with an alias.
		-- Check for longer prefix first ('dam' is decametre).
		-- SIprefixes[1] = prefix maximum #characters (as seen by mw.ustring.sub).
		local prefix = usub(unitcode, 1, plen)
		local si = SIprefixes[prefix]
		if si then
			local t = utable[usub(unitcode, plen+1)]
			if t and t.prefixes then
				local result = shallow_copy(t)
				result.unitcode = unitcode
				result.si_name = parms.opt_sp_us and si.name_us or si.name
				result.si_prefix = si.prefix or prefix
				result.scale = t.scale * 10 ^ (si.exponent * t.prefixes)
				return true, setmetatable(result, unit_prefixed_mt)
			end
		end
	end
	-- Accept any unit with an engineering notation prefix like &quot;e6cuft&quot;
	-- (million cubic feet), but not chained prefixes like &quot;e3e6cuft&quot;,
	-- and not if the unit is a combination or multiple,
	-- and not if the unit has an offset or is a built-in.
	-- Only en digits are accepted.
	local has_plus = unitcode:find('+', 1, true)
	if not has_plus then
		local exponent, baseunit = unitcode:match('^e(%d+)(.*)')
		if exponent then
			local engscale = text_code.eng_scales[exponent]
			if engscale then
				local success, result = lookup(parms, baseunit, 'no_combination', utable, fails, depth)
				if success and not (result.offset or result.builtin or result.engscale) then
					result.unitcode = unitcode  -- 'e6cuft' not 'cuft'
					result.defkey = unitcode  -- key to lookup default exception
					result.engscale = engscale
					result.scale = result.scale * 10 ^ tonumber(exponent)
					return true, result
				end
			end
		end
	end
	-- Accept user-defined combinations like &quot;acre+m2+ha&quot; or &quot;acre m2 ha&quot; for output.
	-- If '+' is used, each unit code can include a space, and any error is fatal.
	-- If ' ' is used and if each space-separated word is a unit code, it is a combo,
	-- but errors are not fatal so the unit code can be looked up as an extra unit.
	local err_is_fatal
	local combo = collection()
	if has_plus then
		err_is_fatal = true
		for item in (unitcode .. '+'):gmatch('%s*(.-)%s*%+') do
			if item ~= '' then
				combo:add(item)
			end
		end
	elseif unitcode:find('%s') then
		for item in unitcode:gmatch('%S+') do
			combo:add(item)
		end
	end
	if combo.n &gt; 1 then
		local function lookup_combo()
			if what == 'no_combination' or what == 'only_multiple' then
				return false, { 'cvt_bad_unit', unitcode }
			end
			local result = { combination = {} }
			local cvt = result.combination
			for i, v in ipairs(combo) do
				local success, t = lookup(parms, v, 'only_multiple', utable, fails, depth)
				if not success then return false, t end
				if i == 1 then
					result.utype = t.utype
				else
					local mismatch = check_mismatch(result, t)
					if mismatch then
						return false, mismatch
					end
				end
				cvt[i] = t
			end
			return true, result
		end
		local success, result = lookup_combo()
		if success or err_is_fatal then
			return success, result
		end
	end
	-- Look for x/y; split on right-most slash to get scale correct (x/y/z is x/y per z).
	local top, bottom = unitcode:match('^(.-)/([^/]+)$')
	if top and not unitcode:find('e%d') then
		-- If valid, create an automatic per unit for an &quot;x/y&quot; unit code.
		-- The unitcode must not include extraneous spaces.
		-- Engineering notation (apart from at start and which has been stripped before here),
		-- is not supported so do not make a per unit if find text like 'e3' in unitcode.
		local success, result = call_make_per({ per = {top, bottom} })
		if success then
			return true, result
		end
	end
	if not parms.opt_ignore_error and not get_range(unitcode) then
		-- Want the &quot;what links here&quot; list for the extra_module to show only cases
		-- where an extra unit is used, so do not require it if invoked from {{val}}
		-- or if looking up a range word which cannot be a unit.
		if not extra_units then
			local success, extra = pcall(function () return require(extra_module).extra_units end)
			if success and type(extra) == 'table' then
				extra_units = extra
			end
		end
		if extra_units then
			-- A unit in one data table might refer to a unit in the other table, so
			-- switch between them, relying on fails or depth to terminate loops.
			if not fails[unitcode] then
				fails[unitcode] = true
				local other = (utable == all_units) and extra_units or all_units
				local success, result = lookup(parms, unitcode, what, other, fails, depth)
				if success then
					return true, result
				end
			end
		end
	end
	if to_en_table then
		-- At fawiki it is common to translate all digits so a unit like &quot;km2&quot; becomes &quot;km&quot;.
		local en_code = ustring.gsub(unitcode, '%d', to_en_table)
		if en_code ~= unitcode then
			return lookup(parms, en_code, what, utable, fails, depth)
		end
	end
	return false, { 'cvt_unknown', unitcode }
end

local function valid_number(num)
	-- Return true if num is a valid number.
	-- In Scribunto (different from some standard Lua), when expressed as a string,
	-- overflow or other problems are indicated with text like &quot;inf&quot; or &quot;nan&quot;
	-- which are regarded as invalid here (each contains &quot;n&quot;).
	if type(num) == 'number' and tostring(num):find('n', 1, true) == nil then
		return true
	end
end

local function hyphenated(name, parts)
	-- Return a hyphenated form of given name (for adjectival usage).
	-- The name may be linked and the target of the link must not be changed.
	-- Hypothetical examples:
	--   [[long ton|ton]]           [[long ton|ton]]          (no change)
	--   [[tonne|long ton]]         [[tonne|long-ton]]
	--   [[metric ton|long ton]]    [[metric ton|long-ton]]
	--   [[long ton]]               [[long ton|long-ton]]
	-- Input can also have multiple links in a single name like:
	--   [[United States customary units|U.S.]] [[US gallon|gallon]]
	--   [[mile]]s per [[United States customary units|U.S.]] [[quart]]
	--   [[long ton]]s per [[short ton]]
	-- Assume that links cannot be nested (never like &quot;[[abc[[def]]ghi]]&quot;).
	-- This uses a simple and efficient procedure that works for most cases.
	-- Some units (if used) would require more, and can later think about
	-- adding a method to handle exceptions.
	-- The procedure is to replace each space with a hyphen, but
	-- not a space after ')' [for &quot;(pre-1954&amp;nbsp;US) nautical mile&quot;], and
	-- not spaces immediately before '(' or in '(...)' [for cases like
	-- &quot;British thermal unit (ISO)&quot; and &quot;Calorie (International Steam Table)&quot;].
	if name:find(' ', 1, true) then
		if parts then
			local pos
			if name:sub(1, 1) == '(' then
				pos = name:find(')', 1, true)
				if pos then
					return name:sub(1, pos+1) .. name:sub(pos+2):gsub(' ', '-')
				end
			elseif name:sub(-1) == ')' then
				pos = name:find('(', 1, true)
				if pos then
					return name:sub(1, pos-2):gsub(' ', '-') .. name:sub(pos-1)
				end
			end
			return name:gsub(' ', '-')
		end
		parts = collection()
		for before, item, after in name:gmatch('([^[]*)(%[%[[^[]*%]%])([^[]*)') do
			if item:find(' ', 1, true) then
				local prefix
				local plen = item:find('|', 1, true)
				if plen then
					prefix = item:sub(1, plen)
					item = item:sub(plen + 1, -3)
				else
					prefix = item:sub(1, -3) .. '|'
					item = item:sub(3, -3)
				end
				item = prefix .. hyphenated(item, parts) .. ']]'
			end
			parts:add(before:gsub(' ', '-') .. item .. after:gsub(' ', '-'))
		end
		if parts.n == 0 then
			-- No link like &quot;[[...]]&quot; was found in the original name.
			parts:add(hyphenated(name, parts))
		end
		return table.concat(parts)
	end
	return name
end

local function hyphenated_maybe(parms, want_name, sep, id, inout)
	-- Return s, f where
	--   s = id, possibly modified
	--   f = true if hyphenated
	-- Possible modifications: hyphenate; prepend '-'; append mid text.
	if id == nil or id == '' then
		return ''
	end
	local mid = (inout == (parms.opt_flip and 'out' or 'in')) and parms.mid or ''
	if want_name then
		if parms.opt_adjectival then
			return '-' .. hyphenated(id) .. mid, true
		end
		if parms.opt_add_s and id:sub(-1) ~= 's' then
			id = id .. 's'  -- for nowiki
		end
	end
	return sep .. id .. mid
end

local function use_minus(text)
	-- Return text with Unicode minus instead of '-', if present.
	if text:sub(1, 1) == '-' then
		return MINUS .. text:sub(2)
	end
	return text
end

local function digit_groups(parms, text, method)
	-- Return a numbered table of groups of digits (left-to-right, in local language).
	-- Parameter method is a number or nil:
	--   3 for 3-digit grouping (default), or
	--   2 for 3-then-2 grouping (only for digits before decimal mark).
	local len_right
	local len_left = text:find('.', 1, true)
	if len_left then
		len_right = #text - len_left
		len_left = len_left - 1
	else
		len_left = #text
	end
	local twos = method == 2 and len_left &gt; 5
	local groups = collection()
	local run = len_left
	local n
	if run &lt; 4 or (run == 4 and parms.opt_comma5) then
		if parms.opt_gaps then
			n = run
		else
			n = #text
		end
	elseif twos then
		n = run % 2 == 0 and 1 or 2
	else
		n = run % 3 == 0 and 3 or run % 3
	end
	while run &gt; 0 do
		groups:add(n)
		run = run - n
		n = (twos and run &gt; 3) and 2 or 3
	end
	if len_right then
		if groups.n == 0 then
			groups:add(0)
		end
		if parms.opt_gaps and len_right &gt; 3 then
			local want4 = not parms.opt_gaps3  -- true gives no gap before trailing single digit
			local isfirst = true
			run = len_right
			while run &gt; 0 do
				n = (want4 and run == 4) and 4 or (run &gt; 3 and 3 or run)
				if isfirst then
					isfirst = false
					groups[groups.n] = groups[groups.n] + 1 + n
				else
					groups:add(n)
				end
				run = run - n
			end
		else
			groups[groups.n] = groups[groups.n] + 1 + len_right
		end
	end
	local pos = 1
	for i, length in ipairs(groups) do
		groups[i] = from_en(text:sub(pos, pos + length - 1))
		pos = pos + length
	end
	return groups
end

function with_separator(parms, text)  -- for forward declaration above
	-- Input text is a number in en digits with optional '.' decimal mark.
	-- Return an equivalent, formatted for display:
	--   with a custom decimal mark instead of '.', if wanted
	--   with thousand separators inserted, if wanted
	--   digits in local language
	-- The given text is like '123' or '123.' or '12345.6789'.
	-- The text has no sign (caller inserts that later, if necessary).
	-- When using gaps, they are inserted before and after the decimal mark.
	-- Separators are inserted only before the decimal mark.
	-- A trailing dot (as in '123.') is removed because their use appears to
	-- be accidental, and such a number should be shown as '123' or '123.0'.
	-- It is useful for convert to suppress the dot so, for example, '4000.'
	-- is a simple way of indicating that all the digits are significant.
	if text:sub(-1) == '.' then
		text = text:sub(1, -2)
	end
	if #text &lt; 4 or parms.opt_nocomma or numsep == '' then
		return from_en(text)
	end
	local groups = digit_groups(parms, text, group_method)
	if parms.opt_gaps then
		if groups.n &lt;= 1 then
			return groups[1] or ''
		end
		local nowrap = '&lt;span style=&quot;white-space: nowrap&quot;&gt;'
		local gap = '&lt;span style=&quot;margin-left: 0.25em&quot;&gt;'
		local close = '&lt;/span&gt;'
		return nowrap .. groups[1] .. gap .. table.concat(groups, close .. gap, 2, groups.n) .. close .. close
	end
	return table.concat(groups, numsep)
end

-- An input value like 1.23e12 is displayed using scientific notation (1.2310).
-- That also makes the output use scientific notation, except for small values.
-- In addition, very small or very large output values use scientific notation.
-- Use format(fmtpower, significand, '10', exponent) where each argument is a string.
local fmtpower = '%s&lt;span style=&quot;margin:0 .15em 0 .25em&quot;&gt;&lt;/span&gt;%s&lt;sup&gt;%s&lt;/sup&gt;'

local function with_exponent(parms, show, exponent)
	-- Return wikitext to display the implied value in scientific notation.
	-- Input uses en digits; output uses digits in local language.
	return format(fmtpower, with_separator(parms, show), from_en('10'), use_minus(from_en(tostring(exponent))))
end

local function make_sigfig(value, sigfig)
	-- Return show, exponent that are equivalent to the result of
	-- converting the number 'value' (where value &gt;= 0) to a string,
	-- rounded to 'sigfig' significant figures.
	-- The returned items are:
	--   show: a string of digits; no sign and no dot;
	--         there is an implied dot before show.
	--   exponent: a number (an integer) to shift the implied dot.
	-- Resulting value = tonumber('.' .. show) * 10^exponent.
	-- Examples:
	--   make_sigfig(23.456, 3) returns '235', 2 (.235 * 10^2).
	--   make_sigfig(0.0023456, 3) returns '235', -2 (.235 * 10^-2).
	--   make_sigfig(0, 3) returns '000', 1 (.000 * 10^1).
	if sigfig &lt;= 0 then
		sigfig = 1
	elseif sigfig &gt; maxsigfig then
		sigfig = maxsigfig
	end
	if value == 0 then
		return string.rep('0', sigfig), 1
	end
	local exp, fracpart = math.modf(log10(value))
	if fracpart &gt;= 0 then
		fracpart = fracpart - 1
		exp = exp + 1
	end
	local digits = format('%.0f', 10^(fracpart + sigfig))
	if #digits &gt; sigfig then
		-- Overflow (for sigfig=3: like 0.9999 rounding to &quot;1000&quot;; need &quot;100&quot;).
		digits = digits:sub(1, sigfig)
		exp = exp + 1
	end
	assert(#digits == sigfig, 'Bug: rounded number has wrong length')
	return digits, exp
end

-- Fraction output format.
local fracfmt = {
	{ -- Like {{frac}} (fraction slash).
		-- 1/2    : sign, numerator, denominator
		-- 1+2/3  : signed_wholenumber, numerator, denominator
		'&lt;span class=&quot;frac nowrap&quot;&gt;%s&lt;sup&gt;%s&lt;/sup&gt;&amp;frasl;&lt;sub&gt;%s&lt;/sub&gt;&lt;/span&gt;',
		'&lt;span class=&quot;frac nowrap&quot;&gt;%s&lt;span class=&quot;visualhide&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;sup&gt;%s&lt;/sup&gt;&amp;frasl;&lt;sub&gt;%s&lt;/sub&gt;&lt;/span&gt;',
	},
	{ -- Like {{sfrac}} (fraction horizontal bar).
		-- 1//2   : sign, numerator, denominator (sign should probably be before the fraction, but then it can wrap, and html is already too long)
		-- 1+2//3 : signed_wholenumber, numerator, denominator
		'&lt;span class=&quot;sfrac nowrap&quot; style=&quot;display:inline-block; vertical-align:-0.5em; font-size:85%%; text-align:center;&quot;&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em;&quot;&gt;%s%s&lt;/span&gt;&lt;span class=&quot;visualhide&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em; border-top:1px solid;&quot;&gt;%s&lt;/span&gt;&lt;/span&gt;',
		'&lt;span class=&quot;sfrac nowrap&quot;&gt;%s&lt;span class=&quot;visualhide&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;display:inline-block; vertical-align:-0.5em; font-size:85%%; text-align:center;&quot;&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em;&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;visualhide&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em; border-top:1px solid;&quot;&gt;%s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;',
	},
}

local function format_fraction(parms, inout, negative, wholestr, numstr, denstr, do_spell, style)
	-- Return wikitext for a fraction, possibly spelled.
	-- Inputs use en digits and have no sign; output uses digits in local language.
	local wikitext
	if not style then
		style = parms.opt_fraction_horizontal and 2 or 1
	end
	if wholestr == '' then
		wholestr = nil
	end
	if wholestr then
		local decorated = with_separator(parms, wholestr)
		if negative then
			decorated = MINUS .. decorated
		end
		local fmt = fracfmt[style][2]
		wikitext = format(fmt, decorated, from_en(numstr), from_en(denstr))
	else
		local sign = negative and MINUS or ''
		wikitext = format(fracfmt[style][1], sign, from_en(numstr), from_en(denstr))
	end
	if do_spell then
		if negative then
			if wholestr then
				wholestr = '-' .. wholestr
			else
				numstr = '-' .. numstr
			end
		end
		wikitext = spell_number(parms, inout, wholestr, numstr, denstr) or wikitext
	end
	return wikitext
end

local function format_number(parms, show, exponent, isnegative)
	-- Parameter show is a string or a table containing strings.
	-- Each string is a formatted number in en digits and optional '.' decimal mark.
	-- A table represents a fraction: integer, numerator, denominator;
	-- if a table is given, exponent must be nil.
	-- Return t where t is a table with fields:
	--   show = wikitext formatted to display implied value
	--          (digits in local language)
	--   is_scientific = true if show uses scientific notation
	--   clean = unformatted show (possibly adjusted and with inserted '.')
	--          (en digits)
	--   sign = '' or MINUS
	--   exponent = exponent (possibly adjusted)
	-- The clean and exponent fields can be used to calculate the
	-- rounded absolute value, if needed.
	--
	-- The value implied by the arguments is found from:
	--   exponent is nil; and
	--   show is a string of digits (no sign), with an optional dot;
	--   show = '123.4' is value 123.4, '1234' is value 1234.0;
	-- or:
	--   exponent is an integer indicating where dot should be;
	--   show is a string of digits (no sign and no dot);
	--   there is an implied dot before show;
	--   show does not start with '0';
	--   show = '1234', exponent = 3 is value 0.1234*10^3 = 123.4.
	--
	-- The formatted result:
	-- * Is for an output value and is spelled if wanted and possible.
	-- * Includes a Unicode minus if isnegative and not spelled.
	-- * Uses a custom decimal mark, if wanted.
	-- * Has digits grouped where necessary, if wanted.
	-- * Uses scientific notation if requested, or for very small or large values
	--   (which forces result to not be spelled).
	-- * Has no more than maxsigfig significant digits
	--   (same as old template and {{#expr}}).
	local xhi, xlo  -- these control when scientific notation (exponent) is used
	if parms.opt_scientific then
		xhi, xlo = 4, 2  -- default for output if input uses e-notation
	elseif parms.opt_scientific_always then
		xhi, xlo = 0, 0  -- always use scientific notation (experimental)
	else
		xhi, xlo = 10, 4  -- default
	end
	local sign = isnegative and MINUS or ''
	local maxlen = maxsigfig
	local tfrac
	if type(show) == 'table' then
		tfrac = show
		show = tfrac.wholestr
		assert(exponent == nil, 'Bug: exponent given with fraction')
	end
	if not tfrac and not exponent then
		local integer, dot, decimals = show:match('^(%d*)(%.?)(.*)')
		if integer == '0' or integer == '' then
			local zeros, figs = decimals:match('^(0*)([^0]?.*)')
			if #figs == 0 then
				if #zeros &gt; maxlen then
					show = '0.' .. zeros:sub(1, maxlen)
				end
			elseif #zeros &gt;= xlo then
				show = figs
				exponent = -#zeros
			elseif #figs &gt; maxlen then
				show = '0.' .. zeros .. figs:sub(1, maxlen)
			end
		elseif #integer &gt;= xhi then
			show = integer .. decimals
			exponent = #integer
		else
			maxlen = maxlen + #dot
			if #show &gt; maxlen then
				show = show:sub(1, maxlen)
			end
		end
	end
	if exponent then
		local function zeros(n)
			return string.rep('0', n)
		end
		if #show &gt; maxlen then
			show = show:sub(1, maxlen)
		end
		if exponent &gt; xhi or exponent &lt;= -xlo or (exponent == xhi and show ~= '1' .. zeros(xhi - 1)) then
			-- When xhi, xlo = 10, 4 (the default), scientific notation is used if the
			-- rounded value satisfies: value &gt;= 1e9 or value &lt; 1e-4 (1e9 = 0.1e10),
			-- except if show is '1000000000' (1e9), for example:
			-- {{convert|1000000000|m|m|sigfig=10}}  1,000,000,000 metres (1,000,000,000 m)
			local significand
			if #show &gt; 1 then
				significand = show:sub(1, 1) .. '.' .. show:sub(2)
			else
				significand = show
			end
			return {
				clean = '.' .. show,
				exponent = exponent,
				sign = sign,
				show = sign .. with_exponent(parms, significand, exponent-1),
				is_scientific = true,
			}
		end
		if exponent &gt;= #show then
			show = show .. zeros(exponent - #show)  -- result has no dot
		elseif exponent &lt;= 0 then
			show = '0.' .. zeros(-exponent) .. show
		else
			show = show:sub(1, exponent) .. '.' .. show:sub(exponent+1)
		end
	end
	local formatted_show
	if tfrac then
		show = tostring(tfrac.value)  -- to set clean in returned table
		formatted_show = format_fraction(parms, 'out', isnegative, tfrac.wholestr, tfrac.numstr, tfrac.denstr, parms.opt_spell_out)
	else
		if isnegative and show:match('^0.?0*$') then
			sign = ''  -- don't show minus if result is negative but rounds to zero
		end
		formatted_show = sign .. with_separator(parms, show)
		if parms.opt_spell_out then
			formatted_show = spell_number(parms, 'out', sign .. show) or formatted_show
		end
	end
	return {
		clean = show,
		sign = sign,
		show = formatted_show,
		is_scientific = false,  -- to avoid calling __index
	}
end

local function extract_fraction(parms, text, negative)
	-- If text represents a fraction, return
	--   value, altvalue, show, denominator
	-- where
	--   value is a number (value of the fraction in argument text)
	--   altvalue is an alternate interpretation of any fraction for the hands
	--        unit where &quot;12.1+3/4&quot; means 12 hands 1.75 inches
	--   show is a string (formatted text for display of an input value,
	--        and is spelled if wanted and possible)
	--   denominator is value of the denominator in the fraction
	-- Otherwise, return nil.
	-- Input uses en digits and '.' decimal mark (input has been translated).
	-- Output uses digits in local language and local decimal mark, if any.
	------------------------------------------------------------------------
	-- Originally this function accepted x+y/z where x, y, z were any valid
	-- numbers, possibly with a sign. For example '1.23e+2+1.2/2.4' = 123.5,
	-- and '2-3/8' = 1.625. However, such usages were found to be errors or
	-- misunderstandings, so since August 2014 the following restrictions apply:
	--   x (if present) is an integer or has a single digit after decimal mark
	--   y and z are unsigned integers
	--   e-notation is not accepted
	-- The overall number can start with '+' or '-' (so '12+3/4' and '+12+3/4'
	-- and '-12-3/4' are valid).
	-- Any leading negative sign is removed by the caller, so only inputs
	-- like the following are accepted here (may have whitespace):
	--   negative = false       false        true (there was a leading '-')
	--   text     = '2/3'       '+2/3'       '2/3'
	--   text     = '1+2/3'     '+1+2/3'     '1-2/3'
	--   text     = '12.3+1/2'  '+12.3+1/2'  '12.3-1/2'
	-- Values like '12.3+1/2' are accepted, but are intended only for use
	-- with the hands unit (not worth adding code to enforce that).
	------------------------------------------------------------------------
	local leading_plus, prefix, numstr, slashes, denstr =
		text:match('^%s*(%+?)%s*(.-)%s*(%d+)%s*(/+)%s*(%d+)%s*$')
	if not leading_plus then
		-- Accept a single U+2044 fraction slash because that may be pasted.
		leading_plus, prefix, numstr, denstr =
			text:match('^%s*(%+?)%s*(.-)%s*(%d+)%s*%s*(%d+)%s*$')
		slashes = '/'
	end
	local numerator = tonumber(numstr)
	local denominator = tonumber(denstr)
	if numerator == nil or denominator == nil or (negative and leading_plus ~= '') then
		return nil
	end
	local whole, wholestr
	if prefix == '' then
		wholestr = ''
		whole = 0
	else
		-- Any prefix must be like '12+' or '12-' (whole number and fraction sign);
		-- '12.3+' and '12.3-' are also accepted (single digit after decimal point)
		-- because '12.3+1/2 hands' is valid (12 hands 3 inches).
		local num1, num2, frac_sign = prefix:match('^(%d+)(%.?%d?)%s*([+%-])$')
		if num1 == nil then return nil end
		if num2 == '' then  -- num2 must be '' or like '.1' but not '.' or '.12'
			wholestr = num1
		else
			if #num2 ~= 2 then return nil end
			wholestr = num1 .. num2
		end
		if frac_sign ~= (negative and '-' or '+') then return nil end
		whole = tonumber(wholestr)
		if whole == nil then return nil end
	end
	local value = whole + numerator / denominator
	if not valid_number(value) then return nil end
	local altvalue = whole + numerator / (denominator * 10)
	local style = #slashes  -- kludge: 1 or 2 slashes can be used to select style
	if style &gt; 2 then style = 2 end
	local wikitext = format_fraction(parms, 'in', negative, leading_plus .. wholestr, numstr, denstr, parms.opt_spell_in, style)
	return value, altvalue, wikitext, denominator
end

local function extract_number(parms, text, another, no_fraction)
	-- Return true, info if can extract a number from text,
	-- where info is a table with the result,
	-- or return false, t where t is an error message table.
	-- Input can use en digits or digits in local language and can
	-- have references at the end. Accepting references is intended
	-- for use in infoboxes with a field for a value passed to convert.
	-- Parameter another = true if the expected value is not the first.
	-- Before processing, the input text is cleaned:
	-- * Any thousand separators (valid or not) are removed.
	-- * Any sign (and optional following whitespace) is replaced with
	--   '-' (if negative) or '' (otherwise).
	--   That replaces Unicode minus with '-'.
	-- If successful, the returned info table contains named fields:
	--   value    = a valid number
	--   altvalue = a valid number, usually same as value but different
	--              if fraction used (for hands unit)
	--   singular = true if value is 1 or -1 (to use singular form of units)
	--   clean    = cleaned text with any separators and sign removed
	--              (en digits and '.' decimal mark)
	--   show     = text formatted for output, possibly with ref strip markers
	--              (digits in local language and custom decimal mark)
	-- The resulting show:
	-- * Is for an input value and is spelled if wanted and possible.
	-- * Has a rounded value, if wanted.
	-- * Has digits grouped where necessary, if wanted.
	-- * If negative, a Unicode minus is used; otherwise the sign is
	--   '+' (if the input text used '+'), or is '' (if no sign in input).
	text = strip(text or '')
	local reference
	local pos = text:find('\127', 1, true)
	if pos then
		local before = text:sub(1, pos - 1)
		local remainder = text:sub(pos)
		local refs = {}
		while #remainder &gt; 0 do
			local ref, spaces
			ref, spaces, remainder = remainder:match('^(\127[^\127]*UNIQ[^\127]*%-ref[^\127]*\127)(%s*)(.*)')
			if ref then
				table.insert(refs, ref)
			else
				refs = {}
				break
			end
		end
		if #refs &gt; 0 then
			text = strip(before)
			reference = table.concat(refs)
		end
	end
	local clean = to_en(text, parms)
	if clean == '' then
		return false, { another and 'cvt_no_num2' or 'cvt_no_num' }
	end
	local isnegative, propersign = false, ''  -- most common case
	local singular, show, denominator
	local value = tonumber(clean)
	local altvalue
	if value then
		local sign = clean:sub(1, 1)
		if sign == '+' or sign == '-' then
			propersign = (sign == '+') and '+' or MINUS
			clean = clean:sub(2)
		end
		if value &lt; 0 then
			isnegative = true
			value = -value
		end
	else
		local valstr
		for _, prefix in ipairs({ '-', MINUS, '&amp;minus;' }) do
			-- Including '-' means inputs like '- 2' (with space) are accepted as -2.
			-- It also sets isnegative in case input is a fraction like '-2-3/4'.
			local plen = #prefix
			if clean:sub(1, plen) == prefix then
				valstr = clean:sub(plen + 1)
				break
			end
		end
		if valstr then
			isnegative = true
			propersign = MINUS
			clean = valstr
			value = tonumber(clean)
		end
		if value == nil then
			if not no_fraction then
				value, altvalue, show, denominator = extract_fraction(parms, clean, isnegative)
			end
			if value == nil then
				return false, { 'cvt_bad_num', text }
			end
			if value &lt;= 1 then
				singular = true  -- for example, &quot; mile&quot; or &quot;one half mile&quot; (singular unit)
			end
		end
	end
	if not valid_number(value) then  -- for example, &quot;1e310&quot; may overflow
		return false, { 'cvt_invalid_num' }
	end
	if show == nil then
		-- clean is a non-empty string with no spaces, and does not represent a fraction,
		-- and value = tonumber(clean) is a number &gt;= 0.
		-- If the input uses e-notation, show will be displayed using a power of ten, but
		-- we use the number as given so it might not be normalized scientific notation.
		-- The input value is spelled if specified so any e-notation is ignored;
		-- that allows input like 2e6 to be spelled as &quot;two million&quot; which works
		-- because the spell module converts '2e6' to '2000000' before spelling.
		local function rounded(value, default, exponent)
			local precision = parms.opt_ri
			if precision then
				local fmt = '%.' .. format('%d', precision) .. 'f'
				local result = fmt:format(tonumber(value) + 2e-14)  -- fudge for some common cases of bad rounding
				if not exponent then
					singular = (tonumber(result) == 1)
				end
				return result
			end
			return default
		end
		singular = (value == 1)
		local scientific
		local significand, exponent = clean:match('^([%d.]+)[Ee]([+%-]?%d+)')
		if significand then
			show = with_exponent(parms, rounded(significand, significand, exponent), exponent)
			scientific = true
		else
			show = with_separator(parms, rounded(value, clean))
		end
		show = propersign .. show
		if parms.opt_spell_in then
			show = spell_number(parms, 'in', propersign .. rounded(value, clean)) or show
			scientific = false
		end
		if scientific then
			parms.opt_scientific = true
		end
	end
	if isnegative and (value ~= 0) then
		value = -value
		altvalue = -(altvalue or value)
	end
	return true, {
		value = value,
		altvalue = altvalue or value,
		singular = singular,
		clean = clean,
		show = show .. (reference or ''),
		denominator = denominator,
	}
end

local function get_number(text)
	-- Return v, f where:
	--   v = nil (text is not a number)
	-- or
	--   v = value of text (text is a number)
	--   f = true if value is an integer
	-- Input can use en digits or digits in local language,
	-- but no separators, no Unicode minus, and no fraction.
	if text then
		local number = tonumber(to_en(text))
		if number then
			local _, fracpart = math.modf(number)
			return number, (fracpart == 0)
		end
	end
end

local function gcd(a, b)
	-- Return the greatest common denominator for the given values,
	-- which are known to be positive integers.
	if a &gt; b then
		a, b = b, a
	end
	if a &lt;= 0 then
		return b
	end
	local r = b % a
	if r &lt;= 0 then
		return a
	end
	if r == 1 then
		return 1
	end
	return gcd(r, a)
end

local function fraction_table(value, denominator)
	-- Return value as a string or a table:
	-- * If result is a string, there is no fraction, and the result
	--   is value formatted as a string of en digits.
	-- * If result is a table, it represents a fraction with named fields:
	--   wholestr, numstr, denstr (strings of en digits for integer, numerator, denominator).
	-- The result is rounded to the nearest multiple of (1/denominator).
	-- If the multiple is zero, no fraction is included.
	-- No fraction is included if value is very large as the fraction would
	-- be unhelpful, particularly if scientific notation is required.
	-- Input value is a non-negative number.
	-- Input denominator is a positive integer for the desired fraction.
	if value &lt;= 0 then
		return '0'
	end
	if denominator &lt;= 0 or value &gt; 1e8 then
		return format('%.2f', value)
	end
	local integer, decimals = math.modf(value)
	local numerator = floor((decimals * denominator) +
		0.5 + 2e-14)  -- add fudge for some common cases of bad rounding
	if numerator &gt;= denominator then
		integer = integer + 1
		numerator = 0
	end
	local wholestr = tostring(integer)
	if numerator &gt; 0 then
		local div = gcd(numerator, denominator)
		if div &gt; 1 then
			numerator = numerator / div
			denominator = denominator / div
		end
		return {
			wholestr = (integer &gt; 0) and wholestr or '',
			numstr = tostring(numerator),
			denstr = tostring(denominator),
			value = value,
		}
	end
	return wholestr
end

local function preunits(count, preunit1, preunit2)
	-- If count is 1:
	--     ignore preunit2
	--     return p1
	-- else:
	--     preunit1 is used for preunit2 if the latter is empty
	--     return p1, p2
	-- where:
	--     p1 is text to insert before the input unit
	--     p2 is text to insert before the output unit
	--     p1 or p2 may be nil to mean &quot;no preunit&quot;
	-- Using '+ ' gives output like &quot;5+ feet&quot; (no preceding space).
	local function withspace(text, i)
		-- Insert space at beginning if i == 1, or at end if i == -1.
		-- However, no space is inserted if there is a space or '&amp;nbsp;'
		-- or '-' at that position ('-' is for adjectival text).
		local current = text:sub(i, i)
		if current == ' ' or current == '-' then
			return text
		end
		if i == 1 then
			current = text:sub(1, 6)
		else
			current = text:sub(-6, -1)
		end
		if current == '&amp;nbsp;' then
			return text
		end
		if i == 1 then
			return ' ' .. text
		end
		return text .. ' '
	end
	preunit1 = preunit1 or ''
	local trim1 = strip(preunit1)
	if count == 1 then
		if trim1 == '' then
			return nil
		end
		return withspace(withspace(preunit1, 1), -1)
	end
	preunit2 = preunit2 or ''
	local trim2 = strip(preunit2)
	if trim1 == '' and trim2 == '' then
		return nil, nil
	end
	if trim1 ~= '+' then
		preunit1 = withspace(preunit1, 1)
	end
	if trim2 == '&amp;#32;' then  -- trick to make preunit2 empty
		preunit2 = nil
	elseif trim2 == '' then
		preunit2 = preunit1
	elseif trim2 ~= '+' then
		preunit2 = withspace(preunit2, 1)
	end
	return preunit1, preunit2
end

local function range_text(range, want_name, parms, before, after, inout)
	-- Return before .. rtext .. after
	-- where rtext is the text that separates two values in a range.
	local rtext, adj_text, exception
	if type(range) == 'table' then
		-- Table must specify range text for ('off' and 'on') or ('input' and 'output'),
		-- and may specify range text for 'adj=on',
		-- and may specify exception = true.
		rtext = range[want_name and 'off' or 'on'] or
				range[((inout == 'in') == (parms.opt_flip == true)) and 'output' or 'input']
		adj_text = range['adj']
		exception = range['exception']
	else
		rtext = range
	end
	if parms.opt_adjectival then
		if want_name or (exception and parms.abbr_org == 'on') then
			rtext = adj_text or rtext:gsub(' ', '-'):gsub('&amp;nbsp;', '-')
		end
	end
	if rtext == '' and after:sub(1, #MINUS) == MINUS then
		rtext = '&amp;nbsp; '
	end
	return before .. rtext .. after
end

local function get_composite(parms, iparm, in_unit_table)
	-- Look for a composite input unit. For example, {{convert|1|yd|2|ft|3|in}}
	-- would result in a call to this function with
	--   iparm = 3 (parms[iparm] = &quot;2&quot;, just after the first unit)
	--   in_unit_table = (unit table for &quot;yd&quot;; contains value 1 for number of yards)
	-- Return true, iparm, unit where
	--   iparm = index just after the composite units (7 in above example)
	--   unit = composite unit table holding all input units,
	-- or return true if no composite unit is present in parms,
	-- or return false, t where t is an error message table.
	local default, subinfo
	local composite_units, count = { in_unit_table }, 1
	local fixups = {}
	local total = in_unit_table.valinfo[1].value
	local subunit = in_unit_table
	while subunit.subdivs do  -- subdivs is nil or a table of allowed subdivisions
		local subcode = strip(parms[iparm+1])
		local subdiv = subunit.subdivs[subcode] or subunit.subdivs[(all_units[subcode] or {}).target]
		if not subdiv then
			break
		end
		local success
		success, subunit = lookup(parms, subcode, 'no_combination')
		if not success then return false, subunit end  -- should never occur
		success, subinfo = extract_number(parms, parms[iparm])
		if not success then return false, subinfo end
		iparm = iparm + 2
		subunit.inout = 'in'
		subunit.valinfo = { subinfo }
		-- Recalculate total as a number of subdivisions.
		-- subdiv[1] = number of subdivisions per previous unit (integer &gt; 1).
		total = total * subdiv[1] + subinfo.value
		if not default then  -- set by the first subdiv with a default defined
			default = subdiv.default
		end
		count = count + 1
		composite_units[count] = subunit
		if subdiv.unit or subdiv.name then
			fixups[count] = { unit = subdiv.unit, name = subdiv.name, valinfo = subunit.valinfo }
		end
	end
	if count == 1 then
		return true  -- no error and no composite unit
	end
	for i, fixup in pairs(fixups) do
		local unit = fixup.unit
		local name = fixup.name
		if not unit or (count &gt; 2 and name) then
			composite_units[i].fixed_name = name
		else
			local success, alternate = lookup(parms, unit, 'no_combination')
			if not success then return false, alternate end  -- should never occur
			alternate.inout = 'in'
			alternate.valinfo = fixup.valinfo
			composite_units[i] = alternate
		end
	end
	return true, iparm, {
		utype = in_unit_table.utype,
		scale = subunit.scale,  -- scale of last (least significant) unit
		valinfo = { { value = total, clean = subinfo.clean, denominator = subinfo.denominator } },
		composite = composite_units,
		default = default or in_unit_table.default
	}
end

local function translate_parms(parms, kv_pairs)
	-- Update fields in parms by translating each key:value in kv_pairs to terms
	-- used by this module (may involve translating from local language to English).
	-- Also, checks are performed which may display warnings, if enabled.
	-- Return true if successful or return false, t where t is an error message table.
	currency_text = nil  -- local testing can hold module in memory; must clear globals
	local accept_any_text = {
		input = true,
		qid = true,
		qual = true,
		stylein = true,
		styleout = true,
		tracking = true,
	}
	if kv_pairs.adj and kv_pairs.sing then
		-- For enwiki (before translation), warn if attempt to use adj and sing
		-- as the latter is a deprecated alias for the former.
		if kv_pairs.adj ~= kv_pairs.sing and kv_pairs.sing ~= '' then
			add_warning(parms, 1, 'cvt_unknown_option', 'sing=' .. kv_pairs.sing)
		end
		kv_pairs.sing = nil
	end
	for loc_name, loc_value in pairs(kv_pairs) do
		local en_name = text_code.en_option_name[loc_name]
		if en_name then
			local en_value
			if en_name == '$' or en_name == 'frac' or en_name == 'sigfig' then
				if loc_value == '' then
					add_warning(parms, 2, 'cvt_empty_option', loc_name)
				elseif en_name == '$' then
					-- Value should be a single character like &quot;&quot; for the euro currency symbol, but anything is accepted.
					currency_text = (loc_value == 'euro') and '' or loc_value
				else
					local minimum
					local number, is_integer = get_number(loc_value)
					if en_name == 'frac' then
						minimum = 2
						if number and number &lt; 0 then
							parms.opt_fraction_horizontal = true
							number = -number
						end
					else
						minimum = 1
					end
					if number and is_integer and number &gt;= minimum then
						en_value = number
					else
						add_warning(parms, 1, (en_name == 'frac' and 'cvt_bad_frac' or 'cvt_bad_sigfig'), loc_name .. '=' .. loc_value)
					end
				end
			elseif accept_any_text[en_name] then
				en_value = loc_value ~= '' and loc_value or nil  -- accept non-empty user text with no validation
				if en_name == 'input' then
					-- May have something like {{convert|input=}} (empty input) if source is an infobox
					-- with optional fields. In that case, want to output nothing rather than an error.
					parms.input_text = loc_value  -- keep input because parms.input is nil if loc_value == ''
				end
			else
				en_value = text_code.en_option_value[en_name][loc_value]
				if en_value and en_value:sub(-1) == '?' then
					en_value = en_value:sub(1, -2)
					add_warning(parms, -1, 'cvt_deprecated', loc_name .. '=' .. loc_value)
				end
				if en_value == nil then
					if loc_value == '' then
						add_warning(parms, 2, 'cvt_empty_option', loc_name)
					else
						add_warning(parms, 1, 'cvt_unknown_option', loc_name .. '=' .. loc_value)
					end
				elseif en_value == '' then
					en_value = nil  -- an ignored option like adj=off
				elseif type(en_value) == 'string' and en_value:sub(1, 4) == 'opt_' then
					for _, v in ipairs(split(en_value, ',')) do
						local lhs, rhs = v:match('^(.-)=(.+)$')
						if rhs then
							parms[lhs] = tonumber(rhs) or rhs
						else
							parms[v] = true
						end
					end
					en_value = nil
				end
			end
			parms[en_name] = en_value
		else
			add_warning(parms, 1, 'cvt_unknown_option', loc_name .. '=' .. loc_value)
		end
	end
	local abbr_entered = parms.abbr
	local cfg_abbr = config.abbr
	if cfg_abbr then
		-- Don't warn if invalid because every convert would show that warning.
		if cfg_abbr == 'on always' then
			parms.abbr = 'on'
		elseif cfg_abbr == 'off always' then
			parms.abbr = 'off'
		elseif parms.abbr == nil then
			if cfg_abbr == 'on default' then
				parms.abbr = 'on'
			elseif cfg_abbr == 'off default' then
				parms.abbr = 'off'
			end
		end
	end
	if parms.abbr then
		if parms.abbr == 'unit' then
			parms.abbr = 'on'
			parms.number_word = true
		end
		parms.abbr_org = parms.abbr  -- original abbr, before any flip
	elseif parms.opt_hand_hh then
		parms.abbr_org = 'on'
		parms.abbr = 'on'
	else
		parms.abbr = 'out'  -- default is to abbreviate output only (use symbol, not name)
	end
	if parms.opt_order_out then
		-- Disable options that do not work in a useful way with order=out.
		parms.opt_flip = nil  -- override adj=flip
		parms.opt_spell_in = nil
		parms.opt_spell_out = nil
		parms.opt_spell_upper = nil
	end
	if parms.opt_spell_out and not abbr_entered then
		parms.abbr = 'off'  -- should show unit name when spelling the output value
	end
	if parms.opt_flip then
		local function swap_in_out(option)
			local value = parms[option]
			if value == 'in' then
				parms[option] = 'out'
			elseif value == 'out' then
				parms[option] = 'in'
			end
		end
		swap_in_out('abbr')
		swap_in_out('lk')
		if parms.opt_spell_in and not parms.opt_spell_out then
			-- For simplicity, and because it does not appear to be needed,
			-- user cannot set an option to spell the output only.
			parms.opt_spell_in = nil
			parms.opt_spell_out = true
		end
	end
	if parms.opt_spell_upper then
		parms.spell_upper = parms.opt_flip and 'out' or 'in'
	end
	if parms.opt_table or parms.opt_tablecen then
		if abbr_entered == nil and parms.lk == nil then
			parms.opt_values = true
		end
		parms.table_align = parms.opt_table and 'right' or 'center'
	end
	if parms.table_align or parms.opt_sortable_on then
		parms.need_table_or_sort = true
	end
	local disp_joins = text_code.disp_joins
	local default_joins = disp_joins['b']
	parms.join_between = default_joins[3] or '; '
	local disp = parms.disp
	if disp == nil then  -- special case for the most common setting
		parms.joins = default_joins
	elseif disp == 'x' then
		-- Later, parms.joins is set from the input parameters.
	else
		-- Old template does this.
		local abbr = parms.abbr
		if disp == 'slash' then
			if abbr_entered == nil then
				disp = 'slash-nbsp'
			elseif abbr == 'in' or abbr == 'out' then
				disp = 'slash-sp'
			else
				disp = 'slash-nosp'
			end
		elseif disp == 'sqbr' then
			if abbr == 'on' then
				disp = 'sqbr-nbsp'
			else
				disp = 'sqbr-sp'
			end
		end
		parms.joins = disp_joins[disp] or default_joins
		parms.join_between = parms.joins[3] or parms.join_between
		parms.wantname = parms.joins.wantname
	end
	if (en_default and not parms.opt_lang_local and (parms[1] or ''):find('%d')) or parms.opt_lang_en then
		from_en_table = nil
	end
	if en_default and from_en_table then
		-- For hiwiki: localized symbol/name is defined with the US symbol/name field,
		-- and is used if output uses localized numbers.
		parms.opt_sp_us = true
	end
	return true
end

local function get_values(parms)
	-- If successful, update parms and return true, v, i where
	--   v = table of input values
	--   i = index to next entry in parms after those processed here
	-- or return false, t where t is an error message table.
	local valinfo = collection()  -- numbered table of input values
	local range = collection()  -- numbered table of range items (having, for example, 2 range items requires 3 input values)
	local had_nocomma  -- true if removed &quot;nocomma&quot; kludge from second parameter (like &quot;tonocomma&quot;)
	local parm2 = strip(parms[2])
	if parm2 and parm2:sub(-7, -1) == 'nocomma' then
		parms[2] = strip(parm2:sub(1, -8))
		parms.opt_nocomma = true
		had_nocomma = true
	end
	local function extractor(i)
		-- If the parameter is not a value, try unpacking it as a range (&quot;1-23&quot; for &quot;1 to 23&quot;).
		-- However, &quot;-1-2/3&quot; is a negative fraction (-1), so it must be extracted first.
		-- Do not unpack a parameter if it is like &quot;3-1/2&quot; which is sometimes incorrectly
		-- used instead of &quot;3+1/2&quot; (and which should not be interpreted as &quot;3 to &quot;).
		-- Unpacked items are inserted into the parms table.
		-- The tail recursion allows combinations like &quot;1x2 to 3x4&quot;.
		local valstr = strip(parms[i])  -- trim so any '-' as a negative sign will be at start
		local success, result = extract_number(parms, valstr, i &gt; 1)
		if not success and valstr and i &lt; 20 then  -- check i to limit abuse
			local lhs, sep, rhs = valstr:match('^(%S+)%s+(%S+)%s+(%S.*)')
			if lhs and not (sep == '-' and rhs:match('/')) then
				if sep:find('%d') then
					return success, result  -- to reject {{convert|1 234 567|m}} with a decent message (en only)
				end
				parms[i] = rhs
				table.insert(parms, i, sep)
				table.insert(parms, i, lhs)
				return extractor(i)
			end
			if not valstr:match('%-.*/') then
				for _, sep in ipairs(text_code.ranges.words) do
					local start, stop = valstr:find(sep, 2, true)  -- start at 2 to skip any negative sign for range '-'
					if start then
						parms[i] = valstr:sub(stop + 1)
						table.insert(parms, i, sep)
						table.insert(parms, i, valstr:sub(1, start - 1))
						return extractor(i)
					end
				end
			end
		end
		return success, result
	end
	local i = 1
	local is_change
	while true do
		local success, info = extractor(i)  -- need to set parms.opt_nocomma before calling this
		if not success then return false, info end
		i = i + 1
		if is_change then
			info.is_change = true  -- value is after &quot;&quot; and so is a change (significant for range like {{convert|5||5|C}})
			is_change = nil
		end
		valinfo:add(info)
		local range_item = get_range(strip(parms[i]))
		if not range_item then
			break
		end
		i = i + 1
		range:add(range_item)
		if type(range_item) == 'table' then
			-- For range &quot;x&quot;, if append unit to some values, append it to all.
			parms.in_range_x = parms.in_range_x or range_item.in_range_x
			parms.out_range_x = parms.out_range_x or range_item.out_range_x
			parms.abbr_range_x = parms.abbr_range_x or range_item.abbr_range_x
			is_change = range_item.is_range_change
		end
	end
	if range.n &gt; 0 then
		if range.n &gt; 30 then  -- limit abuse, although 4 is a more likely upper limit
			return false, { 'cvt_invalid_num' }  -- misleading message but it will do
		end
		parms.range = range
	elseif had_nocomma then
		return false, { 'cvt_unknown', parm2 }
	end
	return true, valinfo, i
end

local function simple_get_values(parms)
	-- If input is like &quot;{{convert|valid_value|valid_unit|...}}&quot;,
	-- return true, i, in_unit, in_unit_table
	-- i = index in parms of what follows valid_unit, if anything.
	-- The valid_value is not negative and does not use a fraction, and
	-- no options requiring further processing of the input are used.
	-- Otherwise, return nothing or return false, parm1 for caller to interpret.
	-- Testing shows this function is successful for 96% of converts in articles,
	-- and that on average it speeds up converts by 8%.
	if parms.opt_ri or parms.opt_spell_in then return end
	local clean = to_en(strip(parms[1] or ''), parms)
	if #clean &gt; 10 or not clean:match('^[0-9.]+$') then
		return false, clean
	end
	local value = tonumber(clean)
	if not value then return end
	local info = {
		value = value,
		altvalue = value,
		singular = (value == 1),
		clean = clean,
		show = with_separator(parms, clean),
	}
	local in_unit = strip(parms[2])
	local success, in_unit_table = lookup(parms, in_unit, 'no_combination')
	if not success then return end
	in_unit_table.valinfo = { info }
	return true, 3, in_unit, in_unit_table
end

local function wikidata_call(parms, operation, ...)
	-- Return true, s where s is the result of a Wikidata operation,
	-- or return false, t where t is an error message table.
	local function worker(...)
		wikidata_code = wikidata_code or require(wikidata_module)
		wikidata_data = wikidata_data or mw.loadData(wikidata_data_module)
		return wikidata_code[operation](wikidata_data, ...)
	end
	local success, status, result = pcall(worker, ...)
	if success then
		return status, result
	end
	if parms.opt_sortable_debug then
		-- Use debug=yes to crash if an error while accessing Wikidata.
		error('Error accessing Wikidata: ' .. status, 0)
	end
	return false, { 'cvt_wd_fail' }
end

local function get_parms(parms, args)
	-- If successful, update parms and return true, unit where
	--   parms is a table of all arguments passed to the template
	--        converted to named arguments, and
	--   unit is the input unit table;
	-- or return false, t where t is an error message table.
	-- For special processing (not a convert), can also return
	-- true, wikitext where wikitext is the final result.
	-- The returned input unit table may be for a fake unit using the specified
	-- unit code as the symbol and name, and with bad_mcode = message code table.
	-- MediaWiki removes leading and trailing whitespace from the values of
	-- named arguments. However, the values of numbered arguments include any
	-- whitespace entered in the template, and whitespace is used by some
	-- parameters (example: the numbered parameters associated with &quot;disp=x&quot;).
	local kv_pairs = {}  -- table of input key:value pairs where key is a name; needed because cannot iterate parms and add new fields to it
	for k, v in pairs(args) do
		if type(k) == 'number' or k == 'test' then  -- parameter &quot;test&quot; is reserved for testing and is not translated
			parms[k] = v
		else
			kv_pairs[k] = v
		end
	end
	if parms.test == 'wikidata' then
		local ulookup = function (ucode)
			-- Use empty table for parms so it does not accumulate results when used repeatedly.
			return lookup({}, ucode, 'no_combination')
		end
		return wikidata_call(parms, '_listunits', ulookup)
	end
	local success, msg = translate_parms(parms, kv_pairs)
	if not success then return false, msg end
	if parms.input then
		success, msg = wikidata_call(parms, '_adjustparameters', parms, 1)
		if not success then return false, msg end
	end
	local success, i, in_unit, in_unit_table = simple_get_values(parms)
	if not success then
		if type(i) == 'string' and i:match('^NNN+$') then
			-- Some infoboxes have examples like {{convert|NNN|m}} (3 or more &quot;N&quot;).
			-- Output an empty string for these.
			return false, { 'cvt_no_output' }
		end
		local valinfo
		success, valinfo, i = get_values(parms)
		if not success then return false, valinfo end
		in_unit = strip(parms[i])
		i = i + 1
		success, in_unit_table = lookup(parms, in_unit, 'no_combination')
		if not success then
			in_unit = in_unit or ''
			if parms.opt_ignore_error then  -- display given unit code with no error (for use with {{val}})
				in_unit_table = ''  -- suppress error message and prevent processing of output unit
			end
			in_unit_table = setmetatable({
				symbol = in_unit, name2 = in_unit, utype = in_unit,
				scale = 1, default = '', defkey = '', linkey = '',
				bad_mcode = in_unit_table }, unit_mt)
		end
		in_unit_table.valinfo = valinfo
	end
	if parms.test == 'msg' then
		-- Am testing the messages produced when no output unit is specified, and
		-- the input unit has a missing or invalid default.
		-- Set two units for testing that.
		-- LATER: Remove this code.
		if in_unit == 'chain' then
			in_unit_table.default = nil  -- no default
		elseif in_unit == 'rd' then
			in_unit_table.default  = &quot;ft!X!m&quot;  -- an invalid expression
		end
	end
	in_unit_table.inout = 'in'  -- this is an input unit
	if not parms.range then
		local success, inext, composite_unit = get_composite(parms, i, in_unit_table)
		if not success then return false, inext end
		if composite_unit then
			in_unit_table = composite_unit
			i = inext
		end
	end
	if in_unit_table.builtin == 'mach' then
		-- As with old template, a number following Mach as the input unit is the altitude,
		-- and there is no way to specify an altitude for the output unit.
		-- Could put more code in this function to get any output unit and check for
		-- an altitude following that unit.
		local success, info = extract_number(parms, parms[i], false, true)
		if success then
			i = i + 1
			in_unit_table.altitude = info.value
		end
	end
	local word = strip(parms[i])
	i = i + 1
	local precision, is_bad_precision
	local function set_precision(text)
		local number, is_integer = get_number(text)
		if number then
			if is_integer then
				precision = number
			else
				precision = text
				is_bad_precision = true
			end
			return true  -- text was used for precision, good or bad
		end
	end
	if word and not set_precision(word) then
		parms.out_unit = parms.out_unit or word
		if set_precision(strip(parms[i])) then
			i = i + 1
		end
	end
	if parms.opt_adj_mid then
		word = parms[i]
		i = i + 1
		if word then  -- mid-text words
			if word:sub(1, 1) == '-' then
				parms.mid = word
			else
				parms.mid = ' ' .. word
			end
		end
	end
	if parms.opt_one_preunit then
		parms[parms.opt_flip and 'preunit2' or 'preunit1'] = preunits(1, parms[i])
		i = i + 1
	end
	if parms.disp == 'x' then
		-- Following is reasonably compatible with the old template.
		local first = parms[i] or ''
		local second = parms[i+1] or ''
		i = i + 2
		if strip(first) == '' then  -- user can enter '&amp;#32;' rather than ' ' to avoid the default
			first = ' [&amp;nbsp;' .. first
			second = '&amp;nbsp;]' .. second
		end
		parms.joins = { first, second }
	elseif parms.opt_two_preunits then
		local p1, p2 = preunits(2, parms[i], parms[i+1])
		i = i + 2
		if parms.preunit1 then
			-- To simplify documentation, allow unlikely use of adj=pre with disp=preunit
			-- (however, an output unit must be specified with adj=pre and with disp=preunit).
			parms.preunit1 = parms.preunit1 .. p1
			parms.preunit2 = p2
		else
			parms.preunit1, parms.preunit2 = p1, p2
		end
	end
	if precision == nil then
		if set_precision(strip(parms[i])) then
			i = i + 1
		end
	end
	if is_bad_precision then
		add_warning(parms, 1, 'cvt_bad_prec', precision)
	else
		parms.precision = precision
	end
	return true, in_unit_table
end

local function record_default_precision(parms, out_current, precision)
	-- If necessary, adjust parameters and return a possibly adjusted precision.
	-- When converting a range of values where a default precision is required,
	-- that default is calculated for each value because the result sometimes
	-- depends on the precise input and output values. This function may cause
	-- the entire convert process to be repeated in order to ensure that the
	-- same default precision is used for each individual convert.
	-- If that were not done, a range like 1000 to 1000.4 may give poor results
	-- because the first output could be heavily rounded, while the second is not.
	-- For range 1000.4 to 1000, this function can give the second convert the
	-- same default precision that was used for the first.
	if not parms.opt_round_each then
		local maxdef = out_current.max_default_precision
		if maxdef then
			if maxdef &lt; precision then
				parms.do_convert_again = true
				out_current.max_default_precision = precision
			else
				precision = out_current.max_default_precision
			end
		else
			out_current.max_default_precision = precision
		end
	end
	return precision
end

local function default_precision(parms, invalue, inclean, denominator, outvalue, in_current, out_current, extra)
	-- Return a default value for precision (an integer like 2, 0, -2).
	-- If denominator is not nil, it is the value of the denominator in inclean.
	-- Code follows procedures used in old template.
	local fudge = 1e-14  -- {{Order of magnitude}} adds this, so we do too
	local prec, minprec, adjust
	local subunit_ignore_trailing_zero
	local subunit_more_precision  -- kludge for &quot;in&quot; used in input like &quot;|2|ft|6|in&quot;
	local composite = in_current.composite
	if composite then
		subunit_ignore_trailing_zero = true  -- input &quot;|2|st|10|lb&quot; has precision 0, not -1
		if composite[#composite].exception == 'subunit_more_precision' then
			subunit_more_precision = true  -- do not use standard precision with input like &quot;|2|ft|6|in&quot;
		end
	end
	if denominator and denominator &gt; 0 then
		prec = math.max(log10(denominator), 1)
	else
		-- Count digits after decimal mark, handling cases like '12.345e6'.
		local exponent
		local integer, dot, decimals, expstr = inclean:match('^(%d*)(%.?)(%d*)(.*)')
		local e = expstr:sub(1, 1)
		if e == 'e' or e == 'E' then
			exponent = tonumber(expstr:sub(2))
		end
		if dot == '' then
			prec = subunit_ignore_trailing_zero and 0 or -integer:match('0*$'):len()
		else
			prec = #decimals
		end
		if exponent then
			-- So '1230' and '1.23e3' both give prec = -1, and '0.00123' and '1.23e-3' give 5.
			prec = prec - exponent
		end
	end
	if in_current.istemperature and out_current.istemperature then
		-- Converting between common temperatures (C, F, R, K); not keVT.
		-- Kelvin value can be almost zero, or small but negative due to precision problems.
		-- Also, an input value like -300 C (below absolute zero) gives negative kelvins.
		-- Calculate minimum precision from absolute value.
		adjust = 0
		local kelvin = abs((invalue - in_current.offset) * in_current.scale)
		if kelvin &lt; 1e-8 then  -- assume nonzero due to input or calculation precision problem
			minprec = 2
		else
			minprec = 2 - floor(log10(kelvin) + fudge)  -- 3 sigfigs in kelvin
		end
	else
		if invalue == 0 or outvalue &lt;= 0 then
			-- We are never called with a negative outvalue, but it might be zero.
			-- This is special-cased to avoid calculation exceptions.
			return record_default_precision(parms, out_current, 0)
		end
		if out_current.exception == 'integer_more_precision' and floor(invalue) == invalue then
			-- With certain output units that sometimes give poor results
			-- with default rounding, use more precision when the input
			-- value is equal to an integer. An example of a poor result
			-- is when input 50 gives a smaller output than input 49.5.
			-- Experiment shows this helps, but it does not eliminate all
			-- surprises because it is not clear whether &quot;50&quot; should be
			-- interpreted as &quot;from 45 to 55&quot; or &quot;from 49.5 to 50.5&quot;.
			adjust = -log10(in_current.scale)
		elseif subunit_more_precision then
			-- Conversion like &quot;{{convert|6|ft|1|in|cm}}&quot; (where subunit is &quot;in&quot;)
			-- has a non-standard adjust value, to give more output precision.
			adjust = log10(out_current.scale) + 2
		else
			adjust = log10(abs(invalue / outvalue))
		end
		adjust = adjust + log10(2)
		-- Ensure that the output has at least two significant figures.
		minprec = 1 - floor(log10(outvalue) + fudge)
	end
	if extra then
		adjust = extra.adjust or adjust
		minprec = extra.minprec or minprec
	end
	return record_default_precision(parms, out_current, math.max(floor(prec + adjust), minprec))
end

local function convert(parms, invalue, info, in_current, out_current)
	-- Convert given input value from one unit to another.
	-- Return output_value (a number) if a simple convert, or
	-- return f, t where
	--   f = true, t = table of information with results, or
	--   f = false, t = error message table.
	local inscale = in_current.scale
	local outscale = out_current.scale
	if not in_current.iscomplex and not out_current.iscomplex then
		return invalue * (inscale / outscale)  -- minimize overhead for most common case
	end
	if in_current.invert or out_current.invert then
		-- Inverted units, such as inverse length, inverse time, or
		-- fuel efficiency. Built-in units do not have invert set.
		if (in_current.invert or 1) * (out_current.invert or 1) &lt; 0 then
			return 1 / (invalue * inscale * outscale)
		end
		return invalue * (inscale / outscale)
	elseif in_current.offset then
		-- Temperature (there are no built-ins for this type of unit).
		if info.is_change then
			return invalue * (inscale / outscale)
		end
		return (invalue - in_current.offset) * (inscale / outscale) + out_current.offset
	else
		-- Built-in unit.
		local in_builtin = in_current.builtin
		local out_builtin = out_current.builtin
		if in_builtin and out_builtin then
			if in_builtin == out_builtin then
				return invalue
			end
			-- There are no cases (yet) where need to convert from one
			-- built-in unit to another, so this should never occur.
			return false, { 'cvt_bug_convert' }
		end
		if in_builtin == 'mach' or out_builtin == 'mach' then
			local adjust
			if in_builtin == 'mach' then
				inscale = speed_of_sound(in_current.altitude)
				adjust = outscale / 0.1
			else
				outscale = speed_of_sound(out_current.altitude)
				adjust = 0.1 / inscale
			end
			return true, {
				outvalue = invalue * (inscale / outscale),
				adjust = log10(adjust) + log10(2),
			}
		elseif in_builtin == 'hand' then
			-- 1 hand = 4 inches; 1.2 hands = 6 inches.
			-- Decimals of a hand are only defined for the first digit, and
			-- the first fractional digit should be a number of inches (1, 2 or 3).
			-- However, this code interprets the entire fractional part as the number
			-- of inches / 10 (so 1.75 inches would be 0.175 hands).
			-- A value like 12.3 hands is exactly 12*4 + 3 inches; base default precision on that.
			local integer, fracpart = math.modf(invalue)
			local inch_value = 4 * integer + 10 * fracpart  -- equivalent number of inches
			local factor = inscale / outscale
			if factor == 4 then
				-- Am converting to inches: show exact result, and use &quot;inches&quot; not &quot;in&quot; by default.
				if parms.abbr_org == nil then
					out_current.usename = true
				end
				local show = format('%g', abs(inch_value))  -- show and clean are unsigned
				if not show:find('e', 1, true) then
					return true, {
						invalue = inch_value,
						outvalue = inch_value,
						clean = show,
						show = show,
					}
				end
			end
			local outvalue = (integer + 2.5 * fracpart) * factor
			local fracstr = info.clean:match('%.(.*)') or ''
			local fmt
			if fracstr == '' then
				fmt = '%.0f'
			else
				fmt = '%.' .. format('%d', #fracstr - 1) .. 'f'
			end
			return true, {
				invalue = inch_value,
				clean = format(fmt, inch_value),
				outvalue = outvalue,
				minprec = 0,
			}
		end
	end
	return false, { 'cvt_bug_convert' }  -- should never occur
end

local function user_style(parms, i)
	-- Return text for a user-specified style for a table cell, or '' if none,
	-- given i = 1 (input style) or 2 (output style).
	local style = parms[(i == 1) and 'stylein' or 'styleout']
	if style then
		style = style:gsub('&quot;', '')
		if style ~= '' then
			if style:sub(-1) ~= ';' then
				style = style .. ';'
			end
			return style
		end
	end
	return ''
end

local function make_table_or_sort(parms, invalue, info, in_current, scaled_top)
	-- Set options to handle output for a table or a sort key, or both.
	-- The text sort key is based on the value resulting from converting
	-- the input to a fake base unit with scale = 1, and other properties
	-- required for a conversion derived from the input unit.
	-- For other modules, return the sort key in a hidden span element, and
	-- the scaled value used to generate the sort key.
	-- If scaled_top is set, it is the scaled value of the numerator of a per unit
	-- to be combined with this unit (the denominator) to make the sort key.
	-- Scaling only works with units that convert with a factor (not temperature).
	local sortkey, scaled_value
	if parms.opt_sortable_on then
		local base = {  -- a fake unit with enough fields for a valid convert
			scale = 1,
			invert = in_current.invert and 1,
			iscomplex = in_current.iscomplex,
			offset = in_current.offset and 0,
		}
		local outvalue, extra = convert(parms, invalue, info, in_current, base)
		if extra then
			outvalue = extra.outvalue
		end
		if in_current.istemperature then
			-- Have converted to kelvin; assume numbers close to zero have a
			-- rounding error and should be zero.
			if abs(outvalue) &lt; 1e-12 then
				outvalue = 0
			end
		end
		if scaled_top and outvalue ~= 0 then
			outvalue = scaled_top / outvalue
		end
		scaled_value = outvalue
		if not valid_number(outvalue) then
			if outvalue &lt; 0 then
				sortkey = '1000000000000000000'
			else
				sortkey = '9000000000000000000'
			end
		elseif outvalue == 0 then
			sortkey = '5000000000000000000'
		else
			local mag = floor(log10(abs(outvalue)) + 1e-14)
			local prefix
			if outvalue &gt; 0 then
				prefix = 7000 + mag
			else
				prefix = 2999 - mag
				outvalue = outvalue + 10^(mag+1)
			end
			sortkey = format('%d', prefix) .. format('%015.0f', floor(outvalue * 10^(14-mag)))
		end
	end
	local sortspan
	if sortkey and (parms.opt_sortable_debug or not parms.table_align) then
		sortspan = parms.opt_sortable_debug and
			'&lt;span style=&quot;border:1px solid;display:inline;&quot; class=&quot;sortkey&quot;&gt;' .. sortkey .. '&lt;/span&gt;' or
			'&lt;span style=&quot;display:none&quot; class=&quot;sortkey&quot;&gt;' .. sortkey .. '&lt;/span&gt;'
		parms.join_before = sortspan
	end
	if parms.table_align then
		local style = 'style=&quot;text-align:' .. parms.table_align .. ';'
		local sort = sortkey and ' data-sort-value=&quot;' .. sortkey .. '&quot;' or ''
		local joins = {}
		for i = 1, 2 do
			joins[i] = (i == 1 and '' or '\n|') .. style .. user_style(parms, i) .. '&quot;' .. sort .. '|'
		end
		parms.table_joins = joins
	end
	return sortspan, scaled_value
end

local cvt_to_hand

local function cvtround(parms, info, in_current, out_current)
	-- Return true, t where t is a table with the conversion results; fields:
	--   show = rounded, formatted string with the result of converting value in info,
	--      using the rounding specified in parms.
	--   singular = true if result (after rounding and ignoring any negative sign)
	--      is &quot;1&quot;, or like &quot;1.00&quot;, or is a fraction with value &lt; 1;
	--   (and more fields shown below, and a calculated 'absvalue' field).
	-- or return false, t where t is an error message table.
	-- Input info.clean uses en digits (it has been translated, if necessary).
	-- Output show uses en or non-en digits as appropriate, or can be spelled.
	if out_current.builtin == 'hand' then
		return cvt_to_hand(parms, info, in_current, out_current)
	end
	local invalue = in_current.builtin == 'hand' and info.altvalue or info.value
	local outvalue, extra = convert(parms, invalue, info, in_current, out_current)
	if parms.need_table_or_sort then
		parms.need_table_or_sort = nil  -- process using first input value only
		make_table_or_sort(parms, invalue, info, in_current)
	end
	if extra then
		if not outvalue then return false, extra end
		invalue = extra.invalue or invalue
		outvalue = extra.outvalue
	end
	if not valid_number(outvalue) then
		return false, { 'cvt_invalid_num' }
	end
	local isnegative
	if outvalue &lt; 0 then
		isnegative = true
		outvalue = -outvalue
	end
	local precision, show, exponent
	local denominator = out_current.frac
	if denominator then
		show = fraction_table(outvalue, denominator)
	else
		precision = parms.precision
		if not precision then
			if parms.sigfig then
				show, exponent = make_sigfig(outvalue, parms.sigfig)
			elseif parms.opt_round then
				local n = parms.opt_round
				if n == 0.5 then
					local integer, fracpart = math.modf(floor(2 * outvalue + 0.5) / 2)
					if fracpart == 0 then
						show = format('%.0f', integer)
					else
						show = format('%.1f', integer + fracpart)
					end
				else
					show = format('%.0f', floor((outvalue / n) + 0.5) * n)
				end
			else
				local inclean = info.clean
				if extra then
					inclean = extra.clean or inclean
					show = extra.show
				end
				if not show then
					precision = default_precision(parms, invalue, inclean, info.denominator, outvalue, in_current, out_current, extra)
				end
			end
		end
	end
	if precision then
		if precision &gt;= 0 then
			local fudge
			if precision &lt;= 8 then
				-- Add a fudge to handle common cases of bad rounding due to inability
				-- to precisely represent some values. This makes the following work:
				-- {{convert|-100.1|C|K}} and {{convert|5555000|um|m|2}}.
				-- Old template uses #expr round, which invokes PHP round().
				-- LATER: Investigate how PHP round() works.
				fudge = 2e-14
			else
				fudge = 0
			end
			local fmt = '%.' .. format('%d', precision) .. 'f'
			local success
			success, show = pcall(format, fmt, outvalue + fudge)
			if not success then
				return false, { 'cvt_big_prec', tostring(precision) }
			end
		else
			precision = -precision  -- #digits to zero (in addition to any digits after dot)
			local shift = 10 ^ precision
			show = format('%.0f', outvalue/shift)
			if show ~= '0' then
				exponent = #show + precision
			end
		end
	end
	local t = format_number(parms, show, exponent, isnegative)
	if type(show) == 'string' then
		-- Set singular using match because on some systems 0.99999999999999999 is 1.0.
		if exponent then
			t.singular = (exponent == 1 and show:match('^10*$'))
		else
			t.singular = (show == '1' or show:match('^1%.0*$'))
		end
	else
		t.fraction_table = show
		t.singular = (outvalue &lt;= 1)  -- cannot have 'fraction == 1', but if it were possible it would be singular
	end
	t.raw_absvalue = outvalue  -- absolute value before rounding
	return true, setmetatable(t, {
		__index = function (self, key)
			if key == 'absvalue' then
				-- Calculate absolute value after rounding, if needed.
				local clean, exponent = rawget(self, 'clean'), rawget(self, 'exponent')
				local value = tonumber(clean)  -- absolute value (any negative sign has been ignored)
				if exponent then
					value = value * 10^exponent
				end
				rawset(self, key, value)
				return value
			end
		end })
end

function cvt_to_hand(parms, info, in_current, out_current)
	-- Convert input to hands, inches.
	-- Return true, t where t is a table with the conversion results;
	-- or return false, t where t is an error message table.
	if parms.abbr_org == nil then
		out_current.usename = true  -- default is to show name not symbol
	end
	local precision = parms.precision
	local frac = out_current.frac
	if not frac and precision and precision &gt; 1 then
		frac = (precision == 2) and 2 or 4
	end
	local out_next = out_current.out_next
	if out_next then
		-- Use magic knowledge to determine whether the next unit is inches without requiring i18n.
		-- The following ensures that when the output combination &quot;hand in&quot; is used, the inches
		-- value is rounded to match the hands value. Also, displaying say &quot;61&quot; instead of 61.5
		-- is better as 61.5 implies the value is not 61.4.
		if out_next.exception == 'subunit_more_precision' then
			out_next.frac = frac
		end
	end
	-- Convert to inches; calculate hands from that.
	local dummy_unit_table = { scale = out_current.scale / 4, frac = frac }
	local success, outinfo = cvtround(parms, info, in_current, dummy_unit_table)
	if not success then return false, outinfo end
	local tfrac = outinfo.fraction_table
	local inches = outinfo.raw_absvalue
	if tfrac then
		inches = floor(inches)  -- integer part only; fraction added later
	else
		inches = floor(inches + 0.5)  -- a hands measurement never shows decimals of an inch
	end
	local hands, inches = divide(inches, 4)
	outinfo.absvalue = hands + inches/4  -- supposed to be the absolute rounded value, but this is close enough
	local inchstr = tostring(inches)  -- '0', '1', '2' or '3'
	if precision and precision &lt;= 0 then  -- using negative or 0 for precision rounds to nearest hand
		hands = floor(outinfo.raw_absvalue/4 + 0.5)
		inchstr = ''
	elseif tfrac then
		-- Always show an integer before fraction (like &quot;15.0&quot;) because &quot;15&quot; means 15-and-a-half hands.
		inchstr = numdot .. format_fraction(parms, 'out', false, inchstr, tfrac.numstr, tfrac.denstr)
	else
		inchstr = numdot .. from_en(inchstr)
	end
	outinfo.show = outinfo.sign .. with_separator(parms, format('%.0f', hands)) .. inchstr
	return true, outinfo
end

local function evaluate_condition(value, condition)
	-- Return true or false from applying a conditional expression to value,
	-- or throw an error if invalid.
	-- A very limited set of expressions is supported:
	--    v &lt; 9
	--    v * 9 &lt; 9
	-- where
	--    'v' is replaced with value
	--    9 is any number (as defined by Lua tonumber)
	--      only en digits are accepted
	--    '&lt;' can also be '&lt;=' or '&gt;' or '&gt;='
	-- In addition, the following form is supported:
	--    LHS and RHS
	-- where
	--    LHS, RHS = any of above expressions.
	local function compare(value, text)
		local arithop, factor, compop, limit = text:match('^%s*v%s*([*]?)(.-)([&lt;&gt;]=?)(.*)$')
		if arithop == nil then
			error('Invalid default expression', 0)
		elseif arithop == '*' then
			factor = tonumber(factor)
			if factor == nil then
				error('Invalid default expression', 0)
			end
			value = value * factor
		end
		limit = tonumber(limit)
		if limit == nil then
			error('Invalid default expression', 0)
		end
		if compop == '&lt;' then
			return value &lt; limit
		elseif compop == '&lt;=' then
			return value &lt;= limit
		elseif compop == '&gt;' then
			return value &gt; limit
		elseif compop == '&gt;=' then
			return value &gt;= limit
		end
		error('Invalid default expression', 0)  -- should not occur
	end
	local lhs, rhs = condition:match('^(.-%W)and(%W.*)')
	if lhs == nil then
		return compare(value, condition)
	end
	return compare(value, lhs) and compare(value, rhs)
end

local function get_default(value, unit_table)
	-- Return true, s where s = name of unit's default output unit,
	-- or return false, t where t is an error message table.
	-- Some units have a default that depends on the input value
	-- (the first value if a range of values is used).
	-- If '!' is in the default, the first bang-delimited field is an
	-- expression that uses 'v' to represent the input value.
	-- Example: 'v &lt; 120 ! small ! big ! suffix' (suffix is optional)
	-- evaluates 'v &lt; 120' as a boolean with result
	-- 'smallsuffix' if (value &lt; 120), or 'bigsuffix' otherwise.
	-- Input must use en digits and '.' decimal mark.
	local default = data_code.default_exceptions[unit_table.defkey or unit_table.symbol] or unit_table.default
	if not default then
		local per = unit_table.per
		if per then
			local function a_default(v, u)
				local success, ucode = get_default(v, u)
				if not success then
					return '?'  -- an unlikely error has occurred; will cause lookup of default to fail
				end
				-- Attempt to use only the first unit if a combination or output multiple.
				-- This is not bulletproof but should work for most cases.
				-- Where it does not work, the convert will need to specify the wanted output unit.
				local t = all_units[ucode]
				if t then
					local combo = t.combination
					if combo then
						-- For a multiple like ftin, the &quot;first&quot; unit (ft) is last in the combination.
						local i = t.multiple and table_len(combo) or 1
						ucode = combo[i]
					end
				else
					-- Try for an automatically generated combination.
					local item = ucode:match('^(.-)%+') or ucode:match('^(%S+)%s')
					if all_units[item] then
						return item
					end
				end
				return ucode
			end
			local unit1, unit2 = per[1], per[2]
			local def1 = (unit1 and a_default(value, unit1) or unit_table.vprefix or '')
			local def2 = a_default(1, unit2)  -- 1 because per unit of denominator
			return true, def1 .. '/' .. def2
		end
		return false, { 'cvt_no_default', unit_table.symbol }
	end
	if default:find('!', 1, true) == nil then
		return true, default
	end
	local t = split(default, '!')
	if #t == 3 or #t == 4 then
		local success, result = pcall(evaluate_condition, value, t[1])
		if success then
			default = result and t[2] or t[3]
			if #t == 4 then
				default = default .. t[4]
			end
			return true, default
		end
	end
	return false, { 'cvt_bad_default', unit_table.symbol }
end

local linked_pages  -- to record linked pages so will not link to the same page more than once

local function unlink(unit_table)
	-- Forget that the given unit has previously been linked (if it has).
	-- That is needed when processing a range of inputs or outputs when an id
	-- for the first range value may have been evaluated, but only an id for
	-- the last value is displayed, and that id may need to be linked.
	linked_pages[unit_table.unitcode or unit_table] = nil
end

local function make_link(link, id, unit_table)
	-- Return wikilink &quot;[[link|id]]&quot;, possibly abbreviated as in examples:
	--   [[Mile|mile]]  --&gt; [[mile]]
	--   [[Mile|miles]] --&gt; [[mile]]s
	-- However, just id is returned if:
	-- * no link given (so caller does not need to check if a link was defined); or
	-- * link has previously been used during the current convert (to avoid overlinking).
	local link_key
	if unit_table then
		link_key = unit_table.unitcode or unit_table
	else
		link_key = link
	end
	if not link or link == '' or linked_pages[link_key] then
		return id
	end
	linked_pages[link_key] = true
	-- Following only works for language en, but it should be safe on other wikis,
	-- and overhead of doing it generally does not seem worthwhile.
	local l = link:sub(1, 1):lower() .. link:sub(2)
	if link == id or l == id then
		return '[[' .. id .. ']]'
	elseif link .. 's' == id or l .. 's' == id then
		return '[[' .. id:sub(1, -2) .. ']]s'
	else
		return '[[' .. link .. '|' .. id .. ']]'
	end
end

local function variable_name(clean, unit_table)
	-- For slwiki, a unit name depends on the value.
	-- Parameter clean is the unsigned rounded value in en digits, as a string.
	-- Value             Source    Example for &quot;m&quot;
	-- integer 1:        name1     meter  (also is the name of the unit)
	-- integer 2:        var{1}    metra
	-- integer 3 and 4:  var{2}    metri
	-- integer else:     var{3}    metrov (0 and 5 or more)
	-- real/fraction:    var{4}    metra
	-- var{i} means the i'th field in unit_table.varname if it exists and has
	-- an i'th field, otherwise name2.
	-- Fields are separated with &quot;!&quot; and are not empty.
	-- A field for a unit using an SI prefix has the prefix name inserted,
	-- replacing '#' if found, or before the field otherwise.
	local vname
	if clean == '1' then
		vname = unit_table.name1
	elseif unit_table.varname then
		local i
		if clean == '2' then
			i = 1
		elseif clean == '3' or clean == '4' then
			i = 2
		elseif clean:find('.', 1, true) then
			i = 4
		else
			i = 3
		end
		if i &gt; 1 and varname == 'pl' then
			i = i - 1
		end
		vname = split(unit_table.varname, '!')[i]
	end
	if vname then
		local si_name = rawget(unit_table, 'si_name') or ''
		local pos = vname:find('#', 1, true)
		if pos then
			vname = vname:sub(1, pos - 1) .. si_name .. vname:sub(pos + 1)
		else
			vname = si_name .. vname
		end
		return vname
	end
	return unit_table.name2
end

local function linked_id(parms, unit_table, key_id, want_link, clean)
	-- Return final unit id (symbol or name), optionally with a wikilink,
	-- and update unit_table.sep if required.
	-- key_id is one of: 'symbol', 'sym_us', 'name1', 'name1_us', 'name2', 'name2_us'.
	local abbr_on = (key_id == 'symbol' or key_id == 'sym_us')
	if abbr_on and want_link then
		local symlink = rawget(unit_table, 'symlink')
		if symlink then
			return symlink  -- for exceptions that have the linked symbol built-in
		end
	end
	local multiplier = rawget(unit_table, 'multiplier')
	local per = unit_table.per
	if per then
		local unit1 = per[1]  -- top unit_table, or nil
		local unit2 = per[2]  -- bottom unit_table
		if abbr_on then
			if not unit1 then
				unit_table.sep = ''  -- no separator in &quot;$2/acre&quot;
			end
			if not want_link then
				local symbol = unit_table.symbol_raw
				if symbol then
					return symbol  -- for exceptions that have the symbol built-in
				end
			end
		end
		local key_id2  -- unit2 is always singular
		if key_id == 'name2' then
			key_id2 = 'name1'
		elseif key_id == 'name2_us' then
			key_id2 = 'name1_us'
		else
			key_id2 = key_id
		end
		local result
		if abbr_on then
			result = '/'
		elseif omitsep then
			result = per_word
		elseif unit1 then
			result = ' ' .. per_word .. ' '
		else
			result = per_word .. ' '
		end
		if want_link and unit_table.link then
			if abbr_on or not varname then
				result = (unit1 and linked_id(parms, unit1, key_id, false, clean) or '') .. result .. linked_id(parms, unit2, key_id2, false, '1')
			else
				result = (unit1 and variable_name(clean, unit1) or '') .. result .. variable_name('1', unit2)
			end
			if omit_separator(result) then
				unit_table.sep = ''
			end
			return make_link(unit_table.link, result, unit_table)
		end
		if unit1 then
			result = linked_id(parms, unit1, key_id, want_link, clean) .. result
			if unit1.sep then
				unit_table.sep = unit1.sep
			end
		elseif omitsep then
			unit_table.sep = ''
		end
		return result .. linked_id(parms, unit2, key_id2, want_link, '1')
	end
	if multiplier then
		-- A multiplier (like &quot;100&quot; in &quot;100km&quot;) forces the unit to be plural.
		multiplier = from_en(multiplier)
		if not omitsep then
			multiplier = multiplier .. (abbr_on and '&amp;nbsp;' or ' ')
		end
		if not abbr_on then
			if key_id == 'name1' then
				key_id = 'name2'
			elseif key_id == 'name1_us' then
				key_id = 'name2_us'
			end
		end
	else
		multiplier = ''
	end
	local id = unit_table.fixed_name or ((varname and not abbr_on) and variable_name(clean, unit_table) or unit_table[key_id])
	if omit_separator(id) then
		unit_table.sep = ''
	end
	if want_link then
		local link = data_code.link_exceptions[unit_table.linkey or unit_table.symbol] or unit_table.link
		if link then
			local before = ''
			local i = unit_table.customary
			if i == 1 and parms.opt_sp_us then
				i = 2  -- show &quot;U.S.&quot; not &quot;US&quot;
			end
			if i == 3 and abbr_on then
				i = 4  -- abbreviate &quot;imperial&quot; to &quot;imp&quot;
			end
			local customary = text_code.customary_units[i]
			if customary then
				-- LATER: This works for language en only, but it's esoteric so ignore for now.
				local pertext
				if id:sub(1, 1) == '/' then
					-- Want unit &quot;/USgal&quot; to display as &quot;/U.S. gal&quot;, not &quot;U.S. /gal&quot;.
					pertext = '/'
					id = id:sub(2)
				elseif id:sub(1, 4) == 'per ' then
					-- Similarly want &quot;per U.S. gallon&quot;, not &quot;U.S. per gallon&quot; (but in practice this is unlikely to be used).
					pertext = 'per '
					id = id:sub(5)
				else
					pertext = ''
				end
				-- Omit any &quot;US&quot;/&quot;U.S.&quot;/&quot;imp&quot;/&quot;imperial&quot; from start of id since that will be inserted.
				local removes = (i &lt; 3) and { 'US&amp;nbsp;', 'US ', 'U.S.&amp;nbsp;', 'U.S. ' } or { 'imp&amp;nbsp;', 'imp ', 'imperial ' }
				for _, prefix in ipairs(removes) do
					local plen = #prefix
					if id:sub(1, plen) == prefix then
						id = id:sub(plen + 1)
						break
					end
				end
				before = pertext .. make_link(customary.link, customary[1]) .. ' '
			end
			id = before .. make_link(link, id, unit_table)
		end
	end
	return multiplier .. id
end

local function make_id(parms, which, unit_table)
	-- Return id, f where
	--   id = unit name or symbol, possibly modified
	--   f = true if id is a name, or false if id is a symbol
	-- using the value for index 'which', and for 'in' or 'out' (unit_table.inout).
	-- Result is '' if no symbol/name is to be used.
	-- In addition, set unit_table.sep = ' ' or '&amp;nbsp;' or ''
	-- (the separator that caller will normally insert before the id).
	if parms.opt_values then
		unit_table.sep = ''
		return ''
	end
	local inout = unit_table.inout
	local info = unit_table.valinfo[which]
	local abbr_org = parms.abbr_org
	local adjectival = parms.opt_adjectival
	local lk = parms.lk
	local want_link = (lk == 'on' or lk == inout)
	local usename = unit_table.usename
	local singular = info.singular
	local want_name
	if usename then
		want_name = true
	else
		if abbr_org == nil then
			if parms.wantname then
				want_name = true
			end
			if unit_table.usesymbol then
				want_name = false
			end
		end
		if want_name == nil then
			local abbr = parms.abbr
			if abbr == 'on' or abbr == inout or (abbr == 'mos' and inout == 'out') then
				want_name = false
			else
				want_name = true
			end
		end
	end
	local key
	if want_name then
		if lk == nil and unit_table.builtin == 'hand' then
			want_link = true
		end
		if parms.opt_use_nbsp then
			unit_table.sep = '&amp;nbsp;'
		else
			unit_table.sep = ' '
		end
		if parms.opt_singular then
			local value
			if inout == 'in' then
				value = info.value
			else
				value = info.absvalue
			end
			if value then  -- some unusual units do not always set value field
				value = abs(value)
				singular = (0 &lt; value and value &lt; 1.0001)
			end
		end
		if unit_table.engscale then
			-- engscale: so &quot;|1|e3kg&quot; gives &quot;1 thousand kilograms&quot; (plural)
			singular = false
		end
		key = (adjectival or singular) and 'name1' or 'name2'
		if parms.opt_sp_us then
			key = key .. '_us'
		end
	else
		if unit_table.builtin == 'hand' then
			if parms.opt_hand_hh then
				unit_table.symbol = 'hh'  -- LATER: might want i18n applied to this
			end
		end
		unit_table.sep = '&amp;nbsp;'
		key = parms.opt_sp_us and 'sym_us' or 'symbol'
	end
	return linked_id(parms, unit_table, key, want_link, info.clean), want_name
end

local function decorate_value(parms, unit_table, which, number_word)
	-- If needed, update unit_table so values will be shown with extra information.
	-- For consistency with the old template (but different from fmtpower),
	-- the style to display powers of 10 includes &quot;display:none&quot; to allow some
	-- browsers to copy, for example, &quot;10&quot; as &quot;10^3&quot;, rather than as &quot;103&quot;.
	local info
	local engscale = unit_table.engscale
	local prefix = unit_table.vprefix
	if engscale or prefix then
		info = unit_table.valinfo[which]
		if info.decorated then
			return  -- do not redecorate if repeating convert
		end
		info.decorated = true
		if engscale then
			local inout = unit_table.inout
			local abbr = parms.abbr
			if (abbr == 'on' or abbr == inout) and not parms.number_word then
				info.show = info.show ..
				'&lt;span style=&quot;margin-left:0.2em&quot;&gt;&lt;span style=&quot;margin-left:0.1em&quot;&gt;' ..
				from_en('10') ..
				'&lt;/span&gt;&lt;/span&gt;&lt;s style=&quot;display:none&quot;&gt;^&lt;/s&gt;&lt;sup&gt;' ..
				from_en(tostring(engscale.exponent)) .. '&lt;/sup&gt;'
			elseif number_word then
				local number_id
				local lk = parms.lk
				if lk == 'on' or lk == inout then
					number_id = make_link(engscale.link, engscale[1])
				else
					number_id = engscale[1]
				end
				-- WP:NUMERAL recommends &quot;&amp;nbsp;&quot; in values like &quot;12 million&quot;.
				info.show = info.show .. (parms.opt_adjectival and '-' or '&amp;nbsp;') .. number_id
			end
		end
		if prefix then
			info.show = prefix .. info.show
		end
	end
end

local function process_input(parms, in_current)
	-- Processing required once per conversion.
	-- Return block of text to represent input (value/unit).
	if parms.opt_output_only or parms.opt_output_number_only or parms.opt_output_unit_only then
		parms.joins = { '', '' }
		return ''
	end
	local first_unit
	local composite = in_current.composite  -- nil or table of units
	if composite then
		first_unit = composite[1]
	else
		first_unit = in_current
	end
	local id1, want_name = make_id(parms, 1, first_unit)
	local sep = first_unit.sep  -- separator between value and unit, set by make_id
	local preunit = parms.preunit1
	if preunit then
		sep = ''  -- any separator is included in preunit
	else
		preunit = ''
	end
	if parms.opt_input_unit_only then
		parms.joins = { '', '' }
		if composite then
			local parts = { id1 }
			for i, unit in ipairs(composite) do
				if i &gt; 1 then
					table.insert(parts, (make_id(parms, 1, unit)))
				end
			end
			id1 = table.concat(parts, ' ')
		end
		if want_name and parms.opt_adjectival then
			return preunit .. hyphenated(id1)
		end
		return  preunit .. id1
	end
	if parms.opt_also_symbol and not composite then
		local join1 = parms.joins[1]
		if join1 == ' (' or join1 == ' [' then
			parms.joins = { ' [' .. first_unit[parms.opt_sp_us and 'sym_us' or 'symbol'] .. ']' .. join1 , parms.joins[2] }
		end
	end
	if in_current.builtin == 'mach' and first_unit.sep ~= '' then  -- '' means omitsep with non-enwiki name
		local prefix = id1 .. '&amp;nbsp;'
		local range = parms.range
		local valinfo = first_unit.valinfo
		local result = prefix .. valinfo[1].show
		if range then
			-- For simplicity and because more not needed, handle one range item only.
			local prefix2 = make_id(parms, 2, first_unit) .. '&amp;nbsp;'
			result = range_text(range[1], want_name, parms, result, prefix2 .. valinfo[2].show, 'in')
		end
		return preunit .. result
	end
	if composite then
		-- Simplify: assume there is no range, and no decoration.
		local mid = (not parms.opt_flip) and parms.mid or ''
		local sep1 = '&amp;nbsp;'
		local sep2 = ' '
		if parms.opt_adjectival and want_name then
			sep1 = '-'
			sep2 = '-'
		end
		if omitsep and sep == '' then
			-- Testing the id of the most significant unit should be sufficient.
			sep1 = ''
			sep2 = ''
		end
		local parts = { first_unit.valinfo[1].show .. sep1 .. id1 }
		for i, unit in ipairs(composite) do
			if i &gt; 1 then
				table.insert(parts, unit.valinfo[1].show .. sep1 .. (make_id(parms, 1, unit)))
			end
		end
		return table.concat(parts, sep2) .. mid
	end
	local add_unit = (parms.abbr == 'mos') or
		parms[parms.opt_flip and 'out_range_x' or 'in_range_x'] or
		(not want_name and parms.abbr_range_x)
	local range = parms.range
	if range and not add_unit then
		unlink(first_unit)
	end
	local id = range and make_id(parms, range.n + 1, first_unit) or id1
	local extra, was_hyphenated = hyphenated_maybe(parms, want_name, sep, id, 'in')
	if was_hyphenated then
		add_unit = false
	end
	local result
	local valinfo = first_unit.valinfo
	if range then
		for i = 0, range.n do
			local number_word
			if i == range.n then
				add_unit = false
				number_word = true
			end
			decorate_value(parms, first_unit, i+1, number_word)
			local show = valinfo[i+1].show
			if add_unit then
				show = show .. first_unit.sep .. (i == 0 and id1 or make_id(parms, i+1, first_unit))
			end
			if i == 0 then
				result = show
			else
				result = range_text(range[i], want_name, parms, result, show, 'in')
			end
		end
	else
		decorate_value(parms, first_unit, 1, true)
		result = valinfo[1].show
	end
	return result .. preunit .. extra
end

local function process_one_output(parms, out_current)
	-- Processing required for each output unit.
	-- Return block of text to represent output (value/unit).
	local inout = out_current.inout  -- normally 'out' but can be 'in' for order=out
	local id1, want_name = make_id(parms, 1, out_current)
	local sep = out_current.sep  -- set by make_id
	local preunit = parms.preunit2
	if preunit then
		sep = ''  -- any separator is included in preunit
	else
		preunit = ''
	end
	if parms.opt_output_unit_only then
		if want_name and parms.opt_adjectival then
			return preunit .. hyphenated(id1)
		end
		return preunit .. id1
	end
	if out_current.builtin == 'mach' and out_current.sep ~= '' then  -- '' means omitsep with non-enwiki name
		local prefix = id1 .. '&amp;nbsp;'
		local range = parms.range
		local valinfo = out_current.valinfo
		local result = prefix .. valinfo[1].show
		if range then
			-- For simplicity and because more not needed, handle one range item only.
			result = range_text(range[1], want_name, parms, result, prefix .. valinfo[2].show, inout)
		end
		return preunit .. result
	end
	local add_unit = (parms[parms.opt_flip and 'in_range_x' or 'out_range_x'] or
		(not want_name and parms.abbr_range_x)) and
		not parms.opt_output_number_only
	local range = parms.range
	if range and not add_unit then
		unlink(out_current)
	end
	local id = range and make_id(parms, range.n + 1, out_current) or id1
	local extra, was_hyphenated = hyphenated_maybe(parms, want_name, sep, id, inout)
	if was_hyphenated then
		add_unit = false
	end
	local result
	local valinfo = out_current.valinfo
	if range then
		for i = 0, range.n do
			local number_word
			if i == range.n then
				add_unit = false
				number_word = true
			end
			decorate_value(parms, out_current, i+1, number_word)
			local show = valinfo[i+1].show
			if add_unit then
				show = show .. out_current.sep .. (i == 0 and id1 or make_id(parms, i+1, out_current))
			end
			if i == 0 then
				result = show
			else
				result = range_text(range[i], want_name, parms, result, show, inout)
			end
		end
	else
		decorate_value(parms, out_current, 1, true)
		result = valinfo[1].show
	end
	if parms.opt_output_number_only then
		return result
	end
	return result .. preunit .. extra
end

local function make_output_single(parms, in_unit_table, out_unit_table)
	-- Return true, item where item = wikitext of the conversion result
	-- for a single output (which is not a combination or a multiple);
	-- or return false, t where t is an error message table.
	if parms.opt_order_out and in_unit_table.unitcode == out_unit_table.unitcode then
		out_unit_table.valinfo = in_unit_table.valinfo
	else
		out_unit_table.valinfo = collection()
		for _, v in ipairs(in_unit_table.valinfo) do
			local success, info = cvtround(parms, v, in_unit_table, out_unit_table)
			if not success then return false, info end
			out_unit_table.valinfo:add(info)
		end
	end
	return true, process_one_output(parms, out_unit_table)
end

local function make_output_multiple(parms, in_unit_table, out_unit_table)
	-- Return true, item where item = wikitext of the conversion result
	-- for an output which is a multiple (like 'ftin');
	-- or return false, t where t is an error message table.
	local inout = out_unit_table.inout  -- normally 'out' but can be 'in' for order=out
	local multiple = out_unit_table.multiple  -- table of scaling factors (will not be nil)
	local combos = out_unit_table.combination  -- table of unit tables (will not be nil)
	local abbr = parms.abbr
	local abbr_org = parms.abbr_org
	local disp = parms.disp
	local want_name = (abbr_org == nil and (disp == 'or' or disp == 'slash')) or
						not (abbr == 'on' or abbr == inout or abbr == 'mos')
	local want_link = (parms.lk == 'on' or parms.lk == inout)
	local mid = parms.opt_flip and parms.mid or ''
	local sep1 = '&amp;nbsp;'
	local sep2 = ' '
	if parms.opt_adjectival and want_name then
		sep1 = '-'
		sep2 = '-'
	end
	local do_spell = parms.opt_spell_out
	parms.opt_spell_out = nil  -- so the call to cvtround does not spell the value
	local function make_result(info, isfirst)
		local fmt, outvalue, sign
		local results = {}
		for i = 1, #combos do
			local tfrac, thisvalue, strforce
			local out_current = combos[i]
			out_current.inout = inout
			local scale = multiple[i]
			if i == 1 then  -- least significant unit ('in' from 'ftin')
				local decimals
				out_current.frac = out_unit_table.frac
				local success, outinfo = cvtround(parms, info, in_unit_table, out_current)
				if not success then return false, outinfo end
				if isfirst then
					out_unit_table.valinfo = { outinfo }  -- in case output value of first least significant unit is needed
				end
				sign = outinfo.sign
				tfrac = outinfo.fraction_table
				if outinfo.is_scientific then
					strforce = outinfo.show
					decimals = ''
				elseif tfrac then
					decimals = ''
				else
					local show = outinfo.show  -- number as a string in local language
					local p1, p2 = show:find(numdot, 1, true)
					decimals = p1 and show:sub(p2 + 1) or ''  -- text after numdot, if any
				end
				fmt = '%.' .. ulen(decimals) .. 'f'  -- to reproduce precision
				if decimals == '' then
					if tfrac then
						outvalue = floor(outinfo.raw_absvalue)  -- integer part only; fraction added later
					else
						outvalue = floor(outinfo.raw_absvalue + 0.5)  -- keep all integer digits of least significant unit
					end
				else
					outvalue = outinfo.absvalue
				end
			end
			if scale then
				outvalue, thisvalue = divide(outvalue, scale)
			else
				thisvalue = outvalue
			end
			local id
			if want_name then
				if varname then
					local clean
					if strforce or tfrac then
						clean = '.1'  -- dummy value to force name for floating point
					else
						clean = format(fmt, thisvalue)
					end
					id = variable_name(clean, out_current)
				else
					local key = 'name2'
					if parms.opt_adjectival then
						key = 'name1'
					elseif tfrac then
						if thisvalue == 0 then
							key = 'name1'
						end
					elseif parms.opt_singular then
						if 0 &lt; thisvalue and thisvalue &lt; 1.0001 then
							key = 'name1'
						end
					else
						if thisvalue == 1 then
							key = 'name1'
						end
					end
					id = out_current[key]
				end
			else
				id = out_current['symbol']
			end
			if i == 1 and omit_separator(id) then
				-- Testing the id of the least significant unit should be sufficient.
				sep1 = ''
				sep2 = ''
			end
			if want_link then
				local link = out_current.link
				if link then
					id = make_link(link, id, out_current)
				end
			end
			local strval
			local spell_inout = (i == #combos or outvalue == 0) and inout or ''  -- trick so the last value processed (first displayed) has uppercase, if requested
			if strforce and outvalue == 0 then
				sign = ''  -- any sign is in strforce
				strval = strforce  -- show small values in scientific notation; will only use least significant unit
			elseif tfrac then
				local wholestr = (thisvalue &gt; 0) and tostring(thisvalue) or nil
				strval = format_fraction(parms, spell_inout, false, wholestr, tfrac.numstr, tfrac.denstr, do_spell)
			else
				strval = (thisvalue == 0) and from_en('0') or with_separator(parms, format(fmt, thisvalue))
				if do_spell then
					strval = spell_number(parms, spell_inout, strval) or strval
				end
			end
			table.insert(results, strval .. sep1 .. id)
			if outvalue == 0 then
				break
			end
			fmt = '%.0f'  -- only least significant unit can have a non-integral value
		end
		local reversed, count = {}, #results
		for i = 1, count do
			reversed[i] = results[count + 1 - i]
		end
		return true, sign .. table.concat(reversed, sep2)
	end
	local valinfo = in_unit_table.valinfo
	local success, result = make_result(valinfo[1], true)
	if not success then return false, result end
	local range = parms.range
	if range then
		for i = 1, range.n do
			local success, result2 = make_result(valinfo[i+1])
			if not success then return false, result2 end
			result = range_text(range[i], want_name, parms, result, result2, inout)
		end
	end
	return true, result .. mid
end

local function process(parms, in_unit_table, out_unit_table)
	-- Return true, s, outunit where s = final wikitext result,
	-- or return false, t where t is an error message table.
	linked_pages = {}
	local success, bad_output
	local bad_input_mcode = in_unit_table.bad_mcode  -- nil if input unit is a valid convert unit
	local out_unit = parms.out_unit
	if out_unit == nil or out_unit == '' or type(out_unit) == 'function' then
		if bad_input_mcode or parms.opt_input_unit_only then
			bad_output = ''
		else
			local getdef = type(out_unit) == 'function' and out_unit or get_default
			success, out_unit = getdef(in_unit_table.valinfo[1].value, in_unit_table)
			parms.out_unit = out_unit
			if not success then
				bad_output = out_unit
			end
		end
	end
	if not bad_output and not out_unit_table then
		success, out_unit_table = lookup(parms, out_unit, 'any_combination')
		if success then
			local mismatch = check_mismatch(in_unit_table, out_unit_table)
			if mismatch then
				bad_output = mismatch
			end
		else
			bad_output = out_unit_table
		end
	end
	local lhs, rhs
	local flipped = parms.opt_flip and not bad_input_mcode
	if bad_output then
		rhs = (bad_output == '') and '' or message(parms, bad_output)
	elseif parms.opt_input_unit_only then
		rhs = ''
	else
		local combos  -- nil (for 'ft' or 'ftin'), or table of unit tables (for 'm ft')
		if not out_unit_table.multiple then  -- nil/false ('ft' or 'm ft'), or table of factors ('ftin')
			combos = out_unit_table.combination
		end
		local frac = parms.frac  -- nil or denominator of fraction for output values
		if frac then
			-- Apply fraction to the unit (if only one), or to non-SI units (if a combination),
			-- except that if a precision is also specified, the fraction only applies to
			-- the hand unit; that allows the following result:
			-- {{convert|156|cm|in hand|1|frac=2}}  156 centimetres (61.4 in; 15.1 hands)
			-- However, the following is handled elsewhere as a special case:
			-- {{convert|156|cm|hand in|1|frac=2}}  156 centimetres (15.1 hands; 61 in)
			if combos then
				local precision = parms.precision
				for _, unit in ipairs(combos) do
					if unit.builtin == 'hand' or (not precision and not unit.prefixes) then
						unit.frac = frac
					end
				end
			else
				out_unit_table.frac = frac
			end
		end
		local outputs = {}
		local imax = combos and #combos or 1  -- 1 (single unit) or number of unit tables
		if imax == 1 then
			parms.opt_order_out = nil  -- only useful with an output combination
		end
		if not flipped and not parms.opt_order_out then
			-- Process left side first so any duplicate links (from lk=on) are suppressed
			-- on right. Example: {{convert|28|e9pc|e9ly|abbr=off|lk=on}}
			lhs = process_input(parms, in_unit_table)
		end
		for i = 1, imax do
			local success, item
			local out_current = combos and combos[i] or out_unit_table
			out_current.inout = 'out'
			if i == 1 then
				if imax &gt; 1 and out_current.builtin == 'hand' then
					out_current.out_next = combos[2]  -- built-in hand can influence next unit in a combination
				end
				if parms.opt_order_out then
					out_current.inout = 'in'
				end
			end
			if out_current.multiple then
				success, item = make_output_multiple(parms, in_unit_table, out_current)
			else
				success, item = make_output_single(parms, in_unit_table, out_current)
			end
			if not success then return false, item end
			outputs[i] = item
		end
		if parms.opt_order_out then
			lhs = outputs[1]
			table.remove(outputs, 1)
		end
		local sep = parms.table_joins and parms.table_joins[2] or parms.join_between
		rhs = table.concat(outputs, sep)
	end
	if flipped or not lhs then
		local input = process_input(parms, in_unit_table)
		if flipped then
			lhs = rhs
			rhs = input
		else
			lhs = input
		end
	end
	if parms.join_before then
		lhs = parms.join_before .. lhs
	end
	local wikitext
	if bad_input_mcode then
		if bad_input_mcode == '' then
			wikitext = lhs
		else
			wikitext = lhs .. message(parms, bad_input_mcode)
		end
	elseif parms.table_joins then
		wikitext = parms.table_joins[1] .. lhs .. parms.table_joins[2] .. rhs
	else
		wikitext = lhs .. parms.joins[1] .. rhs .. parms.joins[2]
	end
	if parms.warnings and not bad_input_mcode then
		wikitext = wikitext .. parms.warnings
	end
	return true, wikitext, out_unit_table
end

local function main_convert(frame)
	-- Do convert, and if needed, do it again with higher default precision.
	local parms = { frame = frame }  -- will hold template arguments, after translation
	set_config(frame.args)
	local success, result = get_parms(parms, frame:getParent().args)
	if success then
		if type(result) ~= 'table' then
			return tostring(result)
		end
		local in_unit_table = result
		local out_unit_table
		for _ = 1, 2 do  -- use counter so cannot get stuck repeating convert
			success, result, out_unit_table = process(parms, in_unit_table, out_unit_table)
			if success and parms.do_convert_again then
				parms.do_convert_again = false
			else
				break
			end
		end
	end
	-- If input=x gives a problem, the result should be just the user input
	-- (if x is a property like P123 it has been replaced with '').
	-- An unknown input unit would display the input and an error message
	-- with success == true at this point.
	-- Also, can have success == false with a message that outputs an empty string.
	if parms.input_text then
		if success and not parms.have_problem then
			return result
		end
		local cat
		if parms.tracking then
			-- Add a tracking category using the given text as the category sort key.
			-- There is currently only one type of tracking, but in principle multiple
			-- items could be tracked, using different sort keys for convenience.
			cat = wanted_category('tracking', parms.tracking)
		end
		return parms.input_text .. (cat or '')
	end
	return success and result or message(parms, result)
end

local function _unit(unitcode, options)
	-- Helper function for Module:Val to look up a unit.
	-- Parameter unitcode must be a string to identify the wanted unit.
	-- Parameter options must be nil or a table with optional fields:
	--   value = number (for sort key; default value is 1)
	--   scaled_top = nil for a normal unit, or a number for a unit which is
	--                the denominator of a per unit (for sort key)
	--   si = { 'symbol', 'link' }
	--                (a table with two strings) to make an SI unit
	--                that will be used for the look up
	--   link = true if result should be [[linked]]
	--   sort = 'on' or 'debug' if result should include a sort key in a
	--                span element ('debug' makes the key visible)
	--   name = true for the name of the unit instead of the symbol
	--   us = true for the US spelling of the unit, if any
	-- Return nil if unitcode is not a non-empty string.
	-- Otherwise return a table with fields:
	--   text = requested symbol or name of unit, optionally linked
	--   scaled_value = input value adjusted by unit scale; used for sort key
	--   sortspan = span element with sort key like that provided by {{ntsh}},
	--     calculated from the result of converting value
	--     to a base unit with scale 1.
	--   unknown = true if the unitcode was not known
	unitcode = strip(unitcode)
	if unitcode == nil or unitcode == '' then
		return nil
	end
	set_config({})
	linked_pages = {}
	options = options or {}
	local parms = {
		abbr = options.name and 'off' or 'on',
		lk = options.link and 'on' or nil,
		opt_sp_us = options.us and true or nil,
		opt_ignore_error = true,  -- do not add pages using this function to 'what links here' for Module:Convert/extra
		opt_sortable_on = options.sort == 'on' or options.sort == 'debug',
		opt_sortable_debug = options.sort == 'debug',
	}
	if options.si then
		-- Make a dummy table of units (just one unit) for lookup to use.
		-- This makes lookup recognize any SI prefix in the unitcode.
		local symbol = options.si[1] or '?'
		parms.unittable = { [symbol] = {
			_name1 = symbol,
			_name2 = symbol,
			_symbol = symbol,
			utype = symbol,
			scale = symbol == 'g' and 0.001 or 1,
			prefixes = 1,
			default = symbol,
			link = options.si[2],
		}}
	end
	local success, unit_table = lookup(parms, unitcode, 'no_combination')
	if not success then
		unit_table = setmetatable({
			symbol = unitcode, name2 = unitcode, utype = unitcode,
			scale = 1, default = '', defkey = '', linkey = '' }, unit_mt)
	end
	local value = tonumber(options.value) or 1
	local clean = tostring(abs(value))
	local info = {
		value = value,
		altvalue = value,
		singular = (clean == '1'),
		clean = clean,
		show = clean,
	}
	unit_table.inout = 'in'
	unit_table.valinfo = { info }
	local sortspan, scaled_value
	if options.sort then
		sortspan, scaled_value = make_table_or_sort(parms, value, info, unit_table, options.scaled_top)
	end
	return {
		text = make_id(parms, 1, unit_table),
		sortspan = sortspan,
		scaled_value = scaled_value,
		unknown = not success and true or nil,
	}
end

return { convert = main_convert, _unit = _unit }</text>
      <sha1>59lqgnwzlhq9nwdy3nyki88i6bs1u05</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert/data</title>
    <ns>828</ns>
    <id>38570725</id>
    <revision>
      <id>795876381</id>
      <parentid>788386388</parentid>
      <timestamp>2017-08-17T01:39:27Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="178050">-- Conversion data used by [[Module:Convert]] which uses mw.loadData() for
-- read-only access to this module so that it is loaded only once per page.
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.
--
-- These data tables follow:
--   all_units           all properties for a unit, including default output
--   default_exceptions  exceptions for default output ('kg' and 'g' have different defaults)
--   link_exceptions     exceptions for links ('kg' and 'g' have different links)
--
-- These tables are generated by a script which reads the wikitext of a page that
-- documents the required properties of each unit; see [[:en:Module:Convert/doc]].

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local all_units = {
    [&quot;Gy&quot;] = {
	_name1   = &quot;gray&quot;,
	_symbol  = &quot;Gy&quot;,
	utype    = &quot;absorbed radiation dose&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;rad&quot;,
	link     = &quot;Gray (unit)&quot;,
    },
    [&quot;rad&quot;] = {
	_name1   = &quot;rad&quot;,
	_symbol  = &quot;rad&quot;,
	utype    = &quot;absorbed radiation dose&quot;,
	scale    = 0.01,
	prefixes = 1,
	default  = &quot;Gy&quot;,
	link     = &quot;Rad (unit)&quot;,
    },
    [&quot;cm/s2&quot;] = {
	name1    = &quot;centimetre per second squared&quot;,
	name1_us = &quot;centimeter per second squared&quot;,
	name2    = &quot;centimetres per second squared&quot;,
	name2_us = &quot;centimeters per second squared&quot;,
	symbol   = &quot;cm/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.01,
	default  = &quot;ft/s2&quot;,
	link     = &quot;Gal (unit)&quot;,
    },
    [&quot;ft/s2&quot;] = {
	name1    = &quot;foot per second squared&quot;,
	name2    = &quot;feet per second squared&quot;,
	symbol   = &quot;ft/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.3048,
	default  = &quot;m/s2&quot;,
    },
    [&quot;g0&quot;] = {
	name1    = &quot;standard gravity&quot;,
	name2    = &quot;standard gravities&quot;,
	symbol   = &quot;''g&lt;sub&gt;0&lt;/sub&gt;''&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 9.80665,
	default  = &quot;m/s2&quot;,
    },
    [&quot;km/hs&quot;] = {
	name1    = &quot;kilometre per hour per second&quot;,
	name1_us = &quot;kilometer per hour per second&quot;,
	name2    = &quot;kilometres per hour per second&quot;,
	name2_us = &quot;kilometers per hour per second&quot;,
	symbol   = &quot;km/(hs)&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mph/s&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;km/s2&quot;] = {
	name1    = &quot;kilometre per second squared&quot;,
	name1_us = &quot;kilometer per second squared&quot;,
	name2    = &quot;kilometres per second squared&quot;,
	name2_us = &quot;kilometers per second squared&quot;,
	symbol   = &quot;km/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 1000,
	default  = &quot;mph/s&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;m/s2&quot;] = {
	name1    = &quot;metre per second squared&quot;,
	name1_us = &quot;meter per second squared&quot;,
	name2    = &quot;metres per second squared&quot;,
	name2_us = &quot;meters per second squared&quot;,
	symbol   = &quot;m/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 1,
	default  = &quot;ft/s2&quot;,
    },
    [&quot;mph/s&quot;] = {
	name1    = &quot;mile per hour per second&quot;,
	name2    = &quot;miles per hour per second&quot;,
	symbol   = &quot;mph/s&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.44704,
	default  = &quot;km/hs&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;km/h/s&quot;] = {
	target   = &quot;km/hs&quot;,
    },
    [&quot;standard gravity&quot;] = {
	target   = &quot;g0&quot;,
    },
    [&quot;1000sqft&quot;] = {
	name1    = &quot;thousand square feet&quot;,
	name2    = &quot;thousand square feet&quot;,
	symbol   = &quot;1000&amp;nbsp;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 92.90304,
	default  = &quot;m2&quot;,
	link     = &quot;Square foot&quot;,
    },
    [&quot;a&quot;] = {
	_name1   = &quot;are&quot;,
	_symbol  = &quot;a&quot;,
	utype    = &quot;area&quot;,
	scale    = 100,
	prefixes = 1,
	default  = &quot;sqft&quot;,
	link     = &quot;Hectare#Are&quot;,
    },
    [&quot;acre&quot;] = {
	symbol   = &quot;acre&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 4046.8564224,
	default  = &quot;ha&quot;,
    },
    [&quot;acre-sing&quot;] = {
	target   = &quot;acre&quot;,
    },
    [&quot;arpent&quot;] = {
	symbol   = &quot;arpent&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3418.89,
	default  = &quot;ha&quot;,
    },
    [&quot;cda&quot;] = {
	name1    = &quot;cuerda&quot;,
	symbol   = &quot;cda&quot;,
	utype    = &quot;area&quot;,
	scale    = 3930.395625,
	default  = &quot;ha acre&quot;,
    },
    [&quot;daa&quot;] = {
	name1    = &quot;decare&quot;,
	symbol   = &quot;daa&quot;,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
    },
    [&quot;dunam&quot;] = {
	symbol   = &quot;dunam&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
    },
    [&quot;dunum&quot;] = {
	symbol   = &quot;dunum&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Dunam&quot;,
    },
    [&quot;ha&quot;] = {
	name1    = &quot;hectare&quot;,
	symbol   = &quot;ha&quot;,
	utype    = &quot;area&quot;,
	scale    = 10000,
	default  = &quot;acre&quot;,
    },
    [&quot;hectare&quot;] = {
	name1    = &quot;hectare&quot;,
	symbol   = &quot;ha&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 10000,
	default  = &quot;acre&quot;,
    },
    [&quot;Irish acre&quot;] = {
	name1    = &quot;Irish acre&quot;,
	symbol   = &quot;Irish&amp;nbsp;acres&quot;,
	utype    = &quot;area&quot;,
	scale    = 6555.2385024,
	default  = &quot;ha&quot;,
	link     = &quot;Acre (Irish)&quot;,
    },
    [&quot;m2&quot;] = {
	_name1   = &quot;square metre&quot;,
	_name1_us= &quot;square meter&quot;,
	_symbol  = &quot;m&lt;sup&gt;2&lt;/sup&gt;&quot;,
	prefix_position= 8,
	utype    = &quot;area&quot;,
	scale    = 1,
	prefixes = 2,
	default  = &quot;sqft&quot;,
	link     = &quot;Square metre&quot;,
    },
    [&quot;pondemaat&quot;] = {
	name1    = &quot;pondemaat&quot;,
	name2    = &quot;pondemaat&quot;,
	symbol   = &quot;pond&quot;,
	utype    = &quot;area&quot;,
	scale    = 3674.363358816,
	default  = &quot;m2&quot;,
	link     = &quot;:nl:pondemaat&quot;,
    },
    [&quot;pyeong&quot;] = {
	name2    = &quot;pyeong&quot;,
	symbol   = &quot;pyeong&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3.3057851239669422,
	default  = &quot;m2&quot;,
    },
    [&quot;rai&quot;] = {
	name2    = &quot;rai&quot;,
	symbol   = &quot;rai&quot;,
	utype    = &quot;area&quot;,
	scale    = 1600,
	default  = &quot;m2&quot;,
	link     = &quot;Rai (unit)&quot;,
    },
    [&quot;rood&quot;] = {
	symbol   = &quot;rood&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1011.7141056,
	default  = &quot;sqft sqm&quot;,
	subdivs  = { [&quot;sqperch&quot;] = { 40, default = &quot;m2&quot; } },
	link     = &quot;Rood (unit)&quot;,
    },
    [&quot;sqfoot&quot;] = {
	name1    = &quot;square foot&quot;,
	name2    = &quot;square foot&quot;,
	symbol   = &quot;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.09290304,
	default  = &quot;m2&quot;,
    },
    [&quot;sqft&quot;] = {
	name1    = &quot;square foot&quot;,
	name2    = &quot;square feet&quot;,
	symbol   = &quot;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.09290304,
	default  = &quot;m2&quot;,
    },
    [&quot;sqin&quot;] = {
	name1    = &quot;square inch&quot;,
	name2    = &quot;square inches&quot;,
	symbol   = &quot;sq&amp;nbsp;in&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.00064516,
	default  = &quot;cm2&quot;,
    },
    [&quot;sqmi&quot;] = {
	name1    = &quot;square mile&quot;,
	symbol   = &quot;sq&amp;nbsp;mi&quot;,
	utype    = &quot;area&quot;,
	scale    = 2589988.110336,
	default  = &quot;km2&quot;,
    },
    [&quot;sqnmi&quot;] = {
	name1    = &quot;square nautical mile&quot;,
	symbol   = &quot;sq&amp;nbsp;nmi&quot;,
	utype    = &quot;area&quot;,
	scale    = 3429904,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;sqperch&quot;] = {
	name2    = &quot;perches&quot;,
	symbol   = &quot;perch&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 25.29285264,
	default  = &quot;sqm&quot;,
	link     = &quot;Perch (unit)#Area&quot;,
    },
    [&quot;sqverst&quot;] = {
	symbol   = &quot;square verst&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1138062.24,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Verst&quot;,
    },
    [&quot;sqyd&quot;] = {
	name1    = &quot;square yard&quot;,
	symbol   = &quot;sq&amp;nbsp;yd&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.83612736,
	default  = &quot;m2&quot;,
    },
    [&quot;tsubo&quot;] = {
	name2    = &quot;tsubo&quot;,
	symbol   = &quot;tsubo&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3.3057851239669422,
	default  = &quot;m2&quot;,
	link     = &quot;Japanese units of measurement#Area&quot;,
    },
    [&quot;acres&quot;] = {
	target   = &quot;acre&quot;,
    },
    [&quot;are&quot;] = {
	target   = &quot;a&quot;,
    },
    [&quot;decare&quot;] = {
	target   = &quot;daa&quot;,
    },
    [&quot;foot2&quot;] = {
	target   = &quot;sqfoot&quot;,
    },
    [&quot;ft2&quot;] = {
	target   = &quot;sqft&quot;,
    },
    [&quot;in2&quot;] = {
	target   = &quot;sqin&quot;,
	symbol   = &quot;in&lt;sup&gt;2&lt;/sup&gt;&quot;,
    },
    [&quot;km&quot;] = {
	target   = &quot;km2&quot;,
    },
    [&quot;mi2&quot;] = {
	target   = &quot;sqmi&quot;,
    },
    [&quot;million acre&quot;] = {
	target   = &quot;e6acre&quot;,
    },
    [&quot;million acres&quot;] = {
	target   = &quot;e6acre&quot;,
    },
    [&quot;million hectares&quot;] = {
	target   = &quot;e6ha&quot;,
    },
    [&quot;m&quot;] = {
	target   = &quot;m2&quot;,
    },
    [&quot;nmi2&quot;] = {
	target   = &quot;sqnmi&quot;,
    },
    [&quot;pond&quot;] = {
	target   = &quot;pondemaat&quot;,
    },
    [&quot;sq arp&quot;] = {
	target   = &quot;arpent&quot;,
    },
    [&quot;sqkm&quot;] = {
	target   = &quot;km2&quot;,
    },
    [&quot;sqm&quot;] = {
	target   = &quot;m2&quot;,
    },
    [&quot;square verst&quot;] = {
	target   = &quot;sqverst&quot;,
    },
    [&quot;verst2&quot;] = {
	target   = &quot;sqverst&quot;,
    },
    [&quot;yd2&quot;] = {
	target   = &quot;sqyd&quot;,
    },
    [&quot;m2/ha&quot;] = {
	name1    = &quot;square metre per hectare&quot;,
	name1_us = &quot;square meter per hectare&quot;,
	name2    = &quot;square metres per hectare&quot;,
	name2_us = &quot;square meters per hectare&quot;,
	symbol   = &quot;m&lt;sup&gt;2&lt;/sup&gt;/ha&quot;,
	utype    = &quot;area per unit area&quot;,
	scale    = 0.0001,
	default  = &quot;sqft/acre&quot;,
	link     = &quot;Basal area&quot;,
    },
    [&quot;sqft/acre&quot;] = {
	name1    = &quot;square foot per acre&quot;,
	name2    = &quot;square feet per acre&quot;,
	symbol   = &quot;sq&amp;nbsp;ft/acre&quot;,
	utype    = &quot;area per unit area&quot;,
	scale    = 2.295684113865932e-5,
	default  = &quot;m2/ha&quot;,
    },
    [&quot;cent&quot;] = {
	name1    = &quot;cent&quot;,
	symbol   = &quot;&quot;,
	utype    = &quot;cent&quot;,
	scale    = 1,
	default  = &quot;cent&quot;,
	link     = &quot;Cent (currency)&quot;,
    },
    [&quot;&quot;] = {
	target   = &quot;cent&quot;,
    },
    [&quot;A.h&quot;] = {
	name1    = &quot;ampere-hour&quot;,
	symbol   = &quot;Ah&quot;,
	utype    = &quot;charge&quot;,
	scale    = 3600,
	default  = &quot;coulomb&quot;,
    },
    [&quot;coulomb&quot;] = {
	_name1   = &quot;coulomb&quot;,
	_symbol  = &quot;C&quot;,
	utype    = &quot;charge&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;e&quot;,
	link     = &quot;Coulomb&quot;,
    },
    [&quot;e&quot;] = {
	name1    = &quot;elementary charge&quot;,
	symbol   = &quot;''e''&quot;,
	utype    = &quot;charge&quot;,
	scale    = 1.602176487e-19,
	default  = &quot;coulomb&quot;,
    },
    [&quot;Ah&quot;] = {
	target   = &quot;A.h&quot;,
    },
    [&quot;g-mol&quot;] = {
	name1    = &quot;gram-mole&quot;,
	symbol   = &quot;g&amp;#8209;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol&quot;] = {
	name1    = &quot;gram-mole&quot;,
	symbol   = &quot;gmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol&quot;] = {
	name1    = &quot;kilomole&quot;,
	symbol   = &quot;kmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1000,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;lb-mol&quot;] = {
	name1    = &quot;pound-mole&quot;,
	symbol   = &quot;lb&amp;#8209;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 453.59237,
	default  = &quot;mol&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol&quot;] = {
	name1    = &quot;pound-mole&quot;,
	symbol   = &quot;lbmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 453.59237,
	default  = &quot;mol&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;mol&quot;] = {
	name1    = &quot;mole&quot;,
	symbol   = &quot;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kgCO2/L&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg(CO&lt;sub&gt;2&lt;/sub&gt;)/L&quot;,
	utype    = &quot;co2 per unit volume&quot;,
	scale    = 1000,
	default  = &quot;lbCO2/USgal&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lbCO2/USgal&quot;] = {
	name1    = &quot;pound per US gallon&quot;,
	name2    = &quot;pounds per US gallon&quot;,
	symbol   = &quot;lbCO2/US&amp;nbsp;gal&quot;,
	utype    = &quot;co2 per unit volume&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kgCO2/L&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;oz/lb&quot;] = {
	per      = { &quot;oz&quot;, &quot;lb&quot; },
	utype    = &quot;concentration&quot;,
	default  = &quot;mg/kg&quot;,
    },
    [&quot;mg/kg&quot;] = {
	per      = { &quot;mg&quot;, &quot;kg&quot; },
	utype    = &quot;concentration&quot;,
	default  = &quot;oz/lb&quot;,
    },
    [&quot;$/acre&quot;] = {
	per      = { &quot;$&quot;, &quot;acre&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/ha&quot;,
    },
    [&quot;$/ha&quot;] = {
	per      = { &quot;$&quot;, &quot;ha&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/acre&quot;,
    },
    [&quot;$/m2&quot;] = {
	per      = { &quot;$&quot;, &quot;m2&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/sqft&quot;,
    },
    [&quot;$/sqft&quot;] = {
	per      = { &quot;$&quot;, &quot;sqft&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/m2&quot;,
    },
    [&quot;$/km&quot;] = {
	per      = { &quot;$&quot;, &quot;km&quot; },
	utype    = &quot;cost $ per unit length&quot;,
	default  = &quot;$/mi&quot;,
    },
    [&quot;$/mi&quot;] = {
	per      = { &quot;$&quot;, &quot;mi&quot; },
	utype    = &quot;cost $ per unit length&quot;,
	default  = &quot;$/km&quot;,
    },
    [&quot;$/kg&quot;] = {
	per      = { &quot;$&quot;, &quot;kg&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/lb&quot;,
    },
    [&quot;$/g&quot;] = {
	per      = { &quot;$&quot;, &quot;g&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/lb&quot;,
    },
    [&quot;$/lb&quot;] = {
	per      = { &quot;$&quot;, &quot;lb&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/kg&quot;,
    },
    [&quot;$/oz&quot;] = {
	per      = { &quot;$&quot;, &quot;oz&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/g&quot;,
    },
    [&quot;$/ozt&quot;] = {
	per      = { &quot;$&quot;, &quot;ozt&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/kg&quot;,
    },
    [&quot;$/m3&quot;] = {
	per      = { &quot;$&quot;, &quot;m3&quot; },
	utype    = &quot;cost $ per unit volume&quot;,
	default  = &quot;$/oilbbl&quot;,
    },
    [&quot;$/oilbbl&quot;] = {
	per      = { &quot;$&quot;, &quot;oilbbl&quot; },
	utype    = &quot;cost $ per unit volume&quot;,
	default  = &quot;$/m3&quot;,
    },
    [&quot;/acre&quot;] = {
	per      = { &quot;&quot;, &quot;acre&quot; },
	utype    = &quot;cost  per unit area&quot;,
	default  = &quot;/ha&quot;,
    },
    [&quot;/ha&quot;] = {
	per      = { &quot;&quot;, &quot;ha&quot; },
	utype    = &quot;cost  per unit area&quot;,
	default  = &quot;/acre&quot;,
    },
    [&quot;g/dm3&quot;] = {
	name1    = &quot;gram per cubic decimetre&quot;,
	name1_us = &quot;gram per cubic decimeter&quot;,
	name2    = &quot;grams per cubic decimetre&quot;,
	name2_us = &quot;grams per cubic decimeter&quot;,
	symbol   = &quot;g/dm&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/L&quot;] = {
	name1    = &quot;gram per litre&quot;,
	name1_us = &quot;gram per liter&quot;,
	name2    = &quot;grams per litre&quot;,
	name2_us = &quot;grams per liter&quot;,
	symbol   = &quot;g/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/mL&quot;] = {
	name1    = &quot;gram per millilitre&quot;,
	name1_us = &quot;gram per milliliter&quot;,
	name2    = &quot;grams per millilitre&quot;,
	name2_us = &quot;grams per milliliter&quot;,
	symbol   = &quot;g/mL&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/ml&quot;] = {
	name1    = &quot;gram per millilitre&quot;,
	name1_us = &quot;gram per milliliter&quot;,
	name2    = &quot;grams per millilitre&quot;,
	name2_us = &quot;grams per milliliter&quot;,
	symbol   = &quot;g/ml&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/dm3&quot;] = {
	name1    = &quot;kilogram per cubic decimetre&quot;,
	name1_us = &quot;kilogram per cubic decimeter&quot;,
	name2    = &quot;kilograms per cubic decimetre&quot;,
	name2_us = &quot;kilograms per cubic decimeter&quot;,
	symbol   = &quot;kg/dm&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuft&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/L&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/USgal&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/l&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg/l&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/USgal&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/m3&quot;] = {
	name1    = &quot;kilogram per cubic metre&quot;,
	name1_us = &quot;kilogram per cubic meter&quot;,
	name2    = &quot;kilograms per cubic metre&quot;,
	name2_us = &quot;kilograms per cubic meter&quot;,
	symbol   = &quot;kg/m&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;lb/cuyd&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuft&quot;] = {
	name1    = &quot;pound per cubic foot&quot;,
	name2    = &quot;pounds per cubic foot&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;ft&quot;,
	utype    = &quot;density&quot;,
	scale    = 16.018463373960142,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuin&quot;] = {
	name1    = &quot;pound per cubic inch&quot;,
	name2    = &quot;pounds per cubic inch&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuyd&quot;] = {
	name1    = &quot;pound per cubic yard&quot;,
	name2    = &quot;pounds per cubic yard&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;yd&quot;,
	utype    = &quot;density&quot;,
	scale    = 0.5932764212577829,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/impgal&quot;] = {
	name1    = &quot;pound per imperial gallon&quot;,
	name2    = &quot;pounds per imperial gallon&quot;,
	symbol   = &quot;lb/imp&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 99.776372663101697,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/in3&quot;] = {
	name1    = &quot;pound per cubic inch&quot;,
	name2    = &quot;pounds per cubic inch&quot;,
	symbol   = &quot;lb/cu&amp;thinsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/U.S.gal&quot;] = {
	name1    = &quot;pound per U.S. gallon&quot;,
	name2    = &quot;pounds per U.S. gallon&quot;,
	symbol   = &quot;lb/U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/USbu&quot;] = {
	name1    = &quot;pound per US bushel&quot;,
	name2    = &quot;pounds per US bushel&quot;,
	symbol   = &quot;lb/US&amp;nbsp;bu&quot;,
	utype    = &quot;density&quot;,
	scale    = 12.871859780974471,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;lb/USgal&quot;] = {
	name1    = &quot;pound per US gallon&quot;,
	name2    = &quot;pounds per US gallon&quot;,
	symbol   = &quot;lb/US&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lbm/cuin&quot;] = {
	name1    = &quot;pound mass per cubic inch&quot;,
	name2    = &quot;pounds mass per cubic inch&quot;,
	symbol   = &quot;lbm/cu&amp;thinsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;mg/L&quot;] = {
	name1    = &quot;milligram per litre&quot;,
	name1_us = &quot;milligram per liter&quot;,
	name2    = &quot;milligrams per litre&quot;,
	name2_us = &quot;milligrams per liter&quot;,
	symbol   = &quot;mg/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 0.001,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;oz/cuin&quot;] = {
	name1    = &quot;ounce per cubic inch&quot;,
	name2    = &quot;ounces per cubic inch&quot;,
	symbol   = &quot;oz/cu&amp;nbsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 1729.9940443876951,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/cm3&quot;] = {
	per      = { &quot;g&quot;, &quot;cm3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuin&quot;,
    },
    [&quot;g/m3&quot;] = {
	per      = { &quot;g&quot;, &quot;m3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuyd&quot;,
	link     = &quot;density&quot;,
    },
    [&quot;Mg/m3&quot;] = {
	per      = { &quot;Mg&quot;, &quot;m3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuft&quot;,
    },
    [&quot;mg/l&quot;] = {
	per      = { &quot;mg&quot;, &quot;l&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;oz/cuin&quot;,
    },
    [&quot;g/dL&quot;] = {
	per      = { &quot;g&quot;, &quot;dL&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuin&quot;,
    },
    [&quot;g/l&quot;] = {
	per      = { &quot;g&quot;, &quot;l&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;oz/cuin&quot;,
    },
    [&quot;lb/ft3&quot;] = {
	target   = &quot;lb/cuft&quot;,
    },
    [&quot;lb/yd3&quot;] = {
	target   = &quot;lb/cuyd&quot;,
    },
    [&quot;lbm/in3&quot;] = {
	target   = &quot;lbm/cuin&quot;,
    },
    [&quot;mcg/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;oz/in3&quot;] = {
	target   = &quot;oz/cuin&quot;,
    },
    [&quot;ug/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;g/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;ug/l&quot;] = {
	target   = &quot;g/l&quot;,
    },
    [&quot;B.O.T.U.&quot;] = {
	name1    = &quot;Board of Trade Unit&quot;,
	symbol   = &quot;B.O.T.U.&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;bboe&quot;] = {
	name1    = &quot;barrel of oil equivalent&quot;,
	name2    = &quot;barrels of oil equivalent&quot;,
	symbol   = &quot;bboe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6117863200,
	default  = &quot;GJ&quot;,
    },
    [&quot;BOE&quot;] = {
	name1    = &quot;barrel of oil equivalent&quot;,
	name2    = &quot;barrels of oil equivalent&quot;,
	symbol   = &quot;BOE&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6117863200,
	default  = &quot;GJ&quot;,
    },
    [&quot;BTU&quot;] = {
	name1    = &quot;British thermal unit&quot;,
	symbol   = &quot;BTU&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
    },
    [&quot;Btu&quot;] = {
	name1    = &quot;British thermal unit&quot;,
	symbol   = &quot;Btu&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
    },
    [&quot;BTU-39F&quot;] = {
	name1    = &quot;British thermal unit (39F)&quot;,
	name2    = &quot;British thermal units (39F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;39F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1059.67,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-39F&quot;] = {
	name1    = &quot;British thermal unit (39F)&quot;,
	name2    = &quot;British thermal units (39F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;39F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1059.67,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-59F&quot;] = {
	name1    = &quot;British thermal unit (59F)&quot;,
	name2    = &quot;British thermal units (59F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;59F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.804,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-59F&quot;] = {
	name1    = &quot;British thermal unit (59F)&quot;,
	name2    = &quot;British thermal units (59F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;59F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.804,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-60F&quot;] = {
	name1    = &quot;British thermal unit (60F)&quot;,
	name2    = &quot;British thermal units (60F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;60F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.68,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-60F&quot;] = {
	name1    = &quot;British thermal unit (60F)&quot;,
	name2    = &quot;British thermal units (60F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;60F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.68,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-63F&quot;] = {
	name1    = &quot;British thermal unit (63F)&quot;,
	name2    = &quot;British thermal units (63F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;63F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.6,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-63F&quot;] = {
	name1    = &quot;British thermal unit (63F)&quot;,
	name2    = &quot;British thermal units (63F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;63F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.6,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-ISO&quot;] = {
	name1    = &quot;British thermal unit (ISO)&quot;,
	name2    = &quot;British thermal units (ISO)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;ISO&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.056,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-ISO&quot;] = {
	target   = &quot;BTU-ISO&quot;,
    },
    [&quot;BTU-IT&quot;] = {
	name1    = &quot;British thermal unit (IT)&quot;,
	name2    = &quot;British thermal units (IT)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-IT&quot;] = {
	name1    = &quot;British thermal unit (IT)&quot;,
	name2    = &quot;British thermal units (IT)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-mean&quot;] = {
	name1    = &quot;British thermal unit (mean)&quot;,
	name2    = &quot;British thermal units (mean)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;mean&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.87,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-mean&quot;] = {
	name1    = &quot;British thermal unit (mean)&quot;,
	name2    = &quot;British thermal units (mean)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;mean&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.87,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-th&quot;] = {
	name1    = &quot;British thermal unit (thermochemical)&quot;,
	name2    = &quot;British thermal units (thermochemical)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.35026444,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-th&quot;] = {
	name1    = &quot;British thermal unit (thermochemical)&quot;,
	name2    = &quot;British thermal units (thermochemical)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.35026444,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Cal&quot;] = {
	name1    = &quot;calorie&quot;,
	symbol   = &quot;Cal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
    },
    [&quot;cal&quot;] = {
	name1    = &quot;calorie&quot;,
	symbol   = &quot;cal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184,
	default  = &quot;J&quot;,
    },
    [&quot;Cal-15&quot;] = {
	name1    = &quot;Calorie (15C)&quot;,
	name2    = &quot;Calories (15C)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-15&quot;] = {
	name1    = &quot;calorie (15C)&quot;,
	name2    = &quot;calories (15C)&quot;,
	symbol   = &quot;cal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1858,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal-IT&quot;] = {
	name1    = &quot;Calorie (International Steam Table)&quot;,
	name2    = &quot;Calories (International Steam Table)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-IT&quot;] = {
	name1    = &quot;calorie (International Steam Table)&quot;,
	name2    = &quot;calories (International Steam Table)&quot;,
	symbol   = &quot;cal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal-th&quot;] = {
	name1    = &quot;Calorie (thermochemical)&quot;,
	name2    = &quot;Calories (thermochemical)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-th&quot;] = {
	name1    = &quot;calorie (thermochemical)&quot;,
	name2    = &quot;calories (thermochemical)&quot;,
	symbol   = &quot;cal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;ccatm&quot;] = {
	name1    = &quot;cubic centimetre-atmosphere&quot;,
	name1_us = &quot;cubic centimeter-atmosphere&quot;,
	symbol   = &quot;ccatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;CHU-IT&quot;] = {
	name1    = &quot;Celsius heat unit (International Table)&quot;,
	name2    = &quot;Celsius heat units (International Table)&quot;,
	symbol   = &quot;CHU&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1899.100534716,
	default  = &quot;kJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cm3atm&quot;] = {
	name1    = &quot;cubic centimetre-atmosphere&quot;,
	name1_us = &quot;cubic centimeter-atmosphere&quot;,
	symbol   = &quot;cm&lt;sup&gt;3&lt;/sup&gt;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cufootatm&quot;] = {
	name1    = &quot;cubic foot of atmosphere&quot;,
	name2    = &quot;cubic foot of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cufootnaturalgas&quot;] = {
	name1    = &quot;cubic foot of natural gas&quot;,
	name2    = &quot;cubic foot of natural gas&quot;,
	symbol   = &quot;cuftnaturalgas&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 1055055.85262,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cuftatm&quot;] = {
	name1    = &quot;cubic foot of atmosphere&quot;,
	name2    = &quot;cubic feet of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cuftnaturalgas&quot;] = {
	name1    = &quot;cubic foot of natural gas&quot;,
	name2    = &quot;cubic feet of natural gas&quot;,
	symbol   = &quot;cuftnaturalgas&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 1055055.85262,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cuydatm&quot;] = {
	name1    = &quot;cubic yard of atmosphere&quot;,
	name2    = &quot;cubic yards of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;yd&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 77468.5209852288,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Eh&quot;] = {
	name1    = &quot;Hartree&quot;,
	symbol   = &quot;''E''&lt;sub&gt;h&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.35974417e-18,
	default  = &quot;eV&quot;,
    },
    [&quot;erg&quot;] = {
	symbol   = &quot;erg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0000001,
	default  = &quot;J&quot;,
    },
    [&quot;eV&quot;] = {
	name1    = &quot;electronvolt&quot;,
	symbol   = &quot;eV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-19,
	default  = &quot;aJ&quot;,
    },
    [&quot;feV&quot;] = {
	name1    = &quot;femtoelectronvolt&quot;,
	symbol   = &quot;feV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-34,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;foe&quot;] = {
	symbol   = &quot;foe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1e44,
	default  = &quot;YJ&quot;,
	link     = &quot;Foe (unit)&quot;,
    },
    [&quot;ftlb&quot;] = {
	name1    = &quot;foot-pound&quot;,
	symbol   = &quot;ftlb&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftlb-f&quot;] = {
	name1    = &quot;foot-pound force&quot;,
	name2    = &quot;foot-pounds force&quot;,
	symbol   = &quot;ftlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftlbf&quot;] = {
	name1    = &quot;foot-pound force&quot;,
	name2    = &quot;foot-pounds force&quot;,
	symbol   = &quot;ftlbf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftpdl&quot;] = {
	name1    = &quot;foot-poundal&quot;,
	symbol   = &quot;ftpdl&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0421401100938048,
	default  = &quot;J&quot;,
    },
    [&quot;GeV&quot;] = {
	name1    = &quot;gigaelectronvolt&quot;,
	symbol   = &quot;GeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-10,
	default  = &quot;nJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;GLatm&quot;] = {
	name1    = &quot;gigalitre-atmosphere&quot;,
	name1_us = &quot;gigaliter-atmosphere&quot;,
	symbol   = &quot;GLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Glatm&quot;] = {
	name1    = &quot;gigalitre-atmosphere&quot;,
	name1_us = &quot;gigaliter-atmosphere&quot;,
	symbol   = &quot;Glatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;gTNT&quot;] = {
	name2    = &quot;grams of TNT&quot;,
	symbol   = &quot;gram of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;Gtoe&quot;] = {
	name1    = &quot;gigatonne of oil equivalent&quot;,
	name2    = &quot;gigatonnes of oil equivalent&quot;,
	symbol   = &quot;Gtoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e19,
	default  = &quot;EJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;GtonTNT&quot;] = {
	name2    = &quot;gigatons of TNT&quot;,
	symbol   = &quot;gigaton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e18,
	default  = &quot;EJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;GtTNT&quot;] = {
	name2    = &quot;gigatonnes of TNT&quot;,
	symbol   = &quot;gigatonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e18,
	default  = &quot;EJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;GW.h&quot;] = {
	name1    = &quot;gigawatt-hour&quot;,
	symbol   = &quot;GWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;GWh&quot;] = {
	name1    = &quot;gigawatt-hour&quot;,
	symbol   = &quot;GWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;hph&quot;] = {
	name1    = &quot;horsepower-hour&quot;,
	symbol   = &quot;hph&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2684519.537696172792,
	default  = &quot;kWh&quot;,
	link     = &quot;Horsepower&quot;,
    },
    [&quot;impgalatm&quot;] = {
	name1    = &quot;imperial gallon-atmosphere&quot;,
	symbol   = &quot;imp galatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 460.63256925,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;inlb&quot;] = {
	name1    = &quot;inch-pound&quot;,
	symbol   = &quot;inlb&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inlb-f&quot;] = {
	name1    = &quot;inch-pound force&quot;,
	name2    = &quot;inch-pounds force&quot;,
	symbol   = &quot;inlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inlbf&quot;] = {
	name1    = &quot;inch-pound force&quot;,
	name2    = &quot;inch-pounds force&quot;,
	symbol   = &quot;inlbf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inoz-f&quot;] = {
	name1    = &quot;inch-ounce force&quot;,
	name2    = &quot;inch-ounces force&quot;,
	symbol   = &quot;inoz&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.00706155181422604375,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inozf&quot;] = {
	name1    = &quot;inch-ounce force&quot;,
	name2    = &quot;inch-ounces force&quot;,
	symbol   = &quot;inozf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.00706155181422604375,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;J&quot;] = {
	_name1   = &quot;joule&quot;,
	_symbol  = &quot;J&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;cal&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kBOE&quot;] = {
	name1    = &quot;kilo barrel of oil equivalent&quot;,
	name2    = &quot;kilo barrels of oil equivalent&quot;,
	symbol   = &quot;kBOE&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6.1178632e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Barrel of oil equivalent&quot;,
    },
    [&quot;kcal&quot;] = {
	name1    = &quot;kilocalorie&quot;,
	symbol   = &quot;kcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-15&quot;] = {
	name1    = &quot;kilocalorie (15C)&quot;,
	name2    = &quot;kilocalories (15C)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-IT&quot;] = {
	name1    = &quot;kilocalorie (International Steam Table)&quot;,
	name2    = &quot;kilocalories (International Steam Table)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-th&quot;] = {
	name1    = &quot;kilocalorie (thermochemical)&quot;,
	name2    = &quot;kilocalories (thermochemical)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kerg&quot;] = {
	name1    = &quot;kiloerg&quot;,
	symbol   = &quot;kerg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0001,
	default  = &quot;mJ&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;keV&quot;] = {
	name1    = &quot;kiloelectronvolt&quot;,
	symbol   = &quot;keV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-16,
	default  = &quot;fJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;kgTNT&quot;] = {
	name2    = &quot;kilograms of TNT&quot;,
	symbol   = &quot;kilogram of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;kLatm&quot;] = {
	name1    = &quot;kilolitre-atmosphere&quot;,
	name1_us = &quot;kiloliter-atmosphere&quot;,
	symbol   = &quot;kLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;klatm&quot;] = {
	name1    = &quot;kilolitre-atmosphere&quot;,
	name1_us = &quot;kiloliter-atmosphere&quot;,
	symbol   = &quot;klatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;kt(TNT)&quot;] = {
	name1    = &quot;kilotonne&quot;,
	name1_us = &quot;kiloton&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktoe&quot;] = {
	name1    = &quot;kilotonne of oil equivalent&quot;,
	name2    = &quot;kilotonnes of oil equivalent&quot;,
	symbol   = &quot;ktoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e13,
	default  = &quot;TJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;ktonTNT&quot;] = {
	name1    = &quot;kiloton of TNT&quot;,
	name2    = &quot;kilotons of TNT&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktTNT&quot;] = {
	name2    = &quot;kilotonnes of TNT&quot;,
	symbol   = &quot;kilotonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;kW.h&quot;] = {
	name1    = &quot;kilowatt-hour&quot;,
	symbol   = &quot;kWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;kWh&quot;] = {
	name1    = &quot;kilowatt-hour&quot;,
	symbol   = &quot;kWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;Latm&quot;] = {
	name1    = &quot;litre-atmosphere&quot;,
	name1_us = &quot;liter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;latm&quot;] = {
	name1    = &quot;litre-atmosphere&quot;,
	name1_us = &quot;liter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;m3atm&quot;] = {
	name1    = &quot;cubic metre-atmosphere&quot;,
	name1_us = &quot;cubic meter-atmosphere&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Mcal&quot;] = {
	name1    = &quot;megacalorie&quot;,
	symbol   = &quot;Mcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal&quot;] = {
	name1    = &quot;millicalorie&quot;,
	symbol   = &quot;mcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.004184,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-15&quot;] = {
	name1    = &quot;megacalorie (15C)&quot;,
	name2    = &quot;megacalories (15C)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185800,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-15&quot;] = {
	name1    = &quot;millicalorie (15C)&quot;,
	name2    = &quot;millicalories (15C)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0041858,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-IT&quot;] = {
	name1    = &quot;megacalorie (International Steam Table)&quot;,
	name2    = &quot;megacalories (International Steam Table)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186800,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-IT&quot;] = {
	name1    = &quot;millicalorie (International Steam Table)&quot;,
	name2    = &quot;millicalories (International Steam Table)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0041868,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-th&quot;] = {
	name1    = &quot;megacalorie (thermochemical)&quot;,
	name2    = &quot;megacalories (thermochemical)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-th&quot;] = {
	name1    = &quot;millicalorie (thermochemical)&quot;,
	name2    = &quot;millicalories (thermochemical)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.004184,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Merg&quot;] = {
	name1    = &quot;megaerg&quot;,
	symbol   = &quot;Merg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.1,
	default  = &quot;J&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;merg&quot;] = {
	name1    = &quot;millierg&quot;,
	symbol   = &quot;merg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0000000001,
	default  = &quot;J&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;MeV&quot;] = {
	name1    = &quot;megaelectronvolt&quot;,
	symbol   = &quot;MeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-13,
	default  = &quot;pJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;meV&quot;] = {
	name1    = &quot;millielectronvolt&quot;,
	symbol   = &quot;meV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-22,
	default  = &quot;zJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;MLatm&quot;] = {
	name1    = &quot;megalitre-atmosphere&quot;,
	name1_us = &quot;megaliter-atmosphere&quot;,
	symbol   = &quot;MLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000,
	default  = &quot;MJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Mlatm&quot;] = {
	name1    = &quot;megalitre-atmosphere&quot;,
	name1_us = &quot;megaliter-atmosphere&quot;,
	symbol   = &quot;Mlatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000,
	default  = &quot;MJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;mLatm&quot;] = {
	name1    = &quot;millilitre-atmosphere&quot;,
	name1_us = &quot;milliliter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;mlatm&quot;] = {
	name1    = &quot;millilitre-atmosphere&quot;,
	name1_us = &quot;milliliter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;MMBtu&quot;] = {
	name1    = &quot;million British thermal units&quot;,
	name2    = &quot;million British thermal units&quot;,
	symbol   = &quot;MMBtu&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055055852.62,
	default  = &quot;GJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Mt(TNT)&quot;] = {
	name1    = &quot;megatonne&quot;,
	name1_us = &quot;megaton&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;Mtoe&quot;] = {
	name1    = &quot;megatonne of oil equivalent&quot;,
	name2    = &quot;megatonnes of oil equivalent&quot;,
	symbol   = &quot;Mtoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e16,
	default  = &quot;PJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;MtonTNT&quot;] = {
	name1    = &quot;megaton of TNT&quot;,
	name2    = &quot;megatons of TNT&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;mtonTNT&quot;] = {
	name2    = &quot;millitons of TNT&quot;,
	symbol   = &quot;milliton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtTNT&quot;] = {
	name2    = &quot;megatonnes of TNT&quot;,
	symbol   = &quot;megatonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;mtTNT&quot;] = {
	name2    = &quot;millitonnes of TNT&quot;,
	symbol   = &quot;millitonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MW.h&quot;] = {
	name1    = &quot;megawatt-hour&quot;,
	symbol   = &quot;MWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;mW.h&quot;] = {
	name1    = &quot;milliwatt-hour&quot;,
	symbol   = &quot;mWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6,
	default  = &quot;J&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;MWh&quot;] = {
	name1    = &quot;megawatt-hour&quot;,
	symbol   = &quot;MWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;mWh&quot;] = {
	name1    = &quot;milliwatt-hour&quot;,
	symbol   = &quot;mWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6,
	default  = &quot;J&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;neV&quot;] = {
	name1    = &quot;nanoelectronvolt&quot;,
	symbol   = &quot;neV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-28,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;PeV&quot;] = {
	name1    = &quot;petaelectronvolt&quot;,
	symbol   = &quot;PeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0001602176487,
	default  = &quot;mJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;peV&quot;] = {
	name1    = &quot;picoelectronvolt&quot;,
	symbol   = &quot;peV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-31,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;PSh&quot;] = {
	name1    = &quot;Pferdestrkenstunde&quot;,
	symbol   = &quot;PSh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2647795.5,
	default  = &quot;kWh&quot;,
    },
    [&quot;quad&quot;] = {
	name1    = &quot;quadrillion British thermal units&quot;,
	name2    = &quot;quadrillion British thermal units&quot;,
	symbol   = &quot;quad&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.054804e18,
	default  = &quot;EJ&quot;,
	link     = &quot;Quad (unit)&quot;,
    },
    [&quot;Ry&quot;] = {
	name1    = &quot;rydberg&quot;,
	symbol   = &quot;Ry&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2.1798741e-18,
	default  = &quot;eV&quot;,
	link     = &quot;Rydberg constant&quot;,
    },
    [&quot;scc&quot;] = {
	name1    = &quot;standard cubic centimetre&quot;,
	name1_us = &quot;standard cubic centimeter&quot;,
	symbol   = &quot;scc&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scf&quot;] = {
	name1    = &quot;standard cubic foot&quot;,
	name2    = &quot;standard cubic feet&quot;,
	symbol   = &quot;scf&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scfoot&quot;] = {
	name1    = &quot;standard cubic foot&quot;,
	name2    = &quot;standard cubic foot&quot;,
	symbol   = &quot;scf&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scy&quot;] = {
	name1    = &quot;standard cubic yard&quot;,
	symbol   = &quot;scy&quot;,
	utype    = &quot;energy&quot;,
	scale    = 77468.5209852288,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;sl&quot;] = {
	name1    = &quot;standard litre&quot;,
	name1_us = &quot;standard liter&quot;,
	symbol   = &quot;sl&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;t(TNT)&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TeV&quot;] = {
	name1    = &quot;teraelectronvolt&quot;,
	symbol   = &quot;TeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-7,
	default  = &quot;J&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;th&quot;] = {
	name1    = &quot;thermie&quot;,
	symbol   = &quot;th&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186800,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;thm-EC&quot;] = {
	name1    = &quot;therm (EC)&quot;,
	name2    = &quot;therms (EC)&quot;,
	symbol   = &quot;thm (EC)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105506000,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;thm-UK&quot;] = {
	name1    = &quot;therm (UK)&quot;,
	name2    = &quot;therms (UK)&quot;,
	symbol   = &quot;thm (UK)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105505585.257348,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;thm-US&quot;] = {
	name1    = &quot;therm (US)&quot;,
	name1_us = &quot;therm (U.S.)&quot;,
	name2    = &quot;therms (US)&quot;,
	name2_us = &quot;therms (U.S.)&quot;,
	symbol   = &quot;thm (US)&quot;,
	sym_us   = &quot;thm (U.S.)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105480400,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;toe&quot;] = {
	name1    = &quot;tonne of oil equivalent&quot;,
	name2    = &quot;tonnes of oil equivalent&quot;,
	symbol   = &quot;toe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 41868000000,
	default  = &quot;GJ&quot;,
    },
    [&quot;tonTNT&quot;] = {
	name2    = &quot;tons of TNT&quot;,
	symbol   = &quot;ton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;tTNT&quot;] = {
	name2    = &quot;tonnes of TNT&quot;,
	symbol   = &quot;tonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TtonTNT&quot;] = {
	name2    = &quot;teratons of TNT&quot;,
	symbol   = &quot;teraton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e21,
	default  = &quot;ZJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TtTNT&quot;] = {
	name2    = &quot;teratonnes of TNT&quot;,
	symbol   = &quot;teratonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e21,
	default  = &quot;ZJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TW.h&quot;] = {
	name1    = &quot;terawatt-hour&quot;,
	symbol   = &quot;TWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e15,
	default  = &quot;PJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;TWh&quot;] = {
	name1    = &quot;terawatt-hour&quot;,
	symbol   = &quot;TWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e15,
	default  = &quot;PJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;USgalatm&quot;] = {
	name1    = &quot;US gallon-atmosphere&quot;,
	name1_us = &quot;U.S. gallon-atmosphere&quot;,
	symbol   = &quot;US&amp;nbsp;galatm&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;galatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 383.5568490138,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;W.h&quot;] = {
	name1    = &quot;watt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600,
	default  = &quot;kJ&quot;,
    },
    [&quot;Wh&quot;] = {
	name1    = &quot;watt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600,
	default  = &quot;kJ&quot;,
    },
    [&quot;erg&quot;] = {
	name1    = &quot;microerg&quot;,
	symbol   = &quot;erg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1e-13,
	default  = &quot;nJ&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;eV&quot;] = {
	name1    = &quot;microelectronvolt&quot;,
	symbol   = &quot;eV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-25,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;Latm&quot;] = {
	name1    = &quot;microlitre-atmosphere&quot;,
	name1_us = &quot;microliter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.000101325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;latm&quot;] = {
	name1    = &quot;microlitre-atmosphere&quot;,
	name1_us = &quot;microliter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.000101325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;tonTNT&quot;] = {
	name2    = &quot;microtons of TNT&quot;,
	symbol   = &quot;microton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;tTNT&quot;] = {
	name2    = &quot;microtonnes of TNT&quot;,
	symbol   = &quot;microtonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;W.h&quot;] = {
	name1    = &quot;microwatt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0036,
	default  = &quot;mJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;Wh&quot;] = {
	name1    = &quot;microwatt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0036,
	default  = &quot;mJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;-kW.h&quot;] = {
	target   = &quot;kW.h&quot;,
	link     = &quot;Kilowatt hour&quot;,
    },
    [&quot;btu&quot;] = {
	target   = &quot;BTU&quot;,
    },
    [&quot;Calorie&quot;] = {
	target   = &quot;Cal&quot;,
    },
    [&quot;ft.lbf&quot;] = {
	target   = &quot;ftlbf&quot;,
    },
    [&quot;ftlb-f&quot;] = {
	target   = &quot;ftlb-f&quot;,
    },
    [&quot;ftlbf&quot;] = {
	target   = &quot;ftlbf&quot;,
    },
    [&quot;g-cal-15&quot;] = {
	target   = &quot;cal-15&quot;,
    },
    [&quot;g-cal-IT&quot;] = {
	target   = &quot;cal-IT&quot;,
    },
    [&quot;g-cal-th&quot;] = {
	target   = &quot;cal-th&quot;,
    },
    [&quot;g-kcal-15&quot;] = {
	target   = &quot;kcal-15&quot;,
    },
    [&quot;g-kcal-IT&quot;] = {
	target   = &quot;kcal-IT&quot;,
    },
    [&quot;g-kcal-th&quot;] = {
	target   = &quot;kcal-th&quot;,
    },
    [&quot;g-Mcal-15&quot;] = {
	target   = &quot;Mcal-15&quot;,
    },
    [&quot;g-mcal-15&quot;] = {
	target   = &quot;mcal-15&quot;,
    },
    [&quot;g-Mcal-IT&quot;] = {
	target   = &quot;Mcal-IT&quot;,
    },
    [&quot;g-mcal-IT&quot;] = {
	target   = &quot;mcal-IT&quot;,
    },
    [&quot;g-Mcal-th&quot;] = {
	target   = &quot;Mcal-th&quot;,
    },
    [&quot;g-mcal-th&quot;] = {
	target   = &quot;mcal-th&quot;,
    },
    [&quot;GW-h&quot;] = {
	target   = &quot;GW.h&quot;,
    },
    [&quot;GWh&quot;] = {
	target   = &quot;GW.h&quot;,
    },
    [&quot;Hartree&quot;] = {
	target   = &quot;Eh&quot;,
    },
    [&quot;hp.h&quot;] = {
	target   = &quot;hph&quot;,
    },
    [&quot;hph&quot;] = {
	target   = &quot;hph&quot;,
    },
    [&quot;in.lb-f&quot;] = {
	target   = &quot;inlb-f&quot;,
    },
    [&quot;in.lbf&quot;] = {
	target   = &quot;inlbf&quot;,
    },
    [&quot;in.oz-f&quot;] = {
	target   = &quot;inoz-f&quot;,
    },
    [&quot;in.ozf&quot;] = {
	target   = &quot;inozf&quot;,
    },
    [&quot;inlb-f&quot;] = {
	target   = &quot;inlb-f&quot;,
    },
    [&quot;inlbf&quot;] = {
	target   = &quot;inlbf&quot;,
    },
    [&quot;inoz-f&quot;] = {
	target   = &quot;inoz-f&quot;,
    },
    [&quot;inozf&quot;] = {
	target   = &quot;inozf&quot;,
    },
    [&quot;kbboe&quot;] = {
	target   = &quot;kBOE&quot;,
	symbol   = &quot;kbboe&quot;,
    },
    [&quot;kg-cal-15&quot;] = {
	target   = &quot;Cal-15&quot;,
    },
    [&quot;kg-cal-IT&quot;] = {
	target   = &quot;Cal-IT&quot;,
    },
    [&quot;kg-cal-th&quot;] = {
	target   = &quot;Cal-th&quot;,
    },
    [&quot;kW-h&quot;] = {
	target   = &quot;kW.h&quot;,
    },
    [&quot;kWh&quot;] = {
	target   = &quot;kW.h&quot;,
    },
    [&quot;MW-h&quot;] = {
	target   = &quot;MW.h&quot;,
    },
    [&quot;mW-h&quot;] = {
	target   = &quot;mW.h&quot;,
    },
    [&quot;MWh&quot;] = {
	target   = &quot;MW.h&quot;,
    },
    [&quot;mWh&quot;] = {
	target   = &quot;mW.h&quot;,
    },
    [&quot;TW-h&quot;] = {
	target   = &quot;TW.h&quot;,
    },
    [&quot;TWh&quot;] = {
	target   = &quot;TW.h&quot;,
    },
    [&quot;U.S.galatm&quot;] = {
	target   = &quot;USgalatm&quot;,
	sp_us    = true,
    },
    [&quot;uerg&quot;] = {
	target   = &quot;erg&quot;,
    },
    [&quot;ueV&quot;] = {
	target   = &quot;eV&quot;,
    },
    [&quot;uLatm&quot;] = {
	target   = &quot;Latm&quot;,
    },
    [&quot;ulatm&quot;] = {
	target   = &quot;latm&quot;,
    },
    [&quot;usgalatm&quot;] = {
	target   = &quot;USgalatm&quot;,
    },
    [&quot;utonTNT&quot;] = {
	target   = &quot;tonTNT&quot;,
    },
    [&quot;utTNT&quot;] = {
	target   = &quot;tTNT&quot;,
    },
    [&quot;uW-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;uW.h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;uWh&quot;] = {
	target   = &quot;Wh&quot;,
    },
    [&quot;uWh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;erg&quot;] = {
	target   = &quot;erg&quot;,
    },
    [&quot;eV&quot;] = {
	target   = &quot;eV&quot;,
    },
    [&quot;Latm&quot;] = {
	target   = &quot;Latm&quot;,
    },
    [&quot;latm&quot;] = {
	target   = &quot;latm&quot;,
    },
    [&quot;tonTNT&quot;] = {
	target   = &quot;tonTNT&quot;,
    },
    [&quot;tTNT&quot;] = {
	target   = &quot;tTNT&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W.h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;Wh&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;eVpar&quot;] = {
	_name1   = &quot;electronvolt&quot;,
	_symbol  = &quot;eV&quot;,
	utype    = &quot;energy per chemical amount&quot;,
	scale    = 96485.329522144166,
	prefixes = 1,
	default  = &quot;kcal/mol&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;kcal/mol&quot;] = {
	per      = { &quot;kcal&quot;, &quot;mol&quot; },
	utype    = &quot;energy per chemical amount&quot;,
	default  = &quot;kJ/mol&quot;,
	link     = &quot;Kilocalorie per mole&quot;,
    },
    [&quot;kJ/mol&quot;] = {
	per      = { &quot;kJ&quot;, &quot;mol&quot; },
	utype    = &quot;energy per chemical amount&quot;,
	default  = &quot;kcal/mol&quot;,
	link     = &quot;Joule per mole&quot;,
    },
    [&quot;kWh/100 km&quot;] = {
	name1    = &quot;kilowatt-hour per 100 kilometres&quot;,
	name1_us = &quot;kilowatt-hour per 100 kilometers&quot;,
	name2    = &quot;kilowatt-hours per 100 kilometres&quot;,
	name2_us = &quot;kilowatt-hours per 100 kilometers&quot;,
	symbol   = &quot;kWh/100&amp;nbsp;km&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 36,
	default  = &quot;MJ/km kWh/mi&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;kWh/100 mi&quot;] = {
	name1    = &quot;kilowatt-hour per 100 miles&quot;,
	name2    = &quot;kilowatt-hours per 100 miles&quot;,
	symbol   = &quot;kWh/100&amp;nbsp;mi&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 22.3694,
	default  = &quot;mpge&quot;,
	link     = &quot;Miles per gallon gasoline equivalent&quot;,
    },
    [&quot;MJ/100 km&quot;] = {
	name1    = &quot;megajoule per 100 kilometres&quot;,
	name1_us = &quot;megajoule per 100 kilometers&quot;,
	name2    = &quot;megajoules per 100 kilometres&quot;,
	name2_us = &quot;megajoules per 100 kilometers&quot;,
	symbol   = &quot;MJ/100&amp;nbsp;km&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 10,
	default  = &quot;BTU/mi&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;mpge&quot;] = {
	name1    = &quot;mile per gallon gasoline equivalent&quot;,
	name2    = &quot;miles per gallon gasoline equivalent&quot;,
	symbol   = &quot;mpg&amp;#8209;e&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 13e-6,
	invert   = -1,
	iscomplex= true,
	default  = &quot;kWh/100 mi&quot;,
	link     = &quot;Miles per gallon gasoline equivalent&quot;,
    },
    [&quot;BTU/mi&quot;] = {
	per      = { &quot;BTU&quot;, &quot;mi&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;v &gt; 1525 ! M ! k ! J/km&quot;,
    },
    [&quot;kJ/km&quot;] = {
	per      = { &quot;kJ&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;BTU/mi&quot;,
    },
    [&quot;kWh/km&quot;] = {
	per      = { &quot;-kW.h&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;MJ/km kWh/mi&quot;,
    },
    [&quot;kWh/mi&quot;] = {
	per      = { &quot;-kW.h&quot;, &quot;mi&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;kWh/km MJ/km&quot;,
    },
    [&quot;MJ/km&quot;] = {
	per      = { &quot;MJ&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;BTU/mi&quot;,
    },
    [&quot;mpg-e&quot;] = {
	target   = &quot;mpge&quot;,
    },
    [&quot;BTU/lb&quot;] = {
	name1    = &quot;British thermal unit per pound&quot;,
	name2    = &quot;British thermal units per pound&quot;,
	symbol   = &quot;BTU/lb&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 429.92261414790346,
	default  = &quot;kJ/kg&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;cal/g&quot;] = {
	name1    = &quot;calorie per gram&quot;,
	name2    = &quot;calories per gram&quot;,
	symbol   = &quot;cal/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184,
	default  = &quot;J/g&quot;,
    },
    [&quot;GJ/kg&quot;] = {
	name1    = &quot;gigajoule per kilogram&quot;,
	name2    = &quot;gigajoules per kilogram&quot;,
	symbol   = &quot;GJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1e9,
	default  = &quot;ktTNT/t&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;J/g&quot;] = {
	name1    = &quot;joule per gram&quot;,
	name2    = &quot;joules per gram&quot;,
	symbol   = &quot;J/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000,
	default  = &quot;kcal/g&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kcal/g&quot;] = {
	name1    = &quot;kilocalorie per gram&quot;,
	name2    = &quot;kilocalories per gram&quot;,
	symbol   = &quot;kcal/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000,
	default  = &quot;kJ/g&quot;,
    },
    [&quot;kJ/g&quot;] = {
	name1    = &quot;kilojoule per gram&quot;,
	name2    = &quot;kilojoules per gram&quot;,
	symbol   = &quot;kJ/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000000,
	default  = &quot;kcal/g&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kJ/kg&quot;] = {
	name1    = &quot;kilojoule per kilogram&quot;,
	name2    = &quot;kilojoules per kilogram&quot;,
	symbol   = &quot;kJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000,
	default  = &quot;BTU/lb&quot;,
    },
    [&quot;ktonTNT/MT&quot;] = {
	name2    = &quot;kilotons of TNT per metric ton&quot;,
	symbol   = &quot;kiloton of TNT per metric ton&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000000,
	default  = &quot;GJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktTNT/t&quot;] = {
	name2    = &quot;kilotonnes of TNT per tonne&quot;,
	symbol   = &quot;kilotonne of TNT per tonne&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000000,
	default  = &quot;GJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtonTNT/MT&quot;] = {
	name2    = &quot;megatons of TNT per metric ton&quot;,
	symbol   = &quot;megaton of TNT per metric ton&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtTNT/MT&quot;] = {
	name2    = &quot;megatonnes of TNT per tonne&quot;,
	symbol   = &quot;megatonne of TNT per tonne&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TJ/kg&quot;] = {
	name1    = &quot;terajoule per kilogram&quot;,
	name2    = &quot;terajoules per kilogram&quot;,
	symbol   = &quot;TJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1e12,
	default  = &quot;MtTNT/MT&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;Cal/g&quot;] = {
	per      = { &quot;Cal&quot;, &quot;g&quot; },
	utype    = &quot;energy per unit mass&quot;,
	default  = &quot;kJ/g&quot;,
    },
    [&quot;BTU/cuft&quot;] = {
	per      = { &quot;BTU&quot;, &quot;cuft&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/12USoz(mL)serve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USoz(mL)serve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/12USoz(ml)serve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USoz(ml)serve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/l&quot;,
    },
    [&quot;Cal/12USozserve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USozserve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/USoz&quot;] = {
	per      = { &quot;Cal&quot;, &quot;USoz&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/ml&quot;,
    },
    [&quot;kJ/L&quot;] = {
	per      = { &quot;kJ&quot;, &quot;L&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;kJ/l&quot;] = {
	per      = { &quot;kJ&quot;, &quot;l&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;kJ/ml&quot;] = {
	per      = { &quot;kJ&quot;, &quot;ml&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;Cal/USoz&quot;,
    },
    [&quot;MJ/m3&quot;] = {
	per      = { &quot;MJ&quot;, &quot;m3&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;Sv&quot;] = {
	_name1   = &quot;sievert&quot;,
	_symbol  = &quot;Sv&quot;,
	utype    = &quot;equivalent radiation dose&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;rem&quot;,
	link     = &quot;Sievert&quot;,
    },
    [&quot;rem&quot;] = {
	_name1   = &quot;rem&quot;,
	_symbol  = &quot;rem&quot;,
	utype    = &quot;equivalent radiation dose&quot;,
	scale    = 0.01,
	prefixes = 1,
	default  = &quot;Sv&quot;,
	link     = &quot;Roentgen equivalent man&quot;,
    },
    [&quot;g/km&quot;] = {
	name1    = &quot;gram per kilometre&quot;,
	name1_us = &quot;gram per kilometer&quot;,
	name2    = &quot;grams per kilometre&quot;,
	name2_us = &quot;grams per kilometer&quot;,
	symbol   = &quot;g/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1e-6,
	default  = &quot;oz/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;g/mi&quot;] = {
	name1    = &quot;gram per mile&quot;,
	name2    = &quot;grams per mile&quot;,
	symbol   = &quot;g/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 6.2137119223733397e-7,
	default  = &quot;g/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;gCO2/km&quot;] = {
	name1    = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name1_us = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	name2    = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name2_us = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	symbol   = &quot;g(CO&lt;sub&gt;2&lt;/sub&gt;)/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1e-6,
	default  = &quot;ozCO2/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;gCO2/mi&quot;] = {
	name1    = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;g(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 6.2137119223733397e-7,
	default  = &quot;gCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;kg/km&quot;] = {
	name1    = &quot;kilogram per kilometre&quot;,
	name1_us = &quot;kilogram per kilometer&quot;,
	name2    = &quot;kilograms per kilometre&quot;,
	name2_us = &quot;kilograms per kilometer&quot;,
	symbol   = &quot;kg/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.001,
	default  = &quot;lb/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;kgCO2/km&quot;] = {
	name1    = &quot;kilogram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name1_us = &quot;kilogram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	name2    = &quot;kilograms of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name2_us = &quot;kilograms of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	symbol   = &quot;kg(CO&lt;sub&gt;2&lt;/sub&gt;)/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.001,
	default  = &quot;lbCO2/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lb/mi&quot;] = {
	name1    = &quot;pound per mile&quot;,
	name2    = &quot;pounds per mile&quot;,
	symbol   = &quot;lb/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.00028184923173665794,
	default  = &quot;kg/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lbCO2/mi&quot;] = {
	name1    = &quot;pound of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;pounds of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;lb(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.00028184923173665794,
	default  = &quot;kgCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;oz/mi&quot;] = {
	name1    = &quot;ounce per mile&quot;,
	name2    = &quot;ounces per mile&quot;,
	symbol   = &quot;oz/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1.7615576983541121e-5,
	default  = &quot;g/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;ozCO2/mi&quot;] = {
	name1    = &quot;ounce of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;ounces of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;oz(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1.7615576983541121e-5,
	default  = &quot;gCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;cuft/a&quot;] = {
	name1    = &quot;cubic foot per annum&quot;,
	name2    = &quot;cubic feet per annum&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 8.9730672142368242e-10,
	default  = &quot;m3/a&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/d&quot;] = {
	name1    = &quot;cubic foot per day&quot;,
	name2    = &quot;cubic feet per day&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 3.2774128000000003e-7,
	default  = &quot;m3/d&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/h&quot;] = {
	name1    = &quot;cubic foot per hour&quot;,
	name2    = &quot;cubic feet per hour&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 7.8657907200000004e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/min&quot;] = {
	name1    = &quot;cubic foot per minute&quot;,
	name2    = &quot;cubic feet per minute&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00047194744319999999,
	default  = &quot;m3/min&quot;,
	link     = &quot;Cubic foot#cubic foot per second&quot;,
    },
    [&quot;cuft/s&quot;] = {
	name1    = &quot;cubic foot per second&quot;,
	name2    = &quot;cubic feet per second&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 28316846592e-12,
	default  = &quot;m3/s&quot;,
    },
    [&quot;cumi/a&quot;] = {
	name1    = &quot;cubic mile per annum&quot;,
	name2    = &quot;cubic miles per annum&quot;,
	symbol   = &quot;cu&amp;nbsp;mi/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 132.08171170940057,
	default  = &quot;km3/a&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuyd/h&quot;] = {
	name1    = &quot;cubic yard per hour&quot;,
	name2    = &quot;cubic yards per hour&quot;,
	symbol   = &quot;cuyd/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00021237634944000001,
	default  = &quot;m3/h&quot;,
	link     = &quot;Cubic foot per minute&quot;,
    },
    [&quot;cuyd/s&quot;] = {
	name1    = &quot;cubic yard per second&quot;,
	name2    = &quot;cubic yards per second&quot;,
	symbol   = &quot;cu&amp;nbsp;yd/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.76455485798400002,
	default  = &quot;m3/s&quot;,
    },
    [&quot;Goilbbl/a&quot;] = {
	name1    = &quot;billion barrels per year&quot;,
	name2    = &quot;billion barrels per year&quot;,
	symbol   = &quot;Gbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933836,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e6 ! e9 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;impgal/h&quot;] = {
	name1    = &quot;imperial gallon per hour&quot;,
	name2    = &quot;imperial gallons per hour&quot;,
	symbol   = &quot;imp&amp;nbsp;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.2628027777777779e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;impgal/min&quot;] = {
	name1    = &quot;imperial gallon per minute&quot;,
	name2    = &quot;imperial gallons per minute&quot;,
	symbol   = &quot;imp gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 7.5768166666666671e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;impgal/s&quot;] = {
	name1    = &quot;imperial gallon per second&quot;,
	name2    = &quot;imperial gallons per second&quot;,
	symbol   = &quot;impgal/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00454609,
	default  = &quot;m3/s&quot;,
	link     = &quot;Imperial gallons per second&quot;,
    },
    [&quot;km3/a&quot;] = {
	name1    = &quot;cubic kilometre per annum&quot;,
	name1_us = &quot;cubic kilometer per annum&quot;,
	name2    = &quot;cubic kilometres per annum&quot;,
	name2_us = &quot;cubic kilometers per annum&quot;,
	symbol   = &quot;km&lt;sup&gt;3&lt;/sup&gt;/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 31.68808781402895,
	default  = &quot;cumi/a&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;km3/d&quot;] = {
	name1    = &quot;cubic kilometre per day&quot;,
	name1_us = &quot;cubic kilometer per day&quot;,
	name2    = &quot;cubic kilometres per day&quot;,
	name2_us = &quot;cubic kilometers per day&quot;,
	symbol   = &quot;km&lt;sup&gt;3&lt;/sup&gt;/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 11574.074074074075,
	default  = &quot;cuft/d&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;koilbbl/a&quot;] = {
	name1    = &quot;thousand barrels per year&quot;,
	name2    = &quot;thousand barrels per year&quot;,
	symbol   = &quot;kbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933841e-6,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;koilbbl/d&quot;] = {
	name1    = &quot;thousand barrels per day&quot;,
	name2    = &quot;thousand barrels per day&quot;,
	symbol   = &quot;kbbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.0018401307283333335,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3/d&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;L/h&quot;] = {
	name1    = &quot;litre per hour&quot;,
	name1_us = &quot;liter per hour&quot;,
	name2    = &quot;litres per hour&quot;,
	name2_us = &quot;liters per hour&quot;,
	symbol   = &quot;L/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 2.7777777777777776e-7,
	default  = &quot;impgal/h USgal/h&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;L/min&quot;] = {
	name1    = &quot;litre per minute&quot;,
	name1_us = &quot;liter per minute&quot;,
	name2    = &quot;litres per minute&quot;,
	name2_us = &quot;liters per minute&quot;,
	symbol   = &quot;L/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.6666666666666667e-5,
	default  = &quot;impgal/min USgal/min&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;L/s&quot;] = {
	name1    = &quot;litre per second&quot;,
	name1_us = &quot;liter per second&quot;,
	name2    = &quot;litres per second&quot;,
	name2_us = &quot;liters per second&quot;,
	symbol   = &quot;L/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.001,
	default  = &quot;cuft/s&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/a&quot;] = {
	name1    = &quot;cubic metre per annum&quot;,
	name1_us = &quot;cubic meter per annum&quot;,
	name2    = &quot;cubic metres per annum&quot;,
	name2_us = &quot;cubic meters per annum&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 3.1688087814028947e-8,
	default  = &quot;cuft/a&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/d&quot;] = {
	name1    = &quot;cubic metre per day&quot;,
	name1_us = &quot;cubic meter per day&quot;,
	name2    = &quot;cubic metres per day&quot;,
	name2_us = &quot;cubic meters per day&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;cuft/d&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/h&quot;] = {
	name1    = &quot;cubic metre per hour&quot;,
	name1_us = &quot;cubic meter per hour&quot;,
	name2    = &quot;cubic metres per hour&quot;,
	name2_us = &quot;cubic meters per hour&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;cuft/h&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/min&quot;] = {
	name1    = &quot;cubic metre per minute&quot;,
	name1_us = &quot;cubic meter per minute&quot;,
	name2    = &quot;cubic metres per minute&quot;,
	name2_us = &quot;cubic meters per minute&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;cuft/min&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/s&quot;] = {
	name1    = &quot;cubic metre per second&quot;,
	name1_us = &quot;cubic meter per second&quot;,
	name2    = &quot;cubic metres per second&quot;,
	name2_us = &quot;cubic meters per second&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1,
	default  = &quot;cuft/s&quot;,
    },
    [&quot;Moilbbl/a&quot;] = {
	name1    = &quot;million barrels per year&quot;,
	name2    = &quot;million barrels per year&quot;,
	symbol   = &quot;Mbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.0050380033629933837,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;Moilbbl/d&quot;] = {
	name1    = &quot;million barrels per day&quot;,
	name2    = &quot;million barrels per day&quot;,
	symbol   = &quot;Mbbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.8401307283333335,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3/d&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;oilbbl/a&quot;] = {
	name1    = &quot;barrel per year&quot;,
	name2    = &quot;barrels per year&quot;,
	symbol   = &quot;bbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933841e-9,
	default  = &quot;m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;oilbbl/d&quot;] = {
	name1    = &quot;barrel per day&quot;,
	name2    = &quot;barrels per day&quot;,
	symbol   = &quot;bbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.8401307283333336e-6,
	default  = &quot;m3/d&quot;,
    },
    [&quot;Toilbbl/a&quot;] = {
	name1    = &quot;trillion barrels per year&quot;,
	name2    = &quot;trillion barrels per year&quot;,
	symbol   = &quot;Tbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5038.0033629933832,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e9 ! e12 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;U.S.gal/d&quot;] = {
	name1    = &quot;U.S. gallon per day&quot;,
	name2    = &quot;U.S. gallons per day&quot;,
	symbol   = &quot;U.S.&amp;nbsp;gal/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 4.3812636388888893e-8,
	default  = &quot;m3/s&quot;,
	customary= 1,
    },
    [&quot;U.S.gal/h&quot;] = {
	name1    = &quot;gallon per hour&quot;,
	name2    = &quot;gallons per hour&quot;,
	symbol   = &quot;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.0515032733333334e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
	customary= 2,
    },
    [&quot;U.S.gal/min&quot;] = {
	name1    = &quot;U.S. gallon per minute&quot;,
	name2    = &quot;U.S. gallons per minute&quot;,
	symbol   = &quot;U.S.&amp;nbsp;gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 6.3090196400000003e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal/a&quot;] = {
	name1    = &quot;US gallon per year&quot;,
	name2    = &quot;US gallons per year&quot;,
	symbol   = &quot;US&amp;nbsp;gal/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.1995246102365199e-10,
	default  = &quot;m3/s&quot;,
	link     = &quot;US gallon per day&quot;,
    },
    [&quot;USgal/d&quot;] = {
	name1    = &quot;US gallon per day&quot;,
	name2    = &quot;US gallons per day&quot;,
	symbol   = &quot;US&amp;nbsp;gal/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 4.3812636388888893e-8,
	default  = &quot;m3/s&quot;,
    },
    [&quot;USgal/h&quot;] = {
	name1    = &quot;gallon per hour&quot;,
	name2    = &quot;gallons per hour&quot;,
	symbol   = &quot;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.0515032733333334e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
	customary= 1,
    },
    [&quot;USgal/min&quot;] = {
	name1    = &quot;US gallon per minute&quot;,
	name2    = &quot;US gallons per minute&quot;,
	symbol   = &quot;US&amp;nbsp;gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 6.3090196400000003e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal/s&quot;] = {
	name1    = &quot;US gallon per second&quot;,
	name1_us = &quot;U.S. gallon per second&quot;,
	name2    = &quot;US gallons per second&quot;,
	name2_us = &quot;U.S. gallons per second&quot;,
	symbol   = &quot;USgal/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.003785411784,
	default  = &quot;m3/s&quot;,
	link     = &quot;US gallons per second&quot;,
    },
    [&quot;ft3/a&quot;] = {
	target   = &quot;cuft/a&quot;,
    },
    [&quot;ft3/d&quot;] = {
	target   = &quot;cuft/d&quot;,
    },
    [&quot;ft3/h&quot;] = {
	target   = &quot;cuft/h&quot;,
    },
    [&quot;ft3/s&quot;] = {
	target   = &quot;cuft/s&quot;,
    },
    [&quot;Gcuft/a&quot;] = {
	target   = &quot;e9cuft/a&quot;,
    },
    [&quot;Gcuft/d&quot;] = {
	target   = &quot;e9cuft/d&quot;,
    },
    [&quot;kcuft/a&quot;] = {
	target   = &quot;e3cuft/a&quot;,
    },
    [&quot;kcuft/d&quot;] = {
	target   = &quot;e3cuft/d&quot;,
    },
    [&quot;kcuft/s&quot;] = {
	target   = &quot;e3cuft/s&quot;,
    },
    [&quot;Mcuft/a&quot;] = {
	target   = &quot;e6cuft/a&quot;,
    },
    [&quot;Mcuft/d&quot;] = {
	target   = &quot;e6cuft/d&quot;,
    },
    [&quot;Mcuft/s&quot;] = {
	target   = &quot;e6cuft/s&quot;,
    },
    [&quot;m/s&quot;] = {
	target   = &quot;m3/s&quot;,
    },
    [&quot;Tcuft/a&quot;] = {
	target   = &quot;e12cuft/a&quot;,
    },
    [&quot;Tcuft/d&quot;] = {
	target   = &quot;e12cuft/d&quot;,
    },
    [&quot;u.s.gal/min&quot;] = {
	target   = &quot;U.S.gal/min&quot;,
    },
    [&quot;usgal/min&quot;] = {
	target   = &quot;USgal/min&quot;,
    },
    [&quot;-LTf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LTf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;-STf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;STf&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;dyn&quot;] = {
	name1    = &quot;dyne&quot;,
	symbol   = &quot;dyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00001,
	default  = &quot;gr-f&quot;,
    },
    [&quot;g-f&quot;] = {
	name1    = &quot;gram-force&quot;,
	name2    = &quot;grams-force&quot;,
	symbol   = &quot;g&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN oz-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;gf&quot;] = {
	name1    = &quot;gram-force&quot;,
	name2    = &quot;grams-force&quot;,
	symbol   = &quot;gf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN ozf&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;gr-f&quot;] = {
	name1    = &quot;grain-force&quot;,
	name2    = &quot;grains-force&quot;,
	symbol   = &quot;gr&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.0006354602307515,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;grf&quot;] = {
	name1    = &quot;grain-force&quot;,
	name2    = &quot;grains-force&quot;,
	symbol   = &quot;grf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.0006354602307515,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;kdyn&quot;] = {
	name1    = &quot;kilodyne&quot;,
	symbol   = &quot;kdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.01,
	default  = &quot;oz-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;kg-f&quot;] = {
	name1    = &quot;kilogram-force&quot;,
	name2    = &quot;kilograms-force&quot;,
	symbol   = &quot;kg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lb-f&quot;,
    },
    [&quot;kgf&quot;] = {
	name1    = &quot;kilogram-force&quot;,
	name2    = &quot;kilograms-force&quot;,
	symbol   = &quot;kgf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lbf&quot;,
    },
    [&quot;kp&quot;] = {
	name1    = &quot;kilopond&quot;,
	symbol   = &quot;kp&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lb-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;L/T-f&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;L/T&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;L/Tf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;L/Tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;lb-f&quot;] = {
	name1    = &quot;pound-force&quot;,
	name2    = &quot;pounds-force&quot;,
	symbol   = &quot;lb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
    },
    [&quot;lbf&quot;] = {
	name1    = &quot;pound-force&quot;,
	name2    = &quot;pounds-force&quot;,
	symbol   = &quot;lbf&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
    },
    [&quot;lb(f)&quot;] = {
	name1    = &quot;pound&quot;,
	symbol   = &quot;lb&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;LT-f&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LT&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;LTf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LTf&quot;,
	usename  = 1,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;Mdyn&quot;] = {
	name1    = &quot;megadyne&quot;,
	symbol   = &quot;Mdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 10,
	default  = &quot;lb-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;mdyn&quot;] = {
	name1    = &quot;millidyne&quot;,
	symbol   = &quot;mdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000001,
	default  = &quot;gr-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;mg-f&quot;] = {
	name1    = &quot;milligram-force&quot;,
	name2    = &quot;milligrams-force&quot;,
	symbol   = &quot;mg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N gr-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;mgf&quot;] = {
	name1    = &quot;milligram-force&quot;,
	name2    = &quot;milligrams-force&quot;,
	symbol   = &quot;mgf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N grf&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;Mp&quot;] = {
	name1    = &quot;megapond&quot;,
	symbol   = &quot;Mp&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LT-f ST-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;mp&quot;] = {
	name1    = &quot;millipond&quot;,
	symbol   = &quot;mp&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N gr-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;N&quot;] = {
	_name1   = &quot;newton&quot;,
	_symbol  = &quot;N&quot;,
	utype    = &quot;force&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;lb-f&quot;,
	link     = &quot;Newton (unit)&quot;,
    },
    [&quot;oz-f&quot;] = {
	name1    = &quot;ounce-force&quot;,
	name2    = &quot;ounces-force&quot;,
	symbol   = &quot;oz&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.2780138203095378125,
	default  = &quot;mN&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;ozf&quot;] = {
	name1    = &quot;ounce-force&quot;,
	name2    = &quot;ounces-force&quot;,
	symbol   = &quot;ozf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.2780138203095378125,
	default  = &quot;mN&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;p&quot;] = {
	name1    = &quot;pond&quot;,
	symbol   = &quot;p&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN oz-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;pdl&quot;] = {
	name1    = &quot;poundal&quot;,
	symbol   = &quot;pdl&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.138254954376,
	default  = &quot;N&quot;,
    },
    [&quot;S/T-f&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;S/T&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;S/Tf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;S/Tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;ST-f&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;ST&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;STf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;STf&quot;,
	usename  = 1,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;t-f&quot;] = {
	name1    = &quot;tonne-force&quot;,
	name2    = &quot;tonnes-force&quot;,
	symbol   = &quot;t&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LT-f ST-f&quot;,
	link     = &quot;Ton-force#Tonne-force&quot;,
    },
    [&quot;tf&quot;] = {
	name1    = &quot;tonne-force&quot;,
	name2    = &quot;tonnes-force&quot;,
	symbol   = &quot;tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LTf STf&quot;,
	link     = &quot;Ton-force#Tonne-force&quot;,
    },
    [&quot;dyne&quot;] = {
	target   = &quot;dyn&quot;,
    },
    [&quot;newtons&quot;] = {
	target   = &quot;N&quot;,
    },
    [&quot;poundal&quot;] = {
	target   = &quot;pdl&quot;,
    },
    [&quot;tonne-force&quot;] = {
	target   = &quot;tf&quot;,
    },
    [&quot;impgal/mi&quot;] = {
	per      = { &quot;@impgal&quot;, &quot;mi&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km USgal/mi&quot;,
    },
    [&quot;km/L&quot;] = {
	per      = { &quot;km&quot;, &quot;L&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;km/l&quot;] = {
	per      = { &quot;km&quot;, &quot;l&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;L/100 km&quot;] = {
	per      = { &quot;L&quot;, &quot;100km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|L/100&amp;nbsp;km]]&quot;,
    },
    [&quot;l/100 km&quot;] = {
	per      = { &quot;l&quot;, &quot;100km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|l/100&amp;nbsp;km]]&quot;,
    },
    [&quot;L/km&quot;] = {
	per      = { &quot;L&quot;, &quot;km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;l/km&quot;] = {
	per      = { &quot;l&quot;, &quot;km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;mi/impqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;impqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/U.S.qt&quot;] = {
	per      = { &quot;mi&quot;, &quot;U.S.qt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/USqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;USqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/usqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;usqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mpgimp&quot;] = {
	per      = { &quot;mi&quot;, &quot;@impgal&quot; },
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;imp&lt;/sub&gt;&quot;,
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;L/100 km+mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[Imperial units|imp]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgus&quot;] = {
	per      = { &quot;mi&quot;, &quot;+USgal&quot; },
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;US&lt;/sub&gt;&quot;,
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;L/100 km+mpgimp&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|US]]&lt;/sub&gt;&quot;,
    },
    [&quot;U.S.gal/mi&quot;] = {
	per      = { &quot;*U.S.gal&quot;, &quot;mi&quot; },
	sp_us    = true,
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km impgal/mi&quot;,
    },
    [&quot;usgal/mi&quot;] = {
	per      = { &quot;+USgal&quot;, &quot;mi&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km impgal/mi&quot;,
    },
    [&quot;L/100km&quot;] = {
	target   = &quot;L/100 km&quot;,
    },
    [&quot;l/100km&quot;] = {
	target   = &quot;l/100 km&quot;,
    },
    [&quot;mpg&quot;] = {
	shouldbe = &quot;Use %{mpgus%} for miles per US gallon or %{mpgimp%} for miles per imperial gallon (not %{mpg%})&quot;,
    },
    [&quot;mpgU.S.&quot;] = {
	target   = &quot;mpgus&quot;,
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;U.S.&lt;/sub&gt;&quot;,
	sp_us    = true,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|U.S.]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgu.s.&quot;] = {
	target   = &quot;mpgus&quot;,
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;U.S.&lt;/sub&gt;&quot;,
	sp_us    = true,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|U.S.]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgUS&quot;] = {
	target   = &quot;mpgus&quot;,
    },
    [&quot;USgal/mi&quot;] = {
	target   = &quot;usgal/mi&quot;,
    },
    [&quot;kPa/m&quot;] = {
	per      = { &quot;kPa&quot;, &quot;-m-frac&quot; },
	utype    = &quot;fracture gradient&quot;,
	default  = &quot;psi/ft&quot;,
    },
    [&quot;psi/ft&quot;] = {
	per      = { &quot;psi&quot;, &quot;-ft-frac&quot; },
	utype    = &quot;fracture gradient&quot;,
	default  = &quot;kPa/m&quot;,
    },
    [&quot;cm/km&quot;] = {
	name1    = &quot;centimetre per kilometre&quot;,
	name1_us = &quot;centimeter per kilometer&quot;,
	name2    = &quot;centimetres per kilometre&quot;,
	name2_us = &quot;centimeters per kilometer&quot;,
	symbol   = &quot;cm/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00001,
	default  = &quot;ft/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;ft/mi&quot;] = {
	name1    = &quot;foot per mile&quot;,
	name2    = &quot;feet per mile&quot;,
	symbol   = &quot;ft/mi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00018939393939393939,
	default  = &quot;v &lt; 5.28 ! c ! ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;ft/nmi&quot;] = {
	name1    = &quot;foot per nautical mile&quot;,
	name2    = &quot;feet per nautical mile&quot;,
	symbol   = &quot;ft/nmi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00016457883369330455,
	default  = &quot;v &lt; 6.076 ! c ! ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;in/ft&quot;] = {
	name1    = &quot;inch per foot&quot;,
	name2    = &quot;inches per foot&quot;,
	symbol   = &quot;in/ft&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.083333333333333329,
	default  = &quot;mm/m&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;in/mi&quot;] = {
	name1    = &quot;inch per mile&quot;,
	name2    = &quot;inches per mile&quot;,
	symbol   = &quot;in/mi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 1.5782828282828283e-5,
	default  = &quot;v &lt; 0.6336 ! m ! c ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;m/km&quot;] = {
	name1    = &quot;metre per kilometre&quot;,
	name1_us = &quot;meter per kilometer&quot;,
	name2    = &quot;metres per kilometre&quot;,
	name2_us = &quot;meters per kilometer&quot;,
	symbol   = &quot;m/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.001,
	default  = &quot;ft/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;mm/km&quot;] = {
	name1    = &quot;millimetre per kilometre&quot;,
	name1_us = &quot;millimeter per kilometer&quot;,
	name2    = &quot;millimetres per kilometre&quot;,
	name2_us = &quot;millimeters per kilometer&quot;,
	symbol   = &quot;mm/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.000001,
	default  = &quot;in/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;mm/m&quot;] = {
	name1    = &quot;millimetre per metre&quot;,
	name1_us = &quot;millimeter per meter&quot;,
	name2    = &quot;millimetres per metre&quot;,
	name2_us = &quot;millimeters per meter&quot;,
	symbol   = &quot;mm/m&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.001,
	default  = &quot;in/ft&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;admi&quot;] = {
	name1    = &quot;admiralty mile&quot;,
	symbol   = &quot;nmi&amp;nbsp;(admiralty)&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;AU&quot;] = {
	name1    = &quot;astronomical unit&quot;,
	symbol   = &quot;AU&quot;,
	utype    = &quot;length&quot;,
	scale    = 149597870700,
	default  = &quot;km mi&quot;,
    },
    [&quot;Brnmi&quot;] = {
	name1    = &quot;British nautical mile&quot;,
	symbol   = &quot;(Brit)&amp;nbsp;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;bu&quot;] = {
	name2    = &quot;bu&quot;,
	symbol   = &quot;bu&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0030303030303030303,
	default  = &quot;mm&quot;,
	link     = &quot;Japanese units of measurement#Length&quot;,
    },
    [&quot;ch&quot;] = {
	name1    = &quot;chain&quot;,
	symbol   = &quot;ch&quot;,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 66, default = &quot;m&quot; }, [&quot;yd&quot;] = { 22, default = &quot;m&quot; } },
	link     = &quot;Chain (unit)&quot;,
    },
    [&quot;chlk&quot;] = {
	name1    = &quot;[[Chain (unit)|chain]]&quot;,
	symbol   = &quot;[[Chain (unit)|ch]]&quot;,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	link     = &quot;&quot;,
    },
    [&quot;chain&quot;] = {
	symbol   = &quot;chain&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 66, default = &quot;m&quot; }, [&quot;yd&quot;] = { 22, default = &quot;m&quot; } },
	link     = &quot;Chain (unit)&quot;,
    },
    [&quot;chainlk&quot;] = {
	symbol   = &quot;[[Chain (unit)|chain]]&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	link     = &quot;&quot;,
    },
    [&quot;dpcm&quot;] = {
	name2    = &quot;dot/cm&quot;,
	symbol   = &quot;dot/cm&quot;,
	utype    = &quot;length&quot;,
	scale    = 100,
	invert   = -1,
	iscomplex= true,
	default  = &quot;dpi&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;dpi&quot;] = {
	name2    = &quot;DPI&quot;,
	symbol   = &quot;DPI&quot;,
	utype    = &quot;length&quot;,
	scale    = 39.370078740157481,
	invert   = -1,
	iscomplex= true,
	default  = &quot;pitch&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;fathom&quot;] = {
	symbol   = &quot;fathom&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 1.8288,
	default  = &quot;ft m&quot;,
    },
    [&quot;foot&quot;] = {
	name1    = &quot;foot&quot;,
	name2    = &quot;foot&quot;,
	symbol   = &quot;ft&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.3048,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;in&quot;] = { 12, default = &quot;m&quot; } },
	link     = &quot;Foot (unit)&quot;,
    },
    [&quot;ft&quot;] = {
	name1    = &quot;foot&quot;,
	name2    = &quot;feet&quot;,
	symbol   = &quot;ft&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.3048,
	exception= &quot;integer_more_precision&quot;,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;in&quot;] = { 12, default = &quot;m&quot; } },
	link     = &quot;Foot (unit)&quot;,
    },
    [&quot;furlong&quot;] = {
	symbol   = &quot;furlong&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 201.168,
	default  = &quot;ft m&quot;,
    },
    [&quot;Gly&quot;] = {
	name1    = &quot;gigalight-year&quot;,
	symbol   = &quot;Gly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e24,
	default  = &quot;Mpc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;Gpc&quot;] = {
	name1    = &quot;gigaparsec&quot;,
	symbol   = &quot;Gpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e25,
	default  = &quot;Gly&quot;,
	link     = &quot;Parsec#Megaparsecs and gigaparsecs&quot;,
    },
    [&quot;hand&quot;] = {
	name1    = &quot;hand&quot;,
	symbol   = &quot;h&quot;,
	utype    = &quot;length&quot;,
	builtin  = &quot;hand&quot;,
	scale    = 0.1016,
	iscomplex= true,
	default  = &quot;in cm&quot;,
	link     = &quot;Hand (unit)&quot;,
    },
    [&quot;in&quot;] = {
	name1    = &quot;inch&quot;,
	name2    = &quot;inches&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0254,
	exception= &quot;subunit_more_precision&quot;,
	default  = &quot;mm&quot;,
    },
    [&quot;inabbreviated&quot;] = {
	name2    = &quot;in&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0254,
	default  = &quot;mm&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;kly&quot;] = {
	name1    = &quot;kilolight-year&quot;,
	symbol   = &quot;kly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e18,
	default  = &quot;pc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;kpc&quot;] = {
	name1    = &quot;kiloparsec&quot;,
	symbol   = &quot;kpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e19,
	default  = &quot;kly&quot;,
	link     = &quot;Parsec#Parsecs and kiloparsecs&quot;,
    },
    [&quot;LD&quot;] = {
	name1    = &quot;lunar distance&quot;,
	symbol   = &quot;LD&quot;,
	utype    = &quot;length&quot;,
	scale    = 384403000,
	default  = &quot;km mi&quot;,
	link     = &quot;Lunar distance (astronomy)&quot;,
    },
    [&quot;league&quot;] = {
	symbol   = &quot;league&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 4828.032,
	default  = &quot;km&quot;,
	link     = &quot;League (unit)&quot;,
    },
    [&quot;ly&quot;] = {
	name1    = &quot;light-year&quot;,
	symbol   = &quot;ly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e15,
	default  = &quot;AU&quot;,
    },
    [&quot;m&quot;] = {
	_name1   = &quot;metre&quot;,
	_name1_us= &quot;meter&quot;,
	_symbol  = &quot;m&quot;,
	utype    = &quot;length&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;v &gt; 0 and v &lt; 3 ! ftin ! ft&quot;,
	link     = &quot;Metre&quot;,
    },
    [&quot;mi&quot;] = {
	name1    = &quot;mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	subdivs  = { [&quot;ch&quot;] = { 80, default = &quot;km&quot; }, [&quot;chlk&quot;] = { 80, default = &quot;km&quot; }, [&quot;chain&quot;] = { 80, default = &quot;km&quot; }, [&quot;chainlk&quot;] = { 80, default = &quot;km&quot; }, [&quot;ft&quot;] = { 5280, default = &quot;km&quot; }, [&quot;furlong&quot;] = { 8, default = &quot;km&quot; }, [&quot;yd&quot;] = { 1760, default = &quot;km&quot; } },
    },
    [&quot;mil&quot;] = {
	symbol   = &quot;mil&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0000254,
	default  = &quot;mm&quot;,
	link     = &quot;Thousandth of an inch&quot;,
    },
    [&quot;Mly&quot;] = {
	name1    = &quot;megalight-year&quot;,
	symbol   = &quot;Mly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e21,
	default  = &quot;kpc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;Mpc&quot;] = {
	name1    = &quot;megaparsec&quot;,
	symbol   = &quot;Mpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e22,
	default  = &quot;Mly&quot;,
	link     = &quot;Parsec#Megaparsecs and gigaparsecs&quot;,
    },
    [&quot;NM&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;NM&quot;,
	utype    = &quot;length&quot;,
	scale    = 1852,
	default  = &quot;km mi&quot;,
    },
    [&quot;nmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1852,
	default  = &quot;km mi&quot;,
    },
    [&quot;oldUKnmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
    },
    [&quot;oldUSnmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
    },
    [&quot;pc&quot;] = {
	name1    = &quot;parsec&quot;,
	symbol   = &quot;pc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e16,
	default  = &quot;ly&quot;,
    },
    [&quot;perch&quot;] = {
	name2    = &quot;perches&quot;,
	symbol   = &quot;perch&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;pitch&quot;] = {
	name2    = &quot;m&quot;,
	symbol   = &quot;m&quot;,
	utype    = &quot;length&quot;,
	scale    = 1e-6,
	default  = &quot;dpi&quot;,
	defkey   = &quot;pitch&quot;,
	linkey   = &quot;pitch&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;pole&quot;] = {
	symbol   = &quot;pole&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;pre1954U.S.nmi&quot;] = {
	name1    = &quot;(pre-1954&amp;nbsp;U.S.) nautical mile&quot;,
	symbol   = &quot;(pre&amp;#8209;1954&amp;nbsp;U.S.) nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;pre1954USnmi&quot;] = {
	name1    = &quot;(pre-1954&amp;nbsp;US) nautical mile&quot;,
	name1_us = &quot;(pre-1954&amp;nbsp;U.S.) nautical mile&quot;,
	symbol   = &quot;(pre&amp;#8209;1954&amp;nbsp;US) nmi&quot;,
	sym_us   = &quot;(pre&amp;#8209;1954&amp;nbsp;U.S.) nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;rd&quot;] = {
	name1    = &quot;rod&quot;,
	symbol   = &quot;rd&quot;,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;royal cubit&quot;] = {
	name1    = &quot;royal cubit&quot;,
	symbol   = &quot;cu&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.524,
	default  = &quot;mm&quot;,
    },
    [&quot;rtkm&quot;] = {
	name1    = &quot;route kilometre&quot;,
	name1_us = &quot;route kilometer&quot;,
	symbol   = &quot;km&quot;,
	utype    = &quot;length&quot;,
	scale    = 1000,
	default  = &quot;mi&quot;,
	link     = &quot;Kilometre&quot;,
    },
    [&quot;rtmi&quot;] = {
	name1    = &quot;route mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	link     = &quot;Mile&quot;,
    },
    [&quot;shaku&quot;] = {
	name2    = &quot;shaku&quot;,
	symbol   = &quot;shaku&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.30303030303030304,
	default  = &quot;m&quot;,
	link     = &quot;Shaku (unit)&quot;,
    },
    [&quot;sm&quot;] = {
	name1    = &quot;smoot&quot;,
	symbol   = &quot;sm&quot;,
	utype    = &quot;length&quot;,
	scale    = 1.70180,
	default  = &quot;m&quot;,
	link     = &quot;Smoot (unit)&quot;,
    },
    [&quot;smi&quot;] = {
	name1    = &quot;statute mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	subdivs  = { [&quot;chain&quot;] = { 80, default = &quot;km&quot; } },
    },
    [&quot;solar radius&quot;] = {
	name1    = &quot;solar radius&quot;,
	name2    = &quot;solar radii&quot;,
	symbol   = &quot;''R''&lt;sub&gt;&lt;/sub&gt;&quot;,
	utype    = &quot;length&quot;,
	scale    = 695700e3,
	default  = &quot;km&quot;,
    },
    [&quot;sun&quot;] = {
	name2    = &quot;sun&quot;,
	symbol   = &quot;sun&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.030303030303030304,
	default  = &quot;mm&quot;,
	link     = &quot;Japanese units of measurement#Length&quot;,
    },
    [&quot;thou&quot;] = {
	name2    = &quot;thou&quot;,
	symbol   = &quot;thou&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0000254,
	default  = &quot;mm&quot;,
	link     = &quot;Thousandth of an inch&quot;,
    },
    [&quot;verst&quot;] = {
	symbol   = &quot;verst&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 1066.8,
	default  = &quot;km mi&quot;,
    },
    [&quot;yd&quot;] = {
	name1    = &quot;yard&quot;,
	symbol   = &quot;yd&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.9144,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 3, default = &quot;m&quot; } },
    },
    [&quot;in&quot;] = {
	name1    = &quot;microinch&quot;,
	name2    = &quot;microinches&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0000000254,
	default  = &quot;nm&quot;,
	link     = &quot;SI prefix#Non-SI units&quot;,
    },
    [&quot;&quot;] = {
	name1    = &quot;ngstrm&quot;,
	symbol   = &quot;&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0000000001,
	default  = &quot;in&quot;,
	link     = &quot;Angstrom&quot;,
    },
    [&quot;Hz&quot;] = {
	_name1   = &quot;hertz&quot;,
	_name2   = &quot;hertz&quot;,
	_symbol  = &quot;Hz&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.3356409519815204e-9,
	invert   = -1,
	iscomplex= true,
	prefixes = 1,
	default  = &quot;m&quot;,
	link     = &quot;Hertz&quot;,
    },
    [&quot;-ft-frac&quot;] = {
	target   = &quot;ft&quot;,
	link     = &quot;Fracture gradient&quot;,
    },
    [&quot;-in-stiff&quot;] = {
	target   = &quot;in&quot;,
	link     = &quot;Stiffness&quot;,
    },
    [&quot;-m-frac&quot;] = {
	target   = &quot;m&quot;,
	link     = &quot;Fracture gradient&quot;,
    },
    [&quot;-m-stiff&quot;] = {
	target   = &quot;m&quot;,
	link     = &quot;Stiffness&quot;,
    },
    [&quot;100km&quot;] = {
	target   = &quot;km&quot;,
	multiplier= 100,
    },
    [&quot;admiralty nmi&quot;] = {
	target   = &quot;oldUKnmi&quot;,
    },
    [&quot;angstrom&quot;] = {
	target   = &quot;&quot;,
    },
    [&quot;au&quot;] = {
	target   = &quot;AU&quot;,
	symbol   = &quot;au&quot;,
    },
    [&quot;feet&quot;] = {
	target   = &quot;ft&quot;,
    },
    [&quot;hands&quot;] = {
	target   = &quot;hand&quot;,
    },
    [&quot;inch&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;light-year&quot;] = {
	target   = &quot;ly&quot;,
    },
    [&quot;meter&quot;] = {
	target   = &quot;m&quot;,
	sp_us    = true,
    },
    [&quot;meters&quot;] = {
	target   = &quot;m&quot;,
	sp_us    = true,
    },
    [&quot;metre&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;metres&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;micrometre&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;micron&quot;] = {
	target   = &quot;m&quot;,
	default  = &quot;in&quot;,
    },
    [&quot;mile&quot;] = {
	target   = &quot;mi&quot;,
    },
    [&quot;miles&quot;] = {
	target   = &quot;mi&quot;,
    },
    [&quot;parsec&quot;] = {
	target   = &quot;pc&quot;,
    },
    [&quot;rod&quot;] = {
	target   = &quot;rd&quot;,
    },
    [&quot;smoot&quot;] = {
	target   = &quot;sm&quot;,
    },
    [&quot;uin&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;yard&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;yards&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;yds&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;in&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;dtex&quot;] = {
	name1    = &quot;decitex&quot;,
	name2    = &quot;decitex&quot;,
	symbol   = &quot;dtex&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1e-7,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Units of textile measurement#Tex&quot;,
    },
    [&quot;kg/cm&quot;] = {
	name1    = &quot;kilogram per centimetre&quot;,
	name1_us = &quot;kilogram per centimeter&quot;,
	name2    = &quot;kilograms per centimetre&quot;,
	name2_us = &quot;kilograms per centimeter&quot;,
	symbol   = &quot;kg/cm&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 100,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;kg/m&quot;] = {
	name1    = &quot;kilogram per metre&quot;,
	name1_us = &quot;kilogram per meter&quot;,
	name2    = &quot;kilograms per metre&quot;,
	name2_us = &quot;kilograms per meter&quot;,
	symbol   = &quot;kg/m&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;lb/ft&quot;] = {
	name1    = &quot;pound per foot&quot;,
	name2    = &quot;pounds per foot&quot;,
	symbol   = &quot;lb/ft&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1.4881639435695539,
	default  = &quot;kg/m&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;lb/yd&quot;] = {
	name1    = &quot;pound per yard&quot;,
	name2    = &quot;pounds per yard&quot;,
	symbol   = &quot;lb/yd&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 0.49605464785651798,
	default  = &quot;kg/m&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;G&quot;] = {
	_name1   = &quot;gauss&quot;,
	_name2   = &quot;gauss&quot;,
	_symbol  = &quot;G&quot;,
	utype    = &quot;magnetic field strength&quot;,
	scale    = 0.0001,
	prefixes = 1,
	default  = &quot;T&quot;,
	link     = &quot;Gauss (unit)&quot;,
    },
    [&quot;T&quot;] = {
	_name1   = &quot;tesla&quot;,
	_symbol  = &quot;T&quot;,
	utype    = &quot;magnetic field strength&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;G&quot;,
	link     = &quot;Tesla (unit)&quot;,
    },
    [&quot;A/m&quot;] = {
	name1    = &quot;ampere per metre&quot;,
	name1_us = &quot;ampere per meter&quot;,
	name2    = &quot;amperes per metre&quot;,
	name2_us = &quot;amperes per meter&quot;,
	symbol   = &quot;A/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1,
	default  = &quot;Oe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;kA/m&quot;] = {
	name1    = &quot;kiloampere per metre&quot;,
	name1_us = &quot;kiloampere per meter&quot;,
	name2    = &quot;kiloamperes per metre&quot;,
	name2_us = &quot;kiloamperes per meter&quot;,
	symbol   = &quot;kA/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1000,
	default  = &quot;kOe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;MA/m&quot;] = {
	name1    = &quot;megaampere per metre&quot;,
	name1_us = &quot;megaampere per meter&quot;,
	name2    = &quot;megaamperes per metre&quot;,
	name2_us = &quot;megaamperes per meter&quot;,
	symbol   = &quot;MA/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1e6,
	default  = &quot;kOe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;Oe&quot;] = {
	_name1   = &quot;oersted&quot;,
	_symbol  = &quot;Oe&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 79.5774715,
	prefixes = 1,
	default  = &quot;kA/m&quot;,
	link     = &quot;Oersted&quot;,
    },
    [&quot;-Lcwt&quot;] = {
	name1    = &quot;hundredweight&quot;,
	name2    = &quot;hundredweight&quot;,
	symbol   = &quot;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb&quot;,
    },
    [&quot;-Scwt&quot;] = {
	name1    = &quot;hundredweight&quot;,
	name2    = &quot;hundredweight&quot;,
	symbol   = &quot;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb&quot;,
    },
    [&quot;-ST&quot;] = {
	name1    = &quot;short ton&quot;,
	symbol   = &quot;ST&quot;,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;carat&quot;] = {
	symbol   = &quot;carat&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.0002,
	default  = &quot;g&quot;,
	link     = &quot;Carat (mass)&quot;,
    },
    [&quot;drachm&quot;] = {
	name1_us = &quot;dram&quot;,
	symbol   = &quot;drachm&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.001771845195,
	default  = &quot;g&quot;,
	link     = &quot;Dram (unit)&quot;,
    },
    [&quot;dram&quot;] = {
	target   = &quot;drachm&quot;,
    },
    [&quot;dwt&quot;] = {
	name1    = &quot;pennyweight&quot;,
	symbol   = &quot;dwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.00155517384,
	default  = &quot;oz g&quot;,
    },
    [&quot;DWton&quot;] = {
	symbol   = &quot;deadweight ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;DWtonne&quot;,
	link     = &quot;Tonnage&quot;,
    },
    [&quot;DWtonne&quot;] = {
	symbol   = &quot;deadweight tonne&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;DWton&quot;,
	link     = &quot;Tonnage&quot;,
    },
    [&quot;g&quot;] = {
	_name1   = &quot;gram&quot;,
	_symbol  = &quot;g&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;oz&quot;,
	link     = &quot;Gram&quot;,
    },
    [&quot;gr&quot;] = {
	name1    = &quot;grain&quot;,
	symbol   = &quot;gr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.00006479891,
	default  = &quot;g&quot;,
	link     = &quot;Grain (unit)&quot;,
    },
    [&quot;Gt&quot;] = {
	name1    = &quot;gigatonne&quot;,
	symbol   = &quot;Gt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;impgalh2o&quot;] = {
	name1    = &quot;imperial gallon of water&quot;,
	name2    = &quot;imperial gallons of water&quot;,
	symbol   = &quot;imp&amp;nbsp;gal H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;mass&quot;,
	scale    = 4.5359236999999499,
	default  = &quot;lb kg&quot;,
	link     = &quot;Imperial gallon&quot;,
    },
    [&quot;kt&quot;] = {
	name1    = &quot;kilotonne&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;lb&quot;] = {
	name1    = &quot;pound&quot;,
	symbol   = &quot;lb&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.45359237,
	exception= &quot;integer_more_precision&quot;,
	default  = &quot;kg&quot;,
	subdivs  = { [&quot;oz&quot;] = { 16, default = &quot;kg&quot; } },
	link     = &quot;Pound (mass)&quot;,
    },
    [&quot;Lcwt&quot;] = {
	name1    = &quot;long hundredweight&quot;,
	name2    = &quot;long hundredweight&quot;,
	symbol   = &quot;Lcwt&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb&quot;,
	subdivs  = { [&quot;qtr&quot;] = { 4, default = &quot;kg&quot; }, [&quot;st&quot;] = { 8, default = &quot;kg&quot; } },
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;long cwt&quot;] = {
	name1    = &quot;long hundredweight&quot;,
	name2    = &quot;long hundredweight&quot;,
	symbol   = &quot;long&amp;nbsp;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;qtr&quot;] = { 4, default = &quot;kg&quot; } },
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;long qtr&quot;] = {
	name1    = &quot;long quarter&quot;,
	symbol   = &quot;long&amp;nbsp;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 12.70058636,
	default  = &quot;lb kg&quot;,
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;LT&quot;] = {
	symbol   = &quot;long ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Lcwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Lcwt&quot; } },
    },
    [&quot;lt&quot;] = {
	name1    = &quot;long ton&quot;,
	symbol   = &quot;LT&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Lcwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Lcwt&quot; } },
    },
    [&quot;metric ton&quot;] = {
	symbol   = &quot;metric ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;long ton&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;MT&quot;] = {
	name1    = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;Mt&quot;] = {
	name1    = &quot;megatonne&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;oz&quot;] = {
	name1    = &quot;ounce&quot;,
	symbol   = &quot;oz&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.028349523125,
	default  = &quot;g&quot;,
    },
    [&quot;ozt&quot;] = {
	name1    = &quot;troy ounce&quot;,
	symbol   = &quot;ozt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.0311034768,
	default  = &quot;oz g&quot;,
    },
    [&quot;pdr&quot;] = {
	name1    = &quot;pounder&quot;,
	symbol   = &quot;pdr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.45359237,
	default  = &quot;kg&quot;,
	link     = &quot;Pound (mass)&quot;,
    },
    [&quot;qtr&quot;] = {
	name1    = &quot;quarter&quot;,
	symbol   = &quot;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 12.70058636,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;lb&quot;] = { 28, default = &quot;kg&quot; } },
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;Scwt&quot;] = {
	name1    = &quot;short hundredweight&quot;,
	name2    = &quot;short hundredweight&quot;,
	symbol   = &quot;Scwt&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb&quot;,
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;short cwt&quot;] = {
	name1    = &quot;short hundredweight&quot;,
	name2    = &quot;short hundredweight&quot;,
	symbol   = &quot;short&amp;nbsp;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb kg&quot;,
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;short qtr&quot;] = {
	name1    = &quot;short quarter&quot;,
	symbol   = &quot;short&amp;nbsp;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 11.33980925,
	default  = &quot;lb kg&quot;,
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;ST&quot;] = {
	symbol   = &quot;short ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Scwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Scwt&quot; } },
    },
    [&quot;shtn&quot;] = {
	name1    = &quot;short ton&quot;,
	symbol   = &quot;sh&amp;nbsp;tn&quot;,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;shton&quot;] = {
	symbol   = &quot;ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;solar mass&quot;] = {
	name1    = &quot;solar mass&quot;,
	name2    = &quot;solar masses&quot;,
	symbol   = &quot;''M''&lt;sub&gt;&lt;/sub&gt;&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1.98855e30,
	default  = &quot;kg&quot;,
    },
    [&quot;st&quot;] = {
	name1    = &quot;stone&quot;,
	name2    = &quot;stone&quot;,
	symbol   = &quot;st&quot;,
	utype    = &quot;mass&quot;,
	scale    = 6.35029318,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;lb&quot;] = { 14, default = &quot;kg lb&quot; } },
	link     = &quot;Stone (unit)&quot;,
    },
    [&quot;t&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;LT ST&quot;,
    },
    [&quot;tonne&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;shton&quot;,
    },
    [&quot;troy pound&quot;] = {
	symbol   = &quot;troy pound&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.3732417216,
	default  = &quot;lb kg&quot;,
	link     = &quot;Troy weight&quot;,
    },
    [&quot;usgalh2o&quot;] = {
	name1    = &quot;US gallon of water&quot;,
	name1_us = &quot;U.S. gallon of water&quot;,
	name2    = &quot;US gallons of water&quot;,
	name2_us = &quot;U.S. gallons of water&quot;,
	symbol   = &quot;US&amp;nbsp;gal H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;mass&quot;,
	scale    = 3.7776215836051126,
	default  = &quot;lb kg&quot;,
	link     = &quot;United States customary units#Fluid volume&quot;,
    },
    [&quot;viss&quot;] = {
	name2    = &quot;viss&quot;,
	symbol   = &quot;viss&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1.632932532,
	default  = &quot;kg&quot;,
	link     = &quot;Burmese units of measurement#mass&quot;,
    },
    [&quot;billion tonne&quot;] = {
	target   = &quot;e9t&quot;,
    },
    [&quot;kilogram&quot;] = {
	target   = &quot;kg&quot;,
    },
    [&quot;kilotonne&quot;] = {
	target   = &quot;kt&quot;,
    },
    [&quot;lbs&quot;] = {
	target   = &quot;lb&quot;,
    },
    [&quot;lbt&quot;] = {
	target   = &quot;troy pound&quot;,
    },
    [&quot;lcwt&quot;] = {
	target   = &quot;Lcwt&quot;,
    },
    [&quot;long ton&quot;] = {
	target   = &quot;LT&quot;,
    },
    [&quot;mcg&quot;] = {
	target   = &quot;g&quot;,
    },
    [&quot;million tonne&quot;] = {
	target   = &quot;e6t&quot;,
    },
    [&quot;scwt&quot;] = {
	target   = &quot;Scwt&quot;,
    },
    [&quot;short ton&quot;] = {
	target   = &quot;ST&quot;,
    },
    [&quot;stone&quot;] = {
	target   = &quot;st&quot;,
    },
    [&quot;thousand tonne&quot;] = {
	target   = &quot;e3t&quot;,
    },
    [&quot;tonnes&quot;] = {
	target   = &quot;t&quot;,
    },
    [&quot;kg/kW&quot;] = {
	name1    = &quot;kilogram per kilowatt&quot;,
	name2    = &quot;kilograms per kilowatt&quot;,
	symbol   = &quot;kg/kW&quot;,
	utype    = &quot;mass per unit power&quot;,
	scale    = 0.001,
	default  = &quot;lb/hp&quot;,
	link     = &quot;Kilowatt&quot;,
    },
    [&quot;lb/hp&quot;] = {
	name1    = &quot;pound per horsepower&quot;,
	name2    = &quot;pounds per horsepower&quot;,
	symbol   = &quot;lb/hp&quot;,
	utype    = &quot;mass per unit power&quot;,
	scale    = 0.00060827738784176115,
	default  = &quot;kg/kW&quot;,
	link     = &quot;Horsepower&quot;,
    },
    [&quot;kg/h&quot;] = {
	per      = { &quot;kg&quot;, &quot;h&quot; },
	utype    = &quot;mass per unit time&quot;,
	default  = &quot;lb/h&quot;,
    },
    [&quot;lb/h&quot;] = {
	per      = { &quot;lb&quot;, &quot;h&quot; },
	utype    = &quot;mass per unit time&quot;,
	default  = &quot;kg/h&quot;,
    },
    [&quot;g-mol/d&quot;] = {
	name1    = &quot;gram-mole per day&quot;,
	name2    = &quot;gram-moles per day&quot;,
	symbol   = &quot;g&amp;#8209;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/h&quot;] = {
	name1    = &quot;gram-mole per hour&quot;,
	name2    = &quot;gram-moles per hour&quot;,
	symbol   = &quot;g&amp;#8209;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/min&quot;] = {
	name1    = &quot;gram-mole per minute&quot;,
	name2    = &quot;gram-moles per minute&quot;,
	symbol   = &quot;g&amp;#8209;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;g-mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/s&quot;] = {
	name1    = &quot;gram-mole per second&quot;,
	name2    = &quot;gram-moles per second&quot;,
	symbol   = &quot;g&amp;#8209;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lb-mol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/d&quot;] = {
	name1    = &quot;gram-mole per day&quot;,
	name2    = &quot;gram-moles per day&quot;,
	symbol   = &quot;gmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/h&quot;] = {
	name1    = &quot;gram-mole per hour&quot;,
	name2    = &quot;gram-moles per hour&quot;,
	symbol   = &quot;gmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/min&quot;] = {
	name1    = &quot;gram-mole per minute&quot;,
	name2    = &quot;gram-moles per minute&quot;,
	symbol   = &quot;gmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;gmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/s&quot;] = {
	name1    = &quot;gram-mole per second&quot;,
	name2    = &quot;gram-moles per second&quot;,
	symbol   = &quot;gmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lbmol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/d&quot;] = {
	name1    = &quot;kilomole per day&quot;,
	name2    = &quot;kilomoles per day&quot;,
	symbol   = &quot;kmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.011574074074074073,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/h&quot;] = {
	name1    = &quot;kilomole per hour&quot;,
	name2    = &quot;kilomoles per hour&quot;,
	symbol   = &quot;kmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/min&quot;] = {
	name1    = &quot;kilomole per minute&quot;,
	name2    = &quot;kilomoles per minute&quot;,
	symbol   = &quot;kmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 16.666666666666668,
	default  = &quot;mol/s&quot;,
	link     = &quot;Kilomole (unit)&quot;,
    },
    [&quot;kmol/s&quot;] = {
	name1    = &quot;kilomole per second&quot;,
	name2    = &quot;kilomoles per second&quot;,
	symbol   = &quot;kmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1000,
	default  = &quot;lb-mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;lb-mol/d&quot;] = {
	name1    = &quot;pound-mole per day&quot;,
	name2    = &quot;pound-moles per day&quot;,
	symbol   = &quot;lb&amp;#8209;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.0052499116898148141,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/h&quot;] = {
	name1    = &quot;pound-mole per hour&quot;,
	name2    = &quot;pound-moles per hour&quot;,
	symbol   = &quot;lb&amp;#8209;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.12599788055555555,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/min&quot;] = {
	name1    = &quot;pound-mole per minute&quot;,
	name2    = &quot;pound-moles per minute&quot;,
	symbol   = &quot;lb&amp;#8209;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 7.5598728333333334,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/s&quot;] = {
	name1    = &quot;pound-mole per second&quot;,
	name2    = &quot;pound-moles per second&quot;,
	symbol   = &quot;lb&amp;#8209;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 453.59237,
	default  = &quot;kmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/d&quot;] = {
	name1    = &quot;pound-mole per day&quot;,
	name2    = &quot;pound-moles per day&quot;,
	symbol   = &quot;lbmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.0052499116898148141,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/h&quot;] = {
	name1    = &quot;pound-mole per hour&quot;,
	name2    = &quot;pound-moles per hour&quot;,
	symbol   = &quot;lbmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.12599788055555555,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/min&quot;] = {
	name1    = &quot;pound-mole per minute&quot;,
	name2    = &quot;pound-moles per minute&quot;,
	symbol   = &quot;lbmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 7.5598728333333334,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/s&quot;] = {
	name1    = &quot;pound-mole per second&quot;,
	name2    = &quot;pound-moles per second&quot;,
	symbol   = &quot;lbmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 453.59237,
	default  = &quot;kmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;mmol/s&quot;] = {
	name1    = &quot;millimole per second&quot;,
	name2    = &quot;millimoles per second&quot;,
	symbol   = &quot;mmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.001,
	default  = &quot;lb-mol/d&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/d&quot;] = {
	name1    = &quot;mole per day&quot;,
	name2    = &quot;moles per day&quot;,
	symbol   = &quot;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/h&quot;] = {
	name1    = &quot;mole per hour&quot;,
	name2    = &quot;moles per hour&quot;,
	symbol   = &quot;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/min&quot;] = {
	name1    = &quot;mole per minute&quot;,
	name2    = &quot;moles per minute&quot;,
	symbol   = &quot;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/s&quot;] = {
	name1    = &quot;mole per second&quot;,
	name2    = &quot;moles per second&quot;,
	symbol   = &quot;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lb-mol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/s&quot;] = {
	name1    = &quot;micromole per second&quot;,
	name2    = &quot;micromoles per second&quot;,
	symbol   = &quot;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.000001,
	default  = &quot;lb-mol/d&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;umol/s&quot;] = {
	target   = &quot;mol/s&quot;,
    },
    [&quot;mol/s&quot;] = {
	target   = &quot;mol/s&quot;,
    },
    [&quot;/acre&quot;] = {
	name1    = &quot;per acre&quot;,
	name2    = &quot;per acre&quot;,
	symbol   = &quot;/acre&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 0.00024710538146716532,
	default  = &quot;/ha&quot;,
	link     = &quot;Acre&quot;,
    },
    [&quot;/ha&quot;] = {
	name1    = &quot;per hectare&quot;,
	name2    = &quot;per hectare&quot;,
	symbol   = &quot;/ha&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 100e-6,
	default  = &quot;/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;/sqcm&quot;] = {
	name1    = &quot;per square centimetre&quot;,
	name1_us = &quot;per square centimeter&quot;,
	name2    = &quot;per square centimetre&quot;,
	name2_us = &quot;per square centimeter&quot;,
	symbol   = &quot;/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e4,
	default  = &quot;/sqin&quot;,
	link     = &quot;Square centimetre&quot;,
    },
    [&quot;/sqin&quot;] = {
	name1    = &quot;per square inch&quot;,
	name2    = &quot;per square inch&quot;,
	symbol   = &quot;/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1550.0031000062002,
	default  = &quot;/sqcm&quot;,
	link     = &quot;Square inch&quot;,
    },
    [&quot;/sqkm&quot;] = {
	name1    = &quot;per square kilometre&quot;,
	name1_us = &quot;per square kilometer&quot;,
	name2    = &quot;per square kilometre&quot;,
	name2_us = &quot;per square kilometer&quot;,
	symbol   = &quot;/km&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e-6,
	default  = &quot;/sqmi&quot;,
	link     = &quot;Square kilometre&quot;,
    },
    [&quot;/sqmi&quot;] = {
	name1    = &quot;per square mile&quot;,
	name2    = &quot;per square mile&quot;,
	symbol   = &quot;/sq&amp;nbsp;mi&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 3.8610215854244582e-7,
	default  = &quot;/sqkm&quot;,
	link     = &quot;Square mile&quot;,
    },
    [&quot;PD/acre&quot;] = {
	name1    = &quot;inhabitant per acre&quot;,
	name2    = &quot;inhabitants per acre&quot;,
	symbol   = &quot;/acre&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 0.00024710538146716532,
	default  = &quot;PD/ha&quot;,
	link     = &quot;Acre&quot;,
    },
    [&quot;PD/ha&quot;] = {
	name1    = &quot;inhabitant per hectare&quot;,
	name2    = &quot;inhabitants per hectare&quot;,
	symbol   = &quot;/ha&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 100e-6,
	default  = &quot;PD/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;PD/sqkm&quot;] = {
	name1    = &quot;inhabitant per square kilometre&quot;,
	name1_us = &quot;inhabitant per square kilometer&quot;,
	name2    = &quot;inhabitants per square kilometre&quot;,
	name2_us = &quot;inhabitants per square kilometer&quot;,
	symbol   = &quot;/km&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e-6,
	default  = &quot;PD/sqmi&quot;,
	link     = &quot;Square kilometre&quot;,
    },
    [&quot;PD/sqmi&quot;] = {
	name1    = &quot;inhabitant per square mile&quot;,
	name2    = &quot;inhabitants per square mile&quot;,
	symbol   = &quot;/sq&amp;nbsp;mi&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 3.8610215854244582e-7,
	default  = &quot;PD/sqkm&quot;,
	link     = &quot;Square mile&quot;,
    },
    [&quot;/cm2&quot;] = {
	target   = &quot;/sqcm&quot;,
    },
    [&quot;/in2&quot;] = {
	target   = &quot;/sqin&quot;,
    },
    [&quot;/km2&quot;] = {
	target   = &quot;/sqkm&quot;,
    },
    [&quot;pd/acre&quot;] = {
	target   = &quot;PD/acre&quot;,
    },
    [&quot;pd/ha&quot;] = {
	target   = &quot;PD/ha&quot;,
    },
    [&quot;PD/km2&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/km2&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;PD/km&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/sqkm&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/sqmi&quot;] = {
	target   = &quot;PD/sqmi&quot;,
    },
    [&quot;/l&quot;] = {
	name1    = &quot;per litre&quot;,
	name1_us = &quot;per liter&quot;,
	name2    = &quot;per litre&quot;,
	name2_us = &quot;per liter&quot;,
	symbol   = &quot;/l&quot;,
	utype    = &quot;per unit volume&quot;,
	scale    = 1000,
	default  = &quot;/usgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;/USgal&quot;] = {
	name1    = &quot;per gallon&quot;,
	name2    = &quot;per gallon&quot;,
	symbol   = &quot;/gal&quot;,
	utype    = &quot;per unit volume&quot;,
	scale    = 264.172052,
	default  = &quot;/l&quot;,
	link     = &quot;US gallon&quot;,
	customary= 2,
    },
    [&quot;/usgal&quot;] = {
	target   = &quot;/USgal&quot;,
    },
    [&quot;bhp&quot;] = {
	name1    = &quot;brake horsepower&quot;,
	name2    = &quot;brake horsepower&quot;,
	symbol   = &quot;bhp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Brake horsepower&quot;,
    },
    [&quot;Cal/d&quot;] = {
	name1    = &quot;large calorie per day&quot;,
	name2    = &quot;large calories per day&quot;,
	symbol   = &quot;Cal/d&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.048425925925925928,
	default  = &quot;kJ/d&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal/h&quot;] = {
	name1    = &quot;large calorie per hour&quot;,
	name2    = &quot;large calories per hour&quot;,
	symbol   = &quot;Cal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 1.1622222222222223,
	default  = &quot;kJ/h&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal/h&quot;] = {
	name1    = &quot;calorie per hour&quot;,
	name2    = &quot;calories per hour&quot;,
	symbol   = &quot;cal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.0011622222222222223,
	default  = &quot;W&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;CV&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;CV&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;hk&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;hk&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;hp&quot;] = {
	name1    = &quot;horsepower&quot;,
	name2    = &quot;horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
    },
    [&quot;hp-electric&quot;] = {
	name1    = &quot;electric horsepower&quot;,
	name2    = &quot;electric horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 746,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Electrical horsepower&quot;,
    },
    [&quot;hp-electrical&quot;] = {
	name1    = &quot;electrical horsepower&quot;,
	name2    = &quot;electrical horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 746,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Electrical horsepower&quot;,
    },
    [&quot;hp-metric&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;ihp&quot;] = {
	name1    = &quot;indicated horsepower&quot;,
	name2    = &quot;indicated horsepower&quot;,
	symbol   = &quot;ihp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Indicated horsepower&quot;,
    },
    [&quot;kcal/h&quot;] = {
	name1    = &quot;kilocalorie per hour&quot;,
	name2    = &quot;kilocalories per hour&quot;,
	symbol   = &quot;kcal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 1.1622222222222223,
	default  = &quot;kW&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kJ/d&quot;] = {
	name1    = &quot;kilojoule per day&quot;,
	name2    = &quot;kilojoules per day&quot;,
	symbol   = &quot;kJ/d&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.011574074074074073,
	default  = &quot;Cal/d&quot;,
	link     = &quot;Kilojoule&quot;,
    },
    [&quot;kJ/h&quot;] = {
	name1    = &quot;kilojoule per hour&quot;,
	name2    = &quot;kilojoules per hour&quot;,
	symbol   = &quot;kJ/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;W&quot;,
	link     = &quot;Kilojoule&quot;,
    },
    [&quot;PS&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;PS&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;shp&quot;] = {
	name1    = &quot;shaft horsepower&quot;,
	name2    = &quot;shaft horsepower&quot;,
	symbol   = &quot;shp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Shaft horsepower&quot;,
    },
    [&quot;W&quot;] = {
	_name1   = &quot;watt&quot;,
	_symbol  = &quot;W&quot;,
	utype    = &quot;power&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;hp&quot;,
	link     = &quot;Watt&quot;,
    },
    [&quot;BTU/h&quot;] = {
	per      = { &quot;BTU&quot;, &quot;h&quot; },
	utype    = &quot;power&quot;,
	default  = &quot;W&quot;,
    },
    [&quot;Btu/h&quot;] = {
	per      = { &quot;Btu&quot;, &quot;h&quot; },
	utype    = &quot;power&quot;,
	default  = &quot;W&quot;,
    },
    [&quot;BHP&quot;] = {
	target   = &quot;bhp&quot;,
    },
    [&quot;btu/h&quot;] = {
	target   = &quot;BTU/h&quot;,
    },
    [&quot;HP&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;Hp&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;hp-mechanical&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;IHP&quot;] = {
	target   = &quot;ihp&quot;,
    },
    [&quot;SHP&quot;] = {
	target   = &quot;shp&quot;,
    },
    [&quot;whp&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;hp/lb&quot;] = {
	name1    = &quot;horsepower per pound&quot;,
	name2    = &quot;horsepower per pound&quot;,
	symbol   = &quot;hp/lb&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1643.986806,
	default  = &quot;kW/kg&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/LT&quot;] = {
	name1    = &quot;horsepower per long ton&quot;,
	name2    = &quot;horsepower per long ton&quot;,
	symbol   = &quot;hp/LT&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.73392268125000004,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/ST&quot;] = {
	name1    = &quot;horsepower per short ton&quot;,
	name2    = &quot;horsepower per short ton&quot;,
	symbol   = &quot;hp/ST&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.821993403,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/t&quot;] = {
	name1    = &quot;horsepower per tonne&quot;,
	name2    = &quot;horsepower per tonne&quot;,
	symbol   = &quot;hp/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.74569987158227022,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;kW/kg&quot;] = {
	name1    = &quot;kilowatt per kilogram&quot;,
	name2    = &quot;kilowatts per kilogram&quot;,
	symbol   = &quot;kW/kg&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1000,
	default  = &quot;hp/lb&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;kW/t&quot;] = {
	name1    = &quot;kilowatt per tonne&quot;,
	name2    = &quot;kilowatts per tonne&quot;,
	symbol   = &quot;kW/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1,
	default  = &quot;PS/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;PS/t&quot;] = {
	name1    = &quot;metric horsepower per tonne&quot;,
	name2    = &quot;metric horsepower per tonne&quot;,
	symbol   = &quot;PS/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.73549875,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;shp/lb&quot;] = {
	name1    = &quot;shaft horsepower per pound&quot;,
	name2    = &quot;shaft horsepower per pound&quot;,
	symbol   = &quot;shp/lb&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1643.986806,
	default  = &quot;kW/kg&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/tonne&quot;] = {
	target   = &quot;hp/t&quot;,
	symbol   = &quot;hp/tonne&quot;,
	default  = &quot;kW/tonne&quot;,
    },
    [&quot;kW/tonne&quot;] = {
	target   = &quot;kW/t&quot;,
	symbol   = &quot;kW/tonne&quot;,
    },
    [&quot;-lb/in2&quot;] = {
	name1    = &quot;pound per square inch&quot;,
	name2    = &quot;pounds per square inch&quot;,
	symbol   = &quot;lb/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa kgf/cm2&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;atm&quot;] = {
	name1    = &quot;standard atmosphere&quot;,
	symbol   = &quot;atm&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 101325,
	default  = &quot;kPa&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Ba&quot;] = {
	name1    = &quot;barye&quot;,
	symbol   = &quot;Ba&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 0.1,
	default  = &quot;Pa&quot;,
    },
    [&quot;bar&quot;] = {
	symbol   = &quot;bar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100000,
	default  = &quot;kPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;dbar&quot;] = {
	name1    = &quot;decibar&quot;,
	symbol   = &quot;dbar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 10000,
	default  = &quot;kPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;inHg&quot;] = {
	name1    = &quot;inch of mercury&quot;,
	name2    = &quot;inches of mercury&quot;,
	symbol   = &quot;inHg&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 3386.388640341,
	default  = &quot;kPa&quot;,
    },
    [&quot;kBa&quot;] = {
	name1    = &quot;kilobarye&quot;,
	symbol   = &quot;kBa&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Barye&quot;,
    },
    [&quot;kg-f/cm2&quot;] = {
	name1    = &quot;kilogram-force per square centimetre&quot;,
	name1_us = &quot;kilogram-force per square centimeter&quot;,
	name2    = &quot;kilograms-force per square centimetre&quot;,
	name2_us = &quot;kilograms-force per square centimeter&quot;,
	symbol   = &quot;kg&lt;sub&gt;f&lt;/sub&gt;/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;kg/cm2&quot;] = {
	name1    = &quot;kilogram per square centimetre&quot;,
	name1_us = &quot;kilogram per square centimeter&quot;,
	name2    = &quot;kilograms per square centimetre&quot;,
	name2_us = &quot;kilograms per square centimeter&quot;,
	symbol   = &quot;kg/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;kgf/cm2&quot;] = {
	name1    = &quot;kilogram-force per square centimetre&quot;,
	name1_us = &quot;kilogram-force per square centimeter&quot;,
	name2    = &quot;kilograms-force per square centimetre&quot;,
	name2_us = &quot;kilograms-force per square centimeter&quot;,
	symbol   = &quot;kgf/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;ksi&quot;] = {
	name1    = &quot;kilopound per square inch&quot;,
	name2    = &quot;kilopounds per square inch&quot;,
	symbol   = &quot;ksi&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894757.2931683613,
	default  = &quot;MPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;lbf/in2&quot;] = {
	name1    = &quot;pound-force per square inch&quot;,
	name2    = &quot;pounds-force per square inch&quot;,
	symbol   = &quot;lbf/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa kgf/cm2&quot;,
	link     = &quot;Pounds-force per square inch&quot;,
    },
    [&quot;mb&quot;] = {
	name1    = &quot;millibar&quot;,
	symbol   = &quot;mb&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;mbar&quot;] = {
	name1    = &quot;millibar&quot;,
	symbol   = &quot;mbar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;mmHg&quot;] = {
	name1    = &quot;millimetre of mercury&quot;,
	name1_us = &quot;millimeter of mercury&quot;,
	name2    = &quot;millimetres of mercury&quot;,
	name2_us = &quot;millimeters of mercury&quot;,
	symbol   = &quot;mmHg&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 133.322387415,
	default  = &quot;kPa&quot;,
	link     = &quot;Millimeter of mercury&quot;,
    },
    [&quot;Pa&quot;] = {
	_name1   = &quot;pascal&quot;,
	_symbol  = &quot;Pa&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;psi&quot;,
	link     = &quot;Pascal (unit)&quot;,
    },
    [&quot;psf&quot;] = {
	name1    = &quot;pound per square foot&quot;,
	name2    = &quot;pounds per square foot&quot;,
	symbol   = &quot;psf&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 47.880258980335839,
	default  = &quot;kPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;psi&quot;] = {
	name1    = &quot;pound per square inch&quot;,
	name2    = &quot;pounds per square inch&quot;,
	symbol   = &quot;psi&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;Torr&quot;] = {
	name1    = &quot;torr&quot;,
	symbol   = &quot;Torr&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 133.32236842105263,
	default  = &quot;kPa&quot;,
    },
    [&quot;N/cm2&quot;] = {
	per      = { &quot;N&quot;, &quot;cm2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;psi&quot;,
    },
    [&quot;N/m2&quot;] = {
	per      = { &quot;N&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;psi&quot;,
    },
    [&quot;g/cm2&quot;] = {
	per      = { &quot;g&quot;, &quot;cm2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;g/m2&quot;] = {
	per      = { &quot;g&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;kg/ha&quot;] = {
	per      = { &quot;kg&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;kg/m2&quot;] = {
	per      = { &quot;kg&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/1000sqft&quot;] = {
	per      = { &quot;lb&quot;, &quot;1000sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/acre&quot;] = {
	per      = { &quot;lb&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/sqft&quot;] = {
	per      = { &quot;lb&quot;, &quot;sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/sqyd&quot;] = {
	per      = { &quot;lb&quot;, &quot;sqyd&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;LT/acre&quot;] = {
	per      = { &quot;LT&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;t/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;MT/ha&quot;] = {
	per      = { &quot;MT&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;LT/acre ST/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;oz/sqft&quot;] = {
	per      = { &quot;oz&quot;, &quot;sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;oz/sqyd&quot;] = {
	per      = { &quot;oz&quot;, &quot;sqyd&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;ST/acre&quot;] = {
	per      = { &quot;ST&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;t/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;t/ha&quot;] = {
	per      = { &quot;t&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;LT/acre ST/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;tonne/acre&quot;] = {
	per      = { &quot;tonne&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;tonne/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;tonne/ha&quot;] = {
	per      = { &quot;tonne&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;tonne/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;kgfpsqcm&quot;] = {
	target   = &quot;kgf/cm2&quot;,
    },
    [&quot;kgpsqcm&quot;] = {
	target   = &quot;kg/cm2&quot;,
    },
    [&quot;kN/m2&quot;] = {
	target   = &quot;kPa&quot;,
    },
    [&quot;lb/in2&quot;] = {
	target   = &quot;lbf/in2&quot;,
    },
    [&quot;torr&quot;] = {
	target   = &quot;Torr&quot;,
    },
    [&quot;Bq&quot;] = {
	_name1   = &quot;becquerel&quot;,
	_symbol  = &quot;Bq&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;pCi&quot;,
	link     = &quot;Becquerel&quot;,
    },
    [&quot;Ci&quot;] = {
	_name1   = &quot;curie&quot;,
	_symbol  = &quot;Ci&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 3.7e10,
	prefixes = 1,
	default  = &quot;GBq&quot;,
	link     = &quot;Curie&quot;,
    },
    [&quot;Rd&quot;] = {
	_name1   = &quot;rutherford&quot;,
	_symbol  = &quot;Rd&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 1e6,
	prefixes = 1,
	default  = &quot;MBq&quot;,
	link     = &quot;Rutherford (unit)&quot;,
    },
    [&quot;cm/h&quot;] = {
	name1    = &quot;centimetre per hour&quot;,
	name1_us = &quot;centimeter per hour&quot;,
	name2    = &quot;centimetres per hour&quot;,
	name2_us = &quot;centimeters per hour&quot;,
	symbol   = &quot;cm/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.7777777777777775e-6,
	default  = &quot;in/h&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;cm/s&quot;] = {
	name1    = &quot;centimetre per second&quot;,
	name1_us = &quot;centimeter per second&quot;,
	name2    = &quot;centimetres per second&quot;,
	name2_us = &quot;centimeters per second&quot;,
	symbol   = &quot;cm/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.01,
	default  = &quot;in/s&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;cm/year&quot;] = {
	name1    = &quot;centimetre per year&quot;,
	name1_us = &quot;centimeter per year&quot;,
	name2    = &quot;centimetres per year&quot;,
	name2_us = &quot;centimeters per year&quot;,
	symbol   = &quot;cm/year&quot;,
	utype    = &quot;speed&quot;,
	scale    = 3.168873850681143e-10,
	default  = &quot;in/year&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;foot/s&quot;] = {
	name1    = &quot;foot per second&quot;,
	name2    = &quot;foot per second&quot;,
	symbol   = &quot;ft/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.3048,
	default  = &quot;m/s&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;ft/min&quot;] = {
	name1    = &quot;foot per minute&quot;,
	name2    = &quot;feet per minute&quot;,
	symbol   = &quot;ft/min&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.00508,
	default  = &quot;m/min&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;ft/s&quot;] = {
	name1    = &quot;foot per second&quot;,
	name2    = &quot;feet per second&quot;,
	symbol   = &quot;ft/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.3048,
	default  = &quot;m/s&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;furlong per fortnight&quot;] = {
	name2    = &quot;furlongs per fortnight&quot;,
	symbol   = &quot;furlong per fortnight&quot;,
	usename  = 1,
	utype    = &quot;speed&quot;,
	scale    = 0.00016630952380952381,
	default  = &quot;km/h mph&quot;,
	link     = &quot;FFF System&quot;,
    },
    [&quot;in/h&quot;] = {
	name1    = &quot;inch per hour&quot;,
	name2    = &quot;inches per hour&quot;,
	symbol   = &quot;in/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 7.0555555555555559e-6,
	default  = &quot;cm/h&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;in/s&quot;] = {
	name1    = &quot;inch per second&quot;,
	name2    = &quot;inches per second&quot;,
	symbol   = &quot;in/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.0254,
	default  = &quot;cm/s&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;in/year&quot;] = {
	name1    = &quot;inch per year&quot;,
	name2    = &quot;inches per year&quot;,
	symbol   = &quot;in/year&quot;,
	utype    = &quot;speed&quot;,
	scale    = 8.0489395807301024e-10,
	default  = &quot;cm/year&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;isp&quot;] = {
	name1    = &quot;second&quot;,
	symbol   = &quot;s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 9.80665,
	default  = &quot;km/s&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;km/d&quot;] = {
	name1    = &quot;kilometre per day&quot;,
	name1_us = &quot;kilometer per day&quot;,
	name2    = &quot;kilometres per day&quot;,
	name2_us = &quot;kilometers per day&quot;,
	symbol   = &quot;km/d&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1.1574074074074074e-2,
	default  = &quot;mi/d&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;km/h&quot;] = {
	name1    = &quot;kilometre per hour&quot;,
	name1_us = &quot;kilometer per hour&quot;,
	name2    = &quot;kilometres per hour&quot;,
	name2_us = &quot;kilometers per hour&quot;,
	symbol   = &quot;km/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mph&quot;,
	link     = &quot;Kilometres per hour&quot;,
    },
    [&quot;km/s&quot;] = {
	name1    = &quot;kilometre per second&quot;,
	name1_us = &quot;kilometer per second&quot;,
	name2    = &quot;kilometres per second&quot;,
	name2_us = &quot;kilometers per second&quot;,
	symbol   = &quot;km/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1000,
	default  = &quot;mi/s&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;kn&quot;] = {
	name1    = &quot;knot&quot;,
	symbol   = &quot;kn&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.51444444444444448,
	default  = &quot;km/h mph&quot;,
	link     = &quot;Knot (unit)&quot;,
    },
    [&quot;kNs/kg&quot;] = {
	name2    = &quot;kN&amp;#8209;s/kg&quot;,
	symbol   = &quot;kN&amp;#8209;s/kg&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1000,
	default  = &quot;isp&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;m/min&quot;] = {
	name1    = &quot;metre per minute&quot;,
	name1_us = &quot;meter per minute&quot;,
	name2    = &quot;metres per minute&quot;,
	name2_us = &quot;meters per minute&quot;,
	symbol   = &quot;m/min&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;ft/min&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;m/s&quot;] = {
	name1    = &quot;metre per second&quot;,
	name1_us = &quot;meter per second&quot;,
	name2    = &quot;metres per second&quot;,
	name2_us = &quot;meters per second&quot;,
	symbol   = &quot;m/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1,
	default  = &quot;ft/s&quot;,
    },
    [&quot;Mach&quot;] = {
	name2    = &quot;Mach&quot;,
	symbol   = &quot;Mach&quot;,
	utype    = &quot;speed&quot;,
	builtin  = &quot;mach&quot;,
	scale    = 0,
	iscomplex= true,
	default  = &quot;km/h mph&quot;,
	link     = &quot;Mach number&quot;,
    },
    [&quot;mi/d&quot;] = {
	name1    = &quot;mile per day&quot;,
	name2    = &quot;miles per day&quot;,
	symbol   = &quot;mi/d&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1.8626666666666667e-2,
	default  = &quot;km/d&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;mi/s&quot;] = {
	name1    = &quot;mile per second&quot;,
	name2    = &quot;miles per second&quot;,
	symbol   = &quot;mi/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1609.344,
	default  = &quot;km/s&quot;,
	link     = &quot;Mile&quot;,
    },
    [&quot;mm/h&quot;] = {
	name1    = &quot;millimetre per hour&quot;,
	name1_us = &quot;millimeter per hour&quot;,
	name2    = &quot;millimetres per hour&quot;,
	name2_us = &quot;millimeters per hour&quot;,
	symbol   = &quot;mm/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.7777777777777781e-7,
	default  = &quot;in/h&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;mph&quot;] = {
	name1    = &quot;mile per hour&quot;,
	name2    = &quot;miles per hour&quot;,
	symbol   = &quot;mph&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.44704,
	default  = &quot;km/h&quot;,
	link     = &quot;Miles per hour&quot;,
    },
    [&quot;Ns/kg&quot;] = {
	name2    = &quot;N&amp;#8209;s/kg&quot;,
	symbol   = &quot;N&amp;#8209;s/kg&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1,
	default  = &quot;isp&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;si tsfc&quot;] = {
	name2    = &quot;g/(kNs)&quot;,
	symbol   = &quot;g/(kNs)&quot;,
	utype    = &quot;speed&quot;,
	scale    = 9.9999628621379242e-7,
	invert   = -1,
	iscomplex= true,
	default  = &quot;tsfc&quot;,
	link     = &quot;Thrust specific fuel consumption&quot;,
    },
    [&quot;tsfc&quot;] = {
	name2    = &quot;lb/(lbfh)&quot;,
	symbol   = &quot;lb/(lbfh)&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.832545036049801e-5,
	invert   = -1,
	iscomplex= true,
	default  = &quot;si tsfc&quot;,
	link     = &quot;Thrust specific fuel consumption&quot;,
    },
    [&quot;cm/y&quot;] = {
	target   = &quot;cm/year&quot;,
    },
    [&quot;cm/yr&quot;] = {
	target   = &quot;cm/year&quot;,
    },
    [&quot;in/y&quot;] = {
	target   = &quot;in/year&quot;,
    },
    [&quot;in/yr&quot;] = {
	target   = &quot;in/year&quot;,
    },
    [&quot;knot&quot;] = {
	target   = &quot;kn&quot;,
    },
    [&quot;knots&quot;] = {
	target   = &quot;kn&quot;,
    },
    [&quot;kph&quot;] = {
	target   = &quot;km/h&quot;,
    },
    [&quot;mi/h&quot;] = {
	target   = &quot;mph&quot;,
    },
    [&quot;mm/s&quot;] = {
	per      = { &quot;mm&quot;, &quot;s&quot; },
	utype    = &quot;speed&quot;,
	default  = &quot;in/s&quot;,
	link     = &quot;metre per second&quot;,
    },
    [&quot;C&quot;] = {
	name1    = &quot;degree Celsius&quot;,
	name2    = &quot;degrees Celsius&quot;,
	symbol   = &quot;C&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 1,
	offset   = -273.15,
	iscomplex= true,
	istemperature= true,
	default  = &quot;F&quot;,
	link     = &quot;Celsius&quot;,
    },
    [&quot;F&quot;] = {
	name1    = &quot;degree Fahrenheit&quot;,
	name2    = &quot;degrees Fahrenheit&quot;,
	symbol   = &quot;F&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 0.55555555555555558,
	offset   = 32-273.15*(9/5),
	iscomplex= true,
	istemperature= true,
	default  = &quot;C&quot;,
	link     = &quot;Fahrenheit&quot;,
    },
    [&quot;K&quot;] = {
	_name1   = &quot;kelvin&quot;,
	_symbol  = &quot;K&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 1,
	offset   = 0,
	iscomplex= true,
	istemperature= true,
	prefixes = 1,
	default  = &quot;C F&quot;,
	link     = &quot;Kelvin&quot;,
    },
    [&quot;keVT&quot;] = {
	name1    = &quot;kiloelectronvolt&quot;,
	symbol   = &quot;keV&quot;,
	utype    = &quot;temperature&quot;,
	scale    = 11.604505e6,
	offset   = 0,
	iscomplex= true,
	default  = &quot;MK&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;R&quot;] = {
	name1    = &quot;degree Rankine&quot;,
	name2    = &quot;degrees Rankine&quot;,
	symbol   = &quot;R&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 0.55555555555555558,
	offset   = 0,
	iscomplex= true,
	istemperature= true,
	default  = &quot;K F C&quot;,
	link     = &quot;Rankine scale&quot;,
    },
    [&quot;Celsius&quot;] = {
	target   = &quot;C&quot;,
    },
    [&quot;C&quot;] = {
	target   = &quot;C&quot;,
    },
    [&quot;F&quot;] = {
	target   = &quot;F&quot;,
    },
    [&quot;R&quot;] = {
	target   = &quot;R&quot;,
    },
    [&quot;C-change&quot;] = {
	name1    = &quot;degree Celsius change&quot;,
	name2    = &quot;degrees Celsius change&quot;,
	symbol   = &quot;C&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 1,
	default  = &quot;F-change&quot;,
	link     = &quot;Celsius&quot;,
    },
    [&quot;F-change&quot;] = {
	name1    = &quot;degree Fahrenheit change&quot;,
	name2    = &quot;degrees Fahrenheit change&quot;,
	symbol   = &quot;F&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 0.55555555555555558,
	default  = &quot;C-change&quot;,
	link     = &quot;Fahrenheit&quot;,
    },
    [&quot;K-change&quot;] = {
	name1    = &quot;kelvin change&quot;,
	name2    = &quot;kelvins change&quot;,
	symbol   = &quot;K&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 1,
	default  = &quot;F-change&quot;,
	link     = &quot;Kelvin&quot;,
    },
    [&quot;C-change&quot;] = {
	target   = &quot;C-change&quot;,
    },
    [&quot;F-change&quot;] = {
	target   = &quot;F-change&quot;,
    },
    [&quot;century&quot;] = {
	name1    = &quot;century&quot;,
	name2    = &quot;centuries&quot;,
	symbol   = &quot;ha&quot;,
	utype    = &quot;time&quot;,
	scale    = 3155760000,
	default  = &quot;Gs&quot;,
    },
    [&quot;d&quot;] = {
	name1    = &quot;day&quot;,
	symbol   = &quot;d&quot;,
	utype    = &quot;time&quot;,
	scale    = 86400,
	default  = &quot;ks&quot;,
    },
    [&quot;decade&quot;] = {
	name1    = &quot;decade&quot;,
	symbol   = &quot;daa&quot;,
	utype    = &quot;time&quot;,
	scale    = 315576000,
	default  = &quot;Ms&quot;,
    },
    [&quot;dog year&quot;] = {
	name1    = &quot;dog year&quot;,
	symbol   = &quot;dog yr&quot;,
	utype    = &quot;time&quot;,
	scale    = 220903200,
	default  = &quot;years&quot;,
    },
    [&quot;fortnight&quot;] = {
	symbol   = &quot;fortnight&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 1209600,
	default  = &quot;week&quot;,
    },
    [&quot;h&quot;] = {
	name1    = &quot;hour&quot;,
	symbol   = &quot;h&quot;,
	utype    = &quot;time&quot;,
	scale    = 3600,
	default  = &quot;ks&quot;,
    },
    [&quot;long billion year&quot;] = {
	name1    = &quot;billion years&quot;,
	name2    = &quot;billion years&quot;,
	symbol   = &quot;Ta&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000000,
	default  = &quot;Es&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;millennium&quot;] = {
	name1    = &quot;millennium&quot;,
	name2    = &quot;millennia&quot;,
	symbol   = &quot;ka&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000,
	default  = &quot;Gs&quot;,
    },
    [&quot;milliard year&quot;] = {
	name1    = &quot;milliard years&quot;,
	name2    = &quot;milliard years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;million year&quot;] = {
	name1    = &quot;million years&quot;,
	name2    = &quot;million years&quot;,
	symbol   = &quot;Ma&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000,
	default  = &quot;Ts&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;min&quot;] = {
	name1    = &quot;minute&quot;,
	symbol   = &quot;min&quot;,
	utype    = &quot;time&quot;,
	scale    = 60,
	default  = &quot;s&quot;,
    },
    [&quot;month&quot;] = {
	symbol   = &quot;month&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 2629800,
	default  = &quot;Ms&quot;,
    },
    [&quot;months&quot;] = {
	name1    = &quot;month&quot;,
	symbol   = &quot;mo&quot;,
	utype    = &quot;time&quot;,
	scale    = 2629800,
	default  = &quot;year&quot;,
    },
    [&quot;s&quot;] = {
	_name1   = &quot;second&quot;,
	_symbol  = &quot;s&quot;,
	utype    = &quot;time&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;min&quot;,
	link     = &quot;Second&quot;,
    },
    [&quot;short billion year&quot;] = {
	name1    = &quot;billion years&quot;,
	name2    = &quot;billion years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;short trillion year&quot;] = {
	name1    = &quot;trillion years&quot;,
	name2    = &quot;trillion years&quot;,
	symbol   = &quot;Ta&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000000,
	default  = &quot;Es&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;thousand million year&quot;] = {
	name1    = &quot;thousand million years&quot;,
	name2    = &quot;thousand million years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;wk&quot;] = {
	symbol   = &quot;week&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 604800,
	default  = &quot;Ms&quot;,
    },
    [&quot;year&quot;] = {
	name1    = &quot;year&quot;,
	symbol   = &quot;a&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600,
	default  = &quot;Ms&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;years&quot;] = {
	name1    = &quot;year&quot;,
	symbol   = &quot;yr&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600,
	default  = &quot;Ms&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;byr&quot;] = {
	target   = &quot;short billion year&quot;,
    },
    [&quot;day&quot;] = {
	target   = &quot;d&quot;,
    },
    [&quot;days&quot;] = {
	target   = &quot;d&quot;,
    },
    [&quot;dog yr&quot;] = {
	target   = &quot;dog year&quot;,
    },
    [&quot;Gyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;hour&quot;] = {
	target   = &quot;h&quot;,
    },
    [&quot;hours&quot;] = {
	target   = &quot;h&quot;,
    },
    [&quot;kMyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;kmyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;kyr&quot;] = {
	target   = &quot;millennium&quot;,
    },
    [&quot;long byr&quot;] = {
	target   = &quot;long billion year&quot;,
    },
    [&quot;minute&quot;] = {
	target   = &quot;min&quot;,
    },
    [&quot;minutes&quot;] = {
	target   = &quot;min&quot;,
    },
    [&quot;mth&quot;] = {
	target   = &quot;month&quot;,
    },
    [&quot;Myr&quot;] = {
	target   = &quot;million year&quot;,
    },
    [&quot;myr&quot;] = {
	target   = &quot;million year&quot;,
    },
    [&quot;second&quot;] = {
	target   = &quot;s&quot;,
    },
    [&quot;seconds&quot;] = {
	target   = &quot;s&quot;,
    },
    [&quot;tmyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;tryr&quot;] = {
	target   = &quot;short trillion year&quot;,
    },
    [&quot;tyr&quot;] = {
	target   = &quot;millennium&quot;,
    },
    [&quot;week&quot;] = {
	target   = &quot;wk&quot;,
    },
    [&quot;weeks&quot;] = {
	target   = &quot;wk&quot;,
    },
    [&quot;yr&quot;] = {
	target   = &quot;year&quot;,
    },
    [&quot;kg.m&quot;] = {
	name1    = &quot;kilogram metre&quot;,
	name1_us = &quot;kilogram meter&quot;,
	symbol   = &quot;kgm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbft&quot;,
    },
    [&quot;kgf.m&quot;] = {
	name1    = &quot;kilogram force-metre&quot;,
	name1_us = &quot;kilogram force-meter&quot;,
	symbol   = &quot;kgfm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;kgm&quot;] = {
	name1    = &quot;kilogram metre&quot;,
	name1_us = &quot;kilogram meter&quot;,
	symbol   = &quot;kgm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
    },
    [&quot;lb-fft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;ftlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lb.ft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;lbft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lb.in&quot;] = {
	name1    = &quot;pound force-inch&quot;,
	symbol   = &quot;lbin&quot;,
	utype    = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mN.m&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lbfft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;lbfft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lbft&quot;] = {
	name1    = &quot;pound-foot&quot;,
	name2    = &quot;pound-feet&quot;,
	symbol   = &quot;lbft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;m.kg-f&quot;] = {
	name1    = &quot;metre kilogram-force&quot;,
	name1_us = &quot;meter kilogram-force&quot;,
	name2    = &quot;metre kilograms-force&quot;,
	name2_us = &quot;meter kilograms-force&quot;,
	symbol   = &quot;mkg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;m.kgf&quot;] = {
	name1    = &quot;metre kilogram-force&quot;,
	name1_us = &quot;meter kilogram-force&quot;,
	name2    = &quot;metre kilograms-force&quot;,
	name2_us = &quot;meter kilograms-force&quot;,
	symbol   = &quot;mkgf&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;mN.m&quot;] = {
	name1    = &quot;millinewton metre&quot;,
	name1_us = &quot;millinewton meter&quot;,
	symbol   = &quot;mNm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 0.001,
	default  = &quot;lb.in&quot;,
	link     = &quot;Newton metre&quot;,
    },
    [&quot;Nm&quot;] = {
	_name1   = &quot;newton metre&quot;,
	_name1_us= &quot;newton meter&quot;,
	_symbol  = &quot;Nm&quot;,
	utype    = &quot;torque&quot;,
	alttype  = &quot;energy&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;lbfft&quot;,
	link     = &quot;Newton metre&quot;,
    },
    [&quot;kN/m&quot;] = {
	per      = { &quot;kN&quot;, &quot;-m-stiff&quot; },
	utype    = &quot;torque&quot;,
	default  = &quot;lbf/in&quot;,
    },
    [&quot;lbf/in&quot;] = {
	per      = { &quot;lbf&quot;, &quot;-in-stiff&quot; },
	utype    = &quot;torque&quot;,
	default  = &quot;kN/m&quot;,
    },
    [&quot;lb-f.ft&quot;] = {
	target   = &quot;lb-fft&quot;,
    },
    [&quot;lb-fft&quot;] = {
	target   = &quot;lb-fft&quot;,
    },
    [&quot;lbf.ft&quot;] = {
	target   = &quot;lbfft&quot;,
    },
    [&quot;lbfft&quot;] = {
	target   = &quot;lbfft&quot;,
    },
    [&quot;lbft&quot;] = {
	target   = &quot;lb.ft&quot;,
    },
    [&quot;mkg-f&quot;] = {
	target   = &quot;m.kg-f&quot;,
    },
    [&quot;mkgf&quot;] = {
	target   = &quot;m.kgf&quot;,
    },
    [&quot;N.m&quot;] = {
	target   = &quot;Nm&quot;,
    },
    [&quot;Nm&quot;] = {
	target   = &quot;Nm&quot;,
    },
    [&quot;-12USoz(mL)serve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;mL&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;-12USoz(ml)serve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;ml&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;-12USozserve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;mL&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;acre foot&quot;] = {
	name1    = &quot;acre foot&quot;,
	name2    = &quot;acre foot&quot;,
	symbol   = &quot;acreft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1233.48183754752,
	default  = &quot;m3&quot;,
    },
    [&quot;acre ft&quot;] = {
	name1    = &quot;acre foot&quot;,
	name2    = &quot;acre feet&quot;,
	symbol   = &quot;acreft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1233.48183754752,
	default  = &quot;m3&quot;,
    },
    [&quot;AUtbsp&quot;] = {
	name1    = &quot;Australian tablespoon&quot;,
	symbol   = &quot;AU&amp;nbsp;tbsp&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000020,
	default  = &quot;ml&quot;,
    },
    [&quot;bdft&quot;] = {
	name1    = &quot;board foot&quot;,
	name2    = &quot;board feet&quot;,
	symbol   = &quot;bd&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;board feet&quot;] = {
	name2    = &quot;board feet&quot;,
	symbol   = &quot;board foot&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;board foot&quot;] = {
	name2    = &quot;board foot&quot;,
	symbol   = &quot;board foot&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;cc&quot;] = {
	name1    = &quot;cubic centimetre&quot;,
	name1_us = &quot;cubic centimeter&quot;,
	symbol   = &quot;cc&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000001,
	default  = &quot;cuin&quot;,
    },
    [&quot;CID&quot;] = {
	name1    = &quot;cubic inch&quot;,
	name2    = &quot;cubic inches&quot;,
	symbol   = &quot;cu&amp;nbsp;in&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000016387064,
	default  = &quot;cc&quot;,
	link     = &quot;Cubic inch#Engine displacement&quot;,
    },
    [&quot;cord&quot;] = {
	symbol   = &quot;cord&quot;,
	utype    = &quot;volume&quot;,
	scale    = 3.624556363776,
	default  = &quot;m3&quot;,
	link     = &quot;Cord (unit)&quot;,
    },
    [&quot;cufoot&quot;] = {
	name1    = &quot;cubic foot&quot;,
	name2    = &quot;cubic foot&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.028316846592,
	default  = &quot;m3&quot;,
    },
    [&quot;cuft&quot;] = {
	name1    = &quot;cubic foot&quot;,
	name2    = &quot;cubic feet&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.028316846592,
	default  = &quot;m3&quot;,
    },
    [&quot;cuin&quot;] = {
	name1    = &quot;cubic inch&quot;,
	name2    = &quot;cubic inches&quot;,
	symbol   = &quot;cu&amp;nbsp;in&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000016387064,
	default  = &quot;cm3&quot;,
    },
    [&quot;cumi&quot;] = {
	name1    = &quot;cubic mile&quot;,
	symbol   = &quot;cu&amp;nbsp;mi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 4168181825.440579584,
	default  = &quot;km3&quot;,
    },
    [&quot;cuyd&quot;] = {
	name1    = &quot;cubic yard&quot;,
	symbol   = &quot;cu&amp;nbsp;yd&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.764554857984,
	default  = &quot;m3&quot;,
    },
    [&quot;firkin&quot;] = {
	symbol   = &quot;firkin&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.04091481,
	default  = &quot;l impgal USgal&quot;,
    },
    [&quot;foot3&quot;] = {
	target   = &quot;cufoot&quot;,
    },
    [&quot;Goilbbl&quot;] = {
	name1    = &quot;billion barrels&quot;,
	name2    = &quot;billion barrels&quot;,
	symbol   = &quot;Gbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987294.928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e6 ! e9 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;gr water&quot;] = {
	name1    = &quot;grains water&quot;,
	name2    = &quot;grains water&quot;,
	symbol   = &quot;gr H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00000006479891,
	default  = &quot;cm3&quot;,
	link     = &quot;Grain (unit)&quot;,
    },
    [&quot;grt&quot;] = {
	name1    = &quot;gross register ton&quot;,
	symbol   = &quot;grt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 2.8316846592,
	default  = &quot;m3&quot;,
	link     = &quot;Gross register tonnage&quot;,
    },
    [&quot;impbbl&quot;] = {
	name1    = &quot;imperial barrel&quot;,
	symbol   = &quot;imp&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.16365924,
	default  = &quot;l impgal USgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;impbsh&quot;] = {
	name1    = &quot;imperial bushel&quot;,
	symbol   = &quot;imp&amp;nbsp;bsh&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03636872,
	default  = &quot;l impgal USdrygal&quot;,
    },
    [&quot;impbu&quot;] = {
	name1    = &quot;imperial bushel&quot;,
	symbol   = &quot;imp&amp;nbsp;bu&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03636872,
	default  = &quot;m3&quot;,
    },
    [&quot;impgal&quot;] = {
	name1    = &quot;imperial gallon&quot;,
	symbol   = &quot;imp&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00454609,
	default  = &quot;l USgal&quot;,
    },
    [&quot;impgi&quot;] = {
	name1    = &quot;gill&quot;,
	symbol   = &quot;gi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0001420653125,
	default  = &quot;ml USoz&quot;,
	link     = &quot;Gill (unit)&quot;,
    },
    [&quot;impkenning&quot;] = {
	name1    = &quot;imperial kenning&quot;,
	symbol   = &quot;kenning&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.01818436,
	default  = &quot;l USdrygal&quot;,
	link     = &quot;Kenning (unit)&quot;,
    },
    [&quot;impoz&quot;] = {
	name1    = &quot;imperial fluid ounce&quot;,
	symbol   = &quot;imp&amp;nbsp;fl&amp;nbsp;oz&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0000284130625,
	default  = &quot;ml USoz&quot;,
    },
    [&quot;imppk&quot;] = {
	name1    = &quot;imperial peck&quot;,
	symbol   = &quot;pk&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00909218,
	default  = &quot;l USdrygal&quot;,
	link     = &quot;Peck&quot;,
    },
    [&quot;imppt&quot;] = {
	name1    = &quot;imperial pint&quot;,
	symbol   = &quot;imp&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00056826125,
	default  = &quot;l&quot;,
    },
    [&quot;impqt&quot;] = {
	name1    = &quot;imperial quart&quot;,
	symbol   = &quot;imp&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0011365225,
	default  = &quot;ml USoz&quot;,
	customary= 3,
    },
    [&quot;kilderkin&quot;] = {
	symbol   = &quot;kilderkin&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.08182962,
	default  = &quot;l impgal USgal&quot;,
    },
    [&quot;koilbbl&quot;] = {
	name1    = &quot;thousand barrels&quot;,
	name2    = &quot;thousand barrels&quot;,
	symbol   = &quot;kbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158.987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;L&quot;] = {
	_name1   = &quot;litre&quot;,
	_name1_us= &quot;liter&quot;,
	_symbol  = &quot;L&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;impgal USgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;l&quot;] = {
	_name1   = &quot;litre&quot;,
	_name1_us= &quot;liter&quot;,
	_symbol  = &quot;l&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;impgal USgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;m3&quot;] = {
	_name1   = &quot;cubic metre&quot;,
	_name1_us= &quot;cubic meter&quot;,
	_symbol  = &quot;m&lt;sup&gt;3&lt;/sup&gt;&quot;,
	prefix_position= 7,
	utype    = &quot;volume&quot;,
	scale    = 1,
	prefixes = 3,
	default  = &quot;cuft&quot;,
	link     = &quot;Cubic metre&quot;,
    },
    [&quot;Mbbl&quot;] = {
	name1    = &quot;thousand barrels&quot;,
	name2    = &quot;thousand barrels&quot;,
	symbol   = &quot;Mbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158.987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;MMoilbbl&quot;] = {
	name1    = &quot;million barrels&quot;,
	name2    = &quot;million barrels&quot;,
	symbol   = &quot;MMbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987.294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;Moilbbl&quot;] = {
	name1    = &quot;million barrels&quot;,
	name2    = &quot;million barrels&quot;,
	symbol   = &quot;Mbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987.294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;MTON&quot;] = {
	name1    = &quot;measurement ton&quot;,
	symbol   = &quot;MTON&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1.13267386368,
	default  = &quot;m3&quot;,
    },
    [&quot;MUSgal&quot;] = {
	name1    = &quot;million US gallons&quot;,
	name1_us = &quot;million U.S. gallons&quot;,
	name2    = &quot;million US gallons&quot;,
	name2_us = &quot;million U.S. gallons&quot;,
	symbol   = &quot;million US&amp;nbsp;gal&quot;,
	sym_us   = &quot;million U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 3785.411784,
	default  = &quot;Ml&quot;,
	link     = &quot;US gallon&quot;,
    },
    [&quot;oilbbl&quot;] = {
	name1    = &quot;barrel&quot;,
	symbol   = &quot;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.158987294928,
	default  = &quot;m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;stere&quot;] = {
	symbol   = &quot;stre&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 1,
	default  = &quot;cuft&quot;,
    },
    [&quot;Toilbbl&quot;] = {
	name1    = &quot;trillion barrels&quot;,
	name2    = &quot;trillion barrels&quot;,
	symbol   = &quot;Tbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e9 ! e12 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;USbbl&quot;] = {
	name1    = &quot;US barrel&quot;,
	name1_us = &quot;U.S. barrel&quot;,
	symbol   = &quot;US&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.119240471196,
	default  = &quot;l USgal impgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USbeerbbl&quot;] = {
	name1    = &quot;US beer barrel&quot;,
	name1_us = &quot;U.S. beer barrel&quot;,
	symbol   = &quot;US&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.117347765304,
	default  = &quot;l USgal impgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USbsh&quot;] = {
	name1    = &quot;US bushel&quot;,
	name1_us = &quot;U.S. bushel&quot;,
	symbol   = &quot;US&amp;nbsp;bsh&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bsh&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03523907016688,
	default  = &quot;l USdrygal impgal&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USbu&quot;] = {
	name1    = &quot;US bushel&quot;,
	name1_us = &quot;U.S. bushel&quot;,
	symbol   = &quot;US&amp;nbsp;bu&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bu&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03523907016688,
	default  = &quot;l USdrygal impgal&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USdrybbl&quot;] = {
	name1    = &quot;US dry barrel&quot;,
	name1_us = &quot;U.S. dry barrel&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.11562819898508,
	default  = &quot;m3&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USdrygal&quot;] = {
	name1    = &quot;US dry gallon&quot;,
	name1_us = &quot;U.S. dry gallon&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00440488377086,
	default  = &quot;l&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USdrypt&quot;] = {
	name1    = &quot;US dry pint&quot;,
	name1_us = &quot;U.S. dry pint&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;pt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0005506104713575,
	default  = &quot;ml&quot;,
	link     = &quot;Pint&quot;,
    },
    [&quot;USdryqt&quot;] = {
	name1    = &quot;US dry quart&quot;,
	name1_us = &quot;U.S. dry quart&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001101220942715,
	default  = &quot;ml&quot;,
	link     = &quot;Quart&quot;,
    },
    [&quot;USflgal&quot;] = {
	name1    = &quot;US gallon&quot;,
	name1_us = &quot;U.S. gallon&quot;,
	symbol   = &quot;US fl gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;fl&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.003785411784,
	default  = &quot;l impgal&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal&quot;] = {
	name1    = &quot;US gallon&quot;,
	name1_us = &quot;U.S. gallon&quot;,
	symbol   = &quot;US&amp;nbsp;gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.003785411784,
	default  = &quot;l impgal&quot;,
    },
    [&quot;USgi&quot;] = {
	name1    = &quot;gill&quot;,
	symbol   = &quot;gi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0001182941183,
	default  = &quot;ml impoz&quot;,
	link     = &quot;Gill (unit)&quot;,
    },
    [&quot;USkenning&quot;] = {
	name1    = &quot;US kenning&quot;,
	name1_us = &quot;U.S. kenning&quot;,
	symbol   = &quot;US&amp;nbsp;kenning&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;kenning&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.01761953508344,
	default  = &quot;l impgal&quot;,
	link     = &quot;Kenning (unit)&quot;,
    },
    [&quot;USmin&quot;] = {
	name1    = &quot;US minim&quot;,
	name1_us = &quot;U.S. minim&quot;,
	symbol   = &quot;US&amp;nbsp;min&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;min&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000000061611519921875,
	default  = &quot;ml&quot;,
	link     = &quot;Minim (unit)&quot;,
    },
    [&quot;USoz&quot;] = {
	name1    = &quot;US fluid ounce&quot;,
	name1_us = &quot;U.S. fluid ounce&quot;,
	symbol   = &quot;US&amp;nbsp;fl&amp;nbsp;oz&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;fl&amp;nbsp;oz&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0000295735295625,
	default  = &quot;ml&quot;,
    },
    [&quot;USpk&quot;] = {
	name1    = &quot;US peck&quot;,
	name1_us = &quot;U.S. peck&quot;,
	symbol   = &quot;US&amp;nbsp;pk&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;pk&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00880976754172,
	default  = &quot;l impgal&quot;,
	link     = &quot;Peck&quot;,
    },
    [&quot;USpt&quot;] = {
	name1    = &quot;US pint&quot;,
	name1_us = &quot;U.S. pint&quot;,
	symbol   = &quot;US&amp;nbsp;pt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000473176473,
	default  = &quot;l imppt&quot;,
	link     = &quot;Pint&quot;,
    },
    [&quot;USqt&quot;] = {
	name1    = &quot;US quart&quot;,
	name1_us = &quot;U.S. quart&quot;,
	symbol   = &quot;US&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000946352946,
	default  = &quot;ml&quot;,
	link     = &quot;Quart&quot;,
	customary= 1,
    },
    [&quot;USquart&quot;] = {
	name1    = &quot;US quart&quot;,
	name1_us = &quot;U.S. quart&quot;,
	symbol   = &quot;US&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000946352946,
	default  = &quot;ml impoz&quot;,
	link     = &quot;Quart&quot;,
    },
    [&quot;UStbsp&quot;] = {
	name1    = &quot;US tablespoon&quot;,
	name1_us = &quot;U.S. tablespoon&quot;,
	symbol   = &quot;US&amp;nbsp;tbsp&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;tbsp&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1.4786764781250001e-5,
	default  = &quot;ml&quot;,
    },
    [&quot;winecase&quot;] = {
	symbol   = &quot;case&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.009,
	default  = &quot;l&quot;,
	link     = &quot;Case (goods)&quot;,
    },
    [&quot;*U.S.drygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	sp_us    = true,
	customary= 2,
    },
    [&quot;*U.S.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	customary= 2,
    },
    [&quot;+USdrygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	customary= 1,
    },
    [&quot;+usfloz&quot;] = {
	target   = &quot;USoz&quot;,
	link     = &quot;Fluid ounce&quot;,
	customary= 1,
    },
    [&quot;+USgal&quot;] = {
	target   = &quot;USgal&quot;,
	customary= 1,
    },
    [&quot;+USoz&quot;] = {
	target   = &quot;USoz&quot;,
	customary= 1,
    },
    [&quot;@impgal&quot;] = {
	target   = &quot;impgal&quot;,
	link     = &quot;Gallon&quot;,
	customary= 3,
    },
    [&quot;acre feet&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre-feet&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre-ft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre.foot&quot;] = {
	target   = &quot;acre foot&quot;,
    },
    [&quot;acre.ft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acrefoot&quot;] = {
	target   = &quot;acre foot&quot;,
    },
    [&quot;acreft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;bushels&quot;] = {
	target   = &quot;USbsh&quot;,
    },
    [&quot;cid&quot;] = {
	target   = &quot;CID&quot;,
    },
    [&quot;ft3&quot;] = {
	target   = &quot;cuft&quot;,
    },
    [&quot;gal&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;gallon&quot;] = {
	shouldbe = &quot;Use %{USgal%} for US gallons or %{impgal%} for imperial gallons (not %{gallon%})&quot;,
    },
    [&quot;gallons&quot;] = {
	shouldbe = &quot;Use %{USgal%} for US gallons or %{impgal%} for imperial gallons (not %{gallons%})&quot;,
    },
    [&quot;Gcuft&quot;] = {
	target   = &quot;e9cuft&quot;,
    },
    [&quot;impfloz&quot;] = {
	target   = &quot;impoz&quot;,
    },
    [&quot;Impgal&quot;] = {
	target   = &quot;impgal&quot;,
    },
    [&quot;in3&quot;] = {
	target   = &quot;cuin&quot;,
	symbol   = &quot;in&lt;sup&gt;3&lt;/sup&gt;&quot;,
    },
    [&quot;kcuft&quot;] = {
	target   = &quot;e3cuft&quot;,
    },
    [&quot;kcum&quot;] = {
	target   = &quot;e3m3&quot;,
    },
    [&quot;km&quot;] = {
	target   = &quot;km3&quot;,
    },
    [&quot;liter&quot;] = {
	target   = &quot;L&quot;,
	sp_us    = true,
    },
    [&quot;liters&quot;] = {
	target   = &quot;L&quot;,
	sp_us    = true,
    },
    [&quot;litre&quot;] = {
	target   = &quot;L&quot;,
    },
    [&quot;litres&quot;] = {
	target   = &quot;L&quot;,
    },
    [&quot;Mcuft&quot;] = {
	target   = &quot;e6cuft&quot;,
    },
    [&quot;Mcum&quot;] = {
	target   = &quot;e6m3&quot;,
    },
    [&quot;Mft3&quot;] = {
	target   = &quot;e6cuft&quot;,
    },
    [&quot;mi3&quot;] = {
	target   = &quot;cumi&quot;,
    },
    [&quot;m&quot;] = {
	target   = &quot;m3&quot;,
    },
    [&quot;Pcuft&quot;] = {
	target   = &quot;e15cuft&quot;,
    },
    [&quot;pt&quot;] = {
	shouldbe = &quot;Use %{USpt%} for US pints or %{imppt%} for imperial pints (not %{pt%})&quot;,
    },
    [&quot;qt&quot;] = {
	shouldbe = &quot;Use %{USqt%} for US quarts or %{impqt%} for imperial quarts (not %{qt%})&quot;,
    },
    [&quot;Tcuft&quot;] = {
	target   = &quot;e12cuft&quot;,
    },
    [&quot;Tft3&quot;] = {
	target   = &quot;e12cuft&quot;,
    },
    [&quot;U.S.bbl&quot;] = {
	target   = &quot;USbbl&quot;,
	sp_us    = true,
	default  = &quot;l U.S.gal impgal&quot;,
    },
    [&quot;U.S.beerbbl&quot;] = {
	target   = &quot;USbeerbbl&quot;,
	sp_us    = true,
	default  = &quot;l U.S.gal impgal&quot;,
    },
    [&quot;U.S.bsh&quot;] = {
	target   = &quot;USbsh&quot;,
	sp_us    = true,
	default  = &quot;l U.S.drygal impgal&quot;,
    },
    [&quot;U.S.bu&quot;] = {
	target   = &quot;USbu&quot;,
	sp_us    = true,
	default  = &quot;l U.S.drygal impgal&quot;,
    },
    [&quot;U.S.drybbl&quot;] = {
	target   = &quot;USdrybbl&quot;,
	sp_us    = true,
    },
    [&quot;U.S.drygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	sp_us    = true,
    },
    [&quot;U.S.drypt&quot;] = {
	target   = &quot;USdrypt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.dryqt&quot;] = {
	target   = &quot;USdryqt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.flgal&quot;] = {
	target   = &quot;USflgal&quot;,
	sp_us    = true,
    },
    [&quot;U.S.floz&quot;] = {
	target   = &quot;USoz&quot;,
	sp_us    = true,
    },
    [&quot;U.S.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	link     = &quot;U.S. gallon&quot;,
    },
    [&quot;u.s.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	link     = &quot;U.S. gallon&quot;,
    },
    [&quot;U.S.gi&quot;] = {
	target   = &quot;USgi&quot;,
	sp_us    = true,
    },
    [&quot;U.S.kenning&quot;] = {
	target   = &quot;USkenning&quot;,
	sp_us    = true,
    },
    [&quot;U.S.oz&quot;] = {
	target   = &quot;USoz&quot;,
	sp_us    = true,
    },
    [&quot;U.S.pk&quot;] = {
	target   = &quot;USpk&quot;,
	sp_us    = true,
    },
    [&quot;U.S.pt&quot;] = {
	target   = &quot;USpt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.qt&quot;] = {
	target   = &quot;USqt&quot;,
	sp_us    = true,
	default  = &quot;L impqt&quot;,
	customary= 2,
    },
    [&quot;usbbl&quot;] = {
	target   = &quot;USbbl&quot;,
    },
    [&quot;usbeerbbl&quot;] = {
	target   = &quot;USbeerbbl&quot;,
    },
    [&quot;usbsh&quot;] = {
	target   = &quot;USbsh&quot;,
    },
    [&quot;usbu&quot;] = {
	target   = &quot;USbu&quot;,
    },
    [&quot;usdrybbl&quot;] = {
	target   = &quot;USdrybbl&quot;,
    },
    [&quot;usdrygal&quot;] = {
	target   = &quot;USdrygal&quot;,
    },
    [&quot;usdrypt&quot;] = {
	target   = &quot;USdrypt&quot;,
    },
    [&quot;usdryqt&quot;] = {
	target   = &quot;USdryqt&quot;,
    },
    [&quot;USfloz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;usfloz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;USGAL&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;usgal&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;usgi&quot;] = {
	target   = &quot;USgi&quot;,
    },
    [&quot;uskenning&quot;] = {
	target   = &quot;USkenning&quot;,
    },
    [&quot;usoz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;uspk&quot;] = {
	target   = &quot;USpk&quot;,
    },
    [&quot;uspt&quot;] = {
	target   = &quot;USpt&quot;,
    },
    [&quot;usqt&quot;] = {
	target   = &quot;USqt&quot;,
    },
    [&quot;yd3&quot;] = {
	target   = &quot;cuyd&quot;,
    },
    [&quot;cuft/sqmi&quot;] = {
	per      = { &quot;cuft&quot;, &quot;sqmi&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;m3/ha&quot;] = {
	name1    = &quot;cubic metre per hectare&quot;,
	name1_us = &quot;cubic meter per hectare&quot;,
	name2    = &quot;cubic metres per hectare&quot;,
	name2_us = &quot;cubic meters per hectare&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/ha&quot;,
	utype    = &quot;volume per unit area&quot;,
	scale    = 0.0001,
	default  = &quot;USbu/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;m3/km2&quot;] = {
	per      = { &quot;m3&quot;, &quot;km2&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;cuft/sqmi&quot;,
    },
    [&quot;U.S.gal/acre&quot;] = {
	per      = { &quot;U.S.gal&quot;, &quot;acre&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;USbu/acre&quot;] = {
	name2    = &quot;US bushels per acre&quot;,
	symbol   = &quot;US bushel per acre&quot;,
	usename  = 1,
	utype    = &quot;volume per unit area&quot;,
	scale    = 8.7077638761350888e-6,
	default  = &quot;m3/ha&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USgal/acre&quot;] = {
	per      = { &quot;USgal&quot;, &quot;acre&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;cuyd/mi&quot;] = {
	per      = { &quot;cuyd&quot;, &quot;mi&quot; },
	utype    = &quot;volume per unit length&quot;,
	default  = &quot;m3/km&quot;,
    },
    [&quot;m3/km&quot;] = {
	per      = { &quot;m3&quot;, &quot;km&quot; },
	utype    = &quot;volume per unit length&quot;,
	default  = &quot;cuyd/mi&quot;,
    },
    [&quot;mich&quot;] = {
	combination= { &quot;ch&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;michlk&quot;] = {
	combination= { &quot;chlk&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;michainlk&quot;] = {
	combination= { &quot;chainlk&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;miydftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot;, &quot;yd&quot;, &quot;mi&quot; },
	multiple = { 12, 3, 1760 },
	utype    = &quot;length&quot;,
    },
    [&quot;mift&quot;] = {
	combination= { &quot;ft&quot;, &quot;mi&quot; },
	multiple = { 5280 },
	utype    = &quot;length&quot;,
    },
    [&quot;ydftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot;, &quot;yd&quot; },
	multiple = { 12, 3 },
	utype    = &quot;length&quot;,
    },
    [&quot;ydft&quot;] = {
	combination= { &quot;ft&quot;, &quot;yd&quot; },
	multiple = { 3 },
	utype    = &quot;length&quot;,
    },
    [&quot;ftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot; },
	multiple = { 12 },
	utype    = &quot;length&quot;,
    },
    [&quot;footin&quot;] = {
	combination= { &quot;in&quot;, &quot;foot&quot; },
	multiple = { 12 },
	utype    = &quot;length&quot;,
    },
    [&quot;handin&quot;] = {
	combination= { &quot;in&quot;, &quot;hand&quot; },
	multiple = { 4 },
	utype    = &quot;length&quot;,
    },
    [&quot;lboz&quot;] = {
	combination= { &quot;oz&quot;, &quot;lb&quot; },
	multiple = { 16 },
	utype    = &quot;mass&quot;,
    },
    [&quot;stlb&quot;] = {
	combination= { &quot;lb&quot;, &quot;st&quot; },
	multiple = { 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;stlboz&quot;] = {
	combination= { &quot;oz&quot;, &quot;lb&quot;, &quot;st&quot; },
	multiple = { 16, 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;st and lb&quot;] = {
	combination= { &quot;lb&quot;, &quot;st&quot; },
	multiple = { 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;GN LTf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN LTf STf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN STf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN STf LTf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN LTf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN LTf STf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN STf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN STf LTf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;LTf STf&quot;] = {
	combination= { &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN LTf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN LTf STf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN STf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN STf LTf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;STf LTf&quot;] = {
	combination= { &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;L/100 km mpgimp&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgimp&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;l/100 km mpgimp&quot;] = {
	combination= { &quot;l/100 km&quot;, &quot;mpgimp&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;L/100 km mpgUS&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;L/100 km mpgus&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;l/100 km mpgus&quot;] = {
	combination= { &quot;l/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;mpgimp L/100 km&quot;] = {
	combination= { &quot;mpgimp&quot;, &quot;L/100 km&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;LT ST t&quot;] = {
	combination= { &quot;lt&quot;, &quot;-ST&quot;, &quot;t&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;LT t ST&quot;] = {
	combination= { &quot;lt&quot;, &quot;t&quot;, &quot;-ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ST LT t&quot;] = {
	combination= { &quot;-ST&quot;, &quot;lt&quot;, &quot;t&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ST t LT&quot;] = {
	combination= { &quot;-ST&quot;, &quot;t&quot;, &quot;lt&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;t LT ST&quot;] = {
	combination= { &quot;t&quot;, &quot;lt&quot;, &quot;-ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ton&quot;] = {
	combination= { &quot;LT&quot;, &quot;ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;kPa kg/cm2&quot;] = {
	combination= { &quot;kPa&quot;, &quot;kgf/cm2&quot; },
	utype    = &quot;pressure&quot;,
    },
    [&quot;kPa lb/in2&quot;] = {
	combination= { &quot;kPa&quot;, &quot;-lb/in2&quot; },
	utype    = &quot;pressure&quot;,
    },
    [&quot;floz&quot;] = {
	combination= { &quot;impoz&quot;, &quot;USoz&quot; },
	utype    = &quot;volume&quot;,
    },
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local default_exceptions = {
	-- Prefixed units with a default different from that of the base unit.
	-- Each key item is a prefixed symbol (unitcode for engineering notation).
	[&quot;cm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;dm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;e3acre&quot;] = &quot;km2&quot;,
	[&quot;e3m2&quot;] = &quot;e6sqft&quot;,
	[&quot;e6acre&quot;] = &quot;km2&quot;,
	[&quot;e6ha&quot;] = &quot;e6acre&quot;,
	[&quot;e6km2&quot;] = &quot;e6sqmi&quot;,
	[&quot;e6m2&quot;] = &quot;e6sqft&quot;,
	[&quot;e6sqft&quot;] = &quot;v * 9.290304 &lt; 100 ! e3 ! e6 ! m2&quot;,
	[&quot;e6sqmi&quot;] = &quot;e6km2&quot;,
	[&quot;hm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;acre&quot;,
	[&quot;km&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqmi&quot;,
	[&quot;mm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;aJ&quot;] = &quot;eV&quot;,
	[&quot;e3BTU&quot;] = &quot;MJ&quot;,
	[&quot;e6BTU&quot;] = &quot;GJ&quot;,
	[&quot;EJ&quot;] = &quot;kWh&quot;,
	[&quot;fJ&quot;] = &quot;keV&quot;,
	[&quot;GJ&quot;] = &quot;kWh&quot;,
	[&quot;MJ&quot;] = &quot;kWh&quot;,
	[&quot;PJ&quot;] = &quot;kWh&quot;,
	[&quot;pJ&quot;] = &quot;MeV&quot;,
	[&quot;TJ&quot;] = &quot;kWh&quot;,
	[&quot;YJ&quot;] = &quot;kWh&quot;,
	[&quot;yJ&quot;] = &quot;eV&quot;,
	[&quot;ZJ&quot;] = &quot;kWh&quot;,
	[&quot;zJ&quot;] = &quot;meV&quot;,
	[&quot;e12cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3/a&quot;,
	[&quot;e12cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3/d&quot;,
	[&quot;e12m3/a&quot;] = &quot;Tcuft/a&quot;,
	[&quot;e12m3/d&quot;] = &quot;Tcuft/d&quot;,
	[&quot;e3cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/a&quot;,
	[&quot;e3cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/d&quot;,
	[&quot;e3cuft/s&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/s&quot;,
	[&quot;e3m3/a&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/a&quot;,
	[&quot;e3m3/d&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/d&quot;,
	[&quot;e3m3/s&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/s&quot;,
	[&quot;e3USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! ! e3 ! m3/a&quot;,
	[&quot;e6cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/a&quot;,
	[&quot;e6cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/d&quot;,
	[&quot;e6cuft/s&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/s&quot;,
	[&quot;e6m3/a&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft/a&quot;,
	[&quot;e6m3/d&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft/d&quot;,
	[&quot;e6m3/s&quot;] = &quot;v &lt; 28.316846592 ! e6 ! e9 ! cuft/s&quot;,
	[&quot;e6USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e3 ! e6 ! m3/a&quot;,
	[&quot;e9cuft/a&quot;] = &quot;m3/a&quot;,
	[&quot;e9cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e6 ! e9 ! m3/d&quot;,
	[&quot;e9m3/a&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft/a&quot;,
	[&quot;e9m3/d&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft/d&quot;,
	[&quot;e9m3/s&quot;] = &quot;v &lt; 28.316846592 ! e9 ! e12 ! cuft/s&quot;,
	[&quot;e9USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e6 ! e9 ! m3/a&quot;,
	[&quot;e9USgal/s&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e6 ! e9 ! m3/s&quot;,
	[&quot;nN&quot;] = &quot;gr-f&quot;,
	[&quot;N&quot;] = &quot;gr-f&quot;,
	[&quot;mN&quot;] = &quot;oz-f&quot;,
	[&quot;am&quot;] = &quot;in&quot;,
	[&quot;cm&quot;] = &quot;in&quot;,
	[&quot;dam&quot;] = &quot;ft&quot;,
	[&quot;dm&quot;] = &quot;in&quot;,
	[&quot;e12km&quot;] = &quot;e12mi&quot;,
	[&quot;e12mi&quot;] = &quot;e12km&quot;,
	[&quot;e3AU&quot;] = &quot;ly&quot;,
	[&quot;e3km&quot;] = &quot;e3mi&quot;,
	[&quot;e3mi&quot;] = &quot;e3km&quot;,
	[&quot;e6km&quot;] = &quot;e6mi&quot;,
	[&quot;e6mi&quot;] = &quot;e6km&quot;,
	[&quot;e9km&quot;] = &quot;AU&quot;,
	[&quot;e9mi&quot;] = &quot;e9km&quot;,
	[&quot;Em&quot;] = &quot;mi&quot;,
	[&quot;fm&quot;] = &quot;in&quot;,
	[&quot;Gm&quot;] = &quot;mi&quot;,
	[&quot;hm&quot;] = &quot;ft&quot;,
	[&quot;km&quot;] = &quot;mi&quot;,
	[&quot;mm&quot;] = &quot;in&quot;,
	[&quot;Mm&quot;] = &quot;mi&quot;,
	[&quot;nm&quot;] = &quot;in&quot;,
	[&quot;Pm&quot;] = &quot;mi&quot;,
	[&quot;pm&quot;] = &quot;in&quot;,
	[&quot;Tm&quot;] = &quot;mi&quot;,
	[&quot;Ym&quot;] = &quot;mi&quot;,
	[&quot;ym&quot;] = &quot;in&quot;,
	[&quot;Zm&quot;] = &quot;mi&quot;,
	[&quot;zm&quot;] = &quot;in&quot;,
	[&quot;m&quot;] = &quot;in&quot;,
	[&quot;e12lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! Mt ! Gt&quot;,
	[&quot;e3lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! kg ! t&quot;,
	[&quot;e3ozt&quot;] = &quot;v * 0.311034768 &lt; 10 ! kg ! t&quot;,
	[&quot;e3t&quot;] = &quot;LT ST&quot;,
	[&quot;e6carat&quot;] = &quot;t&quot;,
	[&quot;e6lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! t ! kilotonne&quot;,
	[&quot;e6ozt&quot;] = &quot;lb kg&quot;,
	[&quot;e6ST&quot;] = &quot;Mt&quot;,
	[&quot;e6t&quot;] = &quot;LT ST&quot;,
	[&quot;e9lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! kilotonne ! Mt&quot;,
	[&quot;e9t&quot;] = &quot;LT ST&quot;,
	[&quot;Gg&quot;] = &quot;lb&quot;,
	[&quot;kg&quot;] = &quot;lb&quot;,
	[&quot;mg&quot;] = &quot;gr&quot;,
	[&quot;Mg&quot;] = &quot;LT ST&quot;,
	[&quot;ng&quot;] = &quot;gr&quot;,
	[&quot;g&quot;] = &quot;gr&quot;,
	[&quot;mBq&quot;] = &quot;fCi&quot;,
	[&quot;kBq&quot;] = &quot;nCi&quot;,
	[&quot;MBq&quot;] = &quot;Ci&quot;,
	[&quot;GBq&quot;] = &quot;mCi&quot;,
	[&quot;TBq&quot;] = &quot;Ci&quot;,
	[&quot;PBq&quot;] = &quot;kCi&quot;,
	[&quot;EBq&quot;] = &quot;kCi&quot;,
	[&quot;fCi&quot;] = &quot;mBq&quot;,
	[&quot;pCi&quot;] = &quot;Bq&quot;,
	[&quot;nCi&quot;] = &quot;Bq&quot;,
	[&quot;Ci&quot;] = &quot;kBq&quot;,
	[&quot;mCi&quot;] = &quot;MBq&quot;,
	[&quot;kCi&quot;] = &quot;TBq&quot;,
	[&quot;MCi&quot;] = &quot;PBq&quot;,
	[&quot;ns&quot;] = &quot;s&quot;,
	[&quot;s&quot;] = &quot;ms&quot;,
	[&quot;ms&quot;] = &quot;s&quot;,
	[&quot;ks&quot;] = &quot;h&quot;,
	[&quot;Ms&quot;] = &quot;week&quot;,
	[&quot;Gs&quot;] = &quot;decade&quot;,
	[&quot;Ts&quot;] = &quot;millennium&quot;,
	[&quot;Ps&quot;] = &quot;million year&quot;,
	[&quot;Es&quot;] = &quot;thousand million year&quot;,
	[&quot;MK&quot;] = &quot;keVT&quot;,
	[&quot;cL&quot;] = &quot;impoz usoz&quot;,
	[&quot;cl&quot;] = &quot;impoz usoz&quot;,
	[&quot;cm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;dL&quot;] = &quot;impoz usoz&quot;,
	[&quot;dl&quot;] = &quot;impoz usoz&quot;,
	[&quot;mm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;dm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;e12cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3&quot;,
	[&quot;e12impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e12m3&quot;] = &quot;v &lt; 28.316846592 ! T ! P ! cuft&quot;,
	[&quot;e12U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e12USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e15cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e12 ! e15 ! m3&quot;,
	[&quot;e15m3&quot;] = &quot;Pcuft&quot;,
	[&quot;e3bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e3cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3&quot;,
	[&quot;e3impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e3m3&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft&quot;,
	[&quot;e3U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e3USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e6bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e6cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e6cuyd&quot;] = &quot;v * 7.64554857984 &lt; 10 ! e3 ! e6 ! m3&quot;,
	[&quot;e6impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e6L&quot;] = &quot;USgal&quot;,
	[&quot;e6m3&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft&quot;,
	[&quot;e6U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e6USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e9bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e6 ! e9 ! m3&quot;,
	[&quot;e9cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e6 ! e9 ! m3&quot;,
	[&quot;e9impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;e9m3&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft&quot;,
	[&quot;e9U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;e9USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;GL&quot;] = &quot;cuft&quot;,
	[&quot;Gl&quot;] = &quot;cuft&quot;,
	[&quot;kL&quot;] = &quot;cuft&quot;,
	[&quot;kl&quot;] = &quot;cuft&quot;,
	[&quot;km&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cumi&quot;,
	[&quot;mL&quot;] = &quot;impoz usoz&quot;,
	[&quot;ml&quot;] = &quot;impoz usoz&quot;,
	[&quot;Ml&quot;] = &quot;v &lt; 28.316846592 ! e3 ! e6 ! cuft&quot;,
	[&quot;ML&quot;] = &quot;v &lt; 28.316846592 ! e3 ! e6 ! cuft&quot;,
	[&quot;TL&quot;] = &quot;cumi&quot;,
	[&quot;Tl&quot;] = &quot;cumi&quot;,
	[&quot;L&quot;] = &quot;cuin&quot;,
	[&quot;l&quot;] = &quot;cuin&quot;,
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local link_exceptions = {
	-- Prefixed units with a linked article different from that of the base unit.
	-- Each key item is a prefixed symbol (not unitcode).
	[&quot;mm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square millimetre&quot;,
	[&quot;cm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square centimetre&quot;,
	[&quot;dm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square decimetre&quot;,
	[&quot;km&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square kilometre&quot;,
	[&quot;kJ&quot;] = &quot;Kilojoule&quot;,
	[&quot;MJ&quot;] = &quot;Megajoule&quot;,
	[&quot;fm&quot;] = &quot;Femtometre&quot;,
	[&quot;pm&quot;] = &quot;Picometre&quot;,
	[&quot;nm&quot;] = &quot;Nanometre&quot;,
	[&quot;m&quot;] = &quot;Micrometre&quot;,
	[&quot;mm&quot;] = &quot;Millimetre&quot;,
	[&quot;cm&quot;] = &quot;Centimetre&quot;,
	[&quot;dm&quot;] = &quot;Decimetre&quot;,
	[&quot;dam&quot;] = &quot;Decametre&quot;,
	[&quot;hm&quot;] = &quot;Hectometre&quot;,
	[&quot;km&quot;] = &quot;Kilometre&quot;,
	[&quot;Mm&quot;] = &quot;Megametre&quot;,
	[&quot;Gm&quot;] = &quot;Gigametre&quot;,
	[&quot;Tm&quot;] = &quot;Terametre&quot;,
	[&quot;Pm&quot;] = &quot;Petametre&quot;,
	[&quot;Em&quot;] = &quot;Exametre&quot;,
	[&quot;Zm&quot;] = &quot;Zettametre&quot;,
	[&quot;Ym&quot;] = &quot;Yottametre&quot;,
	[&quot;g&quot;] = &quot;Microgram&quot;,
	[&quot;mg&quot;] = &quot;Milligram&quot;,
	[&quot;kg&quot;] = &quot;Kilogram&quot;,
	[&quot;Mg&quot;] = &quot;Tonne&quot;,
	[&quot;yW&quot;] = &quot;Yoctowatt&quot;,
	[&quot;zW&quot;] = &quot;Zeptowatt&quot;,
	[&quot;aW&quot;] = &quot;Attowatt&quot;,
	[&quot;fW&quot;] = &quot;Femtowatt&quot;,
	[&quot;pW&quot;] = &quot;Picowatt&quot;,
	[&quot;nW&quot;] = &quot;Nanowatt&quot;,
	[&quot;W&quot;] = &quot;Microwatt&quot;,
	[&quot;mW&quot;] = &quot;Milliwatt&quot;,
	[&quot;kW&quot;] = &quot;Kilowatt&quot;,
	[&quot;MW&quot;] = &quot;Megawatt&quot;,
	[&quot;GW&quot;] = &quot;Gigawatt&quot;,
	[&quot;TW&quot;] = &quot;Terawatt&quot;,
	[&quot;PW&quot;] = &quot;Petawatt&quot;,
	[&quot;EW&quot;] = &quot;Exawatt&quot;,
	[&quot;ZW&quot;] = &quot;Zettawatt&quot;,
	[&quot;YW&quot;] = &quot;Yottawatt&quot;,
	[&quot;as&quot;] = &quot;Attosecond&quot;,
	[&quot;fs&quot;] = &quot;Femtosecond&quot;,
	[&quot;ps&quot;] = &quot;Picosecond&quot;,
	[&quot;ns&quot;] = &quot;Nanosecond&quot;,
	[&quot;s&quot;] = &quot;Microsecond&quot;,
	[&quot;ms&quot;] = &quot;Millisecond&quot;,
	[&quot;ks&quot;] = &quot;Kilosecond&quot;,
	[&quot;Ms&quot;] = &quot;Megasecond&quot;,
	[&quot;Gs&quot;] = &quot;Gigasecond&quot;,
	[&quot;Ts&quot;] = &quot;Terasecond&quot;,
	[&quot;Ps&quot;] = &quot;Petasecond&quot;,
	[&quot;Es&quot;] = &quot;Exasecond&quot;,
	[&quot;Zs&quot;] = &quot;Zettasecond&quot;,
	[&quot;Ys&quot;] = &quot;Yottasecond&quot;,
	[&quot;mm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic millimetre&quot;,
	[&quot;cm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic centimetre&quot;,
	[&quot;dm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic decimetre&quot;,
	[&quot;dam&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic decametre&quot;,
	[&quot;km&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic kilometre&quot;,
	[&quot;L&quot;] = &quot;Microlitre&quot;,
	[&quot;l&quot;] = &quot;Microlitre&quot;,
	[&quot;mL&quot;] = &quot;Millilitre&quot;,
	[&quot;ml&quot;] = &quot;Millilitre&quot;,
	[&quot;cL&quot;] = &quot;Centilitre&quot;,
	[&quot;cl&quot;] = &quot;Centilitre&quot;,
	[&quot;dL&quot;] = &quot;Decilitre&quot;,
	[&quot;dl&quot;] = &quot;Decilitre&quot;,
	[&quot;daL&quot;] = &quot;Decalitre&quot;,
	[&quot;dal&quot;] = &quot;Decalitre&quot;,
	[&quot;hL&quot;] = &quot;Hectolitre&quot;,
	[&quot;hl&quot;] = &quot;Hectolitre&quot;,
	[&quot;kL&quot;] = &quot;Kilolitre&quot;,
	[&quot;kl&quot;] = &quot;Kilolitre&quot;,
	[&quot;ML&quot;] = &quot;Megalitre&quot;,
	[&quot;Ml&quot;] = &quot;Megalitre&quot;,
	[&quot;GL&quot;] = &quot;Gigalitre&quot;,
	[&quot;Gl&quot;] = &quot;Gigalitre&quot;,
	[&quot;TL&quot;] = &quot;Teralitre&quot;,
	[&quot;Tl&quot;] = &quot;Teralitre&quot;,
	[&quot;PL&quot;] = &quot;Petalitre&quot;,
	[&quot;Pl&quot;] = &quot;Petalitre&quot;,
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local per_unit_fixups = {
	-- Automatically created per units of form &quot;x/y&quot; may have their unit type
	-- changed, for example, &quot;length/time&quot; is changed to &quot;speed&quot;.
	-- Other adjustments can also be specified.
	[&quot;$/area&quot;] = &quot;cost $ per unit area&quot;,
	[&quot;$/length&quot;] = &quot;cost $ per unit length&quot;,
	[&quot;$/mass&quot;] = &quot;cost $ per unit mass&quot;,
	[&quot;$/volume&quot;] = &quot;cost $ per unit volume&quot;,
	[&quot;/area&quot;] = &quot;cost  per unit area&quot;,
	[&quot;/area&quot;] = &quot;per unit area&quot;,
	[&quot;/volume&quot;] = &quot;per unit volume&quot;,
	[&quot;area/area&quot;] = &quot;area per unit area&quot;,
	[&quot;energy/length&quot;] = &quot;energy per unit length&quot;,
	[&quot;energy/mass&quot;] = &quot;energy per unit mass&quot;,
	[&quot;energy/time&quot;] = { utype = &quot;power&quot;, link = &quot;Power&quot; },
	[&quot;energy/volume&quot;] = &quot;energy per unit volume&quot;,
	[&quot;force/area&quot;] = { utype = &quot;pressure&quot;, link = &quot;Pressure&quot; },
	[&quot;length/length&quot;] = { utype = &quot;gradient&quot;, link = &quot;Gradient&quot; },
	[&quot;length/time&quot;] = { utype = &quot;speed&quot;, link = &quot;Speed&quot; },
	[&quot;length/time/time&quot;] = { utype = &quot;acceleration&quot;, link = &quot;Acceleration&quot; },
	[&quot;mass/area&quot;] = { utype = &quot;pressure&quot;, multiplier = 9.80665 },
	[&quot;mass/length&quot;] = &quot;linear density&quot;,
	[&quot;mass/mass&quot;] = &quot;concentration&quot;,
	[&quot;mass/power&quot;] = &quot;mass per unit power&quot;,
	[&quot;mass/time&quot;] = &quot;mass per unit time&quot;,
	[&quot;mass/volume&quot;] = { utype = &quot;density&quot;, link = &quot;Density&quot; },
	[&quot;power/mass&quot;] = &quot;power per unit mass&quot;,
	[&quot;power/volume&quot;] = { link = &quot;Power density&quot; },
	[&quot;pressure/length&quot;] = &quot;fracture gradient&quot;,
	[&quot;speed/time&quot;] = { utype = &quot;acceleration&quot;, link = &quot;Acceleration&quot; },
	[&quot;volume/area&quot;] = &quot;volume per unit area&quot;,
	[&quot;volume/length&quot;] = &quot;volume per unit length&quot;,
	[&quot;volume/time&quot;] = &quot;flow&quot;,
}

return {
	all_units = all_units,
	default_exceptions = default_exceptions,
	link_exceptions = link_exceptions,
	per_unit_fixups = per_unit_fixups,
}</text>
      <sha1>cc2q22p013hj8usve1fbpi52s7i88e6</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert/text</title>
    <ns>828</ns>
    <id>39508461</id>
    <revision>
      <id>795876380</id>
      <parentid>788386389</parentid>
      <timestamp>2017-08-17T01:39:26Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="20156">-- Text used by Module:Convert for enwiki.
-- This is a separate module to simplify translation for use on another wiki.
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.

-- Some units accept an SI prefix before the unit code, such as &quot;kg&quot; for kilogram.
local SIprefixes = {
	-- The prefix field is what the prefix should be, if different from the prefix used.
	['Y'] = { exponent = 24, name = 'yotta',                  },
	['Z'] = { exponent = 21, name = 'zetta',                  },
	['E'] = { exponent = 18, name = 'exa'  ,                  },
	['P'] = { exponent = 15, name = 'peta' ,                  },
	['T'] = { exponent = 12, name = 'tera' ,                  },
	['G'] = { exponent =  9, name = 'giga' ,                  },
	['M'] = { exponent =  6, name = 'mega' ,                  },
	['k'] = { exponent =  3, name = 'kilo' ,                  },
	['h'] = { exponent =  2, name = 'hecto',                  },
	['da']= { exponent =  1, name = 'deca' , name_us = 'deka' },
	['d'] = { exponent = -1, name = 'deci' ,                  },
	['c'] = { exponent = -2, name = 'centi',                  },
	['m'] = { exponent = -3, name = 'milli',                  },
	[''] = { exponent = -6, name = 'micro', prefix = ''     },  -- key = 'GREEK SMALL LETTER MU' (U+03BC) utf-8 CE BC
	[''] = { exponent = -6, name = 'micro',                  },  -- key = 'MICRO SIGN' (U+00B5) utf-8 C2 B5
	['u'] = { exponent = -6, name = 'micro', prefix = ''     },  -- not an SI prefix, but allow for people typing this
	['n'] = { exponent = -9, name = 'nano' ,                  },
	['p'] = { exponent =-12, name = 'pico' ,                  },
	['f'] = { exponent =-15, name = 'femto',                  },
	['a'] = { exponent =-18, name = 'atto' ,                  },
	['z'] = { exponent =-21, name = 'zepto',                  },
	['y'] = { exponent =-24, name = 'yocto',                  },
}

-- Some units can be qualified with one of the following prefixes, when linked.
local customary_units = {
	{ &quot;US&quot;, link = &quot;United States customary units&quot; },
	{ &quot;U.S.&quot;, link = &quot;United States customary units&quot; },
	{ &quot;imperial&quot;, link = &quot;Imperial units&quot; },
	{ &quot;imp&quot;, link = &quot;Imperial units&quot; },
}

-- Names when using engineering notation (a prefix of &quot;eN&quot; where N is a number; example &quot;e6km&quot;).
-- key = { &quot;name&quot;, link = &quot;article title&quot;, exponent = numeric_key_value }
-- If lk=on and link is defined, the name of the number will appear as a link.
local eng_scales = {
	[&quot;3&quot;]  = { &quot;thousand&quot;, exponent = 3 },
	[&quot;6&quot;]  = { &quot;million&quot;, exponent = 6 },
	[&quot;9&quot;]  = { &quot;billion&quot;, link = &quot;1000000000 (number)&quot;, exponent = 9 },
	[&quot;12&quot;] = { &quot;trillion&quot;, link = &quot;1000000000000 (number)&quot;, exponent = 12 },
	[&quot;15&quot;] = { &quot;quadrillion&quot;, link = &quot;1000000000000000 (number)&quot;, exponent = 15 },
}

local all_categories = {
	unit = &quot;[[Category:Convert errors]]&quot;,
	option = &quot;[[Category:Convert errors]]&quot;,
	warning = '[[Category:Convert invalid options]]',
	tracking = '[[Category:Convert tracking]]',
}

-- For some error messages, the following puts the wanted style around
-- each unit code marked like '...%{ft%}...'.
local unitcode_regex = '%%([{}])'
local unitcode_replace = { ['{'] = '&quot;', ['}'] = '&quot;' }  -- no longer need the more elaborate substitute used before 2013-09-28

-- All messages that may be displayed if a problem occurs.
local all_messages = {
	-- Message format string: $1=title, $2=text, $3=category, $4=anchor.
	-- Each displayed message starts with &quot;Convert:&quot; so can easily locate by searching article.
	cvt_format = '&lt;sup class=&quot;noprint Inline-Template&quot; style=&quot;white-space:nowrap;&quot;&gt;[&lt;i&gt;[[Help:Convert messages#$4|&lt;span title=&quot;Convert: $1&quot;&gt;convert: $2&lt;/span&gt;]]&lt;/i&gt;]&lt;/sup&gt;$3&lt;span class=&quot;error&quot;&gt;&lt;/span&gt;',
	cvt_format2 = '&lt;sup class=&quot;noprint Inline-Template&quot; style=&quot;white-space:nowrap;&quot;&gt;[[Help:Convert messages#$4|&lt;span title=&quot;Convert: $1&quot;&gt;$2&lt;/span&gt;]]&lt;/sup&gt;$3&lt;span class=&quot;error&quot;&gt;&lt;/span&gt;',
	cvt_format_preview = '&lt;strong class=&quot;error&quot;&gt;Error in convert: $1 [[Help:Convert messages#$4|(help)]]&lt;/strong&gt;$3',
	-- Each of following messages is a table:
	-- { [1] = 'title',         -- mouseover title text
	--   [2] = 'text',          -- link text displayed in article
	--   [3] = 'category key',  -- key to lookup category in all_categories
	--   [4] = 'anchor',        -- anchor for link to relevant section on help page
	--   regex = gsub_regex,
	--   replace = gsub_table,
	-- }                    Mouseover title text                           Link text               CatKey     Anchor
	cvt_bad_input      = { 'input &quot;$1&quot; must be a number and unit'       , 'invalid input'       , 'option',  'invalid_input'        },
	cvt_bad_num        = { 'Value &quot;$1&quot; must be a number'                , 'invalid number'      , 'option',  'invalid_number'       },
	cvt_big_prec       = { 'Precision &quot;$1&quot; is too large'                , 'precision too large' , 'option',  'precision_too_large'  },
	cvt_invalid_num    = { 'Number has overflowed'                      , 'number overflow'     , 'option',  'number_overflow'      },
	cvt_no_num         = { 'Needs the number to be converted'           , 'needs a number'      , 'option',  'needs_number'         },
	cvt_no_num2        = { 'Needs another number for a range'           , 'needs another number', 'option',  'needs_another_number' },
	cvt_bad_frac       = { '&quot;$1&quot; needs an integer above 1'              , 'invalid fraction'    , 'option',  'invalid_fraction'     },
	cvt_bad_prec       = { 'Precision &quot;$1&quot; must be an integer'          , 'invalid precision'   , 'option',  'invalid_precision'    },
	cvt_bad_sigfig     = { '&quot;$1&quot; needs a positive integer'              , 'invalid sigfig'      , 'option',  'invalid_sigfig'       },
	cvt_empty_option   = { 'Ignored empty option &quot;$1&quot;'                  , 'empty option'        , 'option',  'empty_option'         },
	cvt_deprecated     = { 'Option &quot;$1&quot; is deprecated'                  , '*'                   , 'option',  'deprecated_option', format = 'cvt_format2', nowarn = true },
	cvt_no_spell       = { 'Spelling is not available'                  , 'bug, ask for help'   , 'option',  'ask_for_help'         },
	cvt_unknown_option = { 'Ignored invalid option &quot;$1&quot;'                , 'invalid option'      , 'option',  'invalid_option'       },
	cvt_wd_fail        = { 'Unable to access Wikidata'                  , 'wikidata problem'    , 'option',  'wikidata_problem'     },
	cvt_bad_default    = { 'Unit &quot;$1&quot; has an invalid default'           , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_bad_unit       = { 'Unit &quot;$1&quot; is invalid here'                  , 'unit invalid here'   , 'unit'  ,  'unit_invalid_here'    },
	cvt_no_default     = { 'Unit &quot;$1&quot; has no default output unit'       , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_no_unit        = { 'Needs name of unit'                         , 'needs unit name'     , 'unit'  ,  'needs_unit_name'      },
	cvt_unknown        = { 'Unit name &quot;$1&quot; is not known'                , 'unknown unit'        , 'unit'  ,  'unknown_unit'         },
	cvt_should_be      = { '$1'                                         , 'ambiguous unit'      , 'unit'  ,  'ambiguous_unit', regex = unitcode_regex, replace = unitcode_replace },
	cvt_mismatch       = { 'Cannot convert &quot;$1&quot; to &quot;$2&quot;'                , 'unit mismatch'       , 'unit'  ,  'unit_mismatch'        },
	cvt_bug_convert    = { 'Bug: Cannot convert between specified units', 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_lookup         = { 'Unit &quot;$1&quot; is incorrectly defined'           , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
}

-- Text to join input value/unit with output value/unit.
local disp_joins = {
	-- [1]=before output, [2]=after output, [3]=between outputs in a combination; default &quot;; &quot;
	-- [wantname] gives default abbr=off
	[&quot;or&quot;]         = { &quot; or &quot;    , &quot;&quot; , &quot; or &quot;, wantname = true },
	[&quot;sqbr-sp&quot;]    = { &quot; [&quot;      , &quot;]&quot; },
	[&quot;sqbr-nbsp&quot;]  = { &quot;&amp;nbsp;[&quot; , &quot;]&quot; },
	[&quot;comma&quot;]      = { &quot;, &quot;      , &quot;&quot; , &quot;, &quot; },
	[&quot;slash-sp&quot;]   = { &quot; / &quot;     , &quot;&quot; , wantname = true },
	[&quot;slash-nbsp&quot;] = { &quot;&amp;nbsp;/ &quot;, &quot;&quot; , wantname = true },
	[&quot;slash-nosp&quot;] = { &quot;/&quot;       , &quot;&quot; , wantname = true },
	[&quot;b&quot;]          = { &quot; (&quot;      , &quot;)&quot; },
	[&quot;(or)&quot;]       = { &quot; (&quot;      , &quot;)&quot;, &quot; or &quot; },
	[&quot;br&quot;]         = { &quot;&lt;br /&gt;&quot;  , &quot;&quot; , wantname = true },
	[&quot;br()&quot;]       = { &quot;&lt;br /&gt;(&quot; , &quot;)&quot;, wantname = true },
}

-- Text to separate values in a range.
local range_types = {
	-- Specifying a table requires either:
	-- * &quot;off&quot; and &quot;on&quot; values (for &quot;abbr=off&quot; and &quot;abbr=on&quot;), or
	-- * &quot;input&quot; and &quot;output&quot; values (for LHS and RHS);
	-- other fields are optional.
	-- When &quot;adj=on|abbr=off&quot; applies, spaces in range text are replaced with hyphens.
	-- With &quot;exception = true&quot;, that also occurs with &quot;adj=on|abbr=on&quot;.
	-- If &quot;adj&quot; is defined here, that text (unchanged) is used with &quot;adj=on&quot;.
	[&quot;+&quot;]      = &quot; + &quot;,
	[&quot;,&quot;]      = &quot;,&amp;nbsp;&quot;,
	[&quot;, and&quot;]  = &quot;, and &quot;,
	[&quot;, or&quot;]   = &quot;, or &quot;,
	[&quot;by&quot;]     = &quot; by &quot;,
	[&quot;-&quot;]      = &quot;&quot;,
	[&quot;to about&quot;] = &quot; to about &quot;,
	[&quot;and&quot;]    = { off = &quot; and &quot;, on = &quot; and &quot;, exception = true },
	[&quot;and(-)&quot;] = { input = &quot; and &quot;, output = &quot;&quot; },
	[&quot;or&quot;]     = { off = &quot; or &quot; , on = &quot; or &quot; , exception = true },
	[&quot;to&quot;]     = { off = &quot; to &quot; , on = &quot; to &quot; , exception = true },
	[&quot;to(-)&quot;]  = { input = &quot;&amp;nbsp;to &quot;, output = &quot;&quot; },
	[&quot;+/-&quot;]    = { off = &quot;&amp;nbsp;&amp;nbsp;&quot;, on = &quot;&amp;nbsp;&amp;nbsp;&quot;, adj = &quot;&amp;nbsp;&amp;nbsp;&quot;, is_range_change = true },
	[&quot;by(x)&quot;]  = { input = &quot; by &quot;, output = &quot; &amp;nbsp;&quot;, out_range_x = true },
	[&quot;x&quot;]      = { off = &quot; by &quot;, on = &quot; &amp;nbsp;&quot;, abbr_range_x = true },
	[&quot;xx&quot;]     = &quot;&amp;nbsp;&amp;nbsp;&quot;,
	[&quot;*&quot;]      = &quot;&quot;,  -- use &quot;*&quot; to replace &quot;x&quot; in {{convert/2}} which is different from &quot;x&quot; in old {{convert}}
	[&quot;/&quot;]      = &quot;&amp;thinsp;/&amp;thinsp;&quot;,  -- for a table of high/low temperatures with {{convert|83|/|63|F|disp=br()|abbr=values}}
	[&quot;#&quot;]      = { off = &quot;, &quot;, on = &quot;, &quot;, abbr_range_x = true, adj = &quot;&amp;nbsp;&amp;nbsp;&quot; },  -- to show multiple Wikidata values
}

local range_aliases = {
	-- [&quot;alternative name for a range&quot;] = &quot;standard range name&quot;
	[&quot;&amp;&quot;]        = &quot;and&quot;,
	[&quot;&quot;]        = &quot;-&quot;,
	[&quot;&amp;ndash;&quot;]  = &quot;-&quot;,
	[&quot;to-&quot;]      = &quot;to(-)&quot;,
	[&quot;&quot;]        = &quot;x&quot;,
	[&quot;&amp;times;&quot;]  = &quot;x&quot;,
	[&quot;&quot;]        = &quot;+/-&quot;,
	[&quot;&amp;plusmn;&quot;] = &quot;+/-&quot;,
}

-- Convert accepts range text delimited with whitespace, for example, {{convert|1 to 2|ft}}.
-- In addition, the following &quot;words&quot; are accepted without spaces, for example, {{convert|1-2|ft}}.
-- Words must be in correct order for searching, for example, 'x' after 'xx'.
local range_words = { '-', '', 'xx', 'x', '*' }

local ranges = {
	types = range_types,
	aliases = range_aliases,
	words = range_words,
}

-- Valid option names.
local en_option_name = {
	-- [&quot;local text for option name&quot;] = &quot;en name used in this module&quot;
	[&quot;$&quot;] = &quot;$&quot;,
	[&quot;abbr&quot;] = &quot;abbr&quot;,
	[&quot;adj&quot;] = &quot;adj&quot;,
	[&quot;comma&quot;] = &quot;comma&quot;,
	[&quot;debug&quot;] = &quot;debug&quot;,
	[&quot;disp&quot;] = &quot;disp&quot;,
	[&quot;frac&quot;] = &quot;frac&quot;,
	[&quot;input&quot;] = &quot;input&quot;,
	[&quot;lang&quot;] = &quot;lang&quot;,
	[&quot;lk&quot;] = &quot;lk&quot;,
	[&quot;near&quot;] = &quot;near&quot;,
	[&quot;order&quot;] = &quot;order&quot;,
	[&quot;qid&quot;] = &quot;qid&quot;,
	[&quot;qual&quot;] = &quot;qual&quot;,
	[&quot;qualifier&quot;] = &quot;qual&quot;,
	[&quot;round&quot;] = &quot;round&quot;,
	[&quot;sigfig&quot;] = &quot;sigfig&quot;,
	[&quot;sing&quot;] = &quot;adj&quot;,                   -- &quot;sing&quot; is an old alias for &quot;adj&quot;
	[&quot;sortable&quot;] = &quot;sortable&quot;,
	[&quot;sp&quot;] = &quot;sp&quot;,
	[&quot;spell&quot;] = &quot;spell&quot;,
	[&quot;stylein&quot;] = &quot;stylein&quot;,
	[&quot;styleout&quot;] = &quot;styleout&quot;,
	[&quot;tracking&quot;] = &quot;tracking&quot;,
}

-- Valid option values.
-- Convention: parms.opt_xxx refers to an option that is set here
-- (not intended to be set by the template which invokes this module).
-- Example: At enwiki, &quot;abbr&quot; includes:
--     [&quot;comma&quot;] = &quot;opt_nocomma&quot;
-- As a result, if the template uses abbr=comma, Module:Convert sets:
--     parms[&quot;opt_nocomma&quot;] = true
--     parms[&quot;abbr&quot;] = nil
-- Therefore parms.abbr will be nil, or will have one of the listed values
-- that do not start with &quot;opt_&quot;.
-- An option value of form &quot;xxx?&quot; is the same as &quot;xxx&quot; but shows the input as deprecated.
local en_option_value = {
	-- $=x is handled as a special case: x should be a currency symbol that will be used instead of &quot;$&quot;
	[&quot;abbr&quot;] = {
		-- [&quot;local text for option value&quot;] = &quot;en value used in this module&quot;
		[&quot;comma&quot;] = &quot;opt_nocomma?&quot;,     -- no numsep in input or output numbers
		[&quot;def&quot;] = &quot;&quot;,                   -- ignored (some wrapper templates call convert with &quot;abbr=def&quot; to mean &quot;default abbreviation&quot;)
		[&quot;h&quot;] = &quot;on&quot;,                   -- abbr=on + use &quot;h&quot; for hand unit (default)
		[&quot;hh&quot;] = &quot;opt_hand_hh&quot;,         -- abbr=on + use &quot;hh&quot; for hand unit
		[&quot;in&quot;] = &quot;in&quot;,                  -- use symbol for LHS unit
		[&quot;mos&quot;] = &quot;mos&quot;,                -- in a range, repeat the input unit (no longer used)
		[&quot;none&quot;] = &quot;off&quot;,               -- old name for &quot;off&quot;
		[&quot;off&quot;] = &quot;off&quot;,                -- use name for all units
		[&quot;on&quot;] = &quot;on&quot;,                  -- use symbol for all units
		[&quot;out&quot;] = &quot;out&quot;,                -- use symbol for RHS unit (default)
		[&quot;unit&quot;] = &quot;unit&quot;,              -- abbr=on but abbreviate units only: e6km  million km (not 10 km)
		[&quot;values&quot;] = &quot;opt_values&quot;,      -- show only input and output numbers, not units
		[&quot;~&quot;] = &quot;opt_also_symbol&quot;,      -- show input unit symbol as well as name
	},
	[&quot;adj&quot;] = {
		[&quot;1&quot;] = &quot;opt_singular&quot;,         -- unit name is singular when value satisfies: (-1 &lt;= v and v &lt; 0) or (0 &lt; v and v &lt;= 1)
		[&quot;flip&quot;] = &quot;opt_flip?&quot;,         -- reverse order of input/output
		[&quot;j&quot;] = &quot;opt_use_nbsp&quot;,         -- &quot;join&quot;: use &quot;&amp;nbsp;&quot; instead of &quot; &quot; between value and unit name
		[&quot;mid&quot;] = &quot;opt_adjectival, opt_adj_mid&quot;,  -- adj=on with user-specified text after input unit (between input and output)
		[&quot;nocomma&quot;] = &quot;opt_nocomma?&quot;,   -- no numsep in input or output numbers
		[&quot;off&quot;] = &quot;&quot;,                   -- ignored (off is the default)
		[&quot;on&quot;] = &quot;opt_adjectival&quot;,      -- unit name is singular and hyphenated
		[&quot;pre&quot;] = &quot;opt_one_preunit&quot;,    -- user-specified text before input unit
		[&quot;ri0&quot;] = &quot;opt_ri=0&quot;,           -- round input with precision = 0
		[&quot;ri1&quot;] = &quot;opt_ri=1&quot;,           -- round input with precision = 1
		[&quot;ri2&quot;] = &quot;opt_ri=2&quot;,           -- round input with precision = 2
		[&quot;ri3&quot;] = &quot;opt_ri=3&quot;,           -- round input with precision = 3
	},
	[&quot;comma&quot;] = {
		[&quot;5&quot;] = &quot;opt_comma5&quot;,           -- only use numsep grouping if 5 or more digits
		[&quot;gaps&quot;] = &quot;opt_gaps&quot;,          -- use gaps, not numsep, to separate groups of digits
		[&quot;gaps3&quot;] = &quot;opt_gaps, opt_gaps3&quot;,  -- group only in threes rather than default of no gap before a single digit after decimal mark
		[&quot;gaps5&quot;] = &quot;opt_gaps?&quot;,        -- deprecated 2015-05-29, was: opt_gaps + opt_comma5
		[&quot;off&quot;] = &quot;opt_nocomma&quot;,        -- no numsep in input or output numbers
	},
	[&quot;debug&quot;] = {
		[&quot;yes&quot;] = &quot;opt_sortable_debug&quot;, -- make the normally hidden sort key visible
	},
	[&quot;disp&quot;] = {
		[&quot;/&quot;] = &quot;or?&quot;,                  -- see &quot;slash&quot;
		[&quot;2&quot;] = &quot;opt_output_only?&quot;,     -- display only output value and symbol/name (not input)
		[&quot;5&quot;] = &quot;opt_round=5&quot;,          -- round output value to nearest 5
		[&quot;b&quot;] = &quot;b&quot;,                    -- join: '(...)'
		[&quot;(or)&quot;] = &quot;(or)&quot;,              -- join: '(...)' with 'or' between outputs in a combination
		[&quot;br&quot;] = &quot;br&quot;,                  -- join: '&lt;br /&gt;'
		[&quot;br()&quot;] = &quot;br()&quot;,              -- join: '&lt;br /&gt;(...)'
		[&quot;comma&quot;] = &quot;comma&quot;,            -- join: ','
		[&quot;flip&quot;] = &quot;opt_flip&quot;,          -- reverse order of input/output
		[&quot;flip5&quot;] = &quot;opt_flip, opt_round=5?&quot;,  -- disp=flip + disp=5
		[&quot;nocomma&quot;] = &quot;opt_nocomma?&quot;,   -- no numsep in input or output numbers
		[&quot;number&quot;] = &quot;opt_output_number_only&quot;,  -- display output value (not input, and not output symbol/name)
		[&quot;or&quot;] = &quot;or&quot;,                  -- join: 'or'
		[&quot;out&quot;] = &quot;opt_output_only&quot;,
		[&quot;output number only&quot;] = &quot;opt_output_number_only&quot;,
		[&quot;output only&quot;] = &quot;opt_output_only&quot;,
		[&quot;preunit&quot;] = &quot;opt_two_preunits&quot;,    -- user-specified text before input and output units
		[&quot;s&quot;] = &quot;or?&quot;,                  -- see &quot;slash&quot;
		[&quot;slash&quot;] = &quot;or?&quot;,              -- 2014-11-03: &quot;disp=slash&quot; is now equivalent to &quot;disp=or&quot; as slash is unhelpful
		[&quot;sqbr&quot;] = &quot;sqbr&quot;,              -- join: '[...]'
		[&quot;table&quot;] = &quot;opt_table&quot;,        -- output is suitable for a table cell with align=&quot;right&quot;
		[&quot;tablecen&quot;] = &quot;opt_tablecen&quot;,  -- output is suitable for a table cell with align=&quot;center&quot;
		[&quot;u2&quot;] = &quot;opt_output_unit_only?&quot;, -- display output symbol/name (not input, and not output value)
		[&quot;unit&quot;] = &quot;opt_input_unit_only&quot;, -- display input symbol/name (not output, and not input value)
		[&quot;unit or text&quot;] = &quot;opt_input_unit_only, opt_ignore_error&quot;, -- display input symbol/name, or given unit code if not known
		[&quot;unit2&quot;] = &quot;opt_output_unit_only&quot;,
		[&quot;x&quot;] = &quot;x&quot;,                    -- join: &lt;first&gt;...&lt;second&gt; (user-specified text)
	},
	-- frac=x is handled as a special case: x must be an integer (possibly in local language) = 2 or more
	-- input=x is handled as a special case: x should be &lt;value&gt;&lt;space&gt;&lt;unitcode&gt; or &lt;wikidata-property-id&gt;
	[&quot;lang&quot;] = {                        -- language for output digits (both en and local digits are always accepted for input)
		[&quot;en&quot;] = &quot;opt_lang_en&quot;,         -- use en digits for numbers, regardless of local language
		[&quot;local&quot;] = &quot;opt_lang_local&quot;,   -- use local digits for numbers (default, although config can change default to en)
	},
	[&quot;lk&quot;] = {
		[&quot;in&quot;] = &quot;in&quot;,                  -- link LHS unit name or symbol
		[&quot;off&quot;] = &quot;off&quot;,                -- do not link: same as default except for hand unit
		[&quot;on&quot;] = &quot;on&quot;,                  -- link all unit names or symbols (but not twice for the same unit)
		[&quot;out&quot;] = &quot;out&quot;,                -- link RHS unit name or symbol
	},
	[&quot;near&quot;] = {
		[&quot;5&quot;] = &quot;opt_round=5?&quot;,         -- round output value to nearest 5
	},
	[&quot;order&quot;] = {
		[&quot;flip&quot;] = &quot;opt_flip&quot;,          -- reverse order of input/output
		[&quot;out&quot;] = &quot;opt_order_out&quot;,      -- do not show input; instead, use order in output combination, with the first output shown as the input
	},
	-- qid=x is handled as a special case: x should be a Wikidata Q item identifier.
	-- qual=x is handled as a special case: x should be a Wikidata Q item identifier.
	[&quot;round&quot;] = {
		[&quot;0.5&quot;] = &quot;opt_round=0.5&quot;,      -- round output value to nearest 0.5
		[&quot;5&quot;] = &quot;opt_round=5&quot;,          -- round output value to nearest 5
		[&quot;10&quot;] = &quot;opt_round=10&quot;,        -- round output value to nearest 10 (same as but clearer than &quot;|-1&quot;)
		[&quot;25&quot;] = &quot;opt_round=25&quot;,        -- round output value to nearest 25
		[&quot;50&quot;] = &quot;opt_round=50&quot;,        -- round output value to nearest 50
		[&quot;each&quot;] = &quot;opt_round_each&quot;,    -- using default precision in a range, round each output separately (default uses highest precision of each item in range)
	},
	-- sigfig=x is handled as a special case: x must be an integer (possibly in local language) = 1 or more
	[&quot;sortable&quot;] = {
		[&quot;off&quot;] = &quot;&quot;,                   -- ignored (off is the default)
		[&quot;in&quot;] = &quot;opt_sortable_on?&quot;,    -- same as &quot;on&quot;
		[&quot;on&quot;] = &quot;opt_sortable_on&quot;,     -- output sort key for use in a sortable table, based on value from converting to a standard base unit
		[&quot;out&quot;] = &quot;opt_sortable_on?&quot;,   -- same as &quot;on&quot;
	},
	[&quot;sp&quot;] = {
		[&quot;us&quot;] = &quot;opt_sp_us&quot;,           -- use U.S. spelling (like &quot;meter&quot; instead of default &quot;metre&quot;)
	},
	[&quot;spell&quot;] = {                       -- only English spelling is supported; not scientific notation; only some fractions
		[&quot;in&quot;] = &quot;opt_spell_in&quot;,        -- spell input value in words
		[&quot;In&quot;] = &quot;opt_spell_in, opt_spell_upper&quot;,                -- spell input value in words with first letter uppercase
		[&quot;on&quot;] = &quot;opt_spell_in, opt_spell_out&quot;,                  -- spell input and output values in words
		[&quot;On&quot;] = &quot;opt_spell_in, opt_spell_out, opt_spell_upper&quot;, -- same, with first letter of first word in result uppercase
	},
	-- stylein=x is handled as a special case: x can be any text
	-- styleout=x is handled as a special case: x can be any text
	-- tracking=x is handled as a special case: x can be any text
}

return {
	SIprefixes = SIprefixes,
	all_categories = all_categories,
	all_messages = all_messages,
	currency = { ['$'] = true, [''] = true },
	customary_units = customary_units,
	disp_joins = disp_joins,
	en_option_name = en_option_name,
	en_option_value = en_option_value,
	eng_scales = eng_scales,
	ranges = ranges,
}</text>
      <sha1>39ore4pqagg8qc5v05d5r6l2w6h2smh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Delink</title>
    <ns>828</ns>
    <id>38999128</id>
    <revision>
      <id>695173753</id>
      <parentid>617654635</parentid>
      <timestamp>2015-12-14T07:03:21Z</timestamp>
      <contributor>
        <username>The Earwig</username>
        <id>7418060</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Delink]]&quot;: [[WP:High-risk templates|Highly visible template]]: 55,000+ mainspace transclusions ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6545">-- This module de-links most wikitext.

require('Module:No globals')

local p = {}

local getArgs

local function delinkReversePipeTrick(s)
    if s:match(&quot;^%[%[|.*[|\n]&quot;) then -- Check for newlines or multiple pipes.
        return s
    else
        return s:match(&quot;%[%[|(.*)%]%]&quot;)
    end
end

local function delinkPipeTrick(s)
    local linkarea, display = &quot;&quot;, &quot;&quot;
    -- We need to deal with colons, brackets, and commas, per [[Help:Pipe trick]].
    
    -- First, remove the text before the first colon, if any.
    if s:match(&quot;:&quot;) then
        s = s:match(&quot;%[%[.-:(.*)|%]%]&quot;)
    -- If there are no colons, grab all of the text apart from the square brackets and the pipe.
    else
        s = s:match(&quot;%[%[(.*)|%]%]&quot;)
    end
    
    -- Next up, brackets and commas.
    if s:match(&quot;%(.-%)$&quot;) then -- Brackets trump commas.
        s = s:match(&quot;(.-) ?%(.-%)$&quot;)
    elseif s:match(&quot;,&quot;) then -- If there are no brackets, display only the text before the first comma.
        s = s:match(&quot;(.-),.*$&quot;)
    end
    return s
end

local function delinkWikilink(s)
    local result = s
    -- Deal with the reverse pipe trick.
    if result:match(&quot;%[%[|&quot;) then
        return delinkReversePipeTrick(result)
    end
    
    result = mw.uri.decode(result, &quot;PATH&quot;) -- decode percent-encoded entities. Leave underscores and plus signs.
    result = mw.text.decode(result, true) -- decode HTML entities.
    
    -- Check for bad titles. To do this we need to find the
    -- title area of the link, i.e. the part before any pipes.
    local titlearea
    if result:match(&quot;|&quot;) then -- Find if we're dealing with a piped link.
        titlearea = result:match(&quot;^%[%[(.-)|.*%]%]&quot;)
    else
        titlearea = result:match(&quot;^%[%[(.-)%]%]&quot;)
    end
    -- Check for bad characters.
    if mw.ustring.match(titlearea, &quot;[%[%]&lt;&gt;{}%%%c\n]&quot;) then
        return s
    end
    
    -- Check for categories, interwikis, and files.
    local colonprefix = result:match(&quot;%[%[(.-):.*%]%]&quot;) or &quot;&quot; -- Get the text before the first colon.
    local ns = mw.site.namespaces[colonprefix] -- see if this is a known namespace
    if mw.language.isKnownLanguageTag(colonprefix)
    or ( ns and ( ns.canonicalName == &quot;File&quot; or ns.canonicalName == &quot;Category&quot; ) ) then
        return &quot;&quot;
    end
    
    -- Remove the colon if the link is using the [[Help:Colon trick]].
    if result:match(&quot;%[%[:&quot;) then
        result = &quot;[[&quot; .. result:match(&quot;%[%[:(.*%]%])&quot;)
    end
    
    -- Deal with links using the [[Help:Pipe trick]].
    if mw.ustring.match(result, &quot;^%[%[[^|]*|%]%]&quot;) then
        return delinkPipeTrick(result)
    end
    
    -- Find the display area of the wikilink
    if result:match(&quot;|&quot;) then -- Find if we're dealing with a piped link.
        result = result:match(&quot;^%[%[.-|(.+)%]%]&quot;)
        -- Remove new lines from the display of multiline piped links,
        -- where the pipe is before the first new line.
        result = result:gsub(&quot;\n&quot;, &quot;&quot;)
    else
        result = result:match(&quot;^%[%[(.-)%]%]&quot;)
    end

    return result
end

local function delinkURL(s)
    -- Assume we have already delinked internal wikilinks, and that
    -- we have been passed some text between two square brackets [foo].
    
    -- If the text contains a line break it is not formatted as a URL, regardless of other content.
    if s:match(&quot;\n&quot;) then
        return s
    end
    
    -- Check if the text has a valid URL prefix and at least one valid URL character.
    local valid_url_prefixes = {&quot;//&quot;, &quot;http://&quot;, &quot;https://&quot;, &quot;ftp://&quot;, &quot;gopher://&quot;, &quot;mailto:&quot;, &quot;news:&quot;, &quot;irc://&quot;} 
    local url_prefix
    for i,v in ipairs(valid_url_prefixes) do
        if mw.ustring.match(s, '^%[' .. v ..'[^&quot;%s].*%]' ) then
            url_prefix = v
            break
        end
    end
    
    -- Get display text
    if not url_prefix then
        return s
    end
    s = s:match(&quot;^%[&quot; .. url_prefix .. &quot;(.*)%]&quot;) -- Grab all of the text after the URL prefix and before the final square bracket.
    s = s:match('^.-([&quot;&lt;&gt; ].*)') or &quot;&quot; -- Grab all of the text after the first URL separator character (&quot;&lt;&gt; ).
    s = mw.ustring.match(s, &quot;^%s*(%S.*)$&quot;) or &quot;&quot; -- If the separating character was a space, trim it off.
    
    local s_decoded = mw.text.decode(s, true)
    if mw.ustring.match(s_decoded, &quot;%c&quot;) then
        return s
    else    
        return s_decoded
    end
end

local function delinkLinkClass(s, pattern, delinkFunction)
    if not type(s) == &quot;string&quot; then
        error(&quot;Attempt to de-link non-string input.&quot;, 2)
    end
    if not ( type(pattern) == &quot;string&quot; and mw.ustring.sub(pattern, 1, 1) == &quot;^&quot; ) then
        error('Invalid pattern detected. Patterns must begin with &quot;^&quot;.', 2)
    end
    -- Iterate over the text string, and replace any matched text. using the 
    -- delink function. We need to iterate character by character rather 
    -- than just use gsub, otherwise nested links aren't detected properly.
    local result = &quot;&quot;
    while s ~= '' do
        -- Replace text using one iteration of gsub.
        s = mw.ustring.gsub(s, pattern, delinkFunction, 1)
        -- Append the left-most character to the result string.
        result = result .. mw.ustring.sub(s, 1, 1)
        s = mw.ustring.sub(s, 2, -1)
    end
    return result
end

function p._delink(args)
    local text = args[1] or &quot;&quot;
    if args.refs == &quot;yes&quot; then
        -- Remove any [[Help:Strip markers]] representing ref tags. In most situations 
        -- this is not a good idea - only use it if you know what you are doing!
        text = mw.ustring.gsub(text, &quot;UNIQ%w*%-ref%-%d*%-QINU&quot;, &quot;&quot;)
    end
    if not (args.comments == &quot;no&quot;) then
        text = text:gsub(&quot;&lt;!%-%-.-%-%-&gt;&quot;, &quot;&quot;) -- Remove html comments.
    end
    if not (args.wikilinks == &quot;no&quot;) then
        text = delinkLinkClass(text, &quot;^%[%[.-%]%]&quot;, delinkWikilink) -- De-link wikilinks.
    end
    if not (args.urls == &quot;no&quot;) then
        text = delinkLinkClass(text, &quot;^%[.-%]&quot;, delinkURL) -- De-link URLs.
    end
    if not (args.whitespace == &quot;no&quot;) then
        -- Replace single new lines with a single space, but leave double new lines
        -- and new lines only containing spaces or tabs before a second new line.
        text = mw.ustring.gsub(text, &quot;([^\n \t][ \t]*)\n([ \t]*[^\n \t])&quot;, &quot;%1 %2&quot;)
        text = text:gsub(&quot;[ \t]+&quot;, &quot; &quot;) -- Remove extra tabs and spaces.
    end
    return text
end

function p.delink(frame)
    if not getArgs then
    	getArgs = require('Module:Arguments').getArgs
    end
    return p._delink(getArgs(frame, {wrappers = 'Template:Delink'}))
end

return p</text>
      <sha1>9uut60bk5e8nnvyxo8jbf7qt3b17a4v</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Effective protection expiry</title>
    <ns>828</ns>
    <id>48785459</id>
    <revision>
      <id>744227741</id>
      <parentid>740797535</parentid>
      <timestamp>2016-10-13T22:30:40Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>don't error if the page isn't under PC</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1494">local p = {}

-- Returns the expiry of a restriction of an action on a given title, or unknown if it cannot be known.
-- If no title is specified, the title of the page being displayed is used.
function p._main(action, pagename)
	local title
	if type(pagename) == 'table' and pagename.prefixedText then
		title = pagename
	elseif pagename then
		title = mw.title.new(pagename)
	else
		title = mw.title.getCurrentTitle()
	end
	pagename = title.prefixedText
	if action == 'autoreview' then
		local stabilitySettings = mw.ext.FlaggedRevs.getStabilitySettings(title)
		return stabilitySettings and stabilitySettings.expiry or 'unknown'
	elseif action ~= 'edit' and action ~= 'move' and action ~= 'create' and action ~= 'upload' then
		error( 'First parameter must be one of edit, move, create, upload, autoreview', 2 )
	end
	local rawExpiry = mw.getCurrentFrame():callParserFunction('PROTECTIONEXPIRY', action, pagename)
	if rawExpiry == 'infinity' then
		return 'infinity'
	elseif rawExpiry == '' then
		return 'unknown'
	else
		local year, month, day, hour, minute, second = rawExpiry:match(
			'^(%d%d%d%d)(%d%d)(%d%d)(%d%d)(%d%d)(%d%d)$'
		)
		if year then
			return string.format(
				'%s-%s-%sT%s:%s:%s',
				year, month, day, hour, minute, second
			)
		else
			error('internal error in Module:Effective protection expiry; malformed expiry timestamp')
		end
	end
end

setmetatable(p, { __index = function(t, k)
	return function(frame)
		return t._main(k, frame.args[1])
	end
end })

return p</text>
      <sha1>i1wms02y1w048cq6uttka18a5pjzp63</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Effective protection level</title>
    <ns>828</ns>
    <id>41617327</id>
    <revision>
      <id>713934935</id>
      <parentid>708059351</parentid>
      <timestamp>2016-04-06T17:04:11Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>handle extendedconfirmed</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3018">local p = {}

-- Returns the permission required to perform a given action on a given title.
-- If no title is specified, the title of the page being displayed is used.
function p._main(action, pagename)
	local title
	if type(pagename) == 'table' and pagename.prefixedText then
		title = pagename
	elseif pagename then
		title = mw.title.new(pagename)
	else
		title = mw.title.getCurrentTitle()
	end
	pagename = title.prefixedText
	if action == 'autoreview' then
		local level = mw.ext.FlaggedRevs.getStabilitySettings(title)
		level = level and level.autoreview
		if level == 'review' then
			return 'reviewer'
		elseif level ~= '' then
			return level
		else
			return nil -- not '*'. a page not being PC-protected is distinct from it being PC-protected with anyone able to review. also not '', as that would mean PC-protected but nobody can review
		end
	elseif action ~= 'edit' and action ~= 'move' and action ~= 'create' and action ~= 'upload' then
		error( 'First parameter must be one of edit, move, create, upload, autoreview', 2 )
	end
	if title.namespace == 8 then -- MediaWiki namespace
		return 'sysop'
	elseif title.namespace == 2 and title.isSubpage and ( title.contentModel == 'javascript' or title.contentModel == 'css' ) then -- user JS or CSS page
		return 'sysop'
	end
	local level = title.protectionLevels[action] and title.protectionLevels[action][1]
	if level == 'sysop' or level == 'editprotected' then
		return 'sysop'
	elseif title.cascadingProtection.restrictions[action] and title.cascadingProtection.restrictions[action][1] then -- used by a cascading-protected page
		return 'sysop'
	elseif level == 'templateeditor' then
		return 'templateeditor'
	elseif action == 'move' then
		local blacklistentry = mw.ext.TitleBlacklist.test('edit', pagename) -- Testing action edit is correct, since this is for the source page. The target page name gets tested with action move.
		if blacklistentry and not blacklistentry.params.autoconfirmed then
			return 'templateeditor'
		elseif title.namespace == 6 then
			return 'filemover'
		elseif level == 'extendedconfirmed' then
			return 'extendedconfirmed'
		else
			return 'autoconfirmed'
		end
	end
	local blacklistentry = mw.ext.TitleBlacklist.test(action, pagename)
	if blacklistentry then
		if not blacklistentry.params.autoconfirmed then
			return 'templateeditor'
		elseif level == 'extendedconfirmed' then
			return 'extendedconfirmed'
		else
			return 'autoconfirmed'
		end
	elseif level == 'editsemiprotected' then -- create-semiprotected pages return this for some reason
		return 'autoconfirmed'
	elseif level then
		return level
	elseif action == 'upload' then
		return 'autoconfirmed'
	elseif action == 'create' and title.namespace % 2 == 0 and title.namespace ~= 118 then -- You need to be registered, but not autoconfirmed, to create non-talk pages other than drafts
		return 'user'
	else
		return '*'
	end
end

setmetatable(p, { __index = function(t, k)
	return function(frame)
		return t._main(k, frame.args[1])
	end
end })

return p</text>
      <sha1>6hocqvqqlqw255k1l856h6hwlqsf6e1</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Error</title>
    <ns>828</ns>
    <id>38948927</id>
    <revision>
      <id>750709040</id>
      <parentid>636708920</parentid>
      <timestamp>2016-11-21T11:11:11Z</timestamp>
      <contributor>
        <username>Materialscientist</username>
        <id>7852030</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:Error]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1129">-- This module implements {{error}}.

local p = {}

local function _error(args)
    local tag = mw.ustring.lower(tostring(args.tag))

    -- Work out what html tag we should use.
    if not (tag == 'p' or tag == 'span' or tag == 'div') then
        tag = 'strong'
    end

    -- Generate the html.
    return tostring(mw.html.create(tag)
        :addClass('error')
        :wikitext(tostring(args.message or args[1] or error('no message specified', 2)))
    )
end

function p.error(frame)
    local args
    if type(frame.args) == 'table' then
        -- We're being called via #invoke. The args are passed through to the module
        -- from the template page, so use the args that were passed into the template.
        args = frame.args
    else
        -- We're being called from another module or from the debug console, so assume
        -- the args are passed in directly.
        args = frame
    end
    -- if the message parameter is present but blank, change it to nil so that Lua will
    -- consider it false.
    if args.message == &quot;&quot; then
        args.message = nil
    end
    return _error(args)
end

return p</text>
      <sha1>swpvwjcdmj2mkkmx9f7rbsdrfsnmirh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:File link</title>
    <ns>828</ns>
    <id>42903140</id>
    <revision>
      <id>638642222</id>
      <parentid>638639021</parentid>
      <timestamp>2014-12-18T14:05:07Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>when calling this from wikitext use a more readable error message for missing file parameters</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2544">-- This module provides a library for formatting file wikilinks.

local yesno = require('Module:Yesno')
local checkType = require('libraryUtil').checkType

local p = {}

function p._main(args)
	checkType('_main', 1, args, 'table')

	-- This is basically libraryUtil.checkTypeForNamedArg, but we are rolling our
	-- own function to get the right error level.
	local function checkArg(key, val, level)
		if type(val) ~= 'string' then
			error(string.format(
				&quot;type error in '%s' parameter of '_main' (expected string, got %s)&quot;,
				key, type(val)
			), level)
		end
	end

	local ret = {}

	-- Adds a positional parameter to the buffer.
	local function addPositional(key)
		local val = args[key]
		if not val then
			return nil
		end
		checkArg(key, val, 4)
		ret[#ret + 1] = val
	end

	-- Adds a named parameter to the buffer. We assume that the parameter name
	-- is the same as the argument key.
	local function addNamed(key)
		local val = args[key]
		if not val then
			return nil
		end
		checkArg(key, val, 4)
		ret[#ret + 1] = key .. '=' .. val
	end

	-- Filename
	checkArg('file', args.file, 3)
	ret[#ret + 1] = 'File:' .. args.file

	-- Format
	if args.format then
		checkArg('format', args.format)
		if args.formatfile then
			checkArg('formatfile', args.formatfile)
			ret[#ret + 1] = args.format .. '=' .. args.formatfile
		else
			ret[#ret + 1] = args.format
		end
	end

	-- Border
	if yesno(args.border) then
		ret[#ret + 1] = 'border'
	end

	addPositional('location')
	addPositional('alignment')
	addPositional('size')
	addNamed('upright')
	addNamed('link')
	addNamed('alt')
	addNamed('page')
	addNamed('class')
	addNamed('lang')
	addNamed('start')
	addNamed('end')
	addNamed('thumbtime')
	addPositional('caption')

	return string.format('[[%s]]', table.concat(ret, '|'))
end

function p.main(frame)
	local origArgs = require('Module:Arguments').getArgs(frame, {
		wrappers = 'Template:File link'
	})
	if not origArgs.file then
		error(&quot;'file' parameter missing from [[Template:File link]]&quot;, 0)
	end

	-- Copy the arguments that were passed to a new table to avoid looking up
	-- every possible parameter in the frame object.
	local args = {}
	for k, v in pairs(origArgs) do
		-- Make _BLANK a special argument to add a blank parameter. For use in
		-- conditional templates etc. it is useful for blank arguments to be
		-- ignored, but we still need a way to specify them so that we can do
		-- things like [[File:Example.png|link=]].
		if v == '_BLANK' then
			v = ''
		end
		args[k] = v
	end
	return p._main(args)
end

return p</text>
      <sha1>bzc22v133v9z5yc4aisazripn6l94p8</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Footnotes</title>
    <ns>828</ns>
    <id>38969239</id>
    <revision>
      <id>801298978</id>
      <parentid>790056011</parentid>
      <timestamp>2017-09-18T21:30:40Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5830">f = {
	args_default = {
		bracket_left = &quot;&quot;,
		bracket_right = &quot;&quot;,
		bracket_year_left = &quot;&quot;,
		bracket_year_right = &quot;&quot;,
		postscript = &quot;&quot;,
		page = &quot;&quot;,
		pages = &quot;&quot;,
		location = &quot;&quot;,
		page_sep = &quot;, p.&amp;nbsp;&quot;,
		pages_sep = &quot;, pp.&amp;nbsp;&quot;,
		ref = &quot;&quot;,
		P1 = &quot;&quot;,
		P2 = &quot;&quot;,
		P3 = &quot;&quot;,
		P4 = &quot;&quot;,
		P5 = &quot;&quot;
	}
};

function trim( str )
	if str == nil then
		return nil;
	end
	return str:match( &quot;^%s*(.-)%s*$&quot;);
end    

local function is_year (param)
	return param:match ('^%d%d%d%d?%l?$') or param:match ('^n%.d%.%l?$') or param:match ('^nd%l?$') or param:match ('^c%. %d%d%d%d?%l?$') or param:match ('^%d%d%d%d%d%d%d%d%l?$');
end


function core( args )
	local result;

	if args.P5 ~= &quot;&quot; then
		if is_year (args.P5) then
			result = table.concat ({args.P1, ' et al. ', args.bracket_year_left, args.P5, args.bracket_year_right});
		else
			args.P5 = '';														-- when P5 not a year don't include in anchor
			result = table.concat ({args.P1, ' et al.'});						-- and don't render it
		end

	elseif args.P4 ~= &quot;&quot; then
		if is_year (args.P4) then
			result = table.concat ({args.P1, ', ', args.P2, ' &amp;amp; ', args.P3, ' ', args.bracket_year_left, args.P4, args.bracket_year_right});	-- three names and a year
		else
			result = table.concat ({args.P1, ' et al.'});						-- four names
		end

	elseif args.P3 ~= &quot;&quot; then
		if is_year (args.P3) then
			result = table.concat ({args.P1, ' &amp;amp; ', args.P2, ' ', args.bracket_year_left, args.P3, args.bracket_year_right});	-- two names and a year
		else
			result = table.concat ({args.P1, ', ', args.P2, ' ', ' &amp;amp; ', args.P3});	-- three names
		end
			
	elseif args.P2 ~= &quot;&quot; then
		if is_year (args.P2) then
			result = table.concat ({args.P1, ' ', args.bracket_year_left, args.P2, args.bracket_year_right});	-- one name and year
		else
			result = table.concat ({args.P1, ' &amp;amp; ', args.P2});				-- two names
		end
		
	else
		result = args.P1;														-- one name
	end

	if ('.' == result:sub(-1)) and ('' == args.page) and ('' == args.pages) and ('' == args.location) then
		args.postscript = '';		-- prevent double periods when date is 'n.d.'
	end
	
	if args.ref ~= 'none' then
		if args.ref ~= &quot;&quot; then
			result = &quot;[[#&quot; .. mw.uri.anchorEncode(args.ref) .. &quot;|&quot; .. result .. &quot;]]&quot;;
		else
			result = &quot;[[#CITEREF&quot; .. mw.uri.anchorEncode(args.P1 .. args.P2 .. args.P3 .. args.P4 .. args.P5) .. &quot;|&quot; .. result .. &quot;]]&quot;;
		end
	end

	if args.page ~= &quot;&quot; then
		result = result .. args.page_sep .. args.page;
	elseif args.pages ~= &quot;&quot; then
		result = result .. args.pages_sep .. args.pages;
	end      

	if args.location ~= &quot;&quot; then
		result = result .. &quot;, &quot; .. args.location;
	end

	result = args.bracket_left .. result .. args.bracket_right .. args.postscript;
	return result;
end

function f.harvard_core( frame )
	local args = {};
	local pframe = frame:getParent();

	args.bracket_left = pframe.args.BracketLeft or &quot;&quot;;
	args.bracket_right = pframe.args.BracketRight or &quot;&quot;;
	args.bracket_year_left = pframe.args.BracketYearLeft or &quot;&quot;;
	args.bracket_year_right = pframe.args.BracketYearRight or &quot;&quot;;
	args.postscript = pframe.args.Postscript or &quot;&quot;;
	if 'none' == args.postscript then
		args.postscript = '';
	end

	args.page = pframe.args.Page or &quot;&quot;;
	args.pages = pframe.args.Pages or &quot;&quot;;
	args.location = pframe.args.Location or &quot;&quot;;
	args.page_sep = pframe.args.PageSep or &quot;&quot;;
	args.pages_sep = pframe.args.PagesSep or &quot;&quot;;
	args.ref = pframe.args.REF or &quot;{{{REF}}}&quot;;
	args.P1 = trim( pframe.args.P1 ) or &quot;&quot;;
	args.P2 = trim( pframe.args.P2 ) or &quot;&quot;;
	args.P3 = trim( pframe.args.P3 ) or &quot;&quot;;
	args.P4 = trim( pframe.args.P4 ) or &quot;&quot;;
	args.P5 = trim( pframe.args.P5 ) or &quot;&quot;;

	return core( args );
end

function f.harvard_citation( frame )
	local args = f.args_default;
	pframe = frame:getParent();

	args.bracket_left = &quot;(&quot;;
	args.bracket_right = &quot;)&quot;;
	args.page = pframe.args.p or pframe.args.page or &quot;&quot;;
	args.pages = pframe.args.pp or pframe.args.pages or &quot;&quot;;
	args.location = pframe.args.loc or &quot;&quot;;
	args.ref = pframe.args.ref or pframe.args.Ref or &quot;&quot;;
	args.P1 = trim( pframe.args[1] ) or &quot;&quot;;
	args.P2 = trim( pframe.args[2] ) or &quot;&quot;;
	args.P3 = trim( pframe.args[3] ) or &quot;&quot;;
	args.P4 = trim( pframe.args[4] ) or &quot;&quot;;
	args.P5 = trim( pframe.args[5] ) or &quot;&quot;;

	return core( args );
end

function f.harvard_citation_no_bracket( frame )
	local args = f.args_default;
	pframe = frame:getParent();

	args.page = pframe.args.p or pframe.args.page or &quot;&quot;;
	args.pages = pframe.args.pp or pframe.args.pages or &quot;&quot;;
	args.location = pframe.args.loc or &quot;&quot;;
	args.ref = pframe.args.ref or pframe.args.Ref or &quot;&quot;;
	args.P1 = trim( pframe.args[1] ) or &quot;&quot;;
	args.P2 = trim( pframe.args[2] ) or &quot;&quot;;
	args.P3 = trim( pframe.args[3] ) or &quot;&quot;;
	args.P4 = trim( pframe.args[4] ) or &quot;&quot;;
	args.P5 = trim( pframe.args[5] ) or &quot;&quot;;

	return core( args );
end

function f.sfn( frame )
	local args = f.args_default;
	for k, v in pairs( frame.args ) do											-- for {{sfnp}}, override default with values provided in the #invoke:
		args[k] = v;	   
	end
	
	pframe = frame:getParent();

	args.postscript = pframe.args.postscript or pframe.args.ps or &quot;.&quot;;
	if 'none' == args.postscript then
		args.postscript = '';
	end
	args.page = pframe.args.p or pframe.args.page or &quot;&quot;;
	args.pages = pframe.args.pp or pframe.args.pages or &quot;&quot;;
	args.location = pframe.args.loc or &quot;&quot;;
	args.ref = pframe.args.ref or pframe.args.Ref or &quot;&quot;;
	args.P1 = trim( pframe.args[1] ) or &quot;&quot;;
	args.P2 = trim( pframe.args[2] ) or &quot;&quot;;
	args.P3 = trim( pframe.args[3] ) or &quot;&quot;;
	args.P4 = trim( pframe.args[4] ) or &quot;&quot;;
	args.P5 = trim( pframe.args[5] ) or &quot;&quot;;

	local result = core( args );
	local name = &quot;FOOTNOTE&quot; .. args.P1 .. args.P2 .. 
	args.P3 .. args.P4 .. args.P5 .. args.page .. args.pages .. args.location;

	result = frame:extensionTag{ name = &quot;ref&quot;, args = {name=name}, content=result };

	return result;
end

return f;</text>
      <sha1>nuapsj7w21sgzxwemfxq4la2bnouwnf</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Gazette util</title>
    <ns>828</ns>
    <id>53974135</id>
    <revision>
      <id>804708738</id>
      <parentid>785265802</parentid>
      <timestamp>2017-10-10T17:19:53Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Gazette util]]&quot;: [[WP:High-risk templates|High-risk module]] ([Edit=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="11515">-- this module is created to support {{London Gazette}}

require('Module:No globals')
local getArgs = require('Module:Arguments').getArgs

local span_open = '&lt;span style=&quot;font-size:100%; font-weight:normal&quot; class=&quot;error&quot;&gt;';
local code_open = '&lt;code style=&quot;color:inherit; border:inherit; padding:inherit;&quot;&gt;';
local help_link = ' ([[Template:London Gazette#Error messages|help]])';

local supp_error = mw.ustring.format ('%sinvalid %s&amp;#124;supp=&lt;/code&gt;%s&lt;/span&gt;', span_open, code_open, help_link);
local duplicate_page_error = mw.ustring.format (' %smore than one of %s&amp;#124;page=&lt;/code&gt; and %s&amp;#124;pages=&lt;/code&gt;%s&lt;/span&gt;', span_open, code_open, code_open, help_link);

local p = {}


--[[--------------------------&lt; I S _ S E T &gt;------------------------------------------------------------------

Whether variable is set or not.  A variable is set when it is not nil and not empty.

]]

local function is_set( var )
	return not (var == nil or var == '');
end


--[[--------------------------&lt; O R D I N A L _ S U F F I X &gt;--------------------------------------------------

render a numerical text string in ordinal form suitable for English language use.  In this module, num_str is
limited by calling functions to the integer values 1-99.  The argument num_str must be known to be set before
this function is called.

]]

local function ordinal_suffix (num_str)
	local lsd;																	-- least significant digit
	local suffixes = {['1'] = 'st', ['2'] = 'nd', ['3'] = 'rd'};				-- table of suffixes except 'th'

	if num_str:match ('^1[1-3]$') then											-- check the 11-13 odd balls first to get them out of the way
		return num_str .. 'th';													-- 11th, 12th, 13th
	end
	
	lsd = num_str:match ('^%d?(%d)$');											-- all other numbers: get the least significant digit
	return num_str .. (suffixes[lsd] or 'th');									-- append the suffix from the suffixes table or default to 'th'
end


--[[--------------------------&lt; M A K E _ P A G E _ P A R A M &gt;------------------------------------------------

Determine the value to be assigned to the specified cs1|2 |page= or |pages= parameter in {{London Gazette}}.
The arguments |param=page and |param=pages specify which of the cs1|2 parameters |page= or |pages= for which this
function is to create a value.

This function inspects the content of the |page= and |pages= parameters, along with the |param= specifier.  From
this information it creates a value appropriate for the specified |page= or |pages= parameter.  Only one will
have a value, the other will get an empty string.

This function is called twice from {{London Gazette}}; once for each of cs1 |page= and |pages= parameters:
	|page={{#invoke:Gazette util|make_page_param|param=page|page={{{page|}}}|pages={{{pages|}}}}}
	|pages={{#invoke:Gazette util|make_page_param|param=pages|page={{{page|}}}|pages={{{pages|}}}}}

except for the lvalue and the rvalue assigned to |param=, the two calls must be identical else odd results.

|page= or |pages= without a comma, hyphen, or en dash separator  cs1 |page=
|page= or |pages= with a separator  cs1 |pages=

Hyphen separator characters are converted to en dash characters.  Any white space around hyphen and en dash
separators is removed.

If both |page= and |pages= are set, this function mimics cs1|2 and chooses |page=.

Another function, page_error() is required for error messaging because we don't want to dump css markup into a
parameter value that will be included in the cs1|2 metadata.

]]

function p.make_page_param (frame)
	local args = getArgs(frame);
	local page_or_pages;

	page_or_pages = args.page or args.unnamed or args.pages;					-- only one; prefer |page=
	
	if is_set (page_or_pages) then
		if 'pages' == args.param then
			if page_or_pages:match ('[,%-]') then								-- only for |pages= parameter
				page_or_pages = mw.ustring.gsub (page_or_pages, '%s*[%-]%s*', '');	-- hyphen to en dash; remove spaces
				return page_or_pages;											-- has separator character so make the parameter |pages=
			else
				return '';														-- no separator so value will be assigned to |page=
			end
		elseif 'page' == args.param then
			if page_or_pages:match ('[,%-]') then								-- only for |pages= parameter
				return '';														-- has separator so value will be assigned to |pages=
			else
				return page_or_pages;											-- no separator character so make the parameter |page=
			end
		else
			return '';															-- |param= something else
		end
	end

	return '';																	-- if here no pagination or not correct |page= or |pages= parameter
end


--[[--------------------------&lt; P A G E _ E R R O R &gt;----------------------------------------------------------

Inspect page number parameters and return an error message that will be appended to the end of the {{cite magazine}}
template rendering.  Error messages are handled this way so that the error message is not made part of the cs1|2
citation's metadata.

{{#invoke:Gazette util|page_error|page={{{page|}}}|pages={{{pages|}}}}}

]]

function p.page_error (frame)
	local args = getArgs(frame);

	if is_set (args.page) and is_set (args.pages) then
		return duplicate_page_error;											-- both of |page= and |pages= are set
	else
		return '';
	end
end


--[[--------------------------&lt; T Y P E _ P A R A M &gt;----------------------------------------------------------

set the value that is assigned to the cite magazine |type= parameter using the values of the London Gazette
|supp= and |display-supp= parameters

Only limited |supp= values will set the type value.  These are: 'y' or a number 1-99.

row numbers in comments apply to the table in Template_talk:London_Gazette#Rewrite_as_wrapper_around_template:cite_news

]]

function p.type_param (frame)
	local args = getArgs(frame);
	
	if not is_set (args['display-supp']) and not is_set (args.supp) then		-- when both |display-supp= and |supp= are not set
		return '';																-- [row 1] not a supplement so no display
	end
	
	args.supp = args.supp and args.supp:lower();								-- make text values lower case

	if not is_set (args['display-supp']) and is_set (args.supp) then			-- when only |supp= is set
		if 'y' == args.supp then
			return 'Supplement';												-- [row 2] the first or only supplement
		elseif args.supp:match ('^%d%d?$') then									-- one or two digits
				return ordinal_suffix (args.supp) .. ' supplement';				-- [row 3] for the 1st-99th supplement
		else
			return supp_error;													-- [row 4] any other text not supported show an error message
		end
	end

	if is_set (args['display-supp']) and not is_set (args.supp) then			-- when only |display-supp= is set
		if args['display-supp']:match ('^%d%d?$') then							-- one or two digits
			return ordinal_suffix (args['display-supp']) .. ' supplement';		-- [row 7] for the 1st-99th supplement
		elseif 'y' == args['display-supp'] then
			return 'Supplement';												-- [row 6] unnumbered supplement in /page/ space
		else
			return args['display-supp'];										-- [row 11] user specified text; supplement is not in supplement space (a Gazette website error)
		end
	end
																				-- here when both |display-supp= and |supp= are set
	if args['display-supp']:match ('^%d%d?$') then								-- supplement number
		if 'y' == args.supp or (args['display-supp'] == args.supp) then
			return ordinal_suffix (args['display-supp']) .. ' supplement';		-- [rows 8, 9]
		else																	-- |supp= is not a number or number isn't same as number in |display-supp=
			return supp_error;													-- [row 10] different values are ambiguous
		end
	else																		-- not a supplement number
		if ('y' == args.supp) and ('none' == args['display-supp']) then
			return '';															-- [row 5] for the case when a /page/ is in /supplement/ space 
		elseif ('y' == args.supp) or args.supp:match ('^%d%d?$') or not is_set (args.supp) then
			return args['display-supp'];										-- [rows 12, 13] user specified text
		else
			return supp_error;													-- [row 14] any other |supp= value not supported show an error message
		end
	end
end


--[[--------------------------&lt; U R L _ C I T Y &gt;--------------------------------------------------------------

sets the city element of the url path according to |city= value; defaults to London

]]

local function url_city (city_param)
	local city_names = {['b'] = 'Belfast', ['belfast'] = 'Belfast', ['e'] = 'Edinburgh', ['edinburgh'] = 'Edinburgh'};
	
	city_param = city_param and city_param:lower();								-- lower() to index into the city_names table

	return city_names[city_param] or 'London';									-- the city, or default to London
end

	
--[[--------------------------&lt; U R L _ P A G E &gt;--------------------------------------------------------------

sets the page number element of the url path according to |page= or |pages=, and the value assigned to |supp=
parameter.  This function assumes that supplements may have page numbering that are digits prefixed with one or
two letters: B1, B41, RH2, etc; also assumes that regular issues have digit-only page numbers.

Only limited |supp= values will set the page number path element.  These are: 'y' or a number 1-99.

]]

local function url_page (page, supp)
	if is_set (supp) then
		if ('y' == supp) or supp:match ('^%d%d?$') then
			page = page:match ('^%a?%a?%d+');									-- one or two letters followed by digits or just digits (supplement to issue 61608)
		else
			page = page:match ('^%d+');											-- |supp= set to an unexpected value, so one or more digits only
		end
	else
		page = page:match ('^%d+');												-- |supp= not set, so one or more digits only
	end
	
	return page or '';															-- at minimum return empty string for concatenation
end


--[[--------------------------&lt; U R L _ P A G E _ O R _ S U P P L E M E N T &gt;----------------------------------

sets the page/supplement element of the url path according to |supp= value; defaults to page

Only limited |supp= values will set the page/supplement path element to /supplement/.  These are: 'y' or a number 1-99

]]

local function url_page_or_supplement (supp_param)
	supp_param = (supp_param and supp_param:lower()) or '';						--make sure lower case for comparisons
	
	if ('y' == supp_param) or supp_param:match ('^%d%d?$') then
		return 'supplement';
	else
		return 'page';															-- anything else
	end
end

	
--[[--------------------------&lt; U R L _ P A R A M &gt;------------------------------------------------------------

Build a url given |city=, |issue=, |supp=, and one of |page= or |pages=; result is assigned to |url=

|url={{#invoke:Gazette util|url_param|city={{{city|}}}|issue={{{issue}}}|supp={{{supp|}}}|page={{{page|}}}|pages={{{pages|}}}}}

]]

function p.url_param (frame)
	local args = getArgs(frame);
	local pg = args.page or args.pages or '';									-- first set parameter or empty string

	local url_table = {															-- a table of the various url parts
		'https://www.thegazette.co.uk',											-- static domain name
		url_city (args.city),													-- default to London
		'issue',																-- static path text
		args.issue,																-- issue number
		url_page_or_supplement (args.supp),										-- either of /page/ or /supplement/ according to the state of |supp=
		url_page (pg, args.supp)												-- pages: digits only; supplements: optional letter followed by 1 or more digits
		};
	
	return table.concat (url_table, '/');										-- concatenate all of the parts together and done
end


return p;</text>
      <sha1>rtga4wg86vbcmdkdhaukh4ndc9yj8wk</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote</title>
    <ns>828</ns>
    <id>42498502</id>
    <revision>
      <id>779487706</id>
      <parentid>726656423</parentid>
      <timestamp>2017-05-09T05:20:32Z</timestamp>
      <contributor>
        <username>JJMC89</username>
        <id>24812038</id>
      </contributor>
      <comment>Add navigation-not-searchable class per [[Special:Permalink/779475248#Add navigation-not-searchable class|request]] (also see [[phab:T164781|T164781]])</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6703">--------------------------------------------------------------------------------
--                              Module:Hatnote                                --
--                                                                            --
-- This module produces hatnote links and links to related articles. It       --
-- implements the {{hatnote}} and {{format link}} meta-templates and includes --
-- helper functions for other Lua hatnote modules.                            --
--------------------------------------------------------------------------------

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local mArguments -- lazily initialise [[Module:Arguments]]
local yesno -- lazily initialise [[Module:Yesno]]

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getArgs(frame)
	-- Fetches the arguments from the parent frame. Whitespace is trimmed and
	-- blanks are removed.
	mArguments = require('Module:Arguments')
	return mArguments.getArgs(frame, {parentOnly = true})
end

local function removeInitialColon(s)
	-- Removes the initial colon from a string, if present.
	return s:match('^:?(.*)')
end

function p.findNamespaceId(link, removeColon)
	-- Finds the namespace id (namespace number) of a link or a pagename. This
	-- function will not work if the link is enclosed in double brackets. Colons
	-- are trimmed from the start of the link by default. To skip colon
	-- trimming, set the removeColon parameter to false.
	checkType('findNamespaceId', 1, link, 'string')
	checkType('findNamespaceId', 2, removeColon, 'boolean', true)
	if removeColon ~= false then
		link = removeInitialColon(link)
	end
	local namespace = link:match('^(.-):')
	if namespace then
		local nsTable = mw.site.namespaces[namespace]
		if nsTable then
			return nsTable.id
		end
	end
	return 0
end

function p.formatPages(...)
	-- Formats a list of pages using formatLink and returns it as an array. Nil
	-- values are not allowed.
	local pages = {...}
	local ret = {}
	for i, page in ipairs(pages) do
		ret[i] = p._formatLink(page)
	end
	return ret
end

function p.formatPageTables(...)
	-- Takes a list of page/display tables and returns it as a list of
	-- formatted links. Nil values are not allowed.
	local pages = {...}
	local links = {}
	for i, t in ipairs(pages) do
		checkType('formatPageTables', i, t, 'table')
		local link = t[1]
		local display = t[2]
		links[i] = p._formatLink(link, display)
	end
	return links
end

function p.makeWikitextError(msg, helpLink, addTrackingCategory, title)
	-- Formats an error message to be returned to wikitext. If
	-- addTrackingCategory is not false after being returned from
	-- [[Module:Yesno]], and if we are not on a talk page, a tracking category
	-- is added.
	checkType('makeWikitextError', 1, msg, 'string')
	checkType('makeWikitextError', 2, helpLink, 'string', true)
	yesno = require('Module:Yesno')
	title = title or mw.title.getCurrentTitle()
	-- Make the help link text.
	local helpText
	if helpLink then
		helpText = ' ([[' .. helpLink .. '|help]])'
	else
		helpText = ''
	end
	-- Make the category text.
	local category
	if not title.isTalkPage and yesno(addTrackingCategory) ~= false then
		category = 'Hatnote templates with errors'
		category = string.format(
			'[[%s:%s]]',
			mw.site.namespaces[14].name,
			category
		)
	else
		category = ''
	end
	return string.format(
		'&lt;strong class=&quot;error&quot;&gt;Error: %s%s.&lt;/strong&gt;%s',
		msg,
		helpText,
		category
	)
end

function p.disambiguate(page, disambiguator)
	-- Formats a page title with a disambiguation parenthetical,
	-- i.e. &quot;Example&quot;  &quot;Example (disambiguation)&quot;.
	checkType('disambiguate', 1, page, 'string')
	checkType('disambiguate', 2, disambiguator, 'string', true)
	disambiguator = disambiguator or 'disambiguation'
	return string.format('%s (%s)', page, disambiguator)
end

--------------------------------------------------------------------------------
-- Format link
--
-- Makes a wikilink from the given link and display values. Links are escaped
-- with colons if necessary, and links to sections are detected and displayed
-- with &quot;  &quot; as a separator rather than the standard MediaWiki &quot;#&quot;. Used in
-- the {{format hatnote link}} template.
--------------------------------------------------------------------------------

function p.formatLink(frame)
	local args = getArgs(frame)
	local link = args[1]
	local display = args[2]
	if not link then
		return p.makeWikitextError(
			'no link specified',
			'Template:Format hatnote link#Errors',
			args.category
		)
	end
	return p._formatLink(link, display)
end

function p._formatLink(link, display)
	checkType('_formatLink', 1, link, 'string')
	checkType('_formatLink', 2, display, 'string', true)

	-- Remove the initial colon for links where it was specified manually.
	link = removeInitialColon(link)

	-- Find whether a faux display value has been added with the {{!}} magic
	-- word.
	if not display then
		local prePipe, postPipe = link:match('^(.-)|(.*)$')
		link = prePipe or link
		display = postPipe
	end

	-- Find the display value.
	if not display then
		local page, section = link:match('^(.-)#(.*)$')
		if page then
			display = page .. ' &amp;nbsp;' .. section
		end
	end

	-- Assemble the link.
	if display then
		return string.format(
			'[[:%s|%s]]',
			string.gsub(link, '|(.*)$', ''), --display overwrites manual piping
			display
		)
	else
		return string.format('[[:%s]]', link)
	end
end

--------------------------------------------------------------------------------
-- Hatnote
--
-- Produces standard hatnote text. Implements the {{hatnote}} template.
--------------------------------------------------------------------------------

function p.hatnote(frame)
	local args = getArgs(frame)
	local s = args[1]
	local options = {}
	if not s then
		return p.makeWikitextError(
			'no text specified',
			'Template:Hatnote#Errors',
			args.category
		)
	end
	options.extraclasses = args.extraclasses
	options.selfref = args.selfref
	return p._hatnote(s, options)
end

function p._hatnote(s, options)
	checkType('_hatnote', 1, s, 'string')
	checkType('_hatnote', 2, options, 'table', true)
	options = options or {}
	local classes = {'hatnote', 'navigation-not-searchable'}
	local extraclasses = options.extraclasses
	local selfref = options.selfref
	if type(extraclasses) == 'string' then
		classes[#classes + 1] = extraclasses
	end
	if selfref then
		classes[#classes + 1] = 'selfref'
	end
	return string.format(
		'&lt;div role=&quot;note&quot; class=&quot;%s&quot;&gt;%s&lt;/div&gt;',
		table.concat(classes, ' '),
		s
	)
end

return p</text>
      <sha1>c5z31x97gktc3q7nnp8mf48t01l4qst</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote list</title>
    <ns>828</ns>
    <id>50085079</id>
    <revision>
      <id>726904710</id>
      <parentid>719917336</parentid>
      <timestamp>2016-06-25T06:18:53Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Updated from sandbox</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6873">--------------------------------------------------------------------------------
--                           Module:Hatnote list                              --
--                                                                            --
-- This module produces and formats lists for use in hatnotes. In particular, --
-- it implements the for-see list, i.e. lists of &quot;For X, see Y&quot; statements,   --
-- as used in {{about}}, {{redirect}}, and their variants. Also introduced    --
-- are andList &amp; orList helpers for formatting lists with those conjunctions. --
--------------------------------------------------------------------------------

local mArguments --initialize lazily
local mHatnote = require('Module:Hatnote')
local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local p = {}

--------------------------------------------------------------------------------
-- List stringification helper functions
--
-- These functions are used for stringifying lists, usually page lists inside
-- the &quot;Y&quot; portion of &quot;For X, see Y&quot; for-see items.
--------------------------------------------------------------------------------

--default options table used across the list stringification functions
local stringifyListDefaultOptions = {
	conjunction = &quot;and&quot;,
	separator = &quot;,&quot;,
	altSeparator = &quot;;&quot;,
	space = &quot; &quot;,
	formatted = false
}

-- Stringifies a list generically; probably shouldn't be used directly
function stringifyList(list, options)
	-- Type-checks, defaults, and a shortcut
	checkType(&quot;stringifyList&quot;, 1, list, &quot;table&quot;)
	if #list == 0 then return nil end
	checkType(&quot;stringifyList&quot;, 2, options, &quot;table&quot;, true)
	options = options or {}
	for k, v in pairs(stringifyListDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	local s = options.space
	-- Format the list if requested
	if options.formatted then list = mHatnote.formatPages(unpack(list)) end
	-- Set the separator; if any item contains it, use the alternate separator
	local separator = options.separator
	--searches display text only
	function searchDisp(t, f)
		return string.find(string.sub(t, (string.find(t, '|') or 0) + 1), f)
	end
	for k, v in pairs(list) do
		if searchDisp(v, separator) then
			separator = options.altSeparator
			break
		end
	end
	-- Set the conjunction, apply Oxford comma, and force a comma if #1 has &quot;&quot;
	local conjunction = s .. options.conjunction .. s
	if #list == 2 and searchDisp(list[1], &quot;&quot;) or #list &gt; 2 then
		conjunction = separator .. conjunction
	end
	-- Return the formatted string
	return mw.text.listToText(list, separator .. s, conjunction)
end

--DRY function
function conjList (conj, list, fmt)
	return stringifyList(list, {conjunction = conj, formatted = fmt})
end

-- Stringifies lists with &quot;and&quot; or &quot;or&quot;
function p.andList (...) return conjList(&quot;and&quot;, ...) end
function p.orList (...) return conjList(&quot;or&quot;, ...) end

--------------------------------------------------------------------------------
-- For see
--
-- Makes a &quot;For X, see [[Y]].&quot; list from raw parameters. Intended for the
-- {{about}} and {{redirect}} templates and their variants.
--------------------------------------------------------------------------------

--default options table used across the forSee family of functions
local forSeeDefaultOptions = {
	andKeyword = 'and',
	title = mw.title.getCurrentTitle().text,
	otherText = 'other uses',
	forSeeForm = 'For %s, see %s.'
}

--Collapses duplicate punctuation
function punctuationCollapse (text)
	local replacements = {
		[&quot;%.%.$&quot;] = &quot;.&quot;,
		[&quot;%?%.$&quot;] = &quot;?&quot;,
		[&quot;%!%.$&quot;] = &quot;!&quot;,
		[&quot;%.%]%]%.$&quot;] = &quot;.]]&quot;,
		[&quot;%?%]%]%.$&quot;] = &quot;?]]&quot;,
		[&quot;%!%]%]%.$&quot;] = &quot;!]]&quot;
	}
	for k, v in pairs(replacements) do text = string.gsub(text, k, v) end
	return text
end

-- Structures arguments into a table for stringification, &amp; options
function p.forSeeArgsToTable (args, from, options)
	-- Type-checks and defaults
	checkType(&quot;forSeeArgsToTable&quot;, 1, args, 'table')
	checkType(&quot;forSeeArgsToTable&quot;, 2, from, 'number', true)
	from = from or 1
	checkType(&quot;forSeeArgsToTable&quot;, 3, options, 'table', true)
	options = options or {}
	for k, v in pairs(forSeeDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	-- maxArg's gotten manually because getArgs() and table.maxn aren't friends
	local maxArg = 0
	for k, v in pairs(args) do
		if type(k) == 'number' and k &gt; maxArg then maxArg = k end
	end
	-- Structure the data out from the parameter list:
	-- * forTable is the wrapper table, with forRow rows
	-- * Rows are tables of a &quot;use&quot; string &amp; a &quot;pages&quot; table of pagename strings
	-- * Blanks are left empty for defaulting elsewhere, but can terminate list
	local forTable = {}
	local i = from
	local terminated = false
	-- Loop to generate rows
	repeat
		-- New empty row
		local forRow = {}
		-- On blank use, assume list's ended &amp; break at end of this loop
		forRow.use = args[i]
		if not args[i] then terminated = true end
		-- New empty list of pages
		forRow.pages = {}
		-- Insert first pages item if present
		table.insert(forRow.pages, args[i + 1])
		-- If the param after next is &quot;and&quot;, do inner loop to collect params
		-- until the &quot;and&quot;'s stop. Blanks are ignored: &quot;1|and||and|3&quot;  {1, 3}
		while args[i + 2] == options.andKeyword do
			if args[i + 3] then 
				table.insert(forRow.pages, args[i + 3])
			end
			-- Increment to next &quot;and&quot;
			i = i + 2
		end
		-- Increment to next use
		i = i + 2
		-- Append the row
		table.insert(forTable, forRow)
	until terminated or i &gt; maxArg
	
	return forTable
end

-- Stringifies a table as formatted by forSeeArgsToTable
function p.forSeeTableToString (forSeeTable, options)
	-- Type-checks and defaults
	checkType(&quot;forSeeTableToString&quot;, 1, forSeeTable, &quot;table&quot;)
	checkType(&quot;forSeeTableToString&quot;, 2, options, &quot;table&quot;, true)
	options = options or {}
	for k, v in pairs(forSeeDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	-- Stringify each for-see item into a list
	local strList = {}
	for k, v in pairs(forSeeTable) do
		local useStr = v.use or options.otherText
		local pagesStr = p.andList(v.pages, true) or
			mHatnote._formatLink(mHatnote.disambiguate(options.title))
		local forSeeStr = string.format(options.forSeeForm, useStr, pagesStr)
		forSeeStr = punctuationCollapse(forSeeStr)
		table.insert(strList, forSeeStr)
	end
	-- Return the concatenated list
	return table.concat(strList, ' ')
end

-- Produces a &quot;For X, see [[Y]]&quot; string from arguments. Expects index gaps
-- but not blank/whitespace values. Ignores named args and args &lt; &quot;from&quot;.
function p._forSee (args, from, options)
	local forSeeTable = p.forSeeArgsToTable(args, from, options)
	return p.forSeeTableToString(forSeeTable, options)
end

-- As _forSee, but uses the frame.
function p.forSee (frame, from, options)
	mArguments = require('Module:Arguments')
	return p._forSee(mArguments.getArgs(frame), from, options)
end

return p</text>
      <sha1>9xow4swjoccg1c9n9r6xhfvxgci3xr1</sha1>
    </revision>
  </page>
  <page>
    <title>Module:If empty</title>
    <ns>828</ns>
    <id>44819040</id>
    <revision>
      <id>639392913</id>
      <parentid>639392817</parentid>
      <timestamp>2014-12-23T21:56:09Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>actually, only the first 8 need this check</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1018">local p = {}

function p.main(frame)
	local args = require('Module:Arguments').getArgs(frame, {wrappers = 'Template:If empty', removeBlanks = false})

	-- For backwards compatibility reasons, the first 8 parameters can be unset instead of being blank,
	-- even though there's really no legitimate use case for this. At some point, this will be removed.
	local lowestNil = math.huge
	for i = 8,1,-1 do
		if args[i] == nil then
			args[i] = ''
			lowestNil = i
		end
	end

	for k,v in ipairs(args) do
		if v ~= '' then
			if lowestNil &lt; k then
				-- If any uses of this template depend on the behavior above, add them to a tracking category.
				-- This is a rather fragile, convoluted, hacky way to do it, but it ensures that this module's output won't be modified
				-- by it.
				frame:extensionTag('ref', '[[Category:Instances of Template:If_empty missing arguments]]', {group = 'TrackingCategory'})
				frame:extensionTag('references', '', {group = 'TrackingCategory'})
			end
			return v
		end
	end
end

return p</text>
      <sha1>6qq12x2ek97w2n518wugesqunsqh778</sha1>
    </revision>
  </page>
  <page>
    <title>Module:InfoboxImage</title>
    <ns>828</ns>
    <id>38581924</id>
    <revision>
      <id>769944044</id>
      <parentid>755884847</parentid>
      <timestamp>2017-03-12T14:50:35Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>add px to sizedefault if just a number</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="9641">-- Inputs:
--    image - Can either be a bare filename (with or without the File:/Image: prefix) or a fully formatted image link
--    page - page to display for multipage images (DjVu)
--    size - size to display the image
--    maxsize - maximum size for image
--    sizedefault - default size to display the image if size param is blank
--    alt - alt text for image
--    title - title text for image
--    border - set to yes if border
--    center - set to yes, if the image has to be centered
--    upright - upright image param
--    suppressplaceholder - if yes then checks to see if image is a placeholder and suppresses it
--    link - page to visit when clicking on image
-- Outputs:
--    Formatted image.
-- More details available at the &quot;Module:InfoboxImage/doc&quot; page

local i = {};

local placeholder_image = {
    &quot;Blue - Replace this image female.svg&quot;,
    &quot;Blue - Replace this image male.svg&quot;,
    &quot;Female no free image yet.png&quot;,
    &quot;Flag of None (square).svg&quot;,
    &quot;Flag of None.svg&quot;,
    &quot;Flag of.svg&quot;,
    &quot;Green - Replace this image female.svg&quot;,
    &quot;Green - Replace this image male.svg&quot;,
    &quot;Image is needed female.svg&quot;,
    &quot;Image is needed male.svg&quot;,
    &quot;Location map of None.svg&quot;,
    &quot;Male no free image yet.png&quot;,
    &quot;Missing flag.png&quot;,
    &quot;No flag.svg&quot;,
    &quot;No free portrait.svg&quot;,
    &quot;No portrait (female).svg&quot;,
    &quot;No portrait (male).svg&quot;,
    &quot;Red - Replace this image female.svg&quot;,
    &quot;Red - Replace this image male.svg&quot;,
    &quot;Replace this image female (blue).svg&quot;,
    &quot;Replace this image female.svg&quot;,
    &quot;Replace this image male (blue).svg&quot;,
    &quot;Replace this image male.svg&quot;,
    &quot;Silver - Replace this image female.svg&quot;,
    &quot;Silver - Replace this image male.svg&quot;,
    &quot;Replace this image.svg&quot;,
	&quot;Cricket no pic.png&quot;,
	&quot;CarersLogo.gif&quot;,
	&quot;Diagram Needed.svg&quot;,
	&quot;Example.jpg&quot;,
	&quot;Image placeholder.png&quot;,
	&quot;No male portrait.svg&quot;,
	&quot;Nocover-upload.png&quot;,
	&quot;NoDVDcover copy.png&quot;,
	&quot;Noribbon.svg&quot;,
	&quot;No portrait-BFD-test.svg&quot;,
	&quot;Placeholder barnstar ribbon.png&quot;,
	&quot;Project Trains no image.png&quot;,
	&quot;Image-request.png&quot;,
	&quot;Sin bandera.svg&quot;,
	&quot;Sin escudo.svg&quot;,
	&quot;Replace this image - temple.png&quot;,
	&quot;Replace this image butterfly.png&quot;,
	&quot;Replace this image.svg&quot;,
	&quot;Replace this image1.svg&quot;,
	&quot;Resolution angle.png&quot;,
	&quot;Image-No portrait-text-BFD-test.svg&quot;,
	&quot;Insert image here.svg&quot;,
	&quot;No image available.png&quot;,
	&quot;NO IMAGE YET square.png&quot;,
	&quot;NO IMAGE YET.png&quot;,
	&quot;No Photo Available.svg&quot;,
	&quot;No Screenshot.svg&quot;,
	&quot;No-image-available.jpg&quot;,
	&quot;Null.png&quot;,
	&quot;PictureNeeded.gif&quot;,
	&quot;Place holder.jpg&quot;,
	&quot;Unbenannt.JPG&quot;,
	&quot;UploadACopyrightFreeImage.svg&quot;,
	&quot;UploadAnImage.gif&quot;,
	&quot;UploadAnImage.svg&quot;,
	&quot;UploadAnImageShort.svg&quot;,
	&quot;CarersLogo.gif&quot;,
	&quot;Diagram Needed.svg&quot;,
	&quot;No male portrait.svg&quot;,
	&quot;NoDVDcover copy.png&quot;,
	&quot;Placeholder barnstar ribbon.png&quot;,
	&quot;Project Trains no image.png&quot;,
	&quot;Image-request.png&quot;,
}

function i.IsPlaceholder(image)
    -- change underscores to spaces
    image = mw.ustring.gsub(image, &quot;_&quot;, &quot; &quot;);
    assert(image ~= nil, 'mw.ustring.gsub(image, &quot;_&quot;, &quot; &quot;) must not return nil')
    -- if image starts with [[ then remove that and anything after |
    if mw.ustring.sub(image,1,2) == &quot;[[&quot; then
        image = mw.ustring.sub(image,3);
        image = mw.ustring.gsub(image, &quot;([^|]*)|.*&quot;, &quot;%1&quot;);
        assert(image ~= nil, 'mw.ustring.gsub(image, &quot;([^|]*)|.*&quot;, &quot;%1&quot;) must not return nil')
    end
    -- Trim spaces
    image = mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1');
    assert(image ~= nil, &quot;mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1') must not return nil&quot;)
    -- remove prefix if exists
    local allNames = mw.site.namespaces[6].aliases
    allNames[#allNames + 1] = mw.site.namespaces[6].name
    allNames[#allNames + 1] = mw.site.namespaces[6].canonicalName
    for i, name in ipairs(allNames) do
        if mw.ustring.lower(mw.ustring.sub(image, 1, mw.ustring.len(name) + 1)) == mw.ustring.lower(name .. &quot;:&quot;) then
            image = mw.ustring.sub(image, mw.ustring.len(name) + 2);
            break
        end
    end
    -- Trim spaces
    image = mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1');
    -- capitalise first letter
    image = mw.ustring.upper(mw.ustring.sub(image,1,1)) .. mw.ustring.sub(image,2);

    for i,j in pairs(placeholder_image) do
        if image == j then
            return true
        end
    end
    return false
end

function i.InfoboxImage(frame)
    local image = frame.args[&quot;image&quot;];
    
    if image == &quot;&quot; or image == nil then
        return &quot;&quot;;
    end
    if image == &quot;&amp;nbsp;&quot; then
        return image;
    end
    if frame.args[&quot;suppressplaceholder&quot;] ~= &quot;no&quot; then
        if i.IsPlaceholder(image) == true then
            return &quot;&quot;;
        end
    end

    if mw.ustring.lower(mw.ustring.sub(image,1,5)) == &quot;http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,6)) == &quot;[http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,7)) == &quot;[[http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,6)) == &quot;https:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,7)) == &quot;[https:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,8)) == &quot;[[https:&quot; then
        return &quot;&quot;;
    end

    if mw.ustring.sub(image,1,2) == &quot;[[&quot; then
        -- search for thumbnail images and add to tracking cat if found
        if mw.title.getCurrentTitle().namespace == 0 and (mw.ustring.find(image, &quot;|%s*thumb%s*[|%]]&quot;) or mw.ustring.find(image, &quot;|%s*thumbnail%s*[|%]]&quot;)) then
            return image .. &quot;[[Category:Pages using infoboxes with thumbnail images]]&quot;;
        elseif mw.title.getCurrentTitle().namespace == 0 then
            return image .. &quot;[[Category:Pages using deprecated image syntax]]&quot;;
        else
            return image;
        end
    elseif mw.ustring.sub(image,1,2) == &quot;{{&quot; and mw.ustring.sub(image,1,3) ~= &quot;{{{&quot; then
        return image;
    elseif mw.ustring.sub(image,1,1) == &quot;&lt;&quot; then
        return image;
    elseif mw.ustring.sub(image,1,5) == mw.ustring.char(127)..&quot;UNIQ&quot; then
        -- Found strip marker at begining, so pass don't process at all
        return image;
    elseif mw.ustring.sub(image,4,9) == &quot;`UNIQ-&quot; then
        -- Found strip marker at begining, so pass don't process at all
        return image;
    else
        local result = &quot;&quot;;
        local page = frame.args[&quot;page&quot;];
        local size = frame.args[&quot;size&quot;];
        local maxsize = frame.args[&quot;maxsize&quot;];
        local sizedefault = frame.args[&quot;sizedefault&quot;];
        local alt = frame.args[&quot;alt&quot;];
        local link = frame.args[&quot;link&quot;];
        local title = frame.args[&quot;title&quot;];
        local border = frame.args[&quot;border&quot;];
        local upright = frame.args[&quot;upright&quot;] or &quot;&quot;;
        local thumbtime = frame.args[&quot;thumbtime&quot;] or &quot;&quot;;
        local center= frame.args[&quot;center&quot;];
        
        -- remove prefix if exists
        local allNames = mw.site.namespaces[6].aliases
        allNames[#allNames + 1] = mw.site.namespaces[6].name
        allNames[#allNames + 1] = mw.site.namespaces[6].canonicalName
        for i, name in ipairs(allNames) do
            if mw.ustring.lower(mw.ustring.sub(image, 1, mw.ustring.len(name) + 1)) == mw.ustring.lower(name .. &quot;:&quot;) then
                image = mw.ustring.sub(image, mw.ustring.len(name) + 2);
                break
            end
        end
        
        if maxsize ~= &quot;&quot; and maxsize ~= nil then
            -- if no sizedefault then set to maxsize
            if sizedefault == &quot;&quot; or sizedefault == nil then
                sizedefault = maxsize
            end
            -- check to see if size bigger than maxsize
            if size ~= &quot;&quot; and size ~= nil then
                local sizenumber = tonumber(mw.ustring.match(size,&quot;%d*&quot;)) or 0;
                local maxsizenumber = tonumber(mw.ustring.match(maxsize,&quot;%d*&quot;)) or 0;
                if sizenumber&gt;maxsizenumber and maxsizenumber&gt;0 then
                    size = maxsize;
                end
            end
        end
        -- add px to size if just a number
        if (tonumber(size) or 0) &gt; 0 then
            size = size .. &quot;px&quot;;
        end
        -- add px to sizedefault if just a number
        if (tonumber(sizedefault) or 0) &gt; 0 then
            sizedefault = sizedefault .. &quot;px&quot;;
        end
        
        result = &quot;[[File:&quot; .. image;
        if page ~= &quot;&quot; and page ~= nil then
            result = result .. &quot;|page=&quot; .. page;
        end
        if size ~= &quot;&quot; and size ~= nil then
            result = result .. &quot;|&quot; .. size;
        elseif sizedefault ~= &quot;&quot; and sizedefault ~= nil then
            result = result .. &quot;|&quot; .. sizedefault;
        else
            result = result .. &quot;|frameless&quot;;
        end
        if center == &quot;yes&quot; then
            result = result .. &quot;|center&quot;
        end
        if alt ~= &quot;&quot; and alt ~= nil then
            result = result .. &quot;|alt=&quot; .. alt;
        end
        if link ~= &quot;&quot; and link ~= nil then
            result = result .. &quot;|link=&quot; .. link;
        end
        if border == &quot;yes&quot; then
            result = result .. &quot;|border&quot;;
        end
        if upright == &quot;yes&quot; then
            result = result .. &quot;|upright&quot;;
        elseif upright ~= &quot;&quot; then
            result = result .. &quot;|upright=&quot; .. upright;
        end
        if thumbtime ~= &quot;&quot; then
            result = result .. &quot;|thumbtime=&quot; .. thumbtime;
        end
        if title ~= &quot;&quot; and title ~= nil then
            result = result .. &quot;|&quot; .. title;
        elseif alt ~= &quot;&quot; and alt ~= nil then
            result = result .. &quot;|&quot; .. alt;
        end
        result = result .. &quot;]]&quot;;
        
        return result;
    end
end

return i;</text>
      <sha1>n4nldwdqxa2f7m558z3tw0vr90z070g</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Infobox military conflict</title>
    <ns>828</ns>
    <id>44031516</id>
    <revision>
      <id>789507168</id>
      <parentid>789506357</parentid>
      <timestamp>2017-07-07T19:34:25Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>role = presentation</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7854">require('Module:No globals')

local infoboxStyle = mw.loadData('Module:WPMILHIST Infobox style')

local IMC = {}
IMC.__index = IMC

function IMC:renderPerCombatant(builder, headerText, prefix, suffix)
	prefix = prefix or ''
	suffix = suffix or ''
	local colspans = {}
	
	-- This may result in colspans[1] getting set twice, but
	-- this is no big deal. The second set will be correct.
	local lastCombatant = 1
	
	for i = 1,self.combatants do
		if self.args[prefix .. i .. suffix] then
			colspans[lastCombatant] = i - lastCombatant
			lastCombatant = i
		end
	end

	local jointText = self.args[prefix .. (self.combatants + 1) .. suffix]
	
	if headerText and (colspans[1] or jointText) then
		builder:tag('tr')
			:tag('th')
				:attr('colspan', self.combatants)
				:cssText(infoboxStyle.header_raw)
				:wikitext(headerText)
	end

	-- The only time colspans[1] wouldn't be set is if no
	-- combatant has a field with the given prefix and suffix.
	if colspans[1] then
		-- Since each found argument set the colspan for the previous
		-- one, the final one wasn't set above, so set it now.
		colspans[lastCombatant] = self.combatants - lastCombatant + 1
		builder = builder:tag('tr')
		for i = 1,self.combatants do
			-- At this point, colspans[i] will be set for i=1 unconditionally, and for
			-- any other value of i where self.args[prefix .. i .. suffix] is set.
			if colspans[i] then
				builder:tag('td')
					-- don't bother emitting colspan=&quot;1&quot;
					:attr('colspan', colspans[i] ~= 1 and colspans[i] or nil)
					:css('width', math.floor(100 / self.combatants * colspans[i] + 0.5) .. '%')
					-- no border on the right of the rightmost column
					:css('border-right', i ~= lastCombatant and infoboxStyle.internal_border or nil)
					-- no padding on the left of the leftmost column
					:css('padding-left', i ~= 1 and '0.25em' or nil)
					-- don't show the border if we're directly under a header
					:css('border-top', not headerText and infoboxStyle.internal_border or nil)
					:newline()
					:wikitext(self.args[prefix .. i .. suffix])
			end
		end
	end

	if jointText then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:css('text-align', 'center')
				-- don't show the border if we're directly under a header
				:css('border-top', (not headerText or colspans[1]) and infoboxStyle.internal_border or nil)
				:newline()
				:wikitext(jointText)
	end
end

function IMC:renderHeaderTable(builder)
	builder = builder:tag('table')
		:css('width', '100%')
		:css('margin', 0)
		:css('padding', 0)
		:css('border', 0)

	if self.args.date then
		builder:tag('tr')
			:tag('th')
				:css('padding-right', '1em')
				:wikitext('Date')
			:done()
			:tag('td')
				:wikitext(self.args.date)
	end

	builder = builder:tag('tr')
		:tag('th')
			:css('padding-right', '1em')
			:wikitext('Location')
		:done()
		:tag('td')
			:tag('span')
				:addClass('location')
				:wikitext(self.args.place or '{&amp;#123;{place}&amp;#125;}') -- hack so that people who don't know Lua know that this parameter is required
			:done()
	if self.args.coordinates then
		builder:wikitext('&lt;br /&gt;' .. self.args.coordinates)
	end
	builder = builder:done():done()

	-- only for &quot;Putsch&quot;
    if self.args.action then
		builder:tag('tr')
			:tag('th')
				:css('padding-right', '1em')
				:wikitext(self.args.action and 'Action')
			:done()
			:tag('td')
				:wikitext(self.args.action)
	end

	if self.args.status or self.args.result then
		builder:tag('tr')
			:tag('th')
				:css('padding-right', '1em')
				:wikitext(self.args.status and 'Status' or 'Result')
			:done()
			:tag('td')
				:newline()
				:wikitext(self.args.status or self.args.result)
	end

	if self.args.territory then
		builder:tag('tr')
			:tag('th')
				:css('padding-right', '1em')
				:wikitext('Territorial&lt;br /&gt;changes')
			:done()
			:tag('td')
				:newline()
				:wikitext(self.args.territory)
	end
end

function IMC:render()
	local builder = mw.html.create()
	if self.args.campaignbox then
		builder = builder:tag('table')
			:css('float', 'right')
			:css('clear', 'right')
			:css('background', 'transparent')
			:css('margin', 0)
			:css('padding', 0)
			:addClass('mw-stack mobile-float-reset')
			:attr('role', 'presentation') 
			:tag('tr'):tag('td')
	end
	builder = builder:tag('table')
		:addClass('infobox vevent')
		:cssText(infoboxStyle.main_box_raw_auto_width)
		:css('width', self.args.width or '315px')

	builder:tag('tr')
		:tag('th')
			:addClass('summary')
			:attr('colspan', self.combatants)
			:cssText(infoboxStyle.header_raw)
			:wikitext(self.args.conflict or mw.title.getCurrentTitle().text)
	if self.args.partof then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:cssText(infoboxStyle.sub_header_raw)
				:wikitext('Part of ' .. self.args.partof)
	end
	if self.args.image then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:cssText(infoboxStyle.image_box_raw)
				:wikitext(string.format('%s%s%s',
					require('Module:InfoboxImage').InfoboxImage{args = {
						image = self.args.image,
						size = self.args.image_size,
						sizedefault = 'frameless',
						upright = 1,
						alt = self.args.alt
					}},
					self.args.caption and '&lt;br /&gt;' or '',
					self.args.caption or ''
				))
	end
	self:renderHeaderTable(builder:tag('tr'):tag('td'):attr('colspan', self.combatants))
	self:renderPerCombatant(builder, self.args.combatants_header or 'Belligerents', 'combatant')
	-- can be un-hardcoded once gerrit:165108 is merged
	for _,v in ipairs{'a','b','c','d'} do
		self:renderPerCombatant(builder, nil, 'combatant', v)
	end
	
	self:renderPerCombatant(builder, 'Commanders and leaders', 'commander')
	self:renderPerCombatant(builder, 'Units involved', 'units')
	self:renderPerCombatant(builder, 'Strength', 'strength')
	self:renderPerCombatant(builder, 'Political support', 'polstrength')
	self:renderPerCombatant(builder, 'Military support', 'milstrength')
	self:renderPerCombatant(builder, 'Casualties and losses', 'casualties')

	if self.args.notes then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:css('font-size', '90%')
				:css('border-top', infoboxStyle.section_border)
				:newline()
				:wikitext(self.args.notes)
	end
	if self.args.map_type then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:css('border-top', infoboxStyle.internal_border)
				:tag('center')
					:node(require('Module:Location map').main(self.frame, {
						self.args.map_type,
						relief = self.args.map_relief,
						coordinates = self.args.coordinates,
						width = self.args.map_size or 220,
						float = 'center',
						border = 'none',
						mark = self.args.map_mark,
						marksize = self.args.map_marksize or 8,
						label = self.args.map_label,
						alt = self.args.map_alt,
						caption = self.args.map_caption or ('Location within ' .. self.args.map_type)
					}))
	end
	builder = builder:done()
	if self.args.campaignbox then
		builder = builder:done():done():tag('tr')
			:tag('td')
				:wikitext(self.args.campaignbox)
			:done()
		:done()
	end
	return builder
end

function IMC.new(frame, args)
	if not args then
		args = require('Module:Arguments').getArgs(frame, {wrappers = 'Template:Infobox military conflict'})
	end
	local obj = {
		frame = frame,
		args = args
	}

	-- until gerrit:165108 is merged, there's still a cap on combatants, but as soon as it merges, we can update this little bit of code to uncap it
	-- also, don't try to make this more efficient, or references could be in the wrong order
	obj.combatants = 2
	for _,v in ipairs{'', 'a', 'b', 'c', 'd'} do
		for i = 1,5 do
			if args['combatant' .. i .. v] then
				obj.combatants = math.max(obj.combatants, i)
			end
		end
	end

	return setmetatable(obj, IMC)
end

local p = {}

function p.main(frame)
	return IMC.new(frame):render()
end

return p</text>
      <sha1>k17th5i6e141d00lfxzz7agzxrjp4ne</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Labelled list hatnote</title>
    <ns>828</ns>
    <id>50971703</id>
    <revision>
      <id>763259375</id>
      <parentid>745988142</parentid>
      <timestamp>2017-02-02T05:26:53Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Labelled list hatnote]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3083">--------------------------------------------------------------------------------
--                               Labelled list                                --
--                                                                            --
-- This module does the core work of creating a hatnote composed of a list    --
-- prefixed by a colon-terminated label, i.e. &quot;LABEL: [andList of pages]&quot;,    --
-- for {{see also}} and similar templates.                                    --
--------------------------------------------------------------------------------

local mHatnote = require('Module:Hatnote')
local mHatlist = require('Module:Hatnote list')
local mArguments --initialize lazily
local p = {}

-- Defaults global to this module
local defaults = {
	label = 'See also', --Final fallback for label argument
	labelForm = '%s: %s',
	prefixes = {'label', 'label ', 'l'},
	template = 'Module:Labelled list hatnote'
}

-- Helper function that pre-combines display parameters into page arguments.
-- Also compresses sparse arrays, as a desirable side-effect.
function p.preprocessDisplays (args, prefixes)
	-- Prefixes specify which parameters, in order, to check for display options
	-- They each have numbers auto-appended, e.g. 'label1', 'label 1', &amp; 'l1'
	prefixes = prefixes or defaults.prefixes
	local pages = {}
	for k, v in pairs(args) do
		if type(k) == 'number' then
			local display
			for i = 1, #prefixes do
				display = args[prefixes[i] .. k]
				if display then break end
			end
			local page = display and
				string.format('%s|%s', string.gsub(v, '|.*$', ''), display) or v
			pages[#pages + 1] = page
		end
	end
	return pages
end

-- Produces a labelled pages-list hatnote.
-- The main frame (template definition) takes 1 or 2 arguments, for a singular
-- and (optionally) plural label respectively:
-- * {{#invoke:Labelled list hatnote|labelledList|Singular label|Plural label}}
-- The resulting template takes pagename &amp; label parameters normally.
function p.labelledList (frame)
	mArguments = require('Module:Arguments')
	local labels = {frame.args[1] or defaults.label}
	labels[2] = frame.args[2] or labels[1]
	local template = frame:getParent():getTitle()
	local args = mArguments.getArgs(frame, {parentOnly = true})
	local pages = p.preprocessDisplays(args)
	local options = {
		extraclasses = frame.args.extraclasses,
		category = args.category,
		selfref = frame.args.selfref or args.selfref,
		template = template
	}
	return p._labelledList(pages, labels, options)
end

function p._labelledList (pages, labels, options)
	labels = labels or {}
	if #pages == 0 then
		return mHatnote.makeWikitextError(
			'no page names specified',
			(options.template or defaults.template) .. '#Errors',
			options.category
		)
	end
	label = (#pages == 1 and labels[1] or labels[2]) or defaults.label
	local text = string.format(
		options.labelForm or defaults.labelForm,
		label,
		mHatlist.andList(pages, true)
	)
	local hnOptions = {
		extraclasses = options.extraclasses,
		selfref = options.selfref
	}
	return mHatnote._hatnote(text, hnOptions)
end

return p</text>
      <sha1>932zychfwl5xu5castj2k9j5qs6lzif</sha1>
    </revision>
  </page>
  <page>
    <title>Module:List</title>
    <ns>828</ns>
    <id>41068627</id>
    <revision>
      <id>794511725</id>
      <parentid>788254921</parentid>
      <timestamp>2017-08-08T13:55:25Z</timestamp>
      <contributor>
        <username>Jdlrobson</username>
        <id>15999850</id>
      </contributor>
      <comment>Minerva skin needs whether an hlist is separated to be explicit (see https://en.wikipedia.org/wiki/Wikipedia:Village_pump_(technical)#Hlist_bullets_not_shown_in_mobile)</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5154">-- This module outputs different kinds of lists. At the moment, bulleted,
-- unbulleted, horizontal, ordered, and horizontal ordered lists are supported.

local libUtil = require('libraryUtil')
local checkType = libUtil.checkType
local mTableTools = require('Module:TableTools')

local p = {}

local listTypes = {
	['bulleted'] = true,
	['unbulleted'] = true,
	['horizontal'] = true,
	['ordered'] = true,
	['horizontal_ordered'] = true
}

function p.makeListData(listType, args)
	-- Constructs a data table to be passed to p.renderList.
	local data = {}

	-- Classes
	data.classes = {}
	if listType == 'horizontal' or listType == 'horizontal_ordered' then
		table.insert(data.classes, 'hlist hlist-separated')
	elseif listType == 'unbulleted' then
		table.insert(data.classes, 'plainlist')
	end
	table.insert(data.classes, args.class)

	-- Main div style
	data.style = args.style

	-- Indent for horizontal lists
	if listType == 'horizontal' or listType == 'horizontal_ordered' then
		local indent = tonumber(args.indent)
		indent = indent and indent * 1.6 or 0
		if indent &gt; 0 then
			data.marginLeft = indent .. 'em'
		end
	end
	
	-- List style types for ordered lists
	-- This could be &quot;1, 2, 3&quot;, &quot;a, b, c&quot;, or a number of others. The list style
	-- type is either set by the &quot;type&quot; attribute or the &quot;list-style-type&quot; CSS
	-- property.
	if listType == 'ordered' or listType == 'horizontal_ordered' then 
		data.listStyleType = args.list_style_type or args['list-style-type']
		data.type = args['type']

		-- Detect invalid type attributes and attempt to convert them to
		-- list-style-type CSS properties.
		if data.type 
			and not data.listStyleType
			and not tostring(data.type):find('^%s*[1AaIi]%s*$')
		then
			data.listStyleType = data.type
			data.type = nil
		end
	end
	
	-- List tag type
	if listType == 'ordered' or listType == 'horizontal_ordered' then
		data.listTag = 'ol'
	else
		data.listTag = 'ul'
	end

	-- Start number for ordered lists
	data.start = args.start
	if listType == 'horizontal_ordered' then
		-- Apply fix to get start numbers working with horizontal ordered lists.
		local startNum = tonumber(data.start)
		if startNum then
			data.counterReset = 'listitem ' .. tostring(startNum - 1)
		end
	end

	-- List style
	 -- ul_style and ol_style are included for backwards compatibility. No
	 -- distinction is made for ordered or unordered lists.
	data.listStyle = args.list_style

	-- List items
	-- li_style is included for backwards compatibility. item_style was included
	-- to be easier to understand for non-coders.
	data.itemStyle = args.item_style or args.li_style
	data.items = {}
	for i, num in ipairs(mTableTools.numKeys(args)) do
		local item = {}
		item.content = args[num]
		item.style = args['item' .. tostring(num) .. '_style']
			or args['item_style' .. tostring(num)]
		item.value = args['item' .. tostring(num) .. '_value']
			or args['item_value' .. tostring(num)]
		table.insert(data.items, item)
	end
	
	return data
end

function p.renderList(data)
	-- Renders the list HTML.
	
	-- Return the blank string if there are no list items.
	if type(data.items) ~= 'table' or #data.items &lt; 1 then
		return ''
	end
	
	-- Render the main div tag.
	local root = mw.html.create('div')
	for i, class in ipairs(data.classes or {}) do
		root:addClass(class)
	end
	root:css{['margin-left'] = data.marginLeft}
	if data.style then
		root:cssText(data.style)
	end

	-- Render the list tag.
	local list = root:tag(data.listTag or 'ul')
	list
		:attr{start = data.start, type = data.type}
		:css{
			['counter-reset'] = data.counterReset,
			['list-style-type'] = data.listStyleType
		}
	if data.listStyle then
		list:cssText(data.listStyle)
	end

	-- Render the list items
	for i, t in ipairs(data.items or {}) do
		local item = list:tag('li')
		if data.itemStyle then
			item:cssText(data.itemStyle)
		end
		if t.style then
			item:cssText(t.style)
		end
		item
			:attr{value = t.value}
			:wikitext(t.content)
	end

	return tostring(root)
end

function p.renderTrackingCategories(args)
	local isDeprecated = false -- Tracks deprecated parameters.
	for k, v in pairs(args) do
		k = tostring(k)
		if k:find('^item_style%d+$') or k:find('^item_value%d+$') then
			isDeprecated = true
			break
		end
	end
	local ret = ''
	if isDeprecated then
		ret = ret .. '[[Category:List templates with deprecated parameters]]'
	end
	return ret
end

function p.makeList(listType, args)
	if not listType or not listTypes[listType] then
		error(string.format(
			&quot;bad argument #1 to 'makeList' ('%s' is not a valid list type)&quot;,
			tostring(listType)
		), 2)
	end
	checkType('makeList', 2, args, 'table')
	local data = p.makeListData(listType, args)
	local list = p.renderList(data)
	local trackingCategories = p.renderTrackingCategories(args)
	return list .. trackingCategories
end

for listType in pairs(listTypes) do
	p[listType] = function (frame)
		local mArguments = require('Module:Arguments')
		local origArgs = mArguments.getArgs(frame)
		-- Copy all the arguments to a new table, for faster indexing.
		local args = {}
		for k, v in pairs(origArgs) do
			args[k] = v
		end
		return p.makeList(listType, args)
	end
end

return p</text>
      <sha1>lkqmcmpfob2c6xhq46f675tm6p136ns</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Main</title>
    <ns>828</ns>
    <id>42570919</id>
    <revision>
      <id>727437646</id>
      <parentid>727363620</parentid>
      <timestamp>2016-06-29T00:34:26Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Removed extraclasses option; those classes appear to be deprecated</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2239">--[[
-- This module produces a link to a main article or articles. It implements the
-- template {{main}}.
-- 
-- If the module is used in category or category talk space, it produces &quot;The
-- main article for this category is xxx&quot;. Otherwise, it produces
-- &quot;Main article: xxx&quot;.
--]]

local mHatnote = require('Module:Hatnote')
local mHatlist = require('Module:Hatnote list')
local mArguments -- lazily initialise
local p = {}

function p.main(frame)
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {parentOnly = true})
	local pages = {}
	for k, v in pairs(args) do
		if type(k) == 'number' then
			local display = args['label ' .. k] or args['l' .. k]
			local page = display and
				string.format('%s|%s', string.gsub(v, '|.*$', ''), display) or v
			pages[#pages + 1] = page
		end
	end
	if #pages == 0 and mw.title.getCurrentTitle().namespace == 0 then
		return mHatnote.makeWikitextError(
			'no page names specified',
			'Template:Main#Errors',
			args.category
		)
	end
	local options = {
		selfref = args.selfref
	}
	return p._main(pages, options)
end

function p._main(args, options)
	-- Get the list of pages. If no first page was specified we use the current
	-- page name.
	local currentTitle = mw.title.getCurrentTitle()
	if #args == 0 then args = {currentTitle.text} end
	local firstPage = string.gsub(args[1], '|.*$', '')
	-- Find the pagetype.
	local pageType = mHatnote.findNamespaceId(firstPage) == 0 and 'article' or 'page'
	-- Make the formatted link text
	list = mHatlist.andList(args, true)
	-- Build the text.
	local isPlural = #args &gt; 1
	local mainForm
	local curNs = currentTitle.namespace
	if (curNs == 14) or (curNs == 15) then --category/talk namespaces
		mainForm = isPlural and
			'The main %ss for this [[Wikipedia:Categorization|category]] are %s'
			or
			'The main %s for this [[Wikipedia:Categorization|category]] is %s'
	else
		mainForm = isPlural and 'Main %ss: %s' or 'Main %s: %s'
	end
	local text = string.format(mainForm, pageType, list)
	-- Process the options and pass the text to the _rellink function in
	-- [[Module:Hatnote]].
	options = options or {}
	local hnOptions = {
		selfref = options.selfref
	}
	return mHatnote._hatnote(text, hnOptions)
end

return p</text>
      <sha1>9iplsr5jg1vj2lm6dkuiqtfon8648ne</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Message box</title>
    <ns>828</ns>
    <id>40574910</id>
    <revision>
      <id>803399820</id>
      <parentid>742383679</parentid>
      <timestamp>2017-10-02T09:03:51Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>change span to div to reduce lint errors</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="16807">-- This is a meta-module for producing message box templates, including
-- {{mbox}}, {{ambox}}, {{imbox}}, {{tmbox}}, {{ombox}}, {{cmbox}} and {{fmbox}}.

-- Load necessary modules.
require('Module:No globals')
local getArgs
local categoryHandler = require('Module:Category handler')._main
local yesno = require('Module:Yesno')

-- Get a language object for formatDate and ucfirst.
local lang = mw.language.getContentLanguage()

-- Define constants
local CONFIG_MODULE = 'Module:Message box/configuration'

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getTitleObject(...)
	-- Get the title object, passing the function through pcall
	-- in case we are over the expensive function count limit.
	local success, title = pcall(mw.title.new, ...)
	if success then
		return title
	end
end

local function union(t1, t2)
	-- Returns the union of two arrays.
	local vals = {}
	for i, v in ipairs(t1) do
		vals[v] = true
	end
	for i, v in ipairs(t2) do
		vals[v] = true
	end
	local ret = {}
	for k in pairs(vals) do
		table.insert(ret, k)
	end
	table.sort(ret)
	return ret
end

local function getArgNums(args, prefix)
	local nums = {}
	for k, v in pairs(args) do
		local num = mw.ustring.match(tostring(k), '^' .. prefix .. '([1-9]%d*)$')
		if num then
			table.insert(nums, tonumber(num))
		end
	end
	table.sort(nums)
	return nums
end

--------------------------------------------------------------------------------
-- Box class definition
--------------------------------------------------------------------------------

local MessageBox = {}
MessageBox.__index = MessageBox

function MessageBox.new(boxType, args, cfg)
	args = args or {}
	local obj = {}

	-- Set the title object and the namespace.
	obj.title = getTitleObject(args.page) or mw.title.getCurrentTitle()

	-- Set the config for our box type.
	obj.cfg = cfg[boxType]
	if not obj.cfg then
		local ns = obj.title.namespace
		-- boxType is &quot;mbox&quot; or invalid input
		if ns == 0 then
			obj.cfg = cfg.ambox -- main namespace
		elseif ns == 6 then
			obj.cfg = cfg.imbox -- file namespace
		elseif ns == 14 then
			obj.cfg = cfg.cmbox -- category namespace
		else
			local nsTable = mw.site.namespaces[ns]
			if nsTable and nsTable.isTalk then
				obj.cfg = cfg.tmbox -- any talk namespace
			else
				obj.cfg = cfg.ombox -- other namespaces or invalid input
			end
		end
	end

	-- Set the arguments, and remove all blank arguments except for the ones
	-- listed in cfg.allowBlankParams.
	do
		local newArgs = {}
		for k, v in pairs(args) do
			if v ~= '' then
				newArgs[k] = v
			end
		end
		for i, param in ipairs(obj.cfg.allowBlankParams or {}) do
			newArgs[param] = args[param]
		end
		obj.args = newArgs
	end

	-- Define internal data structure.
	obj.categories = {}
	obj.classes = {}

	return setmetatable(obj, MessageBox)
end

function MessageBox:addCat(ns, cat, sort)
	if not cat then
		return nil
	end
	if sort then
		cat = string.format('[[Category:%s|%s]]', cat, sort)
	else
		cat = string.format('[[Category:%s]]', cat)
	end
	self.categories[ns] = self.categories[ns] or {}
	table.insert(self.categories[ns], cat)
end

function MessageBox:addClass(class)
	if not class then
		return nil
	end
	table.insert(self.classes, class)
end

function MessageBox:setParameters()
	local args = self.args
	local cfg = self.cfg

	-- Get type data.
	self.type = args.type
	local typeData = cfg.types[self.type]
	self.invalidTypeError = cfg.showInvalidTypeError
		and self.type
		and not typeData
	typeData = typeData or cfg.types[cfg.default]
	self.typeClass = typeData.class
	self.typeImage = typeData.image

	-- Find if the box has been wrongly substituted.
	self.isSubstituted = cfg.substCheck and args.subst == 'SUBST'

	-- Find whether we are using a small message box.
	self.isSmall = cfg.allowSmall and (
		cfg.smallParam and args.small == cfg.smallParam
		or not cfg.smallParam and yesno(args.small)
	)

	-- Add attributes, classes and styles.
	self.id = args.id
	if yesno(args.plainlinks) ~= false then
		self:addClass('plainlinks')
	end
	for _, class in ipairs(cfg.classes or {}) do
		self:addClass(class)
	end
	if self.isSmall then
		self:addClass(cfg.smallClass or 'mbox-small')
	end
	self:addClass(self.typeClass)
	self:addClass(args.class)
	self.style = args.style
	self.attrs = args.attrs

	-- Set text style.
	self.textstyle = args.textstyle

	-- Find if we are on the template page or not. This functionality is only
	-- used if useCollapsibleTextFields is set, or if both cfg.templateCategory
	-- and cfg.templateCategoryRequireName are set.
	self.useCollapsibleTextFields = cfg.useCollapsibleTextFields
	if self.useCollapsibleTextFields
		or cfg.templateCategory
		and cfg.templateCategoryRequireName
	then
		self.name = args.name
		if self.name then
			local templateName = mw.ustring.match(
				self.name,
				'^[tT][eE][mM][pP][lL][aA][tT][eE][%s_]*:[%s_]*(.*)$'
			) or self.name
			templateName = 'Template:' .. templateName
			self.templateTitle = getTitleObject(templateName)
		end
		self.isTemplatePage = self.templateTitle
			and mw.title.equals(self.title, self.templateTitle)
	end

	-- Process data for collapsible text fields. At the moment these are only
	-- used in {{ambox}}.
	if self.useCollapsibleTextFields then
		-- Get the self.issue value.
		if self.isSmall and args.smalltext then
			self.issue = args.smalltext
		else
			local sect
			if args.sect == '' then
				sect = 'This ' .. (cfg.sectionDefault or 'page')
			elseif type(args.sect) == 'string' then
				sect = 'This ' .. args.sect
			end
			local issue = args.issue
			issue = type(issue) == 'string' and issue ~= '' and issue or nil
			local text = args.text
			text = type(text) == 'string' and text or nil
			local issues = {}
			table.insert(issues, sect)
			table.insert(issues, issue)
			table.insert(issues, text)
			self.issue = table.concat(issues, ' ')
		end

		-- Get the self.talk value.
		local talk = args.talk
		-- Show talk links on the template page or template subpages if the talk
		-- parameter is blank.
		if talk == ''
			and self.templateTitle
			and (
				mw.title.equals(self.templateTitle, self.title)
				or self.title:isSubpageOf(self.templateTitle)
			)
		then
			talk = '#'
		elseif talk == '' then
			talk = nil
		end
		if talk then
			-- If the talk value is a talk page, make a link to that page. Else
			-- assume that it's a section heading, and make a link to the talk
			-- page of the current page with that section heading.
			local talkTitle = getTitleObject(talk)
			local talkArgIsTalkPage = true
			if not talkTitle or not talkTitle.isTalkPage then
				talkArgIsTalkPage = false
				talkTitle = getTitleObject(
					self.title.text,
					mw.site.namespaces[self.title.namespace].talk.id
				)
			end
			if talkTitle and talkTitle.exists then
				local talkText = 'Relevant discussion may be found on'
				if talkArgIsTalkPage then
					talkText = string.format(
						'%s [[%s|%s]].',
						talkText,
						talk,
						talkTitle.prefixedText
					)
				else
					talkText = string.format(
						'%s the [[%s#%s|talk page]].',
						talkText,
						talkTitle.prefixedText,
						talk
					)
				end
				self.talk = talkText
			end
		end

		-- Get other values.
		self.fix = args.fix ~= '' and args.fix or nil
		local date
		if args.date and args.date ~= '' then
			date = args.date
		elseif args.date == '' and self.isTemplatePage then
			date = lang:formatDate('F Y')
		end
		if date then
			self.date = string.format(&quot; &lt;small&gt;''(%s)''&lt;/small&gt;&quot;, date)
		end
		self.info = args.info
		if yesno(args.removalnotice) then
			self.removalNotice = cfg.removalNotice
		end
	end

	-- Set the non-collapsible text field. At the moment this is used by all box
	-- types other than ambox, and also by ambox when small=yes.
	if self.isSmall then
		self.text = args.smalltext or args.text
	else
		self.text = args.text
	end

	-- Set the below row.
	self.below = cfg.below and args.below

	-- General image settings.
	self.imageCellDiv = not self.isSmall and cfg.imageCellDiv
	self.imageEmptyCell = cfg.imageEmptyCell
	if cfg.imageEmptyCellStyle then
		self.imageEmptyCellStyle = 'border:none;padding:0px;width:1px'
	end

	-- Left image settings.
	local imageLeft = self.isSmall and args.smallimage or args.image
	if cfg.imageCheckBlank and imageLeft ~= 'blank' and imageLeft ~= 'none'
		or not cfg.imageCheckBlank and imageLeft ~= 'none'
	then
		self.imageLeft = imageLeft
		if not imageLeft then
			local imageSize = self.isSmall
				and (cfg.imageSmallSize or '30x30px')
				or '40x40px'
			self.imageLeft = string.format('[[File:%s|%s|link=|alt=]]', self.typeImage
				or 'Imbox notice.png', imageSize)
		end
	end

	-- Right image settings.
	local imageRight = self.isSmall and args.smallimageright or args.imageright
	if not (cfg.imageRightNone and imageRight == 'none') then
		self.imageRight = imageRight
	end
end

function MessageBox:setMainspaceCategories()
	local args = self.args
	local cfg = self.cfg

	if not cfg.allowMainspaceCategories then
		return nil
	end

	local nums = {}
	for _, prefix in ipairs{'cat', 'category', 'all'} do
		args[prefix .. '1'] = args[prefix]
		nums = union(nums, getArgNums(args, prefix))
	end

	-- The following is roughly equivalent to the old {{Ambox/category}}.
	local date = args.date
	date = type(date) == 'string' and date
	local preposition = 'from'
	for _, num in ipairs(nums) do
		local mainCat = args['cat' .. tostring(num)]
			or args['category' .. tostring(num)]
		local allCat = args['all' .. tostring(num)]
		mainCat = type(mainCat) == 'string' and mainCat
		allCat = type(allCat) == 'string' and allCat
		if mainCat and date and date ~= '' then
			local catTitle = string.format('%s %s %s', mainCat, preposition, date)
			self:addCat(0, catTitle)
			catTitle = getTitleObject('Category:' .. catTitle)
			if not catTitle or not catTitle.exists then
				self:addCat(0, 'Articles with invalid date parameter in template')
			end
		elseif mainCat and (not date or date == '') then
			self:addCat(0, mainCat)
		end
		if allCat then
			self:addCat(0, allCat)
		end
	end
end

function MessageBox:setTemplateCategories()
	local args = self.args
	local cfg = self.cfg

	-- Add template categories.
	if cfg.templateCategory then
		if cfg.templateCategoryRequireName then
			if self.isTemplatePage then
				self:addCat(10, cfg.templateCategory)
			end
		elseif not self.title.isSubpage then
			self:addCat(10, cfg.templateCategory)
		end
	end

	-- Add template error categories.
	if cfg.templateErrorCategory then
		local templateErrorCategory = cfg.templateErrorCategory
		local templateCat, templateSort
		if not self.name and not self.title.isSubpage then
			templateCat = templateErrorCategory
		elseif self.isTemplatePage then
			local paramsToCheck = cfg.templateErrorParamsToCheck or {}
			local count = 0
			for i, param in ipairs(paramsToCheck) do
				if not args[param] then
					count = count + 1
				end
			end
			if count &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = tostring(count)
			end
			if self.categoryNums and #self.categoryNums &gt; 0 then
				templateCat = templateErrorCategory
				templateSort = 'C'
			end
		end
		self:addCat(10, templateCat, templateSort)
	end
end

function MessageBox:setAllNamespaceCategories()
	-- Set categories for all namespaces.
	if self.invalidTypeError then
		local allSort = (self.title.namespace == 0 and 'Main:' or '') .. self.title.prefixedText
		self:addCat('all', 'Wikipedia message box parameter needs fixing', allSort)
	end
	if self.isSubstituted then
		self:addCat('all', 'Pages with incorrectly substituted templates')
	end
end

function MessageBox:setCategories()
	if self.title.namespace == 0 then
		self:setMainspaceCategories()
	elseif self.title.namespace == 10 then
		self:setTemplateCategories()
	end
	self:setAllNamespaceCategories()
end

function MessageBox:renderCategories()
	-- Convert category tables to strings and pass them through
	-- [[Module:Category handler]].
	return categoryHandler{
		main = table.concat(self.categories[0] or {}),
		template = table.concat(self.categories[10] or {}),
		all = table.concat(self.categories.all or {}),
		nocat = self.args.nocat,
		page = self.args.page
	}
end

function MessageBox:export()
	local root = mw.html.create()

	-- Add the subst check error.
	if self.isSubstituted and self.name then
		root:tag('b')
			:addClass('error')
			:wikitext(string.format(
				'Template &lt;code&gt;%s[[Template:%s|%s]]%s&lt;/code&gt; has been incorrectly substituted.',
				mw.text.nowiki('{{'), self.name, self.name, mw.text.nowiki('}}')
			))
	end

	-- Create the box table.
	local boxTable = root:tag('table')
	boxTable:attr('id', self.id or nil)
	for i, class in ipairs(self.classes or {}) do
		boxTable:addClass(class or nil)
	end
	boxTable
		:cssText(self.style or nil)
		:attr('role', 'presentation')

	if self.attrs then
		boxTable:attr(self.attrs)
	end

	-- Add the left-hand image.
	local row = boxTable:tag('tr')
	if self.imageLeft then
		local imageLeftCell = row:tag('td'):addClass('mbox-image')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageLeftCell so that the image
			-- is inside it. Divs use style=&quot;width: 52px;&quot;, which limits the
			-- image width to 52px. If any images in a div are wider than that,
			-- they may overlap with the text or cause other display problems.
			imageLeftCell = imageLeftCell:tag('div'):css('width', '52px')
		end
		imageLeftCell:wikitext(self.imageLeft or nil)
	elseif self.imageEmptyCell then
		-- Some message boxes define an empty cell if no image is specified, and
		-- some don't. The old template code in templates where empty cells are
		-- specified gives the following hint: &quot;No image. Cell with some width
		-- or padding necessary for text cell to have 100% width.&quot;
		row:tag('td')
			:addClass('mbox-empty-cell')
			:cssText(self.imageEmptyCellStyle or nil)
	end

	-- Add the text.
	local textCell = row:tag('td'):addClass('mbox-text')
	if self.useCollapsibleTextFields then
		-- The message box uses advanced text parameters that allow things to be
		-- collapsible. At the moment, only ambox uses this.
		textCell:cssText(self.textstyle or nil)
		local textCellDiv = textCell:tag('div')
		textCellDiv
			:addClass('mbox-text-span')
			:wikitext(self.issue or nil)
		if (self.talk or self.fix) and not self.isSmall then
			textCellDiv:tag('span')
				:addClass('hide-when-compact')
				:wikitext(self.talk and (' ' .. self.talk) or nil)
				:wikitext(self.fix and (' ' .. self.fix) or nil)
		end
		textCellDiv:wikitext(self.date and (' ' .. self.date) or nil)
		if self.info and not self.isSmall then
			textCellDiv
				:tag('span')
				:addClass('hide-when-compact')
				:wikitext(self.info and (' ' .. self.info) or nil)
		end
		if self.removalNotice then
			textCellDiv:tag('small')
				:addClass('hide-when-compact')
				:tag('i')
					:wikitext(string.format(&quot; (%s)&quot;, self.removalNotice))
		end
	else
		-- Default text formatting - anything goes.
		textCell
			:cssText(self.textstyle or nil)
			:wikitext(self.text or nil)
	end

	-- Add the right-hand image.
	if self.imageRight then
		local imageRightCell = row:tag('td'):addClass('mbox-imageright')
		if self.imageCellDiv then
			-- If we are using a div, redefine imageRightCell so that the image
			-- is inside it.
			imageRightCell = imageRightCell:tag('div'):css('width', '52px')
		end
		imageRightCell
			:wikitext(self.imageRight or nil)
	end

	-- Add the below row.
	if self.below then
		boxTable:tag('tr')
			:tag('td')
				:attr('colspan', self.imageRight and '3' or '2')
				:addClass('mbox-text')
				:cssText(self.textstyle or nil)
				:wikitext(self.below or nil)
	end

	-- Add error message for invalid type parameters.
	if self.invalidTypeError then
		root:tag('div')
			:css('text-align', 'center')
			:wikitext(string.format(
				'This message box is using an invalid &quot;type=%s&quot; parameter and needs fixing.',
				self.type or ''
			))
	end

	-- Add categories.
	root:wikitext(self:renderCategories() or nil)

	return tostring(root)
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p, mt = {}, {}

function p._exportClasses()
	-- For testing.
	return {
		MessageBox = MessageBox
	}
end

function p.main(boxType, args, cfgTables)
	local box = MessageBox.new(boxType, args, cfgTables or mw.loadData(CONFIG_MODULE))
	box:setParameters()
	box:setCategories()
	return box:export()
end

function mt.__index(t, k)
	return function (frame)
		if not getArgs then
			getArgs = require('Module:Arguments').getArgs
		end
		return t.main(k, getArgs(frame, {trim = false, removeBlanks = false}))
	end
end

return setmetatable(p, mt)</text>
      <sha1>o82985w14pvc3irjmn280op991seq7t</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Message box/configuration</title>
    <ns>828</ns>
    <id>40627038</id>
    <revision>
      <id>742383738</id>
      <parentid>717357572</parentid>
      <timestamp>2016-10-03T11:04:13Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>allow all templates to disable the plainlinks class</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6091">--------------------------------------------------------------------------------
--                          Message box configuration                         --
--                                                                            --
-- This module contains configuration data for [[Module:Message box]].        --
--------------------------------------------------------------------------------

return {
	ambox = {
		types = {
			speedy = {
				class = 'ambox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'ambox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'ambox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'ambox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'ambox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'ambox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			notice = {
				class = 'ambox-notice',
				image = 'Information icon4.svg'
			}
		},
		default                     = 'notice',
		allowBlankParams            = {'talk', 'sect', 'date', 'issue', 'fix', 'subst', 'hidden'},
		allowSmall                  = true,
		smallParam                  = 'left',
		smallClass                  = 'mbox-small-left',
		substCheck                  = true,
		classes                     = {'metadata', 'ambox'},
		imageEmptyCell              = true,
		imageCheckBlank             = true,
		imageSmallSize              = '20x20px',
		imageCellDiv                = true,
		useCollapsibleTextFields    = true,
		imageRightNone              = true,
		sectionDefault              = 'article',
		allowMainspaceCategories    = true,
		templateCategory            = 'Article message templates',
	        templateCategoryRequireName = true,
		templateErrorCategory       = 'Article message templates with missing parameters',
		templateErrorParamsToCheck  = {'issue', 'fix', 'subst'},
		removalNotice               = '[[Help:Maintenance template removal|Learn how and when to remove this template message]]'
	},
	
	cmbox = {
		types = {
			speedy = {
				class = 'cmbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'cmbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'cmbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'cmbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'cmbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'cmbox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			notice = {
				class = 'cmbox-notice',
				image = 'Information icon4.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'cmbox'},
		imageEmptyCell       = true
	},
	
	fmbox = {
		types = {
			warning = {
				class = 'fmbox-warning',
				image = 'Ambox warning pn.svg'
			},
			editnotice = {
				class = 'fmbox-editnotice',
				image = 'Information icon4.svg'
			},
			system = {
				class = 'fmbox-system',
				image = 'Information icon4.svg'
			}
		},
		default              = 'system',
		showInvalidTypeError = true,
		classes              = {'fmbox'},
		imageEmptyCell       = false,
		imageRightNone       = false
	},
	
	imbox = {
		types = {
			speedy = {
				class = 'imbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'imbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'imbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'imbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'imbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'imbox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			license = {
				class = 'imbox-license licensetpl',
				image = 'Imbox license.png' -- @todo We need an SVG version of this
			},
			featured = {
				class = 'imbox-featured',
				image = 'Cscr-featured.svg'
			},
			notice = {
				class = 'imbox-notice',
				image = 'Information icon4.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'imbox'},
		imageEmptyCell       = true,
		below                = true,
		templateCategory     = 'File message boxes'
	},
	
	ombox = {
		types = {
			speedy = {
				class = 'ombox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'ombox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'ombox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'ombox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'ombox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'ombox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			notice = {
				class = 'ombox-notice',
				image = 'Information icon4.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'ombox'},
		allowSmall           = true,
		imageEmptyCell       = true,
		imageRightNone       = true
	},
	
	tmbox = {
		types = {
			speedy = {
				class = 'tmbox-speedy',
				image = 'Ambox warning pn.svg'
			},
			delete = {
				class = 'tmbox-delete',
				image = 'Ambox warning pn.svg'
			},
			content = {
				class = 'tmbox-content',
				image = 'Ambox important.svg'
			},
			style = {
				class = 'tmbox-style',
				image = 'Edit-clear.svg'
			},
			move = {
				class = 'tmbox-move',
				image = 'Merge-split-transwiki default.svg'
			},
			protection = {
				class = 'tmbox-protection',
				image = 'Padlock-silver-medium.svg'
			},
			notice = {
				class = 'tmbox-notice',
				image = 'Information icon4.svg'
			}
		},
		default              = 'notice',
		showInvalidTypeError = true,
		classes              = {'tmbox'},
		allowSmall           = true,
		imageRightNone       = true,
		imageEmptyCell       = true,
		imageEmptyCellStyle  = true,
		templateCategory     = 'Talk message boxes'
	}
}</text>
      <sha1>16xsc67jviirmw0nf2yuxvotqd7rygq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Military navigation</title>
    <ns>828</ns>
    <id>53958334</id>
    <revision>
      <id>785705698</id>
      <parentid>779409669</parentid>
      <timestamp>2017-06-14T23:36:59Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2589">local p = { }

local Navbox = require('Module:Navbox')
local Styles = require('Module:WPMILHIST Infobox style')

local function isblank(s)
	return (not s) or s == ''
end
local function isnotblank(s)
	return s and s ~= ''
end

function p.main(frame)
    local args = { }
    local pargs = frame:getParent().args
    local sargs = {}
    local tcats = ''

	-- process bodystyle and titlestyle
	if (pargs['style'] or '') == 'wide' then
		args['titlestyle'] = Styles['nav_box_wide_header']
		args['bodystyle'] = Styles['nav_box_wide']
	else
		args['titlestyle'] = Styles['nav_box_header']
		if (pargs['border'] or '') == 'child' or 
			(pargs['border'] or '') == 'subgroup' then
			args['bodystyle'] = Styles['nav_box_child']
			tcats = tcats .. '[[Category:Pages using military navigation subgroups without wide style]]'
		else
			args['bodystyle'] = Styles['nav_box']
		end
	end
	sargs['titlestyle'] = 1
	sargs['bodystyle'] = 1

	-- process groupstyle, abovestyle, belowstyle
	args['groupstyle'] = Styles['nav_box_label'] .. (pargs['groupstyle'] or '')
	sargs['groupstyle'] = 1
	args['abovestyle'] = Styles['nav_box_label'] .. (pargs['abovestyle'] or '')
	sargs['abovestyle'] = 1
	args['belowstyle'] = Styles['nav_box_label'] .. (pargs['belowstyle'] or '')
	sargs['belowstyle'] = 1
	-- process oddstyle, evenstyle
	args['oddstyle'] = isnotblank(pargs['odd_color'])
		and ('background:' .. pargs['odd_color']) or nil
	sargs['oddstyle'] = 1
	args['evenstyle'] = isnotblank(pargs['even_color'])
		and ('background:' .. pargs['even_color']) or nil
	sargs['evenstyle'] = 1
	-- process name and rawname
	args['name'] = (isnotblank(pargs['name']) and pargs['name']) or pargs['rawname']
	if isblank(args['name']) then args['navbar'] = 'plain' end
	sargs['name'] = 1
	sargs['rawname'] = 1
	
    -- copy the remaining args
    for k, v in pairs(pargs) do
        if v and v ~= '' and sargs[k] == nil then
            args[k] = v
        end
    end
	-- add allow wrap
	if args['title'] and (pargs['style'] or '') ~= 'wide' then
		if not mw.ustring.match(args['title'], '&lt;span class=&quot;wrap&quot;&gt;') then
			-- probably a more efficient way to match 15 or more characters
			local m = '[^%[%]&lt;&gt;|][^%[%]&lt;&gt;|][^%[%]&lt;&gt;|][^%[%]&lt;&gt;|][^%[%]&lt;&gt;|]'
			m = m .. m .. m
			args['title'] = mw.ustring.gsub(args['title'], 
				'%[%[(' .. m .. '[^%[%]&lt;&gt;|]*)%]%]', 
				'[[%1|&lt;span class=&quot;wrap&quot;&gt;%1&lt;/span&gt;]]')
			args['title'] = mw.ustring.gsub(args['title'], 
				'%[%[([^%[%]&lt;&gt;|]*)|(' .. m .. '[^%[%]&lt;&gt;|]*)%]%]', 
				'[[%1|&lt;span class=&quot;wrap&quot;&gt;%2&lt;/span&gt;]]')
		end
	end
    return tcats .. Navbox._navbox(args)

end  

return p</text>
      <sha1>d9xgb2xizmaizd5itywqxqc57xrt42d</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Multiple image</title>
    <ns>828</ns>
    <id>42564289</id>
    <revision>
      <id>798742599</id>
      <parentid>798742238</parentid>
      <timestamp>2017-09-03T15:29:44Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>fix</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7868">-- implements [[template:multiple image]]
local p = {}

local function isnotempty(s)
	return s and s:match( '^%s*(.-)%s*$' ) ~= ''
end

local function renderImageCell(image, width, height, link, alt, thumbtime, caption, textalign, istyle) 
	local root = mw.html.create('')
	
	local altstr = '|alt=' .. (alt or '')
	local linkstr = link and ('|link=' .. link) or ''
	local widthstr = '|' .. tostring(width) .. 'px'
	local thumbtimestr = ''

	if isnotempty( thumbtime ) then
		thumbtimestr = '|thumbtime=' .. thumbtime
	end
	
	local imagediv = root:tag('div')
	imagediv:addClass('thumbimage')
	imagediv:cssText(istyle)
	if( height ) then
		imagediv:css('height', tostring(height) .. 'px')
		imagediv:css('overflow', 'hidden')
	end
	imagediv:wikitext('[[file:' .. image .. widthstr .. linkstr .. altstr .. thumbtimestr .. ']]')
	if isnotempty(caption) then
		local captiondiv = root:tag('div')
		captiondiv:addClass('thumbcaption')
		captiondiv:css('clear', 'left')
		if isnotempty(textalign) then
			captiondiv:css('text-align', textalign)
		end
		captiondiv:wikitext(caption)
	end
	return tostring(root)
end

local function getWidth(w1, w2)
	local w
	if isnotempty(w1) then
		w = tonumber(w1)
	elseif isnotempty(w2) then
		w = tonumber(w2)
	end
	return w or 200
end

local function getPerRow(pstr, ic)
	-- split string into array using any non-digit as a dilimiter
	local pr = mw.text.split(pstr or '', '[^%d][^%d]*')
	-- if split failed, assume a single row
	if (#pr &lt; 1) then
		pr = {tostring(ic)}
	end
	-- convert the array of strings to an array of numbers,
	-- adding any implied/missing numbers at the end of the array
	local r = 1
	local thisrow = tonumber(pr[1] or ic) or ic
	local prownum = {}
	while( ic &gt; 0 ) do
		prownum[r] = thisrow
		ic = ic - thisrow
		r = r + 1
		-- use the previous if the next is missing and 
		-- make sure we don't overstep the number of images
		thisrow = math.min(tonumber(pr[r] or thisrow) or ic, ic)
	end
	return prownum
end

local function renderMultipleImages(frame)
	local pargs = frame:getParent().args
	local args = frame.args
	local width = pargs['width'] or ''
	local dir = pargs['direction'] or ''
	local align = pargs['align'] or args['align'] or ''
	local capalign = pargs['caption_align'] or args['caption_align'] or ''
	local totalwidth = pargs['total_width'] or args['total_width'] or ''
	local imgstyle = pargs['image_style'] or args['image_style']
	local header = pargs['header'] or pargs['title'] or ''
	local footer = pargs['footer'] or ''
	local imagegap = tonumber(pargs['image_gap'] or '1') or 1
	local perrow = nil
	local thumbclass = {
		[&quot;left&quot;] = 'tleft',
		[&quot;none&quot;] = 'tnone',
		[&quot;center&quot;] = 'tnone',
		[&quot;centre&quot;] = 'tnone',
		[&quot;right&quot;] = 'tright'
		}

	-- find all the nonempty images
	local imagenumbers = {}
	local imagecount = 0
	for k, v in pairs( pargs ) do
		local i = tonumber(tostring(k):match( '^%s*image([%d]+)%s*$' ) or '0')
		if( i &gt; 0 and isnotempty(v) ) then
			table.insert( imagenumbers, i)
			imagecount = imagecount + 1
		end
	end

	-- sort the imagenumbers
	table.sort(imagenumbers)
	
	-- create an array with the number of images per row
	perrow = getPerRow(dir == 'vertical' and '1' or pargs['perrow'], imagecount)
	
	-- compute the number of rows
	local rowcount = #perrow

	-- store the image widths and compute row widths and maximum row width
	local widths = {}
	local widthmax = 0
	local widthsum = {}
	local k = 0
	for r=1,rowcount do
		widthsum[r] = 0
		for c=1,perrow[r] do
			k = k + 1
			if( k &lt;= imagecount ) then
				local i = imagenumbers[k]
				widths[k] = getWidth(width, pargs['width' .. i])
				widthsum[r] = widthsum[r] + widths[k]
			end
		end
		widthmax = math.max(widthmax, widthsum[r])
	end

	-- make sure the gap is non-negative
	if imagegap &lt; 0 then imagegap = 0 end
	
	-- if total_width has been specified, rescale the image widths
	local heights = {}
	if( isnotempty(totalwidth) ) then
		totalwidth = tonumber(totalwidth)
		widthmax = 0
		local k = 0
		for r=1,rowcount do
			local koffset = k
			local tw = totalwidth - (3 + imagegap) * (perrow[r] - 1) - 12
			local ar = {}
			local arsum = 0
			for j=1,perrow[r] do
				k = k + 1
				if( k&lt;= imagecount ) then
					local i = imagenumbers[k]
					local h = tonumber( pargs['height' .. i] or '' ) or 0
					if (h &gt; 0) then
						ar[j] = widths[k]/h
						heights[k] = h
					else
						ar[j] = widths[k]/100
					end
					arsum = arsum + ar[j]
				end
			end
			local ht = tw/arsum
			local ws = 0
			k = koffset
			for j=1,perrow[r] do
				k = k + 1
				if( k&lt;= imagecount ) then
					local i = imagenumbers[k]
					widths[k] = math.floor(ar[j]*ht + 0.5)
					ws = ws + widths[k]
					if heights[k] then
						heights[k] = math.floor(ht)
					end
				end
			end
			widthsum[r] = ws
			widthmax = math.max(widthmax, widthsum[r])
		end
	end	

	-- start building the array of images, if there are images
	if( imagecount &gt; 0 ) then
		-- compute width of outer div
		local bodywidth = 0
		for r=1,rowcount do
			if( widthmax == widthsum[r] ) then
				bodywidth = widthmax + (3 + imagegap) * (perrow[r] - 1) + 12
			end
		end
		-- The body has a min-width of 100, which needs to be taken into account on specific widths
		bodywidth = math.max( 100, bodywidth - 8);

		local bg = pargs['background color'] or ''
		-- create the array of images
		local root = mw.html.create('div')
		root:addClass('thumb')
		root:addClass('tmulti')
		root:addClass(thumbclass[align] or 'tright')
		
		if( align == 'center' or align == 'centre' ) then
			root:addClass('center')
		end
		if( pargs['margin_top'] or args['margin_top']) then
			root:css('margin-top', pargs['margin_top'] or args['margin_top'])
		end
		if( pargs['margin_bottom'] or args['margin_bottom']) then
			root:css('margin-bottom', pargs['margin_bottom'] or args['margin_bottom'])
		end
		if( bg ~= '' ) then
			root:css('background-color', bg)
		end

		local div = root:tag('div')
		div:addClass('thumbinner')
		div:css('width', tostring(bodywidth) .. 'px')
			:css('max-width', tostring(bodywidth) .. 'px')
		if( bg ~= '' ) then
			div:css('background-color', bg)
		end
		-- add the header
		if( isnotempty(header) ) then
			div:tag('div')
				:css('clear', 'both')
				:css('font-weight', 'bold')
				:css('text-align', pargs['header_align'] or 'center')
				:css('background-color', pargs['header_background'] or 'transparent')
				:wikitext(header)
		end
		-- loop through the images
		local k = 0
		for r=1,rowcount do
			for j=1,perrow[r] do
				k = k + 1
				if( k &lt;= imagecount ) then
					local imagediv = div:tag('div')
					imagediv:addClass('tsingle')
					if dir ~= 'vertical' then
						imagediv:css('float', 'left')
					end
					if bg ~= '' then
						imagediv:css('background-color', bg);
					end
					imagediv:css('margin', '1px')
					if ((imagegap &gt; 1) and (j &lt; perrow[r])) then
						imagediv:css('margin-right', tostring(imagegap) .. 'px')
					end
					local i = imagenumbers[k]
					local img = pargs['image' .. i]
					local w = widths[k]
					imagediv:css('width', tostring(2 + w) .. 'px')
						:css('max-width', tostring(2 + w) .. 'px')
					imagediv:wikitext(renderImageCell(img, w, heights[k], 
						pargs['link' .. i], pargs['alt' .. i],
						pargs['thumbtime' .. i], pargs['caption' .. i], capalign, imgstyle))
				end
			end
			-- only float content gives a parent height:0, so add a clearing div
			if dir ~= 'vertical' then
				div:tag('div')
					:css('clear', 'left')
			end
		end
		-- add the footer
		if( isnotempty(footer) ) then
			div:tag('div')
				:addClass('thumbcaption')
				:css('clear', 'left')
				:css('text-align', pargs['footer_align'] or args['footer_align'] or 'left')
				:css('background-color', pargs['footer_background'] or 'transparent')
				:wikitext(footer)
		end
		return tostring(root)
	end
	return ''
end

function p.render( frame )
    return renderMultipleImages( frame )
end
 
return p</text>
      <sha1>kn0v445ba1lfhp2sqykz3eeo8eo3gyo</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect</title>
    <ns>828</ns>
    <id>39762919</id>
    <revision>
      <id>602886406</id>
      <parentid>601020017</parentid>
      <timestamp>2014-04-05T17:01:23Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>use demopage instead of page as the main &quot;page&quot; parameter</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5992">--[[
--------------------------------------------------------------------------------
--                                                                            --
--                            NAMESPACE DETECT                                --
--                                                                            --
-- This module implements the {{namespace detect}} template in Lua, with a    --
-- few improvements: all namespaces and all namespace aliases are supported,  --
-- and namespace names are detected automatically for the local wiki. The     --
-- module can also use the corresponding subject namespace value if it is     --
-- used on a talk page. Parameter names can be configured for different wikis --
-- by altering the values in the &quot;cfg&quot; table in                               --
-- Module:Namespace detect/config.                                            --
--                                                                            --
--------------------------------------------------------------------------------
--]]

local data = mw.loadData('Module:Namespace detect/data')
local argKeys = data.argKeys
local cfg = data.cfg
local mappings = data.mappings

local yesno = require('Module:Yesno')
local mArguments -- Lazily initialise Module:Arguments
local mTableTools -- Lazily initilalise Module:TableTools
local ustringLower = mw.ustring.lower

local p = {}

local function fetchValue(t1, t2)
	-- Fetches a value from the table t1 for the first key in array t2 where
	-- a non-nil value of t1 exists.
	for i, key in ipairs(t2) do
		local value = t1[key]
		if value ~= nil then
			return value
		end
	end
	return nil
end

local function equalsArrayValue(t, value)
	-- Returns true if value equals a value in the array t. Otherwise
	-- returns false.
	for i, arrayValue in ipairs(t) do
		if value == arrayValue then
			return true
		end
	end
	return false
end

function p.getPageObject(page)
	-- Get the page object, passing the function through pcall in case of
	-- errors, e.g. being over the expensive function count limit.
	if page then
		local success, pageObject = pcall(mw.title.new, page)
		if success then
			return pageObject
		else
			return nil
		end
	else
		return mw.title.getCurrentTitle()
	end
end

-- Provided for backward compatibility with other modules
function p.getParamMappings()
	return mappings
end

local function getNamespace(args)
	-- This function gets the namespace name from the page object.
	local page = fetchValue(args, argKeys.demopage)
	if page == '' then
		page = nil
	end
	local demospace = fetchValue(args, argKeys.demospace)
	if demospace == '' then
		demospace = nil
	end
	local subjectns = fetchValue(args, argKeys.subjectns)
	local ret
	if demospace then
		-- Handle &quot;demospace = main&quot; properly.
		if equalsArrayValue(argKeys.main, ustringLower(demospace)) then
			ret = mw.site.namespaces[0].name
		else
			ret = demospace
		end
	else
		local pageObject = p.getPageObject(page)
		if pageObject then
			if pageObject.isTalkPage then
				-- Get the subject namespace if the option is set,
				-- otherwise use &quot;talk&quot;.
				if yesno(subjectns) then
					ret = mw.site.namespaces[pageObject.namespace].subject.name
				else
					ret = 'talk'
				end
			else
				ret = pageObject.nsText
			end
		else
			return nil -- return nil if the page object doesn't exist.
		end
	end
	ret = ret:gsub('_', ' ')
	return ustringLower(ret)
end

function p._main(args)
	-- Check the parameters stored in the mappings table for any matches.
	local namespace = getNamespace(args) or 'other' -- &quot;other&quot; avoids nil table keys
	local params = mappings[namespace] or {}
	local ret = fetchValue(args, params)
	--[[
	-- If there were no matches, return parameters for other namespaces.
	-- This happens if there was no text specified for the namespace that
	-- was detected or if the demospace parameter is not a valid
	-- namespace. Note that the parameter for the detected namespace must be
	-- completely absent for this to happen, not merely blank.
	--]]
	if ret == nil then
		ret = fetchValue(args, argKeys.other)
	end
	return ret
end

function p.main(frame)
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {removeBlanks = false})
	local ret = p._main(args)
	return ret or ''
end

function p.table(frame)
	--[[
	-- Create a wikitable of all subject namespace parameters, for
	-- documentation purposes. The talk parameter is optional, in case it
	-- needs to be excluded in the documentation.
	--]]
	
	-- Load modules and initialise variables.
	mTableTools = require('Module:TableTools')
	local namespaces = mw.site.namespaces
	local cfg = data.cfg
	local useTalk = type(frame) == 'table' 
		and type(frame.args) == 'table' 
		and yesno(frame.args.talk) -- Whether to use the talk parameter.
	
	-- Get the header names.
	local function checkValue(value, default)
		if type(value) == 'string' then
			return value
		else
			return default
		end
	end
	local nsHeader = checkValue(cfg.wikitableNamespaceHeader, 'Namespace')
	local aliasesHeader = checkValue(cfg.wikitableAliasesHeader, 'Aliases')

	-- Put the namespaces in order.
	local mappingsOrdered = {}
	for nsname, params in pairs(mappings) do
		if useTalk or nsname ~= 'talk' then
			local nsid = namespaces[nsname].id
			-- Add 1, as the array must start with 1; nsid 0 would be lost otherwise.
			nsid = nsid + 1 
			mappingsOrdered[nsid] = params
		end
	end
	mappingsOrdered = mTableTools.compressSparseArray(mappingsOrdered)

	-- Build the table.
	local ret = '{| class=&quot;wikitable&quot;'
		.. '\n|-'
		.. '\n! ' .. nsHeader
		.. '\n! ' .. aliasesHeader
	for i, params in ipairs(mappingsOrdered) do
		for j, param in ipairs(params) do
			if j == 1 then
				ret = ret .. '\n|-'
					.. '\n| &lt;code&gt;' .. param .. '&lt;/code&gt;'
					.. '\n| '
			elseif j == 2 then
				ret = ret .. '&lt;code&gt;' .. param .. '&lt;/code&gt;'
			else
				ret = ret .. ', &lt;code&gt;' .. param .. '&lt;/code&gt;'
			end
		end
	end
	ret = ret .. '\n|-'
		.. '\n|}'
	return ret
end

return p</text>
      <sha1>j7kygz1y56jpz4doq0m2c6x1td5d8ar</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/config</title>
    <ns>828</ns>
    <id>42256703</id>
    <revision>
      <id>602886681</id>
      <parentid>602823531</parentid>
      <timestamp>2014-04-05T17:03:49Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>use cfg.demopage rather than cfg.page now that the default parameter has been changed on the /data page</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3545">--------------------------------------------------------------------------------
--                    Namespace detect configuration data                     --
--                                                                            --
-- This module stores configuration data for Module:Namespace detect. Here    --
-- you can localise the module to your wiki's language.                       --
--                                                                            --
-- To activate a configuration item, you need to uncomment it. This means     --
-- that you need to remove the text &quot;-- &quot; at the start of the line.           --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names. Values added     --
-- here will work in addition to the default English parameter names.         --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- cfg.foo = 'parameter name'                                                 --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- cfg.foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'}     --
--------------------------------------------------------------------------------

---- This parameter displays content for the main namespace:
-- cfg.main = 'main'

---- This parameter displays in talk namespaces:
-- cfg.talk = 'talk'

---- This parameter displays content for &quot;other&quot; namespaces (namespaces for which
---- parameters have not been specified):
-- cfg.other = 'other'

---- This parameter makes talk pages behave as though they are the corresponding
---- subject namespace. Note that this parameter is used with [[Module:Yesno]].
---- Edit that module to change the default values of &quot;yes&quot;, &quot;no&quot;, etc.
-- cfg.subjectns = 'subjectns'

---- This parameter sets a demonstration namespace:
-- cfg.demospace = 'demospace'

---- This parameter sets a specific page to compare:
cfg.demopage = 'page'

--------------------------------------------------------------------------------
--                           Table configuration                              --
-- These configuration items allow customisation of the &quot;table&quot; function,     --
-- used to generate a table of possible parameters in the module              --
-- documentation.                                                             --
--------------------------------------------------------------------------------

---- The header for the namespace column in the wikitable containing the list of
---- possible subject-space parameters.
-- cfg.wikitableNamespaceHeader = 'Namespace'

---- The header for the wikitable containing the list of possible subject-space
---- parameters.
-- cfg.wikitableAliasesHeader = 'Aliases'

--------------------------------------------------------------------------------
--                        End of configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>1o6ozz56i8q0xgyl6xa41n2v7kelhli</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/data</title>
    <ns>828</ns>
    <id>42257476</id>
    <revision>
      <id>602886511</id>
      <parentid>602823622</parentid>
      <timestamp>2014-04-05T17:02:16Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>bug fix - use the demospace parameter as both key and value in the argKeys table</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2569">--------------------------------------------------------------------------------
--                          Namespace detect data                             --
-- This module holds data for [[Module:Namespace detect]] to be loaded per    --
-- page, rather than per #invoke, for performance reasons.                    --
--------------------------------------------------------------------------------

local cfg = require('Module:Namespace detect/config')

local function addKey(t, key, defaultKey)
	if key ~= defaultKey then
		t[#t + 1] = key
	end
end

-- Get a table of parameters to query for each default parameter name.
-- This allows wikis to customise parameter names in the cfg table while
-- ensuring that default parameter names will always work. The cfg table
-- values can be added as a string, or as an array of strings.

local defaultKeys = {
	'main',
	'talk',
	'other',
	'subjectns',
	'demospace',
	'demopage'
}

local argKeys = {}
for i, defaultKey in ipairs(defaultKeys) do
	argKeys[defaultKey] = {defaultKey}
end

for defaultKey, t in pairs(argKeys) do
	local cfgValue = cfg[defaultKey]
	local cfgValueType = type(cfgValue)
	if cfgValueType == 'string' then
		addKey(t, cfgValue, defaultKey)
	elseif cfgValueType == 'table' then
		for i, key in ipairs(cfgValue) do
			addKey(t, key, defaultKey)
		end
	end
	cfg[defaultKey] = nil -- Free the cfg value as we don't need it any more.
end

local function getParamMappings()
	--[[
	-- Returns a table of how parameter names map to namespace names. The keys
	-- are the actual namespace names, in lower case, and the values are the
	-- possible parameter names for that namespace, also in lower case. The
	-- table entries are structured like this:
	-- {
	--   [''] = {'main'},
	--   ['wikipedia'] = {'wikipedia', 'project', 'wp'},
	--   ...
	-- }
	--]]
	local mappings = {}
	local mainNsName = mw.site.subjectNamespaces[0].name
	mainNsName = mw.ustring.lower(mainNsName)
	mappings[mainNsName] = mw.clone(argKeys.main)
	mappings['talk'] = mw.clone(argKeys.talk)
	for nsid, ns in pairs(mw.site.subjectNamespaces) do
		if nsid ~= 0 then -- Exclude main namespace.
			local nsname = mw.ustring.lower(ns.name)
			local canonicalName = mw.ustring.lower(ns.canonicalName)
			mappings[nsname] = {nsname}
			if canonicalName ~= nsname then
				table.insert(mappings[nsname], canonicalName)
			end
			for _, alias in ipairs(ns.aliases) do
				table.insert(mappings[nsname], mw.ustring.lower(alias))
			end
		end
	end
	return mappings
end

return {
	argKeys = argKeys,
	cfg = cfg,
	mappings = getParamMappings()
}</text>
      <sha1>ojp6d3pc8mql5nufaqdg576c9so3479</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Navbar</title>
    <ns>828</ns>
    <id>38827227</id>
    <revision>
      <id>780167786</id>
      <parentid>771417723</parentid>
      <timestamp>2017-05-13T12:41:14Z</timestamp>
      <contributor>
        <username>Primefac</username>
        <id>11508456</id>
      </contributor>
      <comment>update from sandbox per [[Special:Diff/771417737]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2517">local p = {}

local getArgs

function p._navbar(args)
	local titleArg = 1

	if args.collapsible then
		titleArg = 2
		if not args.plain then
			args.mini = 1
		end
		if args.fontcolor then
			args.fontstyle = 'color:' .. args.fontcolor .. ';'
		end
		args.style = 'float:left; text-align:left'
	end

	local titleText = args[titleArg] or (':' .. mw.getCurrentFrame():getParent():getTitle())
	local title = mw.title.new(mw.text.trim(titleText), 'Template');

	if not title then
		error('Invalid title ' .. titleText)
	end

	local talkpage = title.talkPageTitle and title.talkPageTitle.fullText or '';

	local div = mw.html.create():tag('div')
	div
		:addClass('plainlinks')
		:addClass('hlist')
		:addClass('navbar')
		:cssText(args.style)

	if args.mini then div:addClass('mini') end

	if not (args.mini or args.plain) then
		div
			:tag('span')
				:css('word-spacing', 0)
				:cssText(args.fontstyle)
				:wikitext(args.text or 'This box:')
				:wikitext(' ')
	end

	if args.brackets then
		div
			:tag('span')
				:css('margin-right', '-0.125em')
				:cssText(args.fontstyle)
				:wikitext('&amp;#91; ')
	end

	local ul = div:tag('ul');

	ul
		:tag('li')
			:addClass('nv-view')
			:wikitext('[[' .. title.fullText .. '|')
			:tag(args.mini and 'abbr' or 'span')
				:attr('title', 'View this template')
				:cssText(args.fontstyle)
				:wikitext(args.mini and 'v' or 'view')
				:done()
			:wikitext(']]')
			:done()
		:tag('li')
			:addClass('nv-talk')
			:wikitext('[[' .. talkpage .. '|')
			:tag(args.mini and 'abbr' or 'span')
				:attr('title', 'Discuss this template')
				:cssText(args.fontstyle)
				:wikitext(args.mini and 't' or 'talk')
				:done()
			:wikitext(']]');

	if not args.noedit then
		ul
			:tag('li')
				:addClass('nv-edit')
				:wikitext('[' .. title:fullUrl('action=edit') .. ' ')
				:tag(args.mini and 'abbr' or 'span')
					:attr('title', 'Edit this template')
					:cssText(args.fontstyle)
					:wikitext(args.mini and 'e' or 'edit')
					:done()
				:wikitext(']');
	end

	if args.brackets then
		div
			:tag('span')
				:css('margin-left', '-0.125em')
				:cssText(args.fontstyle)
				:wikitext(' &amp;#93;')
	end

	if args.collapsible then
		div
			:done()
		:tag('div')
			:css('font-size', '114%')
			:css('margin', args.mini and '0 4em' or '0 7em')
			:cssText(args.fontstyle)
			:wikitext(args[1])
	end

	return tostring(div:done())
end

function p.navbar(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	return p._navbar(getArgs(frame))
end

return p</text>
      <sha1>9d4ism2psi1oucu9pnyveg4m6i2oobx</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Navbox</title>
    <ns>828</ns>
    <id>38634746</id>
    <revision>
      <id>790205321</id>
      <parentid>788016368</parentid>
      <timestamp>2017-07-12T07:55:41Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <comment>removed .navbox-spacing-temp mask, no longer used by site CSS</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="11599">--
-- This module implements {{Navbox}}
--

local p = {}

local navbar = require('Module:Navbar')._navbar
local getArgs -- lazily initialized

local args
local border
local listnums = {}
local ODD_EVEN_MARKER = '\127_ODDEVEN_\127'
local RESTART_MARKER = '\127_ODDEVEN0_\127'
local REGEX_MARKER = '\127_ODDEVEN(%d?)_\127'

local function striped(wikitext)
	-- Return wikitext with markers replaced for odd/even striping.
	-- Child (subgroup) navboxes are flagged with a category that is removed
	-- by parent navboxes. The result is that the category shows all pages
	-- where a child navbox is not contained in a parent navbox.
	local orphanCat = '[[Category:Navbox orphans]]'
	if border == 'subgroup' and args.orphan ~= 'yes' then
		-- No change; striping occurs in outermost navbox.
		return wikitext .. orphanCat
	end
	local first, second = 'odd', 'even'
	if args.evenodd then
		if args.evenodd == 'swap' then
			first, second = second, first
		else
			first = args.evenodd
			second = first
		end
	end
	local changer
	if first == second then
		changer = first
	else
		local index = 0
		changer = function (code)
			if code == '0' then
				-- Current occurrence is for a group before a nested table.
				-- Set it to first as a valid although pointless class.
				-- The next occurrence will be the first row after a title
				-- in a subgroup and will also be first.
				index = 0
				return first
			end
			index = index + 1
			return index % 2 == 1 and first or second
		end
	end
	local regex = orphanCat:gsub('([%[%]])', '%%%1')
	return (wikitext:gsub(regex, ''):gsub(REGEX_MARKER, changer))  -- () omits gsub count
end

local function processItem(item, nowrapitems)
	if item:sub(1, 2) == '{|' then
		-- Applying nowrap to lines in a table does not make sense.
		-- Add newlines to compensate for trim of x in |parm=x in a template.
		return '\n' .. item ..'\n'
	end
	if nowrapitems == 'yes' then
		local lines = {}
		for line in (item .. '\n'):gmatch('([^\n]*)\n') do
			local prefix, content = line:match('^([*:;#]+)%s*(.*)')
			if prefix and not content:match('^&lt;span class=&quot;nowrap&quot;&gt;') then
				line = prefix .. '&lt;span class=&quot;nowrap&quot;&gt;' .. content .. '&lt;/span&gt;'
			end
			table.insert(lines, line)
		end
		item = table.concat(lines, '\n')
	end
	if item:match('^[*:;#]') then
		return '\n' .. item ..'\n'
	end
	return item
end

local function renderNavBar(titleCell)

	if args.navbar ~= 'off' and args.navbar ~= 'plain' and not (not args.name and mw.getCurrentFrame():getParent():getTitle():gsub('/sandbox$', '') == 'Template:Navbox') then
		titleCell:wikitext(navbar{
			args.name,
			mini = 1,
			fontstyle = (args.basestyle or '') .. ';' .. (args.titlestyle or '') .. ';background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none;'
		})
	end

end

--
--   Title row
--
local function renderTitleRow(tbl)
	if not args.title then return end

	local titleRow = tbl:tag('tr')

	if args.titlegroup then
		titleRow
			:tag('th')
				:attr('scope', 'row')
				:addClass('navbox-group')
				:addClass(args.titlegroupclass)
				:cssText(args.basestyle)
				:cssText(args.groupstyle)
				:cssText(args.titlegroupstyle)
				:wikitext(args.titlegroup)
	end

	local titleCell = titleRow:tag('th'):attr('scope', 'col')

	if args.titlegroup then
		titleCell
			:css('border-left', '2px solid #fdfdfd')
			:css('width', '100%')
	end

	local titleColspan = 2
	if args.imageleft then titleColspan = titleColspan + 1 end
	if args.image then titleColspan = titleColspan + 1 end
	if args.titlegroup then titleColspan = titleColspan - 1 end

	titleCell
		:cssText(args.basestyle)
		:cssText(args.titlestyle)
		:addClass('navbox-title')
		:attr('colspan', titleColspan)

	renderNavBar(titleCell)

	titleCell
		:tag('div')
			:attr('id', mw.uri.anchorEncode(args.title))
			:addClass(args.titleclass)
			:css('font-size', '114%')
			:css('margin', '0 4em')
			:wikitext(processItem(args.title))
end

--
--   Above/Below rows
--

local function getAboveBelowColspan()
	local ret = 2
	if args.imageleft then ret = ret + 1 end
	if args.image then ret = ret + 1 end
	return ret
end

local function renderAboveRow(tbl)
	if not args.above then return end

	tbl:tag('tr')
		:tag('td')
			:addClass('navbox-abovebelow')
			:addClass(args.aboveclass)
			:cssText(args.basestyle)
			:cssText(args.abovestyle)
			:attr('colspan', getAboveBelowColspan())
			:tag('div')
				:wikitext(processItem(args.above, args.nowrapitems))
end

local function renderBelowRow(tbl)
	if not args.below then return end

	tbl:tag('tr')
		:tag('td')
			:addClass('navbox-abovebelow')
			:addClass(args.belowclass)
			:cssText(args.basestyle)
			:cssText(args.belowstyle)
			:attr('colspan', getAboveBelowColspan())
			:tag('div')
				:wikitext(processItem(args.below, args.nowrapitems))
end

--
--   List rows
--
local function renderListRow(tbl, index, listnum)
	local row = tbl:tag('tr')

	if index == 1 and args.imageleft then
		row
			:tag('td')
				:addClass('navbox-image')
				:addClass(args.imageclass)
				:css('width', '1px')               -- Minimize width
				:css('padding', '0px 2px 0px 0px')
				:cssText(args.imageleftstyle)
				:attr('rowspan', #listnums)
				:tag('div')
					:wikitext(processItem(args.imageleft))
	end

	if args['group' .. listnum] then
		local groupCell = row:tag('th')

		groupCell
			:attr('scope', 'row')
			:addClass('navbox-group')
			:addClass(args.groupclass)
			:cssText(args.basestyle)
            :css('width', args.groupwidth or '1%') -- If groupwidth not specified, minimize width

		groupCell
			:cssText(args.groupstyle)
			:cssText(args['group' .. listnum .. 'style'])
			:wikitext(args['group' .. listnum])
	end

	local listCell = row:tag('td')

	if args['group' .. listnum] then
		listCell
			:css('text-align', 'left')
			:css('border-left-width', '2px')
			:css('border-left-style', 'solid')
	else
		listCell:attr('colspan', 2)
	end

	if not args.groupwidth then
		listCell:css('width', '100%')
	end

	local rowstyle  -- usually nil so cssText(rowstyle) usually adds nothing
	if index % 2 == 1 then
		rowstyle = args.oddstyle
	else
		rowstyle = args.evenstyle
	end

	local listText = args['list' .. listnum]
	local oddEven = ODD_EVEN_MARKER
	if listText:sub(1, 12) == '&lt;/div&gt;&lt;table' then
		-- Assume list text is for a subgroup navbox so no automatic striping for this row.
		oddEven = listText:find('&lt;th[^&gt;]*&quot;navbox%-title&quot;') and RESTART_MARKER or 'odd'
	end
	listCell
		:css('padding', '0px')
		:cssText(args.liststyle)
		:cssText(rowstyle)
		:cssText(args['list' .. listnum .. 'style'])
		:addClass('navbox-list')
		:addClass('navbox-' .. oddEven)
		:addClass(args.listclass)
		:tag('div')
			:css('padding', (index == 1 and args.list1padding) or args.listpadding or '0em 0.25em')
			:wikitext(processItem(listText, args.nowrapitems))

	if index == 1 and args.image then
		row
			:tag('td')
				:addClass('navbox-image')
				:addClass(args.imageclass)
				:css('width', '1px')               -- Minimize width
				:css('padding', '0px 0px 0px 2px')
				:cssText(args.imagestyle)
				:attr('rowspan', #listnums)
				:tag('div')
					:wikitext(processItem(args.image))
	end
end


--
--   Tracking categories
--

local function needsHorizontalLists()
	if border == 'subgroup' or args.tracking == 'no' then
		return false
	end
	local listClasses = {
		['plainlist'] = true, ['hlist'] = true, ['hlist hnum'] = true,
		['hlist hwrap'] = true, ['hlist vcard'] = true, ['vcard hlist'] = true,
		['hlist vevent'] = true,
	}
	return not (listClasses[args.listclass] or listClasses[args.bodyclass])
end

local function hasBackgroundColors()
	for _, key in ipairs({'titlestyle', 'groupstyle', 'basestyle'}) do
		if tostring(args[key]):find('background', 1, true) then
			return true
		end
	end
end

local function isIllegible()
	local styleratio = require('Module:Color contrast')._styleratio

	for key, style in pairs(args) do
		if tostring(key):match(&quot;style$&quot;) then
			if styleratio{mw.text.unstripNoWiki(style)} &lt; 4.5 then
				return true
			end
		end
	end
	return false
end

local function getTrackingCategories()
	local cats = {}
	if needsHorizontalLists() then table.insert(cats, 'Navigational boxes without horizontal lists') end
	if hasBackgroundColors() then table.insert(cats, 'Navboxes using background colours') end
	if isIllegible() then table.insert(cats, 'Potentially illegible navboxes') end
	return cats
end

local function renderTrackingCategories(builder)
	local title = mw.title.getCurrentTitle()
	if title.namespace ~= 10 then return end -- not in template space
	local subpage = title.subpageText
	if subpage == 'doc' or subpage == 'sandbox' or subpage == 'testcases' then return end

	for _, cat in ipairs(getTrackingCategories()) do
		builder:wikitext('[[Category:' .. cat .. ']]')
	end
end

--
--   Main navbox tables
--
local function renderMainTable()
	local tbl = mw.html.create('table')
		:addClass('nowraplinks')
		:addClass(args.bodyclass)

	if args.title and (args.state ~= 'plain' and args.state ~= 'off') then
		tbl
			:addClass('collapsible')
			:addClass(args.state or 'autocollapse')
	end

	tbl:css('border-spacing', 0)
	if border == 'subgroup' or border == 'none' then
		tbl
			:addClass('navbox-subgroup')
			:cssText(args.bodystyle)
			:cssText(args.style)
	else  -- regular navbox - bodystyle and style will be applied to the wrapper table
		tbl
			:addClass('navbox-inner')
			:css('background', 'transparent')
			:css('color', 'inherit')
	end
	tbl:cssText(args.innerstyle)

	renderTitleRow(tbl)
	renderAboveRow(tbl)
	for i, listnum in ipairs(listnums) do
		renderListRow(tbl, i, listnum)
	end
	renderBelowRow(tbl)

	return tbl
end

function p._navbox(navboxArgs)
	args = navboxArgs

	for k, _ in pairs(args) do
		if type(k) == 'string' then
			local listnum = k:match('^list(%d+)$')
			if listnum then table.insert(listnums, tonumber(listnum)) end
		end
	end
	table.sort(listnums)

	border = mw.text.trim(args.border or args[1] or '')
	if border == 'child' then
		border = 'subgroup'
	end

	-- render the main body of the navbox
	local tbl = renderMainTable()

	-- render the appropriate wrapper around the navbox, depending on the border param
	local res = mw.html.create()
	if border == 'none' then
		local nav = res:tag('div')
			:attr('role', 'navigation')
			:node(tbl)
		if args.title then
			nav:attr('aria-labelledby', mw.uri.anchorEncode(args.title))
		else
			nav:attr('aria-label', 'Navbox')
		end
	elseif border == 'subgroup' then
		-- We assume that this navbox is being rendered in a list cell of a parent navbox, and is
		-- therefore inside a div with padding:0em 0.25em. We start with a &lt;/div&gt; to avoid the
		-- padding being applied, and at the end add a &lt;div&gt; to balance out the parent's &lt;/div&gt;
		res
			:wikitext('&lt;/div&gt;')
			:node(tbl)
			:wikitext('&lt;div&gt;')
	else
		local nav = res:tag('div')
			:attr('role', 'navigation')
			:addClass('navbox')
			:cssText(args.bodystyle)
			:cssText(args.style)
			:css('padding', '3px')
			:node(tbl)
		if args.title then
			nav:attr('aria-labelledby', mw.uri.anchorEncode(args.title))
		else
			nav:attr('aria-label', 'Navbox')
		end
	end

	renderTrackingCategories(res)

	return striped(tostring(res))
end

function p.navbox(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	args = getArgs(frame, {wrappers = 'Template:Navbox'})

	-- Read the arguments in the order they'll be output in, to make references number in the right order.
	local _
	_ = args.title
	_ = args.above
	for i = 1, 20 do
		_ = args[&quot;group&quot; .. tostring(i)]
		_ = args[&quot;list&quot; .. tostring(i)]
	end
	_ = args.below

	return p._navbox(args)
end

return p</text>
      <sha1>2535j56ygjbxd128b319uose3yh7ngf</sha1>
    </revision>
  </page>
  <page>
    <title>Module:No globals</title>
    <ns>828</ns>
    <id>42567026</id>
    <revision>
      <id>606781024</id>
      <parentid>605595284</parentid>
      <timestamp>2014-05-02T15:35:56Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>rm name exception</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="307">local mt = getmetatable(_G) or {}
function mt.__index (t, k)
	if k ~= 'arg' then
		error('Tried to read nil global ' .. tostring(k), 2)
	end
	return nil
end
function mt.__newindex(t, k, v)
	if k ~= 'arg' then
		error('Tried to write global ' .. tostring(k), 2)
	end
	rawset(t, k, v)
end
setmetatable(_G, mt)</text>
      <sha1>gggsv54pq7f94l3up48hr91qtxnskdm</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Noinclude</title>
    <ns>828</ns>
    <id>52107793</id>
    <revision>
      <id>746841122</id>
      <parentid>746799326</parentid>
      <timestamp>2016-10-29T22:09:44Z</timestamp>
      <contributor>
        <username>CambridgeBayWeather</username>
        <id>294180</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Noinclude]]&quot;: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="143">local p = {}
function p.noinclude(frame)
	return frame:getParent():preprocess(&quot;&lt;noinclude&gt;&quot; .. frame.args.text .. &quot;&lt;/noinclude&gt;&quot;);
end
return p</text>
      <sha1>46540us5h0lf6rm25j7fyb26bxvq4q9</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Ns has subpages</title>
    <ns>828</ns>
    <id>44657407</id>
    <revision>
      <id>637438142</id>
      <parentid>637436476</parentid>
      <timestamp>2014-12-10T06:37:29Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Ns has subpages: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1678">-- This module implements [[Template:Ns has subpages]].
-- While the template is fairly simple, this information is made available to
-- Lua directly, so using a module means that we don't have to update the
-- template as new namespaces are added.

local p = {}

function p._main(ns, frame)
	-- Get the current namespace if we were not passed one.
	if not ns then
		ns = mw.title.getCurrentTitle().namespace
	end

	-- Look up the namespace table from mw.site.namespaces. This should work
	-- for a majority of cases.
	local nsTable = mw.site.namespaces[ns]

	-- Try using string matching to get the namespace from page names.
	-- Do a quick and dirty bad title check to try and make sure we do the same
	-- thing as {{NAMESPACE}} in most cases.
	if not nsTable and type(ns) == 'string' and not ns:find('[&lt;&gt;|%[%]{}]') then
		local nsStripped = ns:gsub('^[_%s]*:', '')
		nsStripped = nsStripped:gsub(':.*$', '')
		nsTable = mw.site.namespaces[nsStripped]
	end

	-- If we still have no match then try the {{NAMESPACE}} parser function,
	-- which should catch the remainder of cases. Don't use a mw.title object,
	-- as this would increment the expensive function count for each new page
	-- tested.
	if not nsTable then
		frame = frame or mw.getCurrentFrame()
		local nsProcessed = frame:callParserFunction('NAMESPACE', ns)
		nsTable = nsProcessed and mw.site.namespaces[nsProcessed]
	end
	
	return nsTable and nsTable.hasSubpages
end

function p.main(frame)
	local ns = frame:getParent().args[1]
	if ns then
		ns = ns:match('^%s*(.-)%s*$') -- trim whitespace
		ns = tonumber(ns) or ns
	end
	local hasSubpages = p._main(ns, frame)
	return hasSubpages and 'yes' or ''
end

return p</text>
      <sha1>qb0b1z2vff7kifnw21v205d791esbiz</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal</title>
    <ns>828</ns>
    <id>38965350</id>
    <revision>
      <id>752302732</id>
      <parentid>729840072</parentid>
      <timestamp>2016-11-30T14:58:40Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>quick hack to prevent p._image from returning filenames with things like &quot;|border&quot; in them</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10273">--[==[ This module is a Lua implementation of the old {{Portal}} template. As of August 2013 it is used on nearly 5,000,000 articles.
-- Please take care when updating it! It outputs two functions: p.portal, which generates a list of portals, and p.image, which
-- produces the image name for an individual portal.

-- The portal image data is kept in submodules of [[Module:Portal/images]], listed below:
-- [[Module:Portal/images/a]]		- for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]		- for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]		- for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]		- for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]		- for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]		- for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]		- for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]		- for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]		- for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]		- for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]		- for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]		- for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]		- for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]		- for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]		- for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]		- for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]		- for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]		- for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]		- for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]		- for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]		- for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]		- for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]		- for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]		- for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]		- for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]		- for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]	- for portal names beginning with any other letters. This includes numbers,
-- 									  letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]]	- for adding aliases for existing portal names. Use this page for variations
-- 									  in spelling and diacritics, etc., no matter what letter the portal begins with.
--
-- The images data pages are separated by the first letter to reduce server load when images are added, changed, or removed.
-- Previously all the images were on one data page at [[Module:Portal/images]], but this had the disadvantage that all
-- 5,000,000 pages using this module needed to be refreshed every time an image was added or removed.
]==]

local p = {}

local function matchImagePage(s)
	-- Finds the appropriate image subpage given a lower-case
	-- portal name plus the first letter of that portal name.
	if type(s) ~= 'string' or #s &lt; 1 then return end
	local firstLetter = mw.ustring.sub(s, 1, 1)
	local imagePage
	if mw.ustring.find(firstLetter, '^[a-z]') then
		imagePage = 'Module:Portal/images/' .. firstLetter
	else
		imagePage = 'Module:Portal/images/other'
	end
	return mw.loadData(imagePage)[s]
end

local function getAlias(s)
	-- Gets an alias from the image alias data page.
	local aliasData = mw.loadData('Module:Portal/images/aliases')
	for portal, aliases in pairs(aliasData) do
		for _, alias in ipairs(aliases) do
			if alias == s then
				return portal
			end
		end
	end
end

local function getImageName(s)
	-- Gets the image name for a given string.
	local default = 'Portal-puzzle.svg|link=|alt='
	if type(s) ~= 'string' or #s &lt; 1 then
		return default
	end
	s = mw.ustring.lower(s)
	return matchImagePage(s) or matchImagePage(getAlias(s)) or default
end

function p._portal(portals, args)
	-- This function builds the portal box used by the {{portal}} template.
	local root = mw.html.create('div')
		:attr('role', 'navigation')
		:attr('aria-label', 'Portals')
		:addClass('noprint portal plainlist')
		:addClass(args.left and 'tleft' or 'tright')
		:css('margin', args.margin or (args.left == 'yes' and '0.5em 1em 0.5em 0') or '0.5em 0 0.5em 1em')
		:css('border', 'solid #aaa 1px')
		:newline()

	-- If no portals have been specified, display an error and add the page to a tracking category.
	if not portals[1] then
		root:wikitext('&lt;strong class=&quot;error&quot;&gt;No portals specified: please specify at least one portal&lt;/strong&gt;[[Category:Portal templates without a parameter]]')
		return tostring(root)
	end

	-- Start the list. This corresponds to the start of the wikitext table in the old [[Template:Portal]].
	local listroot = root:tag('ul')
		:css('display', 'table')
		:css('box-sizing', 'border-box')
		:css('padding', '0.1em')
		:css('max-width', '175px')
		:css('width', type(args.boxsize) == 'string' and (args.boxsize .. 'px') or nil)
		:css('background', '#f9f9f9')
		:css('font-size', '85%')
		:css('line-height', '110%')
		:css('font-style', 'italic')
		:css('font-weight', 'bold')

	-- Display the portals specified in the positional arguments.
	for _, portal in ipairs(portals) do
		local image = getImageName(portal)

		-- Generate the html for the image and the portal name.
		listroot
			:newline()
			:tag('li')
				:css('display', 'table-row')
				:tag('span')
					:css('display', 'table-cell')
					:css('padding', '0.2em')
					:css('vertical-align', 'middle')
					:css('text-align', 'center')
					:wikitext(string.format('[[File:%s|32x28px|class=noviewer]]', image))
					:done()
				:tag('span')
					:css('display', 'table-cell')
					:css('padding', '0.2em 0.2em 0.2em 0.3em')
					:css('vertical-align', 'middle')
					:wikitext(string.format('[[Portal:%s|%s%sportal]]', portal, portal, args['break'] and '&lt;br /&gt;' or ' '))
	end
	return tostring(root)
end

function p._image(portals)
	-- Wrapper function to allow getImageName() to be accessed through #invoke.
	local name = getImageName(portals[1])
	return name:match('^(.-)|') or name -- FIXME: use a more elegant way to separate borders etc. from the image name
end

local function getAllImageTables()
	-- Returns an array containing all image subpages (minus aliases) as loaded by mw.loadData.
	local images = {}
	for i, subpage in ipairs{'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'other'} do
		images[i] = mw.loadData('Module:Portal/images/' .. subpage)
	end
	return images
end

function p._displayAll(portals, args)
	-- This function displays all portals that have portal images. This function is for maintenance purposes and should not be used in
	-- articles, for two reasons: 1) there are over 1500 portals with portal images, and 2) the module doesn't record how the portal
	-- names are capitalized, so the portal links may be broken.
	local lang = mw.language.getContentLanguage()
	local count = 1
	for _, imageTable in ipairs(getAllImageTables()) do
		for portal in pairs(imageTable) do
			portals[count] = lang:ucfirst(portal)
			count = count + 1
		end
	end
	return p._portal(portals, args)
end

function p._imageDupes()
	-- This function searches the image subpages to find duplicate images. If duplicate images exist, it is not necessarily a bad thing,
	-- as different portals might just happen to choose the same image. However, this function is helpful in identifying images that
	-- should be moved to a portal alias for ease of maintenance.
	local exists, dupes = {}, {}
	for _, imageTable in ipairs(getAllImageTables()) do
		for portal, image in pairs(imageTable) do
			if not exists[image] then
				exists[image] = portal
			else
				table.insert(dupes, string.format('The image &quot;[[:File:%s|%s]]&quot; is used for both portals &quot;%s&quot; and &quot;%s&quot;.', image, image, exists[image], portal))
			end
		end
	end
	if #dupes &lt; 1 then
		return 'No duplicate images found.'
	else
		return 'The following duplicate images were found:\n* ' .. table.concat(dupes, '\n* ')
	end
end

local function processPortalArgs(args)
	-- This function processes a table of arguments and returns two tables: an array of portal names for processing by ipairs, and a table of
	-- the named arguments that specify style options, etc. We need to use ipairs because we want to list all the portals in the order
	-- they were passed to the template, but we also want to be able to deal with positional arguments passed explicitly, for example
	-- {{portal|2=Politics}}. The behaviour of ipairs is undefined if nil values are present, so we need to make sure they are all removed.
	args = type(args) == 'table' and args or {}
	local portals = {}
	local namedArgs = {}
	for k, v in pairs(args) do
		if type(k) == 'number' and type(v) == 'string' then -- Make sure we have no non-string portal names.
			table.insert(portals, k)
		elseif type(k) ~= 'number' then
			namedArgs[k] = v
		end
	end
	table.sort(portals)
	for i, v in ipairs(portals) do
		portals[i] = args[v]
	end
	return portals, namedArgs
end

local function makeWrapper(funcName)
	-- Processes external arguments and sends them to the other functions.
	return function (frame)
		-- If called via #invoke, use the args passed into the invoking
		-- template, or the args passed to #invoke if any exist. Otherwise
		-- assume args are being passed directly in from the debug console
		-- or from another Lua module.
		local origArgs
		if type(frame.getParent) == 'function' then
			origArgs = frame:getParent().args
			for k, v in pairs(frame.args) do
				origArgs = frame.args
				break
			end
		else
			origArgs = frame
		end
		-- Trim whitespace and remove blank arguments.
		local args = {}
		for k, v in pairs(origArgs) do
			if type(v) == 'string' then
				v = mw.text.trim(v)
			end
			if v ~= '' then
				args[k] = v
			end
		end
		return p[funcName](processPortalArgs(args)) -- passes two tables to func: an array of portal names, and a table of named arguments.
	end
end

for _, funcName in ipairs{'portal', 'image', 'imageDupes', 'displayAll'} do
	p[funcName] = makeWrapper('_' .. funcName)
end

return p</text>
      <sha1>7np96ej58kiycf2l3mbp0omxk8k6db5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/h</title>
    <ns>828</ns>
    <id>40416158</id>
    <revision>
      <id>801016711</id>
      <parentid>801016062</parentid>
      <timestamp>2017-09-17T04:36:18Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;holy roman empire&quot;] = &quot;Reichskrone.jpg|link=|alt=image&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6544">--[==[ This is the &quot;H&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;H&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;haiti&quot;] = &quot;Flag of Haiti.svg|border|link=|alt=flag&quot;,
	[&quot;halo&quot;] = &quot;Wikihalo.svg|alt=icon&quot;,
	[&quot;hamburg&quot;] = &quot;Coat of arms of Hamburg.svg|link=|alt=&quot;,
	[&quot;hamilton, ontario&quot;] = &quot;Flag of Hamilton.svg|border|link=|alt=flag&quot;,
	[&quot;hampshire&quot;] = &quot;EnglandHampshire.svg|link=|alt=&quot;,
	[&quot;handball&quot;] = &quot;Ballon de handball.svg|link=|alt=&quot;,
	[&quot;harare&quot;] = &quot;Flag of Harare.svg|border|link=|alt=flag&quot;,
	[&quot;harry potter&quot;] = &quot;HP - Harry Potter wordmark.svg|link=|alt=&quot;,
	[&quot;haryana&quot;] = &quot;YamunaRiver.jpg|alt=icon&quot;,
	[&quot;hawaii&quot;] = &quot;Flag of Hawaii.svg|border|link=|alt=flag&quot;,
	[&quot;hazara people&quot;] = &quot;Hazara people portal logo.png|link=|alt=&quot;,
	[&quot;hazardous materials&quot;] = &quot;GHS-pictogram-exclam.svg|link=|alt=&quot;,
	[&quot;health and fitness&quot;] = &quot;Nuvola apps package favorite.svg|alt=icon&quot;,
	[&quot;heathenism&quot;] = &quot;Heathenism symbol.PNG|alt=icon&quot;,
	[&quot;heavy metal&quot;] = &quot;Audio a.svg|link=|alt=&quot;,
	[&quot;hellenismos&quot;] = &quot;Laurel wreath fa13.gif|link=|alt=&quot;,
	[&quot;help&quot;] = &quot;Wikipedia help.png|alt=icon&quot;,
	[&quot;heraldry&quot;] = &quot;Azure, a bend Or.svg|link=|alt=&quot;,
	[&quot;heraldry and vexillology&quot;] = &quot;En-wikipedia arms 9.svg|alt=icon&quot;,
	[&quot;hertfordshire&quot;] = &quot;Hertsflag.jpg|link=|alt=&quot;,
	[&quot;hesse&quot;] = &quot;Flag of Hesse.svg|border|link=|alt=flag&quot;,
	[&quot;himachal pradesh&quot;] = &quot;Kinnaur Kailash.jpg|link=|alt=&quot;,
	[&quot;himalayas&quot;] = &quot;Everest North Face toward Base Camp Tibet Luca Galuzzi 2006.jpg|alt=icon&quot;,
	[&quot;hindu mythology&quot;] = &quot;HinduSwastika.svg|link=|alt=&quot;,
	[&quot;hinduism&quot;] = &quot;Aum Om red.svg|link=|alt=&quot;,
	[&quot;hindustani&quot;] = &quot;Hindustani0804.png|link=|alt=script&quot;,
	[&quot;hip hop&quot;] = &quot;Loudspeaker-crystal-theme.svg|alt=icon&quot;,
	[&quot;hisar&quot;] = &quot;Fort of Firoz Shah Tughlaq at Hisar.jpg|link=|alt=photo&quot;,
	[&quot;hispanic and latino americans&quot;] = &quot;Flag of the Hispanicity.svg|link=|alt=icon&quot;,
	[&quot;history&quot;] = &quot;P history.svg|link=|alt=&quot;,
	[&quot;history of biology&quot;] = &quot;Plato's Academy mosaic from Pompeii.jpg|link=|alt=mosaic&quot;,
	[&quot;history of canada&quot;] = &quot;Canadian Red Ensign (1957-1965).svg|link=|alt=&quot;,
	[&quot;history of imperial china&quot;] = &quot;.jpg|link=|alt=&quot;,
	[&quot;history of nuclear enterprise&quot;] = &quot;HD.6D.142 (10821940184).jpg|link=|alt=photo&quot;,
	[&quot;history of science&quot;] = &quot;Newton's reflecting telescope.jpg|link=|alt=image&quot;,
	[&quot;history of the latter day saint movement&quot;] = &quot;Joseph Smith receiving golden plates.jpg|border|link=|alt=&quot;,
	[&quot;hitchhiker's&quot;] = &quot;Answer to Life.png|link=|alt=icon&quot;,
	[&quot;hitchhiker's guide to the galaxy&quot;] = &quot;Answer to Life.png|link=|alt=icon&quot;,
	[&quot;holidays&quot;] = &quot;Calendar icon.svg|alt=icon&quot;,
	[&quot;holy roman empire&quot;] = &quot;Reichskrone.jpg|link=|alt=image&quot;,
	[&quot;home&quot;] = &quot;Big single-family home 2.jpg|link=|alt=&quot;,
	[&quot;home improvement&quot;] = &quot;Preferences-system.svg|link=|alt=&quot;,
	[&quot;honduras&quot;] = &quot;Flag of Honduras.svg|border|link=|alt=flag&quot;,
	[&quot;hong kong&quot;] = &quot;Hong Kong SAR Regional Emblem.svg|link=|alt=&quot;,
	[&quot;horror fiction&quot;] = &quot;Vampire Smiley.png|alt=icon&quot;,
	[&quot;horse racing&quot;] = &quot;Flat racing clipart.svg|alt=icon&quot;,
	[&quot;horses&quot;] = &quot;Finnhorse stallion.jpg|alt=icon&quot;,
	[&quot;horticulture and gardening&quot;] = &quot;Pieskowa Skaa ogrd zamkowy.jpg|border|link=|alt=image&quot;,
	[&quot;house, m.d.&quot;] = &quot;Television.svg|alt=icon&quot;,
	[&quot;houston&quot;] = &quot;Flag of Houston, Texas.png|border|link=|alt=flag&quot;,
	[&quot;hudson valley&quot;] = &quot;Hudson river from bear mountain bridge.jpg|alt=icon&quot;,
	[&quot;human body&quot;] = &quot;Human.png|link=|alt=&quot;,
	[&quot;human rights&quot;] = &quot;HumanRightsLogo.svg|link=|alt=&quot;,
	[&quot;human spaceflight&quot;] = &quot;STS-41-B MMU.jpg|link=|alt=&quot;,
	[&quot;hungary&quot;] = &quot;Flag of Hungary.svg|border|link=|alt=flag&quot;,
	[&quot;hunger relief&quot;] = &quot;Food Bank icon.svg|link=|alt=&quot;,
	[&quot;hyderabad&quot;] = &quot;Charminar Hyderabad 1.jpg|alt=icon&quot;
}</text>
      <sha1>3chtq800optxc1emii4r5zt0b8eys9g</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/w</title>
    <ns>828</ns>
    <id>40416257</id>
    <revision>
      <id>802571143</id>
      <parentid>799128513</parentid>
      <timestamp>2017-09-27T01:17:27Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;west virginia university&quot;] = &quot;West Virginia Mountaineers logo.svg|link=|alt=logo&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5822">--[==[ This is the &quot;W&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;W&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;wake island&quot;] = &quot;Flag of Wake Island.svg|border|link=|alt=flag&quot;,
	[&quot;wales&quot;] = &quot;Flag of Wales 2.svg|border|link=|alt=flag&quot;,
	[&quot;wallis and futuna&quot;] = &quot;Flag of Wallis and Futuna.svg|border|link=|alt=flag&quot;,
	[&quot;war&quot;] = &quot;Bluetank.png|link=|alt=&quot;,
	[&quot;war of 1812&quot;] = &quot;USS Constitution vs Guerriere.jpg|link=|alt=&quot;,
	[&quot;washington&quot;] = &quot;Flag of Washington.svg|border|link=|alt=flag&quot;,
	[&quot;washington &amp; jefferson college&quot;] = &quot;W&amp;J seal old updated color.svg|link=|alt=&quot;,
	[&quot;washington roads&quot;] = &quot;WA-blank.svg|link=|alt=&quot;,
	[&quot;washington university in st. louis&quot;] = &quot;The Kansas City review of science and industry (1884) (14598227079).jpg|link=|alt=image&quot;,
	[&quot;washington, d.c.&quot;] = &quot;Flag of Washington, D.C..svg|border|link=|alt=flag&quot;,
	[&quot;water&quot;] = &quot;Drinking water.jpg|alt=icon&quot;,
	[&quot;water sports&quot;] = &quot;Kitesurfing.jpg|link=|alt=&quot;,
	[&quot;waterfalls&quot;] = &quot;Victoria falls, zambia.jpg|link=|alt=icon&quot;,
	[&quot;weapons of mass destruction&quot;] = &quot;Operation Castle - Romeo 001.jpg|link=|alt=&quot;,
	[&quot;weather&quot;] = &quot;Cumulus clouds in fair weather.jpeg|alt=icon&quot;,
	[&quot;weimar republic&quot;] = &quot;Wappen Deutsches Reich (Weimarer Republik).svg|alt=icon&quot;,
	[&quot;west bengal&quot;] = &quot;BengaliScriptKo.svg|link=|alt=&quot;,
	[&quot;west germany&quot;] = &quot;Flag of Germany.svg|border|link=|alt=flag&quot;,
	[&quot;west sussex&quot;] = &quot;EnglandWestSussex.svg|link=|alt=&quot;,
	[&quot;west virginia&quot;] = &quot;Flag of West Virginia.svg|border|link=|alt=flag&quot;,
	[&quot;west virginia university&quot;] = &quot;West Virginia Mountaineers logo.svg|link=|alt=logo&quot;,
	[&quot;western australia&quot;] = &quot;Flag of Western Australia.svg|border|link=|alt=flag&quot;,
	[&quot;western region (ghana)&quot;] = &quot;Flag of Western Region (Ghana).gif|border|link=|alt=flag&quot;,
	[&quot;western sahara&quot;] = &quot;Flag of the Sahrawi Arab Democratic Republic.svg|border|link=|alt=flag&quot;,
	[&quot;wetlands&quot;] = &quot;Atchafalaya Basin.jpg|link=|alt=&quot;,
	[&quot;whitney houston&quot;] = &quot;Flickr Whitney Houston performing on GMA 2009 2.jpg|alt=icon&quot;,
	[&quot;wicca&quot;] = &quot;Pentacle 2.svg|link=|alt=&quot;,
	[&quot;wikipedia&quot;] = &quot;X mark.svg|link=|alt=&quot;,
	[&quot;wiltshire&quot;] = &quot;EnglandWiltshire.png|alt=icon&quot;,
	[&quot;wine&quot;] = &quot;Glass of wine.png|alt=icon&quot;,
	[&quot;winter paralympics&quot;] = &quot;IPC logo (2004).svg|link=|alt=&quot;,
	[&quot;wisconsin&quot;] = &quot;Flag of Wisconsin.svg|border|link=|alt=flag&quot;,
	[&quot;women in red&quot;] = &quot;Women in Red logo.svg|link=|alt=logo&quot;,
	[&quot;women scientists&quot;] = &quot;Women Geologists, Spedizione XII, Italiantartide 1995-96.jpg|link=|alt=photo&quot;,
	[&quot;women's association football&quot;] = &quot;Womens-soccer-icon.png|alt=icon&quot;,
	[&quot;women's history&quot;] = &quot;Simone Veil (1984).jpg|alt=icon&quot;,
	[&quot;women's sport&quot;] = &quot;Netball.svg|link=|alt=&quot;,
	[&quot;world war i&quot;] = &quot;Fokker Dr. I (117710246).jpg|border|alt=icon&quot;,
	[&quot;world war ii&quot;] = &quot;Heinkel He 111 during the Battle of Britain.jpg|border|link=|alt=&quot;,
	[&quot;writing&quot;] = &quot;Nuvola apps kmessedwords.png|alt=icon&quot;,
	[&quot;wyoming&quot;] = &quot;Flag of Wyoming.svg|border|link=|alt=flag&quot;
}</text>
      <sha1>2q315ehv2968hfodwjjoze6qcdvinjq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Pp-move-indef</title>
    <ns>828</ns>
    <id>43852218</id>
    <revision>
      <id>626024599</id>
      <parentid>626023280</parentid>
      <timestamp>2014-09-18T01:37:33Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>make fixes for when we are called from #invoke - the title parameter becomes a frame object</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1325">-- This module implements [[Template:Pp-move-indef]].

local p = {}

function p.main(title)
	if type(title) == 'string' then
		title = mw.title.new(title)
	elseif type(title) ~= 'table' or not title.text or not title.getContent then
		-- The title parameter is absent or not a title object. It could be a
		-- frame object if we are being called from #invoke.
		title = mw.title.getCurrentTitle()
	end
	
	local level = title
		and title.protectionLevels
		and title.protectionLevels.move
		and title.protectionLevels.move[1]
	local namespace = title and title.namespace

	local category
	if level == 'sysop' or level == 'templateeditor' then
		if namespace == 2 or namespace == 3 then
			category = 'Wikipedia move-protected user and user talk pages'
		elseif namespace == 4 or namepace == 12 then
			category = 'Wikipedia move-protected project pages'
		elseif namespace == 100 then
			category = 'Wikipedia move-protected portals'
		elseif title.isTalkPage then
			category = 'Wikipedia move-protected talk pages'
		else
			category = 'Wikipedia indefinitely move-protected pages'
		end
	else
		category = 'Wikipedia pages with incorrect protection templates'
	end

	return string.format(
		'[[%s:%s|%s]]',
		mw.site.namespaces[14].name, -- &quot;Category&quot;
		category,
		title.text -- equivalent of {{PAGENAME}}
	)
end

return p</text>
      <sha1>atx7059h6idmnrzpafno6seeehksu5k</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Protection banner</title>
    <ns>828</ns>
    <id>42040984</id>
    <revision>
      <id>741795115</id>
      <parentid>732908599</parentid>
      <timestamp>2016-09-29T18:32:41Z</timestamp>
      <contributor>
        <username>Cenarium</username>
        <id>5711305</id>
      </contributor>
      <comment>remove expiry param (now also automatically retrieved for autoreview) and needsexpiry check</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="25486">-- This module implements {{pp-meta}} and its daughter templates such as
-- {{pp-dispute}}, {{pp-vandalism}} and {{pp-sock}}.

-- Initialise necessary modules.
require('Module:No globals')
local makeFileLink = require('Module:File link')._main
local effectiveProtectionLevel = require('Module:Effective protection level')._main
local effectiveProtectionExpiry = require('Module:Effective protection expiry')._main
local yesno = require('Module:Yesno')

-- Lazily initialise modules and objects we don't always need.
local getArgs, makeMessageBox, lang

-- Set constants.
local CONFIG_MODULE = 'Module:Protection banner/config'

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function makeCategoryLink(cat, sort)
	if cat then
		return string.format(
			'[[%s:%s|%s]]',
			mw.site.namespaces[14].name,
			cat,
			sort
		)
	end
end

-- Validation function for the expiry and the protection date
local function validateDate(dateString, dateType)
	if not lang then
		lang = mw.language.getContentLanguage()
	end
	local success, result = pcall(lang.formatDate, lang, 'U', dateString)
	if success then
		result = tonumber(result)
		if result then
			return result
		end
	end
	error(string.format(
		'invalid %s: %s',
		dateType,
		tostring(dateString)
	), 4)
end

local function makeFullUrl(page, query, display)
	return string.format(
		'[%s %s]',
		tostring(mw.uri.fullUrl(page, query)),
		display
	)
end

-- Given a directed graph formatted as node -&gt; table of direct successors,
-- get a table of all nodes reachable from a given node (though always
-- including the given node).
local function getReachableNodes(graph, start)
	local toWalk, retval = {[start] = true}, {}
	while true do
		-- Can't use pairs() since we're adding and removing things as we're iterating
		local k = next(toWalk) -- This always gets the &quot;first&quot; key
		if k == nil then
			return retval
		end
		toWalk[k] = nil
		retval[k] = true
		for _,v in ipairs(graph[k]) do
			if not retval[v] then
				toWalk[v] = true
			end
		end
	end
end

--------------------------------------------------------------------------------
-- Protection class
--------------------------------------------------------------------------------

local Protection = {}
Protection.__index = Protection

Protection.supportedActions = {
	edit = true,
	move = true,
	autoreview = true,
	upload = true
}

Protection.bannerConfigFields = {
	'text',
	'explanation',
	'tooltip',
	'alt',
	'link',
	'image'
}

function Protection.new(args, cfg, title)
	local obj = {}
	obj._cfg = cfg
	obj.title = title or mw.title.getCurrentTitle()

	-- Set action
	if not args.action then
		obj.action = 'edit'
	elseif Protection.supportedActions[args.action] then
		obj.action = args.action
	else
		error(string.format(
			'invalid action: %s',
			tostring(args.action)
		), 3)
	end

	-- Set level
	obj.level = args.demolevel or effectiveProtectionLevel(obj.action, obj.title)
	if not obj.level or (obj.action == 'move' and obj.level == 'autoconfirmed') then
		-- Users need to be autoconfirmed to move pages anyway, so treat
		-- semi-move-protected pages as unprotected.
		obj.level = '*'
	end

	-- Set expiry
	local effectiveExpiry = effectiveProtectionExpiry(obj.action, obj.title)
	if effectiveExpiry == 'infinity' then
		obj.expiry = 'indef'
	elseif effectiveExpiry ~= 'unknown' then
		obj.expiry = validateDate(effectiveExpiry, 'expiry date')
	end

	-- Set reason
	if args[1] then
		obj.reason = mw.ustring.lower(args[1])
		if obj.reason:find('|') then
			error('reasons cannot contain the pipe character (&quot;|&quot;)', 3)
		end
	end

	-- Set protection date
	if args.date then
		obj.protectionDate = validateDate(args.date, 'protection date')
	end
	
	-- Set banner config
	do
		obj.bannerConfig = {}
		local configTables = {}
		if cfg.banners[obj.action] then
			configTables[#configTables + 1] = cfg.banners[obj.action][obj.reason]
		end
		if cfg.defaultBanners[obj.action] then
			configTables[#configTables + 1] = cfg.defaultBanners[obj.action][obj.level]
			configTables[#configTables + 1] = cfg.defaultBanners[obj.action].default
		end
		configTables[#configTables + 1] = cfg.masterBanner
		for i, field in ipairs(Protection.bannerConfigFields) do
			for j, t in ipairs(configTables) do
				if t[field] then
					obj.bannerConfig[field] = t[field]
					break
				end
			end
		end
	end
	return setmetatable(obj, Protection)
end

function Protection:isProtected()
	return self.level ~= '*'
end

function Protection:isTemporary()
	return type(self.expiry) == 'number'
end

function Protection:makeProtectionCategory()
	local cfg = self._cfg
	local title = self.title
	
	-- Exit if the page is not protected.
	if not self:isProtected() then
		return ''
	end
	
	-- Get the expiry key fragment.
	local expiryFragment
	if self.expiry == 'indef' then
		expiryFragment = self.expiry
	elseif type(self.expiry) == 'number' then
		expiryFragment = 'temp'
	end

	-- Get the namespace key fragment.
	local namespaceFragment = cfg.categoryNamespaceKeys[title.namespace]
	if not namespaceFragment and title.namespace % 2 == 1 then
			namespaceFragment = 'talk'
	end
 
	-- Define the order that key fragments are tested in. This is done with an
	-- array of tables containing the value to be tested, along with its
	-- position in the cfg.protectionCategories table.
	local order = {
		{val = expiryFragment,    keypos = 1},
		{val = namespaceFragment, keypos = 2},
		{val = self.reason,       keypos = 3},
		{val = self.level,        keypos = 4},
		{val = self.action,       keypos = 5}
	}

	--[[
	-- The old protection templates used an ad-hoc protection category system,
	-- with some templates prioritising namespaces in their categories, and
	-- others prioritising the protection reason. To emulate this in this module
	-- we use the config table cfg.reasonsWithNamespacePriority to set the
	-- reasons for which namespaces have priority over protection reason.
	-- If we are dealing with one of those reasons, move the namespace table to
	-- the end of the order table, i.e. give it highest priority. If not, the
	-- reason should have highest priority, so move that to the end of the table
	-- instead.
	--]]
	table.insert(order, table.remove(order, self.reason and cfg.reasonsWithNamespacePriority[self.reason] and 2 or 3))
 
	--[[
	-- Define the attempt order. Inactive subtables (subtables with nil &quot;value&quot;
	-- fields) are moved to the end, where they will later be given the key
	-- &quot;all&quot;. This is to cut down on the number of table lookups in
	-- cfg.protectionCategories, which grows exponentially with the number of
	-- non-nil keys. We keep track of the number of active subtables with the
	-- noActive parameter.
	--]]
	local noActive, attemptOrder
	do
		local active, inactive = {}, {}
		for i, t in ipairs(order) do
			if t.val then
				active[#active + 1] = t
			else
				inactive[#inactive + 1] = t
			end
		end
		noActive = #active
		attemptOrder = active
		for i, t in ipairs(inactive) do
			attemptOrder[#attemptOrder + 1] = t
		end
	end
 
	--[[
	-- Check increasingly generic key combinations until we find a match. If a
	-- specific category exists for the combination of key fragments we are
	-- given, that match will be found first. If not, we keep trying different
	-- key fragment combinations until we match using the key
	-- &quot;all-all-all-all-all&quot;.
	--
	-- To generate the keys, we index the key subtables using a binary matrix
	-- with indexes i and j. j is only calculated up to the number of active
	-- subtables. For example, if there were three active subtables, the matrix
	-- would look like this, with 0 corresponding to the key fragment &quot;all&quot;, and
	-- 1 corresponding to other key fragments.
	-- 
	--   j 1  2  3
	-- i  
	-- 1   1  1  1
	-- 2   0  1  1
	-- 3   1  0  1
	-- 4   0  0  1
	-- 5   1  1  0
	-- 6   0  1  0
	-- 7   1  0  0
	-- 8   0  0  0
	-- 
	-- Values of j higher than the number of active subtables are set
	-- to the string &quot;all&quot;.
	--
	-- A key for cfg.protectionCategories is constructed for each value of i.
	-- The position of the value in the key is determined by the keypos field in
	-- each subtable.
	--]]
	local cats = cfg.protectionCategories
	for i = 1, 2^noActive do
		local key = {}
		for j, t in ipairs(attemptOrder) do
			if j &gt; noActive then
				key[t.keypos] = 'all'
			else
				local quotient = i / 2 ^ (j - 1)
				quotient = math.ceil(quotient)
				if quotient % 2 == 1 then
					key[t.keypos] = t.val
				else
					key[t.keypos] = 'all'
				end
			end
		end
		key = table.concat(key, '|')
		local attempt = cats[key]
		if attempt then
			return makeCategoryLink(attempt, title.text)
		end
	end
	return ''
end

function Protection:isIncorrect()
	local expiry = self.expiry
	return not self:isProtected()
		or type(expiry) == 'number' and expiry &lt; os.time()
end

function Protection:isTemplateProtectedNonTemplate()
	local action, namespace = self.action, self.title.namespace
	return self.level == 'templateeditor'
		and (
			(action ~= 'edit' and action ~= 'move')
			or (namespace ~= 10 and namespace ~= 828)
		)
end

function Protection:makeCategoryLinks()
	local msg = self._cfg.msg
	local ret = { self:makeProtectionCategory() }
	if self:isIncorrect() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-incorrect'],
			self.title.text
		)
	end
	if self:isTemplateProtectedNonTemplate() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-template'],
			self.title.text
		)
	end
	return table.concat(ret)
end

--------------------------------------------------------------------------------
-- Blurb class
--------------------------------------------------------------------------------

local Blurb = {}
Blurb.__index = Blurb

Blurb.bannerTextFields = {
	text = true,
	explanation = true,
	tooltip = true,
	alt = true,
	link = true
}

function Blurb.new(protectionObj, args, cfg)
	return setmetatable({
		_cfg = cfg,
		_protectionObj = protectionObj,
		_args = args
	}, Blurb)
end

-- Private methods --

function Blurb:_formatDate(num)
	-- Formats a Unix timestamp into dd Month, YYYY format.
	lang = lang or mw.language.getContentLanguage()
	local success, date = pcall(
		lang.formatDate,
		lang,
		self._cfg.msg['expiry-date-format'] or 'j F Y',
		'@' .. tostring(num)
	)
	if success then
		return date
	end
end

function Blurb:_getExpandedMessage(msgKey)
	return self:_substituteParameters(self._cfg.msg[msgKey])
end

function Blurb:_substituteParameters(msg)
	if not self._params then
		local parameterFuncs = {}

		parameterFuncs.CURRENTVERSION     = self._makeCurrentVersionParameter
		parameterFuncs.EDITREQUEST        = self._makeEditRequestParameter
		parameterFuncs.EXPIRY             = self._makeExpiryParameter
		parameterFuncs.EXPLANATIONBLURB   = self._makeExplanationBlurbParameter
		parameterFuncs.IMAGELINK          = self._makeImageLinkParameter
		parameterFuncs.INTROBLURB         = self._makeIntroBlurbParameter
		parameterFuncs.INTROFRAGMENT      = self._makeIntroFragmentParameter
		parameterFuncs.PAGETYPE           = self._makePagetypeParameter
		parameterFuncs.PROTECTIONBLURB    = self._makeProtectionBlurbParameter
		parameterFuncs.PROTECTIONDATE     = self._makeProtectionDateParameter
		parameterFuncs.PROTECTIONLEVEL    = self._makeProtectionLevelParameter
		parameterFuncs.PROTECTIONLOG      = self._makeProtectionLogParameter
		parameterFuncs.TALKPAGE           = self._makeTalkPageParameter
		parameterFuncs.TOOLTIPBLURB       = self._makeTooltipBlurbParameter
		parameterFuncs.TOOLTIPFRAGMENT    = self._makeTooltipFragmentParameter
		parameterFuncs.VANDAL             = self._makeVandalTemplateParameter
		
		self._params = setmetatable({}, {
			__index = function (t, k)
				local param
				if parameterFuncs[k] then
					param = parameterFuncs[k](self)
				end
				param = param or ''
				t[k] = param
				return param
			end
		})
	end
	
	msg = msg:gsub('${(%u+)}', self._params)
	return msg
end

function Blurb:_makeCurrentVersionParameter()
	-- A link to the page history or the move log, depending on the kind of
	-- protection.
	local pagename = self._protectionObj.title.prefixedText
	if self._protectionObj.action == 'move' then
		-- We need the move log link.
		return makeFullUrl(
			'Special:Log',
			{type = 'move', page = pagename},
			self:_getExpandedMessage('current-version-move-display')
		)
	else
		-- We need the history link.
		return makeFullUrl(
			pagename,
			{action = 'history'},
			self:_getExpandedMessage('current-version-edit-display')
		)
	end
end

function Blurb:_makeEditRequestParameter()
	local mEditRequest = require('Module:Submit an edit request')
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	
	-- Get the edit request type.
	local requestType
	if action == 'edit' then
		if level == 'autoconfirmed' then
			requestType = 'semi'
		elseif level == 'extendedconfirmed' then
			requestType = 'extended'
		elseif level == 'templateeditor' then
			requestType = 'template'
		end
	end
	requestType = requestType or 'full'
	
	-- Get the display value.
	local display = self:_getExpandedMessage('edit-request-display')

	return mEditRequest._link{type = requestType, display = display}
end

function Blurb:_makeExpiryParameter()
	local expiry = self._protectionObj.expiry
	if type(expiry) == 'number' then
		return self:_formatDate(expiry)
	else
		return expiry
	end
end

function Blurb:_makeExplanationBlurbParameter()
	-- Cover special cases first.
	if self._protectionObj.title.namespace == 8 then
		-- MediaWiki namespace
		return self:_getExpandedMessage('explanation-blurb-nounprotect')
	end

	-- Get explanation blurb table keys
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local talkKey = self._protectionObj.title.isTalkPage and 'talk' or 'subject'

	-- Find the message in the explanation blurb table and substitute any
	-- parameters.
	local explanations = self._cfg.explanationBlurbs
	local msg
	if explanations[action][level] and explanations[action][level][talkKey] then
		msg = explanations[action][level][talkKey]
	elseif explanations[action][level] and explanations[action][level].default then
		msg = explanations[action][level].default
	elseif explanations[action].default and explanations[action].default[talkKey] then
		msg = explanations[action].default[talkKey]
	elseif explanations[action].default and explanations[action].default.default then
		msg = explanations[action].default.default
	else
		error(string.format(
			'could not find explanation blurb for action &quot;%s&quot;, level &quot;%s&quot; and talk key &quot;%s&quot;',
			action,
			level,
			talkKey
		), 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeImageLinkParameter()
	local imageLinks = self._cfg.imageLinks
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if imageLinks[action][level] then
		msg = imageLinks[action][level]
	elseif imageLinks[action].default then
		msg = imageLinks[action].default
	else
		msg = imageLinks.edit.default
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeIntroBlurbParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('intro-blurb-expiry')
	else
		return self:_getExpandedMessage('intro-blurb-noexpiry')
	end
end

function Blurb:_makeIntroFragmentParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('intro-fragment-expiry')
	else
		return self:_getExpandedMessage('intro-fragment-noexpiry')
	end
end

function Blurb:_makePagetypeParameter()
	local pagetypes = self._cfg.pagetypes
	return pagetypes[self._protectionObj.title.namespace]
		or pagetypes.default
		or error('no default pagetype defined', 8)
end

function Blurb:_makeProtectionBlurbParameter()
	local protectionBlurbs = self._cfg.protectionBlurbs
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if protectionBlurbs[action][level] then
		msg = protectionBlurbs[action][level]
	elseif protectionBlurbs[action].default then
		msg = protectionBlurbs[action].default
	elseif protectionBlurbs.edit.default then
		msg = protectionBlurbs.edit.default
	else
		error('no protection blurb defined for protectionBlurbs.edit.default', 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeProtectionDateParameter()
	local protectionDate = self._protectionObj.protectionDate
	if type(protectionDate) == 'number' then
		return self:_formatDate(protectionDate)
	else
		return protectionDate
	end
end

function Blurb:_makeProtectionLevelParameter()
	local protectionLevels = self._cfg.protectionLevels
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if protectionLevels[action][level] then
		msg = protectionLevels[action][level]
	elseif protectionLevels[action].default then
		msg = protectionLevels[action].default
	elseif protectionLevels.edit.default then
		msg = protectionLevels.edit.default
	else
		error('no protection level defined for protectionLevels.edit.default', 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeProtectionLogParameter()
	local pagename = self._protectionObj.title.prefixedText
	if self._protectionObj.action == 'autoreview' then
		-- We need the pending changes log.
		return makeFullUrl(
			'Special:Log',
			{type = 'stable', page = pagename},
			self:_getExpandedMessage('pc-log-display')
		)
	else
		-- We need the protection log.
		return makeFullUrl(
			'Special:Log',
			{type = 'protect', page = pagename},
			self:_getExpandedMessage('protection-log-display')
		)
	end
end

function Blurb:_makeTalkPageParameter()
	return string.format(
		'[[%s:%s#%s|%s]]',
		mw.site.namespaces[self._protectionObj.title.namespace].talk.name,
		self._protectionObj.title.text,
		self._args.section or 'top',
		self:_getExpandedMessage('talk-page-link-display')
	)
end

function Blurb:_makeTooltipBlurbParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('tooltip-blurb-expiry')
	else
		return self:_getExpandedMessage('tooltip-blurb-noexpiry')
	end
end

function Blurb:_makeTooltipFragmentParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('tooltip-fragment-expiry')
	else
		return self:_getExpandedMessage('tooltip-fragment-noexpiry')
	end
end

function Blurb:_makeVandalTemplateParameter()
	return require('Module:Vandal-m')._main{
		self._args.user or self._protectionObj.title.baseText
	}
end

-- Public methods --

function Blurb:makeBannerText(key)
	-- Validate input.
	if not key or not Blurb.bannerTextFields[key] then
		error(string.format(
			'&quot;%s&quot; is not a valid banner config field',
			tostring(key)
		), 2)
	end

	-- Generate the text.
	local msg = self._protectionObj.bannerConfig[key]
	if type(msg) == 'string' then
		return self:_substituteParameters(msg)
	elseif type(msg) == 'function' then
		msg = msg(self._protectionObj, self._args)
		if type(msg) ~= 'string' then
			error(string.format(
				'bad output from banner config function with key &quot;%s&quot;'
					.. ' (expected string, got %s)',
				tostring(key),
				type(msg)
			), 4)
		end
		return self:_substituteParameters(msg)
	end
end

--------------------------------------------------------------------------------
-- BannerTemplate class
--------------------------------------------------------------------------------

local BannerTemplate = {}
BannerTemplate.__index = BannerTemplate

function BannerTemplate.new(protectionObj, cfg)
	local obj = {}
	obj._cfg = cfg

	-- Set the image filename.
	local imageFilename = protectionObj.bannerConfig.image
	if imageFilename then
		obj._imageFilename = imageFilename
	else
		-- If an image filename isn't specified explicitly in the banner config,
		-- generate it from the protection status and the namespace.
		local action = protectionObj.action
		local level = protectionObj.level
		local namespace = protectionObj.title.namespace
		local reason = protectionObj.reason
		
		-- Deal with special cases first.
		if (
			namespace == 10
			or namespace == 828
			or reason and obj._cfg.indefImageReasons[reason]
			)
			and action == 'edit'
			and level == 'sysop'
			and not protectionObj:isTemporary()
		then
			-- Fully protected modules and templates get the special red &quot;indef&quot;
			-- padlock.
			obj._imageFilename = obj._cfg.msg['image-filename-indef']
		else
			-- Deal with regular protection types.
			local images = obj._cfg.images
			if images[action] then
				if images[action][level] then
					obj._imageFilename = images[action][level]
				elseif images[action].default then
					obj._imageFilename = images[action].default
				end
			end
		end
	end
	return setmetatable(obj, BannerTemplate)
end

function BannerTemplate:renderImage()
	local filename = self._imageFilename
		or self._cfg.msg['image-filename-default']
		or 'Transparent.gif'
	return makeFileLink{
		file = filename,
		size = (self.imageWidth or 20) .. 'px',
		alt = self._imageAlt,
		link = self._imageLink,
		caption = self.imageCaption
	}
end

--------------------------------------------------------------------------------
-- Banner class
--------------------------------------------------------------------------------

local Banner = setmetatable({}, BannerTemplate)
Banner.__index = Banner

function Banner.new(protectionObj, blurbObj, cfg)
	local obj = BannerTemplate.new(protectionObj, cfg) -- This doesn't need the blurb.
	obj.imageWidth = 40
	obj.imageCaption = blurbObj:makeBannerText('alt') -- Large banners use the alt text for the tooltip.
	obj._reasonText = blurbObj:makeBannerText('text')
	obj._explanationText = blurbObj:makeBannerText('explanation')
	obj._page = protectionObj.title.prefixedText -- Only makes a difference in testing.
	return setmetatable(obj, Banner)
end

function Banner:__tostring()
	-- Renders the banner.
	makeMessageBox = makeMessageBox or require('Module:Message box').main
	local reasonText = self._reasonText or error('no reason text set', 2)
	local explanationText = self._explanationText
	local mbargs = {
		page = self._page,
		type = 'protection',
		image = self:renderImage(),
		text = string.format(
			&quot;'''%s'''%s&quot;,
			reasonText,
			explanationText and '&lt;br /&gt;' .. explanationText or ''
		)
	}
	return makeMessageBox('mbox', mbargs)
end

--------------------------------------------------------------------------------
-- Padlock class
--------------------------------------------------------------------------------

local Padlock = setmetatable({}, BannerTemplate)
Padlock.__index = Padlock

function Padlock.new(protectionObj, blurbObj, cfg)
	local obj = BannerTemplate.new(protectionObj, cfg) -- This doesn't need the blurb.
	obj.imageWidth = 20
	obj.imageCaption = blurbObj:makeBannerText('tooltip')
	obj._imageAlt = blurbObj:makeBannerText('alt')
	obj._imageLink = blurbObj:makeBannerText('link')
	obj._indicatorName = cfg.padlockIndicatorNames[protectionObj.action]
		or cfg.padlockIndicatorNames.default
		or 'pp-default'
	return setmetatable(obj, Padlock)
end

function Padlock:__tostring()
	local frame = mw.getCurrentFrame()
	-- The nowiki tag helps prevent whitespace at the top of articles.
	return frame:extensionTag{name = 'nowiki'} .. frame:extensionTag{
		name = 'indicator',
		args = {name = self._indicatorName},
		content = self:renderImage()
	}
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- This is used for testing purposes.
	return {
		Protection = Protection,
		Blurb = Blurb,
		BannerTemplate = BannerTemplate,
		Banner = Banner,
		Padlock = Padlock,
	}
end

function p._main(args, cfg, title)
	args = args or {}
	cfg = cfg or require(CONFIG_MODULE)

	local protectionObj = Protection.new(args, cfg, title)

	local ret = {}

	-- If a page's edit protection is equally or more restrictive than its
	-- protection from some other action, then don't bother displaying anything
	-- for the other action (except categories).
	if protectionObj.action == 'edit' or
		args.demolevel or
		not getReachableNodes(
			cfg.hierarchy,
			protectionObj.level
		)[effectiveProtectionLevel('edit', protectionObj.title)]
	then
		-- Initialise the blurb object
		local blurbObj = Blurb.new(protectionObj, args, cfg)
	
		-- Render the banner
		if protectionObj:isProtected() then
			ret[#ret + 1] = tostring(
				(yesno(args.small) and Padlock or Banner)
				.new(protectionObj, blurbObj, cfg)
			)
		end
	end

	-- Render the categories
	if yesno(args.category) ~= false then
		ret[#ret + 1] = protectionObj:makeCategoryLinks()
	end
	
	return table.concat(ret)	
end

function p.main(frame, cfg)
	cfg = cfg or require(CONFIG_MODULE)

	-- Find default args, if any.
	local parent = frame.getParent and frame:getParent()
	local defaultArgs = parent and cfg.wrappers[parent:getTitle():gsub('/sandbox$', '')]

	-- Find user args, and use the parent frame if we are being called from a
	-- wrapper template.
	getArgs = getArgs or require('Module:Arguments').getArgs
	local userArgs = getArgs(frame, {
		parentOnly = defaultArgs,
		frameOnly = not defaultArgs
	})

	-- Build the args table. User-specified args overwrite default args.
	local args = {}
	for k, v in pairs(defaultArgs or {}) do
		args[k] = v
	end
	for k, v in pairs(userArgs) do
		args[k] = v
	end
	return p._main(args, cfg)
end

return p</text>
      <sha1>ice162y8kua930ie41kredxjaxhzy3y</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Protection banner/config</title>
    <ns>828</ns>
    <id>42982788</id>
    <revision>
      <id>776490617</id>
      <parentid>772318676</parentid>
      <timestamp>2017-04-21T09:32:57Z</timestamp>
      <contributor>
        <username>Yaris678</username>
        <id>1210941</id>
      </contributor>
      <comment>Let's not get into whether and when we are publishing.  Existing consensus at [[:Template:Protection table]] is &quot;go live&quot; for a very short description... but we have space here to be even more specific</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="46798">-- This module provides configuration data for [[Module:Protection banner]].

return {

--------------------------------------------------------------------------------
--
--                                BANNER DATA
--
--------------------------------------------------------------------------------

--[[
-- Banner data consists of six fields:
-- * text - the main protection text that appears at the top of protection
--   banners.
-- * explanation - the text that appears below the main protection text, used
--   to explain the details of the protection.
-- * tooltip - the tooltip text you see when you move the mouse over a small
--   padlock icon.
-- * link - the page that the small padlock icon links to.
-- * alt - the alt text for the small padlock icon. This is also used as tooltip
--   text for the large protection banners.
-- * image - the padlock image used in both protection banners and small padlock
--   icons.
--
-- The module checks in three separate tables to find a value for each field.
-- First it checks the banners table, which has values specific to the reason
-- for the page being protected. Then the module checks the defaultBanners
-- table, which has values specific to each protection level. Finally, the
-- module checks the masterBanner table, which holds data for protection
-- templates to use if no data has been found in the previous two tables.
--
-- The values in the banner data can take parameters. These are specified
-- using ${TEXTLIKETHIS} (a dollar sign preceding a parameter name
-- enclosed in curly braces).
--
--                          Available parameters:
--
-- ${CURRENTVERSION} - a link to the page history or the move log, with the
-- display message &quot;current-version-edit-display&quot; or
-- &quot;current-version-move-display&quot;.
--
-- ${EDITREQUEST} - a link to create an edit request for the current page.
--
-- ${EXPLANATIONBLURB} - an explanation blurb, e.g. &quot;Please discuss any changes
-- on the talk page; you may submit a request to ask an administrator to make
-- an edit if it is minor or supported by consensus.&quot;
--
-- ${IMAGELINK} - a link to set the image to, depending on the protection
-- action and protection level.
--
-- ${INTROBLURB} - the PROTECTIONBLURB parameter, plus the expiry if an expiry
-- is set. E.g. &quot;Editing of this page by new or unregistered users is currently 
-- disabled until dd Month YYYY.&quot;
--
-- ${INTROFRAGMENT} - the same as ${INTROBLURB}, but without final punctuation
-- so that it can be used in run-on sentences.
--
-- ${PAGETYPE} - the type of the page, e.g. &quot;article&quot; or &quot;template&quot;.
-- Defined in the cfg.pagetypes table.
--
-- ${PROTECTIONBLURB} - a blurb explaining the protection level of the page, e.g.
-- &quot;Editing of this page by new or unregistered users is currently disabled&quot;
--
-- ${PROTECTIONDATE} - the protection date, if it has been supplied to the
-- template.
--
-- ${PROTECTIONLEVEL} - the protection level, e.g. &quot;fully protected&quot; or
-- &quot;semi-protected&quot;.
--
-- ${PROTECTIONLOG} - a link to the protection log or the pending changes log,
-- depending on the protection action.
--
-- ${TALKPAGE} - a link to the talk page. If a section is specified, links
-- straight to that talk page section.
--
-- ${TOOLTIPBLURB} - uses the PAGETYPE, PROTECTIONTYPE and EXPIRY parameters to
-- create a blurb like &quot;This template is semi-protected&quot;, or &quot;This article is
-- move-protected until DD Month YYYY&quot;.
--
-- ${VANDAL} - links for the specified username (or the root page name)
-- using Module:Vandal-m.
--
--                                 Functions
--
-- For advanced users, it is possible to use Lua functions instead of strings
-- in the banner config tables. Using functions gives flexibility that is not
-- possible just by using parameters. Functions take two arguments, the
-- protection object and the template arguments, and they must output a string.
--
-- For example:
--
-- text = function (protectionObj, args)
--     if protectionObj.level == 'autoconfirmed' then
--         return 'foo'
--     else
--         return 'bar'
--     end
-- end
--
-- Some protection object properties and methods that may be useful:
-- protectionObj.action - the protection action
-- protectionObj.level - the protection level
-- protectionObj.reason - the protection reason
-- protectionObj.expiry - the expiry. Nil if unset, the string &quot;indef&quot; if set
--     to indefinite, and the protection time in unix time if temporary.
-- protectionObj.protectionDate - the protection date in unix time, or nil if
--     unspecified.
-- protectionObj.bannerConfig - the banner config found by the module. Beware
--     of editing the config field used by the function, as it could create an
--     infinite loop.
-- protectionObj:isProtected - returns a boolean showing whether the page is
--     protected.
-- protectionObj:isTemporary - returns a boolean showing whether the expiry is
--     temporary.
-- protectionObj:isIncorrect - returns a boolean showing whether the protection
--     template is incorrect.
--]]

-- The master banner data, used if no values have been found in banners or
-- defaultBanners.
masterBanner = {
	text = '${INTROBLURB}',
	explanation = '${EXPLANATIONBLURB}',
	tooltip = '${TOOLTIPBLURB}',
	link = '${IMAGELINK}',
	alt = 'Page ${PROTECTIONLEVEL}'
},

-- The default banner data. This holds banner data for different protection
-- levels.
-- *required* - this table needs edit, move, autoreview and upload subtables.
defaultBanners = {
	edit = {},
	move = {},
	autoreview = {
		autoconfirmed = {
			alt = 'Page protected with pending changes level 1',
			tooltip = 'All edits by unregistered and new users are subject to review prior to becoming visible to unregistered users',
			image = 'Padlock-silver-light.svg'
		},
		default = {
			alt = 'Page protected with pending changes level 2',
			tooltip = 'All edits by users who are not reviewers or administrators are'
				.. ' subject to review prior to becoming visible to unregistered users',
			image = 'Padlock-orange.svg'
		}
	},
	upload = {}
},

-- The banner data. This holds banner data for different protection reasons.
-- In fact, the reasons specified in this table control which reasons are
-- valid inputs to the first positional parameter.
--
-- There is also a non-standard &quot;description&quot; field that can be used for items
-- in this table. This is a description of the protection reason for use in the
-- module documentation.
--
-- *required* - this table needs edit, move, autoreview and upload subtables.
banners = {
	edit = {
		blp = {
			description = 'For pages protected to promote compliance with the'
				.. ' [[Wikipedia:Biographies of living persons'
				.. '|biographies of living persons]] policy',
			text = '${INTROFRAGMENT} to promote compliance with'
				.. ' [[Wikipedia:Biographies of living persons'
				.. &quot;|Wikipedia's&amp;nbsp;policy on&amp;nbsp;the&amp;nbsp;biographies&quot;
				.. ' of&amp;nbsp;living&amp;nbsp;people]].',
			tooltip = '${TOOLTIPFRAGMENT} to promote compliance with the policy on'
				.. ' biographies of living people',
		},
		dmca = {
			description = 'For pages protected by the Wikimedia Foundation'
				.. ' due to [[Digital Millennium Copyright Act]] takedown requests',
			explanation = function (protectionObj, args)
				local ret = 'Pursuant to a rights owner notice under the Digital'
					.. ' Millennium Copyright Act (DMCA) regarding some content'
					.. ' in this article, the Wikimedia Foundation acted under'
					.. ' applicable law and took down and restricted the content'
					.. ' in question.'
				if args.notice then
					ret = ret .. ' A copy of the received notice can be found here: '
						.. args.notice .. '.'
				end
				ret = ret .. ' For more information, including websites discussing'
					.. ' how to file a counter-notice, please see'
					.. &quot; [[Wikipedia:Office actions]] and the article's ${TALKPAGE}.&quot;
					.. &quot;'''Do not remove this template from the article until the&quot;
					.. &quot; restrictions are withdrawn'''.&quot;
				return ret
			end,
			image = 'Padlock-black.svg',
		},
		dispute = {
			description = 'For pages protected due to editing disputes',
			text = function (protectionObj, args)
				-- Find the value of &quot;disputes&quot;.
				local display = 'disputes'
				local disputes
				if args.section then
					disputes = string.format(
						'[[%s:%s#%s|%s]]',
						mw.site.namespaces[protectionObj.title.namespace].talk.name,
						protectionObj.title.text,
						args.section,
						display
					)
				else
					disputes = display
				end

				-- Make the blurb, depending on the expiry.
				local msg
				if type(protectionObj.expiry) == 'number' then
					msg = '${INTROFRAGMENT} or until editing %s have been resolved.'
				else
					msg = '${INTROFRAGMENT} until editing %s have been resolved.'
				end
				return string.format(msg, disputes)
			end,
			explanation = &quot;This protection is '''not''' an endorsement of the&quot;
				.. ' ${CURRENTVERSION}. ${EXPLANATIONBLURB}',
			tooltip = '${TOOLTIPFRAGMENT} due to editing disputes',
		},
		ecp = {
			description = 'For articles in topic areas authorized by'
				.. ' [[Wikipedia:Arbitration Committee|ArbCom]] or'
				.. ' meets the criteria for community use',
			tooltip = 'This ${PAGETYPE} is extended-confirmed protected',
			alt = 'Extended-protected ${PAGETYPE}',
		},
		mainpage = {
			description = 'For pages protected for being displayed on the [[Main Page]]',
			text = 'This file is currently'
				.. ' [[Wikipedia:This page is protected|protected]] from'
				.. ' editing because it is currently or will soon be displayed'
				.. ' on the [[Main Page]].',
			explanation = 'Images on the Main Page are protected due to their high'
				.. ' visibility. Please discuss any necessary changes on the ${TALKPAGE}.'
				.. '&lt;br /&gt;&lt;span style=&quot;font-size:90%;&quot;&gt;'
				.. &quot;'''Administrators:''' Once this image is definitely off the Main Page,&quot;
				.. ' please unprotect this file, or reduce to semi-protection,'
				.. ' as appropriate.&lt;/span&gt;',
		},
		office = {
			description = 'For pages protected by the Wikimedia Foundation',
			text = function (protectionObj, args)
				local ret = 'This ${PAGETYPE} is currently under the'
					.. ' scrutiny of the'
					.. ' [[Wikipedia:Office actions|Wikimedia Foundation Office]]'
					.. ' and is protected.'
				if protectionObj.protectionDate then
					ret = ret .. ' It has been protected since ${PROTECTIONDATE}.'
				end
				return ret
			end,
			explanation = &quot;If you can edit this page, please discuss all changes and&quot;
				.. &quot; additions on the ${TALKPAGE} first. '''Do not remove protection from this&quot;
				.. &quot; page unless you are authorized by the Wikimedia Foundation to do&quot;
				.. &quot; so.'''&quot;,
			image = 'Padlock-black.svg',
		},
		reset = {
			description = 'For pages protected by the Wikimedia Foundation and'
				.. ' &quot;reset&quot; to a bare-bones version',
 			text = 'This ${PAGETYPE} is currently under the'
					.. ' scrutiny of the'
					.. ' [[Wikipedia:Office actions|Wikimedia Foundation Office]]'
					.. ' and is protected.',
			explanation = function (protectionObj, args)
				local ret = ''
				if protectionObj.protectionDate then
					ret = ret .. 'On ${PROTECTIONDATE} this ${PAGETYPE} was'
				else
					ret = ret .. 'This ${PAGETYPE} has been'
				end
				ret = ret .. ' reduced to a'
				.. ' simplified, &quot;bare bones&quot; version so that it may be completely'
				.. ' rewritten to ensure it meets the policies of'
				.. ' [[WP:NPOV|Neutral Point of View]] and [[WP:V|Verifiability]].'
				.. ' Standard Wikipedia policies will apply to its rewritingwhich'
				.. ' will eventually be open to all editorsand will be strictly'
				.. ' enforced. The ${PAGETYPE} has been ${PROTECTIONLEVEL} while'
				.. ' it is being rebuilt.\n\n'
				.. 'Any insertion of material directly from'
				.. ' pre-protection revisions of the ${PAGETYPE} will be removed, as'
				.. ' will any material added to the ${PAGETYPE} that is not properly'
				.. ' sourced. The associated talk page(s) were also cleared on the'
				.. &quot; same date.\n\n&quot;
				.. &quot;If you can edit this page, please discuss all changes and&quot;
				.. &quot; additions on the ${TALKPAGE} first. '''Do not override&quot;
				.. &quot; this action, and do not remove protection from this page,&quot;
				.. &quot; unless you are authorized by the Wikimedia Foundation&quot;
				.. &quot; to do so. No editor may remove this notice.'''&quot;

				return ret
			end,
			image = 'Padlock-black.svg',
		},
		sock = {
			description = 'For pages protected due to'
				.. ' [[Wikipedia:Sock puppetry|sock puppetry]]',
			text = '${INTROFRAGMENT} to prevent [[Wikipedia:Sock puppetry|sock puppets]] of'
				.. ' [[Wikipedia:Blocking policy|blocked]] or'
				.. ' [[Wikipedia:Banning policy|banned users]]'
				.. ' from editing it.',
			tooltip = '${TOOLTIPFRAGMENT} to prevent sock puppets of blocked or banned users from'
				.. ' editing it',
		},
		template = {
			description = 'For [[Wikipedia:High-risk templates|high-risk]]'
				.. ' templates and Lua modules',
			text = 'This is a permanently [[Help:Protection|protected]] ${PAGETYPE},'
				.. ' as it is [[Wikipedia:High-risk templates|high-risk]].',
			explanation = 'Please discuss any changes on the ${TALKPAGE}; you may'
				.. ' ${EDITREQUEST} to ask an'
				.. ' [[Wikipedia:Administrators|administrator]] or'
				.. ' [[Wikipedia:Template editor|template editor]] to make an edit if'
				.. ' it is [[Help:Minor edit#When to mark an edit as a minor edit'
				.. '|uncontroversial]] or supported by'
				.. ' [[Wikipedia:Consensus|consensus]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.',
			tooltip = 'This high-risk ${PAGETYPE} is permanently ${PROTECTIONLEVEL}'
				.. ' to prevent vandalism',
			alt = 'Permanently protected ${PAGETYPE}',
		},
		usertalk = {
			description = 'For pages protected against disruptive edits by a'
				.. ' particular user',
			text = '${INTROFRAGMENT} to prevent ${VANDAL} from using it to make disruptive edits,'
				.. ' such as abusing the'
				.. ' &amp;#123;&amp;#123;[[Template:unblock|unblock]]&amp;#125;&amp;#125; template.',
			explanation = 'If you cannot edit this user talk page and you need to'
				.. ' make a change or leave a message, you can'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for edits to a protected page'
				.. '|request an edit]],'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]],'
				.. ' [[Special:Userlogin|log in]],'
				.. ' or [[Special:UserLogin/signup|create an account]].',
		},
		vandalism = {
			description = 'For pages protected against'
				.. ' [[Wikipedia:Vandalism|vandalism]]',
			text = '${INTROFRAGMENT} due to [[Wikipedia:Vandalism|vandalism]].',
			explanation = function (protectionObj, args)
				local ret = ''
				if protectionObj.level == 'sysop' then
					ret = ret .. &quot;This protection is '''not''' an endorsement of the&quot;
						.. ' ${CURRENTVERSION}. '
				end
				return ret .. '${EXPLANATIONBLURB}'
			end,
			tooltip = '${TOOLTIPFRAGMENT} due to vandalism',
		}
	},
	move = {
		dispute = {
			description = 'For pages protected against page moves due to'
				.. ' disputes over the page title',
			explanation = &quot;This protection is '''not''' an endorsement of the&quot;
				.. ' ${CURRENTVERSION}. ${EXPLANATIONBLURB}',
			image = 'Padlock-olive.svg'
		},
		vandalism = {
			description = 'For pages protected against'
				.. ' [[Wikipedia:Vandalism#Page-move vandalism'
				.. ' |page-move vandalism]]'
		}
	},
	autoreview = {},
	upload = {}
},

--------------------------------------------------------------------------------
--
--                            GENERAL DATA TABLES
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Protection blurbs
--------------------------------------------------------------------------------

-- This table produces the protection blurbs available with the
-- ${PROTECTIONBLURB} parameter. It is sorted by protection action and
-- protection level, and is checked by the module in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
protectionBlurbs = {
	edit = {
		default = 'This ${PAGETYPE} is currently [[Help:Protection|'
			.. 'protected]] from editing',
		autoconfirmed = 'Editing of this ${PAGETYPE} by [[Wikipedia:User access'
			.. ' levels#New users|new]] or [[Wikipedia:User access levels#Unregistered'
			.. ' users|unregistered]] users is currently [[Help:Protection|disabled]]',
		extendedconfirmed = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} as a result of'
			.. ' [[Wikipedia:Arbitration Committee|ArbCom]] enforcement or meets the'
			.. ' [[Wikipedia:Protection policy#extended|criteria for community use]]',
	},
	move = {
		default = 'This ${PAGETYPE} is currently [[Help:Protection|protected]]'
			.. ' from [[Help:Moving a page|page moves]]'
	},
	autoreview = {
		autoconfirmed = 'All edits made to this ${PAGETYPE} by'
			.. ' [[Wikipedia:User access levels#New users|new]] or'
			.. ' [[Wikipedia:User access levels#Unregistered users|unregistered]]'
			.. ' users are currently'
			.. ' [[Wikipedia:Pending changes|subject to review]]',
		default = 'All edits made to this ${PAGETYPE} by users who are not'
			.. ' [[Wikipedia:Reviewing|reviewers]] or'
			.. ' [[Wikipedia:Administrators|administrators]] are currently'
			.. ' [[Wikipedia:Pending changes|subject to review]]'
	},
	upload = {
		default = 'Uploading new versions of this ${PAGETYPE} is currently disabled'
	}
},


--------------------------------------------------------------------------------
-- Explanation blurbs
--------------------------------------------------------------------------------

-- This table produces the explanation blurbs available with the
-- ${EXPLANATIONBLURB} parameter. It is sorted by protection action,
-- protection level, and whether the page is a talk page or not. If the page is
-- a talk page it will have a talk key of &quot;talk&quot;; otherwise it will have a talk
-- key of &quot;subject&quot;. The table is checked in the following order:
-- 1. page's protection action, page's protection level, page's talk key
-- 2. page's protection action, page's protection level, default talk key
-- 3. page's protection action, default protection level, page's talk key
-- 4. page's protection action, default protection level, default talk key
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
explanationBlurbs = {
	edit = {
		autoconfirmed = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details. If you'
				.. ' cannot edit this ${PAGETYPE} and you wish to make a change, you can'
				.. ' ${EDITREQUEST}, discuss changes on the ${TALKPAGE},'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details. If you'
				.. ' cannot edit this ${PAGETYPE} and you wish to make a change, you can'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].',
		},
		extendedconfirmed = {
			default = 'Extended confirmed protection prevents edits from all IP editors'
				.. ' and registered users with fewer than 30 days tenure and 500 edits.'
				.. ' The [[Wikipedia:Protection policy#extended|policy on community use]]'
				.. ' specifies that extended confirmed protection can be applied to combat'
				.. ' disruption, given that semi-protection has proven to be ineffective.'
				.. ' Please discuss any changes on the ${TALKPAGE}; you may'
				.. ' ${EDITREQUEST} to ask for unconversial changes supported by'
				.. ' [[Wikipedia:Consensus|consensus]].'
		},
		default = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Please discuss any changes on the ${TALKPAGE}; you'
				.. ' may ${EDITREQUEST} to ask an'
				.. ' [[Wikipedia:Administrators|administrator]] to make an edit if it'
				.. ' is [[Help:Minor edit#When to mark an edit as a minor edit'
				.. '|uncontroversial]] or supported by [[Wikipedia:Consensus'
				.. '|consensus]]. You may also [[Wikipedia:Requests for'
				.. ' page protection#Current requests for reduction in protection level'
				.. '|request]] that this page be unprotected.',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' You may [[Wikipedia:Requests for page'
				.. ' protection#Current requests for edits to a protected page|request an'
				.. ' edit]] to this page, or [[Wikipedia:Requests for'
				.. ' page protection#Current requests for reduction in protection level'
				.. '|ask]] for it to be unprotected.'
		}
	},
	move = {
		default = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but cannot be moved'
				.. ' until unprotected. Please discuss any suggested moves on the'
				.. ' ${TALKPAGE} or at [[Wikipedia:Requested moves]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but cannot be moved'
				.. ' until unprotected. Please discuss any suggested moves at'
				.. ' [[Wikipedia:Requested moves]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.'
		}
	},
	autoreview = {
		default = {
			reviewer = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Edits to this ${PAGETYPE} will not be visible to readers'
				.. ' until they are accepted by a reviewer or an administrator.'
				.. ' To avoid the need for your edits to be reviewed, you may'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]]. Experienced editors may also'
				.. ' request the [[Wikipedia:Reviewing|reviewer user right]].',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Edits to this ${PAGETYPE} by new and unregistered users'
				.. ' will not be visible to readers until they are accepted by'
				.. ' a reviewer. To avoid the need for your edits to be'
				.. ' reviewed, you may'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].'
		},
	},
	upload = {
		default = {
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but new versions of the file'
				.. ' cannot be uploaded until it is unprotected. You can'
				.. ' request that a new version be uploaded by using a'
				.. ' [[Wikipedia:Edit requests|protected edit request]], or you'
				.. ' can  [[Wikipedia:Requests for page protection|request]]'
				.. ' that the file be unprotected.'
		}
	}
},

--------------------------------------------------------------------------------
-- Protection levels
--------------------------------------------------------------------------------

-- This table provides the data for the ${PROTECTIONLEVEL} parameter, which
-- produces a short label for different protection levels. It is sorted by
-- protection action and protection level, and is checked in the following
-- order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
protectionLevels = {
	edit = {
		default = 'protected',
		templateeditor = 'template-protected',
		extendedconfirmed = 'extended-protected',
		autoconfirmed = 'semi-protected',
	},
	move = {
		default = 'move-protected'
	},
	autoreview = {
	},
	upload = {
		default = 'upload-protected'
	}
},

--------------------------------------------------------------------------------
-- Images
--------------------------------------------------------------------------------

-- This table lists different padlock images for each protection action and
-- protection level. It is used if an image is not specified in any of the
-- banner data tables, and if the page does not satisfy the conditions for using
-- the ['image-filename-indef'] image. It is checked in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
images = {
	edit = {
		default = 'Padlock.svg',
		templateeditor = 'Padlock-pink.svg',
		extendedconfirmed = 'Padlock-blue.svg',
		autoconfirmed = 'Padlock-silver.svg'
	},
	move = {
		default = 'Padlock-olive.svg',
	},
	autoreview = {
		autoconfirmed = 'Padlock-silver-light.svg',
		default = 'Padlock-orange.svg'
	},
	upload = {
		default = 'Padlock-purple.svg'
	}
},

-- Pages with a reason specified in this table will show the special &quot;indef&quot;
-- padlock, defined in the 'image-filename-indef' message, if no expiry is set.
indefImageReasons = {
	template = true
},

--------------------------------------------------------------------------------
-- Image links
--------------------------------------------------------------------------------

-- This table provides the data for the ${IMAGELINK} parameter, which gets
-- the image link for small padlock icons based on the page's protection action
-- and protection level. It is checked in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
imageLinks = {
	edit = {
		default = 'Wikipedia:Protection policy#full',
		templateeditor = 'Wikipedia:Protection policy#template',
		extendedconfirmed = 'Wikipedia:Protection policy#extended',
		autoconfirmed = 'Wikipedia:Protection policy#semi'
	},
	move = {
		default = 'Wikipedia:Protection policy#move'
	},
	autoreview = {
		autoconfirmed = 'Wikipedia:Protection policy#pc1',
		reviewer = 'Wikipedia:Protection policy#pc2'
	},
	upload = {
		default = 'Wikipedia:Protection policy#upload'
	}
},

--------------------------------------------------------------------------------
-- Padlock indicator names
--------------------------------------------------------------------------------

-- This table provides the &quot;name&quot; attribute for the &lt;indicator&gt; extension tag
-- with which small padlock icons are generated. All indicator tags on a page
-- are displayed in alphabetical order based on this attribute, and with
-- indicator tags with duplicate names, the last tag on the page wins.
-- The attribute is chosen based on the protection action; table keys must be a
-- protection action name or the string &quot;default&quot;.
padlockIndicatorNames = {
	autoreview = 'pp-autoreview',
	default = 'pp-default'
},

--------------------------------------------------------------------------------
-- Protection categories
--------------------------------------------------------------------------------

--[[
-- The protection categories are stored in the protectionCategories table.
-- Keys to this table are made up of the following strings:
--
-- 1. the expiry date
-- 2. the namespace
-- 3. the protection reason (e.g. &quot;dispute&quot; or &quot;vandalism&quot;)
-- 4. the protection level (e.g. &quot;sysop&quot; or &quot;autoconfirmed&quot;)
-- 5. the action (e.g. &quot;edit&quot; or &quot;move&quot;)
-- 
-- When the module looks up a category in the table, first it will will check to
-- see a key exists that corresponds to all five parameters. For example, a
-- user page semi-protected from vandalism for two weeks would have the key
-- &quot;temp-user-vandalism-autoconfirmed-edit&quot;. If no match is found, the module
-- changes the first part of the key to &quot;all&quot; and checks the table again. It
-- keeps checking increasingly generic key combinations until it finds the
-- field, or until it reaches the key &quot;all-all-all-all-all&quot;.
--
-- The module uses a binary matrix to determine the order in which to search.
-- This is best demonstrated by a table. In this table, the &quot;0&quot; values
-- represent &quot;all&quot;, and the &quot;1&quot; values represent the original data (e.g.
-- &quot;indef&quot; or &quot;file&quot; or &quot;vandalism&quot;).
--
--        expiry    namespace reason   level     action
-- order
-- 1      1         1         1        1         1
-- 2      0         1         1        1         1
-- 3      1         0         1        1         1
-- 4      0         0         1        1         1
-- 5      1         1         0        1         1
-- 6      0         1         0        1         1
-- 7      1         0         0        1         1
-- 8      0         0         0        1         1
-- 9      1         1         1        0         1
-- 10     0         1         1        0         1
-- 11     1         0         1        0         1
-- 12     0         0         1        0         1
-- 13     1         1         0        0         1
-- 14     0         1         0        0         1
-- 15     1         0         0        0         1
-- 16     0         0         0        0         1
-- 17     1         1         1        1         0
-- 18     0         1         1        1         0
-- 19     1         0         1        1         0
-- 20     0         0         1        1         0
-- 21     1         1         0        1         0
-- 22     0         1         0        1         0
-- 23     1         0         0        1         0
-- 24     0         0         0        1         0
-- 25     1         1         1        0         0
-- 26     0         1         1        0         0
-- 27     1         0         1        0         0
-- 28     0         0         1        0         0
-- 29     1         1         0        0         0
-- 30     0         1         0        0         0
-- 31     1         0         0        0         0
-- 32     0         0         0        0         0
--
-- In this scheme the action has the highest priority, as it is the last
-- to change, and the expiry has the least priority, as it changes the most.
-- The priorities of the expiry, the protection level and the action are
-- fixed, but the priorities of the reason and the namespace can be swapped
-- through the use of the cfg.bannerDataNamespaceHasPriority table.
--]]

-- If the reason specified to the template is listed in this table,
-- namespace data will take priority over reason data in the protectionCategories
-- table.
reasonsWithNamespacePriority = {
	vandalism = true,
},

-- The string to use as a namespace key for the protectionCategories table for each
-- namespace number.
categoryNamespaceKeys = {
	[  2] = 'user',
	[  3] = 'user',
	[  4] = 'project',
	[  6] = 'file',
	[  8] = 'mediawiki',
	[ 10] = 'template',
	[ 12] = 'project',
	[ 14] = 'category',
	[100] = 'portal',
	[828] = 'module',
},

protectionCategories = {
	['all|all|all|all|all']                  = 'Wikipedia protected pages',
	['all|all|office|all|all']               = 'Wikipedia Office-protected pages',
	['all|all|reset|all|all']                = 'Wikipedia Office-protected pages',
	['all|all|dmca|all|all']                 = 'Wikipedia Office-protected pages',
	['all|all|mainpage|all|all']             = 'Wikipedia fully-protected main page files',
	['all|all|all|extendedconfirmed|all']    = 'Wikipedia pages under 30-500 editing restriction',
	['all|all|ecp|extendedconfirmed|all']    = 'Wikipedia pages under 30-500 editing restriction',
	['all|template|all|all|edit']            = 'Wikipedia fully-protected templates',
	['all|all|all|autoconfirmed|edit']       = 'Wikipedia semi-protected pages',
	['indef|all|all|autoconfirmed|edit']     = 'Wikipedia indefinitely semi-protected pages',
	['all|all|blp|autoconfirmed|edit']       = 'Wikipedia indefinitely semi-protected biographies of living people',
	['temp|all|blp|autoconfirmed|edit']      = 'Wikipedia temporarily semi-protected biographies of living people',
	['all|all|dispute|autoconfirmed|edit']   = 'Wikipedia pages semi-protected due to dispute',
	['all|all|sock|autoconfirmed|edit']      = 'Wikipedia pages semi-protected from banned users',
	['all|all|vandalism|autoconfirmed|edit'] = 'Wikipedia pages semi-protected against vandalism',
	['all|category|all|autoconfirmed|edit']  = 'Wikipedia semi-protected categories',
	['all|file|all|autoconfirmed|edit']      = 'Wikipedia semi-protected files',
	['all|portal|all|autoconfirmed|edit']    = 'Wikipedia semi-protected portals',
	['all|project|all|autoconfirmed|edit']   = 'Wikipedia semi-protected project pages',
	['all|talk|all|autoconfirmed|edit']      = 'Wikipedia semi-protected talk pages',
	['all|template|all|autoconfirmed|edit']  = 'Wikipedia semi-protected templates',
	['all|user|all|autoconfirmed|edit']      = 'Wikipedia semi-protected user and user talk pages',
	['all|template|all|templateeditor|edit'] = 'Wikipedia template-protected templates',
	['all|all|blp|sysop|edit']               = 'Wikipedia indefinitely protected biographies of living people',
	['temp|all|blp|sysop|edit']              = 'Wikipedia temporarily protected biographies of living people',
	['all|all|dispute|sysop|edit']           = 'Wikipedia pages protected due to dispute',
	['all|all|sock|sysop|edit']              = 'Wikipedia pages protected from banned users',
	['all|all|vandalism|sysop|edit']         = 'Wikipedia pages protected against vandalism',
	['all|category|all|sysop|edit']          = 'Wikipedia protected categories',
	['all|file|all|sysop|edit']              = 'Wikipedia fully-protected files',
	['all|project|all|sysop|edit']           = 'Wikipedia fully-protected project pages',
	['all|talk|all|sysop|edit']              = 'Wikipedia fully-protected talk pages',
	['all|template|all|sysop|edit']          = 'Wikipedia fully-protected templates',
	['all|user|all|sysop|edit']              = 'Wikipedia protected user and user talk pages',
	['all|module|all|all|edit']              = 'Wikipedia fully-protected modules',
	['all|module|all|templateeditor|edit']   = 'Wikipedia template-protected modules',
	['all|module|all|autoconfirmed|edit']    = 'Wikipedia semi-protected modules',
	['all|all|all|sysop|move']               = 'Wikipedia move-protected pages',
	['indef|all|all|sysop|move']             = 'Wikipedia indefinitely move-protected pages',
	['all|all|dispute|sysop|move']           = 'Wikipedia pages move-protected due to dispute',
	['all|all|vandalism|sysop|move']         = 'Wikipedia pages move-protected due to vandalism',
	['all|portal|all|sysop|move']            = 'Wikipedia move-protected portals',
	['all|portal|all|sysop|move']            = 'Wikipedia move-protected portals',
	['all|project|all|sysop|move']           = 'Wikipedia move-protected project pages',
	['all|talk|all|sysop|move']              = 'Wikipedia move-protected talk pages',
	['all|template|all|sysop|move']          = 'Wikipedia move-protected templates',
	['all|user|all|sysop|move']              = 'Wikipedia move-protected user and user talk pages',
	['all|all|all|autoconfirmed|autoreview'] = 'Wikipedia pending changes protected pages (level 1)',
	['all|all|all|reviewer|autoreview']      = 'Wikipedia pending changes protected pages (level 2)',
	['all|file|all|all|upload']              = 'Wikipedia upload-protected files',
},

--------------------------------------------------------------------------------
-- Expiry category config
--------------------------------------------------------------------------------

-- This table configures the expiry category behaviour for each protection
-- action.
-- * If set to true, setting that action will always categorise the page if
--   an expiry parameter is not set.
-- * If set to false, setting that action will never categorise the page.
-- * If set to nil, the module will categorise the page if:
--   1) an expiry parameter is not set, and
--   2) a reason is provided, and
--   3) the specified reason is not blacklisted in the reasonsWithoutExpiryCheck
--      table.

expiryCheckActions = {
	edit = nil,
	move = false,
	autoreview = true,
	upload = false
},

reasonsWithoutExpiryCheck = {
	blp = true,
	template = true,
},

--------------------------------------------------------------------------------
-- Pagetypes
--------------------------------------------------------------------------------

-- This table produces the page types available with the ${PAGETYPE} parameter.
-- Keys are namespace numbers, or the string &quot;default&quot; for the default value.
pagetypes = {
	[0] = 'article',
	[6] = 'file',
	[10] = 'template',
	[14] = 'category',
	[828] = 'module',
	default = 'page'
},

--------------------------------------------------------------------------------
-- Strings marking indefinite protection
--------------------------------------------------------------------------------

-- This table contains values passed to the expiry parameter that mean the page
-- is protected indefinitely.
indefStrings = {
	['indef'] = true,
	['indefinite'] = true,
	['indefinitely'] = true,
	['infinite'] = true,
},

--------------------------------------------------------------------------------
-- Group hierarchy
--------------------------------------------------------------------------------

-- This table maps each group to all groups that have a superset of the original
-- group's page editing permissions.
hierarchy = {
	sysop = {},
	reviewer = {'sysop'},
	filemover = {'sysop'},
	templateeditor = {'sysop'},
	extendedconfirmed = {'sysop'},
	autoconfirmed = {'reviewer', 'filemover', 'templateeditor', 'extendedconfirmed'},
	user = {'autoconfirmed'},
	['*'] = {'user'}
},

--------------------------------------------------------------------------------
-- Wrapper templates and their default arguments
--------------------------------------------------------------------------------

-- This table contains wrapper templates used with the module, and their
-- default arguments. Templates specified in this table should contain the
-- following invocation, and no other template content:
--
-- {{#invoke:Protection banner|main}}
--
-- If other content is desired, it can be added between
-- &lt;noinclude&gt;...&lt;/noinclude&gt; tags.
--
-- When a user calls one of these wrapper templates, they will use the
-- default arguments automatically. However, users can override any of the
-- arguments.
wrappers = {
	['Template:Pp']                         = {},
	['Template:Pp-30-500']                  = {'ecp'},
	['Template:Pp-blp']                     = {'blp'},
	-- we don't need Template:Pp-create
	['Template:Pp-dispute']                 = {'dispute'},
	['Template:Pp-main-page']               = {'mainpage'},
	['Template:Pp-move']                    = {action = 'move'},
	['Template:Pp-move-dispute']            = {'dispute', action = 'move'},
	-- we don't need Template:Pp-move-indef
	['Template:Pp-move-vandalism']          = {'vandalism', action = 'move'},
	['Template:Pp-office']                  = {'office'},
	['Template:Pp-office-dmca']             = {'dmca'},
	['Template:Pp-pc1']                     = {action = 'autoreview', small = true},
	['Template:Pp-pc2']                     = {action = 'autoreview', small = true},
	['Template:Pp-reset']                   = {'reset'},
	['Template:Pp-semi-indef']              = {small = true},
	['Template:Pp-sock']                    = {'sock'},
	['Template:Pp-template']                = {'template', small = true},
	['Template:Pp-upload']                  = {action = 'upload'},
	['Template:Pp-usertalk']                = {'usertalk'},
	['Template:Pp-vandalism']               = {'vandalism'},
},

--------------------------------------------------------------------------------
-- 
--                                 MESSAGES
-- 
--------------------------------------------------------------------------------

msg = {

--------------------------------------------------------------------------------
-- Intro blurb and intro fragment
--------------------------------------------------------------------------------

-- These messages specify what is produced by the ${INTROBLURB} and
-- ${INTROFRAGMENT} parameters. If the protection is temporary they use the
-- intro-blurb-expiry or intro-fragment-expiry, and if not they use
-- intro-blurb-noexpiry or intro-fragment-noexpiry.
-- It is possible to use banner parameters in these messages.
['intro-blurb-expiry'] = '${PROTECTIONBLURB} until ${EXPIRY}.',
['intro-blurb-noexpiry'] = '${PROTECTIONBLURB}.',
['intro-fragment-expiry'] = '${PROTECTIONBLURB} until ${EXPIRY},',
['intro-fragment-noexpiry'] = '${PROTECTIONBLURB}',

--------------------------------------------------------------------------------
-- Tooltip blurb
--------------------------------------------------------------------------------

-- These messages specify what is produced by the ${TOOLTIPBLURB} parameter.
-- If the protection is temporary the tooltip-blurb-expiry message is used, and
-- if not the tooltip-blurb-noexpiry message is used.
-- It is possible to use banner parameters in these messages.
['tooltip-blurb-expiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} until ${EXPIRY}.',
['tooltip-blurb-noexpiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL}.',
['tooltip-fragment-expiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} until ${EXPIRY},',
['tooltip-fragment-noexpiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL}',

--------------------------------------------------------------------------------
-- Special explanation blurb
--------------------------------------------------------------------------------

-- An explanation blurb for pages that cannot be unprotected, e.g. for pages
-- in the MediaWiki namespace.
-- It is possible to use banner parameters in this message.
['explanation-blurb-nounprotect'] = 'See the [[Wikipedia:Protection policy|'
	.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
	.. ' Please discuss any changes on the ${TALKPAGE}; you'
	.. ' may ${EDITREQUEST} to ask an'
	.. ' [[Wikipedia:Administrators|administrator]] to make an edit if it'
	.. ' is [[Help:Minor edit#When to mark an edit as a minor edit'
	.. '|uncontroversial]] or supported by [[Wikipedia:Consensus'
	.. '|consensus]].',

--------------------------------------------------------------------------------
-- Protection log display values
--------------------------------------------------------------------------------

-- These messages determine the display values for the protection log link
-- or the pending changes log link produced by the ${PROTECTIONLOG} parameter.
-- It is possible to use banner parameters in these messages.
['protection-log-display'] = 'protection log',
['pc-log-display'] = 'pending changes log',

--------------------------------------------------------------------------------
-- Current version display values
--------------------------------------------------------------------------------

-- These messages determine the display values for the page history link
-- or the move log link produced by the ${CURRENTVERSION} parameter.
-- It is possible to use banner parameters in these messages.
['current-version-move-display'] = 'current title',
['current-version-edit-display'] = 'current version',

--------------------------------------------------------------------------------
-- Talk page
--------------------------------------------------------------------------------

-- This message determines the display value of the talk page link produced
-- with the ${TALKPAGE} parameter.
-- It is possible to use banner parameters in this message.
['talk-page-link-display'] = 'talk page',

--------------------------------------------------------------------------------
-- Edit requests
--------------------------------------------------------------------------------

-- This message determines the display value of the edit request link produced
-- with the ${EDITREQUEST} parameter.
-- It is possible to use banner parameters in this message.
['edit-request-display'] = 'submit an edit request',

--------------------------------------------------------------------------------
-- Expiry date format
--------------------------------------------------------------------------------

-- This is the format for the blurb expiry date. It should be valid input for
-- the first parameter of the #time parser function.
['expiry-date-format'] = 'F j, Y',

--------------------------------------------------------------------------------
-- Tracking categories
--------------------------------------------------------------------------------

-- These messages determine which tracking categories the module outputs.
['tracking-category-incorrect'] = 'Wikipedia pages with incorrect protection templates',
['tracking-category-template'] = 'Wikipedia template-protected pages other than templates and modules',

--------------------------------------------------------------------------------
-- Images
--------------------------------------------------------------------------------

-- These are images that are not defined by their protection action and protection level.
['image-filename-indef'] = 'Padlock.svg',
['image-filename-default'] = 'Transparent.gif',

--------------------------------------------------------------------------------
-- End messages
--------------------------------------------------------------------------------
}

--------------------------------------------------------------------------------
-- End configuration
--------------------------------------------------------------------------------
}</text>
      <sha1>g3n16lqu6gf1ld30xbaqxxwq3e4n8ka</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Redirect</title>
    <ns>828</ns>
    <id>38849415</id>
    <revision>
      <id>773537701</id>
      <parentid>673312597</parentid>
      <timestamp>2017-04-03T01:02:46Z</timestamp>
      <contributor>
        <username>Nyttend</username>
        <id>1960810</id>
      </contributor>
      <comment>Copying change per request of AlexTheWhovian.  Please revert me if this causes some sort of error</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3689">-- This module provides functions for getting the target of a redirect page.

local p = {}

-- Gets a mw.title object, using pcall to avoid generating script errors if we
-- are over the expensive function count limit (among other possible causes).
local function getTitle(...)
	local success, titleObj = pcall(mw.title.new, ...)
	if success then
		return titleObj
	else
		return nil
	end
end

-- Gets the name of a page that a redirect leads to, or nil if it isn't a
-- redirect.
function p.getTargetFromText(text)
	return string.match(
		text,
		&quot;^%s*#[Rr][Ee][Dd][Ii][Rr][Ee][Cc][Tt]%s*:?%s*%[%[([^%[%]|]-)%]%]&quot;
	) or string.match(
		text,
		&quot;^%s*#[Rr][Ee][Dd][Ii][Rr][Ee][Cc][Tt]%s*:?%s*%[%[([^%[%]|]-)|[^%[%]]-%]%]&quot;
	)
end

-- Gets the target of a redirect. If the page specified is not a redirect,
-- returns nil.
function p.getTarget(page, fulltext)
	-- Get the title object. Both page names and title objects are allowed
	-- as input.
	local titleObj
	if type(page) == 'string' or type(page) == 'number' then
		titleObj = getTitle(page)
	elseif type(page) == 'table' and type(page.getContent) == 'function' then
		titleObj = page
	else
		error(string.format(
			&quot;bad argument #1 to 'getTarget'&quot;
				.. &quot; (string, number, or title object expected, got %s)&quot;,
			type(page)
		), 2)
	end
	if not titleObj or not titleObj.isRedirect then
		return nil
	end
	
	-- Find the target by using string matching on the page content.
	local target = p.getTargetFromText(titleObj:getContent() or &quot;&quot;)
	if target then
		local targetTitle = getTitle(target)
		if targetTitle then
			if fulltext then
				return targetTitle.fullText
			else
				return targetTitle.prefixedText
			end
		else
			return nil
		end
	else
		-- The page is a redirect, but matching failed. This indicates a bug in
		-- the redirect matching pattern, so throw an error.
		error(string.format(
			'could not parse redirect on page &quot;%s&quot;',
			fulltext and titleObj.fullText or titleObj.prefixedText
		))
	end
end

--[[
-- Given a single page name determines what page it redirects to and returns the
-- target page name, or the passed page name when not a redirect. The passed
-- page name can be given as plain text or as a page link.
-- 
-- Returns page name as plain text, or when the bracket parameter is given, as a
-- page link. Returns an error message when page does not exist or the redirect
-- target cannot be determined for some reason.
--]]
function p.luaMain(rname, bracket, fulltext)
	if type(rname) ~= &quot;string&quot; or not rname:find(&quot;%S&quot;) then
		return nil
	end
	bracket = bracket and &quot;[[%s]]&quot; or &quot;%s&quot;
	rname = rname:match(&quot;%[%[(.+)%]%]&quot;) or rname
	local target = p.getTarget(rname, fulltext)
	local ret = target or rname
	ret = getTitle(ret)
	if ret then
		if fulltext then
			ret = ret.fullText
		else
			ret = ret.prefixedText
		end
		return bracket:format(ret)
	else
		return nil
	end
end

-- Provides access to the luaMain function from wikitext.
function p.main(frame)
	local args = require('Module:Arguments').getArgs(frame, {frameOnly = true})
	return p.luaMain(args[1], args.bracket, args.fulltext) or ''
end

-- Returns true if the specified page is a redirect, and false otherwise.
function p.luaIsRedirect(page)
	local titleObj = getTitle(page)
	if not titleObj then
		return false
	end
	if titleObj.isRedirect then
		return true
	else
		return false
	end
end

-- Provides access to the luaIsRedirect function from wikitext, returning 'yes'
-- if the specified page is a redirect, and the blank string otherwise.
function p.isRedirect(frame)
	local args = require('Module:Arguments').getArgs(frame, {frameOnly = true})
	if p.luaIsRedirect(args[1]) then
		return 'yes'
	else
		return ''
	end
end

return p</text>
      <sha1>ada8ml76e2w9edlkodgxumwd5ucz0bf</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Redirect-multi</title>
    <ns>828</ns>
    <id>50525063</id>
    <revision>
      <id>728234376</id>
      <parentid>726661153</parentid>
      <timestamp>2016-07-04T04:20:43Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Tweaked defaulting to better match the templates it's replacing</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1140">local mRedirectHatnote = require('Module:Redirect hatnote')
local mArguments = require('Module:Arguments')
local mHatnote = require('Module:Hatnote')
local p = {}

function p.redirectMulti (frame)
	local args = mArguments.getArgs(frame)
	--Get maxArg manually because getArgs and table.maxn aren't friends
	local maxArg = 0
	for k, v in pairs(args) do
		if type(k) == 'number' and k &gt; maxArg then maxArg = k end
	end
	--Get number of redirects then remove it from the args table
	local numRedirects = tonumber(args[1]) or 1
	--Manual downshift of arguments; not using table.remove because getArgs is
	--gnarly and it's not a sequence anyway
	for i = 2, maxArg + 1 do args[i - 1] = args[i] end
	--if no arguments past redirects exist, add in a default set
	if maxArg - 2 &lt;= numRedirects then
		for i = 1, numRedirects do
			args[numRedirects + (2 * i)] = args[i] and mHatnote.disambiguate(args[i])
			--this does add in an &quot;and&quot; after the last item, but it's ignored
			args[numRedirects + (2 * i) + 1] = 'and'
		end
	end
	local options = {selfref = args.selfref}
	return mRedirectHatnote._redirect(args, numRedirects, options)
end

return p</text>
      <sha1>scgugk98siz6zwiz9wdklf236c2qagl</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Redirect hatnote</title>
    <ns>828</ns>
    <id>42680232</id>
    <revision>
      <id>726676462</id>
      <parentid>719088191</parentid>
      <timestamp>2016-06-23T17:28:48Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Rephrased error message to make more sense for version with multiple redirects</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3887">--[[
-- This module produces a &quot;redirect&quot; hatnote. It looks like this:
-- '&quot;X&quot; redirects here. For other uses, see Y.'
-- It implements the {{redirect}} template.
--]]

local mHatnote = require('Module:Hatnote')
local mHatList = require('Module:Hatnote list')
local mArguments --lazily initialize
local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local checkTypeMulti = libraryUtil.checkTypeMulti

local p = {}

local function getTitle(...)
	local success, titleObj = pcall(mw.title.new, ...)
	if success then
		return titleObj
	else
		return nil
	end
end

function p.redirect(frame)
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {parentOnly=true})
	--Get number of redirects
	local numRedirects = tonumber(frame.args[1]) or 1
	-- Create the options table.
	local options = {}
	options.selfref = args.selfref
	return p._redirect(args, numRedirects, options)
end

function p._redirect(args, numRedirects, options, currentTitle, redirectTitle, targetTitle)
	-- Validate the input. Don't bother checking currentTitle, redirectTitle or
	-- targetTitle, as they are only used in testing.
	checkType('_redirect', 1, args, 'table')
	checkType('_redirect', 2, numRedirects, 'number', true)
	numRedirects = numRedirects or 1
	checkType('_redirect', 3, options, 'table', true)
	options = options or {}
	currentTitle = currentTitle or mw.title.getCurrentTitle()
	-- Get the table of redirects
	local redirect = {}
	for i = 1, numRedirects do
		-- Return an error if a redirect parameter is missing.
		if not args[i] then
			return mHatnote.makeWikitextError(
				'missing redirect parameter',
				'Template:Redirect#Errors',
				args.category
			)
		end
		redirect[i] = args[i]
	end
	-- Generate the text.
	local formattedRedirect = {}
	for k,v in pairs(redirect) do
		formattedRedirect[k] = '&quot;' .. v .. '&quot;'
	end
	local text = {
		mHatList.andList(formattedRedirect) .. ' ' .. (#redirect == 1 and 'redirects' or 'redirect') .. ' here.',
		mHatList._forSee(args, #redirect + 1, {title = redirect[1]})
	}
	text = table.concat(text, ' ')
	-- Functionality for adding categories	
	local categoryTable = {}
	function addCategory(cat)
		if cat and cat ~= '' then
			-- Add by index to avoid duplicates
			categoryTable[string.format('[[Category:%s]]', cat)] = true
		end
	end
	--Generate tracking categories
	local mhOptions = {}
	for k,v in pairs(redirect) do
		-- We don't need a tracking category if the template invocation has been
		-- copied directly from the docs, or if we aren't in main- or category-space.
		if not v:find('^REDIRECT%d*$') and v ~= 'TERM' -- 
			and currentTitle.namespace == 0 or currentTitle.namespace == 14
		then
			redirectTitle = redirectTitle or getTitle(v)
			if not redirectTitle or not redirectTitle.exists then
				addCategory('Missing redirects')
			elseif not redirectTitle.isRedirect then
				addCategory('Articles with redirect hatnotes needing review')
			else
				local mRedirect = require('Module:Redirect')
				local target = mRedirect.getTarget(redirectTitle)
				targetTitle = targetTitle or target and getTitle(target)
				if targetTitle and targetTitle ~= currentTitle then
					addCategory('Articles with redirect hatnotes needing review')
				end
			end
		end

		-- Generate the options to pass to [[Module:Hatnote]].
		if currentTitle.namespace == 0 and not mhOptions.selfref
			and redirectTitle and redirectTitle.namespace ~= 0
		then
			-- We are on a mainspace page, and the hatnote starts with something
			-- like &quot;Wikipedia:Foo redirects here&quot;, so automatically label it as
			-- a self-reference.
			mhOptions.selfref = true
		else
			mhOptions.selfref = options.selfref
		end
	end
	--concatenate all the categories
	local category = ''
	for k,v in pairs(categoryTable) do
		category = category .. k
	end

	return mHatnote._hatnote(text, mhOptions) .. category
end
 
return p</text>
      <sha1>9hm3qnb9a1vg7dj9xxe1p46p0tk3bco</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Separated entries</title>
    <ns>828</ns>
    <id>46440383</id>
    <revision>
      <id>664185837</id>
      <parentid>664153602</parentid>
      <timestamp>2015-05-26T22:20:50Z</timestamp>
      <contributor>
        <username>Izkala</username>
        <id>23051379</id>
      </contributor>
      <comment>rv, that broke something</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1165">-- This module takes positional parameters as input and concatenates them with
-- an optional separator. The final separator (the &quot;conjunction&quot;) can be
-- specified independently, enabling natural-language lists like
-- &quot;foo, bar, baz and qux&quot;.

local compressSparseArray = require('Module:TableTools').compressSparseArray
local p = {}

function p._main(args)
	local separator = args.separator
		-- Decode (convert to Unicode) HTML escape sequences, such as &quot;&amp;#32;&quot; for space.
		and mw.text.decode(args.separator) or ''
	local conjunction = args.conjunction and mw.text.decode(args.conjunction) or separator
	-- Discard named parameters.
	local values = compressSparseArray(args)
	return mw.text.listToText(values, separator, conjunction)
end

local function makeInvokeFunction(separator, conjunction)
	return function (frame)
		local args = require('Module:Arguments').getArgs(frame)
		args.separator = separator or args.separator
		args.conjunction = conjunction or args.conjunction
		return p._main(args)
	end
end

p.main = makeInvokeFunction()
p.br = makeInvokeFunction('&lt;br /&gt;')
p.comma = makeInvokeFunction(mw.message.new('comma-separator'):plain())

return p</text>
      <sha1>llc3d3c78nhgnxk4nekr2o428a8k5qt</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Sidebar</title>
    <ns>828</ns>
    <id>38866323</id>
    <revision>
      <id>783543324</id>
      <parentid>783542180</parentid>
      <timestamp>2017-06-03T00:20:26Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <comment>self rv per trouble reports</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7699">--
-- This module implements {{Sidebar}}
--
require('Module:No globals')

local p = {}

local getArgs = require('Module:Arguments').getArgs
local navbar = require('Module:Navbar')._navbar

local function trimAndAddAutomaticNewline(s)
	-- For compatibility with the original {{sidebar with collapsible lists}}
	-- implementation, which passed some parameters through {{#if}} to trim
	-- their whitespace. This also triggered the automatic newline behavior.
	-- ([[meta:Help:Newlines and spaces#Automatic newline]])
	s = mw.ustring.gsub(s, &quot;^%s*(.-)%s*$&quot;, &quot;%1&quot;)
	if mw.ustring.find(s, '^[#*:;]') or mw.ustring.find(s, '^{|') then
		return '\n' .. s
	else
		return s
	end
end

function p.sidebar(frame, args)
	if not args then
		args = getArgs(frame)
	end
	local root = mw.html.create()
	local child = args.child and mw.text.trim(args.child) == 'yes'

	if not child then
		root = root
			:tag('table')
			:addClass('vertical-navbox')
			:addClass(args.wraplinks ~= 'true' and 'nowraplinks' or nil)
			:addClass(args.bodyclass or args.class)
			:css('float', args.float or 'right')
			:css('clear', (args.float == 'none' and 'both') or args.float or 'right')
			:css('width', args.width or '22.0em')
			:css('margin', args.float == 'left' and '0 1.0em 1.0em 0' or '0 0 1.0em 1.0em')
			:css('background', '#f9f9f9')
			:css('border', '1px solid #aaa')
			:css('padding', '0.2em')
			:css('border-spacing', '0.4em 0')
			:css('text-align', 'center')
			:css('line-height', '1.4em')
			:css('font-size', '88%')
			:cssText(args.bodystyle or args.style)

		if args.outertitle then
			root
				:tag('caption')
					:addClass(args.outertitleclass)
					:css('padding-bottom', '0.2em')
					:css('font-size', '125%')
					:css('line-height', '1.2em')
					:css('font-weight', 'bold')
					:cssText(args.outertitlestyle)
					:wikitext(args.outertitle)
		end

		if args.topimage then
			local imageCell = root:tag('tr'):tag('td')

			imageCell
				:addClass(args.topimageclass)
				:css('padding', '0.4em 0')
				:cssText(args.topimagestyle)
				:wikitext(args.topimage)

			if args.topcaption then
				imageCell
					:tag('div')
						:css('padding-top', '0.2em')
						:css('line-height', '1.2em')
						:cssText(args.topcaptionstyle)
						:wikitext(args.topcaption)
			end
		end

		if args.pretitle then
			root
				:tag('tr')
					:tag('td')
						:addClass(args.pretitleclass)
						:cssText(args.basestyle)
						:css('padding-top', args.topimage and '0.2em' or '0.4em')
						:css('line-height', '1.2em')
						:cssText(args.pretitlestyle)
						:wikitext(args.pretitle)
		end

	end

	if args.title then
		if child then
			root
				:wikitext(args.title)
				:wikitext('&lt;/th&gt;&lt;/tr&gt;') -- @todo replace this with unclosed again once mw.html gets it
		else
			root
				:tag('tr')
					:tag('th')
						:addClass(args.titleclass)
						:cssText(args.basestyle)
						:css('padding', '0.2em 0.4em 0.2em')
						:css('padding-top', args.pretitle and 0)
						:css('font-size', '145%')
						:css('line-height', '1.2em')
						:cssText(args.titlestyle)
						:wikitext(args.title)
		end
	end

	if args.image then
		local imageCell = root:tag('tr'):tag('td')

		imageCell
			:addClass(args.imageclass)
			:css('padding', '0.2em 0 0.4em')
			:cssText(args.imagestyle)
			:wikitext(args.image)

		if args.caption then
			imageCell
				:tag('div')
					:css('padding-top', '0.2em')
					:css('line-height', '1.2em')
					:cssText(args.captionstyle)
					:wikitext(args.caption)
		end
	end

	if args.above then
		root
			:tag('tr')
				:tag('td')
					:addClass(args.aboveclass)
					:css('padding', '0.3em 0.4em 0.3em')
					:css('font-weight', 'bold')
					:cssText(args.abovestyle)
					:newline() -- newline required for bullet-points to work
					:wikitext(args.above)
	end

	local rowNums = {}
	for k, v in pairs(args) do
		k = '' .. k
		local num = k:match('^heading(%d+)$') or k:match('^content(%d+)$')
		if num then table.insert(rowNums, tonumber(num)) end
	end
	table.sort(rowNums)
	-- remove duplicates from the list (e.g. 3 will be duplicated if both heading3 and content3 are specified)
	for i = #rowNums, 1, -1 do
		if rowNums[i] == rowNums[i - 1] then
			table.remove(rowNums, i)
		end
	end

	for i, num in ipairs(rowNums) do
		local heading = args['heading' .. num]
		if heading then
			root
				:tag('tr')
					:tag('th')
						:addClass(args.headingclass)
						:css('padding', '0.1em')
						:cssText(args.basestyle)
						:cssText(args.headingstyle)
						:cssText(args['heading' .. num .. 'style'])
						:newline()
						:wikitext(heading)
		end

		local content = args['content' .. num]
		if content then
			root
				:tag('tr')
					:tag('td')
						:addClass(args.contentclass)
						:css('padding', '0 0.1em 0.4em')
						:cssText(args.contentstyle)
						:cssText(args['content' .. num .. 'style'])
						:newline()
						:wikitext(content)
						:done()
					:newline() -- Without a linebreak after the &lt;/td&gt;, a nested list like &quot;* {{hlist| ...}}&quot; doesn't parse correctly.
		end
	end

	if args.below then
		root
			:tag('tr')
				:tag('td')
					:addClass(args.belowclass)
					:css('padding', '0.3em 0.4em 0.3em')
					:css('font-weight', 'bold')
					:cssText(args.belowstyle)
					:newline()
					:wikitext(args.below)
	end

	if not child then
		local navbarArg = args.navbar or args.tnavbar
		if navbarArg ~= 'none' and navbarArg ~= 'off' and (args.name or frame:getParent():getTitle():gsub('/sandbox$', '') ~= 'Template:Sidebar') then
			root
				:tag('tr')
					:tag('td')
						:css('text-align', 'right')
						:css('font-size', '115%')
						:cssText(args.navbarstyle or args.tnavbarstyle)
						:wikitext(navbar{
							args.name,
							mini = 1,
							fontstyle = args.navbarfontstyle or args.tnavbarfontstyle
						})
		end
	end

	return tostring(root)
end

function p.collapsible(frame)
	local args = getArgs(frame)

	args.abovestyle = 'border-top: 1px solid #aaa; border-bottom: 1px solid #aaa;' .. (args.abovestyle or '')
	args.belowstyle = 'border-top: 1px solid #aaa; border-bottom: 1px solid #aaa;' .. (args.belowstyle or '')
	args.navbarstyle = 'padding-top: 0.6em;' .. (args.navbarstyle or args.tnavbarstyle or '')
	if not args.name and frame:getParent():getTitle():gsub('/sandbox$', '') == 'Template:Sidebar with collapsible lists' then
		args.navbar = 'none'
	end

	local contentArgs = {}

	for k, v in pairs(args) do
		local num = string.match(k, '^list(%d+)$')
		if num then
			local expand = args.expanded and (args.expanded == 'all' or args.expanded == args['list' .. num .. 'name'])

			local row = mw.html.create('div')
			row
				:addClass('NavFrame')
				:addClass((not expand) and 'collapsed' or nil)
				:css('border', 'none')
				:css('padding', 0)
				:cssText(args.listframestyle)
				:cssText(args['list' .. num .. 'framestyle'])
				:tag('div')
					:addClass('NavHead')
					:addClass(args.listtitleclass)
					:css('font-size', '105%')
					:css('background', 'transparent')
					:css('text-align', 'left')
					:cssText(args.basestyle)
					:cssText(args.listtitlestyle)
					:cssText(args['list' .. num .. 'titlestyle'])
					:wikitext(trimAndAddAutomaticNewline(args['list' .. num .. 'title'] or 'List'))
					:done()
				:tag('div')
					:addClass('NavContent')
					:addClass(args.listclass)
					:addClass(args['list' .. num .. 'class'])
					:css('font-size', '105%')
					:css('padding', '0.2em 0 0.4em')
					:css('text-align', 'center')
					:cssText(args.liststyle)
					:cssText(args['list' .. num .. 'style'])
					:wikitext(trimAndAddAutomaticNewline(args['list' .. num]))

			contentArgs['content' .. num] = tostring(row)
		end
	end

	for k, v in pairs(contentArgs) do
		args[k] = v
	end

	return p.sidebar(frame, args)
end

return p</text>
      <sha1>l6zoluu1lnfyh4erg0fldjiuth4dnq1</sha1>
    </revision>
  </page>
  <page>
    <title>Module:String</title>
    <ns>828</ns>
    <id>38569505</id>
    <revision>
      <id>552254999</id>
      <parentid>540627185</parentid>
      <timestamp>2013-04-26T10:52:01Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>Add &quot;rep&quot; function per request by [[User:]] at [[Wikipedia:Lua requests#Template:Loop and Template:Loop15]]. Copied from sandbox.</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="15731">--[[  

This module is intended to provide access to basic string functions.

Most of the functions provided here can be invoked with named parameters, 
unnamed parameters, or a mixture.  If named parameters are used, Mediawiki will 
automatically remove any leading or trailing whitespace from the parameter.  
Depending on the intended use, it may be advantageous to either preserve or
remove such whitespace.

Global options
    ignore_errors: If set to 'true' or 1, any error condition will result in 
        an empty string being returned rather than an error message.  
        
    error_category: If an error occurs, specifies the name of a category to 
        include with the error message.  The default category is  
        [Category:Errors reported by Module String].
        
    no_category: If set to 'true' or 1, no category will be added if an error
        is generated.
        
Unit tests for this module are available at Module:String/tests.
]]

local str = {}

--[[
len

This function returns the length of the target string.

Usage:
{{#invoke:String|len|target_string|}}
OR
{{#invoke:String|len|s=target_string}}

Parameters
    s: The string whose length to report

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the target string.  
]]
function str.len( frame )
    local new_args = str._getParameters( frame.args, {'s'} );
    local s = new_args['s'] or '';
    return mw.ustring.len( s )
end

--[[
sub

This function returns a substring of the target string at specified indices.

Usage:
{{#invoke:String|sub|target_string|start_index|end_index}}
OR
{{#invoke:String|sub|s=target_string|i=start_index|j=end_index}}

Parameters
    s: The string to return a subset of
    i: The fist index of the substring to return, defaults to 1.
    j: The last index of the string to return, defaults to the last character.
    
The first character of the string is assigned an index of 1.  If either i or j
is a negative value, it is interpreted the same as selecting a character by 
counting from the end of the string.  Hence, a value of -1 is the same as 
selecting the last character of the string.

If the requested indices are out of range for the given string, an error is 
reported.
]]
function str.sub( frame )
    local new_args = str._getParameters( frame.args, { 's', 'i', 'j' } );
    local s = new_args['s'] or '';
    local i = tonumber( new_args['i'] ) or 1;
    local j = tonumber( new_args['j'] ) or -1;
    
    local len = mw.ustring.len( s );

    -- Convert negatives for range checking
    if i &lt; 0 then
        i = len + i + 1;
    end
    if j &lt; 0 then
        j = len + j + 1;
    end
    
    if i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then
        return str._error( 'String subset index out of range' );
    end
    if j &lt; i then
        return str._error( 'String subset indices out of order' );
    end
    
    return mw.ustring.sub( s, i, j )
end

--[[
This function implements that features of {{str sub old}} and is kept in order
to maintain these older templates.
]]
function str.sublength( frame )
    local i = tonumber( frame.args.i ) or 0
    local len = tonumber( frame.args.len )
    return mw.ustring.sub( frame.args.s, i + 1, len and ( i + len ) )
end

--[[
match

This function returns a substring from the source string that matches a 
specified pattern.

Usage:
{{#invoke:String|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}
OR
{{#invoke:String|pos|s=source_string|pattern=pattern_string|start=start_index
    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}

Parameters
    s: The string to search
    pattern: The pattern or string to find within the string
    start: The index within the source string to start the search.  The first
        character of the string has index 1.  Defaults to 1.
    match: In some cases it may be possible to make multiple matches on a single 
        string.  This specifies which match to return, where the first match is 
        match= 1.  If a negative number is specified then a match is returned 
        counting from the last match.  Hence match = -1 is the same as requesting
        the last match.  Defaults to 1.
    plain: A flag indicating that the pattern should be understood as plain
        text.  Defaults to false.
    nomatch: If no match is found, output the &quot;nomatch&quot; value rather than an error.

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from each string.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

If the match_number or start_index are out of range for the string being queried, then
this function generates an error.  An error is also generated if no match is found.
If one adds the parameter ignore_errors=true, then the error will be suppressed and 
an empty string will be returned on any failure.

For information on constructing Lua patterns, a form of [regular expression], see:

* http://www.lua.org/manual/5.1/manual.html#5.4.1
* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns
* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns

]]
function str.match( frame )
    local new_args = str._getParameters( frame.args, {'s', 'pattern', 'start', 'match', 'plain', 'nomatch'} );
    local s = new_args['s'] or '';
    local start = tonumber( new_args['start'] ) or 1;
    local plain_flag = str._getBoolean( new_args['plain'] or false );
    local pattern = new_args['pattern'] or '';
    local match_index = math.floor( tonumber(new_args['match']) or 1 );
    local nomatch = new_args['nomatch'];
    
    if s == '' then
        return str._error( 'Target string is empty' );
    end
    if pattern == '' then
        return str._error( 'Pattern string is empty' );
    end
    if math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len( s ) then
        return str._error( 'Requested start is out of range' );
    end
    if match_index == 0 then
        return str._error( 'Match index is out of range' );
    end
    if plain_flag then
        pattern = str._escapePattern( pattern );
    end
    
    local result
    if match_index == 1 then
        -- Find first match is simple case
        result = mw.ustring.match( s, pattern, start )
    else
        if start &gt; 1 then
            s = mw.ustring.sub( s, start );
        end
        
        local iterator = mw.ustring.gmatch(s, pattern);
        if match_index &gt; 0 then
            -- Forward search
            for w in iterator do
                match_index = match_index - 1;
                if match_index == 0 then
                    result = w;
                    break;
                end
            end    
        else
            -- Reverse search
            local result_table = {};
            local count = 1;
            for w in iterator do
                result_table[count] = w;
                count = count + 1;
            end
            
            result = result_table[ count + match_index ];            
        end
    end        
    
    if result == nil then
        if nomatch == nil then
            return str._error( 'Match not found' );
        else
            return nomatch;
        end
    else
        return result;
    end
end

--[[
pos

This function returns a single character from the target string at position pos.

Usage:
{{#invoke:String|pos|target_string|index_value}}
OR
{{#invoke:String|pos|target=target_string|pos=index_value}}

Parameters
    target: The string to search
    pos: The index for the character to return

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the target string.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

The first character has an index value of 1.

If one requests a negative value, this function will select a character by counting backwards 
from the end of the string.  In other words pos = -1 is the same as asking for the last character.

A requested value of zero, or a value greater than the length of the string returns an error.
]]
function str.pos( frame )
    local new_args = str._getParameters( frame.args, {'target', 'pos'} );
    local target_str = new_args['target'] or '';
    local pos = tonumber( new_args['pos'] ) or 0;

    if pos == 0 or math.abs(pos) &gt; mw.ustring.len( target_str ) then
        return str._error( 'String index out of range' );
    end    
    
    return mw.ustring.sub( target_str, pos, pos );
end

--[[
str_find

This function duplicates the behavior of {{str_find}}, including all of its quirks.
This is provided in order to support existing templates, but is NOT RECOMMENDED for 
new code and templates.  New code is recommended to use the &quot;find&quot; function instead.

Returns the first index in &quot;source&quot; that is a match to &quot;target&quot;.  Indexing is 1-based,
and the function returns -1 if the &quot;target&quot; string is not present in &quot;source&quot;.

Important Note: If the &quot;target&quot; string is empty / missing, this function returns a
value of &quot;1&quot;, which is generally unexpected behavior, and must be accounted for
separatetly.
]]
function str.str_find( frame )
    local new_args = str._getParameters( frame.args, {'source', 'target'} );
    local source_str = new_args['source'] or '';
    local target_str = new_args['target'] or '';

    if target_str == '' then
        return 1;
    end    
    
    local start = mw.ustring.find( source_str, target_str, 1, true )
    if start == nil then
        start = -1
    end
    
    return start
end

--[[
find

This function allows one to search for a target string or pattern within another
string.

Usage:
{{#invoke:String|find|source_str|target_string|start_index|plain_flag}}
OR
{{#invoke:String|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}

Parameters
    source: The string to search
    target: The string or pattern to find within source
    start: The index within the source string to start the search, defaults to 1
    plain: Boolean flag indicating that target should be understood as plain
        text and not as a Lua style regular expression, defaults to true

If invoked using named parameters, Mediawiki will automatically remove any leading or
trailing whitespace from the parameter.  In some circumstances this is desirable, in 
other cases one may want to preserve the whitespace.

This function returns the first index &gt;= &quot;start&quot; where &quot;target&quot; can be found 
within &quot;source&quot;.  Indices are 1-based.  If &quot;target&quot; is not found, then this 
function returns 0.  If either &quot;source&quot; or &quot;target&quot; are missing / empty, this
function also returns 0.

This function should be safe for UTF-8 strings.
]]
function str.find( frame )
    local new_args = str._getParameters( frame.args, {'source', 'target', 'start', 'plain' } ); 
    local source_str = new_args['source'] or '';
    local pattern = new_args['target'] or '';
    local start_pos = tonumber(new_args['start']) or 1;
    local plain = new_args['plain'] or true;
        
    if source_str == '' or pattern == '' then
        return 0;
    end    
    
    plain = str._getBoolean( plain );

    local start = mw.ustring.find( source_str, pattern, start_pos, plain )
    if start == nil then
        start = 0
    end
    
    return start
end

--[[
replace

This function allows one to replace a target string or pattern within another
string.

Usage:
{{#invoke:String|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}
OR
{{#invoke:String|replace|source=source_string|pattern=pattern_string|replace=replace_string|
   count=replacement_count|plain=plain_flag}}

Parameters
    source: The string to search
    pattern: The string or pattern to find within source
    replace: The replacement text
    count: The number of occurences to replace, defaults to all.
    plain: Boolean flag indicating that pattern should be understood as plain
        text and not as a Lua style regular expression, defaults to true 
]]
function str.replace( frame )
    local new_args = str._getParameters( frame.args, {'source', 'pattern', 'replace', 'count', 'plain' } ); 
    local source_str = new_args['source'] or '';
    local pattern = new_args['pattern'] or '';
    local replace = new_args['replace'] or '';
    local count = tonumber( new_args['count'] );
    local plain = new_args['plain'] or true;
        
    if source_str == '' or pattern == '' then
        return source_str;
    end    
    plain = str._getBoolean( plain );

    if plain then
        pattern = str._escapePattern( pattern );
        replace = mw.ustring.gsub( replace, &quot;%%&quot;, &quot;%%%%&quot; ); --Only need to escape replacement sequences.
    end
    
    local result;

    if count ~= nil then
        result = mw.ustring.gsub( source_str, pattern, replace, count );
    else
        result = mw.ustring.gsub( source_str, pattern, replace );
    end        

    return result;
end

--[[ 
    simple function to pipe string.rep to templates.
]]

function str.rep( frame )
    local repetitions = tonumber( frame.args[2] )
    if not repetitions then 
        return str._error( 'function rep expects a number as second parameter, received &quot;' .. ( frame.args[2] or '' ) .. '&quot;' )
    end
    return string.rep( frame.args[1] or '', repetitions )
end

--[[
Helper function that populates the argument list given that user may need to use a mix of
named and unnamed parameters.  This is relevant because named parameters are not
identical to unnamed parameters due to string trimming, and when dealing with strings
we sometimes want to either preserve or remove that whitespace depending on the application.
]]
function str._getParameters( frame_args, arg_list )
    local new_args = {};
    local index = 1;
    local value;
    
    for i,arg in ipairs( arg_list ) do
        value = frame_args[arg]
        if value == nil then
            value = frame_args[index];
            index = index + 1;
        end
        new_args[arg] = value;
    end
    
    return new_args;
end        

--[[
Helper function to handle error messages.
]]
function str._error( error_str )
    local frame = mw.getCurrentFrame();
    local error_category = frame.args.error_category or 'Errors reported by Module String';
    local ignore_errors = frame.args.ignore_errors or false;
    local no_category = frame.args.no_category or false;
    
    if str._getBoolean(ignore_errors) then
        return '';
    end
    
    local error_str = '&lt;strong class=&quot;error&quot;&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';
    if error_category ~= '' and not str._getBoolean( no_category ) then
        error_str = '[[Category:' .. error_category .. ']]' .. error_str;
    end        
    
    return error_str;
end

--[[
Helper Function to interpret boolean strings
]]
function str._getBoolean( boolean_str )
    local boolean_value;
    
    if type( boolean_str ) == 'string' then
        boolean_str = boolean_str:lower();
        if boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0' 
                or boolean_str == '' then
            boolean_value = false;
        else
            boolean_value = true;
        end    
    elseif type( boolean_str ) == 'boolean' then
        boolean_value = boolean_str;
    else
        error( 'No boolean value found' );
    end    
    return boolean_value
end

--[[
Helper function that escapes all pattern characters so that they will be treated 
as plain text.
]]
function str._escapePattern( pattern_str )
    return mw.ustring.gsub( pattern_str, &quot;([%(%)%.%%%+%-%*%?%[%^%$%]])&quot;, &quot;%%%1&quot; );
end

return str</text>
      <sha1>l0shz7fzxb1bq626nihqwbptk7dfqd5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Subject bar</title>
    <ns>828</ns>
    <id>40791023</id>
    <revision>
      <id>757011060</id>
      <parentid>757008690</parentid>
      <timestamp>2016-12-28T06:16:42Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <minor/>
      <comment>increasing width, decreasing margins to fit long book and portal titles</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7852">local getPortalImage = require('Module:Portal').image

local p = {}

local function getArgNums(prefix, args)
    -- Returns a table containing the numbers of the arguments that exist for the specified prefix. For example, if the
    -- prefix was 'data', and 'data1', 'data2', and 'data5' exist, it would return {1, 2, 5}.
    local nums = {}
    for k, v in pairs(args) do
        local num = tostring(k):match('^' .. prefix .. '([1-9]%d*)$')
        if num then table.insert(nums, tonumber(num)) end
    end
    table.sort(nums)
    return nums
end

local function makeHorizontalRule()
    local row = mw.html.create('tr')
    row
        :tag('td')
            :attr('colspan', '2')
            :tag('hr', {selfClosing = true})
    return tostring(row)
end

local function makeItem(image, text)
    local root = mw.html.create('li')
    root
        :css('float', 'left')
        :css('margin-left', '0.3em')
        :css('height', '3.6em')
        :tag('span')
            :css('display', 'inline-block')
            :css('margin-right', '0.3em')
            :css('width', '30px')
            :css('line-height', '3.6em')
            :css('text-align', 'center')
            :wikitext(image)
            :done()
        :tag('span')
            :css('display', 'inline-block')
            :css('width', '11em')
            :css('vertical-align', 'middle')
            :wikitext(text)
    return tostring(root)
end

local function makeRow(items, heading, subheading, options)
    if #items &lt; 1 then return end
    local swapHeadingSize = type(options) == 'table' and options.swapHeadingSize or false
    local row = mw.html.create('tr')
    row
        :tag('td')
            :css('width', '175px')
            :tag('span')
                :css('font-size', swapHeadingSize and '90%' or '125%')
                :wikitext(heading)
                :done()
            :tag('br', {selfClosing = true})
                :done()
            :tag('span')
                :css('font-size', swapHeadingSize and '125%' or '90%')
                :wikitext(subheading)
    local list = row:tag('td'):css('text-align', 'left'):tag('ul')
    for i, item in ipairs(items) do
        local image = item[1]
        local text = item[2]
        list
            :wikitext(makeItem(image, text))
    end
    return tostring(row)
end

local function makeNumberedRow(prefix, args, heading, subheading, getItemValsFunc, options)
    if args[prefix] then
        args[prefix .. '1'] = args[prefix]
    end
    local argNums = getArgNums(prefix, args)
    local items = {}
    for i, argNum in ipairs(argNums) do
        local image, text = getItemValsFunc(args[prefix .. tostring(argNum)])
        table.insert(items, {image, text})
    end
    return makeRow(items, heading, subheading, options)
end

function p._main(args)
    local rows = {}

    -- Get the book row text.
    local bookHeading = &quot;'''[[Wikipedia:Books|Books]]'''&quot;
    local bookSubheading = 'View or order collections of articles'
    local function getBookItemVals(book)
        local image = '[[File:Office-book.svg|30px|alt=|link=]]'
        local text = mw.ustring.format(&quot;'''''[[Book:%s|%s]]'''''&quot;, book, book)
        return image, text
    end
    local bookRow = makeNumberedRow('book', args, bookHeading, bookSubheading, getBookItemVals)
    table.insert(rows, bookRow)

    -- Get the portal row text
    local portalHeading = &quot;'''[[Portal:Contents/Portals|Portals]]'''&quot;
    local portalSubheading = 'Access related topics'
    local function getPortalItemVals(portal)
        local image = mw.ustring.format('[[File:%s|30x30px]]', getPortalImage{portal})
        local text = mw.ustring.format(&quot;'''''[[Portal:%s|%s portal]]'''''&quot;, portal, portal)
        return image, text
    end
    local portalRow = makeNumberedRow('portal', args, portalHeading, portalSubheading, getPortalItemVals)
    table.insert(rows, portalRow)

    -- Get the sister projects row text.
    local sisters = {
        {arg = 'commons', image = 'Commons-logo.svg', prefix = 'commons', display = 'Media', from = 'Commons'},
        {arg = 'species', image = 'Wikispecies-logo.svg', prefix = 'wikispecies', display = 'Species directories', from = 'Wikispecies'},
        {arg = 'voy', image = 'Wikivoyage-Logo-v3-icon.svg', prefix = 'voy', display = 'Travel guides', from = 'Wikivoyage'},
        {arg = 'n', image = 'Wikinews-logo.svg', prefix = 'wikinews', display = 'News stories', from = 'Wikinews'},
        {arg = 'wikt', image = 'Wiktionary-logo-v2.svg', prefix = 'wiktionary', postfix = 'English', display = 'Definitions', from = 'Wiktionary'},
        {arg = 'b', image = 'Wikibooks-logo.svg', prefix = 'wikibooks', display = 'Textbooks', from = 'Wikibooks'},
        {arg = 'q', image = 'Wikiquote-logo.svg', prefix = 'wikiquote', display = 'Quotations', from = 'Wikiquote'},
        {arg = 's', image = 'Wikisource-logo.svg', prefix = 'wikisource', display = 'Source texts', from = 'Wikisource'},
        {arg = 'v', image = 'Wikiversity-logo.svg', prefix = 'wikiversity', display = 'Learning resources', from = 'Wikiversity'},
        {arg = 'd', image = 'Wikidata-logo.svg', prefix = 'wikidata', display = 'Data', from = 'Wikidata'},
        {arg = 'spoken', image = 'Sound-icon.svg', prefix = 'spoken wikipedia', display = 'Listen to this page', from = 'Spoken Wikipedia'},
    }
    local sisterItems = {}
    for i, t in ipairs(sisters) do
        if args[t.arg] then
            -- Get the image value.
            local image = mw.ustring.format('[[File:%s|30x30px|alt=|link=]]', t.image)
            -- Get the text value.
            local prefix = t.prefix
            local search = args[t.arg .. '-search'] or mw.title.getCurrentTitle().text
            local postfix = t.postfix
            postfix = postfix and ('#' .. postfix) or ''
            local display = t.display
            local from = t.from
            local text = mw.ustring.format(
                '[[%s:Special:Search/%s%s|%s]]&lt;br /&gt;from %s',
                prefix,    search,    postfix, display, from
            )
            if t.arg == 'spoken' then
            	 text = mw.ustring.format('%s on %s&lt;br /&gt;[[File:%s]]',
                				display, from, args[t.arg] 
                )		
            end
            -- Add the values to the items table.
            table.insert(sisterItems, {image, text})
        end
    end
    local sisterHeading = &quot;Find out more on Wikipedia's&quot;
    local sisterSubheading = &quot;'''[[Wikipedia:Wikimedia sister projects|Sister projects]]'''&quot;
    local sisterRow = makeRow(sisterItems, sisterHeading, sisterSubheading, {swapHeadingSize = true})
    table.insert(rows, sisterRow)

    -- Make the table.
    local root = mw.html.create('table')
    root
        :attr('role', 'presentation')
        :addClass('noprint')
        :addClass('navbox')
        :addClass('metadata')
        :addClass('plainlist')
        :css('background-color', '#f9f9f9')
        :css('border', '1px solid #aaa')
        :css('clear', 'both')
        :css('margin-bottom', '0.5em')
        :css('margin-top', '0.5em')
        :wikitext(table.concat(rows, makeHorizontalRule()))

    return tostring(root)
end

function p.main(frame)
    -- If called via #invoke, use the args passed into the invoking template, or the args passed to #invoke if any exist. Otherwise
    -- assume args are being passed directly in from the debug console or from another Lua module.
    local origArgs
    if frame == mw.getCurrentFrame() then
        origArgs = frame:getParent().args
        for k, v in pairs(frame.args) do
            origArgs = frame.args
            break
        end
    else
        origArgs = frame
    end
    -- Remove blank arguments.
    local args = {}
    for k, v in pairs(origArgs) do
        if v ~= '' then
            args[k] = v
        end
    end
    return p._main(args)
end

return p</text>
      <sha1>cn8hmp3hsgy1cr9mztaae3a30jhtn4o</sha1>
    </revision>
  </page>
  <page>
    <title>Module:TableTools</title>
    <ns>828</ns>
    <id>41371028</id>
    <revision>
      <id>610073853</id>
      <parentid>587870113</parentid>
      <timestamp>2014-05-25T14:11:02Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>fix cleanPattern function - some of the character classes were still being magic even when they were inside the set, so escape them all</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="8030">--[[
------------------------------------------------------------------------------------
--                               TableTools                                       --
--                                                                                --
-- This module includes a number of functions for dealing with Lua tables.        --
-- It is a meta-module, meant to be called from other Lua modules, and should     --
-- not be called directly from #invoke.                                           --
------------------------------------------------------------------------------------
--]]

local libraryUtil = require('libraryUtil')

local p = {}

-- Define often-used variables and functions.
local floor = math.floor
local infinity = math.huge
local checkType = libraryUtil.checkType

--[[
------------------------------------------------------------------------------------
-- isPositiveInteger
--
-- This function returns true if the given value is a positive integer, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a given table key is in the array part or the
-- hash part of a table.
------------------------------------------------------------------------------------
--]]
function p.isPositiveInteger(v)
	if type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- isNan
--
-- This function returns true if the given number is a NaN value, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a value can be a valid table key. Lua will
-- generate an error if a NaN is used as a table key.
------------------------------------------------------------------------------------
--]]
function p.isNan(v)
	if type(v) == 'number' and tostring(v) == '-nan' then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- shallowClone
--
-- This returns a clone of a table. The value returned is a new table, but all
-- subtables and functions are shared. Metamethods are respected, but the returned
-- table will have no metatable of its own.
------------------------------------------------------------------------------------
--]]
function p.shallowClone(t)
	local ret = {}
	for k, v in pairs(t) do
		ret[k] = v
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- removeDuplicates
--
-- This removes duplicate values from an array. Non-positive-integer keys are
-- ignored. The earliest value is kept, and all subsequent duplicate values are
-- removed, but otherwise the array order is unchanged.
------------------------------------------------------------------------------------
--]]
function p.removeDuplicates(t)
	checkType('removeDuplicates', 1, t, 'table')
	local isNan = p.isNan
	local ret, exists = {}, {}
	for i, v in ipairs(t) do
		if isNan(v) then
			-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.
			ret[#ret + 1] = v
		else
			if not exists[v] then
				ret[#ret + 1] = v
				exists[v] = true
			end
		end	
	end
	return ret
end			

--[[
------------------------------------------------------------------------------------
-- numKeys
--
-- This takes a table and returns an array containing the numbers of any numerical
-- keys that have non-nil values, sorted in numerical order.
------------------------------------------------------------------------------------
--]]
function p.numKeys(t)
	checkType('numKeys', 1, t, 'table')
	local isPositiveInteger = p.isPositiveInteger
	local nums = {}
	for k, v in pairs(t) do
		if isPositiveInteger(k) then
			nums[#nums + 1] = k
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- affixNums
--
-- This takes a table and returns an array containing the numbers of keys with the
-- specified prefix and suffix. For example, for the table
-- {a1 = 'foo', a3 = 'bar', a6 = 'baz'} and the prefix &quot;a&quot;, affixNums will
-- return {1, 3, 6}.
------------------------------------------------------------------------------------
--]]
function p.affixNums(t, prefix, suffix)
	checkType('affixNums', 1, t, 'table')
	checkType('affixNums', 2, prefix, 'string', true)
	checkType('affixNums', 3, suffix, 'string', true)

	local function cleanPattern(s)
		-- Cleans a pattern so that the magic characters ()%.[]*+-?^$ are interpreted literally.
		s = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')
		return s
	end

	prefix = prefix or ''
	suffix = suffix or ''
	prefix = cleanPattern(prefix)
	suffix = cleanPattern(suffix)
	local pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'

	local nums = {}
	for k, v in pairs(t) do
		if type(k) == 'string' then			
			local num = mw.ustring.match(k, pattern)
			if num then
				nums[#nums + 1] = tonumber(num)
			end
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- numData
--
-- Given a table with keys like (&quot;foo1&quot;, &quot;bar1&quot;, &quot;foo2&quot;, &quot;baz2&quot;), returns a table
-- of subtables in the format 
-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }
-- Keys that don't end with an integer are stored in a subtable named &quot;other&quot;.
-- The compress option compresses the table so that it can be iterated over with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.numData(t, compress)
	checkType('numData', 1, t, 'table')
	checkType('numData', 2, compress, 'boolean', true)
	local ret = {}
	for k, v in pairs(t) do
		local prefix, num = mw.ustring.match(tostring(k), '^([^0-9]*)([1-9][0-9]*)$')
		if num then
			num = tonumber(num)
			local subtable = ret[num] or {}
			if prefix == '' then
				-- Positional parameters match the blank string; put them at the start of the subtable instead.
				prefix = 1
			end
			subtable[prefix] = v
			ret[num] = subtable
		else
			local subtable = ret.other or {}
			subtable[k] = v
			ret.other = subtable
		end
	end
	if compress then
		local other = ret.other
		ret = p.compressSparseArray(ret)
		ret.other = other
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- compressSparseArray
--
-- This takes an array with one or more nil values, and removes the nil values
-- while preserving the order, so that the array can be safely traversed with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.compressSparseArray(t)
	checkType('compressSparseArray', 1, t, 'table')
	local ret = {}
	local nums = p.numKeys(t)
	for _, num in ipairs(nums) do
		ret[#ret + 1] = t[num]
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- sparseIpairs
--
-- This is an iterator for sparse arrays. It can be used like ipairs, but can
-- handle nil values.
------------------------------------------------------------------------------------
--]]
function p.sparseIpairs(t)
	checkType('sparseIpairs', 1, t, 'table')
	local nums = p.numKeys(t)
	local i = 0
	local lim = #nums
	return function ()
		i = i + 1
		if i &lt;= lim then
			local key = nums[i]
			return key, t[key]
		else
			return nil, nil
		end
	end
end

--[[
------------------------------------------------------------------------------------
-- size
--
-- This returns the size of a key/value pair table. It will also work on arrays,
-- but for arrays it is more efficient to use the # operator.
------------------------------------------------------------------------------------
--]]
function p.size(t)
	checkType('size', 1, t, 'table')
	local i = 0
	for k in pairs(t) do
		i = i + 1
	end
	return i
end

return p</text>
      <sha1>k1omc17qij757n8hd68yihcqxo4biqi</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Unsubst</title>
    <ns>828</ns>
    <id>40945493</id>
    <revision>
      <id>784254967</id>
      <parentid>784251604</parentid>
      <timestamp>2017-06-07T09:01:50Z</timestamp>
      <contributor>
        <username>Jc86035</username>
        <id>17245768</id>
      </contributor>
      <minor/>
      <comment>fix whitespace removal; remove empty parameters after handling aliases and prevent removal of two or fewer consecutive empty parameters in a sequence</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3688">local checkType = require('libraryUtil').checkType

local p = {}

local BODY_PARAM = '$B'

local specialParams = {
	['$params'] = 'parameter list',
	['$aliases'] = 'parameter aliases',
	['$flags'] = 'flags',
	['$B'] = 'template content'
}

function p.main(frame, body)
	-- If we are substing, this function returns a template invocation, and if
	-- not, it returns the template body. The template body can be specified in
	-- the body parameter, or in the template parameter defined in the
	-- BODY_PARAM variable. This function can be called from Lua or from
	-- #invoke.

	-- Return the template body if we aren't substing.
	if not mw.isSubsting() then
		if body ~= nil then
			return body
		elseif frame.args[BODY_PARAM] ~= nil then
			return frame.args[BODY_PARAM]
		else
			error(string.format(
				&quot;no template content specified (use parameter '%s' from #invoke)&quot;,
				BODY_PARAM
			), 2)
		end
	end

	-- Sanity check for the frame object.
	if type(frame) ~= 'table'
		or type(frame.getParent) ~= 'function'
		or not frame:getParent()
	then
		error(
			&quot;argument #1 to 'main' must be a frame object with a parent &quot; ..
			&quot;frame available&quot;,
			2
		)
	end

	-- Find the invocation name.
	local mTemplateInvocation = require('Module:Template invocation')
	local name = mTemplateInvocation.name(frame:getParent():getTitle())

	-- Combine passed args with passed defaults
	local args = {}
	if string.find( ','..(frame.args['$flags'] or '')..',', ',%s*override%s*,' ) then
		for k, v in pairs( frame:getParent().args ) do
			args[k] = v
		end
		for k, v in pairs( frame.args ) do
			if not specialParams[k] then
				if v == '__DATE__' then
					v = mw.getContentLanguage():formatDate( 'F Y' )
				end
				args[k] = v
			end
		end
	else
		for k, v in pairs( frame.args ) do
			if not specialParams[k] then
				if v == '__DATE__' then
					v = mw.getContentLanguage():formatDate( 'F Y' )
				end
				args[k] = v
			end
		end
		for k, v in pairs( frame:getParent().args ) do
			args[k] = v
		end
	end

	-- Trim parameters, if not specified otherwise
	if not string.find( ','..(frame.args['$flags'] or '')..',', ',%s*keep%-whitespace%s*,' ) then
		for k, v in pairs( args ) do args[k] = mw.ustring.match(v, '^%s*(.*)%s*$') or '' end
	end

	-- Pull information from parameter aliases
	local aliases = {}
	if frame.args['$aliases'] then
		local list = mw.text.split( frame.args['$aliases'], '%s*,%s*' )
		for k, v in ipairs( list ) do
			local tmp = mw.text.split( v, '%s*&gt;%s*' )
			aliases[tonumber(mw.ustring.match(tmp[1], '^[1-9][0-9]*$')) or tmp[1]] = ((tonumber(mw.ustring.match(tmp[2], '^[1-9][0-9]*$'))) or tmp[2])
		end
	end
	for k, v in pairs( aliases ) do
		if args[k] and ( not args[v] or args[v] == '' ) then
			args[v] = args[k]
		end
		args[k] = nil
	end

	-- Remove empty parameters, if specified
	if string.find( ','..(frame.args['$flags'] or '')..',', ',%s*remove%-empty%s*,' ) then
		local tmp = 0
		for k, v in ipairs( args ) do
			if v ~= '' or ( args[k+1] and args[k+1] ~= '' ) or ( args[k+2] and args[k+2] ~= '' ) then
				tmp = k
			else
				break
			end
		end
		for k, v in pairs( args ) do
			if v == '' then
				if not (type(k) == 'number' and k &lt; tmp) then args[k] = nil end
			end
		end
	end

	-- Order parameters
	if frame.args['$params'] then
		local params, tmp = mw.text.split( frame.args['$params'], '%s*,%s*' ), {}
		for k, v in ipairs(params) do
			v = tonumber(mw.ustring.match(v, '^[1-9][0-9]*$')) or v
			if args[v] then tmp[v], args[v] = args[v], nil end
		end
		for k, v in pairs(args) do tmp[k], args[k] = args[k], nil end
		args = tmp
	end

	return mTemplateInvocation.invocation(name, args)
end

p[''] = p.main -- For backwards compatibility

return p</text>
      <sha1>dnfbu3ol9y1rn4f58ap519pwafevpgq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:WPMILHIST Infobox style</title>
    <ns>828</ns>
    <id>44048523</id>
    <revision>
      <id>666797202</id>
      <parentid>656893709</parentid>
      <timestamp>2015-06-13T19:09:51Z</timestamp>
      <contributor>
        <username>Izkala</username>
        <id>23051379</id>
      </contributor>
      <comment>Caption text is too small; rm redundant rules</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1213">local retval = {
	main_box_raw_auto_width = 'border-spacing:2px;',
	header_raw = 'background-color:#B0C4DE;text-align:center;vertical-align:middle;font-size:110%;',
	sub_header_raw = 'background-color:#DCDCDC;text-align:center;vertical-align:middle;',
	header_color = 'background-color:#B0C4DE;',
	nav_box = 'margin:0;float:right;clear:right;width:315px;margin-bottom:0.5em;margin-left:1em;',
	nav_box_child = 'margin:0;float:right;clear:right;width:305px;margin-bottom:0.5em;',
	nav_box_wide =  '',
	nav_box_header = 'background-color:#B0C4DE;',
	nav_box_wide_header = 'background-color:#B0C4DE;',
	nav_box_label = 'background-color:#DCDCDC;',
	image_box_raw = 'text-align:center;border-bottom:1px solid #aaa;line-height:1.5em;',
	image_box_plain_raw = 'text-align:center;line-height:1.5em;',
	internal_border = '1px dotted #aaa;',
	section_border = '1px solid #aaa;'
}

retval.main_box_raw = 'width:315px;' .. retval.main_box_raw_auto_width
retval.header_bar = 'style=&quot;' .. retval.header_raw .. '&quot;'
retval.sub_header_bar = 'style=&quot;' .. retval.sub_header_raw .. '&quot;'
retval.image_box = 'style=&quot;' .. retval.image_box_raw .. '&quot;'
retval.image_box_plain = 'style=&quot;' .. retval.image_box_plain_raw .. '&quot;'

return retval</text>
      <sha1>9w9q5n74gm4r248xarj846fr58ktuhr</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Webarchive</title>
    <ns>828</ns>
    <id>51937454</id>
    <revision>
      <id>797279097</id>
      <parentid>782341866</parentid>
      <timestamp>2017-08-26T01:32:00Z</timestamp>
      <contributor>
        <username>Zyxw</username>
        <id>473593</id>
      </contributor>
      <comment>Extract date from an Archive.is URL, as already done with Wayback and WebCite URLs. Tested first with /sandbox, [[Module:Webarchive/testcases]], and [[Template:Webarchive/testcases/Production]].</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="27225">--[[ ----------------------------------

     Lua module implementing the {{webarchive}} template. 

       A merger of the functionality of three templates: {{wayback}}, {{webcite}} and {{cite archives}}
   
  ]]

local p = {}

--[[--------------------------&lt; inlineError &gt;-----------------------

     Critical error. Render output completely in red. Add to tracking category.

 ]]

local function inlineError(arg, msg)

  track[&quot;Category:Webarchive template errors&quot;] = 1
  return '&lt;span style=&quot;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;Error in webarchive template: Check &lt;code style=&quot;color:inherit; border:inherit; padding:inherit;&quot;&gt;&amp;#124;' .. arg .. '=&lt;/code&gt; value. ' .. msg .. '&lt;/span&gt;'

end

--[[--------------------------&lt; inlineRed &gt;-----------------------

      Render a text fragment in red, such as a warning as part of the final output.
      Add tracking category.

 ]]

local function inlineRed(msg, trackmsg)

  if trackmsg == &quot;warning&quot; then
    track[&quot;Category:Webarchive template warnings&quot;] = 1 
  elseif trackmsg == &quot;error&quot; then
    track[&quot;Category:Webarchive template errors&quot;] = 1 
  end

  return '&lt;span style=&quot;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;' .. msg .. '&lt;/span&gt;'

end

--[[--------------------------&lt; trimArg &gt;-----------------------

     trimArg returns nil if arg is &quot;&quot; while trimArg2 returns 'true' if arg is &quot;&quot; 
     trimArg2 is for args that might accept an empty value, as an on/off switch like nolink=

 ]]

local function trimArg(arg)
  if arg == &quot;&quot; or arg == nil then
    return nil
  else
    return mw.text.trim(arg)
  end
end
local function trimArg2(arg)
  if arg == nil then
    return nil
  else
    return mw.text.trim(arg)
  end
end

--[[--------------------------&lt; base62 &gt;-----------------------

     Convert base-62 to base-10
     Credit: https://de.wikipedia.org/wiki/Modul:Expr 

  ]]

local function base62( value )

    local r = 1

    if value:match( &quot;^%w+$&quot; ) then
        local n = #value
        local k = 1
        local c
        r = 0
        for i = n, 1, -1 do
            c = value:byte( i, i )
            if c &gt;= 48  and  c &lt;= 57 then
                c = c - 48
            elseif c &gt;= 65  and  c &lt;= 90 then
                c = c - 55
            elseif c &gt;= 97  and  c &lt;= 122 then
                c = c - 61
            else    -- How comes?
                r = 1
                break    -- for i
            end
            r = r + c * k
            k = k * 62
        end -- for i
    end
    return r
end 

--[[--------------------------&lt; tableLength &gt;-----------------------

      Given a 1-D table, return number of elements

  ]]

local function tableLength(T)
  local count = 0
  for _ in pairs(T) do count = count + 1 end
  return count
end


--[[--------------------------&lt; dateFormat &gt;-----------------------

     Given a date string, return its format: dmy, mdy, iso, ymd
       If unable to determine return nil

  ]]

local function dateFormat(date)

  local dt = {}
  dt.split = {}

  dt.split = mw.text.split(date, &quot;-&quot;)
  if tableLength(dt.split) == 3 then
    if tonumber(dt.split[1]) &gt; 1900 and tonumber(dt.split[1]) &lt; 2200 and tonumber(dt.split[2]) and tonumber(dt.split[3]) then
      return &quot;iso&quot;
    else
      return nil
    end
  end  

  dt.split = mw.text.split(date, &quot; &quot;)
  if tableLength(dt.split) == 3 then
    if tonumber(dt.split[3]) then
      if tonumber(dt.split[3]) &gt; 1900 and tonumber(dt.split[3]) &lt; 2200 then
        if tonumber(dt.split[1]) then
          return &quot;dmy&quot;
        else
          return &quot;mdy&quot;
        end 
      else
        if tonumber(dt.split[1]) then
          if tonumber(dt.split[1]) &gt; 1900 and tonumber(dt.split[1]) &lt; 2200 then
            return &quot;ymd&quot;
          end
        end
      end
    end
  end
  return nil

end

--[[--------------------------&lt; makeDate &gt;-----------------------

     Given a zero-padded 4-digit year, 2-digit month and 2-digit day, return a full date in df format
     df = mdy, dmy, iso, ymd

 ]]

local function makeDate(year, month, day, df)

  if not year or year == &quot;&quot; or not month or month == &quot;&quot; or not day or day == &quot;&quot; then
    return nil
  end

  local zmonth = month                                                      -- month with leading 0
  month = month:match(&quot;0*(%d+)&quot;)                                            -- month without leading 0
  if tonumber(month) &lt; 1 or tonumber(month) &gt; 12 then
    return year
  end
  local nmonth = os.date(&quot;%B&quot;, os.time{year=2000, month=month, day=1} )     -- month in name form       
  if not nmonth then
    return year
  end

  local zday = day
  day = zday:match(&quot;0*(%d+)&quot;)
  if tonumber(day) &lt; 1 or tonumber(day) &gt; 31 then
    if df == &quot;mdy&quot; or df == &quot;dmy&quot; then
      return nmonth .. &quot; &quot; .. year
    elseif df == &quot;iso&quot; then
      return year .. &quot;-&quot; .. zmonth 
    elseif df == &quot;ymd&quot; then
      return year .. &quot; &quot; .. nmonth
    else
      return nmonth .. &quot; &quot; .. year
    end
  end                                       

  if df == &quot;mdy&quot; then
    return nmonth .. &quot; &quot; .. day .. &quot;, &quot; .. year         -- September 1, 2016
  elseif df == &quot;dmy&quot; then
    return day .. &quot; &quot; .. nmonth .. &quot; &quot; .. year          -- 1 September 2016
  elseif df == &quot;iso&quot; then
    return year .. &quot;-&quot; .. zmonth .. &quot;-&quot; .. zday         -- 2016-09-01
  elseif df == &quot;ymd&quot; then
    return year .. &quot; &quot; .. nmonth .. &quot; &quot; .. cday          -- 2016 September 1
  else
    return nmonth .. &quot; &quot; .. day .. &quot;, &quot; .. year         -- September 1, 2016
  end

end


--[[--------------------------&lt; decodeWebciteDate &gt;-----------------------

      Given a URI-path to Webcite (eg. /67xHmVFWP) return the encoded date in df format

  ]]
local function decodeWebciteDate(path, df)

    local dt = {}
    dt.split = {}

    dt.split = mw.text.split(path, &quot;/&quot;)

    -- valid URL formats that are not base62

    -- http://www.webcitation.org/query?id=1138911916587475
    -- http://www.webcitation.org/query?url=http..&amp;date=2012-06-01+21:40:03
    -- http://www.webcitation.org/1138911916587475
    -- http://www.webcitation.org/cache/73e53dd1f16cf8c5da298418d2a6e452870cf50e
    -- http://www.webcitation.org/getfile.php?fileid=1c46e791d68e89e12d0c2532cc3cf629b8bc8c8e

    if mw.ustring.find( dt.split[2], &quot;query&quot;, 1, plain) or 
       mw.ustring.find( dt.split[2], &quot;cache&quot;, 1, plain) or
       mw.ustring.find( dt.split[2], &quot;getfile&quot;, 1, plain) or
       tonumber(dt.split[2]) then
      return &quot;query&quot;
    end

    dt.full = os.date(&quot;%Y %m %d&quot;, string.sub(string.format(&quot;%d&quot;, base62(dt.split[2])),1,10) )
    dt.split = mw.text.split(dt.full, &quot; &quot;)
    dt.year = dt.split[1]
    dt.month = dt.split[2]
    dt.day = dt.split[3]

    if not tonumber(dt.year) or not tonumber(dt.month) or not tonumber(dt.day) then
      return inlineRed(&quot;[Date error] (1)&quot;, &quot;error&quot;)
    end

    if tonumber(dt.month) &gt; 12 or tonumber(dt.day) &gt; 31 or tonumber(dt.month) &lt; 1 then
      return inlineRed(&quot;[Date error] (2)&quot;, &quot;error&quot;)
    end
    if tonumber(dt.year) &gt; tonumber(os.date(&quot;%Y&quot;)) or tonumber(dt.year) &lt; 1900 then
      return inlineRed(&quot;[Date error] (3)&quot;, &quot;error&quot;)
    end

    fulldate = makeDate(dt.year, dt.month, dt.day, df)
    if not fulldate then
      return inlineRed(&quot;[Date error] (4)&quot;, &quot;error&quot;)
    else
      return fulldate
    end

end

--[[--------------------------&lt; decodeWaybackDate &gt;-----------------------

Given a URI-path to Wayback (eg. /web/20160901010101/http://example.com )
  return the formatted date eg. &quot;September 1, 2016&quot; in df format 
  Handle non-digits in snapshot ID such as &quot;re_&quot; and &quot;-&quot; and &quot;*&quot;

 ]]

local function decodeWaybackDate(path, df)

    local snapdate, snapdatelong, currdate, fulldate

    local safe = path
    snapdate = string.gsub(safe, &quot;^/w?e?b?/?&quot;, &quot;&quot;)                      -- Remove leading &quot;/web/&quot; or &quot;/&quot;
    safe = snapdate
    local N = mw.text.split(safe, &quot;/&quot;)
    snapdate = N[1]
    if snapdate == &quot;*&quot; then                                             -- eg. /web/*/http..
      return &quot;index&quot;
    end
    safe = snapdate
    snapdate = string.gsub(safe, &quot;[a-z][a-z]_[0-9]?$&quot;, &quot;&quot;)              -- Remove any trailing &quot;re_&quot; from date 
    safe = snapdate
    snapdate = string.gsub(safe, &quot;[-]&quot;, &quot;&quot;)                             -- Remove dashes from date eg. 2015-01-01 
    safe = snapdate
    snapdate = string.gsub(safe, &quot;[*]$&quot;, &quot;&quot;)                            -- Remove trailing &quot;*&quot; 

    if not tonumber(snapdate) then
      return inlineRed(&quot;[Date error] (2)&quot;, &quot;error&quot;)
    end
    local dlen = string.len(snapdate)
    if dlen &lt; 4 then
      return inlineRed(&quot;[Date error] (3)&quot;, &quot;error&quot;)
    end
    if dlen &lt; 14 then
      snapdatelong = snapdate .. string.rep(&quot;0&quot;, 14 - dlen)
    else
      snapdatelong = snapdate
    end
    local year = string.sub(snapdatelong, 1, 4)
    local month = string.sub(snapdatelong, 5, 6)
    local day = string.sub(snapdatelong, 7, 8)
    if not tonumber(year) or not tonumber(month) or not tonumber(day) then
      return inlineRed(&quot;[Date error] (4)&quot;, &quot;error&quot;)
    end
    if tonumber(month) &gt; 12 or tonumber(day) &gt; 31 or tonumber(month) &lt; 1 then
      return inlineRed(&quot;[Date error] (5)&quot;, &quot;error&quot;)
    end
    currdate = os.date(&quot;%Y&quot;)
    if tonumber(year) &gt; tonumber(currdate) or tonumber(year) &lt; 1900 then
      return inlineRed(&quot;[Date error] (6)&quot;, &quot;error&quot;)
    end

    fulldate = makeDate(year, month, day, df)
    if not fulldate then
      return inlineRed(&quot;[Date error] (7)&quot;, &quot;error&quot;)
    else
      return fulldate
    end

end

--[[--------------------------&lt; decodeArchiveisDate &gt;-----------------------

  Given an Archive.is &quot;long link&quot; URI-path (e.g. /2016.08.28-144552/http://example.com)
  return the date in df format (e.g. if df = dmy, return 28 August 2016)
  Handles &quot;.&quot; and &quot;-&quot; in snapshot date, so 2016.08.28-144552 is same as 20160828144552

  ]]

local function decodeArchiveisDate(path, df)

    local snapdate, snapdatelong, currdate, fulldate

    local safe = path
    local N = mw.text.split(safe, &quot;/&quot;)
    safe = N[2]                                                         -- get snapshot date, e.g. 2016.08.28-144552
    snapdate = string.gsub(safe, &quot;[%.%-]&quot;, &quot;&quot;)                          -- remove periods and hyphens

    if not tonumber(snapdate) then                                      -- if not numeric, it is &quot;short link&quot;, not date
        return &quot;short link&quot;                                             -- e.g. http://archive.is/hD1qz
    end

    local dlen = string.len(snapdate)
    if dlen &lt; 4 then
        return inlineRed(&quot;[Date error] (3)&quot;, &quot;error&quot;)
    end
    if dlen &lt; 14 then
        snapdatelong = snapdate .. string.rep(&quot;0&quot;, 14 - dlen)
    else
        snapdatelong = snapdate
    end
    local year = string.sub(snapdatelong, 1, 4)
    local month = string.sub(snapdatelong, 5, 6)
    local day = string.sub(snapdatelong, 7, 8)
    if not tonumber(year) or not tonumber(month) or not tonumber(day) then
        return inlineRed(&quot;[Date error] (4)&quot;, &quot;error&quot;)
    end
    if tonumber(month) &gt; 12 or tonumber(day) &gt; 31 or tonumber(month) &lt; 1 then
        return inlineRed(&quot;[Date error] (5)&quot;, &quot;error&quot;)
    end
    currdate = os.date(&quot;%Y&quot;)
    if tonumber(year) &gt; tonumber(currdate) or tonumber(year) &lt; 1900 then
        return inlineRed(&quot;[Date error] (6)&quot;, &quot;error&quot;)
    end

    fulldate = makeDate(year, month, day, df)
    if not fulldate then
        return inlineRed(&quot;[Date error] (7)&quot;, &quot;error&quot;)
    else
        return fulldate
    end

 end


--[[--------------------------&lt; serviceName &gt;-----------------------

     Given a domain extracted by mw.uri.new() (eg. web.archive.org) set tail string and service ID

  ]]

local function serviceName(host, nolink)

  local tracking = &quot;Category:Webarchive template other archives&quot;

  local bracketopen = &quot;[[&quot;
  local bracketclose = &quot;]]&quot;
  if nolink then
    bracketopen = &quot;&quot;
    bracketclose = &quot;&quot;
  end

  ulx.url1.service = &quot;other&quot;
  ulx.url1.tail = &quot; at &quot; .. ulx.url1.host .. &quot; &quot; .. inlineRed(&quot;Error: unknown archive URL&quot;)

  if mw.ustring.find( host, &quot;archive.org&quot;, 1, plain ) then
    ulx.url1.service = &quot;wayback&quot;
    ulx.url1.tail = &quot; at the &quot; .. bracketopen .. &quot;Wayback Machine&quot; .. bracketclose
    tracking = &quot;Category:Webarchive template wayback links&quot;
  elseif mw.ustring.find( host, &quot;webcitation.org&quot;, 1, plain ) then
    ulx.url1.service = &quot;webcite&quot;
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;WebCite&quot; .. bracketclose
    tracking = &quot;Category:Webarchive template webcite links&quot;
  elseif mw.ustring.find( host, &quot;archive.is&quot;, 1, plain ) then
    ulx.url1.service = &quot;archiveis&quot;
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Archive.is&quot; .. bracketclose
    tracking = &quot;Category:Webarchive template archiveis links&quot;
  elseif mw.ustring.find( host, &quot;archive.fo&quot;, 1, plain ) then
    ulx.url1.service = &quot;archiveis&quot;
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Archive.is&quot; .. bracketclose
    tracking = &quot;Category:Webarchive template archiveis links&quot;
  elseif mw.ustring.find( host, &quot;archive.today&quot;, 1, plain ) then
    ulx.url1.service = &quot;archiveis&quot;
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Archive.is&quot; .. bracketclose
    tracking = &quot;Category:Webarchive template archiveis links&quot;
  elseif mw.ustring.find( host, &quot;archive.il&quot;, 1, plain ) then
    ulx.url1.service = &quot;archiveis&quot;
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Archive.is&quot; .. bracketclose
    tracking = &quot;Category:Webarchive template archiveis links&quot;
  elseif mw.ustring.find( host, &quot;archive.ec&quot;, 1, plain ) then
    ulx.url1.service = &quot;archiveis&quot;
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Archive.is&quot; .. bracketclose
    tracking = &quot;Category:Webarchive template archiveis links&quot;
  elseif mw.ustring.find( host, &quot;archive[-]it.org&quot;, 1, plain ) then
    ulx.url1.service = &quot;archiveit&quot;
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Archive-It&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;arquivo.pt&quot;, 1, plain) then
    ulx.url1.tail = &quot; at the &quot; .. &quot;Portuguese Web Archive&quot; 
  elseif mw.ustring.find( host, &quot;loc.gov&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. bracketopen .. &quot;Library of Congress&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;webharvest.gov&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. bracketopen .. &quot;National Archives and Records Administration&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;bibalex.org&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at &quot; .. &quot;[[Bibliotheca_Alexandrina#Internet_Archive_partnership|Bibliotheca Alexandrina]]&quot;
  elseif mw.ustring.find( host, &quot;collectionscanada&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. &quot;Canadian Government Web Archive&quot;
  elseif mw.ustring.find( host, &quot;haw.nsk&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. &quot;Croatian Web Archive (HAW)&quot;
  elseif mw.ustring.find( host, &quot;veebiarhiiv.digar.ee&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. &quot;Estonian Web Archive&quot;
  elseif mw.ustring.find( host, &quot;vefsafn.is&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. &quot;[[National and University Library of Iceland]]&quot;
  elseif mw.ustring.find( host, &quot;proni.gov&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. bracketopen .. &quot;Public Record Office of Northern Ireland&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;uni[-]lj.si&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. &quot;Slovenian Web Archive&quot;
  elseif mw.ustring.find( host, &quot;stanford.edu&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. &quot;[[Stanford University Libraries|Stanford Web Archive]]&quot;
  elseif mw.ustring.find( host, &quot;nationalarchives.gov.uk&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. bracketopen .. &quot;UK Government Web Archive&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;parliament.uk&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. bracketopen .. &quot;UK Parliament's Web Archive&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;webarchive.org.uk&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at the &quot; .. bracketopen .. &quot;UK Web Archive&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;nlb.gov.sg&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at &quot; .. &quot;Web Archive Singapore&quot; 
  elseif mw.ustring.find( host, &quot;pandora.nla.gov.au&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Pandora Archive&quot; .. bracketclose 
  elseif mw.ustring.find( host, &quot;perma.cc&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Perma.cc&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;perma-archives.cc&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at &quot; .. bracketopen .. &quot;Perma.cc&quot; .. bracketclose
  elseif mw.ustring.find( host, &quot;screenshots.com&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at Screenshots&quot; 
  elseif mw.ustring.find( host, &quot;wikiwix.com&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at Wikiwix&quot; 
  elseif mw.ustring.find( host, &quot;freezepage.com&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at Freezepage&quot; 
  elseif mw.ustring.find( host, &quot;webcache.googleusercontent.com&quot;, 1, plain ) then
    ulx.url1.tail = &quot; at Google Cache&quot; 
  else
    tracking = &quot;Category:Webarchive template unknown archives&quot;
  end

  track[tracking] = 1

end

--[[--------------------------&lt; parseExtraArgs &gt;-----------------------

     Parse numbered arguments starting at 2, such as url2..url10, date2..date10, title2..title10
       For example: {{webarchive |url=.. |url4=.. |url7=..}}
         Three url arguments not in numeric sequence (1..4..7). 
         Function only processes arguments numbered 2 or greater (in this case 4 and 7)
         It creates numeric sequenced table entries like:
           urlx.url2.url = &lt;argument value for url4&gt;
           urlx.url3.url = &lt;argument value for url7&gt;
       Returns the number of URL arguments found numbered 2 or greater (in this case returns &quot;2&quot;)

 ]]

local function parseExtraArgs()

  local i, j, argurl, argurl2, argdate, argtitle

  j = 2
  for i = 2, maxurls do
    argurl = &quot;url&quot; .. i
    if trimArg(args[argurl]) then
      argurl2 = &quot;url&quot; .. j
      ulx[argurl2] = {}
      ulx[argurl2][&quot;url&quot;] = args[argurl]
      argdate = &quot;date&quot; .. j
      if trimArg(args[argdate]) then
        ulx[argurl2][&quot;date&quot;] = args[argdate]
      else
        ulx[argurl2][&quot;date&quot;] = inlineRed(&quot;[Date missing]&quot;, &quot;warning&quot;)
      end
      argtitle = &quot;title&quot; .. j
      if trimArg(args[argtitle]) then
        ulx[argurl2][&quot;title&quot;] = args[argtitle]
      else
        ulx[argurl2][&quot;title&quot;] = nil
      end
      j = j + 1
    end
  end

  if j == 2 then
    return 0
  else
    return j - 2
  end

end

--[[--------------------------&lt; comma &gt;-----------------------

     Given a date string, return &quot;,&quot; if it's MDY 

  ]]

local function comma(date)
  local N = mw.text.split(date, &quot; &quot;)
  local O = mw.text.split(N[1], &quot;-&quot;) -- for ISO
  if O[1] == &quot;index&quot; then return &quot;&quot; end
  if not tonumber(O[1]) then
    return &quot;,&quot;
  else
    return &quot;&quot;
  end
end

--[[--------------------------&lt; createTracking &gt;-----------------------

     Return data in track[] ie. tracking categories

  ]]

local function createTracking()

  local sand = &quot;&quot;
  if tableLength(track) &gt; 0 then                        
    for key,_ in pairs(track) do
      sand = sand .. &quot;[[&quot; .. key .. &quot;]]&quot;
    end
  end
  return sand

end

--[[--------------------------&lt; createRendering &gt;-----------------------

     Return a rendering of the data in ulx[][]

  ]]

local function createRendering()

    local sand, displayheader, displayfield

    local period1 = &quot;&quot;   -- For backwards compat with {{wayback}}
    local period2 = &quot;.&quot;                                                            
  
    local indexstr = &quot;archived&quot;
    if ulx.url1.date == &quot;index&quot; then
      indexstr = &quot;archive&quot;
    end  
                                                                                          -- For {{wayback}}, {{webcite}}

    if ulx.url1.format == &quot;none&quot; then                                                     
      if not ulx.url1.title and not ulx.url1.date then                                    -- No title. No date
        sand = &quot;[&quot; .. ulx.url1.url .. &quot; Archived]&quot; .. ulx.url1.tail
      elseif not ulx.url1.title and ulx.url1.date then                                    -- No title. Date.
        if ulx.url1.service == &quot;wayback&quot; then 
          period1 = &quot;.&quot;
          period2 = &quot;&quot; 
        end
        sand = &quot;[&quot; .. ulx.url1.url .. &quot; Archived] &quot; .. ulx.url1.date .. comma(ulx.url1.date) .. ulx.url1.tail .. period1
      elseif ulx.url1.title and not ulx.url1.date then                                    -- Title. No date.
        sand = &quot;[&quot; .. ulx.url1.url .. &quot; &quot; .. ulx.url1.title .. &quot;]&quot; .. ulx.url1.tail
      elseif ulx.url1.title and ulx.url1.date then                                        -- Title. Date.
        sand = &quot;[&quot; .. ulx.url1.url .. &quot; &quot; .. ulx.url1.title .. &quot;]&quot; .. ulx.url1.tail .. &quot;&amp;#32;(&quot; .. indexstr .. &quot; &quot; .. ulx.url1.date .. &quot;)&quot;
      else
        return nil
      end
      if ulx.url1.extraurls &gt; 0 then                                                      -- For multiple archive URLs
        local tot = ulx.url1.extraurls + 1
        sand = sand .. period2 .. &quot; Additional archives: &quot;
        for i=2,tot do
          local indx = &quot;url&quot; .. i
          if ulx[indx][&quot;title&quot;] then 
            displayfield = &quot;title&quot;
          else
            displayfield = &quot;date&quot;
          end
          sand = sand .. &quot;[&quot; .. ulx[indx][&quot;url&quot;] .. &quot; &quot; .. ulx[indx][displayfield] .. &quot;]&quot;
          if i == tot then
            sand = sand .. &quot;.&quot;
          else
            sand = sand .. &quot;, &quot;
          end
        end
      else
        return sand  
      end
      return sand
                                                                                          -- For {{cite archives}}

    else                                                                  
      if ulx.url1.format == &quot;addlarchives&quot; then                           -- Multiple archive services 
        displayheader = &quot;Additional archives: &quot;
      else                                                                -- Multiple pages from the same archive 
        displayheader = &quot;Additional pages archived&amp;nbsp;on &quot; .. ulx.url1.date .. &quot;: &quot;
      end
      local tot = 1 + ulx.url1.extraurls
      local sand = displayheader
      for i=1,tot do
        local indx = &quot;url&quot; .. i
        displayfield = ulx[indx][&quot;title&quot;]
        if ulx.url1.format == &quot;addlarchives&quot; then
          if not displayfield then 
            displayfield = ulx[indx][&quot;date&quot;]
          end
        else
          if not displayfield then 
            displayfield = &quot;Page &quot; .. i
          end
        end
        sand = sand .. &quot;[&quot; .. ulx[indx][&quot;url&quot;] .. &quot; &quot; .. displayfield .. &quot;]&quot;
        if i == tot then
          sand = sand .. &quot;.&quot;
        else
          sand = sand .. &quot;, &quot;
        end
      end
      return sand
    end
end

function p.webarchive(frame)
  args = frame.args
  if (args[1]==nil) and (args[&quot;url&quot;]==nil) then           -- if no argument provided than check parent template/module args
    args = frame:getParent().args 
  end
 
  local tname = &quot;Webarchive&quot;                              -- name of calling template. Change if template rename.
  ulx = {}                                                -- Associative array to hold template data 
  track = {}                                              -- Associative array to hold tracking categories
  maxurls = 10                                            -- Max number of URLs allowed. 
  local verifydates = &quot;yes&quot;                               -- See documentation. Set &quot;no&quot; to disable.

                                                          -- URL argument (first)

  local url1 = trimArg(args.url) or trimArg(args.url1)           
  if not url1 then
    return inlineError(&quot;url&quot;, &quot;Empty.&quot;) .. createTracking()
  end
  if mw.ustring.find( url1, &quot;https://web.http&quot;, 1, plain ) then    -- track bug 
    track[&quot;Category:Webarchive template errors&quot;] = 1 
    return inlineError(&quot;url&quot;, &quot;https://web.http&quot;) .. createTracking()
  end 
  if url1 == &quot;https://web.archive.org/http:/&quot; then                 -- track bug
    track[&quot;Category:Webarchive template errors&quot;] = 1 
    return inlineError(&quot;url&quot;, &quot;Invalid URL&quot;) .. createTracking()
  end

  ulx.url1 = {}
  ulx.url1.url = url1
  local uri1 = mw.uri.new(ulx.url1.url)
  ulx.url1.host = uri1.host
  ulx.url1.extraurls = parseExtraArgs()

                                                          -- Nolink argument 

  local nolink = trimArg2(args.nolink)

  serviceName(uri1.host, nolink)

                                                          -- Date argument

  local date = trimArg(args.date) or trimArg(args.date1)
  if date == &quot;*&quot; and ulx.url1.service == &quot;wayback&quot; then
    date = &quot;index&quot;
  elseif date and ulx.url1.service == &quot;wayback&quot; and verifydates == &quot;yes&quot; then 
    local ldf = dateFormat(date)
    if ldf then
      local udate = decodeWaybackDate( uri1.path, ldf )
      if udate ~= date then
        date = udate .. inlineRed(&quot;&lt;sup&gt;[Date mismatch]&lt;/sup&gt;&quot;, &quot;warning&quot;)       
      end
    end
  elseif date and ulx.url1.service == &quot;webcite&quot; and verifydates == &quot;yes&quot; then 
    local ldf = dateFormat(date)
    if ldf then
      local udate = decodeWebciteDate( uri1.path, ldf )
      if udate == &quot;query&quot; then -- skip
      elseif udate ~= date then
        date = udate .. inlineRed(&quot;&lt;sup&gt;[Date mismatch]&lt;/sup&gt;&quot;, &quot;warning&quot;)      
      end
    end
  elseif date and ulx.url1.service == &quot;archiveis&quot; and verifydates == &quot;yes&quot; then 
     local ldf = dateFormat(date)
     if ldf then
        local udate = decodeArchiveisDate( uri1.path, ldf )
        if udate == &quot;short link&quot; then -- skip
        elseif udate ~= date then
           date = udate .. inlineRed(&quot;&lt;sup&gt;[Date mismatch]&lt;/sup&gt;&quot;, &quot;warning&quot;)      
        end
     end
  elseif not date and ulx.url1.service == &quot;wayback&quot; then
    date = decodeWaybackDate( uri1.path, &quot;iso&quot; )
    if not date then 
      date = inlineRed(&quot;[Date error] (1)&quot;, &quot;error&quot;) 
    end
  elseif not date and ulx.url1.service == &quot;webcite&quot; then
    date = decodeWebciteDate( uri1.path, &quot;iso&quot; )
    if date == &quot;query&quot; then
      date = inlineRed(&quot;[Date missing]&quot;, &quot;warning&quot;)
    elseif not date then 
      date = inlineRed(&quot;[Date error] (1)&quot;, &quot;error&quot;)
    end
  elseif not date and ulx.url1.service == &quot;archiveis&quot; then
     date = decodeArchiveisDate( uri1.path, &quot;iso&quot; )
     if date == &quot;short link&quot; then
        date = inlineRed(&quot;[Date missing]&quot;, &quot;warning&quot;)
     elseif not date then 
        date = inlineRed(&quot;[Date error] (1)&quot;, &quot;error&quot;)
     end
  elseif not date then
    date = inlineRed(&quot;[Date missing]&quot;, &quot;warning&quot;)
  end
  ulx.url1.date = date

                                                          -- Format argument 

  local format = trimArg(args.format)
  if not format then
    format = &quot;none&quot;
  else
    if format == &quot;addlpages&quot; then
      if not ulx.url1.date then
        format = &quot;none&quot;
      end
    elseif format == &quot;addlarchives&quot; then
      format = &quot;addlarchives&quot;
    else
      format = &quot;none&quot;
    end
  end
  ulx.url1.format = format

                                                          -- Title argument 

  local title = trimArg(args.title) or trimArg(args.title1)
  ulx.url1.title = title
  

  local rend = createRendering()
  if not rend then
    rend = '&lt;span style=&quot;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;Error in [[:Template:' .. tname .. ']]: Unknown problem. Please report on template talk page.&lt;/span&gt;'
    track[&quot;Category:Webarchive template errors&quot;] = 1 
  end

  return rend .. createTracking()

end

return p</text>
      <sha1>05luokcxeckxzwdjcgk57703u2lh8c3</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Yesno</title>
    <ns>828</ns>
    <id>38665046</id>
    <revision>
      <id>659459801</id>
      <parentid>604718900</parentid>
      <timestamp>2015-04-27T10:43:30Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <comment>recognise &quot;t&quot; for true and &quot;f&quot; for false, per request</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="710">-- Function allowing for consistent treatment of boolean-like wikitext input.
-- It works similarly to the template {{yesno}}.

return function (val, default)
	-- If your wiki uses non-ascii characters for any of &quot;yes&quot;, &quot;no&quot;, etc., you
	-- should replace &quot;val:lower()&quot; with &quot;mw.ustring.lower(val)&quot; in the
	-- following line.
	val = type(val) == 'string' and val:lower() or val
	if val == nil then
		return nil
	elseif val == true 
		or val == 'yes'
		or val == 'y'
		or val == 'true'
		or val == 't'
		or tonumber(val) == 1
	then
		return true
	elseif val == false
		or val == 'no'
		or val == 'n'
		or val == 'false'
		or val == 'f'
		or tonumber(val) == 0
	then
		return false
	else
		return default
	end
end</text>
      <sha1>266x81qzpz9iq1b5gft4zsdy5qzbnwi</sha1>
    </revision>
  </page>
</mediawiki>
