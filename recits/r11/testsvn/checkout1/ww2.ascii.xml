<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.31.0-wmf.4</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>World War II</title>
    <ns>0</ns>
    <id>32927</id>
    <revision>
      <id>806873005</id>
      <parentid>805720929</parentid>
      <timestamp>2017-10-24T17:46:33Z</timestamp>
      <contributor>
        <username>Volunteer1234</username>
        <id>30845620</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="231310">{{pp-semi-indef}}
{{Pp-move-indef}}
{{redirect-multi|3|The Second World War|WWII|WW2|other uses|The Second World War (disambiguation)|and|WWII (disambiguation)}}
{{EngvarB|date=July 2014}}
{{Use British English|date=August 2016}}
{{use dmy dates|date=May 2013}}
{{Infobox military conflict
|conflict  = World War&amp;nbsp;II
|partof    =
|image     = Infobox collage for WWII.PNG
|image_size = 300px
|caption   = (clockwise from top left) {{flatlist|
* Chinese forces in the [[Battle of Wanjialing]]
* Australian [[25-pounder]] guns during the [[First Battle of El Alamein]]
* German [[Junkers Ju 87|Stuka]] dive bombers on the [[Eastern Front (World War II)|Eastern Front]] in December 1943
* American naval force in the [[Invasion of Lingayen Gulf|Lingayen Gulf]]
* [[Wilhelm Keitel]] signing the [[German Instrument of Surrender]]
* Soviet troops in the [[Battle of Stalingrad]]
}}
|date      = {{start and end dates|1939|9|1|1945|9|2|df=yes}} {{nowrap|({{Age in years and days|1 Sep 1939|2 Sep 1945|sep=and}}){{efn| While [[World War II#Chronology|various other dates]] have been proposed as the date on which World War II began or ended, this is the time span most frequently cited.}}}}
|place     = [[European theatre of World War II|Europe]], [[Pacific War|Pacific]], [[Battle of the Atlantic|Atlantic]], [[South-East Asian theatre of World War II|South-East Asia]], [[Second Sino-Japanese War|China]], [[Mediterranean and Middle East theatre of World War II|Middle East]], [[Mediterranean and Middle East theatre of World War II|Mediterranean]], [[North African Campaign|North Africa]] and [[East African Campaign (World War II)|Horn of Africa]], briefly [[American Theater (World War II)|North]] and [[Battle of the River Plate|South America]]
|territory =
|result    = [[Allies of World War II|Allied]] victory
* Collapse of [[Nazi Germany]]
* Fall of [[Empire of Japan|Japanese]] and [[Italian Empire]]s
* Dissolution of the  [[League of Nations]]
* Creation of the [[United Nations]]
* Emergence of the [[United States]] and the [[Soviet Union]] as [[superpower]]s
* Beginning of the [[Cold War]] ([[World War II#Aftermath|more...]])

&lt;!--NOTE: The consensus of a discussion which concluded in November 2014 at [[Talk:World War II#Request for comment: WWII infobox]] was to only list the 'Allies' and 'Axis' as combatants. PLEASE do not make any changes to this without first obtaining consensus for the change on the article's talk page. --&gt;

| combatants_header = [[World War II by country|Participants]]
|combatant1 =[[Allies of World War II|'''Allies''']]
|combatant2 =[[Axis powers|'''Axis''']]

|commander1 = '''[[Allied leaders of World War II|Main Allied leaders]]'''{{plainlist|
*{{flagicon|Soviet Union|1936|size=22px}} [[Joseph Stalin]]
*{{flagicon|United States|1912|size=22px}} [[Franklin D. Roosevelt]]
*{{flagicon|United Kingdom|size=22px}} [[Winston Churchill]]
*{{flagicon|Republic of China (19121949)|size=22px}} [[Chiang Kai-shek]]}}
|commander2 = '''[[Axis leaders of World War II|Main Axis leaders]]'''{{plainlist|
*{{flagicon|Nazi Germany|size=22px}} [[Adolf Hitler]]
*{{flagicon|Empire of Japan|size=22px}} [[Hirohito]]{{efn|Upon his death in 1989, Emperor Hirohito was posthumously proclaimed Emperor Shwa. While either use is considered acceptable, his English name (Hirohito) is used here as it is this name by which he was known to most of the West during World War II.}}
*{{flagicon|Kingdom of Italy|size=22px}} [[Benito Mussolini]]}}
|casualties1 = {{plainlist|
*'''Military dead:'''&lt;br&gt;Over 16,000,000
*'''Civilian dead:'''&lt;br&gt;Over 45,000,000
*'''Total dead:'''&lt;br&gt;Over 61,000,000 &lt;small&gt;(193745)&lt;/small&gt;}}
&lt;small&gt;[[World War II casualties|...''further details'']]&lt;/small&gt;
|casualties2 = {{plainlist|
*'''Military dead:'''&lt;br&gt;Over 8,000,000
*'''Civilian dead:'''&lt;br&gt;Over 4,000,000
*'''Total dead:'''&lt;br&gt;Over 12,000,000 &lt;small&gt;(193745)&lt;/small&gt;}}
&lt;small&gt;[[World War II casualties|...''further details'']]&lt;/small&gt;
|campaignbox=
}}
{{Campaignbox World War II}}
{{Events leading to World War II}}
{{TopicTOC-World War II}}

'''World War&amp;nbsp;II''' (often abbreviated to '''WWII''' or '''WW2'''), also known as the '''Second World War''', was a [[World war|global war]] that lasted from 1939 to 1945, although related conflicts began earlier. It involved [[World War II by country|the vast majority of the world's countries]]including all of the [[great power]]seventually forming two opposing [[military alliance]]s: the [[Allies of World War II|Allies]] and the [[Axis powers|Axis]]. It was the most widespread war in history, and directly involved more than 100 million people from over 30 countries. In a state of [[total war]], the major participants threw their entire economic, industrial, and scientific capabilities behind the [[war effort]], erasing the distinction between civilian and military resources.

World War II was the [[List of wars and anthropogenic disasters by death toll|deadliest conflict]] in [[History of the world|human history]], marked by 50 million to 85 million fatalities, most of which were civilians in the Soviet Union and China. It included [[massacres]], the deliberate [[genocide]] of [[the Holocaust]], [[Strategic bombing during World War II|strategic bombing]], starvation, disease and the first use of [[nuclear weapon]]s in history.{{sfn|Gilbert|2001|p=291}}&lt;ref&gt;{{cite book |title=War, Violence, and Population: Making the Body Count |author=James A. Tyner |page=49 |date=3 March 2009 |publisher=The Guilford Press; 1 edition |isbn=1-6062-3038-7}}&lt;/ref&gt;{{sfn|Sommerville|2008|loc=p. 5 (2011 ed.)}}&lt;ref&gt;{{cite web|url=http://www.bbc.co.uk/tyne/content/articles/2005/01/20/holocaust_memorial_other_victims_feature.shtml|title=BBC - Tyne - Roots - Non-Jewish Holocaust Victims : The 5,000,000 others|website=www.bbc.co.uk|accessdate=27 August 2017}}&lt;/ref&gt;

The [[Empire of Japan]] aimed to dominate [[Asia]] and the [[Pacific Ocean|Pacific]] and was already [[Second Sino-Japanese War|at war]] with the [[Republic of China (191249)|Republic of China]] in 1937,{{sfn|Barrett|Shyu|2001|p=6}} but the world war is generally said to have begun on 1 September 1939&lt;ref&gt;Axelrod, Alan (2007) ''Encyclopedia of World War II, Volume 1''. Infobase Publishing. pp. 659.&lt;/ref&gt; with the [[invasion of Poland|invasion]] of [[Second Polish Republic|Poland]] by [[Nazi Germany]] and subsequent declarations of war on Germany by [[French Third Republic|France]] and the [[United Kingdom]]. [[GermanSoviet Commercial Agreement (1940)|Supplied by the Soviet   Union]], from late 1939 to early 1941, in a series of campaigns and [[Tripartite Pact|treaties]], Germany conquered or controlled much of continental Europe, and formed the Axis alliance with [[Kingdom of Italy|Italy]] and [[Empire of Japan|Japan]]. Under the [[MolotovRibbentrop Pact]] of August 1939, Germany and the [[Soviet Union]] partitioned and annexed territories of their European neighbours, [[Soviet invasion of Poland|Poland]], [[Winter War|Finland]], [[Soviet occupation of Bessarabia and Northern Bukovina|Romania]] and the [[Occupation of the Baltic states|Baltic states]]. The war continued primarily between the European Axis powers and the coalition of the United Kingdom and the [[Commonwealth of Nations|British Commonwealth]], with campaigns including the [[Western Desert Campaign|North Africa]] and [[East African Campaign (World War II)|East Africa]] campaigns, the aerial [[Battle of Britain]], the [[The Blitz|Blitz bombing campaign]], the [[Balkan Campaign (World War II)|Balkan Campaign]] as well as the long-running [[Battle of the Atlantic]]. On 22 June 1941, the European Axis powers launched [[Operation Barbarossa|an invasion of the Soviet Union]], opening the [[Eastern Front (World War II)|largest land theatre of war in history]], which trapped the major part of the Axis military forces into a [[Attrition warfare|war of attrition]]. In December 1941, Japan [[Attack on Pearl Harbor|attacked the United States]] and [[Japanese invasion of Malaya|European colonies]] in the Pacific Ocean, and quickly conquered much of the Western Pacific.

The Axis advance halted in 1942 when Japan lost the critical [[Battle of Midway]], and Germany and Italy were defeated in [[Second Battle of El Alamein|North Africa]] and then, decisively, at [[Battle of Stalingrad|Stalingrad]] in the Soviet Union. In 1943, with a series of German defeats on the [[Eastern Front (World War II)|Eastern Front]], the [[Allied invasion of Sicily]] and the [[Allied invasion of Italy]] which brought about Italian surrender, and Allied victories in the Pacific, the Axis lost the initiative and undertook strategic retreat on all fronts. In 1944, the Western Allies [[Normandy landings|invaded German-occupied France]], while the Soviet Union regained all of its territorial losses and invaded Germany and its allies. During 1944 and 1945 the Japanese suffered major reverses in mainland Asia in [[Second Guangxi Campaign|South]] [[Battle of West Hunan|Central China]] and [[Burma Campaign|Burma]], while the Allies crippled the [[Imperial Japanese Navy|Japanese Navy]] and captured key Western Pacific islands.

The war in [[Europe]] concluded with an [[Western Allied invasion of Germany|invasion of Germany]] by the Western Allies and the Soviet Union, culminating in the [[Battle of Berlin|capture of Berlin]] by Soviet troops, the [[Death of Adolf Hitler|suicide of Adolf Hitler]] and the subsequent [[German Instrument of Surrender|German unconditional surrender]] on [[Victory in Europe Day|8 May 1945]]. Following the [[Potsdam Declaration]] by the Allies on 26 July 1945 and the refusal of Japan to surrender under its terms, the United States [[Atomic bombings of Hiroshima and Nagasaki|dropped atomic bombs]] on the Japanese cities of [[Hiroshima]] and [[Nagasaki]] on 6 August and 9 August respectively. With an [[Operation Downfall|invasion of the Japanese archipelago]] imminent, the possibility of additional atomic bombings and the [[Soviet invasion of Manchuria]], [[Surrender of Japan|Japan formally surrendered]] on 2 September 1945. Thus ended the war in Asia, cementing the total victory of the Allies.

World War&amp;nbsp;II altered the political alignment and social structure of the world. The [[United Nations]] (UN) was established to foster international co-operation and prevent future conflicts. The victorious [[great power]]sChina, France, the Soviet Union, the United Kingdom, and the United Statesbecame the [[Permanent members of the United Nations Security Council|permanent members]] of the [[United Nations Security Council]].&lt;ref name=&quot;The UN Security Council&quot;&gt;{{Citation|title=The UN Security Council|url=http://www.unfoundation.org/what-we-do/issues/united-nations/the-un-security-council.html|accessdate=15 May 2012}}&lt;/ref&gt; The Soviet Union and the United States emerged as rival [[superpower]]s, setting the stage for the [[Cold War]], which lasted for the next 46 years. Meanwhile, the influence of European great powers waned, while the [[decolonisation of Africa]] and [[Decolonisation of Asia|Asia]] began. Most countries whose industries had been damaged moved towards [[PostWorld War II economic expansion|economic recovery]]. Political integration, especially [[European integration|in Europe]], emerged as an effort to end pre-war enmities and to create a common identity.&lt;ref&gt;{{cite web|title=From War to Peace: A European Tale|url=https://www.nobelprize.org/nobel_prizes/peace/laureates/2012/eu-lecture_en.html|publisher=Nobel Lecture by the European Union|accessdate=4 January 2014|author=Herman Van Rompuy, President of the European Council|author2=Jos Manuel Duro Barroso, President of the European Commission|date=10 December 2012}}&lt;/ref&gt;

{{TOC limit}}

==Chronology==
{{See also|Timeline of World War II}}
{{WWII timeline}}
The start of the war in Europe is generally held to be 1 September 1939,{{sfn|Weinberg|2005|p=6}}&lt;ref&gt;Wells, Anne Sharp (2014) ''Historical Dictionary of World War II: The War against Germany and Italy''. Rowman &amp; Littlefield Publishing. pp. 7.&lt;/ref&gt; beginning with the [[Invasion of Poland|German invasion of Poland]]; Britain and France declared war on Germany two days later. The dates for the beginning of war in the Pacific include the start of the [[Second Sino-Japanese War]] on 7 July 1937,&lt;ref&gt;{{Cite book|first1=John|last1=Ferris|first2=Evan|last2=Mawdsley|title=The Cambridge History of the Second World War, Volume I: Fighting the War|location=[[Cambridge]]|language=English|publisher=[[Cambridge University Press]]|year=2015|ref=harv}}&lt;/ref&gt;{{sfn|Frster|Gessler|2005|p=64}} or even  the [[Japanese invasion of Manchuria]] on 19 September 1931.&lt;ref&gt;Ghuhl, Wernar (2007) ''Imperial Japan's World War Two'' Transaction Publishers pg 7, pg. 30&lt;/ref&gt;&lt;ref&gt;Polmar, Norman; Thomas B. Allen (1991) World War II: America at war, 19411945 {{ISBN|978-0394585307}}&lt;/ref&gt;

Others follow the British historian [[A. J. P. Taylor]], who held that the Sino-Japanese War and war in Europe and its colonies occurred simultaneously and the two wars merged in 1941. This article uses the conventional dating. Other starting dates sometimes used for World War&amp;nbsp;II include the [[Second Italo-Ethiopian War|Italian invasion of Abyssinia]] on 3 October 1935.&lt;ref&gt;{{Harvnb|Ben-Horin|1943|p=169}}; {{Harvnb|Taylor|1979|p=124}}; Yisreelit, Hevrah Mizrahit (1965). ''Asian and African Studies'', p. 191.&lt;br /&gt;For 1941 see {{Harvnb|Taylor|1961|p=vii}}; Kellogg, William O (2003). ''American History the Easy Way''. Barron's Educational Series. p. 236 {{ISBN|0-7641-1973-7}}.&lt;br /&gt;There is also the viewpoint that both World War&amp;nbsp;I and World War&amp;nbsp;II are part of the same &quot;[[European Civil War]]&quot; or &quot;[[Second Thirty Years War]]&quot;: {{Harvnb|Canfora|2006|p=155}}; {{Harvnb|Prins|2002|p=11}}.&lt;/ref&gt; The British historian [[Antony Beevor]] views the beginning of World War II as the [[Battles of Khalkhin Gol]] fought between Japan and the forces of [[Mongolia]] and the Soviet Union from May to September 1939.{{sfn|Beevor|2012|p=10}}

The exact date of the war's end is also not universally agreed upon. It was generally accepted at the time that the war ended with the [[armistice]] of 14 August 1945 ([[Victory over Japan Day|V-J Day]]), rather than the formal surrender of Japan (2 September 1945). A [[Treaty of San Francisco|peace treaty with Japan]] was signed in 1951.{{sfn|Masaya|1990|p=4}} A [[Treaty on the Final Settlement with Respect to Germany|treaty regarding Germany's future]] allowed the [[German reunification|reunification of East and West Germany]] to take place in 1990 and resolved other post-World War II issues.&lt;ref&gt;{{cite web|title=History of German-American Relations  19891994  Reunification  &quot;Two-plus-Four-Treaty&quot;: Treaty on the Final Settlement with Respect to Germany, September 12, 1990|url=http://usa.usembassy.de/etexts/2plusfour8994e.htm|publisher=usa.usembassy.de|accessdate=6 May 2012}}&lt;/ref&gt;

==Background==
{{Main article|Causes of World War II}}

===Europe===
[[World War I]] had radically altered the [[Geopolitics|political]] European map, with the defeat of the [[Central Powers]]including [[Austria-Hungary]], [[German Empire|Germany]], [[Kingdom of Bulgaria|Bulgaria]] and the [[Ottoman Empire]]and the 1917 [[Bolshevik]] [[October Revolution|seizure of power]] in [[Russian Republic|Russia]], which eventually led to the founding of the [[Soviet Union]]. Meanwhile, the victorious [[Allies of World War I]], such as France, Belgium, Italy, Romania and Greece gained territory, and new [[nation-states]] were created out of the collapse of Austria-Hungary and the Ottoman and [[Russian Empire]]s.

[[File:Bundesarchiv Bild 102-09042, Genf, Vlkerbund, Sitzungssaal.jpg|thumb|right|The [[League of Nations]] assembly, held in [[Geneva]], [[Switzerland]], 1930]]

To prevent a future world war, the [[League of Nations]] was created during the [[Paris Peace Conference, 1919|1919 Paris Peace Conference]]. The organisation's primary goals were to prevent armed conflict through [[collective security]], military and [[Washington Naval Treaty|naval disarmament]], and settling international disputes through peaceful negotiations and arbitration.

Despite strong [[pacifism|pacifist]] sentiment [[aftermath of World War I|after World War I]],{{sfn|Ingram|2006|pp=[https://books.google.com/books?id=bREQibN9i-sC&amp;pg=PA76 768]}} its aftermath still caused [[irredentist]] and [[revanchist]] [[nationalism]] in several European states. These sentiments were especially marked in Germany because of the significant territorial, colonial, and financial losses incurred by the [[Treaty of Versailles]]. Under the treaty, Germany lost around 13 per cent of its home territory and all of [[German colonial empire|its overseas possessions]], while German annexation of other states was prohibited, [[World War I reparations|reparations]] were imposed, and limits were placed on the size and capability of the country's [[Reichswehr|armed forces]].{{sfn|Kantowicz|1999|p=149}}

The German Empire was dissolved in the [[German Revolution of 19181919]], and a democratic government, later known as the [[Weimar Republic]], was created. The interwar period saw strife between supporters of the new republic and hardline opponents on both the [[right-wing politics|right]] and [[left-wing politics|left]]. Italy, as an Entente ally, had made some post-war territorial gains; however, Italian nationalists were angered that the [[Treaty of London (1915)|promises made]] by Britain and France to secure Italian entrance into the war were not fulfilled in the peace settlement. From 1922 to 1925, the [[Italian Fascism|Fascist]] movement led by [[Benito Mussolini]] seized power in Italy with a nationalist, [[Totalitarianism|totalitarian]], and [[class collaboration]]ist agenda that abolished representative democracy, repressed socialist, left-wing and liberal forces, and pursued an aggressive expansionist foreign policy aimed at making Italy a [[world power]], promising the creation of a &quot;[[New Roman Empire]]&quot;.{{sfn|Shaw|2000|p=35}}

[[File:Bundesarchiv Bild 102-10541, Weimar, Aufmarsch der Nationalsozialisten.jpg|thumb|left|[[Adolf Hitler]] at a German [[National Socialist]] political rally in [[Weimar]], October 1930]]

Adolf Hitler, after an [[Beer Hall Putsch|unsuccessful attempt to overthrow the German government]] in 1923, eventually became the [[Adolf Hitler's rise to power|Chancellor of Germany in 1933]]. He abolished democracy, espousing a [[New Order (Nazism)|radical, racially motivated revision of the world order]], and soon began a massive [[German re-armament|rearmament campaign]].{{sfn|Brody|1999|p=4}} Meanwhile, France, to secure its alliance, [[Franco-Italian Agreement|allowed Italy a free hand in Ethiopia]], which Italy desired as a colonial possession. The situation was aggravated in early 1935 when the [[Saar (League of Nations)|Territory of the Saar Basin]] was legally reunited with Germany and Hitler repudiated the Treaty of Versailles, accelerated his rearmament programme, and introduced [[conscription]].{{sfn|Zalampas|1989|p=62}}

To contain Germany, the United Kingdom, France and Italy formed the [[Stresa Front]] in April 1935; however, that June, the United Kingdom made an [[Anglo-German Naval Agreement|independent naval agreement]] with Germany, easing prior restrictions. The Soviet Union, concerned by [[Drang nach Osten|Germany's goals of capturing vast areas of Eastern Europe]], drafted a treaty of mutual assistance with France. Before taking effect though, the [[Franco-Soviet pact]] was required to go through the bureaucracy of the League of Nations, which rendered it essentially toothless.&lt;ref&gt;{{Harvnb|Mandelbaum|1988|p=96}}; {{Harvnb|Record|2005|p=50}}.&lt;/ref&gt; The United States, concerned with events in Europe and Asia, passed the [[Neutrality Acts of 1930s|Neutrality Act]] in August of the same year.{{sfn|Schmitz|2000|p=124}}

Hitler defied the Versailles and [[Locarno treaties]] by [[Remilitarization of the Rhineland|remilitarising]] the [[Rhineland]] in March 1936, encountering little opposition.{{sfn|Adamthwaite|1992|p=52}} In October 1936, Germany and Italy formed the [[RomeBerlin Axis]]. A month later, Germany and Japan signed the [[Anti-Comintern Pact]], which Italy would join in the following year.

===Asia===
The [[Kuomintang]] (KMT) party in China launched a [[Northern Expedition|unification campaign]] against [[Warlord Era|regional warlords]] and nominally unified China in the mid-1920s, but was soon embroiled in a [[Chinese Civil War|civil war]] against its former [[Chinese Communist Party]] allies{{sfn|Preston|1998|p=104}} and [[Central Plains War|new regional warlords]]. In 1931, an [[Statism in Shwa Japan|increasingly militaristic]] [[Empire of Japan]], which had long sought influence in China{{sfn|Myers|Peattie|1987|p=458}} as the first step of what its government saw as the country's [[Hakko ichiu|right to rule Asia]], used the [[Mukden Incident]] as a pretext to [[Japanese invasion of Manchuria|launch an invasion of Manchuria]] and establish the [[puppet state]] of [[Manchukuo]].{{sfn|Smith|Steadman|2004|p=28}}

Too weak to resist Japan, China appealed to the [[League of Nations]] for help. Japan withdrew from the League of Nations after being [[Lytton Report|condemned]] for its incursion into Manchuria. The two nations then fought several battles, in [[28 January Incident|Shanghai]], [[Battle of Rehe|Rehe]] and [[Defense of the Great Wall|Hebei]], until the [[Tanggu Truce]] was signed in 1933. Thereafter, Chinese volunteer forces continued the resistance to Japanese aggression in [[Pacification of Manchukuo|Manchuria]], and [[Actions in Inner Mongolia (19331936)|Chahar and Suiyuan]].&lt;ref&gt;{{Harvnb|Coogan|1993}}: &quot;Although some Chinese troops in the Northeast managed to retreat south, others were trapped by the advancing Japanese Army and were faced with the choice of resistance in defiance of orders, or surrender. A few commanders submitted, receiving high office in the puppet government, but others took up arms against the invader. The forces they commanded were the first of the volunteer armies.&quot;&lt;/ref&gt; After the 1936 [[Xi'an Incident]], the Kuomintang and communist forces agreed on a ceasefire to present a [[Second United Front|united front]] to oppose Japan.{{sfn|Busky|2002|p=10}}

==Pre-war events==

===Italian invasion of Ethiopia (1935)===
{{Main article|Second Italo-Ethiopian War}}

[[File:Soldatietiopia.jpg|thumb|left|Italian soldiers recruited in 1935, on their way to fight the [[Second Italo-Abyssinian War]]]]

The Second ItaloAbyssinian War was a brief [[colonial war]] that began in October 1935 and ended in May 1936. The war began with the invasion of the [[Ethiopian Empire]] (also known as [[Names of Ethiopia|Abyssinia]]) by the armed forces of the [[Kingdom of Italy]] (''Regno d'Italia''), which was launched from [[Italian Somaliland]] and [[Italian Eritrea|Eritrea]].&lt;ref&gt;{{cite book|url=https://books.google.com/books?id=GtCL2OYsH6wC&amp;printsec=frontcover#v=onepage&amp;q&amp;f=false |title=Cultural Sociology of the Middle East, Asia, and Africa: An Encyclopedia |author1=Andrea L. Stanton |author2=Edward Ramsamy |author3=Peter J. Seybolt |page=308 |accessdate=2014-04-06|isbn=9781412981767 |date=2012-01-05 }}&lt;/ref&gt; The war resulted in the [[military occupation]] of Ethiopia and its [[annexation]] into the newly created colony of [[Italian East Africa]] (''Africa Orientale Italiana'', or AOI); in addition it exposed the weakness of the [[League of Nations]] as a force to preserve peace. Both Italy and Ethiopia were member nations, but the League did nothing when the former clearly violated the League's [[Article X of the Covenant of the League of Nations|Article X]].{{sfn|Barker|1971|pp=1312}} Germany was the only major European nation to support the invasion. Italy subsequently dropped its objections to Germany's goal of absorbing [[Federal State of Austria|Austria]].{{sfn|Kitson|2001|p=231}}

===Spanish Civil War (193639)===
{{Main article|Spanish Civil War}}

[[File:Bundesarchiv Bild 183-H25224, Guernica, Ruinen.jpg|thumb|The [[bombing of Guernica]] in 1937, during the [[Spanish Civil War]], sparked Europe-wide fears that the next war would be based on bombing of cities with very high civilian casualties]]

When civil war broke out in Spain, Hitler and Mussolini lent military support to the [[Nationalist faction (Spanish Civil War)|Nationalist rebels]], led by General [[Francisco Franco]]. The Soviet Union supported the existing government, the [[Second Spanish Republic|Spanish Republic]]. Over 30,000 foreign volunteers, known as the [[International Brigades]], also fought against the Nationalists. Both Germany and the USSR used this [[proxy war]] as an opportunity to test in combat their most advanced weapons and tactics.  The Nationalists won the civil war in April 1939; Franco, now dictator, remained officially neutral during Second World War but generally favoured the Axis.{{sfn|Payne|2008|page=271}} His greatest collaboration with Germany was the sending of [[Blue Division|volunteers]] to fight on the [[Eastern Front (World War II)|Eastern Front]].{{sfn|Payne|2008|page=146}}

===Japanese invasion of China (1937)===
{{Main article|Second Sino-Japanese War}}
[[File:Shanghai1937IJA ruins.jpg|thumb|left|[[Japanese Imperial Army]] soldiers during the [[Battle of Shanghai]], 1937]]

In July 1937, Japan captured the former Chinese imperial capital of [[Peking]] after instigating the [[Marco Polo Bridge Incident]], which culminated in the Japanese campaign to invade all of China.{{sfn|Eastman|1986|pp=54751}} The Soviets quickly signed a [[Sino-Soviet Non-Aggression Pact|non-aggression pact with China]] to lend [[materiel]] support, effectively ending China's prior [[Sino-German cooperation 19261941|co-operation with Germany]]. From September to November, the Japanese attacked [[Battle of Taiyuan|Taiyuan]],&lt;ref name=&quot;Guo 1971 221&quot;&gt;{{Harvnb|Guo|2005}}&lt;/ref&gt;&lt;ref name=&quot;Hsu &amp; Chang 1971 221&quot;&gt;{{Harvnb|Hsu|Chang|1971|pp=195200}}.&lt;/ref&gt; as well as engaging the [[National Revolutionary Army|Kuomintang Army]] [[Battle of Xinkou|around Xinkou]]&lt;ref name=&quot;Guo 1971 221&quot;/&gt;&lt;ref name=&quot;Hsu &amp; Chang 1971 221&quot;/&gt; and [[Communist Party of China|Communist forces]] [[battle of Pingxingguan|in Pingxingguan]].&lt;ref name=Tucker2009&gt;{{cite web|url=https://books.google.com/books?id=h5_tSnygvbIC&amp;pg=PA1873|title=A Global Chronology of Conflict: From the Ancient World to the Modern Middle East [6 volumes]: From the Ancient World to the Modern Middle East|first=Spencer C.|last=Tucker|date=23 December 2009|publisher=ABC-CLIO|accessdate=27 August 2017|via=Google Books}}&lt;/ref&gt;&lt;ref name=yang&gt;Yang Kuisong, &quot;On the reconstruction of the facts of the Battle of Pingxingguan&quot;&lt;/ref&gt; [[Generalissimo]] [[Chiang Kai-shek]] deployed his [[German-trained divisions in the National Revolutionary Army|best army]] to [[Battle of Shanghai|defend Shanghai]], but, after three months of fighting, Shanghai fell. The Japanese continued to push the Chinese forces back, [[Battle of Nanking|capturing the capital Nanking]] in December 1937. After the fall of Nanking, tens of thousands if not hundreds of thousands of Chinese civilians and disarmed combatants were [[Nanking Massacre|murdered by the Japanese]].&lt;ref&gt;Levene, Mark and Roberts, Penny. ''The Massacre in History''. 1999, page 223-4&lt;/ref&gt;&lt;ref name=tot&gt;Totten, Samuel. ''Dictionary of Genocide''. 2008, 2989.&lt;/ref&gt;

In March 1938, Nationalist Chinese forces won their [[Battle of Taierzhuang|first major victory at Taierzhuang]] but then the city of [[Xuzhou]] [[Battle of Xuzhou|was taken by Japanese]] in May.{{sfn|Hsu|Chang|1971|pp=221230}} In June 1938, Chinese forces stalled the Japanese advance by [[1938 Yellow River flood|flooding the Yellow River]]; this manoeuvre bought time for the Chinese to prepare their defences at [[Wuhan]], but the [[Battle of Wuhan|city was taken]] by October.{{sfn|Eastman|1986|p=566}} Japanese military victories did not bring about the collapse of Chinese resistance that Japan had hoped to achieve; instead the Chinese government relocated inland to [[Chongqing]] and continued the war.{{sfn|Taylor|2009|pp=1502}}{{sfn|Sella|1983|pp=65187}}

===SovietJapanese border conflicts===
[[File:Battle of Lake Khasan-Red Army gunners in the interval.jpg|thumb|[[Red Army]] artillery unit during the [[Battle of Lake Khasan]], 1938]]
{{Main article|SovietJapanese border conflicts}}
In the mid-to-late 1930s, Japanese forces in [[Manchukuo]] had sporadic border clashes with the Soviet Union and the [[Mongolian People's Republic]]. The Japanese doctrine of [[Hokushin-ron]], which emphasised Japan's expansion northward, was favoured by the Imperial Army during this time. With the Japanese defeat at [[Battles of Khalkhin Gol|Khalkin Gol]] in 1939, the ongoing Second Sino-Japanese War{{sfn|Beevor|2012|p=342}} and ally Nazi Germany pursuing neutrality with the Soviets, this policy would prove difficult to maintain. Japan and the Soviet Union eventually signed a [[SovietJapanese Neutrality Pact|Neutrality Pact]] in April 1941, and Japan adopted the doctrine of [[Nanshin-ron]], promoted by the Navy, which took its focus southward, eventually leading to its war with the United States and the Western Allies.&lt;ref&gt;{{cite web |author=Goldman, Stuart D. |date=28 August 2012 |title=The Forgotten Soviet-Japanese War of 1939 |accessdate=26 June 2015 |publisher=The Diplomat |url=http://thediplomat.com/2012/08/the-forgotten-soviet-japanese-war-of-1939/}}&lt;/ref&gt;&lt;ref&gt;{{cite web |author=Timothy Neeno |accessdate=26 June 2015 |title=Nomonhan: The Second Russo-Japanese War |publisher=MilitaryHistoryOnline.com |url=http://www.militaryhistoryonline.com/20thcentury/articles/nomonhan.aspx}}&lt;/ref&gt;

===European occupations and agreements===
{{Further information|Anschluss|Appeasement|Munich Agreement|German occupation of Czechoslovakia|MolotovRibbentrop Pact}}

[[File:Bundesarchiv Bild 183-R69173, Mnchener Abkommen, Staatschefs.jpg|left|thumb|[[Neville Chamberlain|Chamberlain]], [[douard Daladier|Daladier]], [[Hitler]], [[Benito Mussolini|Mussolini]], and [[Galeazzo Ciano|Ciano]] pictured just before signing the [[Munich Agreement]], 29 September 1938]]

In Europe, Germany and Italy were becoming more aggressive. In March 1938, Germany [[Anschluss|annexed Austria]], again provoking [[Appeasement of Hitler|little response]] from other European powers.{{sfn|Collier|Pedley|2000|p=144}} Encouraged, Hitler began pressing German claims on the [[Sudetenland]], an area of [[Czechoslovakia]] with a predominantly [[ethnic German]] population; and soon Britain and France followed the counsel of British Prime Minister [[Neville Chamberlain]] and conceded this territory to Germany in the [[Munich Agreement]], which was made against the wishes of the Czechoslovak government, in exchange for a promise of no further territorial demands.{{sfn|Kershaw|2001|pp=1212}} Soon afterwards, Germany and Italy forced Czechoslovakia to [[First Vienna Award|cede additional territory]] to [[Hungary]] and Poland annexed Czechoslovakia's [[Zaolzie]] region.{{sfn|Kershaw|2001|p=157}}

Although all of Germany's stated demands had been satisfied by the agreement, privately Hitler was furious that British interference had prevented him from seizing all of Czechoslovakia in one operation. In subsequent speeches Hitler attacked British and Jewish &quot;war-mongers&quot; and in January 1939 [[Plan Z|secretly ordered a major build-up of the German navy]] to challenge British naval supremacy. In March 1939, [[German occupation of Czechoslovakia|Germany invaded the remainder of Czechoslovakia]] and subsequently split it into the German [[Protectorate of Bohemia and Moravia]] and a pro-German [[client state]], the [[Slovak Republic (19391945)|Slovak Republic]].{{sfn|Davies|2006|loc=pp. 1434 (2008 ed.)}} Hitler also delivered [[1939 German ultimatum to Lithuania|an ultimatum]] to Lithuania, forcing the concession of the [[Klaipda Region]].

Greatly alarmed and with Hitler making further demands on the [[Free City of Danzig]], Britain and France [[Anglo-Polish military alliance#British Guarantee to Poland|guaranteed their support for Polish independence]]; when [[Italian invasion of Albania|Italy conquered Albania]] in April 1939, the same guarantee was extended to Romania and [[Greece]].{{sfn|Lowe|Marzari|2002|p=330}} Shortly after the [[Franco-Polish Military Alliance|Franco]]-British pledge to Poland, Germany and Italy formalised their own alliance with the [[Pact of Steel]].{{sfn|Dear|Foot|2001|p=234}} Hitler accused Britain and Poland of trying to &quot;encircle&quot; Germany and renounced the [[Anglo-German Naval Agreement]] and the [[GermanPolish Non-Aggression Pact]].

[[File:Bundesarchiv Bild 183-H27337, Moskau, Stalin und Ribbentrop im Kreml.jpg|right|thumb|upright|German Foreign Minister [[Joachim von Ribbentrop]] (right) and the Soviet leader [[Joseph Stalin]], after signing the [[MolotovRibbentrop Pact]], 23 August 1939]]

In August 1939, Germany and the Soviet Union signed the [[MolotovRibbentrop Pact]],{{sfn|Shore|2003|p=108}} a non-aggression treaty with a secret protocol. The parties gave each other rights to &quot;spheres of influence&quot; (western [[Second Polish Republic|Poland]] and [[Lithuania]] for Germany; [[Territories of Poland annexed by the Soviet Union|eastern Poland]], Finland, [[Estonia]], Latvia and [[Bessarabia]] for the USSR). It also raised the question of continuing Polish independence.{{sfn|Dear|Foot|2001|p=608}} The agreement was crucial to Hitler because it assured that Germany would not have to face the prospect of a two-front war, as it had in World War I, after it defeated Poland.

The situation reached a general crisis in late August as German troops continued to mobilise against the Polish border. In a private meeting with the Italian foreign minister, [[Count Ciano]], Hitler asserted that Poland was a &quot;doubtful neutral&quot; that needed to either yield to his demands or be &quot;liquidated&quot; to prevent it from drawing off German troops in the future &quot;unavoidable&quot; war with the Western democracies. He did not believe Britain or France would intervene in the conflict.&lt;ref&gt;[http://avalon.law.yale.edu/imt/1871-ps.asp Minutes of the conference between the Fuehrer and the Italian Minister for Foreign Affairs, Count Ciano, in the presence of the Reich Foreign Minister of Obersalzberg on 12 August 1939] in Nazi Conspiracy and Aggression Volume IV
Document No. 1871-PS&lt;/ref&gt; On 23 August Hitler ordered the attack to proceed on 26 August, but upon hearing that Britain had concluded a formal mutual assistance pact with Poland and that Italy would maintain neutrality, he decided to delay it.&lt;ref&gt;{{cite web|url=http://www.ibiblio.org/hyperwar/USA/DAP-Poland/Campaign-II.html#chapter5|title=The German Campaign In Poland (1939)|publisher=|accessdate=29 October 2014}}&lt;/ref&gt;

In response to British requests for direct negotiations to avoid war, Germany made demands on Poland, which only served as a pretext to worsen relations.&lt;ref name=ww2db_com&gt;{{cite web |url=http://ww2db.com/battle_spec.php?battle_id=162 |title=The Danzig Crisis |website=ww2db.com}}&lt;/ref&gt; On 29 August, Hitler demanded that a Polish [[plenipotentiary]] immediately travel to Berlin to negotiate the handover of [[Danzig]], and to allow a [[plebiscite]] in the [[Polish Corridor]] in which the German minority would vote on secession.&lt;ref name=ww2db_com/&gt; The Poles refused to comply with the German demands and on the night of 3031 August in a violent meeting with the British ambassador [[Neville Henderson]], Ribbentrop declared that Germany considered its claims rejected.&lt;ref name=ibiblio1939&gt;{{cite web |title=Major international events of 1939, with explanation |url=http://www.ibiblio.org/pha/events/1939.html |publisher=Ibiblio.org}}&lt;/ref&gt;

==Course of the war==
{{further information|Diplomatic history of World War II}}

===War breaks out in Europe (193940)===
{{Main article|Invasion of Poland|Phoney War|Occupation of Poland (193945)|Nazi crimes against the Polish nation|Soviet invasion of Poland|Soviet repressions of Polish citizens (19391946)}}
[[File:Germans at Polish Border (1939-09-01).jpg|thumb|left|Soldiers of the German [[Wehrmacht]] tearing down the border crossing between [[Second Polish Republic|Poland]] and the [[Free City of Danzig]], 1 September 1939]]

On 1 September 1939, Germany [[Invasion of Poland|invaded Poland]] under the false pretext that the Poles had carried out a series of [[Gleiwitz incident|sabotage operations]] against German targets near the border.{{sfn|Evans|2008|pp=12}} Two days later, on 3 September, after a British ultimatum to Germany to cease military operations was ignored, Britain and France, followed by the fully independent [[Dominion]]s&lt;!--With the State of Westminster (1931), the UK recognised that the Dominions (at the time, Australia, Canada, New Zealand and South Africa) were _equal_ and _independent_ members of the &quot;British Commonwealth&quot;.--&gt;{{sfn|Jackson|2006|p=58}} of the [[Commonwealth of Nations|British Commonwealth]]&lt;!--&quot;British Commonwealth&quot; was the official name between 1926 and 1949.--&gt;{{sfn|Weinberg|2005|pages=645}}[[Australia]] (3 September), [[Canada]] (10 September), [[New Zealand]] (3 September), and [[South Africa]] (6 September)declared war on Germany. However, initially the alliance provided [[Phoney War|limited direct military support]] to Poland, consisting of a [[Saar Offensive|cautious, half-hearted French probe into the Saarland]].&lt;ref name=&quot;Keegan 1997 35&quot;&gt;{{Harvnb|Keegan|1997|p=35}}.&lt;br /&gt;{{Harvnb|Cienciala|2010|p=128}}, observes that, while it is true that Poland was far away, making it difficult for the French and British to provide support, &quot;[f]ew Western historians of World War II&amp;nbsp;... know that the British had committed to bomb Germany if it attacked Poland, but did not do so except for one raid on the base of Wilhelmshafen. The French, who committed to attack Germany in the west, had no intention of doing so.&quot;&lt;/ref&gt; The [[Allies of World War II|Western Allies]] also began a [[Blockade of Germany (193945)|naval blockade of Germany]], which aimed to damage the country's economy and war effort.&lt;ref&gt;{{Harvnb|Beevor|2012|p=32}}; {{Harvnb|Dear|Foot|2001|pp=2489}}; {{Harvnb|Roskill|1954|p=64}}.&lt;/ref&gt; Germany responded by ordering [[Submarine warfare#World War II|U-boat warfare]] against Allied merchant and warships, which was to later escalate into the [[Battle of the Atlantic]].

[[File:Bundesarchiv Bild 146-1976-071-36, Polen, an der Brahe, deutsche Panzer.jpg|right|thumb|German tanks near the city of [[Bydgoszcz]], during the [[Invasion of Poland]] September, 1939]]

On 17 September 1939, after signing a [[Battles of Khalkhin Gol|cease-fire with Japan]], the [[Soviet invasion of Poland|Soviets invaded Poland]] from the east.{{sfn|Zaloga|2002|pp=80, 83}} The Polish army was defeated and [[Battle of Warsaw (1939)|Warsaw surrendered]] to the Germans on 27 September with final pockets of resistance surrendering on 6 October. Poland's territory was divided between [[Polish areas annexed by Nazi Germany|Germany]] and the [[Territories of Poland annexed by the Soviet Union|Soviet Union]], with [[Territorial changes of Poland#World War II|Lithuania]] and [[Slovak invasion of Poland (1939)|Slovakia]] also receiving small shares. After the defeat of Poland's armed forces, the Polish resistance established an [[Polish Underground State|Underground State]] and a partisan [[Home Army]].{{sfn|Hempel|2005|p=24}} About 100,000 Polish military personnel were [[Romanian Bridgehead|evacuated to Romania]] and the Baltic countries; many of these soldiers later fought against the Germans in other theatres of the war.{{sfn|Zaloga|2002|pp=889}} [[Biuro Szyfrw|Poland's Enigma codebreakers]] were also evacuated to France.{{sfn|Budiansky|2001|pp=1201}}

On 6 October, Hitler made a public peace overture to Britain and France, but said that the future of Poland was to be determined exclusively by Germany and the Soviet Union. Chamberlain rejected this on 12 October, saying &quot;Past experience has shown that no reliance can be placed upon the promises of the present German Government.&quot;&lt;ref name=ibiblio1939/&gt; After this rejection Hitler ordered an immediate offensive against France,&lt;ref&gt;Nuremberg Documents C-62/GB86, a directive from Hitler in October 1939 which concludes: &quot;The attack [on France] is to be launched this Autumn if conditions are at all possible.&quot;&lt;/ref&gt; but bad weather forced repeated postponements until the spring of 1940.{{sfn|Liddell Hart|1977|pp=3940}}{{sfn|Bullock|1990|loc=pp. 5634, 566, 5689, 5745 (1983 ed.)}}&lt;ref&gt;Blitzkrieg: From the Rise of Hitler to the Fall of Dunkirk, L Deighton, Jonathan Cape, 1993, p186-7. Deighton states that &quot;the offensive was postponed twenty-nine times before it finally took place.&quot;&lt;/ref&gt;

[[File:Spotkanie Sojusznikw.jpg|thumb|left|German and Soviet army officers pictured shaking handsafter [[Nazi Germany]] and [[Soviet Union]] annexed new territories in [[Eastern Europe]], 1939]]

After signing the [[GermanSoviet Frontier Treaty|GermanSoviet Treaty of Friendship, Cooperation and Demarcation]], the Soviet Union forced the [[Baltic states|Baltic countries]]Estonia, Latvia and Lithuaniato allow it [[Occupation of Baltic states#Ultimatums to Estonia, Latvia, Lithuania|to station Soviet troops in their countries under pacts of &quot;mutual assistance&quot;]].{{sfn|Smith|Pabriks|Purs|Lane|2002|p=24}}{{sfn|Bilinsky|1999|p=9}}{{sfn|Murray|Millett|2001|pp=556}} Finland rejected territorial demands, prompting a Soviet invasion in November 1939.{{sfn|Spring|1986|p=207-226}} The resulting [[Winter War]] ended in March 1940 with [[Moscow Peace Treaty|Finnish concessions]].{{sfn|Hanhimki|1997|p=12}} Britain and France, treating the Soviet attack on Finland as tantamount to its entering the war on the side of the Germans, responded to the Soviet invasion by supporting the USSR's expulsion from the League of Nations.{{sfn|Murray|Millett|2001|pp=556}}

In June 1940, the Soviet Union forcibly annexed [[Soviet occupation of the Baltic states (1940)|Estonia, Latvia and Lithuania]],{{sfn|Bilinsky|1999|p=9}} and the disputed Romanian regions of [[Soviet occupation of Bessarabia and Northern Bukovina|Bessarabia, Northern Bukovina and Hertza]]. Meanwhile, Nazi-Soviet political rapprochement and economic co-operation{{sfn|Ferguson|2006|pp=367, 376, 379, 417}}{{sfn|Snyder|2010|p=118ff}} gradually stalled,{{sfn|Koch|1983}}{{page needed|date=July 2016}}{{sfn|Roberts|2006|p=56}} and both states began preparations for war.{{sfn|Roberts|2006|p=59}}

===Western Europe (194041)===
{{main|Western Front (World War II)}}
[[File:Maginot Line ln-en svg.svg|thumb|upright=1.5|Map of the French [[Maginot Line]]]]

In April 1940, [[Operation Weserbung|Germany invaded Denmark and Norway]] to protect shipments of [[Swedish iron-ore mining during World War II|iron ore from Sweden]], which the Allies were [[Operation Wilfred|attempting to cut off]] by unilaterally mining neutral Norwegian waters.&lt;ref&gt;{{Harvnb|Murray|Millett|2001|pp=5763}}.&lt;/ref&gt; [[Denmark]] capitulated after a few hours, and [[Norwegian Campaign|despite Allied support]], during which the important harbour of [[Narvik]] temporarily was recaptured from the Germans, [[Norway]] was conquered within two months.{{sfn|Commager|2004|p=9}} [[Norway Debate|British discontent over the Norwegian campaign]] led to the replacement of the British Prime Minister, [[Neville Chamberlain]], with [[Winston Churchill]] on 10 May 1940.{{sfn|Reynolds|2006|p=76}}

Germany [[Battle of France|launched an offensive against France]] and, adhering to the [[Manstein Plan]] also attacked the neutral nations of [[Battle of Belgium|Belgium]], [[Battle of the Netherlands|the Netherlands]], and [[German invasion of Luxembourg|Luxembourg]] on 10 May 1940.{{sfn|Evans|2008|pp=1223}} That same day British forces landed in [[Invasion of Iceland|Iceland]] and the [[British occupation of the Faroe Islands|Faroes]] to preempt a possible German invasion of the islands.&lt;ref&gt;{{Harvnb|Dear|Foot|2001|p=436}}. The Americans later relieved the British, with marines arriving in Reykjavik on 7 July 1941 ({{Harvnb|Schofield|1981|p=122}}).&lt;/ref&gt; The U.S., in close co-operation with [[Henrik Kauffmann|the Danish envoy to Washington D.C.]], agreed to protect [[Greenland in World War II|Greenland]], laying the political framework for the formal establishment of bases in April 1941. The [[Netherlands in World War II|Netherlands]] and [[Belgium in World War II|Belgium]] were overrun using [[blitzkrieg]] tactics in a few days and weeks, respectively.{{sfn|Shirer|1990|pp=7213}} The French-fortified [[Maginot Line]] and the main body of the Allied forces which had moved into Belgium were circumvented by a flanking movement through the thickly wooded [[Ardennes]] region,{{sfn|Keegan|1997|pp=5960}} mistakenly perceived by Allied planners as an impenetrable natural barrier against armoured vehicles.{{sfn|Regan|2004|p=152}}{{sfn|Liddell Hart|1977|p=48}} As a result, the bulk of the Allied armies found themselves trapped in an encirclement and were beaten. The majority were taken prisoner, whilst over 300,000, mostly British and French, were [[Dunkirk evacuation|evacuated from the continent at Dunkirk]] by early June, although abandoning almost all of their equipment.{{sfn|Keegan|1997|pp=667}}

On 10 June, [[Italian invasion of France|Italy invaded France]], declaring war on both France and the United Kingdom.{{sfn|Overy|Wheatcroft|1999|p=207}} Paris fell to the Germans on 14 June and eight days later [[Armistice of 22 June 1940|France signed an armistice with Germany]] and was soon divided into [[German military administration in occupied France during World War II|German]] and [[Italian occupation of France|Italian occupation zones]],{{sfn|Umbreit|1991|p=311}} and an unoccupied [[rump state]] under the [[Vichy Regime]], which, though officially neutral, was generally aligned with Germany. France kept its fleet but the British feared the Germans would seize it, so on 3 July, the British [[Attack on Mers-el-Kbir|attacked it]].{{sfn|Brown|2004|p=xxx}}

[[File:View from St Paul's Cathedral after the Blitz.jpg|left|thumb|View of [[London]] after the German [[The Blitz|''Blitz'']], 29 December 1940]]
The [[Battle of Britain]]{{sfn|Keegan|1997|p=[https://books.google.com/books?id=TF8kcx9hTssC&amp;pg=PA72 72]}} began in early July with [[Kanalkampf|Luftwaffe attacks on shipping and harbours]].&lt;ref name=Murray_BoB&gt;{{harvnb|Murray|1983|loc=[http://www.ibiblio.org/hyperwar/AAF/AAF-Luftwaffe/AAF-Luftwaffe-2.html#cn70 The Battle of Britain].}}&lt;/ref&gt; On 19 July, Hitler again publicly offered to end the war, saying he had no desire to destroy the [[British Empire]]. The United Kingdom rejected this ultimatum.&lt;ref name=ibiblio_1940&gt;{{cite web |title=Major international events of 1940, with explanation |url= http://www.ibiblio.org/pha/events/1940.html |publisher=Ibiblio.org |accessdate=}}&lt;/ref&gt; The main [[Adlertag|German air superiority campaign]] started in August but failed to defeat [[RAF Fighter Command]], and a [[Operation Sea Lion|proposed invasion]] was postponed indefinitely on 17 September. The German [[strategic bombing]] offensive intensified as night attacks on London and other cities in [[the Blitz]], but largely failed to disrupt the British war effort.{{r|Murray_BoB}}
[[File:Heinkel He 111 during the Battle of Britain.jpg|thumb|German [[Luftwaffe]], [[Heinkel He 111]] bombers during the [[Battle of Britain]]]]

Using newly captured French ports, the German Navy [[Battle of the Atlantic#'Happy Time' (June 1940&amp;nbsp; February 1941)|enjoyed success]] against an over-extended [[Royal Navy]], using [[U-boat]]s against British shipping in the [[Battle of the Atlantic|Atlantic]].&lt;ref&gt;{{Harvnb|Goldstein|2004|p=35}}. Aircraft played a highly important role in defeating the German U-boats ({{Harvnb|Schofield|1981|p=122}}).&lt;/ref&gt; &lt;!-- REFERENCES NEEDED FOR THIS --&gt; The British scored a significant victory on 27 May 1941 by [[Last battle of the battleship Bismarck|sinking the German battleship ''Bismarck'']].&lt;ref&gt;{{Harvnb|Steury|1987|p=209}}; {{Harvnb|Zetterling|Tamelander|2009|p=282}}.&lt;/ref&gt; Perhaps most importantly, during the Battle of Britain the [[Royal Air Force]] had successfully resisted the Luftwaffe's assault, and the German bombing campaign largely ended in May 1941.{{sfn|Dear|Foot|2001|pp=1089}}

Throughout this period, the neutral United States took measures to assist China and the Western Allies. In November 1939, the American [[Neutrality Acts of 1930s|Neutrality Act]] was amended to allow [[Cash and carry (World War II)|&quot;cash and carry&quot;]] purchases by the Allies.{{sfn|Overy|Wheatcroft|1999|pp=32830}} In 1940, following the German capture of Paris, the size of the [[United States Navy]] was [[Two-Ocean Navy Act|significantly increased]]. In September, the United States further agreed to a [[Destroyers for Bases Agreement|trade of American destroyers for British bases]].{{sfn|Maingot|1994|p=52}} Still, a large majority of the American public continued to oppose any direct military intervention into the conflict well into 1941.{{sfn|Cantril|1940|p=390}}

Although Roosevelt had promised to keep the United States out of the war, he nevertheless took concrete steps to prepare for war. In December 1940 he accused Hitler of planning world conquest and ruled out negotiations as useless, calling for the US to become an &quot;[[Arsenal of Democracy|arsenal of democracy]]&quot; and promoted the passage of [[Lend-Lease]] aid to support the British war effort.{{r|ibiblio_1940}} In January 1941 secret high level staff talks with the British began for the purposes of determining how to defeat Germany should the US enter the war. They decided on a number of offensive policies, including an air offensive, the &quot;early elimination&quot; of Italy, raids, support of resistance groups, and the capture of positions to launch an offensive against Germany.&lt;ref&gt;{{cite web |author=Skinner Watson, Mark |title=Coordination With Britain |website=US Army in WWII  Chief of Staff: Prewar Plans and Operations |url=http://www.ibiblio.org/hyperwar/USA/USA-WD-Plans/USA-WD-Plans-12.html}}&lt;/ref&gt;

At the end of September 1940, the [[Tripartite Pact]] united Japan, Italy and Germany to formalise the [[Axis Powers]]. The Tripartite Pact stipulated that any country, with the exception of the Soviet Union, not in the war which attacked any Axis Power would be forced to go to war against all three.{{Sfn|Bilhartz|Elliott|2007|p=179}} The Axis expanded in November 1940 when Hungary, Slovakia and [[Kingdom of Romania|Romania]] joined the Tripartite Pact.{{Sfn|Dear|Foot|2001|p=877}} Romania would make a [[Romania in World War II|major contribution]] (as [[Hungary in World War II|did Hungary]]) to the Axis war against the USSR, partially to recapture [[Soviet occupation of Bessarabia and Northern Bukovina|territory ceded to the USSR]], partially to pursue its leader [[Ion Antonescu]]'s desire to combat communism.{{Sfn|Dear|Foot|2001|pp=7456}}

===Mediterranean (194041)===
{{main article|Mediterranean and Middle East theatre of World War II}}
[[File:9 Div Tobruk(AWM 020779).jpg|thumb|right|Soldiers of the [[British Empire in World War II|British Commonwealth forces]] from the Australian Army's [[9th Division (Australia)|9th Division]]  during the [[Siege of Tobruk]]; [[North African Campaign]], August 1941]]

Italy began operations in the Mediterranean, initiating a [[Siege of Malta (World War II)|siege of Malta]] in June, [[Italian conquest of British Somaliland|conquering British Somaliland]] in August, and [[Italian invasion of Egypt|making an incursion into British-held Egypt]] in September 1940. In October 1940, Italy started the [[Greco-Italian War]] because of Mussolini's jealousy of Hitler's success but within days was repulsed with few territorial gains and a stalemate soon occurred.{{sfn|Clogg|2002|p=118}} The United Kingdom responded to Greek requests for assistance by sending troops to Crete and providing air support to Greece. Hitler decided that when the weather improved he would take action against Greece to assist the Italians and prevent the British from gaining a foothold in the Balkans, to strike against the British naval dominance of the Mediterranean, and to secure his hold on Romanian oil.&lt;ref&gt;{{Harvnb|Evans|2008|pp=146, 152}}; {{Harvnb|US Army|1986|pp=[http://www.history.army.mil/books/wwii/balkan/20_260_1.htm 46]}}&lt;/ref&gt;

In December 1940, British Commonwealth forces began counter-offensives against [[Operation Compass|Italian forces in Egypt]] and [[East African Campaign (World War II)#Allied counter-offensive|Italian East Africa]].{{sfn|Jowett|2001|pp=910}} The offensive in North Africa was highly successful and by early February 1941 Italy had lost control of eastern Libya and large numbers of Italian troops had been taken prisoner. The [[Regia Marina|Italian Navy]] also suffered significant defeats, with the Royal Navy putting three Italian battleships out of commission by a [[Battle of Taranto|carrier attack at Taranto]], and neutralising several more warships at the [[Battle of Cape Matapan]].{{sfn|Jackson|2006|p=106}}

[[File:E 003743 E.jpg|thumb|left|Captured German [[Afrika Korps]] soldiers, December 1941]]
The Germans soon intervened to assist Italy. Hitler [[Operation Sonnenblume|sent German forces to Libya]] in February, and by the end of March the Axis had [[Axis desert offensive (1941)|launched an offensive]] which drove back the Commonwealth forces which had been weakened to support Greece.{{sfn|Laurier|2001|pp=78}} In under a month, Commonwealth forces were pushed back into Egypt with the exception of the [[Siege of Tobruk|besieged port of Tobruk]] that fell later.{{sfn|Murray|Millett|2001|pp=2637}} The Commonwealth [[Operation Brevity|attempted to dislodge Axis forces in May]] and [[Operation Battleaxe|again in June]], but failed on both occasions.{{sfn|Macksey|1997|pp=613}}

By late March 1941, following [[Bulgaria]]'s signing of the [[Tripartite Pact]], the Germans were in position to intervene in Greece. Plans were changed, however, because of developments in neighbouring [[Yugoslavia]]. The Yugoslav government had signed the Tripartite Pact on 25 March, only to be overthrown two days later by a [[Yugoslav coup d'tat|British-encouraged coup]]. Hitler viewed the new regime as hostile and immediately decided to eliminate it. On 6 April Germany simultaneously invaded both [[Invasion of Yugoslavia|Yugoslavia]] and [[Battle of Greece|Greece]], making rapid progress and forcing both nations to surrender within the month. The British were driven from the Balkans after Germany [[Battle of Crete|conquered the Greek island of Crete]] by the end of May.{{sfn|Weinberg|2005|p=229}} &lt;!-- REFERENCE SEEMS VERY NARROW FOR RANGE OF EVENTS COVERED --&gt; Although the Axis victory was swift, bitter partisan warfare subsequently broke out against the [[Axis occupation of Yugoslavia]], which continued until the end of the war.

The Allies did have some successes during this time. In the Middle East, Commonwealth forces first [[Anglo-Iraqi War|quashed an uprising in Iraq]] which had been supported by German aircraft from bases within Vichy-controlled [[French Mandate of Syria|Syria]],{{sfn|Watson|2003|p=80}} then, with the assistance of the [[Free French]], [[SyriaLebanon Campaign|invaded Syria and Lebanon]] to prevent further such occurrences.{{sfn|Jackson|2006|p=154}}

===Axis attack on the USSR (1941)===
{{main|Eastern Front (World War II)|Operation Barbarossa|Einsatzgruppen|World War II casualties of the Soviet Union|German mistreatment of Soviet prisoners of war}}
[[File:Second world war europe animation small.gif|thumb|300px|right|[[European theatre of World War II]] animation map, 19391945  Red: [[Allies of World War II|Western Allies]] and Soviet Union after 1941; Green: [[Soviet Union]] before 1941; Blue: [[Axis Powers]]]]

With the situation in Europe and Asia relatively stable, Germany, Japan, and the Soviet Union made preparations. With the Soviets wary of mounting tensions with Germany and the Japanese planning to take advantage of the European War by seizing resource-rich European possessions in [[Southeast Asia]], the two powers signed the [[SovietJapanese Neutrality Pact]] in April 1941.{{sfn|Garver|1988|p=114}} By contrast, the Germans were steadily making preparations for an attack on the Soviet Union, massing forces on the Soviet border.{{sfn|Weinberg|2005|p=195}}

Hitler believed that Britain's refusal to end the war was based on the hope that the United States and the Soviet Union would enter the war against Germany sooner or later.{{sfn|Murray|1983|p=[http://www.ibiblio.org/hyperwar/AAF/AAF-Luftwaffe/AAF-Luftwaffe-3.html 69]}} He therefore decided to try to strengthen Germany's relations with the Soviets, or failing that, to attack and eliminate them as a factor. In November 1940, [[GermanSoviet Axis talks|negotiations took place]] to determine if the Soviet Union would join the Tripartite Pact. The Soviets showed some interest, but asked for concessions from Finland, Bulgaria, Turkey, and Japan that Germany considered unacceptable. On 18 December 1940, Hitler issued the directive to prepare for an invasion of the Soviet Union.

[[File:German troops in Russia, 1941 - NARA - 540155.jpg|thumb|left|German soldiers during the invasion of the Soviet Union by the [[Axis powers]], 1941]]

On 22 June 1941, Germany, supported by Italy and Romania, invaded the Soviet Union in [[Operation Barbarossa]], with Germany accusing the Soviets of plotting against them. They were joined shortly by Finland and Hungary.&lt;ref name=Events1941&gt;{{citation |last1=Klooz |first1=Marle |last2=Wiley |first2=Evelyn |others=Director: Humphrey, Richard A. |year=1944 |title=Events leading up to World War II  Chronological History |series=78th Congress, 2d Session  House Document N. 541 |location=Washington |publisher=US Government Printing Office |at=pp. 267312 ([http://www.ibiblio.org/pha/events/1941.html 1941]) |url=http://www.ibiblio.org/pha/events/}}.&lt;/ref&gt; The primary targets of this surprise offensive{{sfn|Sella|1978}}{{page needed|date=July 2016}} were the [[Baltic region]], Moscow and [[Ukraine]], with the [[Strategic goal (military)|ultimate goal]] of ending the 1941 campaign near the [[A-A line|Arkhangelsk-Astrakhan line]], from the [[Caspian sea|Caspian]] to the [[White Sea]]s. Hitler's objectives were to eliminate the Soviet Union as a military power, exterminate Communism, generate ''[[Lebensraum]]'' (&quot;living space&quot;){{sfn|Kershaw|2007|pp=669}} by [[Generalplan Ost|dispossessing the native population]]{{sfn|Steinberg|1995}}{{page needed|date=July 2016}} and guarantee access to the strategic resources needed to defeat Germany's remaining rivals.{{sfn|Hauner|1978}}{{page needed|date=July 2016}}

Although the [[Red Army]] was preparing for strategic [[counter-offensive]]s before the war,{{sfn|Roberts|1995}}{{page needed|date=July 2016}} ''Barbarossa'' forced the [[Stavka|Soviet supreme command]] to adopt a [[strategic defence]]. During the summer, the Axis made significant gains into Soviet territory, inflicting immense losses in both personnel and materiel. By the middle of August, however, the German [[Oberkommando des Heeres|Army High Command]] decided to [[Battle of Smolensk (1941)|suspend the offensive]] of a considerably depleted [[Army Group Centre]], and to divert the [[2nd Panzer Group]] to reinforce troops advancing towards central Ukraine and Leningrad.{{sfn|Wilt|1981}}{{page needed|date=July 2016}} The [[Battle of Kiev (1941)|Kiev offensive]] was overwhelmingly successful, resulting in encirclement and elimination of four Soviet armies, and made possible further [[Crimean Campaign|advance into Crimea]] and industrially developed Eastern Ukraine (the [[First Battle of Kharkov]]).{{sfn|Erickson|2003|pp=11437}}

[[File:RIAN archive 2153 After bombing.jpg|thumb|right|Soviet civilians in [[Leningrad]] leaving destroyed houses, after a German bombardment of the city; [[Battle of Leningrad]], 10 December 1942]]
The diversion of three quarters of the Axis troops and the majority of their air forces from France and the central Mediterranean to the [[Eastern Front (World War II)|Eastern Front]]{{sfn|Glantz|2001|p=9}} prompted Britain to reconsider its [[grand strategy]].{{sfn|Farrell|1993}}{{page needed|date=July 2016}} In July, the UK and the Soviet Union formed a [[Anglo-Soviet Agreement|military alliance against Germany]]{{sfn|Keeble|1990|p=29}} The British and Soviets [[Anglo-Soviet invasion of Iran|invaded neutral Iran]] to secure the [[Persian Corridor]] and Iran's [[oil field]]s.{{sfn|Bueno de Mesquita|Smith|Siverson|Morrow|2003|p=425}} In August, the United Kingdom and the United States jointly issued the [[Atlantic Charter]].{{sfn|Beevor|2012|p=220}}

By October Axis [[operational objective]]s in Ukraine and the Baltic region were achieved, with only the sieges of [[siege of Leningrad|Leningrad]]{{sfn|Kleinfeld|1983}}{{page needed|date=July 2016}} and [[Siege of Sevastopol (194142)|Sevastopol]] continuing.{{sfn|Jukes|2001|p=113}} A major [[battle of Moscow|offensive against Moscow]] was renewed; after two months of fierce battles in increasingly harsh weather the German army almost reached the outer suburbs of Moscow, where the exhausted troops&lt;ref&gt;{{Harvnb|Glantz|2001|p=26}}: &quot;By 1 November [the Wehrmacht] had lost fully 20% of its committed strength (686,000 men), up to 2/3 of its -million motor vehicles, and 65 percent of its tanks. The German Army High Command (OKH) rated its 136 divisions as equivalent to 83 full-strength divisions.&quot;&lt;/ref&gt; were forced to suspend their offensive.{{sfn|Reinhardt|1992|p=227}} Large territorial gains were made by Axis forces, but their campaign had failed to achieve its main objectives: two key cities remained in Soviet hands, the Soviet [[Military capability|capability to resist]] was not broken, and the Soviet Union retained a considerable part of its military potential. The ''blitzkrieg'' [[Phase (combat)|phase]] of the war in Europe had ended.{{sfn|Milward|1964}}{{page needed|date=July 2016}}

By early December, freshly mobilised [[Military reserve force|reserves]]{{sfn|Rotundo|1986}}{{page needed|date=July 2016}} allowed the Soviets to achieve numerical parity with Axis troops.{{sfn|Glantz|2001|p=26}} This, as well as [[Richard Sorge#Wartime intelligence supplied by the Sorge Ring|intelligence data]] which established that a minimal number of Soviet troops in the East would be sufficient to deter any attack by the Japanese [[Kwantung Army]],{{sfn|Garthoff|1969}}{{page needed|date=July 2016}} allowed the Soviets to begin a [[Soviet Offensive (19411942)|massive counter-offensive]] that started on 5 December all along the front and pushed German troops {{convert|100|-|250|km|mi}} west.&lt;ref&gt;{{Harvnb|Beevor|1998|pp=412}}; {{Harvnb|Evans|2008|pp=2134}}, notes that &quot;Zhukov had pushed the Germans back where they had launched Operation Typhoon two months before.&amp;nbsp;... Only Stalin's decision to attack all along the front instead of concentrating his forces in an all-out assault against the retreating German Army Group Centre prevented the disaster from being even worse.&quot;&lt;/ref&gt;

===War breaks out in the Pacific (1941)===
{{main|Pacific War}}
In 1939, the United States had renounced its trade treaty with Japan; and, beginning with an [[aviation gasoline]] ban in July 1940, Japan became subject to increasing economic pressure.{{r|ibiblio_1940}} During this time, Japan launched its [[Battle of Changsha (1939)|first attack against Changsha]], a strategically important Chinese city, but was repulsed by late September.{{sfn|Jowett|Andrew|2002|p=14}} Despite [[193940 Winter Offensive|several offensives]] by both sides, the war between China and Japan was stalemated by 1940. To increase pressure on China by blocking supply routes, and to better position Japanese forces in the event of a war with the Western powers, Japan invaded and [[Japanese invasion of French Indochina|occupied northern Indochina]].{{sfn|Overy|Wheatcroft|1999|p=289}} Afterwards, the United States [[embargo]]ed iron, steel and mechanical parts against Japan.{{sfn|Morison|2002|p=60}} Other sanctions soon followed.

Chinese nationalist forces launched a large-scale [[193940 Winter Offensive|counter-offensive]] in early 1940. In August, [[Communist Party of China|Chinese communists]] launched an [[Hundred Regiments Offensive|offensive in Central China]]; in retaliation, Japan instituted [[Three Alls Policy|harsh measures]] in occupied areas to reduce human and material resources for the communists.{{sfn|Joes|2004|p=224}} Continued antipathy between Chinese communist and nationalist forces [[New Fourth Army incident|culminated in armed clashes in January 1941]], effectively ending their co-operation.{{sfn|Fairbank|Goldman|2006|p=320}} In March, the Japanese 11th army attacked the headquarters of the Chinese 19th army but was repulsed during [[Battle of Shanggao]].{{sfn|Hsu|Chang|1971|p=30}} In September, Japan attempted to [[Battle of Changsha (1941)|take the city of Changsha]] again and clashed with Chinese nationalist forces.{{sfn|Hsu|Chang|1971|p=33}}

[[File:Carrier shokaku.jpg|thumb|right|[[Mitsubishi A6M2]] &quot;Zero&quot; fighters on the [[Imperial Japanese Navy]] aircraft carrier {{ship|Japanese aircraft carrier|Shkaku||2}}, just before the attack on [[Naval Station Pearl Harbor|Pearl Harbor]]]]
German successes in Europe encouraged Japan to increase pressure on European governments in [[Southeast Asia]]. The Dutch government agreed to provide Japan some oil supplies from the [[Dutch East Indies]], but negotiations for additional access to their resources ended in failure in June 1941.&lt;ref&gt;{{cite web |title=Japanese Policy and Strategy 1931  July 1941 |website=US Army in WWII  Strategy and Command: The First Two Years |pp=4566 |url=http://www.ibiblio.org/hyperwar/USA/USA-P-Strategy/Strategy-2.html}}&lt;/ref&gt; In July 1941 Japan sent troops to southern Indochina, thus threatening British and Dutch possessions in the Far East. The United States, United Kingdom and other Western governments reacted to this move with a freeze on Japanese assets and a total oil embargo.{{sfn|Anderson|1975|p=201}}{{sfn|Evans|Peattie|2012|p=456}} At the same time, Japan was [[Kantokuen|planning an invasion of the Soviet Far East]], intending to capitalize off the German invasion in the west, but abandoned the operation after the sanctions.&lt;ref&gt;{{cite book|last1=Coox|first1=Alvin|title=Nomonhan: Japan against Russia, 1939|date=1985|publisher=Stanford University Press|location=Stanford, California|pages=10461049|isbn=0-8047-1835-0}}&lt;/ref&gt;

Since early 1941 the United States and Japan had been engaged in negotiations in an attempt to improve their strained relations and end the war in China. During these negotiations Japan advanced a number of proposals which were dismissed by the Americans as inadequate.&lt;ref name=USAWWIIcp5&gt;{{cite web |title=The decision for War |website=US Army in WWII  Strategy and Command: The First Two Years |pp=11327 |url=http://www.ibiblio.org/hyperwar/USA/USA-P-Strategy/Strategy-5.html}}&lt;/ref&gt; At the same time the US, Britain, and the Netherlands engaged in secret discussions for the joint defence of their territories, in the event of a Japanese attack against any of them.&lt;ref name=USAWWIIcp4&gt;{{cite web |title=The Showdown With Japan AugDec 1941 |website=US Army in WWII  Strategic Planning for Coalition Warfare |pp=6396 |url=http://www.ibiblio.org/hyperwar/USA/USA-WD-Strategic1/USA-WD-Strategic1-4.html}}&lt;/ref&gt; Roosevelt reinforced [[Commonwealth of the Philippines|the Philippines (an American protectorate scheduled for independence in 1946)]] and warned Japan that the US would react to Japanese attacks against any &quot;neighboring countries&quot;.{{r|USAWWIIcp4}}

[[File:The USS Arizona (BB-39) burning after the Japanese attack on Pearl Harbor - NARA 195617 - Edit.jpg|thumb|left|{{USS|Arizona|BB-39|6}} during the Japanese surprise air attack on the [[United States Pacific Fleet|American pacific fleet]], 7 December 1941]]

Frustrated at the lack of progress and feeling the pinch of the American-British-Dutch sanctions, Japan prepared for war. On 20 November a new government under Hideki Tojo presented an interim proposal as its final offer. It called for the end of American aid to China and for the supply of oil and other resources to Japan. In exchange Japan promised not to launch any attacks in Southeast Asia and to withdraw its forces from southern Indochina.{{r|USAWWIIcp5}} The American counter-proposal of 26 November required that Japan evacuate all of China without conditions and conclude non-aggression pacts with all Pacific powers.&lt;ref&gt;[http://www.ibiblio.org/pha/pha/congress/app-d.html#363 The United States Replies]. Investigation of the Pearl Harbor attack.&lt;/ref&gt; That meant Japan was essentially forced to choose between abandoning its ambitions in China, or seizing the natural resources it needed in the Dutch East Indies by force;&lt;ref&gt;{{Harvnb|Painter|2012|p=26}}: &quot;The United States cut off oil exports to Japan in the summer of 1941, forcing Japanese leaders to choose between going to war to seize the oil fields of the Netherlands East Indies or giving in to U.S. pressure.&quot;&lt;br /&gt;{{Harvnb|Wood|2007|p=9}}, listing various military and diplomatic developments, observes that &quot;the threat to Japan was not purely economic.&quot;&lt;/ref&gt; the Japanese military did not consider the former an option, and many officers considered the oil embargo an unspoken declaration of war.{{sfn|Lightbody|2004|p=125}}

Japan planned to rapidly seize European colonies in Asia to create a large defensive perimeter stretching into the Central Pacific; the Japanese would then be free to exploit the resources of Southeast Asia while exhausting the over-stretched Allies by fighting a defensive war.&lt;ref&gt;{{Harvnb|Weinberg|2005|p=310}}; {{Harvnb|Dower|1986|p=5}}, calls attention to the fact that &quot;the Allied struggle against Japan exposed the racist underpinnings of the European and American colonial structure. Japan did not invade independent countries in southern Asia. It invaded colonial outposts which the Westerners had dominated for generations, taking absolutely for granted their racial and cultural superiority over their Asian subjects.&quot; Dower goes on to note that, before the horrors of Japanese occupation made themselves felt, many Asians responded favourably to the victories of the Imperial Japanese forces.&lt;/ref&gt; To prevent American intervention while securing the perimeter it was further planned to neutralise the [[United States Pacific Fleet]] and the American military presence in the Philippines from the outset.{{sfn|Wood|2007|pp=112}} On 7 December 1941 (8 December in Asian time zones), Japan attacked British and American holdings with near-simultaneous [[Japanese expansion (19411942)|offensives against Southeast Asia and the Central Pacific]].{{sfn|Wohlstetter|1962|pp=3413}} These included an [[attack on Pearl Harbor|attack on the American fleet at Pearl Harbor]], [[Philippines Campaign (194142)|the Philippines]], [[Malayan Campaign|landings in Thailand and Malaya]]{{sfn|Wohlstetter|1962|pp=3413}} and the [[battle of Hong Kong]].

These attacks led the [[United States declaration of war on Japan|United States]], [[United Kingdom declaration of war on Japan|Britain]], China, Australia and several other states to formally declare war on Japan, whereas the Soviet Union, being heavily involved in large-scale hostilities with European Axis countries, maintained its neutrality agreement with Japan.&lt;ref&gt;{{Harvnb|Dunn|1998|p=157}}. According to {{Harvnb|May|1955|p=155}}, Churchill stated: &quot;Russian declaration of war on Japan would be greatly to our advantage, provided, but only provided, that Russians are confident that will not impair their Western Front.&quot;&lt;/ref&gt; Germany, followed by the other Axis states, declared war on the United States&lt;ref&gt;[[s:Adolf Hitler's Declaration of War against the United States|Adolf Hitler's Declaration of War against the United States]] in Wikisource.&lt;/ref&gt; in solidarity with Japan, citing as justification the American attacks on German war vessels that had been ordered by Roosevelt.{{r|Events1941}}&lt;ref&gt;{{citation |last1=Klooz |first1=Marle |last2=Wiley |first2=Evelyn |others=Director: Humphrey, Richard A. |year=1944 |title=Events leading up to World War II  Chronological History |series=78th Congress, 2d Session  House Document N. 541 |location=Washington |publisher=US Government Printing Office |at=p. 310 ([http://www.ibiblio.org/pha/events/1941.html 1941]) |url=http://www.ibiblio.org/pha/events/}}.&lt;/ref&gt;

===Axis advance stalls (194243)===
[[File:Casablanca-Conference.jpg|thumb|right|Seated at the [[Casablanca Conference]]; US President [[Franklin D. Roosevelt]] and British PM [[Winston Churchill]], January 1943]]

On 1 January 1942, the [[Four Policemen|Allied Big Four]]{{sfn|Bosworth|Maiolo|2015|pp=313314}}the Soviet Union, China, Britain and the United Statesand 22 smaller or exiled governments issued the [[Declaration by United Nations]], thereby affirming the [[Atlantic Charter]],{{sfn|Mingst|Karns|2007|p=22}} and agreeing to not to sign a [[separate peace]] with the Axis powers.

During 1942, Allied officials debated on the appropriate [[grand strategy]] to pursue. All agreed that [[Europe first|defeating Germany]] was the primary objective. The Americans favoured a straightforward, [[Operation Sledgehammer|large-scale attack]] on Germany through France. The Soviets were also demanding a second front. The British, on the other hand, argued that military operations should target peripheral areas to wear out German strength, leading to increasing demoralisation, and bolster resistance forces. Germany itself would be subject to a heavy bombing campaign. An offensive against Germany would then be launched primarily by Allied armour without using large-scale armies.&lt;ref&gt;{{cite web |title=The First Full Dress Debate over Strategic Deployment. Dec 1941  Jan 1942 |website=US Army in WWII  Strategic Planning for Coalition Warfare |pp=97119 |url=http://www.ibiblio.org/hyperwar/USA/USA-WD-Strategic1/USA-WD-Strategic1-5.html}}&lt;/ref&gt; Eventually, the British persuaded the Americans that a landing in France was infeasible in 1942 and they should instead focus on driving the Axis out of North Africa.&lt;ref&gt;{{cite web |title=The Elimination of the Alternatives. JulAug 1942 |website=US Army in WWII  Strategic Planning for Coalition Warfare |pp=26692 |url=http://www.ibiblio.org/hyperwar/USA/USA-WD-Strategic1/USA-WD-Strategic1-12.html}}&lt;/ref&gt;

At the [[Casablanca Conference]] in early 1943, the Allies reiterated the statements issued in the 1942 Declaration by the United Nations, and demanded the [[unconditional surrender]] of their enemies.
The British and Americans agreed to continue to press the initiative in the Mediterranean by invading Sicily to fully secure the Mediterranean supply routes.&lt;ref&gt;{{cite web |title=Casablanca  Beginning of an Era: January 1943 |website=US Army in WWII  Strategic Planning for Coalition Warfare |pp=1842 |url=http://www.ibiblio.org/hyperwar/USA/USA-WD-Strategic2/USA-WD-Strategic2-1.html}}&lt;/ref&gt; Although the British argued for further operations in the Balkans to bring Turkey into the war, in May 1943, the Americans extracted a British commitment to limit Allied operations in the Mediterranean to an invasion of the Italian mainland and to invade France in 1944.&lt;ref&gt;{{cite web |title=The Trident Conference  New Patterns: May 1943 |website=US Army in WWII  Strategic Planning for Coalition Warfare |pp=12645 |url=http://www.ibiblio.org/hyperwar/USA/USA-WD-Strategic2/USA-WD-Strategic2-6.html}}&lt;/ref&gt;

====Pacific (194243)====
[[File:Second world war asia 1937-1942 map en6.png|right|thumb|350px|Map of Japanese military advances, until mid-1942]]

By the end of April 1942, Japan and its ally Thailand had almost fully conquered [[Japanese conquest of Burma|Burma]], [[Battle of Malaya|Malaya]], [[Dutch East Indies campaign|the Dutch East Indies]], [[Battle of Singapore|Singapore]], and [[Rabaul]], inflicting severe losses on Allied troops and taking a large number of prisoners.{{sfn|Beevor|2012|pp=247267, 345}} Despite stubborn [[Philippines Campaign (194142)|resistance]] by Filipino and US forces, the [[Philippine Commonwealth]] was eventually captured in May 1942, forcing its government into exile.{{sfn|Lewis|1953|loc=p. 529 (Table 11)}} On 16 April, in Burma, 7,000 British soldiers were encircled by the Japanese 33rd Division during the [[Battle of Yenangyaung]] and rescued by the Chinese 38th Division.{{sfn|Slim|1956|pp=714}} Japanese forces also achieved naval victories in the [[Sinking of Prince of Wales and Repulse|South China Sea]], [[Battle of the Java Sea|Java Sea]] and [[Indian Ocean raid (1942)|Indian Ocean]],{{sfn|Grove|1995|p=362}} and [[Bombing of Darwin|bombed the Allied naval base]] at [[Darwin, Northern Territory|Darwin]], Australia. In January 1942, the only Allied success against Japan was a Chinese [[Battle of Changsha (1942)|victory at Changsha]].{{sfn|Ch'i|1992|p=158}} These easy victories over unprepared US and European opponents left Japan overconfident, as well as overextended.{{sfn|Perez|1998|p=145}}

In early May 1942, Japan initiated operations to [[Operation Mo|capture Port Moresby]] by [[amphibious assault]] and thus sever communications and supply lines between the United States and Australia. The planned invasion was thwarted when an Allied task force, centred on two American fleet carriers, fought Japanese naval forces to a draw in the [[Battle of the Coral Sea]].{{sfn|Maddox|1992|pp=1112}} Japan's next plan, motivated by the earlier [[Doolittle Raid]], was to seize [[Midway Atoll]] and lure American carriers into battle to be eliminated; as a diversion, Japan would also send forces to [[Aleutian Islands Campaign|occupy the Aleutian Islands]] in Alaska.{{sfn|Salecker|2001|p=186}} In mid-May, Japan started the [[Zhejiang-Jiangxi Campaign]] in China, with the goal of inflicting retribution on the Chinese who aided the surviving American airmen in the Doolittle Raid by destroying air bases and fighting against the Chinese 23rd and 32nd Army Groups.&lt;ref&gt;{{Harvnb|Schoppa|2011|p=28}}.&lt;/ref&gt;&lt;ref&gt;[https://books.google.com/books?id=lILltXBTo8oC&amp;pg=PA19&amp;dq=disease+caused+up+to+10,000+casualties&amp;hl=en&amp;sa=X&amp;ei=FeqFVM39EdejyATb8IGACA&amp;ved=0CB0Q6AEwAA#v=onepage&amp;q=disease%20caused%20up%20to%2010%2C000%20casualties&amp;f=false  Chevrier &amp; Chomiczewski &amp; Garrigue 2004], p.19.&lt;/ref&gt; In early June, Japan put its operations into action but the Americans, having broken [[Japanese naval codes]] in late May, were fully aware of plans and order of battle, and used this knowledge to achieve a decisive [[Battle of Midway|victory at Midway]] over the [[Imperial Japanese Navy]].&lt;ref&gt;{{Harvnb|Ropp|2000|p=368}}.&lt;/ref&gt;

[[File:Marines rest in the field on Guadalcanal.jpg|right|thumb|[[United States Marine Corps|US Marines]] during the [[Guadalcanal Campaign]], in the [[Pacific Ocean theater of World War II|Pacific theatre]], 1942]]

With its capacity for aggressive action greatly diminished as a result of the Midway battle, Japan chose to focus on a belated attempt to capture [[Port Moresby]] by an [[Kokoda Track campaign|overland campaign]] in the [[Territory of Papua]].{{sfn|Weinberg|2005|p=339}} The Americans planned a counter-attack against Japanese positions in the southern [[Solomon Islands]], primarily [[Guadalcanal]], as a first step towards capturing [[Rabaul]], the main Japanese base in Southeast Asia.&lt;ref&gt;{{Cite book |last=Gilbert |first=Adrian |year=2003 |title=The Encyclopedia of Warfare: From Earliest Times to the Present Day |publisher=Globe Pequot |isbn=1-59228-027-7 |p=259}}&lt;/ref&gt;

Both plans started in July, but by mid-September, [[Guadalcanal Campaign|the Battle for Guadalcanal]] took priority for the Japanese, and troops in New Guinea were ordered to withdraw from the Port Moresby area to the [[Oro Province|northern part of the island]], where they faced Australian and United States troops in the [[Battle of Buna-Gona]].{{sfn|Swain|2001|p=197}} Guadalcanal soon became a focal point for both sides with heavy commitments of troops and ships in the battle for Guadalcanal. By the start of 1943, the Japanese were defeated on the island and [[Operation Ke|withdrew their troops]].{{sfn|Hane|2001|p=340}} In Burma, Commonwealth forces mounted two operations. The first, [[Arakan Campaign 194243|an offensive into the Arakan region]] in late 1942, went disastrously, forcing a retreat back to India by May 1943.{{sfn|Marston|2005|p=111}} The second was the [[Operation Longcloth|insertion of irregular forces]] behind Japanese front-lines in February which, by the end of April, had achieved mixed results.{{sfn|Brayley|2002|p=9}}

====Eastern Front (194243)====
[[File:RIAN archive 44732 Soviet soldiers attack house.jpg|left|thumb|300px|[[Red Army]] soldiers on the counterattack, during the [[Battle of Stalingrad]], February 1943]]

Despite considerable losses, in early 1942 Germany and its allies stopped a major Soviet offensive in central and southern Russia, keeping most territorial gains they had achieved during the previous year.{{sfn|Glantz|2001|p=31}} In May the Germans defeated Soviet offensives in the [[Battle of the Kerch Peninsula|Kerch Peninsula]] and at [[Second Battle of Kharkov|Kharkov]],{{sfn|Read|2004|p=764}} and then launched their main [[Case Blue|summer offensive]] against southern Russia in June 1942, to seize the [[Baku Oil Fields|oil fields of the Caucasus]] and occupy [[Kuban]] [[steppe]], while maintaining positions on the northern and central areas of the front. The Germans split [[Army Group South]] into two groups: [[Army Group A]] advanced to the lower [[Don River (Russia)|Don River]] and struck south-east to the Caucasus, while [[Army Group B]] headed towards the [[Volga River]]. The Soviets decided to make their stand at Stalingrad on the Volga.{{sfn|Davies|2006|loc=p. 100 (2008 ed.)}}

By mid-November, the Germans had [[Battle of Stalingrad|nearly taken Stalingrad]] in bitter [[urban warfare|street fighting]] when the Soviets began their second winter counter-offensive, starting with an [[Operation Uranus|encirclement of German forces at Stalingrad]]{{sfn|Beevor|1998|pp=23965}} and an assault on the [[Operation Mars|Rzhev salient near Moscow]], though the latter failed disastrously.{{sfn|Black|2003|p=119}} By early February 1943, the German Army had taken tremendous losses; German troops at Stalingrad had been forced to surrender,{{sfn|Beevor|1998|pp=38391}} and the front-line had been pushed back beyond its position before the summer offensive. In mid-February, after the Soviet push had tapered off, the Germans launched another [[Third Battle of Kharkov|attack on Kharkov]], creating a [[Salients, re-entrants and pockets|salient]] in their front line around the Russian city of [[Kursk]].{{sfn|Erickson|2001|p=142}}

====Western Europe/Atlantic &amp; Mediterranean (194243)====
[[File:8th AF Bombing Marienburg.JPEG|right|thumb|American [[8th Air Force]] [[Boeing B-17 Flying Fortress]] bombing raid on the Focke-Wulf factory in Germany, 9 October 1943]]

Exploiting poor American naval command decisions, [[Second Happy Time|the German navy ravaged Allied shipping off the American Atlantic coast]].{{sfn|Milner|1990|p=52}} By November 1941, Commonwealth forces had launched a counter-offensive, [[Operation Crusader]], in North Africa, and reclaimed all the gains the Germans and Italians had made.{{sfn|Beevor|2012|pp=2248}} In North Africa, the Germans launched an offensive in January, pushing the British back to positions at the [[Gazala Line]] by early February,{{sfn|Molinari|2007|p=91}} followed by a temporary lull in combat which Germany used to prepare for their upcoming offensives.{{sfn|Mitcham|2007|p=31}} Concerns the Japanese might use bases in Vichy-held [[Madagascar]] caused the British to [[Battle of Madagascar|invade the island]] in early May 1942.{{sfn|Beevor|2012|pp=3801}} An Axis [[Battle of Gazala|offensive in Libya]] forced an Allied retreat deep inside Egypt until Axis forces were [[First Battle of El Alamein|stopped at El Alamein]].{{sfn|Rich|1992|p=178}} On the Continent, raids of Allied [[commando]]s on strategic targets, culminating in the disastrous [[Dieppe Raid]],{{sfn|Gordon|2004|p=129}} demonstrated the Western Allies' inability to launch an invasion of continental Europe without much better preparation, equipment, and operational security.{{sfn|Neillands|2005}}{{page needed|date=July 2016}}

In August 1942, the Allies succeeded in repelling a [[Battle of Alam el Halfa|second attack against El Alamein]]{{sfn|Keegan|1997|p=277}} and, at a high cost, managed to [[Operation Pedestal|deliver desperately needed supplies to the besieged Malta]].{{sfn|Smith|2002}} A few months later, the Allies [[Second Battle of El Alamein|commenced an attack of their own]] in Egypt, dislodging the Axis forces and beginning a drive west across Libya.{{sfn|Thomas|Andrew|1998|p=8}} This attack was followed up shortly after by [[Operation Torch|Anglo-American landings in French North Africa]], which resulted in the region joining the Allies.{{sfn|Ross|1997|p=38}} Hitler responded to the French colony's defection by ordering the [[Case Anton|occupation of Vichy France]];{{sfn|Ross|1997|p=38}} although Vichy forces did not resist this violation of the armistice, they managed to [[Scuttling of the French fleet in Toulon|scuttle their fleet]] to prevent its capture by German forces.{{sfn|Ross|1997|p=38}}{{sfn|Bonner|Bonner|2001|p=24}} The now pincered Axis forces in Africa withdrew into [[Tunisia]], which was [[Tunisian Campaign|conquered by the Allies]] in May 1943.{{sfn|Ross|1997|p=38}}{{sfn|Collier|2003|p=11}}

In early 1943 the British and Americans began the [[Combined Bomber Offensive]], a strategic bombing campaign against Germany. The goals were to disrupt the German war economy, reduce German morale, and &quot;[[de-housing|de-house]]&quot; the civilian population.&lt;ref&gt;[http://www.ibiblio.org/hyperwar/AAF/USSBS/ETO-Summary.html#tc &quot;The Civilians&quot;] United States Strategic Bombing Survey Summary Report (European War)&lt;/ref&gt;

===Allies gain momentum (194344)===
[[File:SBD VB-16 over USS Washington 1943.jpg|thumb|left|US Navy [[Douglas SBD Dauntless|SBD-5]] [[scout plane]] flies patrol over {{USS|Washington|BB-56|6}} and {{USS|Lexington|CV-2|6}} during the Gilbert and Marshall Islands campaign, 1943]]
After the Guadalcanal Campaign, the Allies initiated several operations against Japan in the Pacific. In May 1943, Canadian and U.S. forces were sent to [[Aleutian Islands Campaign#Allied response|eliminate Japanese forces from the Aleutians]].{{sfn|Thompson|Randall|2008|p=164}} Soon after, the U.S., with support from Australian and New Zealand forces, began major operations to [[Operation Cartwheel|isolate Rabaul by capturing surrounding islands]], and [[Gilbert and Marshall Islands campaign|breach the Japanese Central Pacific perimeter at the Gilbert and Marshall Islands]].{{sfn|Kennedy|2001|p=610}} By the end of March 1944, the Allies had completed both of these objectives, and had also [[Operation Hailstone|neutralised the major Japanese base at Truk]] in the [[Caroline Islands]]. In April, the Allies launched an operation to [[Western New Guinea campaign|retake Western New Guinea]].{{sfn|Rottman|2002|p=228}}
In the Soviet Union, both the Germans and the Soviets spent the spring and early summer of 1943 preparing for large offensives in central Russia. On 4 July 1943, Germany [[Battle of Kursk|attacked Soviet forces around the Kursk Bulge]]. Within a week, German forces had exhausted themselves against the Soviets' deeply echeloned and well-constructed defences&lt;ref&gt;{{Harvnb|Glantz|1986}}; {{Harvnb|Glantz|1989|pp=14959}}.&lt;/ref&gt; and, for the first time in the war, Hitler cancelled the operation before it had achieved tactical or operational success.{{sfn|Kershaw|2001|p=592}} This decision was partially affected by the Western Allies' [[Allied invasion of Sicily|invasion of Sicily]] launched on 9 July which, combined with previous Italian failures, resulted in the ousting and arrest of Mussolini later that month.{{sfn|O'Reilly|2001|p=32}} Also, in July 1943 the British [[Bombing of Hamburg in World War II|firebombed Hamburg]] killing over 40,000 people.{{sfn|Overy|1995|pp=119120}}

[[File:Kursk_Soviet_machineguns.JPG|thumb|right|[[Red Army]] troops, in a counter-offensive on German positions, at the [[Battle of Kursk]], 1943]]

On 12 July 1943, the Soviets launched their own [[Operation Kutuzov|counter-offensives]], thereby dispelling any chance of German victory or even stalemate in the east. The Soviet victory at Kursk marked the end of German superiority,{{sfn|Bellamy|2007|p=595}} giving the Soviet Union the initiative on the Eastern Front.{{sfn|O'Reilly|2001|p=35}}{{sfn|Healy|1992|p=90}} The Germans tried to stabilise their eastern front along the hastily fortified [[PantherWotan line]], but the Soviets broke through it at [[Battle of Smolensk (1943)|Smolensk]] and by the [[Lower Dnieper Offensive]]s.{{sfn|Glantz|2001|pp=505}}

On 3 September 1943, the Western Allies [[Allied invasion of Italy|invaded the Italian mainland]], following [[Armistice of Cassibile|Italy's armistice with the Allies]].&lt;ref&gt;{{Harvnb|Kolko|1990|p=45}}: &quot;On September 3, as Allied forces landed in Italy, Badoglio agreed to a secret armistice in the hope the Allies would land a major force north of Rome and save his government and the king. But when this didn't happen he desperately attempted to call off his bargain with Eisenhower, who cut short the matter on 8 September by announcing news of its existence. The next day the hero of Abyssinia, his king, and a small retinue deserted Rome for the southeast tip of Italy, leaving most of Italy to the Nazis.&quot;&lt;/ref&gt; Germany with the help of fascists responded by disarming Italian forces that were in many places without superior orders, seizing military control of Italian areas,{{sfn|Mazower|2008|p=362}} and creating a series of defensive lines.{{sfn|Hart|Hart|Hughes|2000|p=151}} German special forces then [[Gran Sasso raid|rescued Mussolini]], who then soon established a new client state in German-occupied Italy named the [[Italian Social Republic]],{{sfn|Blinkhorn|2006|p=52}} causing an [[Italian Civil War|Italian civil war]]. The Western Allies fought through several lines until reaching the [[Winter Line|main German defensive line]] in mid-November.{{sfn|Read|Fisher|2002|p=129}}

[[File:Cairo conference.jpg|left|thumb|alt=Three men, [[Chiang Kai-shek]], Roosevelt and Churchill, sitting together elbow to elbow|The Allied leaders of the [[Pacific War|Asian and Pacific Theatre]]: Generalissimo [[Chiang Kai-shek]], [[Franklin D. Roosevelt]], and [[Winston Churchill]] meeting at the [[Cairo Conference (1943)|Cairo Conference]], 25 November 1943]]

German operations in the Atlantic also suffered. By [[Black May (1943)|May 1943, as Allied counter-measures became increasingly effective]], the resulting sizeable German submarine losses forced a temporary halt of the German Atlantic naval campaign.&lt;ref&gt;{{Harvnb|Padfield|1998|pp=3356}}.&lt;/ref&gt; In November 1943, [[Franklin D. Roosevelt]] and Winston Churchill met with [[Chiang Kai-shek]] [[Cairo Conference|in Cairo]] and then with Joseph Stalin [[Tehran Conference|in Tehran]].&lt;ref name=&quot;Kolko 1990 211,235,267_268&quot;&gt;{{Harvnb|Kolko|1990|pp=211, 235, 2678}}.&lt;/ref&gt; The former conference determined the post-war return of Japanese territory&lt;ref name=&quot;Iriye 1981 154&quot;&gt;{{Harvnb|Iriye|1981|p=154}}.&lt;/ref&gt; and the military planning for the [[Burma Campaign]],{{sfn|Mitter|2014|p=286}} while the latter included agreement that the Western Allies would invade Europe in 1944 and that the Soviet Union would declare war on Japan within three months of Germany's defeat.&lt;ref name=&quot;polley148&quot;&gt;{{Harvnb|Polley|2000|p=148}}.&lt;/ref&gt;

[[File:The Battle of Cassino, January-may 1944 C4363.jpg|right|thumb|Ruins of the [[Monte Cassino|Benedictine]] monastery, during the [[Battle of Monte Cassino]]; [[Italian Campaign (World War II)|Italian Campaign]], May 1944]]

From November 1943, during the seven-week [[Battle of Changde]], the Chinese forced Japan to fight a costly war of attrition, while awaiting Allied relief.&lt;ref name=&quot;Beevor 2012 268_274&quot;&gt;{{Harvnb|Beevor|2012|pp=26874}}.&lt;/ref&gt;&lt;ref name=H161&gt;{{Harvnb|Ch'i|1992|p=161}}.&lt;/ref&gt;&lt;ref name=&quot;Hsu Chang 412-416&quot;&gt;{{Harvnb|Hsu|Chang|1971|pp=412416, Map 38}}&lt;/ref&gt; In January 1944, the Allies launched a [[Battle of Monte Cassino|series of attacks in Italy against the line at Monte Cassino]] and tried to outflank it with [[Operation Shingle|landings at Anzio]].&lt;ref&gt;{{Harvnb|Weinberg|2005|pp=6601}}.&lt;/ref&gt; By the end of January, a major [[Leningrad Front|Soviet]] [[Siege of Leningrad#Soviet relief of the siege|offensive expelled German forces]] from the [[Leningrad Oblast|Leningrad region]],&lt;ref name=&quot;Glantz 2002 327_366&quot;&gt;{{Harvnb|Glantz|2002|pp=32766}}.&lt;/ref&gt; ending the longest and [[List of battles by casualties#Sieges and urban combat|most lethal siege in history]].

The [[LeningradNovgorod Offensive|following Soviet offensive]] was [[Battle of Narva (1944)|halted on the pre-war Estonian border]] by the German [[Army Group North]] aided by [[Occupation of Estonia by Nazi Germany#Estonians in German Military Units in 19411944|Estonians]] hoping to [[Estonian Government in Exile#Failure to reestablish independence|re-establish national independence]]. This delay slowed subsequent Soviet operations in the [[Baltic Sea]] region.&lt;ref name=&quot;Glantz 2002 367_414&quot;&gt;{{Harvnb|Glantz|2002|pp=367414}}.&lt;/ref&gt; By late May 1944, the Soviets had [[Crimean Offensive|liberated Crimea]], largely expelled Axis forces from Ukraine, and made [[First Jassy-Kishinev Offensive|incursions into Romania]], which were repulsed by the Axis troops.&lt;ref name=&quot;Chubarov 2001 122&quot;&gt;{{Harvnb|Chubarov|2001|p=122}}.&lt;/ref&gt; The Allied offensives in Italy had succeeded and, at the expense of allowing several German divisions to retreat, on 4 June, Rome was captured.&lt;ref&gt;{{Harvnb|Holland|2008|pp=16984}}; {{Harvnb|Beevor|2012|pp=56873}}.&lt;br /&gt;The weeks after the fall of Rome saw a dramatic upswing in German atrocities in Italy ({{Harvnb|Mazower|2008|pp=5002}}). The period featured massacres with victims in the hundreds at [[Civitella in Val di Chiana|Civitella]] ({{Harvnb|de Grazia|Paggi|1991}}; {{Harvnb|Belco|2010}}), [[Ardeatine massacre|Fosse Ardeatine]] ({{Harvnb|Portelli|2003}}), and [[Sant'Anna di Stazzema massacre|Sant'Anna di Stazzema]] ({{Harvnb|Gordon|2012|pp=101}}), and is capped with the [[Marzabotto massacre]].&lt;/ref&gt;

The Allies had mixed success in mainland Asia. In March 1944, the Japanese launched the first of two invasions, [[Operation U-Go|an operation against British positions in Assam, India]],&lt;ref name=&quot;Lightbody 2004 224&quot;&gt;{{Harvnb|Lightbody|2004|p=224}}.&lt;/ref&gt; and soon besieged Commonwealth positions at [[Battle of Imphal|Imphal]] and [[Battle of Kohima|Kohima]].&lt;ref name=&quot;Zeiler&quot;&gt;{{Harvnb|Zeiler|2004|p=60}}.&lt;/ref&gt; In May 1944, British forces mounted a counter-offensive that drove Japanese troops back to Burma,&lt;ref name=&quot;Zeiler&quot;/&gt; and Chinese forces that had [[Battle of Northern Burma and Western Yunnan|invaded northern Burma]] in late 1943 [[Siege of Myitkyina|besieged Japanese troops]] in [[Myitkyina]].&lt;ref&gt;{{Harvnb|Beevor|2012|pp=55560}}.&lt;/ref&gt; The [[Operation Ichi-Go|second Japanese invasion]] of China aimed to destroy China's main fighting forces, secure railways between Japanese-held territory and capture Allied airfields.&lt;ref&gt;{{Harvnb|Ch'i|1992|p=163}}.&lt;/ref&gt; By June, the Japanese had conquered the province of [[Henan]] and begun a [[Battle of Changsha (1944)|new attack on Changsha]] in the [[Hunan]] province.&lt;ref&gt;{{Harvnb|Coble|2003|p=85}}.&lt;/ref&gt;

===Allies close in (1944)===

[[File:Approaching Omaha.jpg|thumb|American troops approaching [[Omaha Beach]], during the [[Invasion of Normandy]] on [[D-Day]], 6 June 1944]]

On 6 June 1944 (known as [[Normandy landings|D-Day]]), after three years of Soviet pressure,&lt;ref name=rees406&gt;{{Harvnb|Rees|2008|pp=4067}}: &quot;Stalin always believed that Britain and America were delaying the second front so that the Soviet Union would bear the brunt of the war.&quot;&lt;/ref&gt; the Western Allies [[Invasion of Normandy|invaded northern France]]. After reassigning several Allied divisions from Italy, they also [[Operation Dragoon|attacked southern France]].&lt;ref name=&quot;Weinberg 2005 695&quot;&gt;{{Harvnb|Weinberg|2005|p=695}}.&lt;/ref&gt; These landings were successful, and led to the defeat of the [[Falaise Pocket|German Army units]] in France. Paris was [[Liberation of Paris|liberated]] by the [[French Resistance|local resistance]] assisted by the [[Free French Forces]], both led by General [[Charles de Gaulle]], on 25 August&lt;ref&gt;{{Harvnb|Badsey|1990|p=91}}.&lt;/ref&gt; and the Western Allies continued to [[Allied advance from Paris to the Rhine|push back German forces]] in western Europe during the latter part of the year. An attempt to advance into northern Germany spearheaded by [[Operation Market Garden|a major airborne operation]] in the Netherlands failed.&lt;ref&gt;{{Harvnb|Dear|Foot|2001|p=562}}.&lt;/ref&gt; After that, the Western Allies slowly pushed into Germany, but [[Operation Queen|failed to cross the Ruhr river]] in a large offensive. In Italy, Allied advance also slowed due to the [[Gothic Line|last major German defensive line]].&lt;ref&gt;{{Harvnb|Forrest|Evans|Gibbons|2012|p=191}}&lt;/ref&gt;

[[File:Bundesarchiv Bild 183-97906, Warschauer Aufstand, Straenkampf.jpg|thumb|left|German [[Schutzstaffel|SS]] soldiers from the [[Dirlewanger Brigade]], tasked with suppressing the [[Warsaw Uprising]] against Nazi occupation, August 1944]]

On 22 June, the Soviets launched a strategic offensive in Belarus (&quot;[[Operation Bagration]]&quot;) that destroyed the German [[Army Group Centre]] almost completely.&lt;ref name=&quot;Zaloga 1996 7&quot;&gt;{{Harvnb|Zaloga|1996|p=7}}: &quot;It was the most calamitous defeat of all the German armed forces in World War II.&quot;&lt;/ref&gt; Soon after that [[LvovSandomierz Offensive|another Soviet strategic offensive]] forced German troops from Western Ukraine and Eastern Poland. The Soviet advance prompted [[Armia Krajowa|resistance forces in Poland]] to [[Operation Tempest|initiate several uprisings]] against the German occupation. However, the largest of these [[Warsaw Uprising|in Warsaw]], where German soldiers massacred 200,000 civilians, and a [[Slovak National Uprising|national uprising]] in [[Slovak Republic (19391945)|Slovakia]], did not receive Soviet support and were subsequently suppressed by the Germans.&lt;ref&gt;{{Harvnb|Berend|1996|p=8}}.&lt;/ref&gt; The Red Army's [[JassyKishinev Offensive|strategic offensive in eastern Romania]] cut off and destroyed the [[Army Group South Ukraine|considerable German troops there]] and triggered [[King Michael's Coup|a successful coup d'tat in Romania]] and [[Bulgarian coup d'tat of 1944|in Bulgaria]], followed by those countries' shift to the Allied side.&lt;ref name=&quot;countrystudies.us&quot;&gt;{{cite web|url=http://countrystudies.us/romania/23.htm|title=Armistice Negotiations and Soviet Occupation|publisher=US Library of Congress|accessdate=14 November 2009|quote=The coup speeded the Red Army's advance, and the Soviet Union later awarded Michael the Order of Victory for his personal courage in overthrowing Antonescu and putting an end to Romania's war against the Allies. Western historians uniformly point out that the Communists played only a supporting role in the coup; postwar Romanian historians, however, ascribe to the Communists the decisive role in Antonescu's overthrow}}&lt;/ref&gt;

In September 1944, Soviet troops advanced into [[Democratic Federal Yugoslavia|Yugoslavia]] and forced the rapid withdrawal of German Army Groups [[Army Group E|E]] and [[Army Group F|F]] in [[Axis occupation of Greece|Greece]], [[Albanian Kingdom (194344)|Albania]] and Yugoslavia to rescue them from being cut off.&lt;ref name=&quot;Evans 2008 653&quot;&gt;{{Harvnb|Evans|2008|p=653}}.&lt;/ref&gt; By this point, the Communist-led [[Yugoslav Partisans|Partisans]] under Marshal [[Josip Broz Tito]], who had led an [[World War II in Yugoslavia|increasingly successful guerrilla campaign]] against the occupation since 1941, controlled much of the territory of Yugoslavia and engaged in delaying efforts against German forces further south. In northern [[Serbia (19411944)|Serbia]], the [[Red Army]], with limited support from Bulgarian forces, assisted the Partisans in a joint [[Belgrade Offensive|liberation of the capital city of Belgrade]] on 20 October. A few days later, the Soviets launched a [[Budapest Offensive|massive assault]] against [[Operation Panzerfaust|German-occupied]] Hungary that lasted until [[Battle of Budapest|the fall of Budapest]] in February 1945.&lt;ref&gt;{{Harvnb|Wiest|Barbier|2002|pp=656}}.&lt;/ref&gt; Unlike impressive Soviet victories in the Balkans, [[Continuation War|bitter Finnish resistance]] to the [[VyborgPetrozavodsk Offensive|Soviet offensive]] in the [[Karelian Isthmus]] denied the Soviets occupation of Finland and led to a [[Moscow Armistice|Soviet-Finnish armistice]] on relatively mild conditions,&lt;ref&gt;{{Cite book|last=Wiktor|first=Christian L|title=Multilateral Treaty Calendar  16481995|publisher=Kluwer Law International|year=1998|isbn=90-411-0584-0|page=426}}&lt;/ref&gt;&lt;ref&gt;{{Harvnb|Newton|2004}}.&lt;/ref&gt; although Finland was forced to [[Lapland War|fight their former allies]].

[[File:Douglas MacArthur lands Leyte1.jpg|thumb|General [[Douglas MacArthur]] lands at [[Leyte]], during the [[Battle of Leyte]], 20 October 1944]]

By the start of July 1944, Commonwealth forces in Southeast Asia had repelled the Japanese sieges in Assam, pushing the Japanese back to the [[Chindwin River]]&lt;ref name=&quot;Marston 2005 120&quot;&gt;{{Harvnb|Marston|2005|p=120}}.&lt;/ref&gt; while the Chinese captured Myitkyina. In September 1944, Chinese force [[Battle of Mount Song|captured the Mount Song]] to reopen the [[Burma Road]].&lt;ref&gt;Article about War of Resistance {{cite web|url=http://www.china1931.cn/China/ShowArticle.asp?ArticleID%3D7648 |title=Archived copy |accessdate=2013-03-16 |deadurl=yes |archiveurl=https://web.archive.org/web/20160303224203/http://www.china1931.cn/China/ShowArticle.asp?ArticleID=7648 |archivedate=2016-03-03 |df= }}&lt;/ref&gt; In China, the Japanese had more successes, having finally captured Changsha in mid-June and the city of [[Defense of Hengyang|Hengyang]] by early August.&lt;ref&gt;{{Harvnb|Jowett|Andrew|2002|p=8}}.&lt;/ref&gt; Soon after, they invaded the province of Guangxi, winning major engagements against Chinese forces at [[Battle of GuilinLiuzhou|Guilin and Liuzhou]] by the end of November&lt;ref&gt;{{Harvnb|Howard|2004|p=140}}.&lt;/ref&gt; and successfully linking up their forces in China and Indochina by mid-December.&lt;ref name=&quot;Drea 2003 54&quot;&gt;{{Harvnb|Drea|2003|p=54}}.&lt;/ref&gt;

In the Pacific, US forces continued to press back the Japanese perimeter. In mid-June 1944, they began their [[Mariana and Palau Islands campaign|offensive against the Mariana and Palau islands]], and decisively defeated Japanese forces in the [[Battle of the Philippine Sea]]. These defeats led to the resignation of the Japanese Prime Minister, [[Hideki Tojo]], and provided the United States with air bases to launch intensive heavy bomber attacks on the Japanese home islands. In late October, American forces [[Battle of Leyte|invaded the Filipino island of Leyte]]; soon after, Allied naval forces scored another large victory in the [[Battle of Leyte Gulf]], one of the largest naval battles in history.&lt;ref&gt;{{Harvnb|Cook|Bewes|1997|p=305}}.&lt;/ref&gt;

===Axis collapse, Allied victory (194445)===

[[File:Yalta Conference (Churchill, Roosevelt, Stalin) (B&amp;W).jpg|thumb|[[Yalta Conference]] held in February 1945, with [[Winston Churchill]], [[Franklin D. Roosevelt]] and [[Joseph Stalin]]]]

On 16 December 1944, Germany made a last attempt on the Western Front by using most of its remaining reserves to launch [[Battle of the Bulge|a massive counter-offensive in the Ardennes]] and [[Operation Nordwind|along the FrenchGerman border]] to split the Western Allies, encircle large portions of Western Allied troops and capture their primary supply port at [[Antwerp]] to prompt a political settlement.&lt;ref name=&quot;parkerxiii&quot;&gt;{{Harvnb|Parker|2004|pp=xiiixiv, 68, 6870, 329330}}&lt;/ref&gt; By January, the offensive had been repulsed with no strategic objectives fulfilled.&lt;ref name=&quot;parkerxiii&quot;/&gt; In Italy, the Western Allies remained stalemated at the German defensive line. In mid-January 1945, the Soviets and Poles attacked in Poland, [[VistulaOder Offensive|pushing from the Vistula to the Oder]] river in Germany, and [[East Prussian Offensive|overran East Prussia]].&lt;ref&gt;{{Harvnb|Glantz|2001|p=85}}.&lt;/ref&gt; On 4 February, Soviet, British and US leaders met for the [[Yalta Conference]]. They agreed on the occupation of post-war Germany, and on when the Soviet Union would join the war against Japan.&lt;ref&gt;{{Harvnb|Beevor|2012|pp=70922}}.&lt;/ref&gt;

In February, the Soviets [[Silesian Offensives|entered Silesia]] and [[East Pomeranian Offensive|Pomerania]], while [[Western Allied invasion of Germany|Western Allies entered western Germany]] and closed to the [[Rhine]] river. By March, the Western Allies crossed the Rhine [[Operation Plunder|north]] and [[Remagen|south]] of the [[Rhine-Ruhr|Ruhr]], [[Ruhr Pocket|encircling the German Army Group B]],&lt;ref&gt;{{Harvnb|Buchanan|2006|p=21}}.&lt;/ref&gt; while the Soviets advanced to [[Vienna]]. In early April, the Western Allies finally [[Spring 1945 offensive in Italy|pushed forward in Italy]] and swept across western Germany capturing [[Battle of Hamburg  (1945)|Hamburg]] and [[Battle of Nuremberg  (1945)|Nuremberg]], while Soviet and Polish forces [[Battle of Berlin|stormed Berlin]] in late April. [[Elbe Day|American and Soviet forces met at the Elbe river]] on 25 April. On 30 April 1945, the [[Reichstag building|Reichstag]] was captured, signalling the military defeat of Nazi Germany.&lt;ref name=&quot;Shepardson 1998&quot;&gt;{{Harvnb|Shepardson|1998}}.&lt;/ref&gt;

Several changes in leadership occurred during this period. On 12 April, President Roosevelt died and was succeeded by [[Harry S. Truman]]. Benito Mussolini [[Death of Benito Mussolini|was killed]] by [[Italian resistance movement|Italian partisans]] on 28 April.&lt;ref name=&quot;O'Reilly 2001 244&quot;&gt;{{Harvnb|O'Reilly|2001||p=244}}.&lt;/ref&gt; Two days later, [[Death of Adolf Hitler|Hitler committed suicide]], and was succeeded by [[Grand Admiral]] [[Karl Dnitz]].&lt;ref&gt;{{Harvnb|Kershaw|2001|p=823}}.&lt;/ref&gt;

[[File:Reichstag after the allied bombing of Berlin.jpg|thumb|left|The German [[Reichstag building|Reichstag]] after its capture by the Allied forces, 3 June 1945]]

German forces surrendered in Italy on 29 April. [[German Instrument of Surrender|Total and unconditional surrender]] was signed [[Victory in Europe Day|on 7 May]], to be effective by the end of [[Victory Day (Eastern Front)|8 May]].&lt;ref name=&quot;Evans 2008 737&quot;&gt;{{Harvnb|Evans|2008|p=737}}.&lt;/ref&gt; German Army Group Centre [[Prague Offensive|resisted in Prague]] until 11 May.&lt;ref name=&quot;Glantz 1998 34&quot;&gt;{{Harvnb|Glantz|1998|p=24}}.&lt;/ref&gt;

In the Pacific theatre, American forces accompanied by the forces of the [[Philippine Commonwealth]] advanced [[Philippines Campaign (19441945)|in the Philippines]], [[Battle of Leyte|clearing Leyte]] by the end of April 1945. They [[Battle of Luzon|landed on Luzon]] in January 1945 and [[Battle of Manila (1945)|recaptured Manila]] in March following a battle which reduced the city to ruins. Fighting continued on Luzon, [[Battle of Mindanao|Mindanao]], and other islands of the Philippines until the [[End of World War II in Asia|end of the war]].&lt;ref&gt;{{Cite book|last=Chant|first=Christopher|year=1986|title=The Encyclopedia of Codenames of World War II|publisher=Routledge &amp; Kegan Paul|page=118|isbn=0-7102-0718-2}}&lt;/ref&gt; Meanwhile, the [[United States Army Air Forces]] (USAAF) were destroying strategic and populated cities and towns in Japan in an effort to destroy Japanese war industry and civilian morale. On the night of 910 March, USAAF [[Boeing B-29 Superfortress|B-29]] [[bomber]]s [[Bombing of Tokyo|struck Tokyo]] with thousands of [[Incendiary device|incendiary bombs]], which killed 100,000 civilians and destroyed {{convert|16|sqmi}} within a few hours. Over the next five months, the USAAF [[Air raids on Japan|firebombed a total of 67 Japanese cities]], killing 393,000 civilians and destroying 65% of built-up areas.&lt;ref&gt;{{cite journal|author=John Dower|title=Lessons from Iwo Jima|journal=Perspectives|year=2007|volume= 45|issue=6|pages=5456|url=http://www.historians.org/perspectives/issues/2007/0709/index.cfm}}&lt;/ref&gt;

In May 1945, Australian troops [[Borneo campaign (1945)|landed in Borneo]], overrunning the oilfields there. British, American, and Chinese forces defeated the Japanese in northern [[Burma Campaign|Burma]] in March, and the British pushed on to reach [[Rangoon]] by 3 May.&lt;ref name=&quot;Drea 2003 57&quot;&gt;{{Harvnb|Drea|2003|p=57}}.&lt;/ref&gt; Chinese forces started to counterattack in [[Battle of West Hunan]] that occurred between 6 April and 7 June 1945. American naval and amphibious forces also moved towards Japan, taking [[Battle of Iwo Jima|Iwo Jima]] by March, and [[Battle of Okinawa|Okinawa]] by the end of June.&lt;ref&gt;{{Harvnb|Jowett|Andrew|2002|p=6}}.&lt;/ref&gt; At the same time, American submarines [[Allied submarines in the Pacific War|cut off]] Japanese imports, drastically reducing Japan's ability to supply its overseas forces.&lt;ref name=&quot;results of german and american submarines&quot;&gt;{{cite web|last=Poirier |first=Michel Thomas |title=Results of the German and American Submarine Campaigns of World War II |url=http://www.navy.mil/navydata/cno/n87/history/wwii-campaigns.html |publisher=U.S. Navy |date=20 October 1999 |accessdate=13 April 2008 |deadurl=yes |archiveurl=https://web.archive.org/web/20080409052122/http://www.navy.mil/navydata/cno/n87/history/wwii-campaigns.html |archivedate=9 April 2008 }}&lt;/ref&gt;

[[File:Shigemitsu-signs-surrender.jpg|thumb|right|Japanese foreign affairs minister [[Mamoru Shigemitsu]] signs the [[Japanese Instrument of Surrender]] on board {{USS|Missouri|BB-63|6}}, 2 September 1945]]

On 11 July, Allied leaders [[Potsdam Conference|met in Potsdam, Germany]]. They [[Potsdam Agreement|confirmed earlier agreements]] about Germany,&lt;ref name=&quot;Williams 2006 90&quot;&gt;{{Harvnb|Williams|2006|p=90}}.&lt;/ref&gt; and reiterated the demand for unconditional surrender of all Japanese forces by Japan, specifically stating that &quot;the alternative for Japan is prompt and utter destruction&quot;.&lt;ref name=&quot;Miscamble 2007 201&quot;&gt;{{Harvnb|Miscamble|2007|p=201}}.&lt;/ref&gt; During this conference, the [[United Kingdom general election, 1945|United Kingdom held its general election]], and [[Clement Attlee]] replaced Churchill as Prime Minister.&lt;ref name=&quot;Miscamble 2007 203_204&quot;&gt;{{Harvnb|Miscamble|2007|pp=2034}}.&lt;/ref&gt;

The Allies called for unconditional Japanese surrender in the [[Potsdam Declaration]] of 27 July, but the Japanese government rejected the call. In early August, the USAAF [[Atomic bombings of Hiroshima and Nagasaki|dropped atomic bombs]] on the Japanese cities of [[Hiroshima]] and [[Nagasaki]]. The Allies justified the atomic bombings as a military necessity to avoid [[Operation Downfall|invading the Japanese home islands]] which would cost the lives of between 250,000 and 500,000 Allied servicemen and millions of Japanese troops and civilians.&lt;ref&gt;{{cite book |title=Defeating Japan: The Joint Chiefs of Staff and Strategy in the Pacific War, 19431945 |pages=133144 |date=16 October 2012 |author=Charles F. Brower |publisher=[[Palgrave Macmillan]]}}&lt;/ref&gt; Between the two bombings, the Soviets, pursuant to the Yalta agreement, [[Soviet invasion of Manchuria|invaded Japanese-held Manchuria]], and quickly defeated the [[Kwantung Army]], which was the largest Japanese fighting force.&lt;ref&gt;{{Harvnb|Glantz|2005}}.&lt;/ref&gt;&lt;ref name=&quot;Pape 1993&quot;&gt;{{Harvnb|Pape|1993}}.&lt;/ref&gt; The Red Army also captured [[Sakhalin]] Island and the [[Kuril Islands]]. On 15 August 1945, [[Surrender of Japan|Japan surrendered]], with the [[Japanese Instrument of Surrender|surrender documents]] finally signed at [[Tokyo Bay]] on the deck of the American battleship [[USS Missouri (BB-63)|USS ''Missouri'']] on 2 September 1945, ending the war.&lt;ref name=&quot;Beevor 2012 776&quot;&gt;{{Harvnb|Beevor|2012|p=776}}.&lt;/ref&gt;

==Aftermath==
{{Main article|Aftermath of World War II|Consequences of Nazism}}

[[File:Ww2_170.jpg|thumb|Defendants at the [[Nuremberg trials]], where the Allied forces prosecuted prominent members of the political, military, judicial and economic leadership of [[Nazi Germany]] for [[crimes against humanity]]]]
The Allies established occupation administrations in [[Allied-occupied Austria|Austria]] and [[Allied-occupied Germany|Germany]]. The former became a neutral state, non-aligned with any political bloc. The latter was divided into western and eastern occupation zones controlled by the Western Allies and the USSR, accordingly. A [[denazification]] programme in Germany led to the [[Nuremberg trials|prosecution of Nazi war criminals]] and the removal of ex-Nazis from power, although this policy moved towards amnesty and re-integration of ex-Nazis into West German society.&lt;ref name=&quot;Frei 2002 41_66&quot;&gt;{{Harvnb|Frei|2002|pp=4166}}.&lt;/ref&gt;

[[File:Destroyed Warsaw, capital of Poland, January 1945.jpg|thumb|left|Ruins of [[Warsaw]] in January 1945, after the [[Planned destruction of Warsaw|deliberate destruction of the city]] by the occupying German forces]]
Germany lost a quarter of its pre-war (1937) territory. Among the eastern territories, [[Silesia]], [[Neumark]] and most of [[Pomerania]] were taken over by Poland, [[East Prussia]] was divided between Poland and the USSR, followed by the [[Flight and expulsion of Germans (194450)|expulsion of the 9 million Germans]] from these provinces, as well as the expulsion of 3 million Germans from the [[Sudetenland]] in Czechoslovakia to Germany. By the 1950s, every fifth West German was a refugee from the east. The Soviet Union also took over the Polish provinces east of the [[Curzon line]], from which [[Polish population transfers (19441946)|2 million Poles were expelled]];&lt;ref name=&quot;stalinswars43&quot;&gt;{{Harvnb|Roberts|2006|p=43}}.&lt;/ref&gt; north-east Romania,&lt;ref name=&quot;stalinswars55&quot;&gt;{{Harvnb|Roberts|2006|p=55}}.&lt;/ref&gt;&lt;ref name=&quot;shirer794&quot;&gt;{{Harvnb|Shirer|1990|p=794}}.&lt;/ref&gt; parts of eastern Finland,&lt;ref name=&quot;ckpipe&quot;&gt;{{Harvnb|Kennedy-Pipe|1995}}.&lt;/ref&gt; and the three [[Baltic states]] were also [[Soviet occupation of the Baltic states (1944)|incorporated into the USSR]].&lt;ref name=&quot;Wettig 2008 20_21&quot;&gt;{{Harvnb|Wettig|2008|pp=201}}.&lt;/ref&gt;&lt;ref name=&quot;Senn 2007 ?&quot;&gt;{{Harvnb|Senn|2007|p=?}}.&lt;/ref&gt;

In an effort to maintain [[world peace]],&lt;ref name=&quot;Yoder 1997 39&quot;&gt;{{Harvnb|Yoder|1997|p=39}}.&lt;/ref&gt; the Allies formed the [[United Nations]], which officially came into existence on 24 October 1945,&lt;ref&gt;{{cite web|url=https://www.un.org/aboutun/history.htm |title=History of the UN |publisher=United Nations |accessdate=25 January 2010 |deadurl=yes |archiveurl=https://web.archive.org/web/20100218221016/http://www.un.org/aboutun/history.htm |archivedate=18 February 2010 }}&lt;/ref&gt; and adopted the [[Universal Declaration of Human Rights]] in 1948, as a common standard for all [[Member states of the United Nations|member nations]].&lt;ref name=&quot;Waltz 2002&quot;&gt;{{Harvnb|Waltz|2002}}.&lt;br /&gt;The UDHR is viewable here [https://www.un.org/en/documents/udhr/].&lt;/ref&gt; The great powers that were the victors of the warFrance, China, Britain, the Soviet Union and the United Statesbecame the [[Permanent members of the United Nations Security Council|permanent members]] of the UN's [[United Nations Security Council|Security Council]].&lt;ref name=&quot;The UN Security Council&quot;/&gt; The five permanent members remain so to the present, although there have been two seat changes, [[United Nations General Assembly Resolution 2758|between]] the [[Taiwan|Republic of China]] and the [[China|People's Republic of China]] in 1971, and between the Soviet Union and its [[successor state]], the [[Russia|Russian Federation]], following the [[dissolution of the Soviet Union]] in 1991. The alliance between the Western Allies and the Soviet Union had begun to deteriorate even before the war was over.&lt;ref name=&quot;Kantowicz 2000 6&quot;&gt;{{Harvnb|Kantowicz|2000|p=6}}.&lt;/ref&gt;

[[File:EasternBloc BorderChange38-48.svg|thumb|right|180px|Post-war Soviet territorial expansion resulted in [[Central Europe|Central]] and [[Eastern Europe]]an border changes, the creation of a [[Eastern Bloc|Communist Bloc]] and start of the [[Cold War]]]]
Germany had been ''de facto'' divided, and two independent states, the [[West Germany|Federal Republic of Germany]] and the [[East Germany|German Democratic Republic]]&lt;ref name=&quot;Wettig 2008 96_100&quot;&gt;{{Harvnb|Wettig|2008|pp=96100}}.&lt;/ref&gt; were created within the borders of [[Bizone|Allied]] and [[Soviet occupation zone]]s, accordingly. The rest of Europe was also divided into Western and Soviet [[spheres of influence]].&lt;ref name=&quot;Trachtenberg 1999 33&quot;&gt;{{Harvnb|Trachtenberg|1999|p=33}}.&lt;/ref&gt; Most eastern and central European countries fell into [[Eastern Bloc|the Soviet sphere]], which led to establishment of Communist-led regimes, with full or partial support of the Soviet occupation authorities. As a result, [[East Germany]],&lt;ref name=&quot;Applebaum 2012&quot;&gt;{{Harvnb|Applebaum|2012}}.&lt;/ref&gt; [[Polish People's Republic|Poland]], [[Hungarian People's Republic|Hungary]], [[Socialist Republic of Romania|Romania]], [[Czechoslovak Socialist Republic|Czechoslovakia]], and [[People's Socialist Republic of Albania|Albania]]&lt;ref name=&quot;Naimark 2010&quot;&gt;{{Harvnb|Naimark|2010}}.&lt;/ref&gt; became Soviet [[satellite state]]s. Communist [[Socialist Federal Republic of Yugoslavia|Yugoslavia]] conducted a fully [[Non-Aligned Movement|independent policy]], causing [[TitoStalin Split|tension with the USSR]].&lt;ref name=&quot;Swain 1992&quot;&gt;{{Harvnb|Swain|1992}}.&lt;/ref&gt;

Post-war division of the world was formalised by two international military alliances, the United States-led [[NATO]] and the Soviet-led [[Warsaw Pact]];&lt;ref name=&quot;Borstelmann 2005 318&quot;&gt;{{Harvnb|Borstelmann|2005|p=318}}.&lt;/ref&gt; the long period of political tensions and military competition between them, the [[Cold War]], would be accompanied by an unprecedented [[arms race]] and [[proxy war]]s.&lt;ref&gt;{{Harvnb|Leffler|Westad|2010}}.&lt;/ref&gt;

In Asia, the United States led the [[occupation of Japan]] and [[Trust Territory of the Pacific Islands|administrated Japan's former islands in the Western Pacific]], while the Soviets annexed [[Sakhalin]] and the [[Kuril Islands]].&lt;ref name=&quot;Weinberg 2005 911&quot;&gt;{{Harvnb|Weinberg|2005|p=911}}.&lt;/ref&gt; [[Korea]], formerly [[Korea under Japanese rule|under Japanese rule]], was [[Division of Korea|divided and occupied]] by the Soviet Union in the [[North Korea|North]] and the US in the [[South Korea|South]] between 1945 and 1948. Separate republics emerged on both sides of the 38th parallel in 1948, each claiming to be the legitimate government for all of Korea, which led ultimately to the [[Korean War]].&lt;ref&gt;{{Harvnb|Stueck|2010}}.&lt;/ref&gt;

[[File:Declaration of State of Israel 1948.jpg|thumb|left|[[David Ben-Gurion]] proclaiming the [[Israeli Declaration of Independence]] at the [[Independence Hall (Israel)|Independence Hall]], 14 May 1948]]
In China, nationalist and communist forces resumed [[Chinese Civil War|the civil war]] in June 1946. Communist forces were victorious and established the People's Republic of China on the mainland, while nationalist forces retreated to [[Taiwan]] in 1949.&lt;ref name=&quot;Lynch 2010 12_13&quot;&gt;{{Harvnb|Lynch|2010|pp=123}}.&lt;/ref&gt; In the Middle East, the Arab rejection of the [[United Nations Partition Plan for Palestine]] and the [[creation of Israel]] marked the escalation of the [[ArabIsraeli conflict]]. While European powers attempted to retain some or all of their [[colonial empire]]s, their losses of prestige and resources during the war rendered this unsuccessful, leading to [[Decolonization|decolonisation]].&lt;ref name=&quot;JMRoberts 1996 589&quot;&gt;{{Harvnb|Roberts|1997|p=589}}.&lt;/ref&gt;&lt;ref&gt;{{Harvnb|Darwin|2007|pp=4413, 4648}}.&lt;/ref&gt;

The global economy suffered heavily from the war, although participating nations were affected differently. The US emerged much richer than any other nation; it had a [[PostWorld War II baby boom|baby boom]] and by 1950 its gross domestic product per person was much higher than that of any of the other powers and it dominated the world economy.&lt;ref&gt;{{Harvnb|Dear|Foot|2001|p=1006}}; {{Harvnb|Harrison|1998|pp=345}}.&lt;/ref&gt; The UK and US pursued a policy of [[Allied plans for German industry after World War II|industrial disarmament in Western Germany]] in the years 19451948.&lt;ref name = &quot;Balabkins 1964 207&quot;&gt;{{Harvnb|Balabkins|1964|p=207}}.&lt;/ref&gt; Because of international trade interdependencies this led to European economic stagnation and delayed European recovery for several years.&lt;ref&gt;{{Harvnb|Petrov|1967|p=263}}.&lt;/ref&gt;&lt;ref name = &quot;Balabkins 1964 208,209&quot;&gt;{{Harvnb|Balabkins|1964|pp=208, 209}}.&lt;/ref&gt;

Recovery began with the mid-1948 [[Deutsche Mark|currency reform in Western Germany]], and was sped up by the liberalisation of European economic policy that the [[Marshall Plan]] (19481951) both directly and indirectly caused.&lt;ref&gt;{{Harvnb|DeLong|Eichengreen|1993|pp=190, 191}}&lt;/ref&gt;&lt;ref name = &quot;Balabkins 1964 212&quot;&gt;{{Harvnb|Balabkins|1964|p=212}}.&lt;/ref&gt; The post-1948 West German recovery has been called the [[Wirtschaftswunder#West Germany|German economic miracle]].&lt;ref&gt;{{Harvnb|Wolf|1993|pp=29, 30, 32}}&lt;/ref&gt; Italy also experienced an [[Italian economic miracle|economic boom]]&lt;ref&gt;{{Harvnb|Bull|Newell|2005|pp=20, 21}}&lt;/ref&gt; and the [[Trente Glorieuses|French economy rebounded]].&lt;ref&gt;{{Harvnb|Ritchie|1992|p=23}}.&lt;/ref&gt; By contrast, the United Kingdom was in a state of economic ruin,&lt;ref&gt;{{Harvnb|Minford|1993|p=117}}.&lt;/ref&gt; and although it received a quarter of the total Marshall Plan assistance, more than any other European country&lt;!--twice as much as Germany for example--&gt;,&lt;ref&gt;{{Harvnb|Schain|2001}}.&lt;/ref&gt; continued relative economic decline for decades.&lt;ref&gt;{{Harvnb|Emadi-Coffin|2002|p=64}}.&lt;/ref&gt;

The Soviet Union, despite enormous human and material losses, also experienced rapid increase in production in the immediate post-war era.&lt;ref name=&quot;Smith 1993 32&quot;&gt;{{Harvnb|Smith|1993|p=32}}.&lt;/ref&gt; Japan experienced [[Japanese post-war economic miracle|incredibly rapid]] economic growth, becoming one of the most powerful economies in the world by the 1980s.&lt;ref&gt;{{Harvnb|Neary|1992|p=49}}.&lt;/ref&gt; China returned to its pre-war industrial production by 1952.&lt;ref&gt;{{cite book|last=Genzberger|first=Christine|title=China Business: The Portable Encyclopedia for Doing Business with China|year=1994|publisher=World Trade Press|isbn=0-9631864-3-4|url=https://books.google.com/?id=YSCunEaqnI8C&amp;pg=PA4|location=Petaluma, California|page=4}}&lt;/ref&gt;

==Impact==

===Casualties and war crimes===
{{Main article|World War II casualties|War crimes during World War II|War crimes in occupied Poland during World War II|German war crimes|War crimes of the Wehrmacht|Italian war crimes|Japanese war crimes|Allied war crimes during World War II|Soviet war crimes}}

[[File:World War II Casualties2.svg|425px|World War II deaths|thumb]]

Estimates for the total number of casualties in the war vary, because many deaths went unrecorded. Most suggest that some 60 million people died in the war, including about [[Battle casualties of World War II|20 million military personnel]] and 40 million civilians.&lt;ref name=&quot;WWII: C&amp;C&quot;&gt;{{cite web|last=O'Brien |first=Prof. Joseph V |title=World War II: Combatants and Casualties (19371945) |url=http://web.jjay.cuny.edu/~jobrien/reference/ob62.html |archiveurl=https://web.archive.org/web/20101225004221/http://web.jjay.cuny.edu/~jobrien/reference/ob62.html |archivedate=25 December 2010 |work=Obee's History Page |publisher=John Jay College of Criminal Justice |accessdate=28 December 2013 |deadurl=yes |df=dmy-all }}&lt;/ref&gt;&lt;ref&gt;{{cite web|first=Matthew|last=White|title=Source List and Detailed Death Tolls for the Twentieth Century Hemoclysm|url=http://necrometrics.com/20c5m.htm#Second|work=Historical Atlas of the Twentieth Century|publisher=Matthew White's Homepage|accessdate=20 April 2007}}&lt;/ref&gt;&lt;ref&gt;{{cite web|title=World War II Fatalities|url=http://secondworldwar.co.uk/index.php/fatalities|publisher=secondworldwar.co.uk|accessdate=20 April 2007}}&lt;/ref&gt;
Many of the civilians died because of deliberate [[genocide]], [[List of massacres|massacres]], [[Strategic bombing during World War II|mass-bombing]]s, [[Infectious disease|disease]], and [[starvation]].

The Soviet Union lost around 27 million people during the war,&lt;ref&gt;{{Harvnb|Hosking|2006|p=[https://books.google.com/books?id=CDMVMqDvp4QC&amp;pg=PA242 242]}}&lt;/ref&gt; including 8.7 million military and 19 million civilian deaths. The largest portion of military dead were 5.7 million ethnic [[Russians]], followed by 1.3 million ethnic [[Ukrainians]].&lt;ref name=&quot;Ell&amp;Mak 1994&quot;&gt;{{Harvnb|Ellman|Maksudov|1994}}.&lt;/ref&gt; A quarter of the people in the Soviet Union were wounded or killed.&lt;ref&gt;{{Harvnb|Smith|1994|p=204}}.&lt;/ref&gt; Germany sustained 5.3 million military losses, mostly on the Eastern Front and during the final battles in Germany.&lt;ref name=&quot;Herf 2003&quot;&gt;{{Harvnb|Herf|2003}}.&lt;/ref&gt;

Of the total number of deaths in World War&amp;nbsp;II, approximately 85 per centmostly Soviet and Chinesewere on the Allied side and 15 per cent were on the Axis side.&lt;ref&gt;{{cite web|url=https://books.google.com/books?id=ZA8lAgAAQBAJ&amp;pg=PT15&amp;lpg=PT15&amp;dq=Of+the+total+number+of+deaths+in+World+War+II,+approximately+85+per+cent%E2%80%94mostly+Soviet+and+Chinese%E2%80%94were+on+the+Allied+side+and+15+per+cent+were+on+the+Axis+side.&amp;source=bl&amp;ots=Zweyo5vWEN&amp;sig=nV-9c6us_4lK3SqUxfORNmZHhts&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiBgZLKrebVAhUELVAKHYrZCo0Q6AEIPDAD#v=onepage&amp;q=Of+the+total+number+of+deaths+in+World+War+II,+approximately+85+per+cent%E2%80%94mostly+Soviet+and+Chinese%E2%80%94were+on+the+Allied+side+and+15+per+cent+were+on+the+Axis+side.&amp;f=false|title=The Cruel Slaughter of Adolf Hitler|first=karsten|last=friedrich|publisher=Lulu.com|accessdate=27 August 2017|via=Google Books}}&lt;/ref&gt; Many of these deaths were caused by war crimes [[War crimes of the Wehrmacht|committed by German]] and [[Japanese war crimes|Japanese forces]] in occupied territories. An estimated 11&lt;ref&gt;{{cite web|author=Florida Center for Instructional Technology|url= http://fcit.usf.edu/Holocaust/people/victims.htm|title=Victims|work=A Teacher's Guide to the Holocaust|publisher=[[University of South Florida]]|year=2005|accessdate=2 February 2008}}&lt;/ref&gt; to 17 million&lt;ref name=Niewyk45&gt;{{Harvnb|Niewyk|Nicosia|2000|pp=4552}}.&lt;/ref&gt; civilians died either as a direct or as an indirect result of Nazi racist policies, including [[the Holocaust]] of around 6 million Jews, half of whom were Polish citizens, along with a further minimum 1.9 million ethnic Poles.&lt;ref&gt;{{cite web|url=http://www.nybooks.com/articles/2009/07/16/holocaust-the-ignored-reality/|title=Holocaust: The Ignored Reality|first=Timothy|last=Snyder|website=The New York Review of Books|accessdate=27 August 2017}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=https://www.ushmm.org/wlc/en/article.php?ModuleId=10005473|title=Polish Victims|website=www.ushmm.org|accessdate=27 August 2017}}&lt;/ref&gt; Millions of other Slavs (including Russians, Ukrainians and Belarusians), [[Romani people|Roma]], [[Persecution of homosexuals in Nazi Germany and the Holocaust|homosexuals]], and other ethnic and minority groups were also killed.&lt;ref&gt;{{cite news|url=http://www.bbc.co.uk/tyne/content/articles/2005/01/20/holocaust_memorial_other_victims_feature.shtml |title=Non-Jewish Holocaust Victims : The 5,000,000 others |work=[[BBC]]|date=April 2006|accessdate=4 August 2013}}&lt;/ref&gt;&lt;ref name=Niewyk45/&gt; Hundreds of thousands (varying estimates) of ethnic [[Serbs]], along with gypsies and Jews, were murdered by the Axis-aligned Croatian [[Ustae]] in [[Yugoslavia]],&lt;ref&gt;{{Harvnb|Evans|2008|pp=15860, 2346}}.&lt;/ref&gt; and [[Bleiburg repatriations|retribution-related killings]] were committed just after the war ended.

[[File:Chinese civilians to be buried alive.jpg|thumb|Chinese civilians being buried alive by soldiers of the [[Imperial Japanese Army]], during the [[Nanking Massacre]], December 1937]]

In Asia and the Pacific, between 3 million and more than 10 million civilians, mostly Chinese (estimated at 7.5 million&lt;ref&gt;{{Harvnb|Dear|Foot|2001|p=290}}.&lt;/ref&gt;), were killed by the Japanese occupation forces.&lt;ref&gt;{{cite web|url=http://www.hawaii.edu/powerkills/SOD.CHAP3.HTM|title=Statistics|last=Rummell|first=R. J|work=Freedom, Democide, War|publisher=The University of Hawaii System|accessdate=25 January 2010}}&lt;/ref&gt; The best-known Japanese atrocity was the [[Nanking Massacre]], in which fifty to three hundred thousand Chinese civilians were raped and murdered.&lt;ref&gt;{{Harvnb|Chang|1997|p=102}}.&lt;/ref&gt; Mitsuyoshi Himeta reported that 2.7 million casualties occurred during the ''[[Three Alls Policy|Sank Sakusen]]''. General [[Yasuji Okamura]] implemented the policy in Heipei and [[Shantung]].&lt;ref&gt;{{Harvnb|Bix|2000|p=?}}.&lt;/ref&gt;

Axis forces employed [[Biological warfare|biological]] and [[Chemical warfare|chemical weapons]]. The [[Imperial Japanese Army]] used a variety of such weapons during its [[Second Sino-Japanese War|invasion and occupation of China]] (''see [[Unit 731]]'')&lt;ref&gt;{{Cite book|last=Gold|first=Hal|title=Unit 731 testimony|publisher=Tuttle|year=1996|pages=757|isbn=0-8048-3565-9}}&lt;/ref&gt;&lt;ref&gt;{{Harvnb|Tucker|Roberts|2004|p=320}}.&lt;/ref&gt; and in [[Battles of Khalkhin Gol|early conflicts against the Soviets]].&lt;ref&gt;{{Harvnb|Harris|2002|p=74}}.&lt;/ref&gt; Both the Germans and [[Japanese human experimentation on the Chinese|Japanese tested]] such weapons against civilians&lt;ref&gt;{{Harvnb|Lee|2002|p=69}}.&lt;/ref&gt; and, sometimes on [[prisoner of war|prisoners of war]].&lt;ref&gt;{{cite web|title=Japan tested chemical weapons on Aussie POW: new evidence|publisher=[[The Japan Times Online]]|date=27 July 2004|url=http://search.japantimes.co.jp/member/nn20040727a9.html|archive-url=https://archive.is/20120529003741/http://search.japantimes.co.jp/member/nn20040727a9.html|dead-url=yes|archive-date=29 May 2012|accessdate=25 January 2010}}&lt;/ref&gt;

The Soviet Union was responsible for the [[Katyn massacre]] of 22,000 Polish officers,&lt;ref&gt;Kuniar-Plota, Magorzata (30 November 2004). &quot;Decision to commence investigation into Katyn Massacre&quot;. Departmental Commission for the Prosecution of Crimes against the Polish Nation. Retrieved 4 August 2011.&lt;/ref&gt; and the imprisonment or execution of thousands of political prisoners by the [[NKVD]],&lt;ref&gt;Robert Gellately. Lenin, Stalin, and Hitler: The Age of Social Catastrophe. Knopf, 2007 {{ISBN|1-4000-4005-1}} p. 391&lt;/ref&gt; in the [[Occupation of the Baltic states|Baltic states]], and [[Territories of Poland annexed by the Soviet Union|eastern Poland]] annexed by the Red Army.

The mass-bombing of cities in Europe and Asia has often been called a war crime.  However, no [[Positive international law|positive]] or specific [[Customary international law|customary]] [[international humanitarian law]] with respect to [[aerial warfare]] existed before or during World War&amp;nbsp;II.&lt;ref&gt;{{cite book |title=Terror from the Sky: The Bombing of German Cities in World War II |year=2010 |page=167 |publisher=[[Berghahn Books]] |isbn=1-84545-844-3}}&lt;/ref&gt;

===Genocide, concentration camps, and slave labour===
{{main|Genocide|The Holocaust|Nazi concentration camps|Extermination camp|Forced labour under German rule during World War II|Kidnapping of children by Nazi Germany|Nazi human experimentation}}

[[File:The Liberation of Bergen-belsen Concentration Camp, April 1945 BU4031.jpg|thumb|right|[[Schutzstaffel]] (SS) female camp guards remove prisoners' bodies from lorries and carry them to a mass grave, inside the German [[Bergen-Belsen concentration camp]], 1945]]

The German government led by [[Adolf Hitler]] and the [[Nazi Party]] was responsible for [[the Holocaust]], the killing of approximately 6 million Jews, as well as 2.7 million ethnic [[Nazi crimes against the Polish nation|Poles]],&lt;ref&gt;Institute of National Remembrance, Polska 19391945 Straty osobowe i ofiary represji pod dwiema okupacjami. Materski and Szarota. page 9 ''&quot;Total Polish population losses under German occupation are currently calculated at about 2 770 000&quot;''.&lt;/ref&gt; and 4 million others who were deemed &quot;[[life unworthy of life|unworthy of life]]&quot; (including the [[Disability|disabled]] and [[Mental disorder|mentally ill]], [[German mistreatment of Soviet prisoners of war|Soviet prisoners of war]], [[homosexuals]], [[Freemasons]], [[Jehovah's Witnesses]], and [[Romani people|Romani]]) as part of a programme of deliberate extermination. About 12 million, most of whom were [[Ostarbeiter|Eastern Europeans]], were employed in the German war economy as [[Forced labour under German rule during World War II|forced labourers]].&lt;ref name=&quot;compensation&quot;&gt;{{cite web|url=http://www.dw-world.de/dw/article/0,2144,1757323,00.html|title=Final Compensation Pending for Former Nazi Forced Laborers|date=27 October 2005|accessdate=19 January 2010|first=Michael|last=Marek|archiveurl=https://www.webcitation.org/5mtTTntBR?url=http://www.dw-world.de/dw/article/0,2144,1757323,00.html|archivedate=19 January 2010|work=dw-world.de|publisher=Deutsche Welle|deadurl=yes|df=dmy-all}}&lt;/ref&gt;

In addition to [[Nazi concentration camps]], the Soviet [[gulag]]s ([[labor camp|labour camps]]) led to the death of citizens of occupied countries such as Poland, Lithuania, Latvia, and Estonia, as well as German [[prisoner of war|prisoners of war]] (POWs) and even Soviet citizens who had been or were thought to be supporters of the Nazis.&lt;ref&gt;{{Harvnb|Applebaum|2003}}.&lt;/ref&gt; Sixty per cent of [[German mistreatment of Soviet prisoners of war|Soviet POWs of the Germans]] died during the war.&lt;ref&gt;{{Harvnb|Herbert|1994|p=[https://books.google.com/books?id=M7Y9AAAAIAAJ&amp;pg=PA222 222]}}&lt;/ref&gt; [[Richard Overy]] gives the number of 5.7 million Soviet POWs. Of those, 57 per cent died or were killed, a total of 3.6&amp;nbsp;million.&lt;ref name=&quot;Overy 2004 568_569&quot;&gt;{{Harvnb|Overy|2004|pp=5689}}.&lt;/ref&gt; Soviet ex-POWs and repatriated civilians were treated with great suspicion as potential Nazi collaborators, and some of them were sent to the Gulag upon being checked by the NKVD.&lt;ref&gt;Zemskov V.N. On repatriation of Soviet citizens. Istoriya SSSR., 1990, No.4, (in Russian). See also [http://scepsis.ru/library/id_1234.html] (online version), and {{Harvnb|Bacon|1992}}; {{Harvnb|Ellman|2002}}.&lt;/ref&gt;

[[File:Czeslawa Kwoka - Brasse.jpg|thumb|left|Prisoner identity photograph taken by the German [[SS]] of a [[Czesawa Kwoka|Polish girl deported as forced labour]] to [[Auschwitz]], December 1942]]

Japanese [[prisoner-of-war camp]]s, many of which were used as labour camps, also had high death rates. The [[International Military Tribunal for the Far East]] found the death rate of Western prisoners was 27.1 per cent (for American POWs, 37 per cent),&lt;ref&gt;{{cite web|url=https://www.pbs.org/wgbh/amex/bataan/peopleevents/e_atrocities.html|title=Japanese Atrocities in the Philippines|accessdate=18 January 2010|archivedate=19 January 2010|archiveurl=https://www.webcitation.org/5mtVNGYHW?url=http://www.pbs.org/wgbh/amex/bataan/peopleevents/e_atrocities.html|work=American Experience: the Bataan Rescue|publisher=PBS Online|deadurl=yes|df=dmy-all}}&lt;/ref&gt; seven times that of POWs under the Germans and Italians.&lt;ref&gt;{{Harvnb|Tanaka|1996|pp=23}}.&lt;/ref&gt; While 37,583 prisoners from the UK, 28,500 from the Netherlands, and 14,473 from the United States were released after the [[surrender of Japan]], the number of Chinese released was only 56.&lt;ref&gt;{{Harvnb|Bix|2000|p=360}}.&lt;/ref&gt;

According to historian Zhifen Ju, at least five million Chinese civilians from northern China and Manchukuo were enslaved between 1935 and 1941 by the [[East Asia Development Board]], or ''Kain'', for work in mines and war industries. After 1942, the number reached 10 million.&lt;ref name=&quot;zhifen2002&quot;&gt;{{cite web|last=Ju|url=http://www.fas.harvard.edu/~asiactr/sino-japanese/session6.htm|first=Zhifen|title=Japan's atrocities of conscripting and abusing north China draughtees after the outbreak of the Pacific war|work=Joint Study of the Sino-Japanese War:Minutes of the June 2002 Conference|publisher=Harvard University Faculty of Arts and Sciences|date=June 2002|archiveurl=https://web.archive.org/web/20120521093637/http://www.fas.harvard.edu/~asiactr/sino-japanese/session6.htm|archivedate=21 May 2012|accessdate=28 December 2013}}&lt;/ref&gt; The US Library of Congress estimates that in [[Java]], between 4 and 10 million ''[[rmusha]]'' (Japanese: &quot;manual labourers&quot;), were forced to work by the Japanese military. About 270,000 of these Javanese labourers were sent to other Japanese-held areas in South East Asia, and only 52,000 were repatriated to Java.&lt;ref name=&quot;indonesiaww2&quot;&gt;{{cite web|url=http://lcweb2.loc.gov/cgi-bin/query/r?frd/cstdy:@field(DOCID+id0029)|title=Indonesia: World War II and the Struggle For Independence, 194250; The Japanese Occupation, 194245|accessdate=9 February 2007|publisher=Library of Congress|year=1992}}&lt;/ref&gt;

On 19 February 1942, Roosevelt signed [[Executive Order 9066]], interning about 100,000 Japanese living on the West Coast. Canada had a similar programme.&lt;ref&gt;{{cite web|title=Manzanar National Historic Site|url=http://www.nps.gov/manz/index.htm|publisher=U.S. National Park Service|accessdate=21 February 2012}}&lt;/ref&gt;&lt;ref&gt;{{Cite book|publisher=Office of the Prime Minister|date=24 January 1947|work=Department of Labour|title=Report on the Re-establishment of Japanese in Canada, 19441946|page=23|isbn=0-405-11266-1|author=Department of Labour of Canada}}&lt;/ref&gt; &lt;!-- better references needed --&gt; In addition, 14,000 German and Italian citizens who had been assessed as being security risks were also interned.&lt;ref name = &quot;Kennedy 2001 749_750&quot;&gt;{{Harvnb|Kennedy|2001|pp=74950}}.&lt;/ref&gt;

In accordance with the Allied agreement made at the [[Yalta Conference]] millions of POWs and civilians were used as [[Foreign forced labor in the Soviet Union|forced labour by the Soviet Union]].&lt;ref&gt;{{Harvnb|Davidson|1999|p=121}}.&lt;/ref&gt; In Hungary's case, [[Forced labor of Hungarians in the Soviet Union|Hungarians were forced to work for the Soviet Union]] until 1955.&lt;ref&gt;{{cite web|url=http://www.epa.hu/00400/00463/00007/pdf/155_stark.pdf|title=&quot;Malenki Robot&quot;&amp;nbsp; Hungarian Forced Labourers in the Soviet Union (19441955)|format=PDF|first=Tams|last=Stark|work=Minorities Research|accessdate=22 January 2010}}&lt;/ref&gt;

===Occupation===

{{Main article|German-occupied Europe|Lebensraum|Untermensch|Collaboration with the Axis Powers during World War II|Resistance during World War II|Nazi plunder}}

[[File:Palmiry before execution.jpg|thumb|right|Polish civilians wearing blindfolds photographed just before [[Palmiry massacre|their execution by German soldiers in Palmiry forest]], 1940]]

In Europe, occupation came under two forms. In Western, Northern, and Central Europe (France, Norway, Denmark, the Low Countries, and the [[Protectorate of Bohemia and Moravia|annexed portions of Czechoslovakia]]) Germany established economic policies through which it collected roughly 69.5 billion reichmarks (27.8 billion US Dollars) by the end of the war, this figure does not include the [[Nazi plunder|sizeable plunder]] of industrial products, military equipment, raw materials and other goods.&lt;ref&gt;{{Harvnb|Liberman|1996|p=42}}.&lt;/ref&gt; Thus, the income from occupied nations was over 40 per cent of the income Germany collected from taxation, a figure which increased to nearly 40 per cent of total German income as the war went on.&lt;ref name=&quot;Milward 1979 138&quot;&gt;{{Harvnb|Milward|1992|p=138}}.&lt;/ref&gt;

[[File:Bundesarchiv Bild 101I-031-2436-03A, Russland, Hinrichtung von Partisanen retouched.jpg|thumb|left|[[Russian Academy of Sciences]]  reported in 1995 [[World War II casualties of the Soviet Union|civilian victims in the Soviet Union]] at German hands totalled 13.7 million dead, twenty percent of the 68 million persons in the occupied USSR]]

In the East, the intended gains of ''[[Lebensraum]]'' were never attained as fluctuating front-lines and Soviet [[scorched earth]] policies denied resources to the German invaders.&lt;ref name=&quot;Milward 1992 148&quot;&gt;{{Harvnb|Milward|1992|p=148}}.&lt;/ref&gt; Unlike in the West, the [[Racial policy of Nazi Germany|Nazi racial policy]] encouraged extreme brutality against what it considered to be the &quot;[[Untermensch|inferior people]]&quot; of Slavic descent; most German advances were thus followed by [[Generalplan Ost|mass executions]].&lt;ref&gt;{{Harvnb|Barber|Harrison|2006|p=232}}.&lt;/ref&gt; Although [[Resistance during World War II|resistance groups]] formed in most occupied territories, they did not significantly hamper German operations in either the East&lt;ref&gt;{{Harvnb|Hill|2005|p=5}}.&lt;/ref&gt; or the West&lt;ref&gt;{{Harvnb|Christofferson|Christofferson|2006|p=156}}&lt;/ref&gt; until late 1943.

In Asia, Japan termed nations under its occupation as being part of the [[Greater East Asia Co-Prosperity Sphere]], essentially a Japanese [[hegemony]] which it claimed was for purposes of liberating colonised peoples.&lt;ref&gt;{{Harvnb|Radtke|1997|p=107}}.&lt;/ref&gt; Although Japanese forces were originally welcomed as liberators from European domination in some territories, their excessive brutality turned local public opinion against them within weeks.&lt;ref name=&quot;GSWW6_266&quot; /&gt; During Japan's initial conquest it captured {{convert|4000000|oilbbl}} of oil (~5.510&lt;sup&gt;5&lt;/sup&gt; tonnes) left behind by retreating Allied forces, and by 1943 was able to get production in the Dutch East Indies up to {{bbl to t|50|mlt=M}}, 76 per cent of its 1940 output rate.&lt;ref name=&quot;GSWW6_266&quot;&gt;{{Harvnb|Rahn|2001|p=266}}.&lt;/ref&gt;

===Home fronts and production===
{{Main article|Military production during World War II|Home front during World War II}}

[[File:WorldWarII-GDP-Relations-Allies-Axis-simple.svg|thumb|upright=1.5|Allied to Axis GDP ratio]]

In Europe, before the outbreak of the war, the Allies had significant advantages in both population and economics. In 1938, the Western Allies (United Kingdom, France, Poland and British Dominions) had a 30 per cent larger population and a 30 per cent higher gross domestic product than the European Axis powers (Germany and Italy); if colonies are included, it then gives the Allies more than a 5:1 advantage in population and nearly 2:1 advantage in GDP.&lt;ref name=&quot;6Econ3&quot;&gt;{{Harvnb|Harrison|1998|p=3}}.&lt;/ref&gt; In Asia at the same time, China had roughly six times the population of Japan, but only an 89 per cent higher GDP; this is reduced to three times the population and only a 38 per cent higher GDP if Japanese colonies are included.&lt;ref name=&quot;6Econ3&quot;/&gt;

The United States provided about two-thirds of all the ordnance used by the Allies in terms of warships, transports, warplanes, artillery, tanks, trucks, and ammunition.&lt;ref&gt;Mark R. Wilson, ''Destructive Creation: American Business and the Winning of World War II'' (2016) p.2.&lt;/ref&gt; Though the Allies' economic and population advantages were largely mitigated during the initial rapid blitzkrieg attacks of Germany and Japan, they became the decisive factor by 1942, after the United States and Soviet Union joined the Allies, as the war largely settled into one of [[Attrition warfare|attrition]].&lt;ref name=&quot;6Econ2&quot;&gt;{{Harvnb|Harrison|1998|p=2}}.&lt;/ref&gt; While the Allies' ability to out-produce the Axis is often attributed to the Allies having more access to natural resources, other factors, such as Germany and Japan's reluctance to employ women in the [[labour force]],&lt;ref&gt;{{Harvnb|Bernstein|1991|p=267}}.&lt;/ref&gt; Allied [[Strategic bombing during World War II|strategic bombing]],&lt;ref&gt;{{Cite book|last=Griffith|first=Charles|title=The Quest: Haywood Hansell and American Strategic Bombing in World War II|isbn=1-58566-069-8|publisher=DIANE Publishing|year=1999|page=203}}&lt;/ref&gt; and Germany's late shift to a [[war economy]]&lt;ref&gt;{{Harvnb|Overy|1994|p=26}}.&lt;/ref&gt; contributed significantly. Additionally, neither Germany nor Japan planned to fight a protracted war, and were not equipped to do so.&lt;ref&gt;{{Harvnb|BBSU|1998|p=84}}; {{Harvnb|Lindberg|Todd|2001|p=126}}..&lt;/ref&gt; To improve their production, Germany and Japan used millions of [[slave labour]]ers;&lt;ref&gt;{{Cite book|last=Unidas|first=Naciones|title=World Economic And Social Survey 2004: International Migration|page=23|publisher=United Nations Pubns|year=2005|isbn=92-1-109147-0}}&lt;/ref&gt; [[Forced labour under German rule during World War II|Germany used]] about 12 million people, mostly from Eastern Europe,&lt;ref name=&quot;compensation&quot;/&gt; while [[Slavery in Japan|Japan used]] more than 18 million people in Far East Asia.&lt;ref name=&quot;zhifen2002&quot;/&gt;&lt;ref name=&quot;indonesiaww2&quot;/&gt;

===Advances in technology and warfare===
{{Main article|Technology during World War II}}

[[File:Boeing-Whichata B-29 Assembly Line - 1944.jpg|thumb|right|225px|[[Boeing B-29 Superfortress|B-29 Superfortress]] [[strategic bombers]] on the [[Boeing]] assembly line in [[Wichita, Kansas]], 1944]]

Aircraft were used for [[Reconnaissance aircraft|reconnaissance]], as [[fighter aircraft|fighters]], [[bomber]]s, and [[close air support|ground-support]], and each role was advanced considerably. Innovation included [[airlift]] (the capability to quickly move limited high-priority supplies, equipment, and personnel);&lt;ref name=&quot;EncWWII_76&quot;&gt;{{Harvnb|Tucker|Roberts|2004|p=76}}.&lt;/ref&gt; and of [[strategic bombing]] (the bombing of enemy industrial and population centres to destroy the enemy's ability to wage war).&lt;ref&gt;{{Harvnb|Levine|1992|p=227}}.&lt;/ref&gt; [[Anti-aircraft warfare|Anti-aircraft weaponry]] also advanced, including defences such as [[radar]] and surface-to-air artillery, such as the German [[88 mm gun]]. The use of the [[jet aircraft]] was pioneered and, though late introduction meant it had little impact, it led to jets becoming standard in air forces worldwide.&lt;ref&gt;{{Harvnb|Klavans|Di Benedetto|Prudom|1997}}; {{Harvnb|Ward|2010|pp=24751}}.&lt;/ref&gt;

Advances were made in nearly every aspect of [[naval warfare]], most notably with aircraft carriers and submarines. Although [[Aeronautics|aeronautical]] warfare had relatively little success at the start of the war, [[Battle of Taranto|actions at Taranto]], [[Attack on Pearl Harbor|Pearl Harbor]], and the [[Battle of the Coral Sea|Coral Sea]] established the carrier as the dominant capital ship in place of the battleship.&lt;ref name=&quot;EncWWII_163&quot;&gt;{{Harvnb|Tucker|Roberts|2004|p=163}}.&lt;/ref&gt;&lt;ref&gt;{{Cite book|last1=Bishop|first1=Chris|last2=Chant|first2=Chris|title=Aircraft Carriers: The World's Greatest Naval Vessels and Their Aircraft|page=7|publisher=Silverdale Books|year=2004|isbn=1-84509-079-9|location=Wigston, Leics}}&lt;/ref&gt;&lt;ref&gt;{{Cite book|last1=Chenoweth|first1=H. Avery|last2=Nihart|first2=Brooke|title=Semper Fi: The Definitive Illustrated History of the U.S. Marines|publisher=Main Street|year=2005|isbn=1-4027-3099-3|page=180|location=New York}}&lt;/ref&gt;

In the Atlantic, [[escort carrier]]s proved to be a vital part of Allied convoys, increasing the effective protection radius and helping to close the [[Mid-Atlantic gap]].&lt;ref&gt;{{Harvnb|Sumner|Baker|2001|p=25}}.&lt;/ref&gt; Carriers were also more economical than battleships because of the relatively low cost of aircraft&lt;ref&gt;{{Harvnb|Hearn|2007|p=14}}.&lt;/ref&gt; and their not requiring to be as heavily armoured.&lt;ref&gt;{{Harvnb|Gardiner|Brown|2004|p=52}}.&lt;/ref&gt; Submarines, which had proved to be an effective weapon during the [[World War I|First World War]],&lt;ref name=&quot;Bur&amp;Ryd 1995 15&quot;&gt;{{Harvnb|Burcher|Rydill|1995|p=15}}.&lt;/ref&gt; were anticipated by all sides to be important in the second. The British focused development on [[Anti-submarine warfare|anti-submarine]] [[anti-submarine weapon|weaponry]] and tactics, such as [[sonar]] and convoys, while Germany focused on improving its offensive capability, with designs such as the [[German Type VII submarine|Type VII submarine]] and [[Wolfpack (naval tactic)|wolfpack]] tactics.&lt;ref name=&quot;Bur&amp;Ryd 1995 16&quot;&gt;{{Harvnb|Burcher|Rydill|1995|p=16}}.&lt;/ref&gt; Gradually, improving Allied technologies such as the [[Leigh light]], [[Hedgehog (weapon)|hedgehog]], [[Squid (weapon)|squid]], and [[Mark 24 mine|homing torpedoes]] proved victorious.

[[File:Bundesarchiv Bild 141-1880, Peenemnde, Start einer V2.jpg|thumb|200px|left|A [[V-2 rocket]] launched from a fixed site in [[Peenemnde]], 21 June 1943]]

[[Land warfare]] changed from the static front lines of World War&amp;nbsp;I to increased mobility and [[combined arms]]. The [[tank]], which had been used predominantly for infantry support in the First World War, had evolved into the primary weapon.&lt;ref name=&quot;EncWWII_125&quot;&gt;{{Harvnb|Tucker|Roberts|2004|p=125}}.&lt;/ref&gt; In the late 1930s, tank design was considerably more advanced than it had been during World War I,&lt;ref&gt;{{Cite book|last=Dupuy|first=Trevor Nevitt|title=The Evolution of Weapons and Warfare|publisher=[[Jane's Information Group]]|isbn=0-7106-0123-9|year=1982|page=231}}&lt;/ref&gt; and [[Tanks in World War II|advances continued throughout the war]] with increases in speed, armour and firepower.

At the start of the war, most commanders thought enemy tanks should be met by tanks with superior specifications.&lt;ref name=&quot;EncWWII_108&quot;&gt;{{Harvnb|Tucker|Roberts|2004|p=108}}.&lt;/ref&gt; This idea was challenged by the poor performance of the relatively light early tank guns against armour, and German doctrine of avoiding tank-versus-tank combat. This, along with Germany's use of combined arms, were among the key elements of their highly successful blitzkrieg tactics across Poland and France.&lt;ref name=&quot;EncWWII_125&quot;/&gt; Many means of [[anti-tank warfare|destroying tanks]], including [[Indirect fire|indirect artillery]], [[anti-tank gun]]s (both towed and [[self-propelled gun|self-propelled]]), [[anti-tank mine|mines]], short-ranged infantry antitank weapons, and other tanks were used.&lt;ref name=&quot;EncWWII_108&quot; /&gt; Even with large-scale mechanisation, infantry remained the backbone of all forces,&lt;ref name=&quot;EncWWII_734&quot;&gt;{{Harvnb|Tucker|Roberts|2004|p=734}}.&lt;/ref&gt; and throughout the war, most infantry were equipped similarly to World War&amp;nbsp;I.&lt;ref name=&quot;Comp_221&quot;&gt;{{Harvnb|Cowley|Parker|2001|p=221}}.&lt;/ref&gt;

[[File:Trinity device readied.jpg|thumb|right|225px|Nuclear ''Gadget'' being raised to the top of the detonation &quot;shot tower&quot;, at [[Alamogordo Bombing and Gunnery Range|Alamogordo Bombing Range]]; [[Trinity (nuclear test)|Trinity nuclear test]], [[New Mexico]], July 1945]]

The portable machine gun spread, a notable example being the German [[MG34]], and various [[submachine gun]]s which were suited to [[close combat]] in urban and jungle settings.&lt;ref name=&quot;Comp_221&quot; /&gt; The [[assault rifle]], a late war development incorporating many features of the rifle and submachine gun, became the standard postwar infantry weapon for most armed forces.&lt;ref&gt;{{cite web|title=Infantry Weapons Of World War 2|url=http://greyfalcon.us/Infantry%20Weapons%20Of%20World%20War%202.htm|publisher=Grey Falcon (Black Sun)|accessdate=14 November 2009|quote=These all-purpose guns were developed and used by the German army in the 2nd half of World War 2 as a result of studies which showed that the ordinary rifle's long range is much longer than needed, since the soldiers almost always fired at enemies closer than half of its effective range. The assault rifle is a balanced compromise between the rifle and the sub-machine gun, having sufficient range and accuracy to be used as a rifle, combined with the rapid-rate automatic firepower of the sub machine gun. Thanks to these combined advantages, assault rifles such as the American M-16 and the Russian AK-47 are the basic weapon of the modern soldier}}&lt;/ref&gt;&lt;ref&gt;{{cite web|title=The AK-47: the worlds favourite killing machine |publisher=controlarms.org |first=Oliver |last=Sprague |first2=Hugh |last2=Griffiths |url=https://www.amnesty.org/en/library/asset/ACT30/011/2006/en/11079910-d422-11dd-8743-d305bea2b2c7/act300112006en.pdf |accessdate=14 November 2009 |year=2006 |format=PDF |page=1 |deadurl=yes |archiveurl=https://web.archive.org/web/20110430165110/http://www.amnesty.org/en/library/asset/ACT30/011/2006/en/11079910-d422-11dd-8743-d305bea2b2c7/act300112006en.pdf |archivedate=30 April 2011 }}&lt;/ref&gt;

Most major belligerents attempted to solve the problems of complexity and security involved in using large [[codebook]]s for [[cryptography]] by designing [[cipher]]ing machines, the most well known being the German [[Enigma machine]].&lt;ref&gt;{{Harvnb|Ratcliff|2006|p=11}}.&lt;/ref&gt; Development of [[SIGINT]] (''sig''nals ''int''elligence) and [[cryptanalysis]] enabled the countering process of decryption. Notable examples were the Allied decryption of [[Japanese naval codes]]&lt;ref name=Schoenherr&gt;{{cite web
 |title=Code Breaking in World War II 
 |url=http://history.sandiego.edu/gen/WW2Timeline/espionage.html 
 |archiveurl=https://web.archive.org/web/20080509054959/http://history.sandiego.edu/gen/WW2Timeline/espionage.html 
 |archivedate=9 May 2008 
 |first=Steven 
 |last=Schoenherr 
 |year=2007 
 |publisher=History Department at the University of San Diego 
 |accessdate=15 November 2009 
 |deadurl=yes 
 |df=dmy-all 
}}&lt;/ref&gt; and British [[Ultra]], a [[Bombe#The British Bombe|pioneering method]] for decoding Enigma benefiting from information given to Britain by the [[Polish Cipher Bureau#Gift to allies|Polish Cipher Bureau]], which had been decoding early versions of Enigma before the war.&lt;ref&gt;{{cite news|author=Macintyre, Ben|title=Bravery of thousands of Poles was vital in securing victory|work=The Times|location=London|date=10 December 2010|page=27}}&lt;/ref&gt; Another aspect of [[military intelligence]] was the use of [[deception]], which the Allies used to great effect, such as in operations [[Operation Mincemeat|Mincemeat]] and [[Operation Bodyguard|Bodyguard]].&lt;ref name=Schoenherr/&gt;&lt;ref&gt;{{cite web|title=Deception for Defense of Information Systems: Analogies from Conventional Warfare|url=http://www.au.af.mil/au/awc/awcgate/nps/mildec.htm|first1=Neil C.|last1=Rowe|first2=Hy|last2=Rothstein|work=Departments of Computer Science and Defense Analysis U.S. Naval Postgraduate School|publisher=Air University|accessdate=15 November 2009}}&lt;/ref&gt; Other technological and engineering feats achieved during, or as a result of, the war include the world's first programmable computers ([[Z3 (computer)|Z3]], [[Colossus computer|Colossus]], and [[ENIAC]]), [[V-1 flying bomb|guided missiles]] and [[V-2 rocket|modern rockets]], the [[Manhattan Project]]'s development of [[nuclear weapon]]s, [[operations research]] and the development of [[Mulberry harbour|artificial harbours]] and [[Operation Pluto|oil pipelines under the English Channel]].

==See also==
* [[Air warfare of World War II]]
* [[Bibliography of World War II]]
* [[Declarations of war during World War II]]
* [[Historiography of World War II]]
* [[Home front during World War II]]
* [[List of World War II battles]]
* [[List of Allied World War II conferences]]
* [[List of World War II military operations]]
* [[Lists of World War II military equipment]]
* [[Nazis in fiction]]
* [[Women in World War II]]
* [[World War II in popular culture]]
* [[List of World War II films]]
* [[World War III]]

;Documentaries
{{See also|List of World War II documentary films}}
* ''[[The World Wars (miniseries)]] ''The World Wars is a three-part, six-hour event miniseries by the History Channel that premiered on Monday, 26 May 2014, (Memorial Day) airing for three consecutive nights. An extended version of the series with never before seen footage was subsequently broadcast on H2 and in more than 160 countries on 22 June 2014
* ''[[Apocalypse: The Second World War]]'' (2009), a six-part French documentary by Daniel Costelle and Isabelle Clarke about World War II
* ''[[Battlefield (TV series)|Battlefield]]'', a documentary television series initially issued in 19945, that explores many important World War&amp;nbsp;II battles
* ''[[BBC History of World War&amp;nbsp;II]]'', a television series, initially issued from 1989 to 2005.
* ''[[The World at War]]'' (1974), a 26-part [[Thames Television]] series that covers most aspects of World War&amp;nbsp;II from many points of view. It includes interviews with many key figures including [[Karl Dnitz]], [[Albert Speer]], and [[Anthony Eden]].

==Notes==
{{Notelist}}

==Citations==
{{reflist|21em}}

==References==
{{Reflist|group=nb}}
{{Refbegin|indent=yes|30em}}
:{{Cite book|last=Adamthwaite|first=Anthony P.&lt;!--was small caps--&gt;|year=1992|title=The Making of the Second World War|isbn=0-415-90716-0|publisher=Routledge|location=New York|ref=harv}}
:{{Cite journal|last=Anderson|first=Irvine H., Jr.&lt;!--was small caps--&gt;|year=1975|title=The 1941 De Facto Embargo on Oil to Japan: A Bureaucratic Reflex|journal=The Pacific Historical Review|volume=44|issue=2|jstor=3638003|ref=harv}}
:{{Cite book|last=Applebaum|first=Anne&lt;!--was small caps--&gt;|authorlink=Anne Applebaum|year=2003|title=[[Gulag: A History|Gulag: A History of the Soviet Camps]]|location=London|publisher=[[Penguin Books|Allen Lane]]|isbn=978-0-7139-9322-6|ref=harv}}
:{{Cite book|author=|year=2012|title=Iron Curtain: The Crushing of Eastern Europe 194456|location=London|publisher=[[Penguin Books|Allen Lane]]|isbn=978-0-7139-9868-9|ref=CITEREFApplebaum2012}}
:{{Cite journal|last=Bacon|first=Edwin&lt;!--was small caps--&gt;|year=1992|title=Glasnost' and the Gulag: New Information on Soviet Forced Labour around World War II|journal=[[Soviet Studies]]|volume=44|issue=6|pages=10691086|jstor=152330|doi=10.1080/09668139208412066|ref=harv}}
:{{Cite book|last=Badsey|first=Stephen&lt;!--was small caps--&gt;|year=1990|title=Normandy 1944: Allied Landings and Breakout|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-0-85045-921-0|ref=harv}}
:{{Cite book|last=Balabkins|first=Nicholas&lt;!--was small caps--&gt;|year=1964|title=Germany Under Direct Controls: Economic Aspects of Industrial Disarmament 19451948|location=New Brunswick, NJ|publisher=[[Rutgers University Press]]|isbn=978-0-8135-0449-0|ref=harv}}
:{{Cite book|last1=Barber|first1=John&lt;!--was small caps--&gt;|last2=Harrison|first2=Mark|year=2006|chapter=Patriotic War, 19411945|title=''In Ronald Grigor Suny, ed.,''' The Cambridge History of Russia, Volume III: The Twentieth Century ''(pp.&amp;nbsp;217242)''|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-81144-6|ref=harv}}
:{{Cite book|last=Barker|first=A. J.&lt;!--was small caps--&gt;|year=1971|title=The Rape of Ethiopia 1936|location=New York,&amp;nbsp;NY|publisher=[[Ballantine Books]]|isbn=978-0-345-02462-6|ref=harv}}
:{{Cite book|last1=Barrett|first1=David P.&lt;!--was small caps--&gt;|last2=Shyu|first2=Lawrence N.|year=2001|title=China in the Anti-Japanese War, 19371945: Politics, Culture and Society|location=New York,&amp;nbsp;NY|publisher=[[Peter Lang (publisher)|Peter Lang]]|isbn=978-0-8204-4556-4|ref=harv}}
:{{Cite book|last=Beevor|first=Antony&lt;!--was small caps--&gt;|authorlink=Antony Beevor|year=1998|title=[[Stalingrad (book)|Stalingrad]]|location=New York,&amp;nbsp;NY|publisher=[[Viking Press|Viking]]|isbn=978-0-670-87095-0|ref=harv}}
:{{Cite book|author=|year=2012|title=[[The Second World War (book)|The Second World War]]|location=London|publisher=[[Weidenfeld &amp; Nicolson]]|isbn=978-0-297-84497-6|ref=CITEREFBeevor2012}}
:{{Cite book|last=Belco|first=Victoria&lt;!--was small caps--&gt;|year=2010|title=War, Massacre, and Recovery in Central Italy: 19431948|location=Toronto|publisher=[[University of Toronto Press]]|isbn=978-0-8020-9314-1|ref=harv}}
:{{Cite book|last=Bellamy|first=Chris T.&lt;!--was small caps--&gt;|year=2007|title=Absolute War: Soviet Russia in the Second World War|location=New York, NY|publisher=[[Alfred A. Knopf]]|isbn=978-0-375-41086-4|ref=harv}}
:{{Cite book|last=Ben-Horin|first=Eliahu&lt;!--was small caps--&gt;|year=1943|title=The Middle East: Crossroads of History|location=New York,&amp;nbsp;NY|publisher=[[W. W. Norton &amp; Company]]|ref=harv}}
:{{Cite book|last=Berend|first=Ivan T.&lt;!--was small caps--&gt;|authorlink=Ivn T. Berend|year=1996|title=Central and Eastern Europe, 19441993: Detour from the Periphery to the Periphery|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-55066-6|ref=harv}}
:{{Cite book|last=Bernstein|first=Gail Lee&lt;!--was small caps--&gt;|authorlink=Gail Lee Bernstein|year=1991|title=Recreating Japanese Women, 16001945|location=Berkeley &amp; Los Angeles, CA|publisher=[[University of California Press]]|isbn=978-0-520-07017-2|ref=harv}}
:{{Cite book|last1=Bilhartz|first1=Terry D.&lt;!--was small caps--&gt;|last2=Elliott|first2=Alan C.|year=2007|title=Currents in American History: A Brief History of the United States|location=Armonk, NY|publisher=[[M. E. Sharpe]]|isbn=978-0-7656-1821-4|ref=harv}}
:{{Cite book|last=Bilinsky|first=Yaroslav&lt;!--was small caps--&gt;|year=1999|title=Endgame in NATO's Enlargement: The Baltic States and Ukraine|location=Westport, CT|publisher=[[Greenwood Publishing Group]]|isbn=978-0-275-96363-7|ref=harv}}
:{{Cite book|last=Bix|first=Herbert P.&lt;!--was small caps--&gt;|authorlink=Herbert P. Bix|year=2000|title=[[Hirohito and the Making of Modern Japan]]|location=New York, NY|publisher=[[HarperCollins]]|isbn=978-0-06-019314-0|ref=harv}}
:{{Cite book|last=Black|first=Jeremy&lt;!--was small caps--&gt;|authorlink=Jeremy Black (historian)|year=2003|title=World War Two: A Military History|location= Abingdon and New York, NY|publisher=[[Routledge]]|isbn=978-0-415-30534-1|ref=harv}}
:{{Cite book|last=Blinkhorn|first=Martin&lt;!--was small caps--&gt;|year=2006|origyear=1984|title=Mussolini and Fascist Italy|edition=3rd|location=Abingdon and New York, NY|publisher=[[Routledge]]|isbn=978-0-415-26206-4|ref=harv}}
:{{Cite book|last1=Bonner|first1=Kit&lt;!--was small caps--&gt;|last2=Bonner|first2=Carolyn|year=2001|title=Warship Boneyards|location=Osceola, WI|publisher=[[MBI Publishing Company]]|isbn=978-0-7603-0870-7|ref=harv}}
:{{Cite book|last=Borstelmann|first=Thomas&lt;!--was small caps--&gt;|year=2005|chapter=The United States, the Cold War, and the color line|title=''In [[Melvyn P. Leffler]] and [[David S. Painter]],&amp;nbsp;eds.,'' Origins of the Cold War: An International History ''(pp.&amp;nbsp;317332)''|edition=2nd|location=Abingdon &amp; New York,&amp;nbsp;NY|publisher=[[Routledge]]|isbn=978-0-415-34109-7|ref=harv}}
:{{Cite book|title=The Cambridge History of the Second World War Volume 2: Politics and Ideology|series=The Cambridge History of the Second World War (3 vol) |first1=Richard|last1=Bosworth|first2=Joseph|last2=Maiolo|location=[[Cambridge]]|language=English|publisher=[[Cambridge University Press]]|pages=313314|year=2015|url=http://universitypublishingonline.org/cambridge/histories/subject_title_list.jsf?subjectCode=15&amp;heading=Warfare&amp;tSort=title+closed&amp;aSort=author+default_list&amp;ySort=year+default_list|ref=harv}}
:{{Cite book|last=Brayley|first=Martin J.&lt;!--was small caps--&gt;|year=2002|title=The British Army 193945, Volume 3: The Far East|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-238-8|ref=harv}}
:{{Cite book|last=British Bombing Survey Unit&lt;!--was small caps--&gt;|year=1998|title=The Strategic Air War Against Germany, 19391945|location=London and Portland, OR|publisher=[[Frank Cass Publishers]]|isbn=978-0-7146-4722-7|ref=CITEREFBBSU1998}}
:{{Cite book|last=Brody|first=J.&amp;nbsp;Kenneth&lt;!--was small caps--&gt;|year=1999|title=The Avoidable War: Pierre Laval and the Politics of Reality, 19351936|location=New Brunswick,&amp;nbsp;NJ|publisher=[[Transaction Publishers]]|isbn=978-0-7658-0622-2|ref=harv}}
:{{Cite book|last=Brown|first=David&lt;!--was small caps--&gt;|year=2004|title=The Road to Oran: Anglo-French Naval Relations, September 1939  July 1940|location=London &amp; New York,&amp;nbsp;NY|publisher=[[Frank Cass]]|isbn=978-0-7146-5461-4|ref=harv}}
:{{Cite book|last=Buchanan|first=Tom&lt;!--was small caps--&gt;|year=2006|title=Europe's Troubled Peace, 19452000|location=Oxford &amp; Malden, MA|publisher=[[Blackwell Publishing]]|isbn=978-0-631-22162-3|ref=harv}}
:{{cite book|last=Budiansky|first=Stephen&lt;!--was small caps--&gt;|authorlink=Stephen Budiansky|year=2001|title=Battle of Wits: The Complete Story of Codebreaking in World War II|location=London|publisher=[[Penguin Books]]|isbn=978-0-14-028105-7|ref=harv}}
:{{Cite book|last1=Bueno de Mesquita|first1=Bruce&lt;!--was small caps--&gt;|author1-link=Bruce Bueno de Mesquita|last2=Smith|first2=Alastair|last3=Siverson|first3=Randolph M.|last4=Morrow|first4=James D.|author4-link=James D. Morrow|year=2003|title=The Logic of Political Survival|location=Cambridge,&amp;nbsp;MA|publisher=[[MIT Press]]|isbn=978-0-262-02546-1|ref=harv}}
:{{Cite book|last1=Bull|first1=Martin J.&lt;!--was small caps--&gt;|last2=Newell|first2=James L.|year=2005|title=Italian Politics: Adjustment Under Duress|location=|publisher=[[Polity]]|isbn=978-0-7456-1298-0|ref=harv}}
:{{Cite book |last=Bullock |first=Alan |authorlink=Alan Bullock |year=1990 |title=Hitler: A Study in Tyranny |location=London |publisher=[[Penguin Books]] |isbn=978-014013564-0 |ref=harv }}
:{{Cite book|last1=Burcher|first1=Roy&lt;!--was small caps--&gt;|last2=Rydill|first2=Louis|year=1995|title=Concepts in Submarine Design|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-55926-3|ref=harv}}
:{{Cite book|last=Busky|first=Donald F.&lt;!--was small caps--&gt;|year=2002|title=Communism in History and Theory: Asia, Africa, and the Americas|location=Westport, CT|publisher=Praeger Publishers|isbn=0-275-97733-1|ref=harv}}
:{{Cite book|last=Canfora|first=Luciano&lt;!--was small caps--&gt;|authorlink=Luciano Canfora|year=2006|origyear=2004|title=Democracy in Europe: A History|location=Oxford &amp; Malden&amp;nbsp;MA|publisher=[[Blackwell Publishing]]|isbn=978-1-4051-1131-7|ref=harv}}
:{{Cite journal|last=Cantril|first=Hadley&lt;!--was small caps--&gt;|year=1940|title=America Faces the War: A Study in Public Opinion|journal=[[Public Opinion Quarterly]]|volume=4|issue=3|pages=387407|jstor=2745078|doi=10.1086/265420|ref=harv}}
:{{Cite book|last=Chang|first=Iris&lt;!--was small caps--&gt;|authorlink=Iris Chang|year=1997|title=The Rape of Nanking: The Forgotten Holocaust of World War II|location=New York, NY|publisher=[[Basic Books]]|isbn=978-0-465-06835-7|ref=harv}}
:{{Cite book|last1=Christofferson|first1=Thomas R.&lt;!--was small caps--&gt;|last2=Christofferson|first2=Michael S.|year=2006|title=France During World War II: From Defeat to Liberation|location=New York, NY|publisher=[[Fordham University Press]]|isbn=978-0-8232-2562-0|ref=harv}}
:{{Cite book|last=Chubarov|first=Alexander&lt;!--was small caps--&gt;|year=2001|title=Russia's Bitter Path to Modernity: A History of the Soviet and Post-Soviet Eras|location=London &amp; New York,&amp;nbsp;NY|publisher=[[Continuum International Publishing Group|Continuum]]|isbn=978-0-8264-1350-5|ref=harv}}
:{{Cite book|last=Ch'i|first=Hsi-Sheng&lt;!--was small caps--&gt;|year=1992|chapter=The Military Dimension, 19421945|title=''In James&amp;nbsp;C. Hsiung and Steven&amp;nbsp;I. Levine, eds.,'' China's Bitter Victory: War with Japan, 193745 ''(pp.&amp;nbsp;157184)''|location=Armonk, NY|publisher=[[M. E. Sharpe]]|isbn=978-1-56324-246-5|ref=harv}}
:{{Cite journal|last=Cienciala|first=Anna M.&lt;!--was small caps--&gt;|year=2010|title=Another look at the Poles and Poland during World War II|journal=[[The Polish Review]]|volume=55|issue=1|pages=123143|jstor=25779864|ref= harv}}
:{{Cite book|last=Clogg|first=Richard&lt;!--was small caps--&gt;|authorlink=Richard Clogg|year=2002|title=A Concise History of Greece|edition=2nd|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-80872-9|ref=harv}}
:{{Cite book|last=Coble|first=Parks M.&lt;!--was small caps--&gt;|year=2003|title=Chinese Capitalists in Japan's New Order: The Occupied Lower Yangzi, 19371945|location=Berkeley &amp; Los Angeles, CA|publisher=[[University of California Press]]|isbn=978-0-520-23268-6|ref=harv}}
:{{Cite book|last=Collier|first=Paul&lt;!--was small caps--&gt;|year=2003|title=The Second World War (4): The Mediterranean 19401945|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-539-6|ref=harv}}
:{{Cite book|last1=Collier|first1=Martin&lt;!--was small caps--&gt;|last2=Pedley|first2=Philip|year=2000|title=Germany 191945|location=Oxford|publisher=[[Heinemann (publisher)|Heinemann]]|isbn=978-0-435-32721-7|ref=harv}}
:{{Cite book|last=Commager|first=Henry Steele&lt;!--was small caps--&gt;|year=2004|title=The Story of the Second World War|publisher=Brassey's|isbn=978-1-57488-741-9|ref=harv}}
:{{Cite journal|last=Coogan|first=Anthony&lt;!--was small caps--&gt;|year=1993|title=The Volunteer Armies of Northeast China|url=https://www.questia.com/googleScholar.qst?docId=5000186948|journal=[[History Today]]|volume=43|accessdate=6 May 2012|ref=harv}}
:{{Cite book|last1=Cook|first1=Chris&lt;!--was small caps--&gt;|last2=Bewes|first2=Diccon|year=1997|title=What Happened Where: A Guide to Places and Events in Twentieth-Century History|location=London|publisher=[[UCL Press]]|isbn=978-1-85728-532-1|ref=harv}}
:{{Cite book|editor1-last=Cowley|editor1-first=Robert&lt;!--was small caps--&gt;|editor1-link=Robert Cowley|editor2-last=Parker|editor2-first=Geoffrey|editor2-link=Geoffrey Parker (historian)|year=2001|title=The Reader's Companion to Military History|location=Boston, MA|publisher=[[Houghton Mifflin Company]]|isbn=978-0-618-12742-9|ref=harv}}
:{{Cite book|last=Darwin|first=John&lt;!--was small caps--&gt;|year=2007|title=After Tamerlane: The Rise &amp; Fall of Global Empires 14002000|location=London|publisher=[[Penguin Books]]|isbn=978-0-14-101022-9|ref=harv}}
:{{Cite book|last=Davidson|first=Eugene&lt;!--was small caps--&gt;|title=The Death and Life of Germany: An Account of the American Occupation|year=1999|publisher=University of Missouri Press|isbn=0-8262-1249-2|ref=harv}}
:{{Cite book|last=Davies|first=Norman&lt;!--was small caps--&gt;|authorlink=Norman Davies|year=2006|title=[[Europe at War 19391945: No Simple Victory]]|location=London|publisher=[[Macmillan Publishers|Macmillan]]|isbn=9780333692851 |oclc= 70401618 |nopp=yes|pages= ix+544 pages|ref=harv}}
:{{Cite book|editor1-last=Dear|editor1-first=I. C. B.&lt;!--was small caps--&gt;|editor1-link=I. C. B. Dear|editor2-last=Foot|editor2-first=M. R. D.|editor2-link=M. R. D. Foot|year=2001|origyear=1995|title=The Oxford Companion to World War II|location=Oxford|publisher=[[Oxford University Press]]|isbn=978-0-19-860446-4|ref=harv}}
:{{Cite book|last1=DeLong|first1=J. Bradford&lt;!--was small caps--&gt;|author1-link=J. Bradford DeLong|last2=Eichengreen|first2=Barry|author2-link=Barry Eichengreen|year=1993|chapter=The Marshall Plan: History's Most Successful Structural Adjustment Program|title=''In [[Rudi Dornbusch|Rudiger Dornbusch]], Wilhelm Nlling and [[Richard Layard, Baron Layard|Richard Layard]], eds.,'' Postwar Economic Reconstruction and Lessons for the East Today ''(pp.&amp;nbsp;189230)''|location=Cambridge, MA|publisher=[[MIT Press]]|isbn=978-0-262-04136-2|ref=harv}}
:{{Cite book|last=Dower|first=John W.&lt;!--was small caps--&gt;|authorlink=John W. Dower|year=1986|title=War Without Mercy: Race and Power in the Pacific War|location=New York,&amp;nbsp;NY|publisher=[[Pantheon Books]]|isbn=978-0-394-50030-0|ref=harv}}
:{{Cite book|last=Drea|first=Edward J.&lt;!--was small caps--&gt;|year=2003|title=In the Service of the Emperor: Essays on the Imperial Japanese Army|location=Lincoln,&amp;nbsp;NE|publisher=[[University of Nebraska Press]]|isbn=978-0-8032-6638-4|ref=harv}}
:{{Cite journal|last1=de Grazia|first1=Victoria&lt;!--was small caps--&gt;|last2=Paggi|first2=Leonardo|title=Story of an Ordinary Massacre: Civitella della Chiana, 29 June, 1944|journal=Cardozo Studies in Law and Literature|date=Autumn 1991 |pages=153169|jstor=743479|ref=harv|volume=3|issue=2|doi=10.1525/lal.1991.3.2.02a00030}}
:{{Cite book|last=Dunn|first=Dennis J.&lt;!--was small caps--&gt;|year=1998|title=Caught Between Roosevelt &amp; Stalin: America's Ambassadors to Moscow|location=Lexington,&amp;nbsp;KY|publisher=[[University Press of Kentucky]]|isbn=978-0-8131-2023-2|ref=harv}}
:{{Cite book|last=Eastman|first=Lloyd E.&lt;!--was small caps--&gt;|year=1986|chapter=Nationalist China during the Sino-Japanese War 19371945|title=''In [[John&amp;nbsp;K. Fairbank]] and [[Denis C. Twitchett|Denis Twitchett]],&amp;nbsp;eds.,'' [[The Cambridge History of China|The Cambridge History of China, Volume 13: Republican China 19121949, Part 2]]|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-24338-4|ref=harv}}
:{{Cite journal|last=Ellman|first=Michael&lt;!--was small caps--&gt;|authorlink=Michael Ellman|year=2002|title=Soviet Repression Statistics: Some Comments|url=http://artukraine.com/old/famineart/SovietCrimes.pdf|journal=[[Europe-Asia Studies]]|volume=54|issue=7|pages=11511172|jstor=826310|doi=10.1080/0966813022000017177|ref=harv|deadurl=yes|archiveurl=https://web.archive.org/web/20121122071204/http://artukraine.com/old/famineart/SovietCrimes.pdf|archivedate=22 November 2012|df=dmy-all}} [https://web.archive.org/web/20130115023408/http://www.docstoc.com/docs/81203576/Soviet-Repression-Statistics-Some-Comments Copy]
:{{Cite journal|last1=|last2=Maksudov|first2=S.|year=1994|title=Soviet Deaths in the Great Patriotic War: A Note|url=http://sovietinfo.tripod.com/ELM-War_Deaths.pdf|journal=[[Europe-Asia Studies]]|volume=46|issue=4|pages=671680|jstor=152934|doi=10.1080/09668139408412190|ref=CITEREFEllmanMaksudov1994|pmid=12288331}}
:{{Cite book|last=Emadi-Coffin|first=Barbara&lt;!--was small caps--&gt;|year=2002|title=Rethinking International Organization: Deregulation and Global Governance|location=London and New York, NY|publisher=[[Routledge]]|isbn=978-0-415-19540-9|ref=harv}}
:{{Cite book |last=Erickson |first=John&lt;!--was small caps--&gt; |authorlink=John Erickson (historian) |editor1-last=Shukman |editor1-first=Harold |editor1-link=:ru:,  |year=2001 |chapter=Moskalenko |title=Stalin's Generals |pages=137154 |location=London |publisher=[[Weidenfeld &amp; Nicolson|Phoenix Press]] |isbn=978-1-84212-513-7 |ref=harv}}
:{{Cite book|author=|year=2003|title=The Road to Stalingrad|location=London|publisher=[[Cassell Military Paperbacks|Cassell Military]]|isbn=978-0-304-36541-8|ref=CITEREFErickson2003}}
:{{Cite book|last1=Evans|first1=David C.&lt;!--was small caps--&gt;|last2=Peattie|first2=Mark R.|year=2012|origyear=1997|title=Kaigun: Strategy, Tactics, and Technology in the Imperial Japanese Navy|location=Annapolis, MD|publisher=[[Naval Institute Press]]|isbn=978-1-59114-244-7|ref=harv}}
:{{Cite book|last=Evans|first=Richard J.&lt;!--was small caps--&gt;|authorlink=Richard J. Evans|year=2008|title=[[The Third Reich at War]]|location=London|publisher=[[Penguin Group|Allen Lane]]|isbn=978-0-7139-9742-2|ref=harv}}
:{{Cite book|last1=Fairbank|first1=John King&lt;!--was small caps--&gt;|author1-link=John K. Fairbank|last2=Goldman|first2=Merle|author2-link=Merle Goldman|year=2006|origyear=1994|title=China: A New History|edition=2nd|location=Cambridge,&amp;nbsp;MA|publisher=[[Harvard University Press]]|isbn=978-0-674-01828-0|ref=harv}}
:{{Cite journal|last=Farrell|first=Brian P.&lt;!--was small caps--&gt;|year=1993|title=Yes, Prime Minister: Barbarossa, Whipcord, and the Basis of British Grand Strategy, Autumn 1941|journal=[[Journal of Military History]]|volume=57|issue=4|pages=599625|jstor=2944096|doi=10.2307/2944096|ref=harv}}
:{{Cite book|last=Ferguson|first=Niall&lt;!--was small caps--&gt;|authorlink=Niall Ferguson|year=2006|title=The War of the World: Twentieth-Century Conflict and the Descent of the West|publisher=Penguin|isbn=978-0-14-311239-6|ref=harv}}
:{{Cite book|last=Fitzgerald|first=Stephanie&lt;!--was small caps--&gt;|year=2011|title=Children of the Holocaust|location=Mankato, MN|publisher=Compass Point Books|isbn=9780756543907|ref=harv}}
:{{Cite book|last1=Forrest|first1=Glen&lt;!--was small caps--&gt;|last2=Evans|first2=Anthony|last3=Gibbons|first3=David|year=2012|title=The Illustrated Timeline of Military History|location=New York|publisher=The Rosen Publishing Group|isbn=9781448847945|ref=harv}}
:{{Cite book|last1=Frster|first1=Stig&lt;!--was small caps--&gt;|last2=Gessler|first2=Myriam|year=2005|chapter=The Ultimate Horror: Reflections on Total War and Genocide|title=''In Roger Chickering, Stig Frster and Bernd Greiner,&amp;nbsp;eds.,'' A World at Total War: Global Conflict and the Politics of Destruction, 19371945 ''(pp.&amp;nbsp;5368)''|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-83432-2|ref=harv}}
:{{Cite book|last=Frei|first=Norbert&lt;!--was small caps--&gt;|year=2002|title=Adenauer's Germany and the Nazi Past: The Politics of Amnesty and Integration|location=New York,&amp;nbsp;NY|publisher=[[Columbia University Press]]|isbn=978-0-231-11882-8|ref=harv}}
:{{Cite book|editor1-last=Gardiner|editor1-first=Robert&lt;!--was small caps--&gt;|editor2-last=Brown|editor2-first=David K.|year=2004|title=The Eclipse of the Big Gun: The Warship 19061945|location=London|publisher=[[Conway Maritime Press]]|isbn=978-0-85177-953-9|ref=harv}}
:{{Cite journal|last=Garthoff|first=Raymond L.&lt;!--was small caps--&gt;|authorlink=Raymond L. Garthoff|year=1969|title=The Soviet Manchurian Campaign, August 1945|journal=Military Affairs|volume=33|issue=2|pages=312336|jstor=1983926|doi=10.2307/1983926|ref=harv}}
:{{Cite book|last=Garver|first=John W.&lt;!--was small caps--&gt;|year=1988|title=Chinese-Soviet Relations, 19371945: The Diplomacy of Chinese Nationalism|location=New York,&amp;nbsp;NY|publisher=[[Oxford University Press]]|isbn=978-0-19-505432-3|ref=harv}}
:{{cite encyclopedia |last=Gilbert |first=Martin |authorlink=Martin Gilbert |title=Final Solution |pages=285292 |editor-last1=Dear |editor-first1=Ian |editor-last2=Foot |editor-first2=Richard D. |year=2001 |encyclopedia=The Oxford Companion to World War II |location=Oxford, UK |publisher=Oxford University Press |isbn=0-19-280670-X |ref=harv}}
:{{Cite journal|last=Glantz |first=David M.&lt;!--was small caps--&gt; |authorlink=David Glantz |year=1986 |title=Soviet Defensive Tactics at Kursk, July 1943 |url=http://www-cgsc.army.mil/carl/resources/csi/glantz2/glantz2.asp |series=CSI Report No. 11 |publisher=Combined Arms Research Library |oclc=278029256 |accessdate=15 July 2013 |ref=harv |deadurl=yes |archiveurl=https://web.archive.org/web/20080306082607/http://www-cgsc.army.mil/carl/resources/csi/glantz2/glantz2.asp |archivedate=6 March 2008 }}
:{{Cite book|author=|year=1989|title=Soviet Military Deception in the Second World War|location=Abingdon and New York, NY|publisher=[[Frank Cass]]|isbn=978-0-7146-3347-3|ref=CITEREFGlantz1989}}
:{{Cite book|author=|year=1998|title=When Titans Clashed: How the Red Army Stopped Hitler|location=Lawrence, KS|publisher=[[University Press of Kansas]]|isbn=978-0-7006-0899-7|ref=CITEREFGlantz1998}}
:{{cite web|author=|year=2001|title=The Soviet-German War 194145 Myths and Realities: A Survey Essay|url=http://www.strom.clemson.edu/publications/sg-war41-45.pdf|archiveurl=https://web.archive.org/web/20110709141048/http://www.strom.clemson.edu/publications/sg-war41-45.pdf|archivedate=9 July 2011|ref=CITEREFGlantz2001}}
:{{Cite book|author=|year=2002|title=The Battle for Leningrad: 19411944|location=Lawrence,&amp;nbsp;KS|publisher=[[University Press of Kansas]]|isbn=978-0-7006-1208-6|ref=CITEREFGlantz2002}}
:{{Cite journal|author= |year=2005 |title=August Storm: The Soviet Strategic Offensive in Manchuria |url=http://www-cgsc.army.mil/carl/resources/csi/glantz3/glantz3.asp |series=Leavenworth Papers |publisher=Combined Arms Research Library |oclc=78918907 |accessdate=15 July 2013 |ref=CITEREFGlantz2005 |deadurl=yes |archiveurl=https://web.archive.org/web/20080302130751/http://www-cgsc.army.mil/carl/resources/csi/glantz3/glantz3.asp |archivedate=2 March 2008 }}
:{{Cite book|last=Goldstein|first=Margaret J.&lt;!--was small caps--&gt;|year=2004|title=World War II: Europe|location=Minneapolis|publisher=[[Lerner Publishing Group|Lerner Publications]]|isbn=978-0-8225-0139-8|ref=harv}}
:{{Cite book|last=Gordon|first=Andrew&lt;!--was small caps--&gt;|authorlink=Andrew Gordon (naval historian)|year=2004|chapter=The greatest military armada ever launched|title=''In Jane Penrose, ed.,'' The D-Day Companion ''(pp.&amp;nbsp;127144)''|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-779-6|ref=harv}}
:{{Cite book|last=Gordon|first=Robert S. C.&lt;!--was small caps--&gt;|year=2012|title=The Holocaust in Italian Culture, 19442010|location=Stanford, CA|publisher=[[Stanford University Press]]|isbn=978-0-8047-6346-2|ref=harv}}
:{{Cite book|last=Grove|first=Eric J.&lt;!--was small caps--&gt;|year=1995|chapter=A Service Vindicated, 19391946|title=''In J. R. Hill, ed.,'' The Oxford Illustrated History of the Royal Navy ''(pp.&amp;nbsp;348380)''|location=Oxford|publisher=[[Oxford University Press]]|isbn=978-0-19-211675-8|ref=harv}}
:{{Cite book|last=Hane|first=Mikiso&lt;!--was small caps--&gt;|year=2001|title=Modern Japan: A Historical Survey|edition=3rd|location=Boulder, CO|publisher=[[Westview Press]]|isbn=978-0-8133-3756-2|ref=harv}}
:{{Cite book|last=Hanhimki|first=Jussi M.&lt;!--was small caps--&gt;|year=1997|title=Containing Coexistence: America, Russia, and the &quot;Finnish Solution&quot;|location=Kent,&amp;nbsp;OH|publisher=[[Kent State University Press]]|isbn=978-0-87338-558-9|ref=harv}}
:{{Cite book|last=Harris|first=Sheldon H.&lt;!--was small caps--&gt;|authorlink=Sheldon H. Harris|year=2002|title=Factories of Death: Japanese Biological Warfare, 19321945, and the American Cover-up|edition=2nd|location=London and New York, NY|publisher=[[Routledge]]|isbn=978-0-415-93214-1|ref=harv}}
:{{Cite book|last=Harrison|first=Mark&lt;!--was small caps--&gt;|year=1998|chapter=The economics of World War II: an overview|title=''In Mark Harrison, ed.,'' The Economics of World War II: Six Great Powers in International Comparison ''(pp.&amp;nbsp;142)''|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-62046-8|ref=harv}}
:{{Cite book|last1=Hart|first1=Stephen&lt;!--was small caps--&gt;|last2=Hart|first2=Russell|last3=Hughes|first3=Matthew|year=2000|title=The German Soldier in World War II|location=Osceola, WI|publisher=[[MBI Publishing Company]]|isbn=978-1-86227-073-2|ref=harv}}
:{{Cite journal|last=Hauner|first=Milan&lt;!--was small caps--&gt;|year=1978|title=Did Hitler Want a World Dominion?|journal=[[Journal of Contemporary History]]|volume=13|issue=1|pages=1532|jstor=260090|doi=10.1177/002200947801300102|ref=harv}}
:{{Cite book|last=Healy|first=Mark&lt;!--was small caps--&gt;|year=1992|title=Kursk 1943: The Tide Turns in the East|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-85532-211-0|ref=harv}}
:{{Cite book|last=Hearn|first=Chester G.&lt;!--was small caps--&gt;|year=2007|title=Carriers in Combat: The Air War at Sea|location=Mechanicsburg, PA|publisher=[[Stackpole Books]]|isbn=978-0-8117-3398-4|ref=harv}}
:{{Cite book|last1=Hedgepeth|first1=Sonja&lt;!--was small caps--&gt;|last2=Saidel|first2=Rochelle|year=2010|title=Sexual Violence against Jewish Women During the Holocaust|location=Lebanon, NH|publisher=University Press of New England|isbn=9781584659044|ref=harv}}
:{{Cite book|last=Hempel|first=Andrew&lt;!--was small caps--&gt;|year=2005|title=Poland in World War II: An Illustrated Military History|location=New York,&amp;nbsp;NY|publisher=[[Hippocrene Books]]|isbn=978-0-7818-1004-3|ref=harv}}
:{{Cite book|last=Herbert|first=Ulrich&lt;!--was small caps--&gt;|authorlink=Ulrich Herbert|year=1994|chapter=Labor as spoils of conquest, 19331945|title=''In David F. Crew, ed.,'' Nazism and German Society, 19331945 ''(pp.&amp;nbsp;219273)''|location=London and New York, NY|publisher=[[Routledge]]|isbn=978-0-415-08239-6|ref=harv}}
:{{Cite journal|last=Herf|first=Jeffrey&lt;!--was small caps--&gt;|authorlink=Jeffrey Herf|year=2003|title=The Nazi Extermination Camps and the Ally to the East. Could the Red Army and Air Force Have Stopped or Slowed the Final Solution?|journal=[[Kritika (journal)|Kritika: Explorations in Russian and Eurasian History]]|volume=4|issue=4|pages=913930|doi=10.1353/kri.2003.0059|ref=harv}}
:{{Cite book|last=Hill|first=Alexander&lt;!--was small caps--&gt;|title=The War Behind The Eastern Front: The Soviet Partisan Movement In North-West Russia 19411944|location=London &amp; New York, NY|publisher=[[Frank Cass]]|year=2005|isbn=978-0-7146-5711-0|ref=harv}}
:{{Cite book|last=Holland|first=James&lt;!--was small caps--&gt;|year=2008|title=Italy's Sorrow: A Year of War 194445|location=London|publisher=[[HarperPress]]|isbn=978-0-00-717645-8|ref=harv}}
:{{Cite book|last=Hosking|first=Geoffrey A.&lt;!--was small caps--&gt;|year=2006|title=Rulers and Victims: The Russians in the Soviet Union|location=Cambridge, MA|publisher=[[Harvard University Press]]|isbn=978-0-674-02178-5|ref=harv}}
:{{Cite book|last=Howard|first=Joshua H.&lt;!--was small caps--&gt;|year=2004|title=Workers at War: Labor in China's Arsenals, 19371953|location=Stanford, CA|publisher=[[Stanford University Press]]|isbn=978-0-8047-4896-4|ref=harv}}
:{{Cite book|last1=Hsu|first1=Long-hsuen&lt;!--was small caps--&gt;|last2=Chang|first2=Ming-kai|year=1971|title=History of The Sino-Japanese War (19371945) 2nd Ed.|id = ASIN B00005W210|publisher=Chung Wu Publishers|ref=harv}}
:{{Cite book|last=Ingram|first=Norman&lt;!--was small caps--&gt;|year=2006|chapter=Pacifism|title=''In [[Lawrence Kritzman|Lawrence&amp;nbsp;D. Kritzman]] and Brian&amp;nbsp;J. Reilly,&amp;nbsp;eds.,'' The Columbia History Of Twentieth-Century French Thought ''(pp.&amp;nbsp;7678)''|location=New York,&amp;nbsp;NY|publisher=[[Columbia University Press]]|isbn=978-0-231-10791-4|ref=harv}}
:{{Cite book|last=Iriye|first=Akira&lt;!--was small caps--&gt;|authorlink=Akira Iriye|year=1981|title=Power and Culture: The Japanese-American War, 19411945|location=Cambridge,&amp;nbsp;MA|publisher=[[Harvard University Press]]|isbn=978-0-674-69580-1|ref=harv}}
:{{Cite book|last=Jackson|first=Ashley&lt;!--was small caps--&gt;|year=2006|authorlink=Ashley Jackson (historian)|title=The British Empire and the Second World War|location=London &amp; New York,&amp;nbsp;NY|publisher=[[Hambledon Continuum]]|isbn=978-1-85285-417-1|ref=harv}}
:{{Cite book|last=Joes|first=Anthony James&lt;!--was small caps--&gt;|year=2004|title=Resisting Rebellion: The History And Politics of Counterinsurgency|location=Lexington,&amp;nbsp;KE|publisher=[[University Press of Kentucky]]|isbn=978-0-8131-2339-4|ref=harv}}
:{{Cite book|last=Jowett|first=Philip S.&lt;!--was small caps--&gt;|year=2001|title=The Italian Army 194045, Volume&amp;nbsp;2: Africa 194043|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-85532-865-5|ref=harv}}
:{{Cite book|author=|last2=Andrew|first2=Stephen|year=2002|title=The Japanese Army, 193145|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-353-8|ref=CITEREFJowettAndrew2002}}
:{{Cite book|last=Jukes|first=Geoffrey&lt;!--was small caps--&gt;|year=2001|chapter=Kuznetzov|title=In [[:ru:, |Harold Shukman]],&amp;nbsp;ed.,'' Stalin's Generals ''(pp.&amp;nbsp;109116)|location=London|publisher=[[Weidenfeld &amp; Nicolson|Phoenix Press]]|isbn=978-1-84212-513-7|ref=harv}}
:{{Cite book|last=Kantowicz|first=Edward R.&lt;!--was small caps--&gt;|year=1999|title=The Rage of Nations|location=Grand Rapids,&amp;nbsp;MI|publisher=[[William B. Eerdmans Publishing Company]]|isbn=978-0-8028-4455-2|ref=harv}}
:{{Cite book|author=|year=2000|title=Coming Apart, Coming Together|location=Grand Rapids,&amp;nbsp;MI|publisher=[[William B. Eerdmans Publishing Company]]|isbn=978-0-8028-4456-9|ref={{sfnRef|Kantowicz|2000}} }}
:{{Cite book|last=Keeble|first=Curtis&lt;!--was small caps--&gt;|authorlink=Curtis Keeble|year=1990|chapter=The historical perspective|title=''In Alex Pravda and Peter J. Duncan,&amp;nbsp;eds.,'' Soviet-British Relations Since the 1970s|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-37494-1|ref=harv}}
:{{Cite book|last=Keegan|first=John&lt;!--was small caps--&gt;|authorlink=John Keegan|year=1997|title=The Second World War|location=London|publisher=[[Random House|Pimlico]]|isbn=978-0-7126-7348-8|ref=harv}}
:{{Cite book|last=Kennedy|first=David M.&lt;!--was small caps--&gt;|authorlink=David M. Kennedy (historian)|year=2001|title=[[Freedom from Fear: The American People in Depression and War, 19291945]]|publisher=Oxford University Press|isbn=978-0-19-514403-1|ref=harv}}
:{{Cite book|last=Kennedy-Pipe|first=Caroline&lt;!--was small caps--&gt;|year=1995|title=Stalin's Cold War: Soviet Strategies in Europe, 194356|location=Manchester|publisher=[[Manchester University Press]]|isbn=978-0-7190-4201-0|ref=harv}}
:{{Cite book|last=Kershaw|first=Ian&lt;!--was small caps--&gt;|authorlink=Ian Kershaw|year=2001|title=Hitler, 19361945: Nemesis|location=New York,&amp;nbsp;NY|publisher=[[W. W. Norton &amp; Company]]|isbn=978-0-393-04994-7|ref=harv}}
:{{Cite book|author=|year=2007|title=Fateful Choices: Ten Decisions That Changed the World, 19401941|location=London|publisher=[[Penguin Books|Allen Lane]]|isbn=978-0-7139-9712-5|ref=CITEREFKershaw2007}}
:{{Cite book|last=Kitson|first=Alison&lt;!--was small caps--&gt;|year=2001|title=Germany 18581990: Hope, Terror, and Revival|location=Oxford|publisher=[[Oxford University Press]]|isbn=978-0-19-913417-5|ref=harv}}
:{{Cite journal|last1=Klavans|first1=Richard A.&lt;!--was small caps--&gt;|last2=Di Benedetto|first2=C. Anthony|last3=Prudom|first3=Melanie J.|year=1997|title=Understanding Competitive Interactions: The U.S. Commercial Aircraft Market|journal=Journal of Managerial Issues|volume=9|issue=1|pages=13361|jstor=40604127|ref=harv}}
:{{Cite journal|last=Kleinfeld|first=Gerald R.&lt;!--was small caps--&gt;|year=1983|title=Hitler's Strike for Tikhvin|journal=Military Affairs|volume=47|issue=3|pages=122128|jstor=1988082|doi=10.2307/1988082|ref=harv}}
:{{Cite journal|last=Koch|first=H. W.&lt;!--was small caps--&gt;|year=1983|title=Hitler's 'Programme' and the Genesis of Operation 'Barbarossa'|journal=[[The Historical Journal]]|volume=26|issue=4|pages=891920|jstor=2639289|ref=harv}}
:{{Cite book|last=Kolko|first=Gabriel&lt;!--was small caps--&gt;|authorlink=Gabriel Kolko|year=1990|origyear=1968|title=The Politics of War: The World and United States Foreign Policy, 19431945|location=New York,&amp;nbsp;NY|publisher=[[Random House]]|isbn=978-0-679-72757-6|ref=harv}}
:{{Cite book|last=Laurier|first=Jim&lt;!--was small caps--&gt;|year=2001|title=Tobruk 1941: Rommel's Opening Move|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-092-6|ref=harv}}
:{{Cite book|last=Lee|first=En-han&lt;!--was small caps--&gt;|year=2002|chapter=The Nanking Massacre Reassessed: A Study of the Sino-Japanese Controversy over the Factual Number of Massacred Victims|title=''In Robert Sabella, Fei Fei Li and David Liu, eds.,'' Nanking 1937: Memory and Healing ''(pp.&amp;nbsp;4774)''|location=Armonk, NY|publisher=[[M. E. Sharpe]]|isbn=978-0-7656-0816-1|ref=harv}}
:{{Cite book|editor1-last=Leffler|editor1-first=Melvyn P.&lt;!--was small caps--&gt;|editor1-link=Melvyn P. Leffler|editor2-last=Westad|editor2-first=Odd Arne|editor2-link=Odd Arne Westad|year=2010|title=The Cambridge History of the Cold War ''(3 volumes)''|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-83938-9|ref=harv}}
:{{Cite book|last=Levine|first=Alan J.&lt;!--was small caps--&gt;|year=1992|title=The Strategic Bombing of Germany, 19401945|location=Westport, CT|publisher=[[Praeger Publishers|Praeger]]|isbn=978-0-275-94319-6|ref=harv}}
:{{Cite book|editor1-last=Greenfield|editor1-first=Kent Roberts|last=Lewis|first=Morton&lt;!--was small caps--&gt;|year=1953|chapter=Japanese Plans and American Defenses|chapterurl=http://www.history.army.mil/books/wwii/5-2/5-2_29.htm|title=The Fall of the Philippines|url=http://www.history.army.mil/books/wwii/5-2/5-2_Contents.htm|location=Washington, DC|publisher=[[US Government Printing Office]]|id=Library of Congress Catalogue Card Number: 53-63678|ref=harv}}
:{{Cite book|last=Liberman|first=Peter&lt;!--was small caps--&gt;|year=1996|title=Does Conquest Pay?: The Exploitation of Occupied Industrial Societies|location=Princeton, NJ|publisher=[[Princeton University Press]]|isbn=978-0-691-02986-3|ref=harv}}
:{{cite book|last=Liddell Hart|first=Basil|title=History of the Second World War|edition=4th|date=1977|publisher=Pan|location=London|isbn=9780330237703|ref=harv}}
:{{Cite book|last=Lightbody|first=Bradley&lt;!--was small caps--&gt;|year=2004|title=The Second World War: Ambitions to Nemesis|location=London &amp; New York, NY|publisher=[[Routledge]]|isbn=978-0-415-22404-8|ref=harv}}
:{{Cite book|last1=Lindberg|first1=Michael&lt;!--was small caps--&gt;|last2=Todd|first2=Daniel|year=2001|title=Brown-, Green- and Blue-Water Fleets: the Influence of Geography on Naval Warfare, 1861 to the Present|location=Westport, CT|publisher=[[Praeger Publishers|Praeger]]|isbn=978-0-275-96486-3|ref=harv}}
:{{Cite book|last1=Lowe|first1=C.&amp;nbsp;J.&lt;!--was small caps--&gt;|last2=Marzari|first2=F.|year=2002|title=Italian Foreign Policy 18701940|location=London|publisher=[[Routledge]]|isbn=978-0-415-26681-9|ref=harv}}
:{{Cite book|last=Lynch|first=Michael&lt;!--was small caps--&gt;|year=2010|title=The Chinese Civil War 194549|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-671-3|ref=harv}}
:{{Cite book|last=Macksey|first=Kenneth&lt;!--was small caps--&gt;|authorlink=Kenneth Macksey|year=1997|origyear=1979|title=Rommel: Battles and Campaigns|location=Cambridge,&amp;nbsp;MA|publisher=[[Da Capo Press]]|isbn=978-0-306-80786-2|ref=harv}}
:{{Cite book|last=Maddox|first=Robert James&lt;!--was small caps--&gt;|year=1992|title=The United States and World War II|location=Boulder, CO|publisher=[[Westview Press]]|isbn=978-0-8133-0437-3|ref=harv}}
:{{Cite book|last=Maingot|first=Anthony P.&lt;!--was small caps--&gt;|year=1994|title=The United States and the Caribbean: Challenges of an Asymmetrical Relationship|location=Boulder,&amp;nbsp;CO|publisher=[[Westview Press]]|isbn=978-0-8133-2241-4|ref=harv}}
:{{Cite book|last=Mandelbaum|first=Michael&lt;!--was small caps--&gt;|year=1988|title=The Fate of Nations: The Search for National Security in the Nineteenth and Twentieth Centuries|publisher=[[Cambridge University Press]]|page=96|isbn=0-521-35790-X|ref=harv}}
:{{Cite book|last=Marston|first=Daniel&lt;!--was small caps--&gt;|year=2005|title=The Pacific War Companion: From Pearl Harbor to Hiroshima|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-882-3|ref=harv}}
:{{Cite book|last=Masaya|first=Shiraishi&lt;!--was small caps--&gt;|year=1990|title=Japanese Relations with Vietnam, 19511987|location=Ithaca,&amp;nbsp;NY|publisher=[[Cornell Southeast Asia Program|SEAP Publications]]|isbn=978-0-87727-122-2|ref=harv}}
:{{Cite journal|last=May|first=Ernest R.&lt;!--was small caps--&gt;|authorlink=Ernest May (historian)|year=1955|title=The United States, the Soviet Union, and the Far Eastern War, 19411945|journal=[[Pacific Historical Review]]|volume=24|issue=2|pages=153174|jstor=3634575|doi=10.2307/3634575|ref=harv}}
:{{Cite book|last=Mazower|first=Mark&lt;!--was small caps--&gt;|authorlink=Mark Mazower|year=2008|title=Hitler's Empire: Nazi Rule in Occupied Europe|location=London|publisher=[[Penguin Group|Allen Lane]]|isbn=978-1-59420-188-2|ref=harv}}
:{{Cite book|last=Milner|first=Marc&lt;!--was small caps--&gt;|authorlink=Marc Milner|year=1990|chapter=The Battle of the Atlantic|title=''In John Gooch, ed.,'' Decisive Campaigns of the Second World War ''(pp.&amp;nbsp;4566)''|location=Abingdon|publisher=[[Frank Cass]]|isbn=978-0-7146-3369-5|ref=harv}}
:{{Cite journal|last=Milward|first=A. S.&lt;!--was small caps--&gt;|year=1964|title=The End of the Blitzkrieg|journal=[[The Economic History Review]]|volume=16|issue=3|pages=499518|jstor=2592851|doi=10.2307/2592851|ref=harv}}
:{{Cite book|author=|year=1992|origyear=1977|title=War, Economy, and Society, 19391945|location=Berkeley,&amp;nbsp;CA|publisher=[[University of California]] Press|isbn=978-0-520-03942-1|ref=CITEREFMilward1992}}
:{{Cite book|last=Minford|first=Patrick&lt;!--was small caps--&gt;|authorlink=Patrick Minford|year=1993|chapter=Reconstruction and the UK Postwar Welfare State: False Start and New Beginning|title=''In [[Rudi Dornbusch|Rudiger Dornbusch]], Wilhelm Nlling and [[Richard Layard, Baron Layard|Richard Layard]], eds.,'' Postwar Economic Reconstruction and Lessons for the East Today ''(pp.&amp;nbsp;115138)''|location=Cambridge, MA|publisher=[[MIT Press]]|isbn=978-0-262-04136-2|ref=harv}}
:{{Cite book|last1=Mingst|first1=Karen A.&lt;!--was small caps--&gt;|last2=Karns|first2=Margaret P.|year=2007|title=United Nations in the Twenty-First Century|edition=3rd|location=Boulder, CO|publisher=[[Westview Press]]|isbn=978-0-8133-4346-4|ref=harv}}
:{{Cite book|last=Miscamble|first=Wilson D.&lt;!--was small caps--&gt;|year=2007|title=From Roosevelt to Truman: Potsdam, Hiroshima, and the Cold War|location=New York,&amp;nbsp;NY|publisher=[[Cambridge University Press]]|isbn=978-0-521-86244-8|ref=harv}}
:{{Cite book|last=Mitcham|first=Samuel W.&lt;!--was small caps--&gt;|year=2007|origyear=1982|title=Rommel's Desert War: The Life and Death of the Afrika Korps|location=Mechanicsburg, PA|publisher=[[Stackpole Books]]|isbn=978-0-8117-3413-4|ref=harv}}
:{{cite book |url=| last = Mitter | first = Rana|authorlink=Rana Mitter| title =Forgotten Ally: China's World War II, 19371945 | publisher = Mariner Books| year = 2014 | isbn = 978-0544334502|ref=harv}}
:{{Cite book|last=Molinari|first=Andrea&lt;!--was small caps--&gt;|year=2007|title=Desert Raiders: Axis and Allied Special Forces 194043|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84603-006-2|ref=harv}}
:{{Cite book|last=Morison|first=Samuel Eliot| authorlink=Samuel Eliot Morison&lt;!--was small caps--&gt;|year=2002|title=[[History of United States Naval Operations in World War II]], Volume&amp;nbsp;14: Victory in the Pacific, 1945|location=Champaign,&amp;nbsp;IL|publisher=[[University of Illinois Press]]|isbn=978-0-252-07065-5|ref=harv}}
:{{Cite book|last=Murray|first=Williamson&lt;!--was small caps--&gt;|authorlink=Williamson Murray|year=1983|title=Strategy for Defeat: The Luftwaffe, 19331945|url=http://www.ibiblio.org/hyperwar/AAF/AAF-Luftwaffe/|location=[[Maxwell Air Force Base]], AL|publisher=[[Air University Press]]|isbn=978-1-4294-9235-5|ref=harv}}
:{{Cite book|last1=|last2=Millett|first2=Allan Reed|year=2001|title=A War to Be Won: Fighting the Second World War|location=Cambridge,&amp;nbsp;MA|publisher=[[Harvard University Press]]|isbn=978-0-674-00680-5|ref=CITEREFMurrayMillett2001}}
:{{Cite book|last1=Myers|first1=Ramon&lt;!--was small caps--&gt;|last2=Peattie|first2=Mark|year=1987|title=The Japanese Colonial Empire, 18951945|location=Princeton,&amp;nbsp;NJ|publisher=[[Princeton University Press]]|isbn=978-0-691-10222-1|ref=harv}}
:{{Cite book|last=Naimark|first1=Norman&lt;!--was small caps--&gt;|authorlink=Norman Naimark|year=2010|chapter=The Sovietization of Eastern Europe, 19441953|title=''In [[Melvyn&amp;nbsp;P. Leffler]] and [[Odd Arne Westad]],&amp;nbsp;eds.,'' The Cambridge History of the Cold War, Volume&amp;nbsp;I: Origins ''(pp.&amp;nbsp;175197)''|location=Cambridge|publisher=[[Cambridge University Press]]|isbn= 978-0-521-83719-4|ref=harv}}
:{{Cite book|last=Neary|first=Ian&lt;!--was small caps--&gt;|year=1992|chapter=Japan|title=''In Martin Harrop, ed.,'' Power and Policy in Liberal Democracies ''(pp.&amp;nbsp;4970)''|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-34579-8|ref=harv}}
:{{Cite book|last=Neillands|first=Robin&lt;!--was small caps--&gt;|authorlink=Robin Neillands|year=2005|title=The Dieppe Raid: The Story of the Disastrous 1942 Expedition|location=Bloomington, IN|publisher=[[Indiana University Press]]|isbn=978-0-253-34781-7|ref=harv}}
:{{Cite book|last=Newton|first=Steven H.&lt;!--was small caps--&gt;|year=2004|title=Retreat from Leningrad: Army Group North, 1944/1945|location=Atglen, PA|publisher=[[Schiffer Publishing|Schiffer Books]]|isbn=978-0-88740-806-9|ref=harv}}
:{{Cite book|last1=Niewyk|first1=Donald L.&lt;!--was small caps--&gt;|last2=Nicosia|first2=Francis|year=2000|title=The Columbia Guide to the Holocaust|location=New York, NY|publisher=[[Columbia University Press]]|isbn=978-0-231-11200-0|ref=harv}}
:{{Cite book|last=Overy|first=Richard&lt;!--was small caps--&gt;|authorlink=Richard Overy|year=1994|title=War and Economy in the Third Reich|location=New York, NY|publisher=[[Clarendon Press]]|isbn=978-0-19-820290-5|ref=harv}}
:{{Cite book|author=|year=1995|title=Why the Allies Won|location=London|publisher=Pimlico|isbn=978-0-712-67453-9|ref=CITEREFOvery1995}}
:{{Cite book|author=|year=2004|title=The Dictators: Hitler's Germany, Stalin's Russia|location=New York,&amp;nbsp;NY|publisher=[[W. W. Norton &amp; Company]]|isbn=978-0-393-02030-4|ref=CITEREFOvery2004}}
:{{Cite book|last1=|last2=Wheatcroft|first2=Andrew|year=1999|title=The Road to War|edition=2nd|location=London|publisher=[[Penguin Books]]|isbn=978-0-14-028530-7|ref=CITEREFOveryWheatcroft1999}}
:{{Cite book|last=O'Reilly|first=Charles T.&lt;!--was small caps--&gt;|year=2001|title=Forgotten Battles: Italy's War of Liberation, 19431945|location=Lanham,&amp;nbsp;MD|publisher=[[Lexington Books]]|isbn=978-0-7391-0195-7|ref=harv}}
:{{Cite journal|last=Painter|first=David S.&lt;!--was small caps--&gt;|authorlink=David S. Painter|year=2012|title=Oil and the American Century|url=http://jah.oxfordjournals.org/content/99/1/24.full.pdf|journal=[[The Journal of American History]]|volume=99|issue=1|pages=2439|doi= 10.1093/jahist/jas073|ref=harv}}
:{{Cite book|last=Padfield|first=Peter&lt;!--was small caps--&gt;|year=1998|title=War Beneath the Sea: Submarine Conflict During World War II|location=New York, NY|publisher=[[John Wiley &amp; Sons|John Wiley]]|isbn=978-0-471-24945-0|ref=harv}}
:{{Cite journal|last=Pape|first=Robert A.&lt;!--was small caps--&gt;|authorlink=Robert Pape|year=1993|title=Why Japan Surrendered|journal=[[International Security]]|volume=18|issue=2|pages=154201|jstor=2539100|doi=10.2307/2539100|ref=harv}}
:{{Cite book|last=Parker|first=Danny S.&lt;!--was small caps--&gt;|year=2004|title=Battle of the Bulge: Hitler's Ardennes Offensive, 19441945|edition=New|location=Cambridge, MA|publisher=[[Da Capo Press]]|isbn=978-0-306-81391-7|ref=harv}}
:{{Cite book|last=Payne|first=Stanley G.&lt;!--was small caps--&gt;|authorlink=Stanley G. Payne|year=2008|title=Franco and Hitler: Spain, Germany, and World War II|location=New Haven, CT|publisher=[[Yale University Press]]|isbn=978-0-300-12282-4|ref=harv}}
:{{Cite book|last=Perez|first=Louis G.&lt;!--was small caps--&gt;|year=1998|title=The History of Japan|location=Westport,&amp;nbsp;CT|publisher=[[Greenwood Publishing Group]]|isbn=978-0-313-30296-1|ref=harv}}
:{{Cite book|last=Petrov|first=Vladimir&lt;!--was small caps--&gt;|year=1967|title=Money and Conquest: Allied Occupation Currencies in World War II|location=Baltimore, MD|publisher=[[Johns Hopkins University Press]]|isbn=978-0-8018-0530-1|ref=harv}}
:{{Cite book|last=Polley|first=Martin&lt;!--was small caps--&gt;|year=2000|title=An AZ of Modern Europe Since 1789|location=London and New York, NY|publisher=[[Routledge]]|isbn=978-0-415-18597-4|ref=harv}}
:{{Cite book|last=Portelli|first=Alessandro&lt;!--was small caps--&gt;|authorlink=Alessandro Portelli|year=2003|title=The Order Has Been Carried Out: History, Memory, and Meaning of a Nazi Massacre in Rome|location=Basingstoke &amp; New York, NY[[Palgrave Macmillan]]978-1403980083|ref=harv}}
:{{Cite book|last=Preston|first=P.&amp;nbsp;W.&lt;!--was small caps--&gt;|year=1998|title=Pacific Asia in the Global System: An Introduction|location=Oxford&amp;nbsp;&amp; Malden,&amp;nbsp;MA|publisher=[[Wiley-Blackwell|Blackwell Publishers]]|isbn=978-0-631-20238-7|ref=harv}}
:{{Cite book|last=Prins|first=Gwyn&lt;!--was small caps--&gt;|year=2002|title=The Heart of War: On Power, Conflict and Obligation in the Twenty-First Century|location=London &amp; New York,&amp;nbsp;NY|publisher=[[Routledge]]|isbn=978-0-415-36960-2|ref=harv}}
:{{Cite book|last=Radtke|first=K. W.&lt;!--was small caps--&gt;|year=1997|chapter='Strategic' concepts underlying the so-called Hirota foreign policy, 19337|title=''In Aiko Ikeo, ed.,'' Economic Development in Twentieth Century East Asia: The International Context ''(pp.&amp;nbsp;100120)''|location=London and New York, NY|publisher=[[Routledge]]|isbn=978-0-415-14900-6|ref=harv}}
:{{Cite book|last=Rahn|first=Werner&lt;!--was small caps--&gt;|authorlink=Werner Rahn|year=2001|chapter=The War in the Pacific|title=''In [[Horst Boog]], [[Werner Rahn]], Reinhard Stumpf and [[Bernd Wegner]], eds.,'' Germany and the Second World War, Volume VI: The Global War ''(pp.&amp;nbsp;191298)''|location=Oxford|publisher=[[Clarendon Press]]|isbn=978-0-19-822888-2|ref=harv}}
:{{Cite book|last=Ratcliff|first=R. A.&lt;!--was small caps--&gt;|year=2006|title=Delusions of Intelligence: Enigma, Ultra, and the End of Secure Ciphers|location=New York, NY|publisher=[[Cambridge University Press]]|isbn=978-0-521-85522-8|ref=harv}}
:{{Cite book|last=Read|first=Anthony&lt;!--was small caps--&gt;|year=2004|title=The Devil's Disciples: Hitler's Inner Circle|location=New York, NY|publisher=[[W. W. Norton &amp; Company]]|isbn=978-0-393-04800-1|ref=harv}}
:{{Cite book|last1=Read|first1=Anthony&lt;!--was small caps--&gt;|last2=Fisher|first2=David|year=2002|origyear=1992|title=The Fall Of Berlin|location=London|publisher=[[Pimlico (publishing imprint)|Pimlico]]|isbn=978-0-7126-0695-0|ref=harv}}
:{{Cite book|last=Record|first=Jeffery&lt;!--was small caps--&gt;|year=2005|title=Appeasement Reconsidered: Investigating the Mythology of the 1930s|publisher=DIANE Publishing|page=50|isbn=1-58487-216-0|url=http://www.strategicstudiesinstitute.army.mil/pdffiles/PUB622.pdf|format=PDF|accessdate=15 November 2009|ref=harv}}
:{{Cite book|last=Rees|first=Laurence&lt;!--was small caps--&gt;|authorlink=Laurence Rees|year=2008|title=World War II Behind Closed Doors: Stalin, the Nazis and the West|location=London|publisher=[[BBC Books]]|isbn=978-0-563-49335-8|ref=harv}}
:{{Cite book|last=Regan|first=Geoffrey&lt;!--was small caps--&gt;|year=2004|title=The Brassey's Book of Military Blunders|publisher=Brassey's|isbn=978-1-57488-252-0|ref=harv}}
:{{Cite book|last=Reinhardt|first=Klaus&lt;!--was small caps--&gt;|authorlink=Klaus Reinhardt|year=1992|title=Moscow  The Turning Point: The Failure of Hitler's Strategy in the Winter of 194142|location=Oxford|publisher=[[Berg Publishers|Berg]]|isbn=978-0-85496-695-0|ref=harv}}
:{{Cite book|last=Reynolds|first=David&lt;!--was small caps--&gt;|year=2006|authorlink=David Reynolds (English historian)|title=From World War to Cold War: Churchill, Roosevelt, and the International History of the 1940s|location=|publisher=[[Oxford University Press]]|isbn=978-0-19-928411-5|ref=harv}}
:{{Cite book|last=Rich|first=Norman&lt;!--was small caps--&gt;|year=1992|origyear=1973|title=Hitler's War Aims, Volume I: Ideology, the Nazi State, and the Course of Expansion|location=New York, NY|publisher=[[W. W. Norton &amp; Company]]|isbn=978-0-393-00802-9|ref=harv}}
:{{Cite book|last=Ritchie|first=Ella&lt;!--was small caps--&gt;|year=1992|chapter=France|title=''In Martin Harrop, ed.,'' Power and Policy in Liberal Democracies ''(pp.&amp;nbsp;2348)''|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-34579-8|ref=harv}}
:{{Cite journal|last=Roberts|first=Cynthia A.&lt;!--was small caps--&gt;|year=1995|title=Planning for War: The Red Army and the Catastrophe of 1941|journal=[[Europe-Asia Studies]]|volume=47|issue=8|pages=12931326|jstor=153299|doi=10.1080/09668139508412322|ref=harv}}
:{{Cite book|last=Roberts|first=Geoffrey&lt;!--was small caps--&gt;|authorlink=Geoffrey Roberts|year=2006|title=Stalin's Wars: From World War to Cold War, 19391953|location=New Haven,&amp;nbsp;CT|publisher=[[Yale University Press]]|isbn=978-0-300-11204-7|ref=harv}}
:{{Cite book|last=Roberts|first=J. M.&lt;!--was small caps--&gt;|authorlink=John Roberts (historian)|year=1997|title=The Penguin History of Europe|location=London|publisher=[[Penguin Books]]|isbn=978-0-14-026561-3|ref=harv}}
:{{Cite book|last=Ropp|first=Theodore&lt;!--was small caps--&gt;|authorlink=Theodore Ropp|year=2000|title=War in the Modern World|edition=Revised|location=Baltimore, MD|publisher=[[Johns Hopkins University Press]]|isbn=978-0-8018-6445-2|ref=harv}}
:{{Cite book|last=Roskill|first=S. W.&lt;!--was small caps--&gt;|year=1954|title=The War at Sea 19391945, Volume 1: The Defensive|url=http://www.ibiblio.org/hyperwar/UN/UK/UK-RN-I/index.html|series=History of the Second World War. United Kingdom Military Series|location=London|publisher=[[HMSO]]|ref=harv}}
:{{Cite book|last=Ross|first=Steven T.&lt;!--was small caps--&gt;|year=1997|title=American War Plans, 19411945: The Test of Battle|location=Abingdon and New York, NY|publisher=[[Routledge]]|isbn=978-0-7146-4634-3|ref=harv}}
:{{Cite book|last=Rottman|first=Gordon L.&lt;!--was small caps--&gt;|year=2002|title=World War II Pacific Island Guide: A Geo-Military Study|location=Westport, CT|publisher=[[Greenwood Press]]|isbn=978-0-313-31395-0|ref=harv}}
:{{Cite journal|last=Rotundo|first=Louis&lt;!--was small caps--&gt;|year=1986|title=The Creation of Soviet Reserves and the 1941 Campaign|journal=Military Affairs|volume=50|issue=1|pages=218|jstor=1988530|doi=10.2307/1988530|ref=harv}}
:{{Cite book|last=Salecker|first=Gene Eric&lt;!--was small caps--&gt;|year=2001|title=Fortress Against the Sun: The B-17 Flying Fortress in the Pacific|location=Conshohocken, PA|publisher=Combined Publishing|isbn=978-1-58097-049-5|ref=harv}}
:{{Cite book|editor-last=Schain|editor-first=Martin A.&lt;!--was small caps--&gt;|year=2001|title=The Marshall Plan Fifty Years Later|location=London|publisher=[[Palgrave Macmillan]]|isbn=978-0-333-92983-4|ref=harv}}
:{{Cite book|last=Schmitz|first=David F.&lt;!--was small caps--&gt;|year=2000|title=Henry L. Stimson: The First Wise Man|location=Lanham,&amp;nbsp;MD|publisher=[[Rowman &amp; Littlefield]]|isbn=978-0-8420-2632-1|ref=harv}}
:{{Cite journal|last=Schofield|first=B. B.&lt;!--was small caps--&gt;|year=1981|title=The Defeat of the U-Boats during World War II|journal=[[Journal of Contemporary History]]|volume=16|issue=1|pages=119129|jstor=260619|doi=10.1177/002200948101600107|ref=harv}}
:{{Cite book|last=Schoppa|first=R. Keith|year=2011|title=In a Sea of Bitterness, Refugees during the Sino-Japanese War|publisher=[[Harvard University Press]]|isbn=978-0-6740-5988-7|ref=harv}}
:{{Cite journal|last=Sella|first=Amnon&lt;!--was small caps--&gt;|authorlink=Amnon Sella|year=1978|title=&quot;Barbarossa&quot;: Surprise Attack and Communication|journal=[[Journal of Contemporary History]]|volume=13|issue=3|pages=555583|jstor=260209|doi=10.1177/002200947801300308|ref=harv}}
:{{Cite journal|author=|year=1983|title=Khalkhin-Gol: The Forgotten War|journal=[[Journal of Contemporary History]]|volume=18|issue=4|pages=651687|jstor=260307|ref=CITEREFSella1983}}
:{{Cite book|last=Senn|first=Alfred Erich&lt;!--was small caps--&gt;|authorlink=Alfred E. Senn|year=2007|title=Lithuania 1940: Revolution from Above|location=Amsterdam &amp; New York,&amp;nbsp;NY|publisher=[[Rodopi (publisher)|Rodopi]]|isbn=978-90-420-2225-6|ref=harv}}
:{{Cite book|last=Shaw|first=Anthony&lt;!--was small caps--&gt;|year=2000|title=World War II: Day by Day|location=Osceola,&amp;nbsp;WI|publisher=[[MBI Publishing Company]]|isbn=978-0-7603-0939-1|ref=harv}}
:{{Cite journal|last=Shepardson|first=Donald E.&lt;!--was small caps--&gt;|year=1998|title=The Fall of Berlin and the Rise of a Myth|journal=[[Journal of Military History]]|volume=62|issue=1|pages=135154|jstor=120398|doi=10.2307/120398|ref=harv}}
:{{Cite book|last=Shirer|first=William L.&lt;!--was small caps--&gt;|authorlink=William L. Shirer|year=1990|origyear=1960|title=[[The Rise and Fall of the Third Reich|The Rise and Fall of the Third Reich: A History of Nazi Germany]]|location=New York,&amp;nbsp;NY|publisher=[[Simon &amp; Schuster]]|isbn=0-671-72868-7 |ref=harv}}
:{{Cite book|last=Shore|first=Zachary&lt;!--was small caps--&gt;|year=2003|title=What Hitler Knew: The Battle for Information in Nazi Foreign Policy|location=New York,&amp;nbsp;NY|publisher=[[Oxford University Press]]|isbn=978-0-19-518261-3|ref=harv}}
:{{Cite book|last=Slim|first=William&lt;!--was small caps--&gt;|year=1956|title=Defeat into Victory|location=London|publisher=Cassell|isbn=0-304-29114-5|ref=harv}}
:{{Cite book|last=Smith|first=Alan&lt;!--was small caps--&gt;|year=1993|title=Russia and the World Economy: Problems of Integration|location=London|publisher=[[Routledge]]|isbn=978-0-415-08924-1|ref=harv}}
:{{Cite book|last=Smith|first=J.W.&lt;!--was small caps--&gt;|year=1994|title=The World's Wasted Wealth 2: Save Our Wealth, Save Our Environment|publisher=Institute for Economic Democracy|isbn=0-9624423-2-1|ref=harv}}
:{{Cite book|last=Smith|first=Peter C.&lt;!--was small caps--&gt;|year=2002|origyear=1970|title=Pedestal: The Convoy That Saved Malta|edition=5th|location=Manchester|publisher=Goodall|isbn=978-0-907579-19-9|ref=harv}}
:{{Cite book|last1=Smith|first1=David&amp;nbsp;J.&lt;!--was small caps--&gt;|last2=Pabriks|first2=Artis|last3=Purs|first3=Aldis|last4=Lane|first4=Thomas|year=2002|title=The Baltic States: Estonia, Latvia and Lithuania|location=London|publisher=[[Routledge]]|isbn=978-0-415-28580-3|ref=harv}}
:{{Cite book|last1=Smith|first1=Winston&lt;!--was small caps--&gt;|last2=Steadman|first2=Ralph|year=2004|title=All Riot on the Western Front, Volume 3|publisher=Last Gasp|isbn=978-0-86719-616-0|ref=harv}}
:{{Cite book|last=Snyder|first=Timothy&lt;!--was small caps--&gt;|authorlink=Timothy D. Snyder|year=2010|title=Bloodlands: Europe Between Hitler and Stalin|location=London|publisher=[[The Bodley Head]]|isbn=978-0-224-08141-2|ref=harv}}
:{{Cite book |last=Sommerville |first=Donald |year=2008 |title=The Complete Illustrated History of World War Two: An Authoritative Account of the Deadliest Conflict in Human History with Analysis of Decisive Encounters and Landmark Engagements |location=Leicester |publisher=Lorenz Books |isbn=978-075481898-4 |ref=harv }}
:{{Cite journal|last=Spring|first=D.&amp;nbsp;W.&lt;!--was small caps--&gt;|year=1986|title=The Soviet Decision for War against Finland, 30 November 1939|journal=[[Soviet Studies]]|volume=38|issue=2|pages=207226|jstor=151203|doi=10.1080/09668138608411636|ref=harv}}
:{{Cite journal|last=Steinberg|first=Jonathan&lt;!--was small caps--&gt;|authorlink=Jonathan Steinberg|year=1995|title=The Third Reich Reflected: German Civil Administration in the Occupied Soviet Union, 19414|journal=[[The English Historical Review]]|volume=110|issue=437 |pages=620651|jstor=578338|ref=harv |doi=10.1093/ehr/cx.437.620}}
:{{Cite journal|last=Steury|first=Donald P.&lt;!--was small caps--&gt;|year=1987|title=Naval Intelligence, the Atlantic Campaign and the Sinking of the Bismarck: A Study in the Integration of Intelligence into the Conduct of Naval Warfare|journal=[[Journal of Contemporary History]]|volume=22|issue=2|pages=209233|jstor=260931|doi=10.1177/002200948702200202|ref=harv}}
:{{Cite book|last=Stueck|first=William&lt;!--was small caps--&gt;|year=2010|chapter=The Korean War|title=''In [[Melvyn P. Leffler]] and [[Odd Arne Westad]], eds.,'' The Cambridge History of the Cold War, Volume&amp;nbsp;I: Origins ''(pp.&amp;nbsp;266287)'' |location= Cambridge |publisher= [[Cambridge University Press]] |isbn= 978-0-521-83719-4 |ref= harv }}
:{{Cite book|last1=Sumner|first1=Ian&lt;!--was small caps--&gt;|last2=Baker|first2=Alix|year=2001|title=The Royal Navy 193945|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-195-4|ref=harv}}
:{{Cite book|last=Swain|first=Bruce&lt;!--was small caps--&gt;|year=2001|title=A Chronology of Australian Armed Forces at War 193945|location=Crows Nest|publisher=[[Allen &amp; Unwin]]|isbn=978-1-86508-352-0|ref=harv}}
:{{Cite journal|last=Swain|first=Geoffrey&lt;!--was small caps--&gt;|year=1992|title=The Cominform: Tito's International?|journal=[[The Historical Journal]]|volume=35|issue=3|pages=641663|doi=10.1017/S0018246X00026017|ref=harv}}
:{{Cite book|last=Tanaka|first=Yuki&lt;!--was small caps--&gt;|year=1996|title=Hidden Horrors: Japanese War Crimes in World War II|location=Boulder, CO|publisher=[[Westview Press]]|isbn=978-0-8133-2717-4|ref=harv}}
:{{Cite book|last=Taylor|first=A. J. P.&lt;!--was small caps--&gt;|authorlink=A. J. P. Taylor|year=1961|title=The Origins of the Second World War|location=London|publisher=[[Hamish Hamilton]]|isbn=|ref=harv}}
:{{Cite book|author=|year=1979|title=How Wars Begin|location=London|publisher=[[Hamish Hamilton]]|isbn=978-0-241-10017-2|ref={{sfnRef|Taylor|1979}} }}
:{{Cite book|last=Taylor|first=Jay&lt;!--was small caps--&gt;|year=2009|title=The Generalissimo: Chiang Kai-shek and the Struggle for Modern China|location=Cambridge,&amp;nbsp;MA|publisher=[[Harvard University Press]]|isbn=978-0-674-03338-2|ref=harv}}
:{{Cite book|last1=Thomas|first1=Nigel&lt;!--was small caps--&gt;|last2=Andrew|first2=Stephen|year=1998|title=German Army 19391945 (2): North Africa &amp; Balkans|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-85532-640-8|ref=harv}}
:{{Cite book|last1=Thompson|first1=John Herd&lt;!--was small caps--&gt;|last2=Randall|first2=Stephen J.|author2-link=Stephen Randall (political scientist)|year=2008|title=Canada and the United States: Ambivalent Allies|edition=4th|location=Athens, GA|publisher=[[University of Georgia Press]]|isbn=978-0-8203-3113-3|ref=harv}}
:{{Cite book|last=Trachtenberg|first=Marc&lt;!--was small caps--&gt;|authorlink=Marc Trachtenberg|year=1999|title=A Constructed Peace: The Making of the European Settlement, 19451963|location=Princeton,&amp;nbsp;NJ|publisher=[[Princeton University Press]]|isbn=978-0-691-00273-6|ref=harv}}
:{{Cite book|last1=Tucker|first1=Spencer C.&lt;!--was small caps--&gt;|authorlink1=Spencer C. Tucker|last2=Roberts|first2=Priscilla Mary|title=Encyclopedia of World War II: A Political, Social, and Military History|year=2004|publisher=ABC-CLIO|isbn=1-57607-999-6|ref=harv}}
:{{Cite book|last=Umbreit|first=Hans&lt;!--was small caps--&gt;|year=1991|chapter=The Battle for Hegemony in Western Europe|title=''In P.&amp;nbsp;S. Falla,&amp;nbsp;ed.,'' Germany and the Second World War, Volume&amp;nbsp;2: Germany's Initial Conquests in Europe ''(pp.&amp;nbsp;227326)''|location=Oxford|publisher=[[Oxford University Press]]|isbn=978-0-19-822885-1|ref=harv}}
:{{Cite book|author=United States Army&lt;!--was small caps--&gt;|authorlink=United States Army|year=1986|origyear=1953|title=The German Campaigns in the Balkans (Spring 1941)|url=http://www.history.army.mil/books/wwii/balkan/intro.htm|location=Washington, DC|publisher=[[Department of the Army]]|ref=CITEREFUS_Army1986}}
:{{Cite journal|last=Waltz|first=Susan&lt;!--was small caps--&gt;|authorlink=Susan Waltz|year=2002|title=Reclaiming and Rebuilding the History of the Universal Declaration of Human Rights|journal=[[Third World Quarterly]]|volume=23|issue=3|pages=437448|jstor=3993535|doi=10.1080/01436590220138378|ref=harv}}
:{{Cite book|last=Ward|first=Thomas A.&lt;!--was small caps--&gt;|year=2010|title=Aerospace Propulsion Systems|location=Singapore|publisher=[[John Wiley &amp; Sons]]|isbn=978-0-470-82497-9|ref=harv}}
:{{Cite book|last=Watson|first=William E.&lt;!--was small caps--&gt;|authorlink=William E. Watson|year=2003|title=Tricolor and Crescent: France and the Islamic World|location=Westport,&amp;nbsp;CT|publisher=[[Praeger Publishers|Praeger]]|isbn=0-275-97470-7|ref=harv}}
:{{Cite book|last=Weinberg|first=Gerhard L.| authorlink=Gerhard Weinberg&lt;!--was small caps--&gt;|year=2005|title=A World at Arms: A Global History of World War II|edition=2nd|location=Cambridge|publisher=[[Cambridge University Press]]|isbn=978-0-521-85316-3|ref=harv}}; comprehensive overview with emphasis on diplomacy
:{{Cite book|last=Wettig|first=Gerhard&lt;!--was small caps--&gt;|year=2008|title=Stalin and the Cold War in Europe: The Emergence and Development of East-West Conflict, 19391953|location=Lanham,&amp;nbsp;MD|publisher=[[Rowman &amp; Littlefield]]|isbn=978-0-7425-5542-6|ref=harv}}
:{{Cite book|last1=Wiest|first1=Andrew&lt;!--was small caps--&gt;|last2=Barbier|first2=M. K.|year=2002|title=Strategy and Tactics: Infantry Warfare|location=St Paul, MN|publisher=[[MBI Publishing Company]]|isbn=978-0-7603-1401-2|ref=harv}}
:{{Cite book|last=Williams|first=Andrew&lt;!--was small caps--&gt;|year=2006|title=Liberalism and War: The Victors and the Vanquished|location=Abingdon &amp; New York,&amp;nbsp;NY|publisher=[[Routledge]]|isbn=978-0-415-35980-1|ref=harv}}
:{{Cite journal|last=Wilt|first=Alan F.&lt;!--was small caps--&gt;|authorlink=Alan F. Wilt|year=1981|title=Hitler's Late Summer Pause in 1941|journal=Military Affairs|volume=45|issue=4|pages=18791|jstor=1987464|doi=10.2307/1987464|ref=harv}}
:{{Cite book|last=Wohlstetter|first=Roberta&lt;!--was small caps--&gt;|authorlink=Roberta Wohlstetter|year=1962|title=Pearl Harbor: Warning and Decision|location=Palo Alto,&amp;nbsp;CA|publisher=[[Stanford University Press]]|isbn=978-0-8047-0597-4|ref=harv}}
:{{Cite book|last=Wolf|first=Holger C.&lt;!--was small caps--&gt;|year=1993|chapter=The Lucky Miracle: Germany 19451951|title=''In [[Rudi Dornbusch|Rudiger Dornbusch]], Wilhelm Nlling and [[Richard Layard, Baron Layard|Richard Layard]], eds.,'' Postwar Economic Reconstruction and Lessons for the East Today ''(pp.&amp;nbsp;2956)''|location=Cambridge, MA|publisher=[[MIT Press]]|isbn=978-0-262-04136-2|ref=harv}}
:{{Cite book|last=Wood|first=James&amp;nbsp;B.&lt;!--was small caps--&gt;|year=2007|title=Japanese Military Strategy in the Pacific War: Was Defeat Inevitable?|location=Lanham, MD|publisher=[[Rowman &amp; Littlefield]]|isbn=978-0-7425-5339-2|ref=harv}}
:{{Cite book|last=Yoder|first=Amos&lt;!--was small caps--&gt;|year=1997|title=The Evolution of the United Nations System|edition=3rd|location=London &amp; Washington,&amp;nbsp;DC|publisher=[[Taylor &amp; Francis]]|isbn=1-56032-546-1|ref=harv}}
:{{Cite book|last=Zalampas|first=Michael&lt;!--was small caps--&gt;|year=1989|title=Adolf Hitler and the Third Reich in American magazines, 19231939|publisher=Bowling Green University Popular Press|isbn=0-87972-462-5|ref=harv}}
:{{Cite book|last=Zaloga|first=Steven&amp;nbsp;J.&lt;!--was small caps--&gt;|authorlink=Steven Zaloga|year=1996|title=Bagration 1944: The Destruction of Army Group Centre|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-85532-478-7|ref=harv}}
:{{Cite book|author=|year=2002|title=Poland 1939: The Birth of Blitzkrieg|location=Oxford|publisher=[[Osprey Publishing]]|isbn=978-1-84176-408-5|ref=CITEREFZaloga2002}}
: Zeiler, Thomas W. and Daniel M. DuBois, eds. ''A Companion to World War II'' (2 vol 2013), 1030pp; comprehensive overview by scholars
:{{Cite book|last=Zeiler|first=Thomas W.&lt;!--was small caps--&gt;|year=2004|title=Unconditional Defeat: Japan, America, and the End of World War II|location=Wilmington, DE|publisher=Scholarly Resources|isbn=978-0-8420-2991-9|ref=harv}}
:{{Cite book|last1=Zetterling|first1=Niklas&lt;!--was small caps--&gt;|last2=Tamelander|first2=Michael|year=2009|title=''Bismarck'': The Final Days of Germany's Greatest Battleship|location=Drexel Hill,&amp;nbsp;PA|publisher=[[Casemate Publishers|Casemate]]|isbn=978-1-935149-04-0|ref=harv}}
{{Refend}}

==Further reading==
{{Refbegin|indent=yes|30em}}
:{{Cite book|last=Aksar|first=Yusuf|year=2004|title=Implementing Intnl Humanitaria: From the AD Hoc Tribunals to a Permanent International Criminal Court|location=London and New York, NY|publisher=[[Routledge]]|isbn=978-0-7146-5584-0|ref=none}}
:{{Cite book|last=Beevor |first=Antony |year=2006|title=The Battle for Spain: The Spanish Civil War 19361939|location=London|publisher=[[Weidenfeld &amp; Nicolson]]|isbn=978-0-297-84832-5|ref=none}}
:{{Cite book|last=Budiansky|first=Stephen|year=2004|title=Air Power: The Men, Machines, and Ideas that Revolutionized War, from Kitty Hawk to Gulf War II|location=London|publisher=[[Viking Press|Viking]]|isbn=978-0-670-03285-3|ref=none}}
:{{Cite book|last=Chaney|first=Otto Preston&lt;!--was small caps--&gt;|year=1996|title=Zhukov|edition=Revised|location=Norman,&amp;nbsp;OK|publisher=[[University of Oklahoma Press]]|isbn=978-0-8061-2807-8|ref=none}}
:{{Cite book|last=Coox|first=Alvin D.&lt;!--was small caps--&gt;|authorlink=Alvin Coox|year=1990|title=Nomonhan: Japan Against Russia, 1939|location=Palo Alto,&amp;nbsp;CA|publisher=[[Stanford University Press]]|isbn=978-0-8047-1160-9|ref=none}}
:{{Cite book|last=Douglas|first=R. M.&lt;!--was small caps--&gt;|year=2012|title=Orderly and Humane: The Expulsion of the Germans After the Second World War|location=New Haven,&amp;nbsp;CT|publisher=[[Yale University Press]]|isbn=978-0-300-16660-6|ref=none}}
:{{Cite journal|last=Ferraro|first=Kathleen J.&lt;!--was small caps--&gt;|year=2008|title=Reviews: ''Taken by Force: Rape and American GIs in Europe during WWII'' by J.&amp;nbsp;Robert Lilly|journal=[[Contemporary Sociology]]|volume=37|issue=6|pages=585586|jstor=20444365|doi=10.1177/009430610803700640|ref=none}}
:{{Cite book|last=Graham|first=Helen&lt;!--was small caps--&gt;|authorlink=Helen Graham (historian)|year=2005|title=The Spanish Civil War: A Very Short Introduction|location=Oxford &amp; New York, New York|publisher=[[Oxford University Press]]|isbn=0-19-280377-8|ref=none}}
:{{Cite book|last=Hatfield|first=Kenneth K.&lt;!--was small caps--&gt;|year=2003|title=Heartland Heroes: Remembering World War II|location=Columbia, MO|publisher=[[University of Missouri Press]]|isbn=978-0-8262-1460-7|ref=none}}
:{{Cite book|last1=Judt|first1=Tony&lt;!--was small caps--&gt;|author1-link=Tony Judt|last2=Snyder|first2=Timothy|author2-link=Timothy D. Snyder|year=2012|title=Thinking the Twentieth Century: Intellectuals and Politics in the Twentieth Century|location=London|publisher=[[William Heinemann]]|isbn=978-0-434-01742-3|ref=none}}
:{{Cite book|last1=Kelly|first1=Nigel&lt;!--was small caps--&gt;|last2=Rees|first2=Rosemary|last3=Shuter|first3=Jane|year=1998|title=Twentieth Century World|location=London|publisher=[[Heinemann (publisher)|Heinemann]]|isbn=978-0-435-30983-1|ref=none}}
:{{Cite book|last=Lilly|first=J. Robert&lt;!--was small caps--&gt;|year=2007|title=Taken by Force: Rape and American GIs in Europe during World War II|location=New York,&amp;nbsp;NY|publisher=[[Palgrave Macmillan]]|isbn=978-0-230-50647-3|ref=none}}
:{{Cite book|last=O'Hara|first=Vincent&lt;!--was small caps--&gt;|title=The German Fleet at War, 19391945|publisher=Naval Institute Press|year=2004|isbn=9781591146513|ref=none}}
:{{Cite journal|last=Parker|first=R.A.C.|title=The First Capitulation: France and the Rhineland Crisis of 1936|pp=355373|journal=World Politics|volume= 8|issue=3|date=April 1956|ref=none|doi=10.2307/2008855|jstor=2008855}}
{{Refend}}

==External links==
* [http://www.westpoint.edu/history/SitePages/WWII%20European%20Theater.aspx West Point Maps of the European War]
* [http://www.westpoint.edu/history/SitePages/WWII%20Asian%20Pacific%20Theater.aspx West Point Maps of the Asian-Pacific War]
* [[s:Atlas of the World Battle Fronts in Semimonthly Phases to August 15, 1945|Atlas of the World Battle Fronts (July 1943 to August 1945)]]
*[http://atom.archives.sfu.ca/index.php/world-war-ii-propaganda-posters-collection Records of World War II propaganda posters are held by Simon Fraser University's Special Collections and Rare Books]

{{Subject bar |book=World War II |portal1=World War II |portal2=War |portal3=History |portal4=1940s | commons= y |n= y |wikt= y |b= y |q= y |s=Category:World War II |v= y |d=Q362}}

{{World War II}}
{{WWII history by nation}}

{{Good article}}

{{Authority control}}

{{DEFAULTSORT:World War Ii}}
[[Category:World Wars]]
[[Category:World War II| ]]
[[Category:Conflicts in 1939]]
[[Category:Conflicts in 1940]]
[[Category:Conflicts in 1941]]
[[Category:Conflicts in 1942]]
[[Category:Conflicts in 1943]]
[[Category:Conflicts in 1944]]
[[Category:Conflicts in 1945]]
[[Category:Global conflicts]]
[[Category:Modern Europe]]
[[Category:Modern history]]
[[Category:Nuclear warfare]]
[[Category:War]]
[[Category:Wars involving Albania]]
[[Category:Wars involving Australia]]
[[Category:Wars involving Austria]]
[[Category:Wars involving Belgium]]
[[Category:Wars involving Bolivia]]
[[Category:Wars involving Brazil]]
[[Category:Wars involving British India]]
[[Category:Wars involving Bulgaria]]
[[Category:Wars involving Myanmar]]
[[Category:Wars involving Cambodia]]
[[Category:Wars involving Canada]]
[[Category:Wars involving Chile]]
[[Category:Wars involving Colombia]]
[[Category:Wars involving Costa Rica]]
[[Category:Wars involving Croatia]]
[[Category:Wars involving Cuba]]
[[Category:Wars involving Czechoslovakia]]
[[Category:Wars involving Denmark]]
[[Category:Wars involving Ecuador]]
[[Category:Wars involving Egypt]]
[[Category:Wars involving El Salvador]]
[[Category:Wars involving Estonia]]
[[Category:Wars involving Ethiopia]]
[[Category:Wars involving Finland]]
[[Category:Wars involving France]]
[[Category:Wars involving Germany]]
[[Category:Wars involving Greece]]
[[Category:Wars involving Guatemala]]
[[Category:Wars involving Haiti]]
[[Category:Wars involving Honduras]]
[[Category:Wars involving Hungary]]
[[Category:Wars involving Iceland]]
[[Category:Wars involving Indonesia]]
[[Category:Wars involving Italy]]
[[Category:Wars involving Iran]]
[[Category:Wars involving Iraq]]
[[Category:Wars involving Japan]]
[[Category:Wars involving Laos]]
[[Category:Wars involving Latvia]]
[[Category:Wars involving Lebanon]]
[[Category:Wars involving Liberia]]
[[Category:Wars involving Lithuania]]
[[Category:Wars involving Luxembourg]]
[[Category:Wars involving Mexico]]
[[Category:Wars involving Mongolia]]
[[Category:Wars involving Montenegro]]
[[Category:Wars involving Nepal]]
[[Category:Wars involving Norway]]
[[Category:Wars involving Nicaragua]]
[[Category:Wars involving Panama]]
[[Category:Wars involving Paraguay]]
[[Category:Wars involving Peru]]
[[Category:Wars involving Poland]]
[[Category:Wars involving Rhodesia]]
[[Category:Wars involving Romania]]
[[Category:Wars involving Saudi Arabia]]
[[Category:Wars involving Serbia]]
[[Category:Wars involving Slovakia]]
[[Category:Wars involving Slovenia]]
[[Category:Wars involving South Africa]]
[[Category:Wars involving Sri Lanka]]
[[Category:Wars involving Syria]]
[[Category:Wars involving Thailand]]
[[Category:Wars involving the Dominican Republic]]
[[Category:Wars involving the Netherlands]]
[[Category:Wars involving the Philippines]]
[[Category:Wars involving the Republic of China]]
[[Category:Wars involving the Soviet Union]]
[[Category:Wars involving the United Kingdom]]
[[Category:Wars involving the United States]]
[[Category:Wars involving Uruguay]]
[[Category:Wars involving Venezuela]]
[[Category:Wars involving Vietnam]]
[[Category:Wars involving Yugoslavia]]</text>
      <sha1>s7mipfymdr3zk6wmdxvxkdnzd430cyi</sha1>
    </revision>
  </page>
  <page>
    <title>The Second World War</title>
    <ns>0</ns>
    <id>716957</id>
    <redirect title="World War II" />
    <revision>
      <id>791000089</id>
      <parentid>790999511</parentid>
      <timestamp>2017-07-17T13:38:42Z</timestamp>
      <contributor>
        <username>Oshwah</username>
        <id>3174456</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contribs/MiravsMum|MiravsMum]] ([[User talk:MiravsMum|talk]]) to last version by Neve-selbert</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="194">#redirect [[World War II]]

{{Redirect category shell|h=See '''{{-r|Second World War}}''' for printworthy redirect.|
{{R from alternative name}}
{{R mentioned in hatnote}}
{{R unprintworthy}}
}}</text>
      <sha1>70c3cjdb5k5mp1h7e3b6uc52diyh1mq</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Age in years and days</title>
    <ns>10</ns>
    <id>46351072</id>
    <revision>
      <id>778640683</id>
      <parentid>753463613</parentid>
      <timestamp>2017-05-04T11:10:58Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>use [[Module:Age]] per [[Template talk:Age in years and days#Propose using Module:Age]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="132">&lt;includeonly&gt;{{{{{|safesubst:}}}#invoke:age|age_generic|template=age_yd}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>inb4m3zvs7rjwrv176tzpuy8mueoimh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Aligned table</title>
    <ns>10</ns>
    <id>41873333</id>
    <revision>
      <id>745333196</id>
      <parentid>659217541</parentid>
      <timestamp>2016-10-20T14:49:42Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="110">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:aligned table|table}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2blrypc09jwqw1omu8ienw215a7iiri</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Authority control</title>
    <ns>10</ns>
    <id>23327809</id>
    <revision>
      <id>698202675</id>
      <parentid>698202329</parentid>
      <timestamp>2016-01-04T17:05:10Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>rm spurious period (added by module)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="998">{{#invoke:Authority control|authorityControl}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;&lt;includeonly&gt;&lt;!-- tracking categories to compare with Wikidata 
--&gt;{{#switch:{{NAMESPACE}}||{{ns:14}}=&lt;!-- Only articles and categories. 
--&gt;{{#invoke:Check for unknown parameters|check|unknown=[[Category:Pages using authority control with parameters]]|preview=Page using [[Template:Authority control]] with &quot;_VALUE_&quot;, please move this to Wikidata if possible}}&lt;!--
--&gt;{{#ifeq:{{{VIAF|}}}|
    |&lt;!-- empty or no VIAF in template --&gt;
    |&lt;!-- VIAF in template 
  --&gt;{{#ifeq:{{#property:P214}}|
      |&lt;!-- no property P214 at Wikidata --&gt; [[Category:VIAF not on Wikidata]] &lt;!-- These we still need to import --&gt;
      |&lt;!-- property P214 at Wikidata    --&gt; 
       {{#ifeq:{{{VIAF|}}}|{{#property:P214}}
        |&lt;!-- same ID: We want to end up here --&gt;
        |[[Category:VIAF different on Wikidata]] &lt;!-- Figure out the best link, FIXME: multiple values on Wikidata --&gt;
       }}
     }}
  }}
}}&lt;/includeonly&gt;</text>
      <sha1>hpf5q0aod8ov7l14auaw059lm34vl92</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Bbl to t</title>
    <ns>10</ns>
    <id>13128611</id>
    <revision>
      <id>642015085</id>
      <parentid>515067643</parentid>
      <timestamp>2015-01-11T14:32:34Z</timestamp>
      <contributor>
        <username>Jimp</username>
        <id>275655</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="348">&lt;includeonly&gt;{{formatnum:{{bbl to t/L{{{lk|off}}}A{{{abbr|off}}}S{{{adj|off}}}{{#ifeq:{{#expr:{{{2|0}}}*0}}|0||R}}{{#if:{{{per|}}}|P}}|{{{1}}}|{{{2|}}}|{{{3}}}|{{{4|}}}|m={{{mlt|}}}|n={{bbl to t/prenum|{{{mlt|1}}}}}|a={{#expr:({{{API|33.4}}}+131.5)}}|p={{{per|}}}|q={{{t_per|{{{per|}}}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>9gho681ohn41ezgzhizephv6jeaxk1z</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Bbl to t/LoffAoffSoff</title>
    <ns>10</ns>
    <id>16138207</id>
    <revision>
      <id>567179368</id>
      <parentid>511341997</parentid>
      <timestamp>2013-08-04T23:55:04Z</timestamp>
      <contributor>
        <username>Addbot</username>
        <id>6569922</id>
      </contributor>
      <minor/>
      <comment>[[User:addbot|Bot]]: Migrating interwiki links, now provided by [[Wikipedia:Wikidata|Wikidata]] on [[d:q14396287]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="266">&lt;includeonly&gt;{{{1}}} {{Bbl to t/prenom|{{{m}}}}} barrel{{#ifeq:{{{1}}}{{{m|}}}|1||s}} (~{{bbl to t/{{#if:{{{2|}}}|p}}calc|{{{a}}}|{{{2}}}|{{{1}}}|({{{1}}}*{{{n}}}/{{{a}}})}}&amp;nbsp;t)&lt;/includeonly&gt;&lt;noinclude&gt;
[[Category:Subtemplates of Template Bbl to t]]
&lt;/noinclude&gt;</text>
      <sha1>t4rcqnr7xelvw20ac0ip821i7pipobd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Bbl to t/calc</title>
    <ns>10</ns>
    <id>16138679</id>
    <revision>
      <id>585799888</id>
      <parentid>545176638</parentid>
      <timestamp>2013-12-12T20:47:52Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>max/min</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="217">&lt;includeonly&gt;{{{{#ifexpr:{{{4}}}&lt;100000|sigfig|scinote}}|{{#expr:{{{4}}}}}|{{max|{{min|{{sigfig|{{{1}}}}}|{{sigfig|{{{3}}}}}}}|2}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
[[Category:Subtemplates of Template Bbl to t]]
&lt;/noinclude&gt;</text>
      <sha1>f9byvqaavmd67zql7iynk1qky6e7t93</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Bbl to t/prenom</title>
    <ns>10</ns>
    <id>16796900</id>
    <revision>
      <id>545298765</id>
      <parentid>519786646</parentid>
      <timestamp>2013-03-18T23:19:16Z</timestamp>
      <contributor>
        <username>Addbot</username>
        <id>6569922</id>
      </contributor>
      <minor/>
      <comment>[[User:Addbot|Bot:]] Migrating 3 interwiki links, now provided by [[Wikipedia:Wikidata|Wikidata]] on [[d:q6713478]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="132">{{#switch:{{{1}}}|k=thousand|M=million|G=billion|T=trillion}}&lt;noinclude&gt;
[[Category:Subtemplates of Template Bbl to t]]
&lt;/noinclude&gt;</text>
      <sha1>ccg0z6u52b0lrzaxcj7agceomu2p4ba</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Bbl to t/prenum</title>
    <ns>10</ns>
    <id>16796891</id>
    <revision>
      <id>555782132</id>
      <parentid>519786427</parentid>
      <timestamp>2013-05-19T12:53:52Z</timestamp>
      <contributor>
        <username>EmausBot</username>
        <id>11292982</id>
      </contributor>
      <minor/>
      <comment>Bot: Migrating 3 interwiki links, now provided by [[Wikipedia:Wikidata|Wikidata]] on [[d:Q13357754]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="160">{{#switch:{{{1}}}|1=22.4966605|k=22496.6605|M=22496660.5|G=22496660500|T=22496660500000}}&lt;noinclude&gt;
[[Category:Subtemplates of Template Bbl to t]]
&lt;/noinclude&gt;</text>
      <sha1>iywuu25wb4r3hgymltdjt6rbc5swgnh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Campaignbox</title>
    <ns>10</ns>
    <id>1138310</id>
    <revision>
      <id>649303418</id>
      <parentid>608066591</parentid>
      <timestamp>2015-03-01T00:17:44Z</timestamp>
      <contributor>
        <username>Technical 13</username>
        <id>14450599</id>
      </contributor>
      <comment>Undid revision 608066591 by [[Special:Contributions/Frietjes|Frietjes]] ([[User talk:Frietjes|talk]]) per edit request.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="491">&lt;includeonly&gt;{{Military navigation
|name = {{#if:{{{raw_name|}}} |{{{raw_name|}}} |{{#if:{{{title|}}} |{{{name|}}} |}} }}
|state = {{{state|}}}
|border = {{{border|}}}
|title = &lt;span style=&quot;line-height:1.6em&quot;&gt;{{#if:{{{title|}}}|{{{title}}}|{{{name}}}}}&lt;/span&gt;
|bodyclass = {{{bodyclass|}}}
|listclass = {{{listclass|}}}
|list1 = {{{battles|}}}
|below = {{{notes|}}}
}}{{#ifeq:{{NAMESPACE}}|Template|[[Category:Campaignbox templates]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>m49w3uao8u826onh0uudufowzrdfvw8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Campaignbox World War II</title>
    <ns>10</ns>
    <id>627233</id>
    <revision>
      <id>799093915</id>
      <parentid>799093877</parentid>
      <timestamp>2017-09-05T16:13:09Z</timestamp>
      <contributor>
        <username>Shellwood</username>
        <id>2366721</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/67.1.146.142|67.1.146.142]] ([[User talk:67.1.146.142|talk]]) ([[WP:HG|HG]]) (3.1.22)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2124">{{campaignbox
| name = Campaignbox World War II
| title = Campaigns of [[World&amp;nbsp;War&amp;nbsp;II]]
| listclass = hlist
| battles =
'''[[European theatre of World War II|Europe]]'''

: [[Invasion of Poland|Poland]]
: [[Phoney War]]
: [[Winter War]]
: [[Norwegian Campaign|Denmark &amp; Norway]]
: [[Battle of France|France &amp; Benelux]]
: [[Battle of Britain|Britain]]
: [[Balkan Campaign (World War II)|Balkans]]
: [[Eastern Front (World War II)|Eastern Front]]
: [[Continuation War|Finland]]
: [[Western Front (World War II)|Western Front (194445)]]

'''[[Pacific War]]'''

: [[Second Sino-Japanese War|China]]
: [[Pacific Ocean theater of World War II|Pacific Ocean]]
: [[South-East Asian theatre of World War II|South-East Asia]]
: [[South West Pacific theatre of World War II|South West Pacific]]
: [[Japan campaign|Japan]]
: [[SovietJapanese War (1945)|Manchuria (1945)]]

'''[[Mediterranean and Middle East theatre of World War II|Mediterranean and Middle East]]'''
                     
: [[North African Campaign|North Africa]]
: [[East African Campaign (World War II)|Horn of Africa]]
: [[Battle of the Mediterranean|Mediterranean Sea]]
: [[Adriatic Campaign of World War II|Adriatic]]
: [[Siege of Malta (World War II)|Malta]]
: [[World War II in Yugoslavia|Yugoslavia]]
: [[Anglo-Iraqi War|Iraq]]
: [[SyriaLebanon Campaign|SyriaLebanon]]
: [[Anglo-Soviet invasion of Iran|Iran]]
: [[Italian Campaign (World War II)|Italy]]
: [[Dodecanese Campaign|Dodecanese]]
: [[Operation Dragoon|Southern France]]

'''Other campaigns'''

: [[Battle of the Atlantic|Atlantic]]
: [[Arctic naval operations of World War II|Arctic]]
: [[Strategic bombing during World War II|Strategic bombing]]
: [[American Theater (World War II)|America]]
: [[French West Africa in World War II|French West Africa]]
: [[Battle of Madagascar|Madagascar]]

'''Contemporaneous wars'''

: [[Chinese Civil War]]
: [[SovietJapanese border conflicts|USSRJapan Border Wars]]
: [[Franco-Thai War|FrenchThai]]
: [[EcuadorianPeruvian War]]
: [[Ili Rebellion]]

}}&lt;noinclude&gt;
[[Category:World War II campaignboxes|World War II]]
&lt;/noinclude&gt;</text>
      <sha1>gb2n8jd3ma1an49s296173pmi1q9jb2</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Catalog lookup link</title>
    <ns>10</ns>
    <id>50392128</id>
    <revision>
      <id>796840033</id>
      <parentid>718903401</parentid>
      <timestamp>2017-08-23T10:36:34Z</timestamp>
      <contributor>
        <username>Matthiaspaul</username>
        <id>13467261</id>
      </contributor>
      <comment>added leadout-postfix parameter (to specialcase MR template oddities)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3580">{{#if:{{trim|{{{1|}}}}}|{{#if:{{{article-link|}}}|[[{{{article-link|}}}{{#if:{{{article-name|}}}|{{!}}{{{article-name|}}}}}]]{{{article-postfix|}}}&amp;nbsp;|{{{article-name|}}}{{{article-postfix|}}}{{#if:{{{article-name|}}}|&amp;nbsp;}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{1|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{1|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{1|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{2|}}}}}|{{#if:{{trim|{{{3|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{2|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{2|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{2|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{3|}}}}}|{{#if:{{trim|{{{4|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{3|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{3|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{3|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{4|}}}}}|{{#if:{{trim|{{{5|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{4|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{4|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{4|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{5|}}}}}|{{#if:{{trim|{{{6|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{5|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{5|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{5|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{6|}}}}}|{{#if:{{trim|{{{7|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{6|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{6|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{6|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{7|}}}}}|{{#if:{{trim|{{{8|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{7|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{7|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{7|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{8|}}}}}|{{#if:{{trim|{{{9|}}}}}|{{{list-separator|,&amp;#32;}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{8|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{8|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{8|}}}}}{{{item-postfix|}}}}}{{#if:{{trim|{{{9|}}}}}|{{#if:{{{list-leadout|}}}|&amp;#32;{{{list-leadout|}}}{{{leadout-postfix|&amp;#32;}}}|{{{list-separator|,&amp;#32;}}}}}{{#if:{{{link-prefix|}}}|[{{{link-prefix|}}}{{urlencode:{{trim|{{{9|}}}}}}}{{{link-postfix|}}} {{{item-prefix|}}}{{trim|{{{9|}}}}}{{{item-postfix|}}}]|{{{item-prefix|}}}{{trim|{{{9|}}}}}{{{item-postfix|}}}}}}}}}}}}}}}}}}}}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>pjazjidcsvxcmpqqpfzz5kqeowvyug7</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Category handler</title>
    <ns>10</ns>
    <id>25084818</id>
    <revision>
      <id>577959188</id>
      <parentid>577959113</parentid>
      <timestamp>2013-10-20T10:48:53Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Category handler: [[WP:High-risk templates|Highly visible template]]: allow template editors to edit ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="148">{{#invoke:Category handler|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Add categories to the /doc subpage, and interwikis to Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>og6fhyj2ssd4fmzpqzuodk12q3cms0z</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Citation</title>
    <ns>10</ns>
    <id>3164016</id>
    <revision>
      <id>690395467</id>
      <parentid>638912098</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Citation: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (indefi...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1955">&lt;includeonly&gt;{{
  #if: {{{inventor-surname|{{{inventor1-surname|{{{inventor-last|{{{inventor1-last|{{{inventor|{{{invent1|{{{invent-1|{{{country-code|{{{3|}}}}}}}}}}}}}}}}}}}}}}}}}}}
&lt;!--
    CITATIONS FOR PATENTS
--&gt;
|{{Citation/patent
 |Surname1 = {{{inventor-surname|{{{inventor1-surname|{{{inventor-last|{{{inventor1-last|{{{inventor|{{{invent-1|{{{invent1|}}}}}}}}}}}}}}}}}}}}}
 |Surname2={{{inventor2-surname|{{{inventor2-last|{{{inventor2|{{{invent2|}}}}}}}}}}}}
 |Surname3={{{inventor3-surname|{{{inventor3-last|{{{inventor3|{{{invent3|}}}}}}}}}}}}
 |Surname4={{{inventor4-surname|{{{inventor4-last|{{{inventor4|{{{invent4|}}}}}}}}}}}}
 |Given1 = {{{inventor-given|{{{inventor1-given|{{{inventor-first|{{{inventor1-first|}}}}}}}}}}}}
 |Given2={{{inventor2-given|{{{inventor2-first|}}}}}}
 |Given3={{{inventor3-given|{{{inventor3-first|}}}}}}
 |Given4={{{inventor4-given|{{{inventor4-first|}}}}}}
 |Inventorlink1={{{inventorlink1|{{{inventorlink|}}}}}}
 |Inventorlink2={{{inventorlink2|}}}
 |Inventorlink3={{{inventorlink3|}}}
 |Inventorlink4={{{inventorlink4|}}}
 |Title={{{title|}}}
 |CountryCode={{{country-code|{{{country|{{{1|}}}}}}}}}
 |PublicationNumber={{{publication-number|{{{patent-number|{{{number|{{{2|}}}}}}}}}}}}
 |Description={{{description|{{{status|{{{3|}}}}}}}}}
 |PublicationDate={{{publication-date|{{{pubdate|}}}}}}
 |IssueDate={{{issue-date|{{{gdate|}}}}}}
 |Year={{{year}}}
 |FilingDate={{{fdate|}}}
 |PriorityDate={{{pridate|}}}
 |Assignee1={{{assign1|}}}
 |Assignee2={{{assign2|}}}
  |Ref={{{ref|harv}}}
  |Sep = {{#ifeq:{{{separator|{{{seperator}}}}}}|;|&amp;#059;|{{{separator|{{{seperator|,}}}}}}}}
  |PS = {{#if:{{{quote|}}}||{{{postscript|}}}|.}}
  |AuthorSep = {{#ifeq:{{{author-separator|}}}|;|&amp;#059;|{{{author-separator|&amp;#059;}}}}}&amp;#32;
}}&lt;!--
    CITATIONS FOR THINGS LIKE BOOKS AND PERIODICALS
--&gt;
|{{#invoke:citation/CS1|citation
|CitationClass=citation
}}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>6dqb1lfxpl27zbelqfuxa721pjppb48</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite book</title>
    <ns>10</ns>
    <id>4086375</id>
    <revision>
      <id>690395469</id>
      <parentid>579832408</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite book: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (indef...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="123">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=book
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>hq4yscm08hccl43rjw83qi7egacgxec</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite encyclopedia</title>
    <ns>10</ns>
    <id>1664277</id>
    <revision>
      <id>690395481</id>
      <parentid>579832446</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite encyclopedia: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="166">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=encyclopaedia
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}

[[Category:Lua-based templates]]
&lt;/noinclude&gt;</text>
      <sha1>jdzpxvlfcwjuua45ovk7i5lcp6qre48</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite journal</title>
    <ns>10</ns>
    <id>4740319</id>
    <revision>
      <id>690395473</id>
      <parentid>579832342</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite journal: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (in...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="126">&lt;includeonly&gt;{{#invoke:Citation/CS1|citation
|CitationClass=journal
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>9fcytsszanq7xbwi3p28zsneear9938</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite news</title>
    <ns>10</ns>
    <id>4321630</id>
    <revision>
      <id>690395488</id>
      <parentid>579832384</parentid>
      <timestamp>2015-11-13T02:17:24Z</timestamp>
      <contributor>
        <username>Fuhghettaboutit</username>
        <id>665998</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Cite news: when I changed this to add template editors, I didn't realize it had cascding protectionso all my change did was make it appear as if it could be edited by them ([Edit=Allow only administrators] (indef...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="123">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=news
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>pbjnspfej5gxihr9izxrzkow3f1uf3i</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Cite web</title>
    <ns>10</ns>
    <id>1252907</id>
    <revision>
      <id>753103437</id>
      <parentid>753063659</parentid>
      <timestamp>2016-12-05T05:36:52Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Cite web]]&quot;: restore old protection ([Edit=Require administrator access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="122">&lt;includeonly&gt;{{#invoke:citation/CS1|citation
|CitationClass=web
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>rcgmbcxu7hvs583g1f3rzz4c4dkizda</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Column-width</title>
    <ns>10</ns>
    <id>29216399</id>
    <revision>
      <id>638540885</id>
      <parentid>579832996</parentid>
      <timestamp>2014-12-17T20:09:33Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>redundant</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="165">&lt;includeonly&gt;-moz-column-width: {{{1|30em}}}; -webkit-column-width: {{{1|30em}}}; column-width: {{{1|30em}}};&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>sum88q311kc02222mb4cgzbikcx7fqy</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Convert</title>
    <ns>10</ns>
    <id>8387047</id>
    <revision>
      <id>585529792</id>
      <parentid>577834328</parentid>
      <timestamp>2013-12-11T02:15:54Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Upgrade to Lua module;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="116">&lt;includeonly&gt;{{{{{|safesubst:}}}#invoke:convert|convert}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>81befqhh89lu562bonqr8252bepuvfp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Empire of Japan</title>
    <ns>10</ns>
    <id>12383730</id>
    <revision>
      <id>721957463</id>
      <parentid>651344698</parentid>
      <timestamp>2016-05-25T02:42:57Z</timestamp>
      <contributor>
        <username>Illegitimate Barrister</username>
        <id>12006778</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="627">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Empire of Japan
| shortname alias = Japan
| flag alias = Merchant flag of Japan (1870).svg
| flag alias-naval = Naval ensign of the Empire of Japan.svg
| link alias-naval = Imperial Japanese Navy
| flag alias-army = War flag of the Imperial Japanese Army.svg
| link alias-army = Imperial Japanese Army
| flag alias-air force = War flag of the Imperial Japanese Army.svg
| link alias-air force = Imperial Japanese Army Air Service
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| related1 = Japan
| cat = Japan empire
&lt;/noinclude&gt;
}}</text>
      <sha1>hymik3s4pl8l7gcwuc7ol3ysummr8ey</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Kingdom of Italy</title>
    <ns>10</ns>
    <id>22423652</id>
    <revision>
      <id>795312040</id>
      <parentid>782393604</parentid>
      <timestamp>2017-08-13T12:20:54Z</timestamp>
      <contributor>
        <username>Olonia</username>
        <id>15217905</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="674">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Kingdom of Italy
| shortname alias = Italy
| flag alias = Flag of Italy (1861-1946) crowned.svg
| flag alias-civil = Flag of Italy (1861-1946).svg
| flag alias-naval= Flag of Italy (1861-1946) crowned.svg
| link alias-naval = Regia Marina
| link alias-air force = Regia Aeronautica
| flag alias-army = Flag of Italy (1860).svg
| link alias-army = Royal Italian Army
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = civil
| related1 = Italy
| related2 = Napoleonic Italy
| related3 = Italian Social Republic
| related4 = House of Savoy
| cat = Italy kingdom
&lt;/noinclude&gt;
}}</text>
      <sha1>4pp8lrxq090gza96296n75hvre8m4s1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Nazi Germany</title>
    <ns>10</ns>
    <id>9089679</id>
    <revision>
      <id>793214050</id>
      <parentid>737739336</parentid>
      <timestamp>2017-07-31T10:33:05Z</timestamp>
      <contributor>
        <username>Sodacan</username>
        <id>8272776</id>
      </contributor>
      <comment>The War ensign was used for all three branches of the Nazi armed forces</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="777">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Nazi Germany
| shortname alias = Germany
| flag alias = Flag of German Reich (19351945).svg
| flag alias-1933 = Flag of the German Reich (19331935).svg
| flag alias-1933n = Flag of the NSDAP (19201945).svg
| flag alias-naval = War Ensign of Germany 1938-1945.svg
| link alias-naval = Kriegsmarine
| flag alias-army = War Ensign of Germany 1938-1945.svg
| link alias-army = Wehrmacht Heer
| flag alias-air force = War Ensign of Germany 1938-1945.svg
| link alias-air force = Luftwaffe
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = 1933
| var2 = 1933n
| related1 = Germany
| related2 = German Empire
| related3 = Weimar Republic
| cat = Germany nazi
&lt;/noinclude&gt;
}}</text>
      <sha1>fqo4nu00i4fk0ckg46b3eqd26b49ly9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Republic of China (19121949)</title>
    <ns>10</ns>
    <id>33167794</id>
    <revision>
      <id>804130247</id>
      <parentid>799709630</parentid>
      <timestamp>2017-10-06T23:21:07Z</timestamp>
      <contributor>
        <username>Wrestlingring</username>
        <id>21938861</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="970">{{ {{{1&lt;noinclude&gt;
|country showdata
&lt;/noinclude&gt;}}}
| alias = Republic of China (191249)
| shortname alias = China
| flag alias = Flag of the Republic of China (2).svg
| flag alias-1912 = Flag of the Republic of China 1912-1928.svg
| flag alias-army = Flag of the Republic of China Army.svg
| flag alias-civil = Civil Ensign of the Republic of China.svg
| link alias-army = National Revolutionary Army
| link alias-naval = Republic of China Navy
| link alias-air force = Republic of China Air Force
| link alias-football = China {{{mw|}}} national football team
| name alias-football = China
| link alias-tennis = China {{{mw}}} Cup team
| name alias-tennis = China
| size = {{{size|}}}
| name = {{{name|}}}
| variant = {{{variant|}}}
| altlink = {{{altlink|}}}
| altvar = {{{altvar|}}}
&lt;noinclude&gt;
| var1 = 1912
| var2 = civil
| related1 = Republic of China
| related2 = China
| related3 = Taiwan
| cat = China republic 1912
&lt;/noinclude&gt;
}}&lt;noinclude&gt;

&lt;/noinclude&gt;</text>
      <sha1>q8ladz54lwmcl7gn1fcbr1medlzkw1y</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data Soviet Union</title>
    <ns>10</ns>
    <id>9018516</id>
    <revision>
      <id>799578338</id>
      <parentid>793489520</parentid>
      <timestamp>2017-09-08T15:38:25Z</timestamp>
      <contributor>
        <username>JJMC89</username>
        <id>24812038</id>
      </contributor>
      <comment>remove link alias-tennis per request</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1201">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = Soviet Union
| flag alias = Flag of the Soviet Union.svg
| flag alias-1922 = Flag of the Soviet Union (1923).svg
| flag alias-1923 = Flag of the Soviet Union (1923-1955).svg
| flag alias-1936 = Flag of the Soviet Union (1936-1955).svg
| flag alias-1955 = Flag of the Soviet Union (1955-1980).svg
| flag alias-air force=Flag of the Soviet Air Force.svg
| link alias-air force=Soviet Air Force
| flag alias-army = Red Army flag (reverse).svg
| link alias-army = Soviet Army
| flag alias-naval = Naval Ensign of the Soviet Union.svg
| flag alias-naval-1924 = Naval Ensign of the Soviet Union 1923.svg
| flag alias-naval-1935 = Naval Ensign of the Soviet Union 1935.svg
| link alias-naval = Soviet Navy
| link alias-ice hockey = Soviet Union national {{{age|}}} ice hockey team
| size = {{{size|}}}
| name = {{{name|}}}
| altlink = {{{altlink|}}}
| altvar = {{{altvar|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = 1922
| var2 = 1923
| var3 = 1936
| var4 = 1955
| var5 = naval-1924
| var6 = naval-1935
| redir1 = URS
| redir2 = USSR
| redir3 = SUN
| redir4 = the Soviet Union
| related1 = Commonwealth of Independent States
&lt;/noinclude&gt;
}}</text>
      <sha1>4vnmbdlc4ynah8sij3o9ulnkvzn2z0c</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data United Kingdom</title>
    <ns>10</ns>
    <id>8889816</id>
    <revision>
      <id>806812263</id>
      <parentid>795882039</parentid>
      <timestamp>2017-10-24T09:02:40Z</timestamp>
      <contributor>
        <username>Sodacan</username>
        <id>8272776</id>
      </contributor>
      <comment>Add RNLI</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1617">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = United Kingdom
| flag alias = Flag of the United Kingdom.svg
| flag alias-civil = Civil Ensign of the United Kingdom.svg
| flag alias-government = Government Ensign of the United Kingdom.svg
| flag alias-naval = Naval Ensign of the United Kingdom.svg
| flag alias-naval-RFA = British-Royal-Fleet-Auxiliary-Ensign.svg
| flag alias-naval-RMAS = British Royal Maritime Auxiliary Ensign.svg
| flag alias-naval-GS = Government Service Ensign.svg
| flag alias-naval-RNLI = Flag of the Royal National Lifeboat Institution.svg
| link alias-naval-RNLI = Royal National Lifeboat Institution
| flag alias-1801 = Flag of the United Kingdom (WFB 2000).png
| flag alias-2004 = Flag of the United Kingdom (WFB 2004).gif
| flag alias-2009 = Flag of the United Kingdom (WFB 2009).gif
| link alias-naval = {{#switch:{{{variant|}}}|naval-RFA|RFA=Royal Fleet Auxiliary|naval-RMAS|RMAS=Royal Maritime Auxiliary Service|#default=Royal Navy}}
| flag alias-air force = Ensign of the Royal Air Force.svg
| link alias-air force = Royal Air Force
| flag alias-army = Flag of the British Army.svg
| link alias-army = British Army

| size = {{{size|}}}
| name = {{{name|}}}
| altlink = {{{altlink|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = civil
| var2 = government
| var3 = naval-RFA
| var4 = naval-RMAS
| var5 = naval-RNLI
| var6 = 1801
| var7 = 2004
| var8 = 2009
| redir1 = UK
| redir2 = the United Kingdom
| related1 = Great Britain
| related2 = Kingdom of Great Britain
| related3 = British Empire
| related4 = United Kingdom of Great Britain and Ireland
&lt;/noinclude&gt;
}}</text>
      <sha1>l9b6oy3r2nnl21z67bi6n7q6k3tarw3</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Country data United States</title>
    <ns>10</ns>
    <id>8953176</id>
    <revision>
      <id>770809010</id>
      <parentid>767123668</parentid>
      <timestamp>2017-03-17T18:31:50Z</timestamp>
      <contributor>
        <username>Illegitimate Barrister</username>
        <id>12006778</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2845">{{ {{{1&lt;noinclude&gt;|country showdata&lt;/noinclude&gt;}}}
| alias = United States
| flag alias = Flag of the United States.svg
| flag alias-1776 = Grand Union Flag.svg
| flag alias-1777 = US flag 13 stars  Betsy Ross.svg
| flag alias-1795 = Star-Spangled Banner flag.svg
| flag alias-1818 = US flag 20 stars.svg
| flag alias-1819 = US flag 21 stars.svg
| flag alias-1820 = US flag 23 stars.svg
| flag alias-1822 = US flag 24 stars.svg
| flag alias-1836 = US flag 25 stars.svg
| flag alias-1837 = US flag 26 stars.svg
| flag alias-1845 = US flag 27 stars.svg
| flag alias-1846 = US flag 28 stars.svg
| flag alias-1847 = US flag 29 stars.svg
| flag alias-1848 = US flag 30 stars.svg
| flag alias-1851 = U.S. flag, 31 stars.svg
| flag alias-1858 = US flag 32 stars.svg
| flag alias-1859 = US flag 33 stars.svg
| flag alias-1861 = US flag 34 stars.svg
| flag alias-1863 = US flag 35 stars.svg
| flag alias-1865 = US flag 36 stars.svg
| flag alias-1867 = US flag 37 stars.svg
| flag alias-1877 = US flag 38 stars.svg
| flag alias-1890 = US flag 43 stars.svg
| flag alias-1891 = US flag 44 stars.svg
| flag alias-1896 = US flag 45 stars.svg
| flag alias-1908 = US flag 46 stars.svg
| flag alias-1912 = U.S. flag, 48 stars.svg
| flag alias-1959 = US flag 49 stars.svg
| flag alias-1960 = Flag of the United States (Pantone).svg
| flag alias-air force = Flag of the United States Air Force.svg
| flag alias-coast guard = Ensign of the United States Coast Guard.svg
| flag alias-coast guard-1915 = Ensign of the United States Coast Guard (1915-1953).png
| link alias-naval = {{#switch:{{{variant|}}}|coast guard|coast guard-1915=United States Coast Guard|United States Navy}}
| flag alias-army = Flag of the United States Army.svg
| link alias-football = United States {{{mw|men's}}} national {{{age|}}} soccer team
| link alias-basketball = United States {{{mw|men's}}} national {{{age|}}} basketball team
| link alias-field hockey = United States {{{mw|men's}}} national field hockey team
| link alias-Australian rules football = United States {{{mw|men's}}} national Australian rules football team
| size = {{{size|}}}
| name = {{{name|}}}
| altlink = {{{altlink|}}}
| altvar = {{{altvar|}}}
| variant = {{{variant|}}}
&lt;noinclude&gt;
| var1 = 1776  
| var2 = 1777   
| var3 = 1795   
| var4 = 1818   
| var5 = 1819  
| var6 = 1820   
| var7 = 1822   
| var8 = 1836   
| var9 = 1837  
| var10 = 1845  
| var11 = 1846   
| var12 = 1847   
| var13 = 1848  
| var14 = 1851  
| var15 = 1858  
| var16 = 1859  
| var17 = 1861  
| var18 = 1863   
| var19 = 1865 
| var20 = 1867  
| var21 = 1877 
| var22 = 1890  
| var23 = 1891   
| var24 = 1896   
| var25 = 1908   
| var26 = 1912  
| var27 = 1959   
| var28 = 1960   
| var29 = coast guard
| var30 = coast guard-1915
| redir1 = USA
| redir2 = US
| redir3 = United States of America
| redir4 = U.S.
&lt;/noinclude&gt;
}}</text>
      <sha1>shk9thw9fohtxpq7xlnqwfn9269soup</sha1>
    </revision>
  </page>
  <page>
    <title>Template:DMCA</title>
    <ns>10</ns>
    <id>23226218</id>
    <revision>
      <id>774491639</id>
      <parentid>296800547</parentid>
      <timestamp>2017-04-08T20:40:50Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:DMCA]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="197">{{Dated maintenance category
 |onlyarticles=yes
 |1={{{1|}}}
 |2={{{2|}}}
 |3={{{3|}}}
 |4={{{4|}}}
 |5={{{5|}}}
}}&lt;noinclude&gt;
{{documentation|Template:Dated maintenance category/doc}}
&lt;/noinclude&gt;</text>
      <sha1>cl1tba6o83bu6hpmnvwvbcse6qwofoo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Dated maintenance category</title>
    <ns>10</ns>
    <id>22598546</id>
    <revision>
      <id>589732290</id>
      <parentid>584337311</parentid>
      <timestamp>2014-01-08T08:14:55Z</timestamp>
      <contributor>
        <username>John of Reading</username>
        <id>11308236</id>
      </contributor>
      <comment>Second attempt. Those spaces upset inline templates such as {{As of}}. Instead, try an unconditional &lt;nowiki/&gt;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="660">&lt;nowiki/&gt;&lt;!--This nowiki helps to prevent whitespace at the top of articles--&gt;{{#ifeq:{{FULLROOTPAGENAME}}|Wikipedia:Template messages|&lt;!--Do not categorize--&gt;|&lt;!--
--&gt;{{#ifexpr:{{#if:{{NAMESPACE}}|0|1}}+{{#ifeq:{{{onlyarticles|no}}}|yes|0|1}}
 |{{#if:{{{3|}}}
  |[[Category:{{{1}}} {{{2}}} {{{3}}}]]&lt;!--
--&gt;{{#ifexist:Category:{{{1}}} {{{2}}} {{{3}}}
    |&lt;!--
 --&gt;|[[Category:Articles with invalid date parameter in template]]&lt;!--
--&gt;}}
  |[[Category:{{#if:{{{5|}}}
               |{{{5}}}&lt;!--
            --&gt;|{{{1}}}&lt;!--
           --&gt;}}]]&lt;!--
--&gt;}}{{#if:{{{4|}}}
      |[[Category:{{{4}}}]]}}&lt;!--
  --&gt;}}&lt;!--
--&gt;}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>7p59j4cq4i8wg65odpv5287yu50sczo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Delink</title>
    <ns>10</ns>
    <id>28069338</id>
    <revision>
      <id>696877808</id>
      <parentid>695173639</parentid>
      <timestamp>2015-12-26T16:26:10Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>{{documentation}} does this</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="179">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:delink|delink}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>nxxwkb2lon9wgne4irg9ctbsle6zwiy</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Efn</title>
    <ns>10</ns>
    <id>34043836</id>
    <revision>
      <id>797740242</id>
      <parentid>744219331</parentid>
      <timestamp>2017-08-28T22:18:23Z</timestamp>
      <contributor>
        <username>SMcCandlish</username>
        <id>378390</id>
      </contributor>
      <comment>parameter aliases for cross-compatibility with other templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="602">&lt;includeonly&gt;{{#if:{{{name|}}}
 |{{#tag:ref|{{{1|{{{reference|{{{content|{{{text|}}}}}}}}}}}}|name={{{name|}}}|group={{#switch: {{{group|}}}
    | note
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group|}}}
    | #default = lower-alpha
   }}
 }}
 |{{#tag:ref|{{{1|{{{reference|{{{content|{{{text|}}}}}}}}}}}}|group={{#switch: {{{group|}}}
    | note
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group|}}}
    | #default = lower-alpha
   }}
 }}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>cy2hvj1zss95pdjzsgcbg4q4cq6tzl8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Endflatlist</title>
    <ns>10</ns>
    <id>10418232</id>
    <revision>
      <id>628944115</id>
      <parentid>468091134</parentid>
      <timestamp>2014-10-09T16:32:42Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Endflatlist: Change to template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="70">&lt;/div&gt;&lt;noinclude&gt;
{{documentation|Template:Flatlist/doc}}
&lt;/noinclude&gt;</text>
      <sha1>fp5m55s9u2sp077qx1wa6go6i2zyusa</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Endplainlist</title>
    <ns>10</ns>
    <id>33825314</id>
    <revision>
      <id>628944176</id>
      <parentid>468091190</parentid>
      <timestamp>2014-10-09T16:33:11Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Endplainlist: Change to template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="71">&lt;/div&gt;&lt;noinclude&gt;
{{documentation|Template:Plainlist/doc}}
&lt;/noinclude&gt;</text>
      <sha1>d3q5ji9gj1bbqhgk0bolhi57ue8x2bu</sha1>
    </revision>
  </page>
  <page>
    <title>Template:EngvarB</title>
    <ns>10</ns>
    <id>28512348</id>
    <revision>
      <id>784060621</id>
      <parentid>778227255</parentid>
      <timestamp>2017-06-06T07:34:18Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="339">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{DMCA|EngvarB|from|{{{date|}}}}}
}}&lt;noinclude&gt;
'''Please note that {{tl|EngvarB}} is now independent of any British English templating. It has its own categorisation, also independent of British (or indeed any other) English variant categorisation.'''
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>jp97d4mux3fqo5dtqk9yffdq9opij8o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Error-small</title>
    <ns>10</ns>
    <id>55072963</id>
    <revision>
      <id>799379119</id>
      <parentid>797851439</parentid>
      <timestamp>2017-09-07T10:40:18Z</timestamp>
      <contributor>
        <username>The Anome</username>
        <id>76</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:Error-small]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">{{#invoke:Error|error|{{{message|{{{1}}}}}}|tag=span}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>mmp4mio3xf3ajmqs6mv2pzi1u0i96x1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Events leading to World War II</title>
    <ns>10</ns>
    <id>44430347</id>
    <revision>
      <id>795219489</id>
      <parentid>795210540</parentid>
      <timestamp>2017-08-12T20:16:26Z</timestamp>
      <contributor>
        <username>Favonian</username>
        <id>7007500</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contribs/94.46.160.195|94.46.160.195]] ([[User talk:94.46.160.195|talk]]) to last version by 2601:40B:8502:A6F3:CD62:5EBC:7E93:FC67</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1057">{{sidebar
|name = Events leading to World War II
|title = Events leading to [[World War II]]
|titlestyle = background:lavender; font-size:110%;
|wraplinks=true
|content1 = 
{{aligned table|fullwidth=y|leftright=y|nowrap2=y
|[[Pacification of Libya]] | 1923&amp;ndash;1932
|[[Japanese invasion of Manchuria]] |1931
|[[Franco-Soviet Treaty of Mutual Assistance|Franco-Soviet-Czech Pact]] |1935
|[[Second Italo-Ethiopian War]] |1935&amp;ndash;36
|[[Remilitarization of the Rhineland]] |1936
|[[Spanish Civil War]] |1936&amp;ndash;39
|[[Anti-Comintern Pact]] |1936
|[[Second Sino-Japanese War]] |1937
|[[Anschluss]] |1938
|[[Munich Agreement|Munich crisis]] |1938
|[[German occupation of Czechoslovakia]] |Mar. 1939
|[[1939 German ultimatum to Lithuania|German ultimatum to Lithuania]] |Mar. 1939
|[[Anglo-Polish military alliance|British guarantee to Poland]] |Mar. 1939
|[[Italian invasion of Albania|Invasion of Albania]] |Apr. 1939
|[[Pact of Steel]] |May 1939
|[[MolotovRibbentrop Pact]] |Aug. 1939

}}
}}&lt;noinclude&gt;
[[Category:World War II templates]]
&lt;/noinclude&gt;</text>
      <sha1>nhn41f6scmbz1a21wl6jtl7ci0m3ofh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:FULLROOTPAGENAME</title>
    <ns>10</ns>
    <id>34701984</id>
    <revision>
      <id>774489771</id>
      <parentid>476439833</parentid>
      <timestamp>2017-04-08T20:24:42Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:FULLROOTPAGENAME]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="420">{{ {{{|safesubst:}}}#if: {{ {{{|safesubst:}}}Ns has subpages | {{ {{{|safesubst:}}}#if:{{{1|}}}|{{ {{{|safesubst:}}}NAMESPACE:{{{1}}}}}|{{ {{{|safesubst:}}}NAMESPACE}}}} }} 
  | {{ {{{|safesubst:}}}#titleparts:{{ {{{|safesubst:}}}#if:{{{1|}}}|{{{1}}}|{{ {{{|safesubst:}}}FULLPAGENAME}}}}|1}}
  | {{ {{{|safesubst:}}}#if:{{{1|}}}|{{{1}}}|{{ {{{|safesubst:}}}FULLPAGENAME}}}}
}}&lt;noinclude&gt;

{{documentation}}

&lt;/noinclude&gt;</text>
      <sha1>t4jn967jlk6ph7qu71w2b8f5083yjrl</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Fix</title>
    <ns>10</ns>
    <id>5632010</id>
    <revision>
      <id>713657347</id>
      <parentid>607989926</parentid>
      <timestamp>2016-04-05T08:42:07Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <minor/>
      <comment>delink tooltip to prevent rendering errors, suggested by [[User:SMcCandlish]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1119">{{#switch:{{{subst|}}}
 |={{category handler
  |template=[[Category:Templates needing substitution checking]]
  |nocat={{{nocat|&lt;noinclude&gt;true&lt;/noinclude&gt;}}}
 }}
 |SUBST=[[Category:Pages with incorrectly substituted templates]]
}}{{Category handler
 |main={{Fix/category
  |cat-date={{{cat-date|}}} 
  |cat={{{cat|}}} 
  |cat-date2={{{cat-date2|}}} 
  |cat2={{{cat2|}}} 
  |cat-date3={{{cat-date3|}}} 
  |cat3={{{cat3|}}} 
  |date={{{date|}}}
 }}
 |template={{#if:{{{name|}}}|{{#ifeq:{{{name}}}|{{ROOTPAGENAME}}||{{#if:{{{date|}}}||[[Category:Templates including undated clean-up tags]]}}}}}} 
 |subpage=no
}}{{#if:{{{text|}}}
 |&lt;sup class=&quot;noprint Inline-Template {{{class|}}}&quot; style=&quot;white-space:nowrap;&quot;&gt;&amp;#91;&lt;i&gt;{{#if:{{{pre-text|}}}
  |{{{pre-text}}}&amp;#32;
 }}[[{{{link|Wikipedia:Cleanup}}}|&lt;span title=&quot;{{delink|1={{{title|{{{link|Wikipedia:Cleanup}}}}}}{{#if:{{{date|}}}|&lt;nowiki /&gt; ({{{date}}})}}}}&quot;&gt;{{{text|}}}&lt;/span&gt;]]{{#if:{{{post-text|}}}
  |&amp;#32;{{{post-text}}}
 }}&lt;/i&gt;&amp;#93;&lt;/sup&gt;|{{{special|}}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Add cats and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>nhc50m229srb98o7kaym2eq6ywx211f</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Fix/category</title>
    <ns>10</ns>
    <id>34017846</id>
    <revision>
      <id>774489703</id>
      <parentid>471928517</parentid>
      <timestamp>2017-04-08T20:24:09Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Fix/category]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="858">&lt;noinclude&gt;{{pp-template|small=yes}}&lt;/noinclude&gt;{{{cat|[[Category:All pages needing cleanup]]}}}{{#if:{{{cat-date|}}}
  |[[{{{cat-date}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}{{#if:{{{cat2|}}}|{{{cat2}}}}}{{#if:{{{cat-date2|}}}
  |[[{{{cat-date2}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date2}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}{{#if:{{{cat3|}}}|{{{cat3}}}}}{{#if:{{{cat-date3|}}}
  |[[{{{cat-date3}}} {{#if:{{{date|}}}
   |from {{{date}}}
  }}]]{{#if:{{{date|}}}
   |{{#ifexist:{{{cat-date3}}} from {{{date}}}|
    |[[Category:Articles with invalid date parameter in template]]
   }}
  }}
 }}</text>
      <sha1>gpikm5p2yggfosi6w5maxtx5my3u9im</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flagicon</title>
    <ns>10</ns>
    <id>2075417</id>
    <revision>
      <id>638605349</id>
      <parentid>637524733</parentid>
      <timestamp>2014-12-18T05:54:53Z</timestamp>
      <contributor>
        <username>Plastikspork</username>
        <id>5075409</id>
      </contributor>
      <comment>Closing</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="127">{{country data {{{1|}}}|flagicon/core|variant={{{variant|{{{2|}}}}}}|size={{{size|}}}}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>dmhm3yz9zkfz2b9aeazgucpbhxz0qqo</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flagicon/core</title>
    <ns>10</ns>
    <id>2048255</id>
    <revision>
      <id>695263225</id>
      <parentid>647326370</parentid>
      <timestamp>2015-12-14T21:50:44Z</timestamp>
      <contributor>
        <username>SiBr4</username>
        <id>16981284</id>
      </contributor>
      <comment>Default to placeholder flag in absence of flag alias (see also [[Template:Flag/core]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="293">&lt;span class=&quot;flagicon&quot;&gt;[[File:{{{flag alias-{{{variant}}}|{{#if:{{{flag alias|}}}|{{{flag alias}}}|Flag placeholder.svg}}}}}|{{#if:{{{size|}}}|{{{size}}}|23x15px}}|{{{border-{{{variant}}}|{{{border|border}}}}}} |alt={{{alias}}}|link={{{alias}}}]]&lt;/span&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>96ivn0w0bxhlm01zt7a1dqhm2onhawx</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Flatlist</title>
    <ns>10</ns>
    <id>44066567</id>
    <revision>
      <id>628943977</id>
      <parentid>628943437</parentid>
      <timestamp>2014-10-09T16:31:44Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>Protected Template:Flatlist: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="232">&lt;div class=&quot;hlist {{{class|}}}&quot; {{#if:{{{style|}}}{{{indent|}}}|style=&quot;{{#if:{{{indent|}}}|margin-left: {{#expr:{{{indent}}}*1.6}}em;}} {{{style|}}}&quot;}}&gt;{{#if:{{{1|}}}|
{{{1}}}
&lt;/div&gt;}}&lt;noinclude&gt;&lt;/div&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>rl7soqdf32myn4dned7p631d4bijrbp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Further information</title>
    <ns>10</ns>
    <id>1721317</id>
    <revision>
      <id>806005498</id>
      <parentid>804511078</parentid>
      <timestamp>2017-10-19T01:32:24Z</timestamp>
      <contributor>
        <username>Primefac</username>
        <id>11508456</id>
      </contributor>
      <comment>Updating TFD template: discussion was relisted ([[WP:XFDC|XFDcloser]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="417">{{Tfm/dated|page=Further information|otherpage=Details|link=Wikipedia:Templates for discussion/Log/2017 October 19#Template:Further information|type=disabled|bigbox={{#invoke:Noinclude|noinclude|text=yes}}}}&lt;includeonly&gt;{{#invoke:labelled list hatnote|labelledList|Further information}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>6e7ghwgmogfi3lg3i1mihbt77gddr1o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Good article</title>
    <ns>10</ns>
    <id>27528502</id>
    <revision>
      <id>720674730</id>
      <parentid>720669836</parentid>
      <timestamp>2016-05-17T08:02:42Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Article-space top icons should not be custom-sortable</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="282">{{Top icon
| imagename    = symbol support vote.svg
| wikilink     = Wikipedia:Good articles
| description  = This is a good article. Click here for more information.
| id           = good-star
| maincat      = [[Category:Good articles]]
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>qwlzdajp3bdcjp8qvec4nibbokccbku</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Harvard citation no brackets</title>
    <ns>10</ns>
    <id>5326834</id>
    <revision>
      <id>760004509</id>
      <parentid>548015171</parentid>
      <timestamp>2017-01-14T11:06:04Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Harvard citation no brackets]]&quot;: [[WP:High-risk templates|Highly visible template]]: Allowing template editors ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="118">&lt;includeonly&gt;{{#invoke:Footnotes|harvard_citation_no_bracket}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>0tplhctpagkpfr9gwi3hcd6af9ii5yc</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Harvnb</title>
    <ns>10</ns>
    <id>5326925</id>
    <redirect title="Template:Harvard citation no brackets" />
    <revision>
      <id>774336434</id>
      <parentid>103261552</parentid>
      <timestamp>2017-04-07T19:22:02Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Harvnb]]&quot;: Matching redirect target ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="50">#REDIRECT[[Template:Harvard citation no brackets]]</text>
      <sha1>3shv1t0unnkqbpog36jda0nnq7r7rca</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Hlist</title>
    <ns>10</ns>
    <id>38143620</id>
    <revision>
      <id>669926987</id>
      <parentid>669921219</parentid>
      <timestamp>2015-07-04T15:13:14Z</timestamp>
      <contributor>
        <username>Penwhale</username>
        <id>125125</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Hlist: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="181">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:list|horizontal}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>ihcdy525o8nnmq114czc48dpk6pnojd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:ISBN</title>
    <ns>10</ns>
    <id>51604275</id>
    <revision>
      <id>801657419</id>
      <parentid>798892531</parentid>
      <timestamp>2017-09-21T01:06:26Z</timestamp>
      <contributor>
        <username>MRD2014</username>
        <id>21640150</id>
      </contributor>
      <comment>bypass redirect per talk</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3397">{{#if:{{{1|&lt;noinclude&gt;$&lt;/noinclude&gt;}}}|{{Catalog lookup link|{{{1|}}}|{{{2|}}}|{{{3|}}}|{{{4|}}}|{{{5|}}}|{{{6|}}}|{{{7|}}}|{{{8|}}}|{{{9|}}}|article-link={{#ifeq:{{yesno-no|{{{plainlink|}}}}}|yes||International Standard Book Number}}|article-name={{#ifeq:{{yesno-no|{{{plainlink|}}}}}|yes||ISBN}}|link-prefix=[Special:BookSources/|item-prefix={{!}}|item-postfix=]|list-leadout={{{leadout|}}}}}{{#if:{{trim|{{{1|}}}}}|{{#ifeq:{{yesno-no|{{{invalid1|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{1|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{2|}}}}}|{{#ifeq:{{yesno-no|{{{invalid2|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{2|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{3|}}}}}|{{#ifeq:{{yesno-no|{{{invalid3|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{3|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{4|}}}}}|{{#ifeq:{{yesno-no|{{{invalid4|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{4|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{5|}}}}}|{{#ifeq:{{yesno-no|{{{invalid5|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{5|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{6|}}}}}|{{#ifeq:{{yesno-no|{{{invalid6|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{6|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{7|}}}}}|{{#ifeq:{{yesno-no|{{{invalid7|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{7|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{8|}}}}}|{{#ifeq:{{yesno-no|{{{invalid8|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{8|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}{{#if:{{trim|{{{9|}}}}}|{{#ifeq:{{yesno-no|{{{invalid9|}}}}}|yes|{{main other|[[Category:Pages with listed invalid ISBNs]]}}|{{#invoke:check isxn|check_isbn|{{{9|}}}|error={{error-small|&amp;nbsp;Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Invalid [[ISBN]].}}{{main other|[[Category:Pages with ISBN errors]]}}}}}}}}}}}}}}}}}}}}}}}}|{{error-small|Parameter error in {{tl|isbn&lt;!-- ISBN --&gt;}}: Missing [[ISBN]].}}}}&lt;noinclude&gt;{{documentation}}&lt;!-- Add categories and interwiki lines to the /doc subpage, not here! --&gt;&lt;/noinclude&gt;</text>
      <sha1>5bzfl5yo5chykn0se0i9zyszdx18fvs</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Infobox military conflict</title>
    <ns>10</ns>
    <id>1519061</id>
    <revision>
      <id>628656290</id>
      <parentid>612304565</parentid>
      <timestamp>2014-10-07T14:48:16Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>use Lua. tested extensively in sandbox, no known issues</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="109">&lt;includeonly&gt;{{#invoke:Infobox military conflict|main}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>ood3rlzzd5zabv43up0b3ht91tqlve9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Longitem</title>
    <ns>10</ns>
    <id>38040101</id>
    <revision>
      <id>718758673</id>
      <parentid>718071292</parentid>
      <timestamp>2016-05-05T12:44:24Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>I have to sort this out; adding tracking category.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="230">&lt;div style=&quot;padding:0.1em 0;line-height:1.2em;{{{style|}}}&quot;&gt;{{{1}}}&lt;/div&gt;&lt;includeonly&gt;{{#if:{{{2|}}}|[[Category:Pages using Template:Longitem with unnamed style parameter]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>druaduufanfoh3rf6p66canulwflngz</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Longlink</title>
    <ns>10</ns>
    <id>19484558</id>
    <revision>
      <id>679774911</id>
      <parentid>327468997</parentid>
      <timestamp>2015-09-06T18:31:01Z</timestamp>
      <contributor>
        <username>NeilN</username>
        <id>409043</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Longlink: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="273">&lt;div style=&quot;padding:0.2em 0.4em; line-height:1.2em; {{{style|}}}&quot;&gt;{{{1}}}&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}

&lt;!---Please add metadata (categories, interwikis) to the &lt;includeonly&gt;
     section at the bottom of [[Template:Longlink/doc]], not here - thanks!---&gt;
&lt;/noinclude&gt;</text>
      <sha1>o5yrkx8qqocvro5dak2galmf79mg1o1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main</title>
    <ns>10</ns>
    <id>1208356</id>
    <revision>
      <id>771512324</id>
      <parentid>697196828</parentid>
      <timestamp>2017-03-21T23:21:15Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <minor/>
      <comment>Anthony Appleyard moved page [[Template:Main article]] to [[Template:Main]]: [https://en.wikipedia.org/wiki/Template_talk:Main_article#edittemplateprotected]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="138">{{#invoke:main|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>jkpvpyms818jhpg2lkzsq5qur195qbr</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main article</title>
    <ns>10</ns>
    <id>53560346</id>
    <redirect title="Template:Main" />
    <revision>
      <id>771512326</id>
      <timestamp>2017-03-21T23:21:16Z</timestamp>
      <contributor>
        <username>Anthony Appleyard</username>
        <id>119438</id>
      </contributor>
      <comment>Anthony Appleyard moved page [[Template:Main article]] to [[Template:Main]]: [https://en.wikipedia.org/wiki/Template_talk:Main_article#edittemplateprotected]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="44">#REDIRECT [[Template:Main]]

{{R from move}}</text>
      <sha1>jyxj6hsq03mwmz6m8pkogauxy595atk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Main other</title>
    <ns>10</ns>
    <id>17220251</id>
    <revision>
      <id>388689011</id>
      <parentid>334818505</parentid>
      <timestamp>2010-10-04T14:46:48Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>remove {{pp-template}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="409">{{#switch:
  &lt;!--If no or empty &quot;demospace&quot; parameter then detect namespace--&gt;
  {{#if:{{{demospace|}}} 
  | {{lc: {{{demospace}}} }}    &lt;!--Use lower case &quot;demospace&quot;--&gt;
  | {{#ifeq:{{NAMESPACE}}|{{ns:0}}
    | main
    | other
    }} 
  }}
| main     = {{{1|}}}
| other
| #default = {{{2|}}}
}}&lt;noinclude&gt;

{{documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>ngt28vb1n5t4bh1su57btnqyofkd1d5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Max</title>
    <ns>10</ns>
    <id>4788776</id>
    <revision>
      <id>772147328</id>
      <parentid>539593606</parentid>
      <timestamp>2017-03-25T16:04:13Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Max]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indefinite)...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="89">&lt;includeonly&gt;{{#invoke:Math|max}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>s2lyijw8m0l517bfw1z0srbw197c8fh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Military navigation</title>
    <ns>10</ns>
    <id>11992644</id>
    <revision>
      <id>778685739</id>
      <parentid>778656930</parentid>
      <timestamp>2017-05-04T17:21:02Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>update from sandbox, tested in the testcases, saving old version in the sandbox for comparison if there are any issues</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="256">&lt;includeonly&gt;{{#invoke:Military navigation|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation|Wikipedia:WikiProject Military history/Military navigation}}

[[Category:Navigational box wrapper templates]]
[[Category:Military navigational boxes| ]]
&lt;/noinclude&gt;</text>
      <sha1>jsqaco52t54gvty1nu6j5uyt0oisg74</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Min</title>
    <ns>10</ns>
    <id>4788731</id>
    <revision>
      <id>581202750</id>
      <parentid>539582690</parentid>
      <timestamp>2013-11-11T16:44:42Z</timestamp>
      <contributor>
        <username>Mark Arsten</username>
        <id>15020596</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Min: Allowing Protected Template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="89">&lt;includeonly&gt;{{#invoke:Math|min}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>4rhvyq4jp8mkf3suj508fo5jo8ev3d9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Nobold</title>
    <ns>10</ns>
    <id>10981056</id>
    <revision>
      <id>772147408</id>
      <parentid>224914185</parentid>
      <timestamp>2017-03-25T16:04:17Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Nobold]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indefinit...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="164">&lt;span style=&quot;font-weight:normal;&quot;&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- PLEASE ADD CATEGORIES AND INTERWIKIS TO THE /doc SUBPAGE, THANKS --&gt;
&lt;/noinclude&gt;</text>
      <sha1>jd091g26r8rrz2i74pnanvl0wum30wj</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Notelist</title>
    <ns>10</ns>
    <id>34230427</id>
    <revision>
      <id>744219698</id>
      <parentid>591018129</parentid>
      <timestamp>2016-10-13T21:20:40Z</timestamp>
      <contributor>
        <username>Geni</username>
        <id>55582</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Notelist: locking down everything used on the Hillary page ([Edit=Require template editor access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="286">{{reflist|{{{1|{{{colwidth|}}}}}}|refs={{{refs|{{{notes|}}}}}}|group={{#switch: {{{group|}}}
    | note
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group|}}}
    | #default = lower-alpha
   }}}}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>sg0j66m0cnvsmzurho8oogz4n9in4cm</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Nowrap</title>
    <ns>10</ns>
    <id>1627975</id>
    <restrictions>edit=sysop:move=sysop</restrictions>
    <revision>
      <id>692794261</id>
      <parentid>462345338</parentid>
      <timestamp>2015-11-28T10:13:53Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <comment>Adapt comment; edits inside noinclude blocks should not affect job queue, but won't kill parser either way.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="145">&lt;span class=&quot;nowrap&quot;&gt;{{{1}}}&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc page; interwikis go to Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>avb5tcymgupik1ikutqclidkj9tnitx</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ns has subpages</title>
    <ns>10</ns>
    <id>22589696</id>
    <revision>
      <id>637438114</id>
      <parentid>637437596</parentid>
      <timestamp>2014-12-10T06:37:09Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>convert this to use [[Module:Ns has subpages]] - this gets the subpage status directly from MediaWiki, avoiding the need to update the template when namespaces change</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="185">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#invoke:Ns has subpages|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>0pg457y46td6p53rdt8tyc76jeg9pa8</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Order of magnitude</title>
    <ns>10</ns>
    <id>11656899</id>
    <revision>
      <id>772147393</id>
      <parentid>522551188</parentid>
      <timestamp>2017-03-25T16:04:16Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Order of magnitude]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="339">&lt;includeonly&gt;{{{{{|safesubst:}}}#ifexpr:{{{1|0}}}=0
   |{{{{{|safesubst:}}}#ifexpr:abs{{{1|0}}}1=1
      |0
      |{{{{{|safesubst:}}}#expr:floor((ln(abs{{{1}}}1)/ln10)+1)}}
    }}
   |{{#expr:floor((ln(abs({{{1|0}}}) )/ln 10)+1E((abs{{{1|0}}}&gt;1E100 or abs{{{1|0}}}&lt;1E-100)-14))}}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>o26s8fkrxrfa62h1s4cyrdxr33uqy8l</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Page needed</title>
    <ns>10</ns>
    <id>6135246</id>
    <revision>
      <id>784068328</id>
      <parentid>582080058</parentid>
      <timestamp>2017-06-06T08:40:07Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="437">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{Fix
| link  = Wikipedia:Citing sources
| title = This citation requires a reference to the specific page or range of pages in which the material appears.
| text  = page&amp;nbsp;needed
| date  = {{{date|}}}
| cat-date = Category:Wikipedia articles needing page number citations
}}
}}&lt;noinclude&gt;
&lt;!--Categories and interwikis go on the /doc sub-page.--&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>gv2fvkhdnzk1lfzyhcjt5iym7bcayze</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Plainlist</title>
    <ns>10</ns>
    <id>33825240</id>
    <revision>
      <id>628943872</id>
      <parentid>628943729</parentid>
      <timestamp>2014-10-09T16:30:47Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Plainlist: Change to template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="236">&lt;div class=&quot;plainlist {{{class|}}}&quot; {{#if:{{{style|}}}{{{indent|}}}|style=&quot;{{#if:{{{indent|}}}|margin-left: {{#expr:{{{indent}}}*1.6}}em;}} {{{style|}}}&quot;}}&gt;{{#if:{{{1|}}}|
{{{1}}}
&lt;/div&gt;}}&lt;noinclude&gt;&lt;/div&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>nztwpfg54h3oaq8h3bzhtwuqxochv0z</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Pp-move-indef</title>
    <ns>10</ns>
    <id>20814756</id>
    <revision>
      <id>626025152</id>
      <parentid>626025082</parentid>
      <timestamp>2014-09-18T01:43:57Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Pp-move-indef: [[WP:High-risk templates|Highly visible template]]: allow template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="174">&lt;includeonly&gt;{{#invoke:Pp-move-indef|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>ige1ruktwt70sig3zmubaou2g290avd</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Pp-semi-indef</title>
    <ns>10</ns>
    <id>7896691</id>
    <revision>
      <id>772120871</id>
      <parentid>619983103</parentid>
      <timestamp>2017-03-25T12:38:46Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Pp-semi-indef]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor acces...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="178">&lt;includeonly&gt;{{#invoke:Protection banner|main}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>5t6lal9n9hcpwsso2obr7pcyjbg26xc</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Precision</title>
    <ns>10</ns>
    <id>28372034</id>
    <revision>
      <id>772120865</id>
      <parentid>540301189</parentid>
      <timestamp>2017-03-25T12:38:46Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Precision]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="125">&lt;includeonly&gt;{{#invoke:Math|precision|{{{1|0}}}|check_fraction=true}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>hbl3vf33a239ici6o7feo2ici90hboa</sha1>
    </revision>
  </page>
  <page>
    <title>Template:R</title>
    <ns>10</ns>
    <id>24429562</id>
    <revision>
      <id>707000638</id>
      <parentid>706675000</parentid>
      <timestamp>2016-02-26T13:23:54Z</timestamp>
      <contributor>
        <username>D'Ranged 1</username>
        <id>4257898</id>
      </contributor>
      <comment>adding aliases for &quot;group&quot; to optionally further shorten coding</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1317">&lt;includeonly&gt;{{r/ref|{{{1}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p|{{{p1|{{{page|{{{page1|{{{pp|{{{pp1|{{{pages|{{{pages1|}}}}}}}}}}}}}}}}}}}}}}}}}}&lt;!--

--&gt;{{#if:{{{2|}}}|{{r/ref|{{{2}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p2|{{{page2|{{{pp2|{{{pages2|}}}}}}}}}}}}}}&lt;!--
--&gt;{{#if:{{{3|}}}|{{r/ref|{{{3}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p3|{{{page3|{{{pp3|{{{pages3|}}}}}}}}}}}}}}&lt;!--
--&gt;{{#if:{{{4|}}}|{{r/ref|{{{4}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p4|{{{page4|{{{pp4|{{{pages4|}}}}}}}}}}}}}}&lt;!--
--&gt;{{#if:{{{5|}}}|{{r/ref|{{{5}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p5|{{{page5|{{{pp5|{{{pages5|}}}}}}}}}}}}}}&lt;!--
--&gt;{{#if:{{{6|}}}|{{r/ref|{{{6}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p6|{{{page6|{{{pp6|{{{pages6|}}}}}}}}}}}}}}&lt;!--
--&gt;{{#if:{{{7|}}}|{{r/ref|{{{7}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p7|{{{page7|{{{pp7|{{{pages7|}}}}}}}}}}}}}}&lt;!--
--&gt;{{#if:{{{8|}}}|{{r/ref|{{{8}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p8|{{{page8|{{{pp8|{{{pages8|}}}}}}}}}}}}}}&lt;!--
--&gt;{{#if:{{{9|}}}|{{r/ref|{{{9}}}|{{{group|{{{grp|{{{g|}}}}}}}}}|{{{p9|{{{page9|{{{pp9|{{{pages9|}}}}}}}}}}}}}}&lt;!--
--&gt;{{#if:{{{10|}}}|&lt;sup class=&quot;error&quot; style=&quot;font-size:0.9em; line-height:0;&quot;&gt;The template only supports up to 9 references ([[Template:R|edit it]]!).&lt;/sup&gt; &lt;!--
--&gt;}}}}}}}}}}}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>2hrqpl9nxfn28j4ws5yksum6w99c2ja</sha1>
    </revision>
  </page>
  <page>
    <title>Template:R/ref</title>
    <ns>10</ns>
    <id>24472967</id>
    <revision>
      <id>558398067</id>
      <parentid>558397976</parentid>
      <timestamp>2013-06-05T05:16:05Z</timestamp>
      <contributor>
        <username>Fryed-peach</username>
        <id>7269807</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="269">&lt;includeonly&gt;{{#tag:ref||name={{{1}}}|group={{{2}}}}}{{#if:{{{3}}}|&lt;sup class=&quot;reference nowrap&quot;&gt;&lt;nowiki&gt;:&lt;/nowiki&gt;{{{3}}}&lt;/sup&gt;}}&lt;/includeonly&gt;&lt;noinclude&gt;
==Usage==
&lt;pre&gt;{{r/ref|name|group|page numbers}}&lt;/pre&gt;

[[Category:Template implementation details]]
&lt;/noinclude&gt;</text>
      <sha1>051aivsywfj1uvh4yhkhozxv3xeq0ef</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Redirect-multi</title>
    <ns>10</ns>
    <id>50525075</id>
    <revision>
      <id>804461605</id>
      <parentid>804461309</parentid>
      <timestamp>2017-10-09T04:22:15Z</timestamp>
      <contributor>
        <username>Alex Shih</username>
        <id>1104175</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Redirect-multi]]&quot;: [[WP:High-risk templates|Highly visible template]]: Changing to semi as no need for TE protection with only 320 pages transcluded ([Edit=Require autoconfirmed or confirmed access] (indefinite)...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="107">&lt;includeonly&gt;{{#invoke:Redirect-multi|redirectMulti}}&lt;/includeonly&gt;&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>7op6b1aqafeuwacwsiegr69j9w6hg8v</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Refbegin</title>
    <ns>10</ns>
    <id>9391283</id>
    <revision>
      <id>780001198</id>
      <parentid>772120876</parentid>
      <timestamp>2017-05-12T09:46:40Z</timestamp>
      <contributor>
        <username>TheDJ</username>
        <id>244887</id>
      </contributor>
      <comment>Use class from MediaWiki:Common.css to implement hanging indentation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="828">&lt;includeonly&gt;&lt;div class=&quot;refbegin &lt;!--
--&gt;{{#if: {{{indent|}}}
    | refbegin-hanging-indents }} &lt;!--
 --&gt;{{#if: {{{normalfont|}}}
    | refbegin-100 }} &lt;!--
 --&gt;{{#if: {{{1|}}}
    | columns {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | references-column-width 
      | references-column-count references-column-count-{{#if:1|{{{1}}}}} }}
    | {{#if: {{{colwidth|}}}
      | references-column-width }} }}&quot; style=&quot;&lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | {{column-width|{{#if:1|{{{1}}}}}}}
      | {{column-count|{{#if:1|{{{1}}}}}}} }}
    | {{#if: {{{colwidth|}}}
      | {{column-width|{{{colwidth}}}}} }} }}&quot;&gt;&lt;!--
 --&gt;{{#if: {{{normalfont|}}}
    | [[Category:Pages using refbegin with normalfont parameter]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
{{/TemplateData}}
&lt;/noinclude&gt;</text>
      <sha1>jviesmg7qfir8shmypzzu26dk3g9eiw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Refend</title>
    <ns>10</ns>
    <id>10023179</id>
    <revision>
      <id>792167400</id>
      <parentid>772120878</parentid>
      <timestamp>2017-07-24T21:40:56Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>remove &lt;/dl&gt; since no &lt;dl&gt; in Template:Refbegin</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="246">&lt;includeonly&gt;&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{template doc|Template:refbegin/doc}}
{{TemplateDataHeader}}
&lt;templatedata&gt;
{
    &quot;description&quot;: &quot;Ends a reference lists started by {{refbegin}}.&quot;,
    &quot;params&quot;: {
    }
}
&lt;/templatedata&gt;
&lt;/noinclude&gt;</text>
      <sha1>kcrxzrf6v4rvbl0yhnfcb5labufpnsp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Reflist</title>
    <ns>10</ns>
    <id>7585648</id>
    <revision>
      <id>794499661</id>
      <parentid>794499298</parentid>
      <timestamp>2017-08-08T12:05:27Z</timestamp>
      <contributor>
        <username>Anomie</username>
        <id>301903</id>
      </contributor>
      <comment>Please stop, you apparently don't know what you're doing here and shouldn't fool around with heavily-used live templates. I'll post an explanation to the talk page momentarily.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1008">&lt;div class=&quot;reflist &lt;!--
 --&gt;{{#if: {{{1|}}} {{{colwidth|}}}
    | columns references-column-width
	}}&quot; style=&quot;&lt;!--
 --&gt;{{#if: {{{1|}}}
    | {{#iferror: {{#ifexpr: {{{1|1}}} &gt; 1 }}
      | {{column-width|1={{{1}}}}}
      | {{#switch:{{{1|}}}|1=|2={{column-width|1=30em}}|#default={{column-width|1=25em}}}} }}
    | {{#if: {{{colwidth|}}}
      | {{column-width|1={{{colwidth}}}}} }} }} list-style-type: &lt;!--
 --&gt;{{{liststyle|{{#switch: {{{group|}}}
    | upper-alpha
    | upper-roman
    | lower-alpha
    | lower-greek
    | lower-roman = {{{group}}}
    | #default = decimal}}}}};&quot;&gt;
{{#tag:references|{{{refs|}}}|group={{{group|}}}|responsive={{#if:{{{1|}}}{{{colwidth|}}}|0|1}}}}&lt;/div&gt;{{#invoke:Check for unknown parameters|check|unknown={{main other|[[Category:Pages using reflist with unknown parameters|_VALUE_{{PAGENAME}}]]}}|preview=Page using [[Template:Reflist]] with unknown parameter &quot;_VALUE_&quot;|ignoreblank=y| 1 | colwidth | group | liststyle | refs }}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2k096ppl7lxbcjqmfluu9x2sc91rmzl</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Rnd/-</title>
    <ns>10</ns>
    <id>13373961</id>
    <revision>
      <id>772120898</id>
      <parentid>398438889</parentid>
      <timestamp>2017-03-25T12:38:46Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Rnd/-]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (inde...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="875">&lt;includeonly&gt;{{#expr:{{{1}}}}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;0  and {{{1}}}={{{1}}}round0 |.0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;1  and {{{1}}}={{{1}}}round1  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;2  and {{{1}}}={{{1}}}round2  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;3  and {{{1}}}={{{1}}}round3  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;4  and {{{1}}}={{{1}}}round4  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;5  and {{{1}}}={{{1}}}round5  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;6  and {{{1}}}={{{1}}}round6  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;7  and {{{1}}}={{{1}}}round7  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;8  and {{{1}}}={{{1}}}round8  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;9  and {{{1}}}={{{1}}}round9  |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;10 and {{{1}}}={{{1}}}round10 |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;11 and {{{1}}}={{{1}}}round11 |0}}&lt;!--
--&gt;{{#ifexpr: {{{2}}}&gt;12 and {{{1}}}={{{1}}}round12 |0}}&lt;!--
--&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{doc}}&lt;/noinclude&gt;</text>
      <sha1>j9shqac8do9tjpnje0ajy7jgfpml6gl</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Scinote</title>
    <ns>10</ns>
    <id>13088006</id>
    <revision>
      <id>466032440</id>
      <parentid>459595897</parentid>
      <timestamp>2011-12-15T18:16:22Z</timestamp>
      <contributor>
        <ip>187.124.252.137</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="185">&lt;includeonly&gt;{{scinote/{{#if:{{{2|}}}|S|P}}{{{fn|}}}{{#expr:({{{1}}}&gt;0)-({{{1}}}&lt;0)}}|{{{1}}}|{{#expr:floor(ln(abs{{{1}}})/ln10)}}|{{{2}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{doc}}
&lt;/noinclude&gt;</text>
      <sha1>ayzaotxuvmxzxvbr7cizrvuer4yh24w</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Scinote/S1</title>
    <ns>10</ns>
    <id>14434859</id>
    <revision>
      <id>566477780</id>
      <parentid>555896047</parentid>
      <timestamp>2013-07-30T20:44:07Z</timestamp>
      <contributor>
        <username>Addbot</username>
        <id>6569922</id>
      </contributor>
      <minor/>
      <comment>[[User:addbot|Bot]]: Migrating interwiki links, now provided by [[Wikipedia:Wikidata|Wikidata]] on [[d:q13357987]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="167">&lt;includeonly&gt;{{scinote/Sordomag|{{#expr:{{{1}}}round({{{3}}}-{{{2}}}-1)}}|{{{3}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
[[Category:Subtemplates of template scinote]]
&lt;/noinclude&gt;</text>
      <sha1>58mfdddq67ioyvj2b870v814h2p5l39</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Scinote/Sexp</title>
    <ns>10</ns>
    <id>13089413</id>
    <revision>
      <id>610366682</id>
      <parentid>567213975</parentid>
      <timestamp>2014-05-27T16:30:54Z</timestamp>
      <contributor>
        <username>Dpleibovitz</username>
        <id>3747202</id>
      </contributor>
      <minor/>
      <comment>inline documentation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="427">&lt;includeonly&gt;{{scinote/e|{{rnd/-|{{#expr:{{{1}}}/10^{{{2}}}}}|{{#expr:{{{3}}}-1}}}}|{{{2}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{doc|content=
This subtemplate calls {{tl|scinote/e}} to display {{{1}}}10&lt;sup&gt;{{{2}}}&lt;/sup&gt;, adding trailing zeros such that there are at least {{{3}}}  1 significant figures after the decimal point (limited to twelve) using {{tl|rnd/-}}.

[[Category:Subtemplates of template scinote]]
}}
&lt;/noinclude&gt;</text>
      <sha1>gxeza5tui4pr2fr0rmxqa2urm9eud1t</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Scinote/Sordomag</title>
    <ns>10</ns>
    <id>14427557</id>
    <revision>
      <id>778415101</id>
      <parentid>610366547</parentid>
      <timestamp>2017-05-03T00:15:09Z</timestamp>
      <contributor>
        <username>Revent</username>
        <id>4179294</id>
      </contributor>
      <minor/>
      <comment>spelling</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="354">&lt;includeonly&gt;{{scinote/Sexp|{{{1}}}|{{#expr:floor(ln{{{1}}}/ln10)}}|{{{2}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{doc|content=
This subtemplate calls {{tl|Scinote/Sexp}} to display {{{1}}} rounded to {{{2}}} significant figures in scientific notation by calculating the order of magnitude of {{{1}}}.

[[Category:Subtemplates of template scinote]]
}}
&lt;/noinclude&gt;</text>
      <sha1>ggh3zp5rnq8agbjuyxq4ma4c4wjtib9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Scinote/e</title>
    <ns>10</ns>
    <id>16882889</id>
    <revision>
      <id>610366295</id>
      <parentid>567180330</parentid>
      <timestamp>2014-05-27T16:27:26Z</timestamp>
      <contributor>
        <username>Dpleibovitz</username>
        <id>3747202</id>
      </contributor>
      <minor/>
      <comment>inline documentation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="730">&lt;includeonly&gt;{{{1}}}&lt;span style=&quot;margin-left:0.2em&quot;&gt;&lt;span style=&quot;margin-left:0.1em&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;s style=&quot;display:none&quot;&gt;^&lt;/s&gt;&lt;sup&gt;{{#ifexpr:{{{2}}}&lt;0|{{#expr:-{{{2}}}}}|{{{2}}}}}&lt;/sup&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
{{doc|content=
This subtemplate gives ''a''&lt;span style=&quot;margin-left:0.2em&quot;&gt;&lt;span style=&quot;margin-left:0.1em&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;sup&gt;''b''&lt;/sup&gt; where ''a'' and ''b'' are given by unnamed parameters {{{1}}} and {{{2}}} respectively.  {{{2}}} must be numerical, negative values are displayed with a proper minus sign.  The multiplication sign is spaced with thin non-breaking spaces.

Example:
*{{xpsoc|scinote/e|2|3}}

Compare {{tl|e}}:
*{{xpsoc|e|3}}

[[Category:Subtemplates of template scinote]]
}}
&lt;/noinclude&gt;</text>
      <sha1>h8acun089binnjc4wmmfv3s3n6jp5vp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:See also</title>
    <ns>10</ns>
    <id>1721254</id>
    <revision>
      <id>763260609</id>
      <parentid>725632232</parentid>
      <timestamp>2017-02-02T05:40:25Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Updated from sandbox to use [[Module:Labelled list hatnote]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="199">&lt;includeonly&gt;{{#invoke:Labelled list hatnote|labelledList|See also}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>dn9i3dv2bt8lqifr6vkbycoya78rnav</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sfn</title>
    <ns>10</ns>
    <id>23092408</id>
    <revision>
      <id>772120894</id>
      <parentid>735583552</parentid>
      <timestamp>2017-03-25T12:38:46Z</timestamp>
      <contributor>
        <username>Jo-Jo Eumerus</username>
        <id>17449355</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Sfn]]&quot;: Allowing template editors on some templates with full protection dating back to pre-[[WP:TPROT|TPROT]] times which aren't too often or too sensitively used. ([Edit=Require template editor access] (indefi...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">&lt;includeonly&gt;{{#invoke:Footnotes|sfn}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>dph4d78ri4yz9o2me1bhno2a113h471</sha1>
    </revision>
  </page>
  <page>
    <title>Template:SfnRef</title>
    <ns>10</ns>
    <id>25072600</id>
    <revision>
      <id>744219786</id>
      <parentid>533867813</parentid>
      <timestamp>2016-10-13T21:21:21Z</timestamp>
      <contributor>
        <username>Geni</username>
        <id>55582</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:SfnRef: locking down everything used on the Hillary page ([Edit=Require template editor access] (indefinite) [Move=Require administrator access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="224">CITEREF{{#if:||{{anchorencode:{{{1|}}}}}}}{{#if:||{{anchorencode:{{{2|}}}}}}}{{#if:||{{anchorencode:{{{3|}}}}}}}{{#if:||{{anchorencode:{{{4|}}}}}}}{{#if:||{{anchorencode:{{{5|}}}}}}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>ig1kziqy8yoiyqxckskh3r7zw2vyx80</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Ship</title>
    <ns>10</ns>
    <id>2530840</id>
    <revision>
      <id>706806906</id>
      <parentid>651327948</parentid>
      <timestamp>2016-02-25T11:31:47Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <minor/>
      <comment>Synch from sandbox;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="760">&lt;noinclude&gt;{{Template sandbox notice}}&lt;/noinclude&gt;&lt;includeonly&gt;{{safesubst:#if:{{{up|}}}
| {{{1}}}&amp;#32;
}}[[{{safesubst:#if:{{{1|}}}|{{{1}}}&amp;#32;}}{{{2}}}{{safesubst:#if:{{{3|}}}| &amp;#32;({{{3}}})}}|{{safesubst:#switch:{{{4|7}}}
|1 = {{safesubst:#if:{{{3|}}}|{{{3}}}|Hull Number Missing}}
|2 = ''{{{2}}}''
|3 = ''{{{2}}}''&amp;nbsp;{{safesubst:#if:{{{3|}}}|({{{3}}})|Hull Number Missing}}
|4 = Invalid Optional Parameter
|5 = {{{1}}}&amp;nbsp;{{safesubst:#if:{{{3|}}}|({{{3}}})|Hull Number Missing}}
|6 = {{safesubst:#if:{{{1|}}}|{{{1}}}&amp;nbsp;}}''{{{2}}}''
| {{safesubst:#if:{{{1|}}}|{{{1}}}&amp;nbsp;}}''{{{2}}}''{{safesubst:#if:{{{3|}}}|&amp;nbsp;({{{3}}})}}
}}]]&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}} 
&lt;!-- Add categories to the /doc subpage, not here!  --&gt;
&lt;/noinclude&gt;</text>
      <sha1>pcnb6zwj4c7v6hdv4yay950zlj1zcy1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sidebar</title>
    <ns>10</ns>
    <id>1960394</id>
    <revision>
      <id>609956138</id>
      <parentid>609911857</parentid>
      <timestamp>2014-05-24T15:42:30Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>appears to work in testcases, deploy it live</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="94">&lt;includeonly&gt;{{#invoke:Sidebar|sidebar}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>2zokwtfwvucgrlrksr937kmldrijnwv</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Sigfig</title>
    <ns>10</ns>
    <id>37772150</id>
    <redirect title="Template:Significant figures" />
    <revision>
      <id>769931066</id>
      <parentid>686429031</parentid>
      <timestamp>2017-03-12T12:58:35Z</timestamp>
      <contributor>
        <username>Christian75</username>
        <id>1306352</id>
      </contributor>
      <comment>{{redr}} is deprecated - converting to {{Redirect category shell}} using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="118">#REDIRECT [[Template:Significant figures]]

{{Redirect category shell|
{{R from move}}
{{R from template shortcut}}
}}</text>
      <sha1>6liq0tocaomv3w5pnzdg0n7d2hqs805</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Significant figures</title>
    <ns>10</ns>
    <id>13120760</id>
    <revision>
      <id>638406869</id>
      <parentid>594681521</parentid>
      <timestamp>2014-12-16T21:22:35Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <minor/>
      <comment>use the right doc template</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="249">{{#ifeq:{{{1&lt;noinclude&gt;|0&lt;/noinclude&gt;}}}|0
 |0
 |{{significant figures/{{#if:{{{2|}}}
   |rnd
   |sum
  }}
  |1={{formatnum:{{{1}}}|R}}
  |2={{{2}}}
  |3={{Order of magnitude|{{formatnum:{{{1}}}|R}}}}
 }}
}}&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>0w70ettzuwz10gi8sb1030t0ch78d2b</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Significant figures/sum</title>
    <ns>10</ns>
    <id>13120695</id>
    <revision>
      <id>617348015</id>
      <parentid>566434925</parentid>
      <timestamp>2014-07-17T18:10:07Z</timestamp>
      <contributor>
        <username>Dpleibovitz</username>
        <id>3747202</id>
      </contributor>
      <minor/>
      <comment>inline documentation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="217">&lt;includeonly&gt;{{#expr:{{{3}}}+{{precision|{{{1}}}}}+1}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{doc|content=
This subtemplate counts significant figures in a number.

[[Category:Subtemplates of template sigfig|sum]]
}}
&lt;/noinclude&gt;</text>
      <sha1>e7j4j78ycloqm5okb6fgy3695cxuldu</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Start and end dates</title>
    <ns>10</ns>
    <id>43490969</id>
    <revision>
      <id>803116691</id>
      <parentid>803116595</parentid>
      <timestamp>2017-09-30T15:21:15Z</timestamp>
      <contributor>
        <ip>240F:7:162B:1:809E:3252:89D5:9285</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1059">&lt;includeonly&gt;{{#if:{{{df|}}}
|{{#ifeq:{{{1}}}|{{{4}}}
  |{{#ifeq:{{{2}}}|{{{5}}}
     |{{#time:j|{{{1}}}-{{{2}}}-{{{3}}}}}{{#time:j&quot;&amp;nbsp;&quot;F&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
     |{{#time:j&quot;&amp;nbsp;&quot;F|{{{1}}}-{{{2}}}-{{{3}}}}}&amp;nbsp; {{#time:j&quot;&amp;nbsp;&quot;F&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
   }}
  |{{#time:j&quot;&amp;nbsp;&quot;F&quot;&amp;nbsp;&quot;Y|{{{1}}}-{{{2}}}-{{{3}}}}}&amp;nbsp; {{#time:j&quot;&amp;nbsp;&quot;F&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
}}
|{{#ifeq:{{{1}}}|{{{4}}}
  |{{#ifeq:{{{2}}}|{{{5}}}
     |{{#time:F&quot;&amp;nbsp;&quot;j|{{{1}}}-{{{2}}}-{{{3}}}}}{{#time:j,&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
     |{{#time:F&quot;&amp;nbsp;&quot;j|{{{1}}}-{{{2}}}-{{{3}}}}}&amp;nbsp; {{#time:F&quot;&amp;nbsp;&quot;j,&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
   }}
  |{{#time:F&quot;&amp;nbsp;&quot;j,&quot;&amp;nbsp;&quot;Y|{{{1}}}-{{{2}}}-{{{3}}}}}&amp;nbsp; {{#time:F&quot;&amp;nbsp;&quot;j,&quot;&amp;nbsp;&quot;Y|{{{4}}}-{{{5}}}-{{{6}}}}}
}}
}}&lt;span style=&quot;display:none&quot;&gt; (&lt;span class=&quot;dtstart&quot;&gt;{{#time:Y-m-d|{{{1}}}-{{{2}}}-{{{3}}}}}&lt;/span&gt;&amp;nbsp; &lt;span class=&quot;dtend&quot;&gt;{{#time:Y-m-d|{{{4}}}-{{{5}}}-{{{6}}}}}&lt;/span&gt;)&lt;/span&gt;&lt;/includeonly&gt;&lt;noinclude&gt;

{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>coy3g5pfv0832qw035g62jx59ybso01</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Startflatlist</title>
    <ns>10</ns>
    <id>42217688</id>
    <redirect title="Template:Flatlist" />
    <revision>
      <id>659675523</id>
      <parentid>659674435</parentid>
      <timestamp>2015-04-28T13:11:14Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>Protected Template:Startflatlist: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="31">#REDIRECT [[Template:Flatlist]]</text>
      <sha1>ly1wav42zl1oihvre3ttvke0u7ipu0l</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Startplainlist</title>
    <ns>10</ns>
    <id>42322412</id>
    <redirect title="Template:Plainlist" />
    <revision>
      <id>659675548</id>
      <parentid>628962115</parentid>
      <timestamp>2015-04-28T13:11:26Z</timestamp>
      <contributor>
        <username>Edokter</username>
        <id>1624037</id>
      </contributor>
      <minor/>
      <comment>Protected Template:Startplainlist: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="32">#REDIRECT [[Template:Plainlist]]</text>
      <sha1>01aeayl6b16iik8umczpd3ms931mcu5</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Subject bar</title>
    <ns>10</ns>
    <id>30675556</id>
    <revision>
      <id>744219834</id>
      <parentid>672148295</parentid>
      <timestamp>2016-10-13T21:21:45Z</timestamp>
      <contributor>
        <username>Geni</username>
        <id>55582</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:Subject bar: locking down everything used on the Hillary page ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="145">{{#invoke:subject bar|main}}&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage, and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>3butff6wb9tpwx5jw631dqgze314mh1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:TOC limit</title>
    <ns>10</ns>
    <id>10794362</id>
    <revision>
      <id>645375001</id>
      <parentid>388761389</parentid>
      <timestamp>2015-02-02T23:24:35Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:TOC limit: [[WP:High-risk templates|Highly visible template]]: allow template editors ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="99">&lt;div class=&quot;toclimit-{{{1|{{{limit|3}}}}}}&quot;&gt;__TOC__&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}
&lt;/noinclude&gt;</text>
      <sha1>bh7ohpliyqceamavoe13nsjqjl553wn</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Tfm/dated</title>
    <ns>10</ns>
    <id>51277497</id>
    <revision>
      <id>771705123</id>
      <parentid>771634383</parentid>
      <timestamp>2017-03-23T01:25:42Z</timestamp>
      <contributor>
        <username>Jc86035</username>
        <id>17245768</id>
      </contributor>
      <minor/>
      <comment>restored nbsps</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2608">{{ {{{|safesubst:}}}#invoke:Unsubst||type= |page= |link= |help= |$B={{#ifeq:{{{bigbox|&lt;noinclude&gt;yes&lt;/noinclude&gt;}}}|yes|{{Ombox
  |type  = move
  |image = none
  |small = {{{small|no}}}
  |text  = {{#ifeq:{{PAGENAME}}|{{{page}}}
   |This [[Help:Template|template]]
   |[[Template:{{{page}}}]]
  }} is '''being considered for merging with [[Template:{{{otherpage}}}]].''' Please discuss this matter at [[{{{link}}}|'''this template's entry''']] at templates for discussion to help reach a consensus.
{{#ifeq:{{{help}}}|off||----
''&lt;small class=&quot;plainlinks&quot; style=&quot;line-height:1.3em;&quot;&gt;[[Wikipedia:Maintenance|Maintenance]] use only:&lt;br&gt;1. [{{fullurl:{{{link}}}|action=edit&amp;editintro=Wikipedia:Templates_for_discussion/editnotice&amp;section=1}} Edit the Tfd log] to create the discussion entry.&lt;br&gt;2. Please consider notifying the [{{fullurl:{{FULLPAGENAME}}|action=history}} author(s)] by placing &lt;span class=&quot;nowrap&quot;&gt;{{tlx|Tfmnotice|{{{page}}}|{{{otherpage}}}|subst=yes}} &lt;nowiki&gt;~~~~&lt;/nowiki&gt;&lt;/span&gt; on their talk page(s).&lt;/small&gt;''
 }}}}{{category handler
  | all = [[Category:Templates for merging]]
  | nocat = {{{nocat|{{#ifeq:{{FULLBASEPAGENAME}}|Template:Tfm|true}}}}}
  | category2 = {{{category|}}}
 }}|{{#switch:{{lc:{{{type}}}}}
 |tiny = &lt;span style=&quot;padding: 0; font-size: xx-small; font-weight: bold; color: #000000; background-color: #f9f9f9;&quot;&gt;[[{{{link}}}|See Tfd]]&lt;/span&gt;
 |inline = &lt;span style=&quot;padding: 0; font-size: xx-small; color: #000; border: 1px solid #aaa; background-color: #f9f9f9;&quot;&gt;The [[Help:Template|template]] ''[[Template:{{{page}}}|{{{page}}}]]'' is being [[{{{link}}}|considered for merging]].&lt;/span&gt;&amp;nbsp;
 |infobox|box|sidebar = &lt;div class=&quot;boilerplate metadata plainlinks&quot; id=&quot;tfd&quot; style=&quot;background-color: transparent; padding: 0 0.2em; color: #000; text-align: center; position: relative; float: right; border-bottom: 1px solid #AAAAAA; width: {{#if:{{{width|}}}|{{{width}}}|22em}}&quot;&gt;&lt;span style=&quot;font-size: xx-small;&quot;&gt;&amp;nbsp;The [[Help:Template|template]] ''[[Template:{{{page}}}|{{{page}}}]]'' is being [[{{{link}}}|considered for merging]].&amp;nbsp;&lt;/span&gt;&lt;/div&gt;
 |disabled = &lt;!-- No output --&gt;
 |#default = &lt;div class=&quot;boilerplate metadata plainlinks&quot; id=&quot;tfd&quot; style=&quot;background-color: transparent; padding: 0; font-size:xx-small; color:#000000; text-align: center; border-bottom:1px solid #AAAAAA;&quot;&gt;&amp;nbsp;The [[Help:Template|template]] below (''[[Template:{{{page}}}|{{{page}}}]]'') is being considered for merging. See [[{{{link}}}|templates for discussion]] to help reach a consensus.&amp;nbsp;&lt;/div&gt;
}}}}}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>qrcxu6ddqc7yicpuy8bksjrlvgxogye</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Tl</title>
    <ns>10</ns>
    <id>1487430</id>
    <revision>
      <id>776260390</id>
      <parentid>622723682</parentid>
      <timestamp>2017-04-19T22:28:34Z</timestamp>
      <contributor>
        <username>Lectonar</username>
        <id>128863</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Tl]]&quot;: request at rfp ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="168">&amp;#123;&amp;#123;[[Template:{{{1}}}|{{{1}}}]]&amp;#125;&amp;#125;&lt;noinclude&gt;
{{documentation}}
&lt;!-- Categories go on the /doc subpage and interwikis go on Wikidata. --&gt;
&lt;/noinclude&gt;</text>
      <sha1>h0vr3yvr9jdyd17x82vnav21ngwmxuk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Top icon</title>
    <ns>10</ns>
    <id>20101811</id>
    <revision>
      <id>723232837</id>
      <parentid>721870988</parentid>
      <timestamp>2016-06-01T20:45:03Z</timestamp>
      <contributor>
        <username>Debresser</username>
        <id>6999039</id>
      </contributor>
      <comment>Category detection not needed any more. About 1,000 userpages (and even a few articles!) fixes, only 3 left and their users have a message on their page.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="670">&lt;includeonly&gt;&lt;nowiki /&gt;&lt;!-- This nowiki tag helps prevent whitespace at the top of articles. --&gt;{{#tag:indicator
|[[File:{{{image|{{{imagename|}}}}}}|{{#if:{{{width|}}}|{{{width}}}|20}}x{{#if:{{{height|}}}|{{{height}}}|20}}px
 |{{#if:{{{link|{{{wikilink|}}}}}}|link={{{link|{{{wikilink}}}}}}}}
 |{{#if:{{{alt|}}}|alt={{{alt}}}}}
 |{{{text|{{{description|}}}}}}]]
|name = {{#if:{{{sortkey|}}}|{{{sortkey}}}-}}{{#if:{{{name|}}}|{{{name}}}|{{#if:{{{id|}}}|{{{id}}}|{{{image|{{{imagename|}}}}}}}}}}
}}{{Category handler
|user = {{{usercat|}}}
|main = {{{maincat|}}}
|subpage = {{{subpage|no}}}
|nocat = {{{nocat|}}}
}}&lt;/includeonly&gt;&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>amdag3f7v9n3xfy83qtymnk8ejlp8qv</sha1>
    </revision>
  </page>
  <page>
    <title>Template:TopicTOC-World War II</title>
    <ns>10</ns>
    <id>17220280</id>
    <revision>
      <id>690149419</id>
      <parentid>654431077</parentid>
      <timestamp>2015-11-11T16:24:52Z</timestamp>
      <contributor>
        <username>Presidentman</username>
        <id>4600476</id>
      </contributor>
      <comment>add link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1829">{{Sidebar
| name = TopicTOC-World War II
| width = {{{width|auto}}}
| title = [[World War II]]
| contentclass = plainlist

| heading1 = Alphabetical indices
| content1 =
* [[Index of World War II articles (A)|A]] [[Index of World War II articles (B)|B]] [[Index of World War II articles (C)|C]] [[Index of World War II articles (D)|D]] [[Index of World War II articles (E)|E]] [[Index of World War II articles (F)|F]] [[Index of World War II articles (G)|G]] [[Index of World War II articles (H)|H]] [[Index of World War II articles (I)|I]] [[Index of World War II articles (J)|J]] [[Index of World War II articles (K)|K]] [[Index of World War II articles (L)|L]] [[Index of World War II articles (M)|M]]
* [[Index of World War II articles (N)|N]] [[Index of World War II articles (O)|O]] [[Index of World War II articles (P)|P]] [[Index of World War II articles (Q)|Q]] [[Index of World War II articles (R)|R]] [[Index of World War II articles (S)|S]] [[Index of World War II articles (T)|T]] [[Index of World War II articles (U)|U]] [[Index of World War II articles (V)|V]] [[Index of World War II articles (W)|W]] [[Index of World War II articles (XZ)#X|X]] [[Index of World War II articles (XZ)#Y|Y]] [[Index of World War II articles (XZ)#Z|Z]]
* [[Index of World War II articles (09)|09]]

| heading2 = Navigation
| content2 =
* {{hlist |[[Campaigns of World War II|Campaigns]] |[[World War II by country|Countries]] |[[List of World War II military equipment|Equipment]]}}
* {{hlist |[[Lists of World War II topics|Lists]] |[[Outline of World War II|Outline]] |[[Timeline of World War II|Timeline]]}}
* '''{{hlist |[[Portal:World War II|Portal]] |[[:Category:World War II|Category]] |[[Bibliography of World War II|Bibliography]]}}'''

}}&lt;noinclude&gt;

[[Category:World War II navigational boxes]]
&lt;/noinclude&gt;</text>
      <sha1>lzt7ibl00924a2gbv91i9pmoioixmz9</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Trim</title>
    <ns>10</ns>
    <id>21815705</id>
    <revision>
      <id>668935791</id>
      <parentid>412919929</parentid>
      <timestamp>2015-06-27T18:27:45Z</timestamp>
      <contributor>
        <username>Plastikspork</username>
        <id>5075409</id>
      </contributor>
      <comment>Merging [[Template:Strip whitespace]] per TfD</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="114">&lt;includeonly&gt;{{ {{{|safesubst:}}}#if:1|{{{x|{{{1|}}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;

{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>h9devvk8f6nt34tp7zb17s39ge5wquh</sha1>
    </revision>
  </page>
  <page>
    <title>Template:USS</title>
    <ns>10</ns>
    <id>7127202</id>
    <revision>
      <id>577971355</id>
      <parentid>558576107</parentid>
      <timestamp>2013-10-20T13:09:44Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:USS: allow template editors to modify ([Edit=Protected template] (indefinite) [Move=Protected template] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="239">&lt;includeonly&gt;{{safesubst:ship|USS|{{{1}}}|{{safesubst:#if:{{{2|}}}|{{{2}}}}}|{{safesubst:#if:{{{3|}}}|{{{3}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{Documentation}} 
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>bwjxt8bwvc2nxvs1fweyxzn7wyt7642</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Use British English</title>
    <ns>10</ns>
    <id>27566674</id>
    <revision>
      <id>784071094</id>
      <parentid>778226346</parentid>
      <timestamp>2017-06-06T09:05:31Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="144">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{DMCA|Use British English|from|{{{date|}}}}}
}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>k4i5jn2t0nisy1zb6e8ouv4snocf9n6</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Use dmy dates</title>
    <ns>10</ns>
    <id>21044097</id>
    <revision>
      <id>784071134</id>
      <parentid>778226301</parentid>
      <timestamp>2017-06-06T09:05:49Z</timestamp>
      <contributor>
        <username>UsuallyNonviolentBot</username>
        <id>31197275</id>
      </contributor>
      <minor/>
      <comment>/* top */Remove deprecated parameter $N from [[Module:Unsubst]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="138">{{ {{{|safesubst:}}}#invoke:Unsubst||date=__DATE__ |$B=
{{DMCA|Use dmy dates|from|{{{date|}}}}}
}}&lt;noinclude&gt;{{Documentation}}&lt;/noinclude&gt;</text>
      <sha1>bp7zcbjc9uasbebcc8ijm5fqmeb3052</sha1>
    </revision>
  </page>
  <page>
    <title>Template:WWII history by nation</title>
    <ns>10</ns>
    <id>800585</id>
    <revision>
      <id>791994585</id>
      <parentid>777298585</parentid>
      <timestamp>2017-07-23T19:47:18Z</timestamp>
      <contributor>
        <username>LouisAragon</username>
        <id>18760506</id>
      </contributor>
      <comment>Fixed wrong placing</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="5012">{{Military navigation
|name = WWII history by nation
|bodyclass = hlist
|title = [[World War II by country|History of World War II by region and country]]
|state = {{{state|autocollapse}}}
|style = wide
|listclass = hlist
|image = 

|group1 = Africa
|list1 =
*[[Belgian Congo in World War II|Belgian Congo]]
*[[Egypt during World War II|Egypt]]
*[[French West Africa in World War II|French West Africa]]
*[[French Somaliland in World War II|French Somaliland]]
*[[Gold Coast in World War II|Gold Coast]]
*[[Kenya in World War II|Kenya]]
*[[Liberia in World War II|Liberia]]
*[[Nyasaland in World War II|Nyasaland]]
*[[Military history of South Africa during World War II|South Africa]]
*[[Southern Rhodesia in World War II|Southern Rhodesia]]

|group2 = North America
|list2 =
*[[Military history of Canada during World War II|Canada]]
*[[Cuba during World War II|Cuba]]
*[[El Salvador during World War II|El Salvador]]
*[[Greenland in World War II|Greenland]]
*[[Military history of Mexico#World War II|Mexico]]
*[[Dominion of Newfoundland#Second World War|Newfoundland]]
*[[Panama during World War II|Panama]]
*[[Military history of the United States during World War II|United States]]
** [[Arizona during World War II|Arizona]]
** [[Nevada during World War II|Nevada]]
** [[New Mexico during World War II|New Mexico]]
** [[Puerto Ricans in World War II|Puerto Rico]]

|group3 = South America
|list3 =
*[[Argentina during World War II|Argentina]]
*[[Vargas Era#World War II|Brazil]]
*[[British Guiana during World War II|British Guiana]]
*[[Colombia during World War II|Colombia]]
* [[Latin America during World War II|Latin America]]
*[[Uruguay during World War II|Uruguay]]
*[[Venezuela during World War II|Venezuela]]

|group4 = Asia
|list4 =
*[[Japanese occupation of Burma|Burma]]
*[[Ceylon in World War II|Ceylon]]
*[[Second Sino-Japanese War|China]]
*[[Japanese occupation of the Dutch East Indies|Dutch East Indies]]
*[[Japanese occupation of Hong Kong|Hong Kong]]
*[[India in World War II|India]]
*[[French Indochina in World War II|Indochina]]
*[[Anglo-Soviet invasion of Iran|Iran]]
*[[Anglo-Iraqi War|Iraq]]
*[[Military history of Japan#Showa Period and World War II|Japan]]
** [[Manchukuo]]
*[[Japanese occupation of Malaya|Malaya]]
*[[Mongolia in World War II|Mongolia]]
*[[Nepal in World War II|Nepal]]
*[[Military history of the Philippines during World War II|Philippines]]
*[[Japanese occupation of British Borneo|Sarawak, Brunei, Labuan, and British North Borneo]]
*[[Japanese occupation of Singapore|Singapore]]
*[[Thailand in World War II|Thailand]]
*[[Single-party period of the Republic of Turkey#Politics before World War II|Turkey]]

|group5 = Europe
|list5 =
*[[Albanian Resistance of World War II|Albania]]
*[[Anschluss|Austria]]
*[[Belgium in World War II|Belgium]]
*[[Military history of Bulgaria during World War II|Bulgaria]]
*[[German occupation of Czechoslovakia|Czechoslovakia]]
*[[Denmark in World War II|Denmark]]
*[[Estonia in World War II|Estonia]]
*[[Military history of Finland during World War II|Finland]]
*[[France during the Second World War|France]]
** [[World War II in the Basque Country|Basque Country]]
*[[Nazi Germany|Germany]]
*[[Military history of Greece during World War II|Greece]]
*[[Hungary in World War II|Hungary]]
*[[Iceland in World War II|Iceland]]
*[[Irish neutrality during World War II|Ireland]]
*[[Military history of Italy during World War II|Italy]]
*[[Soviet occupation of Latvia in 1940|Latvia]]
*[[Liechtenstein in World War II|Liechtenstein]]
*[[Resistance in Lithuania during World War II|Lithuania]]
*[[Luxembourg in World War II|Luxembourg]]
*[[Netherlands in World War II|Netherlands]]
*[[Nordic countries in World War II|Nordic states]]
*[[Occupation of Norway by Nazi Germany|Norway]]
*[[History of Poland (193945)|Poland]]
*[[Portugal in World War II|Portugal]]
*[[Romania in World War II|Romania]]
*[[History of Slovakia#World War II|Slovakia]]
*[[Slovene Lands in World War II|Slovenia]]
*[[Soviet Union in World War II|Soviet Union]]
**[[Azerbaijan in World War II|Azerbaijan]]
** [[Occupation of Belarus by Nazi Germany|Belarus]]
** [[History of Ukraine#World War II|Ukraine]]
*[[Spain during World War II|Spain]]
** [[Galicia and World War II|Galicia]]
*[[Sweden during World War II|Sweden]]
*[[Switzerland during the World Wars|Switzerland]]
*[[Military history of the United Kingdom during World War II|United Kingdom]]
** [[British Empire in World War II|British Empire]]
** [[German occupation of the Channel Islands|Channel Islands]]
** [[Military history of Gibraltar during World War II|Gibraltar]]
*[[Vatican City in World War II|Vatican City]]
*[[World War II in Yugoslavia|Yugoslavia]]

|group6 = Oceania
|list6 =
*[[Military history of Australia during World War II|Australia]]
*[[Japanese occupation of Nauru|Nauru]]
*[[Military history of New Zealand during World War II|New Zealand]]

|below = 
}}&lt;noinclude&gt;
{{collapsible option}}

[[Category:World War II navigational boxes|History by nation]]
&lt;/noinclude&gt;</text>
      <sha1>jeyfz3tloh1jeabz66am96ukpdw1v4a</sha1>
    </revision>
  </page>
  <page>
    <title>Template:WWII timeline</title>
    <ns>10</ns>
    <id>42763463</id>
    <redirect title="Template:WWII timelines" />
    <revision>
      <id>608688708</id>
      <timestamp>2014-05-15T13:46:20Z</timestamp>
      <contributor>
        <username>Sardanaphalus</username>
        <id>427947</id>
      </contributor>
      <comment>Sardanaphalus moved page [[Template:WWII timeline]] to [[Template:WWII timelines]]: More than one timeline linked</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="53">#REDIRECT [[Template:WWII timelines]]
{{R from move}}</text>
      <sha1>f5aocjmaqhzasq6zvof1vqgsg46gten</sha1>
    </revision>
  </page>
  <page>
    <title>Template:WWII timelines</title>
    <ns>10</ns>
    <id>16554409</id>
    <revision>
      <id>791417106</id>
      <parentid>718775192</parentid>
      <timestamp>2017-07-20T04:00:48Z</timestamp>
      <contributor>
        <username>TheFreeWorld</username>
        <id>29980587</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1344">{{Sidebar
| name = WWII timelines
| width = {{{width|auto}}}
| title = [[Timeline of World War II|Timelines]] of [[World War II]]

| heading1 = Chronological
| content1 = [[Timeline of events preceding World War II|Prelude]] {{hlist|([[Events preceding World War II in Asia|in Asia]]|[[Events preceding World War II in Europe|in Europe]])}}
| content2 = {{startflatlist}}
* [[Timeline of World War II (1939)|1939]]
* [[Timeline of World War II (1940)|1940]]
* [[Timeline of World War II (1941)|1941]]
* [[Timeline of World War II (1942)|1942]]
* &lt;br/&gt;[[Timeline of World War II (1943)|1943]]
* [[Timeline of World War II (1944)|1944]]
* [[Timeline of World War II (1945)|1945]]
{{endflatlist}}

| heading3 = By topic
| content3 = {{startplainlist}}
* [[Diplomatic history of World War II|Diplomacy]]
* {{hlist|[[List of military engagements of World War II#Battles|Engagements]]|[[List of World War II military operations|Operations]]}}
* [[List of air operations during the Battle of Europe|Battle of Europe air operations]]
* [[Timeline of the Eastern Front of World War II|Eastern Front]]
* [[Timeline of the Manhattan Project|Manhattan Project]]
* [[Timeline of the United Kingdom home front during World War II|United Kingdom home front]]
{{endplainlist}}

}}&lt;noinclude&gt;

[[Category:World War II navigational boxes|Timelines]]
&lt;/noinclude&gt;</text>
      <sha1>3uvr38iufhxt8h4z2mw10hz1sfwby3b</sha1>
    </revision>
  </page>
  <page>
    <title>Template:World War II</title>
    <ns>10</ns>
    <id>2533769</id>
    <revision>
      <id>800576053</id>
      <parentid>796231876</parentid>
      <timestamp>2017-09-14T11:40:09Z</timestamp>
      <contributor>
        <username>Sunil060902</username>
        <id>5556708</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="16730">{{Military navigation
| name = World War II
| style = wide
| state = {{{state&lt;includeonly&gt;|{{{1|collapsed}}}&lt;/includeonly&gt;}}}
| bodyclass = hlist
| title = [[World War II]]
| category = World War II

| above =
* [[Asiatic-Pacific Theater|Asia and the Pacific]]
**[[Second Sino-Japanese War|China]]
**[[South-East Asian theatre of World War II|South-East Asia]]
**[[Pacific Ocean theater of World War II|North and Central Pacific]]
**[[South West Pacific theatre of World War II|South-West Pacific]]
* [[European theatre of World War II|Europe]]
**[[Western Front (World War II)|Western]]
**[[Eastern Front (World War II)|Eastern]]
* [[Mediterranean and Middle East theatre of World War II|Mediterranean and Middle East]]
** [[North African Campaign|North Africa]]
** [[East African Campaign (World War II)|East Africa]]
** [[Italian_Campaign_(World_War_II)|Italy]]
* [[French West Africa in World War II|West Africa]]
* [[Battle of the Atlantic|Atlantic]]
* [[American Theater (World War II)|North America]]
* [[Latin America during World War II|South America]]

* [[World War II casualties|Casualties]]
* [[List of military engagements of World War II|Military engagements]]
* [[List of Allied World War II conferences|Conferences]]
* [[Commanders of World War II|Commanders]]


&lt;!--------------------- Participants -----------------------&gt;

| group1 = [[World War II by country|Participants]]
| list1 =
 {{Military navigation|border=child|style=wide
  | groupwidth = 9.0em

  | group1 = {{longitem|[[Allies of World War II|Allies]]&lt;br /&gt;{{nobold|([[Allied leaders of World War II|leaders]])}}}}
  | list1 =
* [[Military history of Australia during World War II|Australia]]
* [[Belgium in World War II|Belgium]]
* [[Military history of Brazil#World War II|Brazil]]
* [[Military history of Canada during World War II|Canada]]
* [[Second Sino-Japanese War|China]]
* [[Cuba during World War II|Cuba]]
* [[German occupation of Czechoslovakia|Czechoslovakia]]
* [[Denmark in World War II|Denmark]]
* [[Second Italo-Ethiopian War|Ethiopia]]
* [[France during World War II|France]] 
* [[Free France]] (from June 1940)
* [[Military history of Greece during World War II|Greece]]
* [[India in World War II|India]]
* [[Italian Co-belligerent Army|Italy]] (from September 1943)
* [[Luxembourg in World War II|Luxembourg]]
* [[Military_history_of_Mexico#World_War_II|Mexico]]
* [[Military history of the Netherlands during World War II|Netherlands]]
* [[Military history of New Zealand during World War II|New Zealand]]
* [[Norwegian Campaign|Norway]]
* [[Military history of the Philippines during World War II|Philippines]] (Commonwealth)
* [[History of Poland (193945)|Poland]]
* [[Military history of South Africa during World War II|South Africa]]
* [[Southern Rhodesia in World War II|Southern Rhodesia]]
* [[Soviet Union in World War II|Soviet Union]]
* [[Military history of the United Kingdom during World War II|United Kingdom]]
* [[Military history of the United States during World War II|United States]]
**[[Puerto Ricans in World War II|Puerto Rico]]
* [[World War II in Yugoslavia|Yugoslavia]]

  | group2 = {{longlink|[[Axis powers|Axis and&lt;br/&gt;Axis-aligned]]&lt;br/&gt;{{nobold|([[Axis leaders of World War II|leaders]])}}}}
  | list2 =
* [[Albanian Kingdom (193943)|Albania]]
* [[Military history of Bulgaria during World War II|Bulgaria]]
* [[Reorganized National Government of the Republic of China]]
* [[Independent State of Croatia]]
* [[Military history of Finland during World War II|Finland]]
* [[Nazi Germany|Germany]]
* [[Hungary in World War II|Hungary]]
* [[Indian National Army|Free India]]
* [[Anglo-Iraqi War|Iraq]]
* [[Military history of Italy during World War II|Italy]] (until September 1943)
* [[Italian Social Republic]]
* [[Empire_of_Japan#Late_Sh.C5.8Dwa_.281937.E2.80.931947.29_.E2.80.93_Expansionism|Japan]]
* [[Manchukuo]]
* [[Second Philippine Republic|Philippines]] (Second Republic)
* [[Romania in World War II|Romania]]
* [[Slovak Republic (19391945)|Slovakia]]
* [[Thailand in World War II|Thailand]]&lt;br&gt;
* [[Vichy France]] 
** [[Armed neutrality]]

  | group3 = [[Resistance during World War II|Resistance]]
  | list3 =
* [[Albanian resistance during World War II|Albania]]
* [[Austrian Resistance|Austria]]
* [[Belgian Resistance|Belgium]]
* [[Bulgarian resistance movement during World War II|Bulgaria]]
* [[Resistance in German-occupied Czechoslovakia|Czech lands]]
* [[Danish resistance movement|Denmark]]
* [[Estonian anti-German resistance movement 194144|Estonia]]
* [[East African Campaign (World War II)#Ethiopian irregular forces|Ethiopia]]
* [[French Resistance|France]]
* [[German resistance to Nazism|Germany]]
* [[Greek Resistance|Greece]]
* [[Japanese occupation of Hong Kong#Anti-Japanese resistance|Hong Kong]]
* [[Italian resistance movement|Italy]]
* [[Japanese dissidence during the early Shwa period|Japan]]
* [[Jewish resistance in German-occupied Europe|Jewish]]
* [[Korean Liberation Army|Korea]]
* [[Latvian anti-Nazi resistance movement 194145|Latvia]]
* [[Resistance in Lithuania during World War II|Lithuania]]
* [[Luxembourg Resistance|Luxembourg]]
* [[Malayan Peoples' Anti-Japanese Army|Malaya]]
* [[Dutch resistance|Netherlands]]
* [[Northeast Anti-Japanese United Army|Northeast China]]
* [[Norwegian resistance movement|Norway]]
* [[Philippine resistance against Japan|Philippines]]
* [[Polish resistance movement in World War II|Poland]]
** [[Cursed soldiers|Anti-communist]]
* [[Romanian anti-communist resistance movement|Romania]]
* [[Free Thai Movement|Thailand]]
* [[Soviet partisans|Soviet Union]]
* [[Slovak National Uprising|Slovakia]]
* [[Ukrainian Insurgent Army|Western Ukraine]]
* [[Viet Minh|Vietnam]]
* [[Yugoslav Partisans|Yugoslavia]]
** [[Chetniks|Monarchists]]
 }}


&lt;!----------------------- Timeline -------------------------&gt;

| group2 = [[Timeline of World War II|Timeline]]
| list2 =
 {{Military navigation|border=child|style=wide
  | groupwidth = 9.0em

  | group1 = [[Causes of World War II|Prelude]]
  | list1 =
* [[Abyssinia Crisis|Africa]]
* [[Events preceding World War II in Asia|Asia]]
* [[Events preceding World War II in Europe|Europe]]

  | group2 = [[Timeline of World War II (1939)|1939]]
  | list2 =
* [[Invasion of Poland|Poland]]
* [[Phoney War]]
* [[Winter War]]
* [[Battle of the Atlantic|Atlantic]]
* [[Battle of Changsha (1939)|Changsha]]
* [[193940 Winter Offensive|China]]

  | group3 = [[Timeline of World War II (1940)|1940]]
  | list3 =
* [[Operation Weserbung|''Weserbung'']]
* [[Battle of the Netherlands|Netherlands]]
* [[Battle of Belgium|Belgium]]
* [[Battle of France|France]]
** [[Armistice of 22 June 1940]]
* [[Battle of Britain|Britain]]
* [[Western Desert Campaign|North Africa]]
* [[French West Africa in World War II|West Africa]]
* [[Italian conquest of British Somaliland|British Somaliland]]
* [[Hundred Regiments Offensive|North China]]
* [[Occupation of the Baltic states|Baltic States]]
* [[Soviet occupation of Bessarabia and Northern Bukovina|Moldova]]
* [[Japanese invasion of French Indochina|Indochina]]
* [[Greco-Italian War|Greece]]
* [[Operation Compass|''Compass'']]

  | group4 = [[Timeline of World War II (1941)|1941]]
  | list4 =
* [[East African Campaign (World War II)|East Africa]]
* [[World War II in Yugoslavia|Yugoslavia]]
* [[Battle of Shanggao|Shanggao]]
* [[Battle of Greece|Greece]]
* [[Battle of Crete|Crete]]
* [[Anglo-Iraqi War|Iraq]]
* [[Operation Barbarossa|Soviet Union (''Barbarossa'')]]
* [[Continuation War|Finland]]
* [[June Uprising in Lithuania|Lithuania]]
* [[SyriaLebanon Campaign|Syria and Lebanon]]
* [[Battle of Kiev (1941)|Kiev]]
* [[Anglo-Soviet invasion of Iran|Iran]]
* [[Siege of Leningrad|Leningrad]]
* [[Battle of Moscow|Moscow]]
* [[Siege of Sevastopol (194142)|Sevastopol]]
* [[Attack on Pearl Harbor|Pearl Harbor]]
** The outbreak of the [[Pacific War]]
* [[Battle of Hong Kong|Hong Kong]]
* [[Philippines Campaign (194142)|Philippines]]
* [[Battle of Changsha (1941)|Changsha]]
* [[Malayan Campaign|Malaya]]
* [[Battle of Borneo (194142)|Borneo (194142)]]

  | group5 = [[Timeline of World War II (1942)|1942]]
  | list5 =
* [[Japanese conquest of Burma|Burma]]
* [[Battle of Changsha (1942)|Changsha]]
* [[Battle of the Java Sea|Java Sea]]
* [[Battle of the Coral Sea|Coral Sea]]
* [[Battle of Gazala|Gazala]]
* [[Battle of Dutch Harbor|Dutch Harbor]]
* [[Japanese occupation of Attu| Attu (occupation)]]
* [[Japanese occupation of Kiska|Kiska]]
* [[Zhejiang-Jiangxi campaign|Zhejiang-Jiangxi]]
* [[Battle of Midway|Midway]]
* [[Battle of Rzhev, Summer 1942|Rzhev]]
* ''[[Case Blue|Blue]]''
* [[Battle of Stalingrad|Stalingrad]]
* [[Battle of Singapore|Singapore]]
* [[Dieppe Raid|Dieppe]]
* [[Second Battle of El Alamein|El Alamein]]
* [[Guadalcanal Campaign|Guadalcanal]]
* [[Operation Torch|''Torch'']]

  | group6 = [[Timeline of World War II (1943)|1943]]
  | list6 =
* [[Tunisian Campaign|Tunisia]]
* [[Battle of Kursk|Kursk]]
* [[Battle of Smolensk (1943)|Smolensk]]
* [[Solomon Islands campaign |Solomon Islands]]
* [[Battle of Attu | Attu]]
* [[Allied invasion of Sicily|Sicily]]
* [[Operation Cottage| ''Cottage'']]
* [[Battle of the Dnieper|Lower Dnieper]]
* [[Allied invasion of Italy|Italy]]
** [[Armistice of Cassibile]]
* [[Gilbert and Marshall Islands campaign|Gilbert and Marshall Islands]]
* [[Burma Campaign| Burma]]
* [[Battle of Northern Burma and Western Yunnan| Northern Burma and Western Yunnan]]
* [[Battle of Changde|Changde]]

  | group7 = [[Timeline of World War II (1944)|1944]]
  | list7 =
* [[Battle of Monte Cassino|Monte Cassino]]{{\}}[[Battle of Anzio|''Shingle'']]
* [[Battle of Narva (1944)|Narva]]
* [[Battle of the KorsunCherkassy Pocket|KorsunCherkassy]]
* [[Operation Tempest|''Tempest'']]
* [[Operation Ichi-Go|''Ichi-Go'']]
* [[Operation Overlord|''Overlord'']]
* [[Normandy landings|''Neptune'']]
* [[Invasion of Normandy|Normandy]]
* [[Mariana and Palau Islands campaign|Mariana and Palau]]
* [[Operation Bagration|''Bagration'']]
* [[LvovSandomierz Offensive|Western Ukraine]]
* [[Battle of Tannenberg Line|Tannenberg Line]]
* [[Warsaw Uprising|Warsaw]]
* [[JassyKishinev Offensive|Eastern Romania]]
* [[Belgrade Offensive|Belgrade]]
* [[Liberation of Paris|Paris]]
* [[Operation Dragoon|''Dragoon'']]
* [[Gothic Line]]
* [[Operation Market Garden|''Market Garden'']]
* [[Tallinn Offensive|Estonia]]
* [[Operation Crossbow|''Crossbow'']]
* [[Combined Bomber Offensive|''Pointblank'']]
* [[Lapland War|Lapland]]
* [[Budapest Offensive|Hungary]]
* [[Battle of Leyte Gulf|Leyte]]
* [[Battle of the Bulge|Ardennes]]
** [[Operation Bodenplatte|''Bodenplatte'']]
* [[Philippines Campaign (19441945)|Philippines (19441945)]]
* [[Burma Campaign 194445|Burma (194445)]]

  | group8 = [[Timeline of World War II (1945)|1945]]
  | list8 =
* [[VistulaOder Offensive|VistulaOder]]
* [[Battle of Iwo Jima|Iwo Jima]]
* [[Western Allied invasion of Germany|Western invasion of Germany]]
* [[Battle of Okinawa|Okinawa]]
* [[Spring 1945 offensive in Italy|Italy (Spring 1945)]]
* [[Borneo campaign (1945)|Borneo]]
* [[Syrmian Front]]
* [[Battle of Berlin|Berlin]]
* [[Prague Offensive|Czechoslovakia]]
* [[Siege of Budapest|Budapest]]
* [[Battle of West Hunan|West Hunan]]
* [[Second Guangxi Campaign|Guangxi]]
* [[End of World War II in Europe|Surrender of Germany]]
* [[Project Hula]]
* [[Soviet invasion of Manchuria|Manchuria]]
* [[Battle of Manila (1945)|Manila]]
* [[Borneo campaign (1945)|Borneo]]
* [[Raid on Taihoku|Taipei]]
* [[Atomic bombings of Hiroshima and Nagasaki|Atomic bombings]]
** [[Debate over the atomic bombings of Hiroshima and Nagasaki|Debate]]
* [[Invasion of the Kuril Islands|Kuril Islands]]
** [[Battle of Shumshu|Shumshu]]
* [[Surrender of Japan]]
** [[End of World War II in Asia]]
 }}


&lt;!----------------------- Aspects --------------------------&gt;

| group5 = Aspects
| list5 =
 {{Military navigation|border=child|style=wide
  | groupwidth = 9.0em

  | group1 = General
  | list1 = {{Military navigation|border=child|style=wide
| group1 = Famines
| list1 = 
* [[Bengal famine of 1943]]
* [[Chinese famine of 194243]]
* [[Great Famine (Greece)|Greek Famine of 1941-1944]]
* [[Dutch famine of 194445]]
* [[Vietnamese Famine of 1945]]

| list2 =
* [[Air warfare of World War II]]
* [[Blitzkrieg]]
* [[Comparative officer ranks of World War II|Comparative military ranks]]
* [[World War II cryptography|Cryptography]]
* [[Diplomatic history of World War II|Diplomacy]]
* [[Home front during World War II|Home front]]
** [[United States home front during World War II|United States]]
** [[Australian home front during World War II|Australian]]
** [[Timeline of the United Kingdom home front during World War II|United Kingdom]]
* [[Lend-Lease]]
* [[Manhattan Project]]
* [[List of military awards of World War II|Military awards]]
* [[Lists of World War II military equipment|Military equipment]]
* [[Military production during World War II|Military production]]
* [[Nazi plunder]]
* [[:Category:Opposition to World War II|Opposition]]
* [[Technology during World War II|Technology]]
** [[Allied technological cooperation during World War II|Allied cooperation]]
* [[Total war#World War II|Total war]]
* [[Strategic bombing during World War II|Strategic bombing]]
* [[List of World War II puppet states|Puppet states]]
* [[Women in World War II|Women]]
* [[Art and World War II]]
}}
  | group2 = [[Aftermath of World War II|Aftermath]]
  | list2 =
* [[Flight and expulsion of Germans (194450)|Expulsion of Germans]]
* [[Operation Paperclip|Operation ''Paperclip'']]
* [[Operation Osoaviakhim|Operation ''Osoaviakhim'']]
* [[Operation Keelhaul|Operation ''Keelhaul'']]
* [[Allied-occupied Germany|Occupation of Germany]]
* [[OderNeisse line|Territorial changes of Germany]]
* [[Military occupations by the Soviet Union|Soviet occupations]]
** [[Soviet occupation of Romania|Romania]]
** [[Polish People's Republic|Poland]]
** [[RussianHungarian relations, 19451991|Hungary]]
** [[Occupation of the Baltic states|Baltic States]]
* [[Occupation of Japan]]
* [[First Indochina War]]
* [[Indonesian National Revolution]]
* [[Cold War]]
* [[Decolonization]]
* [[Treaty on the Final Settlement with Respect to Germany]]
* [[World War II in popular culture|Popular culture]]

  | group3 = [[War crime]]s
  | list3 =
* [[Allied war crimes during World War II|Allied war crimes]]
** [[Soviet war crimes#World War II|Soviet war crimes]]
** [[British_war_crimes#World_War_II|British war crimes]]
** [[United States war crimes#World War II|United States war crimes]]
* [[German war crimes#World War II|German]] ([[Forced labour under German rule during World War II|Forced labour]]){{\}}[[War crimes of the Wehrmacht|''Wehrmacht'' war crimes]]
** [[The Holocaust|Holocaust]]
** [[Aftermath of the Holocaust|Aftermath]]
** [[International response to the Holocaust|Response]]
** [[Nuremberg trials|Prosecution]]
* [[Italian war crimes]]
* [[Japanese war crimes]]
** [[Unit 731]]
** [[International Military Tribunal for the Far East|Prosecution]]
* Croatian war crimes
** [[World War II persecution of Serbs#Ustae persecution in the Independent State of Croatia|against the Serbs]]
** [[The Holocaust in the Independent State of Croatia|against the Jews]]
* [[History_of_the_Jews_in_Romania#The_Holocaust|Romanian war crimes]]

  | group4 = [[Wartime sexual violence|Wartime&lt;br/&gt;sexual violence]]
  | list4 =
* [[German military brothels in World War II|German military brothels]]
* [[German camp brothels in World War II|Camp brothels]]
* [[Rape during the occupation of Japan]]
* [[Sook Ching]]
* [[Comfort women]]
* [[Nanking Massacre|Rape of Nanking]]
* [[Rape of Manila]]
* [[Rape during the occupation of Germany]]
* [[Rape during the liberation of France]]
* [[Rape during the liberation of Poland]]
  | group5 = [[Prisoner of war|Prisoners]]
  | list5 =
* [[Finnish prisoners of war in the Soviet Union]]
* [[German prisoners of war in the Soviet Union]]
* [[German prisoners of war in the United States]]
* [[Italian prisoners of war in the Soviet Union]]
* [[Japanese prisoners of war in the Soviet Union]]
* [[Japanese prisoners of war in World War II]]
* [[German mistreatment of Soviet prisoners of war]]
* [[Polish prisoners-of-war in the Soviet Union after 1939|Polish prisoners of war in the Soviet Union]]
* [[Romanian prisoners of war in the Soviet Union]]
 }}

| below =
* [[Bibliography of World War II|Bibliography]]
* [[:Category:World War II|Category]]
* [[Portal:World War II|Portal]]

}}&lt;noinclude&gt;
{{pp-template}}

{{collapsible option |statename=optional |default=collapsed}}

[[Category:World War II navigational boxes| ]]
[[Category:History and events navigational boxes]]
&lt;/noinclude&gt;</text>
      <sha1>plje26gfol2h0jjt4gu3ue7kxtkz4ic</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Yesno</title>
    <ns>10</ns>
    <id>22255088</id>
    <revision>
      <id>669640856</id>
      <parentid>391649268</parentid>
      <timestamp>2015-07-02T14:46:21Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <comment>add support for true/false, per request</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="355">{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#switch: {{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;lc: {{{1|}}} }}
 |no
 |n
 |false
 |0        = {{{no|&lt;!-- null --&gt;}}}
 |         = {{{blank|{{{no|&lt;!-- null --&gt;}}}}}}
 |        = {{{|}}}
 |yes
 |y
 |true
 |1        = {{{yes|yes}}}
 |#default = {{{def|{{{yes|yes}}}}}}
}}&lt;noinclude&gt;
{{Documentation}}
&lt;/noinclude&gt;</text>
      <sha1>2mck1f9936qc4xwrhvyhyan994ced9o</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Yesno-no</title>
    <ns>10</ns>
    <id>48375573</id>
    <revision>
      <id>804450734</id>
      <parentid>772215751</parentid>
      <timestamp>2017-10-09T02:26:13Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Template:Yesno-no]]&quot;: [[WP:High-risk templates|Highly visible template]]; 282,000+ transclusions ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="317">&lt;noinclude&gt;{{pp-template|small=yes}}&lt;/noinclude&gt;{{safesubst:&lt;noinclude /&gt;yesno|{{{1}}}|yes={{{yes|yes}}}|no={{{no|no}}}|blank={{{blank|no}}}|={{{|no}}}|def={{{def|no}}}}}&lt;noinclude&gt;
{{Documentation|Template:Yesno/doc}}
&lt;!--Categories go in the doc page referenced above; interwikis go in Wikidata.--&gt;
&lt;/noinclude&gt;</text>
      <sha1>axdkqes1fzx1wl8jcihjv6i0yujbx8h</sha1>
    </revision>
  </page>
  <page>
    <title>Template:\</title>
    <ns>10</ns>
    <id>16258728</id>
    <revision>
      <id>695047466</id>
      <parentid>464090629</parentid>
      <timestamp>2015-12-13T11:55:37Z</timestamp>
      <contributor>
        <username>Graeme Bartlett</username>
        <id>38427</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Template:\: [[WP:High-risk templates|Highly visible template]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="125">&amp;nbsp;/&amp;#32;&lt;noinclude&gt;

{{Documentation}}
&lt;!-- Add categories and interwikis to the /doc subpage, not here! --&gt;
&lt;/noinclude&gt;</text>
      <sha1>gfvlsjgnfxn02vdp58sww0lo44n62ht</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Age</title>
    <ns>828</ns>
    <id>38970907</id>
    <revision>
      <id>804712327</id>
      <parentid>778639947</parentid>
      <timestamp>2017-10-10T17:47:25Z</timestamp>
      <contributor>
        <username>MusikAnimal</username>
        <id>14882394</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Age]]&quot;: [[WP:High-risk templates|High-risk Lua module]]; 1,000+ transclusions ([Edit=Require autoconfirmed or confirmed access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="19706">-- Implement various &quot;age of&quot; and other date-related templates.

local _Date, _current_date
local function get_exports(frame)
	-- Return objects exported from the date module or its sandbox.
	if not _Date then
		local sandbox = frame:getTitle():find('sandbox', 1, true) and '/sandbox' or ''
		local datemod = require('Module:Date' .. sandbox)
		_Date = datemod._Date
		_current_date = datemod._current
	end
	return _Date, _current_date
end

local function collection()
	-- Return a table to hold items.
	return {
		n = 0,
		add = function (self, item)
			self.n = self.n + 1
			self[self.n] = item
		end,
		join = function (self, sep)
			return table.concat(self, sep)
		end,
	}
end

local function strip_to_nil(text)
	-- If text is a string, return its trimmed content, or nil if empty.
	-- Otherwise return text (which may, for example, be nil).
	if type(text) == 'string' then
		text = text:match('(%S.-)%s*$')
	end
	return text
end

local function yes(parameter)
	-- Return true if parameter should be interpreted as &quot;yes&quot;.
	-- Do not want to accept mixed upper/lowercase unless done by current templates.
	-- Need to accept &quot;on&quot; because &quot;round=on&quot; is wanted.
	return ({ y = true, yes = true, on = true })[parameter]
end

local function message(msg, nocat)
	-- Return formatted message text for an error.
	-- Can append &quot;#FormattingError&quot; to URL of a page with a problem to find it.
	local anchor = '&lt;span id=&quot;FormattingError&quot;&gt;&lt;/span&gt;'
	local category
	if not nocat and mw.title.getCurrentTitle():inNamespaces(0, 10) then
		-- Category only in namespaces: 0=article, 10=template.
		category = '[[Category:Age error]]'
	else
		category = ''
	end
	return anchor ..
		'&lt;strong class=&quot;error&quot;&gt;Error: ' ..
		mw.text.nowiki(msg) ..
		'&lt;/strong&gt;' ..
		category
end

local function formatnumber(number)
	-- Return the given number formatted with commas as group separators,
	-- given that the number is an integer.
	local numstr = tostring(number)
	local length = #numstr
	local places = collection()
	local pos = 0
	repeat
		places:add(pos)
		pos = pos + 3
	until pos &gt;= length
	places:add(length)
	local groups = collection()
	for i = places.n, 2, -1 do
		local p1 = length - places[i] + 1
		local p2 = length - places[i - 1]
		groups:add(numstr:sub(p1, p2))
	end
	return groups:join(',')
end

local function make_sort(value, sortable)
	-- Return a sort key in a span if specified.
	-- Assume value is a valid number which has not overflowed.
	if sortable == 'sortable_on' or sortable == 'sortable_debug' then
		local sortkey
		if value == 0 then
			sortkey = '5000000000000000000'
		else
			local mag = math.floor(math.log10(math.abs(value)) + 1e-14)
			local prefix
			if value &gt; 0 then
				prefix = 7000 + mag
			else
				prefix = 2999 - mag
				value = value + 10^(mag+1)
			end
			sortkey = string.format('%d', prefix) .. string.format('%015.0f', math.floor(value * 10^(14-mag)))
		end
		local lhs = sortable == 'sortable_debug' and
			'&lt;span style=&quot;border:1px solid;display:inline;&quot; class=&quot;sortkey&quot;&gt;' or
			'&lt;span style=&quot;display:none&quot; class=&quot;sortkey&quot;&gt;'
		return lhs .. sortkey .. '&lt;/span&gt;'
	end
end

local translate_parameters = {
	abbr = {
		off = 'abbr_off',
		on = 'abbr_on',
	},
	disp = {
		age = 'disp_age',
		raw = 'disp_raw',
	},
	format = {
		raw = 'format_raw',
		commas = 'format_commas',
	},
	round = {
		on = 'on',
		yes = 'on',
		months = 'ym',
		weeks = 'ymw',
		days = 'ymd',
		hours = 'ymdh',
	},
	sep = {
		comma = 'sep_comma',
		[','] = 'sep_comma',
		serialcomma = 'sep_serialcomma',
		space = 'sep_space',
	},
	show = {
		hide = { id = 'hide' },
		y = { 'y', id = 'y' },
		ym = { 'y', 'm', id = 'ym' },
		ymd = { 'y', 'm', 'd', id = 'ymd' },
		ymw = { 'y', 'm', 'w', id = 'ymw' },
		ymwd = { 'y', 'm', 'w', 'd', id = 'ymwd' },
		yd = { 'y', 'd', id = 'yd', keepzero = true },
		m = { 'm', id = 'm' },
		md = { 'm', 'd', id = 'md' },
		w = { 'w', id = 'w' },
		wd = { 'w', 'd', id = 'wd' },
		h = { 'H', id = 'h' },
		hm = { 'H', 'M', id = 'hm' },
		hms = { 'H', 'M', 'S', id = 'hms' },
		d = { 'd', id = 'd' },
		dh = { 'd', 'H', id = 'dh' },
		dhm = { 'd', 'H', 'M', id = 'dhm' },
		dhms = { 'd', 'H', 'M', 'S', id = 'dhms' },
		ymdh = { 'y', 'm', 'd', 'H', id = 'ymdh' },
		ymdhm = { 'y', 'm', 'd', 'H', 'M', id = 'ymdhm' },
		ymwdh = { 'y', 'm', 'w', 'd', 'H', id = 'ymwdh' },
		ymwdhm = { 'y', 'm', 'w', 'd', 'H', 'M', id = 'ymwdhm' },
	},
	sortable = {
		off = false,
		on = 'sortable_on',
		debug = 'sortable_debug',
	},
}

local function date_extract(frame)
	-- Return part of a date after performing an optional operation.
	local Date = get_exports(frame)
	local args = frame:getParent().args
	local parms = {}
	for i, v in ipairs(args) do
		parms[i] = v
	end
	if yes(args.fix) then
		table.insert(parms, 'fix')
	end
	if yes(args.partial) then
		table.insert(parms, 'partial')
	end
	local date = Date(unpack(parms))
	if not date then
		return message('Need valid date')
	end
	local add = strip_to_nil(args.add)
	if add then
		for item in add:gmatch('%S+') do
			date = date + item
			if not date then
				return message('Cannot add &quot;' .. item .. '&quot;')
			end
		end
	end
	local prefix, result
	local sortable = translate_parameters.sortable[args.sortable]
	if sortable then
		local value = (date.partial and date.partial.first or date).jdz
		prefix = make_sort(value, sortable)
	end
	local show = strip_to_nil(args.show) or 'dmy'
	if show ~= 'hide' then
		result = date[show]
		if result == nil then
			result = date:text(show)
		elseif type(result) == 'boolean' then
			result = result and '1' or '0'
		else
			result = tostring(result)
		end
	end
	return (prefix or '') .. (result or '')
end

local function make_text(values, components, names, options)
	-- Return wikitext representing an age or duration.
	local text = collection()
	local count = #values
	local sep = names.sep or ''
	for i, v in ipairs(values) do
		-- v is a number (say 4 for 4 years), or a table ({4,5} for 4 or 5 years).
		local islist = type(v) == 'table'
		if (islist or v &gt; 0) or (text.n == 0 and i == count) or (text.n &gt; 0 and components.keepzero) then
			local fmt, vstr
			if i == 1 and options.format == 'format_commas' then
				-- Numbers after the first should be small and not need formatting.
				fmt = formatnumber
			else
				fmt = tostring
			end
			if islist then
				local join = options.range == 'dash' and '' or '&amp;nbsp;or '
				vstr = fmt(v[1]) .. join .. fmt(v[2])
			else
				vstr = fmt(v)
			end
			local name = names[components[i]]
			if name then
				local plural = names.plural
				if not plural or (islist and v[2] or v) == 1 then
					plural = ''
				end
				text:add(vstr .. sep .. name .. plural)
			else
				text:add(vstr)
			end
		end
	end
	local first, last
	if options.join == 'sep_space' then
		first = ' '
		last = ' '
	elseif options.join == 'sep_comma' then
		first = ', '
		last = ', '
	elseif options.join == 'sep_serialcomma' and text.n &gt; 2 then
		first = ', '
		last = ', and '
	else
		first = ', '
		last = ' and '
	end
	for i, v in ipairs(text) do
		if i &lt; text.n then
			text[i] = v .. (i + 1 &lt; text.n and first or last)
		end
	end
	local sign = ''
	if options.isnegative then
		-- Do not display negative zero.
		if text.n &gt; 1 or (text.n == 1 and text[1]:sub(1, 1) ~= '0' ) then
			if options.format == 'format_raw' then
				sign = '-'  -- plain hyphen so result can be used in a calculation
			else
				sign = ''  -- Unicode U+2212 MINUS SIGN
			end
		end
	end
	return
		(options.prefix or '') ..
		sign ..
		text:join() ..
		(options.suffix or '')
end

local function date_difference(parms)
	-- Return a formatted date difference using the given parameters
	-- which have been validated.
	local names = {
		abbr_off = {
			plural = 's',
			sep = '&amp;nbsp;',
			y = 'year',
			m = 'month',
			w = 'week',
			d = 'day',
			H = 'hour',
			M = 'minute',
			S = 'second',
		},
		abbr_on = {
			y = 'y',
			m = 'm',
			w = 'w',
			d = 'd',
			H = 'h',
			M = 'm',
			S = 's',
		},
		abbr_infant = {      -- for {{age for infant}}
			plural = 's',
			sep = '&amp;nbsp;',
			y = 'yr',
			m = 'mo',
			w = 'wk',
			d = 'day',
			H = 'hr',
			M = 'min',
			S = 'sec',
		},
		abbr_raw = {},
	}
	local diff = parms.diff  -- must be a valid date difference
	local show = parms.show  -- may be nil; default is set below
	local abbr = parms.abbr or 'abbr_off'
	local default_join
	if abbr ~= 'abbr_off' then
		default_join = 'sep_space'
	end
	if not show then
		show = 'ymd'
		if parms.disp == 'disp_age' then
			if diff.years &lt; 3 then
				default_join = 'sep_space'
				if diff.years &gt;= 1 then
					show = 'ym'
				else
					show = 'md'
				end
			else
				show = 'y'
			end
		end
	end
	if type(show) ~= 'table' then
		show = translate_parameters.show[show]
	end
	if parms.disp == 'disp_raw' then
		default_join = 'sep_space'
		abbr = 'abbr_raw'
	elseif parms.want_sc then
		default_join = 'sep_serialcomma'
	end
	local diff_options = {
		round = parms.round,
		duration = parms.want_duration,
		range = parms.range and true or nil,
	}
	local prefix
	if parms.sortable then
		local value = diff.age_days + (parms.want_duration and 1 or 0)  -- days and fraction of a day
		if diff.isnegative then
			value = -value
		end
		prefix = make_sort(value, parms.sortable)
	end
	local text_options = {
		prefix = prefix,
		suffix = parms.suffix,  -- not currently used
		format = parms.format,
		join = parms.sep or default_join,
		isnegative = diff.isnegative,
		range = parms.range,
	}
	if show.id == 'hide' then
		return prefix or ''
	end
	local values = { diff:age(show.id, diff_options) }
	if values[1] then
		return make_text(values, show, names[abbr], text_options)
	end
	return message('Parameter show=' .. show.id .. ' is not supported here')
end

local function get_dates(frame, getopt)
	-- Parse template parameters and return one of:
	-- * date         (a date table, if single)
	-- * date1, date2 (two date tables, if not single)
	-- * text         (a string error message)
	-- A missing date is replaced with the current date.
	-- If want_mixture is true, a missing date component is replaced
	-- from the current date, so can get a bizarre mixture of
	-- specified/current y/m/d as has been done by some &quot;age&quot; templates.
	-- Some results may be placed in table getopt.
	local Date, current_date = get_exports(frame)
	getopt = getopt or {}
	local fix = getopt.fix and 'fix' or ''
	local partial = getopt.range and 'partial' or ''
	local args = frame:getParent().args
	local fields = {}
	local is_named = args.year or args.year1 or args.year2 or
		args.month or args.month1 or args.month2 or
		args.day or args.day1 or args.day2
	if is_named then
		fields[1] = args.year1 or args.year
		fields[2] = args.month1 or args.month
		fields[3] = args.day1 or args.day
		fields[4] = args.year2
		fields[5] = args.month2
		fields[6] = args.day2
	else
		for i = 1, 6 do
			fields[i] = args[i]
		end
	end
	local imax = 0
	for i = 1, 6 do
		fields[i] = strip_to_nil(fields[i])
		if fields[i] then
			imax = i
		end
	end
	local single = getopt.single
	local dates = {}
	if is_named or imax &gt; 2 then
		local nr_dates = single and 1 or 2
		if getopt.want_mixture then
			-- Cannot be partial since empty fields are set from current.
			local components = { 'year', 'month', 'day' }
			for i = 1, nr_dates * 3 do
				fields[i] = fields[i] or current_date[components[i &gt; 3 and i - 3 or i]]
			end
			for i = 1, nr_dates do
				local index = i == 1 and 1 or 4
				dates[i] = Date(fields[index], fields[index+1], fields[index+2])
			end
		else
			for i = 1, nr_dates do
				local index = i == 1 and 1 or 4
				local y, m, d = fields[index], fields[index+1], fields[index+2]
				if (partial and y) or (y and m and d) then
					dates[i] = Date(fix, partial, y, m, d)
				elseif not (y or m or d) then
					dates[i] = Date('currentdate')
				end
			end
		end
	else
		getopt.textdates = true
		dates[1] = Date(fix, partial, fields[1] or 'currentdate')
		if not single then
			dates[2] = Date(fix, partial, fields[2] or 'currentdate')
		end
	end
	if not dates[1] then
		return message('Need valid year, month, day')
	end
	if single then
		return dates[1]
	end
	if not dates[2] then
		return message('Second date should be year, month, day')
	end
	return dates[1], dates[2]
end

local function age_generic(frame)
	-- Return the result required by the specified template.
	-- Can use sortable=x where x = on/off/debug in any supported template.
	-- Some templates default to sortable=on but can be overridden with sortable=off.
	local name = frame.args.template
	if not name then
		return message('The template invoking this must have &quot;|template=x&quot; where x is the wanted operation')
	end
	local args = frame:getParent().args
	local specs = {
		age_days = {                -- {{age in days}}
			show = 'd',
			disp = 'disp_raw',
		},
		age_days_nts = {            -- {{age in days nts}}
			show = 'd',
			disp = 'disp_raw',
			format = 'format_commas',
			sortable = 'on',
		},
		duration_days = {           -- {{duration in days}}
			show = 'd',
			disp = 'disp_raw',
			duration = true,
		},
		duration_days_nts = {       -- {{duration in days nts}}
			show = 'd',
			disp = 'disp_raw',
			format = 'format_commas',
			sortable = 'on',
			duration = true,
		},
		age_full_years = {          -- {{age}}
			show = 'y',
			abbr = 'abbr_raw',
		},
		age_full_years_nts = {      -- {{age nts}}
			show = 'y',
			abbr = 'abbr_raw',
			format = 'format_commas',
			sortable = 'on',
		},
		age_in_years = {            -- {{age in years}}
			show = 'y',
			abbr = 'abbr_raw',
			negative = 'error',
			range = 'dash',
		},
		age_in_years_nts = {        -- {{age in years nts}}
			show = 'y',
			abbr = 'abbr_raw',
			negative = 'error',
			range = 'dash',
			format = 'format_commas',
			sortable = 'on',
		},
		age_infant = {              -- {{age for infant}}
			-- Do not set show because special processing is done later.
			abbr = yes(args.abbr) and 'abbr_infant' or 'abbr_off',
			disp = 'disp_age',
			sep = 'sep_space',
			sortable = 'on',
		},
		age_m = {                   -- {{age in months}}
			show = 'm',
			disp = 'disp_raw',
		},
		age_w = {                   -- {{age in weeks}}
			show = 'w',
			disp = 'disp_raw',
		},
		age_wd = {                  -- {{age in weeks and days}}
			show = 'wd',
		},
		age_yd = {                  -- {{age in years and days}}
			show = 'yd',
			format = 'format_commas',
			sep = args.sep ~= 'and' and 'sep_comma' or nil,
			sortable = 'on',        -- temporarily use sortable for compatibility with old template; talk proposes removing this
		},
		age_yd_nts = {              -- {{age in years and days nts}}
			show = 'yd',
			format = 'format_commas',
			sep = args.sep ~= 'and' and 'sep_comma' or nil,
			sortable = 'on',
		},
		age_ym = {                  -- {{age in years and months}}
			show = 'ym',
			sep = 'sep_comma',
		},
		age_ymd = {                 -- {{age in years, months and days}}
			show = 'ymd',
			range = true,
		},
		age_ymwd = {                -- {{age in years, months, weeks and days}}
			show = 'ymwd',
			want_mixture = true,
		},
	}
	local spec = specs[name]
	if not spec then
		return message('The specified template name is not valid')
	end
	if name == 'age_days' then
		local su = strip_to_nil(args['show unit'])
		if su then
			if su == 'abbr' or su == 'full' then
				spec.disp = nil
				spec.abbr = su == 'abbr' and 'abbr_on' or nil
			end
		end
	end
	local range = spec.range or yes(args.range) or (args.range == 'dash' and 'dash' or nil)
	local getopt = {
		fix = yes(args.fix),
		range = range,
		want_mixture = spec.want_mixture,
	}
	local date1, date2 = get_dates(frame, getopt)
	if type(date1) == 'string' then
		return date1
	end
	local format = strip_to_nil(args.format)
	if format then
		format = 'format_' .. format
	elseif name == 'age_days' and getopt.textdates then
		format = 'format_commas'
	end
	local parms = {
		diff = date2 - date1,
		want_duration = spec.duration or yes(args.duration),
		range = range,
		want_sc = yes(args.sc),
		show = args.show == 'hide' and 'hide' or spec.show,
		abbr = spec.abbr,
		disp = spec.disp,
		format = format or spec.format,
		round = yes(args.round),
		sep = spec.sep,
		sortable = translate_parameters.sortable[args.sortable or spec.sortable],
	}
	if (spec.negative or frame.args.negative) == 'error' and parms.diff.isnegative then
		return message('The second date should not be before the first date')
	end
	return date_difference(parms)
end

local function date_to_gsd(frame)
	-- This implements {{gregorian serial date}}.
	-- Return Gregorian serial date of the given date, or the current date.
	-- The returned value is negative for dates before 1 January 1 AD
	-- despite the fact that GSD is not defined for such dates.
	local date = get_dates(frame, { want_mixture=true, single=true })
	if type(date) == 'string' then
		return date
	end
	return tostring(date.gsd)
end

local function jd_to_date(frame)
	-- Return formatted date from a Julian date.
	-- The result includes a time if the input includes a fraction.
	-- The word 'Julian' is accepted for the Julian calendar.
	local Date = get_exports(frame)
	local args = frame:getParent().args
	local date = Date('juliandate', args[1], args[2])
	if date then
		return date:text()
	end
	return message('Need valid Julian date number')
end

local function date_to_jd(frame)
	-- Return Julian date (a number) from a date which may include a time,
	-- or the current date ('currentdate') or current date and time ('currentdatetime').
	-- The word 'Julian' is accepted for the Julian calendar.
	local Date = get_exports(frame)
	local args = frame:getParent().args
	local date = Date(args[1], args[2], args[3], args[4], args[5], args[6], args[7])
	if date then
		return tostring(date.jd)
	end
	return message('Need valid year/month/day or &quot;currentdate&quot;')
end

local function time_interval(frame)
	-- This implements {{time interval}}.
	-- There are two positional arguments: date1, date2.
	-- The default for each is the current date and time.
	-- Result is date2 - date1 formatted.
	local Date = get_exports(frame)
	local args = frame:getParent().args
	local parms = {
		want_duration = yes(args.duration),
		range = yes(args.range) or (args.range == 'dash' and 'dash' or nil),
		want_sc = yes(args.sc),
	}
	local fix = yes(args.fix) and 'fix' or ''
	local date1 = Date(fix, 'partial', strip_to_nil(args[1]) or 'currentdatetime')
	if not date1 then
		return message('Invalid start date in first parameter')
	end
	local date2 = Date(fix, 'partial', strip_to_nil(args[2]) or 'currentdatetime')
	if not date2 then
		return message('Invalid end date in second parameter')
	end
	parms.diff = date2 - date1
	for argname, translate in pairs(translate_parameters) do
		local parm = strip_to_nil(args[argname])
		if parm then
			parm = translate[parm]
			if parm == nil then  -- test for nil because false is a valid setting
				return message('Parameter ' .. argname .. '=' .. args[argname] .. ' is invalid')
			end
			parms[argname] = parm
		end
	end
	if parms.round then
		local round = parms.round
		local show = parms.show
		if round ~= 'on' then
			if show then
				if show.id ~= round then
					return message('Parameter show=' .. args.show .. ' conflicts with round=' .. args.round)
				end
			else
				parms.show = translate_parameters.show[round]
			end
		end
		parms.round = true
	end
	return date_difference(parms)
end

return {
	age_generic = age_generic,         -- can emulate several age templates
	gsd = date_to_gsd,                 -- Template:Gregorian_serial_date
	extract = date_extract,            -- Template:Extract
	jd_to_date = jd_to_date,           -- Template:?
	JULIANDAY = date_to_jd,            -- Template:JULIANDAY
	time_interval = time_interval,     -- Template:Time_interval
}</text>
      <sha1>jnp54a8e0x05yu61ne6igkuog08o17p</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Aligned table</title>
    <ns>828</ns>
    <id>41873595</id>
    <revision>
      <id>796397183</id>
      <parentid>755158064</parentid>
      <timestamp>2017-08-20T15:26:33Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>even/odd rowstyles</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5697">-- This module implements {{aligned table}}
local p = {}

local function isnotempty(s)
	return s and s:match( '^%s*(.-)%s*$' ) ~= ''
end

function p.table(frame)
	local args = (frame.args[3] ~= nil) and frame.args or frame:getParent().args
	local entries = {}
	local colclass = {}
	local colstyle = {}
	local cols = tonumber(args['cols']) or 2

	-- create the root table
	local root = mw.html.create('table')

	-- add table style for fullwidth
	if isnotempty(args['fullwidth']) then
		root
			:css('width', '100%')
			:css('border-collapse', 'collapse')
			:css('border-spacing', '0px 0px')
			:css('border', 'none')
	end

	-- add table classes
	if isnotempty(args['class']) then
		root:addClass(args['class'])
	end

	-- add table style
	if isnotempty(args['style']) then
		root:cssText(args['style'])
	end

	-- build arrays with the column styles and classes
	if isnotempty(args['leftright']) then
		colstyle[1] = 'text-align:left;'
		colstyle[2] = 'text-align:right;'
	end
	for i = 1,cols do
		colclass[ i ] = colclass[ i ] or ''
		colstyle[ i ] = colstyle[ i ] or ''
		if isnotempty(args['colstyle']) then
			colstyle[ i ] = args['colstyle'] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colalign' .. tostring(i)]) then
			colstyle[ i ] = 'text-align:' .. args['colalign' .. tostring(i)] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'align']) then
			colstyle[ i ] = 'text-align:' .. args['col' .. tostring(i) .. 'align'] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['align' .. tostring(i)]) then
			colstyle[ i ] = 'text-align:' .. args['align' .. tostring(i)] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colnowrap' .. tostring(i)]) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'nowrap']) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		elseif isnotempty(args['nowrap' .. tostring(i)]) then
			colstyle[ i ] = 'white-space:nowrap;' .. colstyle[ i ]
		end
		if isnotempty(args['colwidth' .. tostring(i)]) then
			colstyle[ i ] = 'width:' .. args['colwidth' .. tostring(i)] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['col' .. tostring(i) .. 'width']) then
			colstyle[ i ] = 'width:' .. args['col' .. tostring(i) .. 'width'] .. ';' .. colstyle[ i ]
		elseif isnotempty(args['colwidth']) then
			colstyle[ i ] = 'width:' .. args['colwidth'] .. ';' .. colstyle[ i ]
		end
		if isnotempty(args['colstyle' .. tostring(i)]) then
			colstyle[ i ] = colstyle[ i ] .. args['colstyle' .. tostring(i)]
		elseif isnotempty(args['col' .. tostring(i) .. 'style']) then
			colstyle[ i ] = colstyle[ i ] .. args['col' .. tostring(i) .. 'style']
		elseif isnotempty(args['style' .. tostring(i)]) then
			colstyle[ i ] = colstyle[ i ] .. args['style' .. tostring(i)]
		end
		if isnotempty(args['colclass' .. tostring(i)]) then
			colclass[ i ] =  args['colclass' .. tostring(i)]
		elseif isnotempty(args['col' .. tostring(i) .. 'class']) then
			colclass[ i ] =  args['col' .. tostring(i) .. 'class']
		elseif isnotempty(args['class' .. tostring(i)]) then
			colclass[ i ] =  args['class' .. tostring(i)]
		end
	end
	-- compute the maximum cell index
	local cellcount = 0
	for k, v in pairs( args ) do
		if type( k ) == 'number' then
			cellcount = math.max(cellcount, k)
		end
	end
	-- compute the number of rows
	local rows = math.ceil(cellcount / cols)

	-- build the table content
	if isnotempty(args['title']) then
		local caption = root:tag('caption')
		caption:cssText(args['titlestyle'])
		caption:wikitext(args['title'])
	end
	if isnotempty(args['above']) then
		local row = root:tag('tr')
		local cell = row:tag('th')
		cell:attr('colspan', cols)
		cell:cssText(args['abovestyle'])
		cell:wikitext(args['above'])
	end
	for j=1,rows do
		-- start a new row
		local row = root:tag('tr')
		if isnotempty(args['rowstyle']) then
			row:cssText(args['rowstyle'])
		else
			row:css('vertical-align', 'top')
		end
		-- loop over the cells in the row
		for i=1,cols do
			local cell
			if isnotempty(args['row' .. tostring(j) .. 'header']) then
				cell = row:tag('th'):attr('scope','col')
			elseif isnotempty(args['col' .. tostring(i) .. 'header']) then
				cell = row:tag('th'):attr('scope','row')
			else
				cell = row:tag('td')
			end
			if args['class' .. tostring(j) .. '.' .. tostring(i)] then
				cell:addClass(args['class' .. tostring(j) .. '.' .. tostring(i)])
			else
				if args['rowclass' .. tostring(j)] then
					cell:addClass(args['rowclass' .. tostring(j)])
				elseif args['row' .. tostring(j) .. 'class'] then
					cell:addClass(args['row' .. tostring(j) .. 'class'])
				elseif args['rowevenclass'] and math.fmod(j,2) == 0 then
					cell:addClass(args['rowevenclass'])
				elseif args['rowoddclass'] and math.fmod(j,2) == 1 then	
					cell:addClass(args['rowoddclass'])
				end
				if colclass[i] ~= '' then
					cell:addClass(colclass[i])
				end
			end
			if args['style' .. tostring(j) .. '.' .. tostring(i)] then
				cell:cssText(args['style' .. tostring(j) .. '.' .. tostring(i)])
			else
				if args['rowstyle' .. tostring(j)] then
					cell:cssText(args['rowstyle' .. tostring(j)])
				elseif args['rowevenstyle'] and math.fmod(j,2) == 0 then
					cell:cssText(args['rowevenstyle'])
				elseif args['rowoddstyle'] and math.fmod(j,2) == 1 then	
					cell:cssText(args['rowoddstyle'])
				elseif args['row' .. tostring(j) .. 'style'] then
					cell:cssText(args['row' .. tostring(j) .. 'style'])
				end
				if isnotempty(colstyle[i]) then
					cell:cssText(colstyle[i])
				end
			end
			cell:wikitext(mw.ustring.gsub(args[cols*(j - 1) + i] or '', '^(.-)%s*$', '%1') or '')
		end
	end
	-- return the root table
	return tostring(root)
end

return p</text>
      <sha1>o4d457cy79tvvxs2d2fc2e8bxgel3bq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Arguments</title>
    <ns>828</ns>
    <id>41298065</id>
    <revision>
      <id>696500078</id>
      <parentid>668829606</parentid>
      <timestamp>2015-12-23T16:07:27Z</timestamp>
      <contributor>
        <username>Xaosflux</username>
        <id>502540</id>
      </contributor>
      <minor/>
      <comment>Changed protection level of Module:Arguments: used in the mediawiki interface ex: [[MediaWiki:Watchlist-details]] ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10054">-- This module provides easy processing of arguments passed to Scribunto from
-- #invoke. It is intended for use by other Lua modules, and should not be
-- called from #invoke directly.

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType

local arguments = {}

-- Generate four different tidyVal functions, so that we don't have to check the
-- options every time we call it.

local function tidyValDefault(key, val)
	if type(val) == 'string' then
		val = val:match('^%s*(.-)%s*$')
		if val == '' then
			return nil
		else
			return val
		end
	else
		return val
	end
end

local function tidyValTrimOnly(key, val)
	if type(val) == 'string' then
		return val:match('^%s*(.-)%s*$')
	else
		return val
	end
end

local function tidyValRemoveBlanksOnly(key, val)
	if type(val) == 'string' then
		if val:find('%S') then
			return val
		else
			return nil
		end
	else
		return val
	end
end

local function tidyValNoChange(key, val)
	return val
end

local function matchesTitle(given, title)
	local tp = type( given )
	return (tp == 'string' or tp == 'number') and mw.title.new( given ).prefixedText == title
end

local translate_mt = { __index = function(t, k) return k end }

function arguments.getArgs(frame, options)
	checkType('getArgs', 1, frame, 'table', true)
	checkType('getArgs', 2, options, 'table', true)
	frame = frame or {}
	options = options or {}

	--[[
	-- Set up argument translation.
	--]]
	options.translate = options.translate or {}
	if getmetatable(options.translate) == nil then
		setmetatable(options.translate, translate_mt)
	end
	if options.backtranslate == nil then
		options.backtranslate = {}
		for k,v in pairs(options.translate) do
			options.backtranslate[v] = k
		end
	end
	if options.backtranslate and getmetatable(options.backtranslate) == nil then
		setmetatable(options.backtranslate, {
			__index = function(t, k)
				if options.translate[k] ~= k then
					return nil
				else
					return k
				end
			end
		})
	end

	--[[
	-- Get the argument tables. If we were passed a valid frame object, get the
	-- frame arguments (fargs) and the parent frame arguments (pargs), depending
	-- on the options set and on the parent frame's availability. If we weren't
	-- passed a valid frame object, we are being called from another Lua module
	-- or from the debug console, so assume that we were passed a table of args
	-- directly, and assign it to a new variable (luaArgs).
	--]]
	local fargs, pargs, luaArgs
	if type(frame.args) == 'table' and type(frame.getParent) == 'function' then
		if options.wrappers then
			--[[
			-- The wrappers option makes Module:Arguments look up arguments in
			-- either the frame argument table or the parent argument table, but
			-- not both. This means that users can use either the #invoke syntax
			-- or a wrapper template without the loss of performance associated
			-- with looking arguments up in both the frame and the parent frame.
			-- Module:Arguments will look up arguments in the parent frame
			-- if it finds the parent frame's title in options.wrapper;
			-- otherwise it will look up arguments in the frame object passed
			-- to getArgs.
			--]]
			local parent = frame:getParent()
			if not parent then
				fargs = frame.args
			else
				local title = parent:getTitle():gsub('/sandbox$', '')
				local found = false
				if matchesTitle(options.wrappers, title) then
					found = true
				elseif type(options.wrappers) == 'table' then
					for _,v in pairs(options.wrappers) do
						if matchesTitle(v, title) then
							found = true
							break
						end
					end
				end

				-- We test for false specifically here so that nil (the default) acts like true.
				if found or options.frameOnly == false then
					pargs = parent.args
				end
				if not found or options.parentOnly == false then
					fargs = frame.args
				end
			end
		else
			-- options.wrapper isn't set, so check the other options.
			if not options.parentOnly then
				fargs = frame.args
			end
			if not options.frameOnly then
				local parent = frame:getParent()
				pargs = parent and parent.args or nil
			end
		end
		if options.parentFirst then
			fargs, pargs = pargs, fargs
		end
	else
		luaArgs = frame
	end

	-- Set the order of precedence of the argument tables. If the variables are
	-- nil, nothing will be added to the table, which is how we avoid clashes
	-- between the frame/parent args and the Lua args.
	local argTables = {fargs}
	argTables[#argTables + 1] = pargs
	argTables[#argTables + 1] = luaArgs

	--[[
	-- Generate the tidyVal function. If it has been specified by the user, we
	-- use that; if not, we choose one of four functions depending on the
	-- options chosen. This is so that we don't have to call the options table
	-- every time the function is called.
	--]]
	local tidyVal = options.valueFunc
	if tidyVal then
		if type(tidyVal) ~= 'function' then
			error(
				&quot;bad value assigned to option 'valueFunc'&quot;
					.. '(function expected, got '
					.. type(tidyVal)
					.. ')',
				2
			)
		end
	elseif options.trim ~= false then
		if options.removeBlanks ~= false then
			tidyVal = tidyValDefault
		else
			tidyVal = tidyValTrimOnly
		end
	else
		if options.removeBlanks ~= false then
			tidyVal = tidyValRemoveBlanksOnly
		else
			tidyVal = tidyValNoChange
		end
	end

	--[[
	-- Set up the args, metaArgs and nilArgs tables. args will be the one
	-- accessed from functions, and metaArgs will hold the actual arguments. Nil
	-- arguments are memoized in nilArgs, and the metatable connects all of them
	-- together.
	--]]
	local args, metaArgs, nilArgs, metatable = {}, {}, {}, {}
	setmetatable(args, metatable)

	local function mergeArgs(tables)
		--[[
		-- Accepts multiple tables as input and merges their keys and values
		-- into one table. If a value is already present it is not overwritten;
		-- tables listed earlier have precedence. We are also memoizing nil
		-- values, which can be overwritten if they are 's' (soft).
		--]]
		for _, t in ipairs(tables) do
			for key, val in pairs(t) do
				if metaArgs[key] == nil and nilArgs[key] ~= 'h' then
					local tidiedVal = tidyVal(key, val)
					if tidiedVal == nil then
						nilArgs[key] = 's'
					else
						metaArgs[key] = tidiedVal
					end
				end
			end
		end
	end

	--[[
	-- Define metatable behaviour. Arguments are memoized in the metaArgs table,
	-- and are only fetched from the argument tables once. Fetching arguments
	-- from the argument tables is the most resource-intensive step in this
	-- module, so we try and avoid it where possible. For this reason, nil
	-- arguments are also memoized, in the nilArgs table. Also, we keep a record
	-- in the metatable of when pairs and ipairs have been called, so we do not
	-- run pairs and ipairs on the argument tables more than once. We also do
	-- not run ipairs on fargs and pargs if pairs has already been run, as all
	-- the arguments will already have been copied over.
	--]]

	metatable.__index = function (t, key)
		--[[
		-- Fetches an argument when the args table is indexed. First we check
		-- to see if the value is memoized, and if not we try and fetch it from
		-- the argument tables. When we check memoization, we need to check
		-- metaArgs before nilArgs, as both can be non-nil at the same time.
		-- If the argument is not present in metaArgs, we also check whether
		-- pairs has been run yet. If pairs has already been run, we return nil.
		-- This is because all the arguments will have already been copied into
		-- metaArgs by the mergeArgs function, meaning that any other arguments
		-- must be nil.
		--]]
		if type(key) == 'string' then
			key = options.translate[key]
		end
		local val = metaArgs[key]
		if val ~= nil then
			return val
		elseif metatable.donePairs or nilArgs[key] then
			return nil
		end
		for _, argTable in ipairs(argTables) do
			local argTableVal = tidyVal(key, argTable[key])
			if argTableVal ~= nil then
				metaArgs[key] = argTableVal
				return argTableVal
			end
		end
		nilArgs[key] = 'h'
		return nil
	end

	metatable.__newindex = function (t, key, val)
		-- This function is called when a module tries to add a new value to the
		-- args table, or tries to change an existing value.
		if type(key) == 'string' then
			key = options.translate[key]
		end
		if options.readOnly then
			error(
				'could not write to argument table key &quot;'
					.. tostring(key)
					.. '&quot;; the table is read-only',
				2
			)
		elseif options.noOverwrite and args[key] ~= nil then
			error(
				'could not write to argument table key &quot;'
					.. tostring(key)
					.. '&quot;; overwriting existing arguments is not permitted',
				2
			)
		elseif val == nil then
			--[[
			-- If the argument is to be overwritten with nil, we need to erase
			-- the value in metaArgs, so that __index, __pairs and __ipairs do
			-- not use a previous existing value, if present; and we also need
			-- to memoize the nil in nilArgs, so that the value isn't looked
			-- up in the argument tables if it is accessed again.
			--]]
			metaArgs[key] = nil
			nilArgs[key] = 'h'
		else
			metaArgs[key] = val
		end
	end

	local function translatenext(invariant)
		local k, v = next(invariant.t, invariant.k)
		invariant.k = k
		if k == nil then
			return nil
		elseif type(k) ~= 'string' or not options.backtranslate then
			return k, v
		else
			local backtranslate = options.backtranslate[k]
			if backtranslate == nil then
				-- Skip this one. This is a tail call, so this won't cause stack overflow
				return translatenext(invariant)
			else
				return backtranslate, v
			end
		end
	end

	metatable.__pairs = function ()
		-- Called when pairs is run on the args table.
		if not metatable.donePairs then
			mergeArgs(argTables)
			metatable.donePairs = true
		end
		return translatenext, { t = metaArgs }
	end

	local function inext(t, i)
		-- This uses our __index metamethod
		local v = t[i + 1]
		if v ~= nil then
			return i + 1, v
		end
	end

	metatable.__ipairs = function (t)
		-- Called when ipairs is run on the args table.
		return inext, t, 0
	end

	return args
end

return arguments</text>
      <sha1>5qx9tzlul9ser30uxj9nbasjt92cevn</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Authority control</title>
    <ns>828</ns>
    <id>39028170</id>
    <revision>
      <id>806800815</id>
      <parentid>800916723</parentid>
      <timestamp>2017-10-24T06:49:37Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from [[Module:Authority control/sandbox]] using more efficient code from [[User:/Module:Authority control]] by [[User:|Eran]] per [[Template talk:Authority control#Technical improvement]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="15394">require('Module:No globals')

local function getCatForId( id )
	local title = mw.title.getCurrentTitle()
	local namespace = title.namespace
	if namespace == 0 then
		return '[[Category:Wikipedia articles with ' .. id .. ' identifiers]]'
	elseif namespace == 2 and not title.isSubpage then
		return '[[Category:User pages with ' .. id .. ' identifiers]]'
	else
		return '[[Category:Miscellaneous pages with ' .. id .. ' identifiers]]'
	end
end

local function viafLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[https://viaf.org/viaf/' .. id .. ' ' .. id .. ']' .. getCatForId( 'VIAF' )
end

local function kulturnavLink( id )
	return '[http://kulturnav.org/language/en/' .. id .. ' id]'
end

local function sikartLink( id )
	return '[http://www.sikart.ch/KuenstlerInnen.aspx?id=' .. id .. '&amp;lng=en ' .. id .. ']'
end

local function tlsLink( id )
	local id2 = id:gsub(' +', '_')
	return '[http://tls.theaterwissenschaft.ch/wiki/' .. id2 .. ' ' .. id .. ']'
end

local function ciniiLink( id )
	return '[http://ci.nii.ac.jp/author/' .. id .. '?l=en ' .. id .. ']'
end

local function bneLink( id )
	return '[http://catalogo.bne.es/uhtbin/authoritybrowse.cgi?action=display&amp;authority_id=' .. id .. ' ' .. id .. ']'
end

local function uscongressLink( id )
	return '[http://bioguide.congress.gov/scripts/biodisplay.pl?index=' .. id .. ' ' .. id .. ']'
end

local function narapersonLink( id )
	return '[https://research.archives.gov/person/' .. id .. ' ' .. id .. ']'
end

local function naraorganizationLink( id )
	return '[https://research.archives.gov/organization/' .. id .. ' ' .. id .. ']'
end

local function botanistLink( id )
	local id2 = id:gsub(' +', '%20')
	return '[http://www.ipni.org/ipni/advAuthorSearch.do?find_abbreviation=' .. id2 .. ' ' .. id .. ']'
end

local function mgpLink( id )
	-- TODO Implement some sanity checking regex
	return '[http://www.genealogy.ams.org/id.php?id=' .. id .. ' ' .. id .. ']'
end

local function rslLink( id )
	-- TODO Implement some sanity checking regex
	return '[http://aleph.rsl.ru/F?func=find-b&amp;find_code=SYS&amp;adjacent=Y&amp;local_base=RSL11&amp;request=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function leonoreLink( id )
-- Identifiants allant de LH/1/1  LH/2794/54 (lgionnaires)
-- Identifiants allant de C/0/1  C/0/84 (84 lgionnaires clbres)
-- Identifiants allant de 19800035/1/1  19800035/385/51670 (lgionnaires dcds entre 1954 et 1977, et quelques dossiers de lgionnaires dcds avant 1954)
	if not string.match( id, '^LH/%d%d?%d?%d?/%d%d?%d?$' ) and
	   not string.match( id, '^C/0/%d%d?$' ) and
	   not string.match( id, '^19800035/%d%d?%d?%d?/%d%d?%d?%d?%d?$' ) then
		return false
	end
	return '[http://www.culture.gouv.fr/public/mistral/leonore_fr?ACTION=CHERCHER&amp;FIELD_1=COTE&amp;VALUE_1=' .. id .. ' ' .. id .. ']'
end

local function sbnLink( id )
	if not string.match( id, '^IT\\ICCU\\%d%d%d%d%d%d%d%d%d%d$' ) and not string.match( id, '^IT\\ICCU\\%u%u[%d%u]%u\\%d%d%d%d%d%d$' ) then
		return false
	end
	return '[http://opac.sbn.it/opacsbn/opac/iccu/scheda_authority.jsp?bid=' .. id .. ' ' .. id .. ']' .. getCatForId( 'SBN' )
end

local function nkcLink( id )
	return '[http://aleph.nkp.cz/F/?func=find-c&amp;local_base=aut&amp;ccl_term=ica=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function nclLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://aleweb.ncl.edu.tw/F/?func=accref&amp;acc_sequence=' .. id .. '&amp;CON_LNG=ENG ' .. id .. ']'
end

local function ndlLink( id )
	return '[https://id.ndl.go.jp/auth/ndlna/' .. id .. ' ' .. id .. ']'
end

local function sudocLink( id )
	if not string.match( id, '^%d%d%d%d%d%d%d%d[%dxX]$' ) then
		return false
	end
	return '[https://www.idref.fr/' .. id .. ' ' .. id .. ']'
end

local function hlsLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.hls-dhs-dss.ch/textes/f/F' .. id .. '.php ' .. id .. ']'
end

local function lirLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.e-lir.ch/e-LIR___Lexicon.' .. id .. '.450.0.html ' .. id .. ']'
end

local function splitLccn( id )
	if id:match( '^%l%l?%l?%d%d%d%d%d%d%d%d%d?%d?$' ) then
		id = id:gsub( '^(%l+)(%d+)(%d%d%d%d%d%d)$', '%1/%2/%3' )
	end
	if id:match( '^%l%l?%l?/%d%d%d?%d?/%d+$' ) then
		return mw.text.split( id, '/' )
	end
	return false
end

local function append(str, c, length)
	while str:len() &lt; length do
		str = c .. str
	end
	return str
end

local function lccnLink( id )
	local parts = splitLccn( id )
	if not parts then
		return false
	end
	local lccnType = parts[1] ~= 'sh' and 'names' or 'subjects'
	id = parts[1] .. parts[2] .. append( parts[3], '0', 6 )
	return '[http://id.loc.gov/authorities/' .. lccnType .. '/' .. id .. ' ' .. id .. ']' .. getCatForId( 'LCCN' )
end

local function mbLink( id )
	-- TODO Implement some sanity checking regex
	return '[https://musicbrainz.org/artist/' .. id .. ' ' .. id .. ']' .. getCatForId( 'MusicBrainz' )
end

--Returns the ISNI check digit isni must be a string where the 15 first elements are digits
local function getIsniCheckDigit( isni )
	local total = 0
	for i = 1, 15 do
		local digit = isni:byte( i ) - 48 --Get integer value
		total = (total + digit) * 2
	end
	local remainder = total % 11
	local result = (12 - remainder) % 11
	if result == 10 then
		return &quot;X&quot;
	end
	return tostring( result )
end

--Validate ISNI (and ORCID) and retuns it as a 16 characters string or returns false if it's invalid
--See http://support.orcid.org/knowledgebase/articles/116780-structure-of-the-orcid-identifier
local function validateIsni( id )
	id = id:gsub( '[ %-]', '' ):upper()
	if not id:match( '^%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d[%dX]$' ) then
		return false
	end
	if getIsniCheckDigit( id ) ~= string.char( id:byte( 16 ) ) then
		return false
	end
	return id
end

local function isniLink( id )
	id = validateIsni( id )
	if not id then
		return false
	end
	return '[http://isni.org/isni/' .. id .. ' ' .. id:sub( 1, 4 ) .. ' ' .. id:sub( 5, 8 ) .. ' '  .. id:sub( 9, 12 ) .. ' '  .. id:sub( 13, 16 ) .. ']' .. getCatForId( 'ISNI' )
end

local function orcidLink( id )
	id = validateIsni( id )
	if not id then
		return false
	end
	id = id:sub( 1, 4 ) .. '-' .. id:sub( 5, 8 ) .. '-'  .. id:sub( 9, 12 ) .. '-'  .. id:sub( 13, 16 )
	return '[https://orcid.org/' .. id .. ' ' .. id .. ']' .. getCatForId( 'ORCID' )
end

local function gndLink( id )
	return '[http://d-nb.info/gnd/' .. id .. ' ' .. id .. ']' .. getCatForId( 'GND' )
end

local function selibrLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[https://libris.kb.se/auth/' .. id .. ' ' .. id .. ']' .. getCatForId( 'SELIBR' )
end

local function bnfLink( id )
	--Add cb prefix if it has been removed
	if not string.match( id, '^cb.+$' ) then
		id = 'cb' .. id
	end

	return '[http://catalogue.bnf.fr/ark:/12148/' .. id .. ' ' .. id .. '] [http://data.bnf.fr/ark:/12148/' .. id .. ' (data)]' .. getCatForId( 'BNF' )
end

local function bpnLink( id )
	if not string.match( id, '^%d+$' ) then
		return false
	end
	return '[http://www.biografischportaal.nl/en/persoon/' .. id .. ' ' .. id .. ']' .. getCatForId( 'BPN' )
end

local function ridLink( id )
	return '[https://www.researcherid.com/rid/' .. id .. ' ' .. id .. ']' .. getCatForId( 'RID' )
end

local function bibsysLink( id )
	return '[https://authority.bibsys.no/authority/rest/authorities/html/' .. id .. ' ' .. id .. ']' .. getCatForId( 'BIBSYS' )
end

local function ulanLink( id )
	return '[https://www.getty.edu/vow/ULANFullDisplay?find=&amp;role=&amp;nation=&amp;subjectid=' .. id .. ' ' .. id .. ']' .. getCatForId( 'ULAN' )
end

local function nlaLink( id )
	return '[https://nla.gov.au/anbd.aut-an' .. id .. ' ' .. id .. ']' .. getCatForId( 'NLA' )
end

local function rkdartistsLink( id )
	return '[https://rkd.nl/en/explore/artists/' .. id .. ' ' .. id .. ']' .. getCatForId( 'RKDartists' )
end

local function snacLink( id )
	return '[http://socialarchive.iath.virginia.edu/ark:/99166/' .. id .. ' ' .. id .. ']' .. getCatForId( 'SNAC-ID' )
end

local function dblpLink( id )
	return '[http://dblp.org/pid/' .. id .. ' ' .. id .. ']' .. getCatForId( 'DBLP' )
end

local function acmLink( id )
	return '[https://dl.acm.org/author_page.cfm?id=' .. id .. ' ' .. id .. ']' .. getCatForId( 'ACM-DL' )
end

local function autoresuyLink( id )
	return '[http://autores.uy/autor/' .. id .. ' ' .. id .. ']' ..  getCatForId( 'autores.uy' )
end

local function picLink( id )
	return '[https://pic.nypl.org/constituents/' .. id .. ' ' .. id .. ']' .. getCatForId( 'PIC' )
end

local function getIdsFromWikidata( itemId, property )
	local ids = {}
	local statements = mw.wikibase.getBestStatements( itemId, property )
	if statements then
		for _, statement in ipairs( statements ) do
			if statement.mainsnak.datavalue then
				table.insert( ids, statement.mainsnak.datavalue.value )
			end
		end
	end
	return ids
end

local function matchesWikidataRequirements( itemId, reqs )
	for _, group in ipairs( reqs ) do
		local property = 'P' .. group[1]
		local qid = group[2]
		local statements = mw.wikibase.getBestStatements( itemId, property )
		if statements ~= nil then
			for _, statement in ipairs( statements ) do
				if statement.mainsnak.datavalue ~= nil then
					if statement.mainsnak.datavalue.value['numeric-id'] == qid then
						return true
					end
				end
			end
		end
	end
	return false
end

local function createRow( id, label, rawValue, link, withUid )
	if link then
		if withUid then
			return '*&lt;span class=&quot;nowrap&quot;&gt;' .. label .. ' &lt;span class=&quot;uid&quot;&gt;' .. link .. '&lt;/span&gt;&lt;/span&gt;\n'
		else
			return '*&lt;span class=&quot;nowrap&quot;&gt;' .. label .. ' ' .. link .. '&lt;/span&gt;\n'
		end
	else
		return '* &lt;span class=&quot;error&quot;&gt;The ' .. id .. ' id ' .. rawValue .. ' is not valid.&lt;/span&gt;[[Category:Wikipedia articles with faulty authority control identifiers (' .. id .. ')]]\n'
	end
end

--In this order: name of the parameter, label, propertyId in Wikidata, formatting function
local conf = {
	{ 'VIAF', '[[Virtual International Authority File|VIAF]]', 214, viafLink },
	{ 'LCCN', '[[Library of Congress Control Number|LCCN]]', 244, lccnLink },
	{ 'ISNI', '[[International Standard Name Identifier|ISNI]]', 213, isniLink },
	{ 'ORCID', '[[ORCID]]', 496, orcidLink },
	{ 'GND', '[[Integrated Authority File|GND]]', 227, gndLink },
	{ 'SELIBR', '[[LIBRIS|SELIBR]]', 906, selibrLink },
	{ 'SUDOC', '[[Systme universitaire de documentation|SUDOC]]', 269, sudocLink },
	{ 'BNF', '[[Bibliothque nationale de France|BNF]]', 268, bnfLink },
	{ 'BPN', '[[Biografisch Portaal|BPN]]', 651, bpnLink },
	{ 'RID', '[[ResearcherID]]', 1053, ridLink },
	{ 'BIBSYS', '[[BIBSYS]]', 1015, bibsysLink },
	{ 'ULAN', '[[Union List of Artist Names|ULAN]]', 245, ulanLink },
	{ 'HDS', '[[Historical Dictionary of Switzerland|HDS]]', 902, hlsLink },
	{ 'LIR', '[[Historical Dictionary of Switzerland#Lexicon_Istoric_Retic|LIR]]', 886, lirLink },
	{ 'MBA', '[[MusicBrainz]]', 434, mbLink },
	{ 'MGP', '[[Mathematics Genealogy Project|MGP]]', 549, mgpLink },
	{ 'NLA', '[[National Library of Australia|NLA]]', 409, nlaLink },
	{ 'NDL', '[[National Diet Library|NDL]]', 349, ndlLink },
	{ 'NCL', '[[National Central Library|NCL]]', 1048, nclLink },
	{ 'NKC', '[[National Library of the Czech Republic|NKC]]', 691, nkcLink },
	{ 'Lonore', '[[Base Lonore|Lonore]]', 640, leonoreLink },
	{ 'SBN', '[[Istituto Centrale per il Catalogo Unico|ICCU]]', 396, sbnLink },
	{ 'RLS', '[[Russian State Library|RLS]]', 947, rslLink },
	{ 'Botanist', '[[Author citation (botany)|Botanist]]', 428, botanistLink },
	{ 'NARA-person', '[[National Archives and Records Administration|NARA]]', 1222, narapersonLink },
	{ 'NARA-organization', '[[National Archives and Records Administration|NARA]]', 1223, naraorganizationLink },
	{ 'USCongress', '[[Biographical Directory of the United States Congress|US Congress]]', 1157, uscongressLink },
	{ 'BNE', '[[Biblioteca Nacional de Espaa|BNE]]', 950, bneLink },
	{ 'CINII', '[[CiNii]]', 271, ciniiLink },
	{ 'TLS', '[[Theaterlexikon der Schweiz|TLS]]', 1362, tlsLink },
	{ 'SIKART', '[[SIKART]]', 781, sikartLink },
	{ 'KULTURNAV', '[[KulturNav]]', 1248, kulturnavLink },
	{ 'RKDartists', '[[Netherlands Institute for Art History#Online artist pages|RKD]]', 650, rkdartistsLink },
	{ 'SNAC-ID', '[[Institute for Advanced Technology in the Humanities|IATH]]', 3430, snacLink },
	{ 'DBLP', '[[DBLP]]', 2456, dblpLink },
	{ 'ACM-DL', '[[ACM Digital Library|ACM DL]]', 864, acmLink },
	{ 'autores.uy', '[[autores.uy]]', 2558, autoresuyLink },
	{ 'PIC', '[[:d:Q23892012|PIC]]', 2750, picLink },
}

-- Check that the Wikidata item has this property--&gt;value before adding it
local reqs = {}

local p = {}

function p.authorityControl( frame )
	local parentArgs = frame:getParent().args
	--Create rows
	local elements = {}

	--redirect PND to GND
	if (parentArgs.GND == nil or parentArgs.GND == '') and parentArgs.PND ~= nil and parentArgs.PND ~= '' then
		parentArgs.GND = parentArgs.PND
	end

	--Wikidata fallback if requested
	local itemId = mw.wikibase.getEntityIdForCurrentPage()
	if itemId ~= nil then
		for _, params in ipairs( conf ) do
			if params[3] ~= 0 then
				local val = parentArgs[params[1]]
				if not val or val == '' then
					local canUseWikidata = nil
					if reqs[params[1]] ~= nil then
						canUseWikidata = matchesWikidataRequirements( itemId, reqs[params[1]] )
					else
						canUseWikidata = true
					end
					if canUseWikidata then
						local wikidataIds = getIdsFromWikidata( itemId, 'P' .. params[3] )
						if wikidataIds[1] then
							parentArgs[params[1]] = wikidataIds[1]
						end
					end
				end
			end
		end
	end

	--Worldcat
	if parentArgs['WORLDCATID'] and parentArgs['WORLDCATID'] ~= '' then
		table.insert( elements, createRow( 'WORLDCATID', '', parentArgs['WORLDCATID'], '[https://www.worldcat.org/identities/' .. parentArgs['WORLDCATID'] .. ' WorldCat Identities]', false ) ) --Validation?
	elseif parentArgs['VIAF'] and string.match( parentArgs['VIAF'], '^%d+$' ) then -- Hackishly copy the validation code; this should go away when we move to using P1793 and P1630
		table.insert( elements, createRow( 'VIAF', '', parentArgs['VIAF'], '[https://www.worldcat.org/identities/containsVIAFID/' .. parentArgs['VIAF'] .. ' WorldCat Identities]', false ) )
	elseif parentArgs['LCCN'] and parentArgs['LCCN'] ~= '' then
		local lccnParts = splitLccn( parentArgs['LCCN'] )
		if lccnParts and lccnParts[1] ~= 'sh' then
			table.insert( elements, createRow( 'LCCN', '', parentArgs['LCCN'], '[https://www.worldcat.org/identities/lccn-' .. lccnParts[1] .. lccnParts[2] .. '-' .. lccnParts[3] .. ' WorldCat Identities]', false ) )
		end
	end

	--Configured rows
	local rct = 0
	for _, params in ipairs( conf ) do
		local val = parentArgs[params[1]]
		if val and val ~= '' then
			table.insert( elements, createRow( params[1], params[2] .. ':', val, params[4]( val ), true ) )
			rct = rct + 1
		end
	end
	local Navbox = require('Module:Navbox')
	local elementscats = ''
	if rct &gt; 13 then
		elementscats  = '[[Category:AC with ' .. rct .. ' elements]]'
	end

	if #elements ~= 0 then
		return Navbox._navbox( {
			name  = 'Authority control',
			bodyclass = 'hlist',
			group1 = '[[Help:Authority control|Authority control]]' .. elementscats,
			list1 = table.concat( elements )
			} )
	else
		return &quot;&quot;
	end
end

return p</text>
      <sha1>q2m0aw21lfndledhk1dbf0493olqwrg</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler</title>
    <ns>828</ns>
    <id>39772274</id>
    <revision>
      <id>617942873</id>
      <parentid>616811662</parentid>
      <timestamp>2014-07-22T05:08:26Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>allow invocations specifying the page parameter to use the mw.loadData optimisations, and don't call mw.title.new every time</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7871">--------------------------------------------------------------------------------
--                                                                            --
--                              CATEGORY HANDLER                              --
--                                                                            --
--      This module implements the {{category handler}} template in Lua,      --
--      with a few improvements: all namespaces and all namespace aliases     --
--      are supported, and namespace names are detected automatically for     --
--      the local wiki. This module requires [[Module:Namespace detect]]      --
--      and [[Module:Yesno]] to be available on the local wiki. It can be     --
--      configured for different wikis by altering the values in              --
--      [[Module:Category handler/config]], and pages can be blacklisted      --
--      from categorisation by using [[Module:Category handler/blacklist]].   --
--                                                                            --
--------------------------------------------------------------------------------

-- Load required modules
local yesno = require('Module:Yesno')

-- Lazily load things we don't always need
local mShared, mappings

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function trimWhitespace(s, removeBlanks)
	if type(s) ~= 'string' then
		return s
	end
	s = s:match('^%s*(.-)%s*$')
	if removeBlanks then
		if s ~= '' then
			return s
		else
			return nil
		end
	else
		return s
	end
end

--------------------------------------------------------------------------------
-- CategoryHandler class
--------------------------------------------------------------------------------

local CategoryHandler = {}
CategoryHandler.__index = CategoryHandler

function CategoryHandler.new(data, args)
	local obj = setmetatable({ _data = data, _args = args }, CategoryHandler)
	
	-- Set the title object
	do
		local pagename = obj:parameter('demopage')
		local success, titleObj
		if pagename then
			success, titleObj = pcall(mw.title.new, pagename)
		end
		if success and titleObj then
			obj.title = titleObj
			if titleObj == mw.title.getCurrentTitle() then
				obj._usesCurrentTitle = true
			end
		else
			obj.title = mw.title.getCurrentTitle()
			obj._usesCurrentTitle = true
		end
	end

	-- Set suppression parameter values
	for _, key in ipairs{'nocat', 'categories'} do
		local value = obj:parameter(key)
		value = trimWhitespace(value, true)
		obj['_' .. key] = yesno(value)
	end
	do
		local subpage = obj:parameter('subpage')
		local category2 = obj:parameter('category2')
		if type(subpage) == 'string' then
			subpage = mw.ustring.lower(subpage)
		end
		if type(category2) == 'string' then
			subpage = mw.ustring.lower(category2)
		end
		obj._subpage = trimWhitespace(subpage, true)
		obj._category2 = trimWhitespace(category2) -- don't remove blank values
	end
	return obj
end

function CategoryHandler:parameter(key)
	local parameterNames = self._data.parameters[key]
	local pntype = type(parameterNames)
	if pntype == 'string' or pntype == 'number' then
		return self._args[parameterNames]
	elseif pntype == 'table' then
		for _, name in ipairs(parameterNames) do
			local value = self._args[name]
			if value ~= nil then
				return value
			end
		end
		return nil
	else
		error(string.format(
			'invalid config key &quot;%s&quot;',
			tostring(key)
		), 2)
	end
end

function CategoryHandler:isSuppressedByArguments()
	return
		-- See if a category suppression argument has been set.
		self._nocat == true
		or self._categories == false
		or (
			self._category2
			and self._category2 ~= self._data.category2Yes
			and self._category2 ~= self._data.category2Negative
		)

		-- Check whether we are on a subpage, and see if categories are
		-- suppressed based on our subpage status.
		or self._subpage == self._data.subpageNo and self.title.isSubpage
		or self._subpage == self._data.subpageOnly and not self.title.isSubpage
end

function CategoryHandler:shouldSkipBlacklistCheck()
	-- Check whether the category suppression arguments indicate we
	-- should skip the blacklist check.
	return self._nocat == false
		or self._categories == true
		or self._category2 == self._data.category2Yes
end

function CategoryHandler:matchesBlacklist()
	if self._usesCurrentTitle then
		return self._data.currentTitleMatchesBlacklist
	else
		mShared = mShared or require('Module:Category handler/shared')
		return mShared.matchesBlacklist(
			self.title.prefixedText,
			mw.loadData('Module:Category handler/blacklist')
		)
	end
end

function CategoryHandler:isSuppressed()
	-- Find if categories are suppressed by either the arguments or by
	-- matching the blacklist.
	return self:isSuppressedByArguments()
		or not self:shouldSkipBlacklistCheck() and self:matchesBlacklist()
end

function CategoryHandler:getNamespaceParameters()
	if self._usesCurrentTitle then
		return self._data.currentTitleNamespaceParameters
	else
		if not mappings then
			mShared = mShared or require('Module:Category handler/shared')
			mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
		end
		return mShared.getNamespaceParameters(
			self.title,
			mappings
		)
	end
end

function CategoryHandler:namespaceParametersExist()
	-- Find whether any namespace parameters have been specified.
	-- We use the order &quot;all&quot; --&gt; namespace params --&gt; &quot;other&quot; as this is what
	-- the old template did.
	if self:parameter('all') then
		return true
	end
	if not mappings then
		mShared = mShared or require('Module:Category handler/shared')
		mappings = mShared.getParamMappings(true) -- gets mappings with mw.loadData
	end
	for ns, params in pairs(mappings) do
		for i, param in ipairs(params) do
			if self._args[param] then
				return true
			end
		end
	end
	if self:parameter('other') then
		return true
	end
	return false
end

function CategoryHandler:getCategories()
	local params = self:getNamespaceParameters()
	local nsCategory
	for i, param in ipairs(params) do
		local value = self._args[param]
		if value ~= nil then
			nsCategory = value
			break
		end
	end
	if nsCategory ~= nil or self:namespaceParametersExist() then
		-- Namespace parameters exist - advanced usage.
		if nsCategory == nil then
			nsCategory = self:parameter('other')
		end
		local ret = {self:parameter('all')}
		local numParam = tonumber(nsCategory)
		if numParam and numParam &gt;= 1 and math.floor(numParam) == numParam then
			-- nsCategory is an integer
			ret[#ret + 1] = self._args[numParam]
		else
			ret[#ret + 1] = nsCategory
		end
		if #ret &lt; 1 then
			return nil
		else
			return table.concat(ret)
		end
	elseif self._data.defaultNamespaces[self.title.namespace] then
		-- Namespace parameters don't exist, simple usage.
		return self._args[1]
	end
	return nil
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- Used for testing purposes.
	return {
		CategoryHandler = CategoryHandler
	}
end

function p._main(args, data)
	data = data or mw.loadData('Module:Category handler/data')
	local handler = CategoryHandler.new(data, args)
	if handler:isSuppressed() then
		return nil
	end
	return handler:getCategories()
end

function p.main(frame, data)
	data = data or mw.loadData('Module:Category handler/data')
	local args = require('Module:Arguments').getArgs(frame, {
		wrappers = data.wrappers,
		valueFunc = function (k, v)
			v = trimWhitespace(v)
			if type(k) == 'number' then
				if v ~= '' then
					return v
				else
					return nil
				end
			else
				return v
			end
		end
	})
	return p._main(args, data)
end

return p</text>
      <sha1>letwavu3yvlayfzew66uuwixmwebq5b</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/blacklist</title>
    <ns>828</ns>
    <id>43232926</id>
    <revision>
      <id>757409491</id>
      <parentid>757402070</parentid>
      <timestamp>2016-12-30T14:53:53Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>on second thoughts, blacklisting sandboxes for all templates is probably a bad idea</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="764">-- This module contains the blacklist used by [[Module:Category handler]].
-- Pages that match Lua patterns in this list will not be categorised unless
-- categorisation is explicitly requested.

return {
	'^Main Page$', -- don't categorise the main page.

	-- Don't categorise the following pages or their subpages.
	-- &quot;%f[/\0]&quot; matches if the next character is &quot;/&quot; or the end of the string.
	'^Wikipedia:Cascade%-protected items%f[/\0]',
	'^User:UBX%f[/\0]', -- The userbox &quot;template&quot; space.
	'^User talk:UBX%f[/\0]',

	-- Don't categorise subpages of these pages, but allow
	-- categorisation of the base page.
	'^Wikipedia:Template messages/.*$',

	-- Don't categorise archives.
	'/[aA]rchive',
	&quot;^Wikipedia:Administrators' noticeboard/IncidentArchive%d+$&quot;,
}</text>
      <sha1>hwue3i1eua4tsdxlsbcs4f5syudywbe</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/config</title>
    <ns>828</ns>
    <id>42291997</id>
    <revision>
      <id>616764079</id>
      <parentid>616045566</parentid>
      <timestamp>2014-07-13T09:05:36Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/config: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5755">--------------------------------------------------------------------------------
--            [[Module:Category handler]] configuration data                  --
--       Language-specific parameter names and values can be set here.        --
--       For blacklist config, see [[Module:Category handler/blacklist]].     --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                       Start configuration data                             --
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names.                  --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- foo = 'parameter name',                                                    --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'},        --
--------------------------------------------------------------------------------

cfg.parameters = {
	
	-- The nocat and categories parameter suppress
	-- categorisation. They are used with Module:Yesno, and work as follows:
	--
	-- cfg.nocat:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is suppressed
	-- false                                    Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- nil                                      Categorisation is allowed
	--
	-- cfg.categories:
	-- Result of yesno()                        Effect
	-- true                                     Categorisation is allowed, and
	--                                          the blacklist check is skipped
	-- false                                    Categorisation is suppressed
	-- nil                                      Categorisation is allowed
	nocat = 'nocat',
	categories = 'categories',
	
	-- The parameter name for the legacy &quot;category2&quot; parameter. This skips the
	-- blacklist if set to the cfg.category2Yes value, and suppresses
	-- categorisation if present but equal to anything other than
	-- cfg.category2Yes or cfg.category2Negative.
	category2 = 'category2',
	
	-- cfg.subpage is the parameter name to specify how to behave on subpages.
	subpage = 'subpage',
	
	-- The parameter for data to return in all namespaces.
	all = 'all',
	
	-- The parameter name for data to return if no data is specified for the
	-- namespace that is detected.
	other = 'other',
	
	-- The parameter name used to specify a page other than the current page;
	-- used for testing and demonstration.
	demopage = 'page',
}

--------------------------------------------------------------------------------
--                              Parameter values                              --
-- These are set values that can be used with certain parameters. Only one    --
-- value can be specified, like this:                                         --
--                                                                            --
-- cfg.foo = 'value name'                                                     --                                               --
--------------------------------------------------------------------------------

-- The following settings are used with the cfg.category2 parameter. Setting
-- cfg.category2 to cfg.category2Yes skips the blacklist, and if cfg.category2
-- is present but equal to anything other than cfg.category2Yes or
-- cfg.category2Negative then it supresses cateogrisation.
cfg.category2Yes = 'yes'
cfg.category2Negative = ''

-- The following settings are used with the cfg.subpage parameter.
-- cfg.subpageNo is the value to specify to not categorise on subpages;
-- cfg.subpageOnly is the value to specify to only categorise on subpages.
cfg.subpageNo = 'no'
cfg.subpageOnly = 'only'

--------------------------------------------------------------------------------
--                           Default namespaces                               --
-- This is a table of namespaces to categorise by default. The keys are the   --
-- namespace numbers.                                                         --
--------------------------------------------------------------------------------

cfg.defaultNamespaces = {
	[  0] = true, -- main
	[  6] = true, -- file
	[ 12] = true, -- help
	[ 14] = true, -- category
	[100] = true, -- portal
	[108] = true, -- book
}

--------------------------------------------------------------------------------
--                                Wrappers                                    --
-- This is a wrapper template or a list of wrapper templates to be passed to  --
-- [[Module:Arguments]].                                                      --
--------------------------------------------------------------------------------

cfg.wrappers = 'Template:Category handler'

--------------------------------------------------------------------------------
--                           End configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>6ga9hbq2pdwalsvx68i53dmbr421rq5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/data</title>
    <ns>828</ns>
    <id>43233647</id>
    <revision>
      <id>616764105</id>
      <parentid>616020360</parentid>
      <timestamp>2014-07-13T09:05:55Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/data: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="631">-- This module assembles data to be passed to [[Module:Category handler]] using
-- mw.loadData. This includes the configuration data and whether the current
-- page matches the title blacklist.

local data = require('Module:Category handler/config')
local mShared = require('Module:Category handler/shared')
local blacklist = require('Module:Category handler/blacklist')
local title = mw.title.getCurrentTitle()

data.currentTitleMatchesBlacklist = mShared.matchesBlacklist(
	title.prefixedText,
	blacklist
)

data.currentTitleNamespaceParameters = mShared.getNamespaceParameters(
	title,
	mShared.getParamMappings()
)

return data</text>
      <sha1>k26mwixuaeijisfddb0sxkg82iux8v4</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Category handler/shared</title>
    <ns>828</ns>
    <id>43232937</id>
    <revision>
      <id>616764145</id>
      <parentid>616020201</parentid>
      <timestamp>2014-07-13T09:06:15Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Category handler/shared: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="888">-- This module contains shared functions used by [[Module:Category handler]]
-- and its submodules.

local p = {}

function p.matchesBlacklist(page, blacklist)
	for i, pattern in ipairs(blacklist) do
		local match = mw.ustring.match(page, pattern)
		if match then
			return true
		end
	end
	return false
end

function p.getParamMappings(useLoadData)
	local dataPage = 'Module:Namespace detect/data'
	if useLoadData then
		return mw.loadData(dataPage).mappings
	else
		return require(dataPage).mappings
	end
end

function p.getNamespaceParameters(titleObj, mappings)
	-- We don't use title.nsText for the namespace name because it adds
	-- underscores.
	local mappingsKey
	if titleObj.isTalkPage then
		mappingsKey = 'talk'
	else
		mappingsKey = mw.site.namespaces[titleObj.namespace].name
	end
	mappingsKey = mw.ustring.lower(mappingsKey)
	return mappings[mappingsKey] or {}
end

return p</text>
      <sha1>omlsnhudxz6juptvtxz7ns97jutbzc5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Check for unknown parameters</title>
    <ns>828</ns>
    <id>42286729</id>
    <revision>
      <id>726655795</id>
      <parentid>726655742</parentid>
      <timestamp>2016-06-23T14:41:43Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2400">-- This module may be used to compare the arguments passed to the parent
-- with a list of arguments, returning a specified result if an argument is
-- not on the list
local p = {}

local function trim(s)
	return s:match('^%s*(.-)%s*$')
end

local function isnotempty(s)
	return s and trim(s) ~= ''
end

function p.check (frame)
	local args = frame.args
	local pargs = frame:getParent().args
	local ignoreblank = isnotempty(frame.args['ignoreblank'])
	local showblankpos = isnotempty(frame.args['showblankpositional'])
	local knownargs = {}
	local unknown = frame.args['unknown'] or 'Found _VALUE_, '
	local preview = frame.args['preview']

	local values = {}
	local res = {}
	local regexps = {}

	-- create the list of known args, regular expressions, and the return string
	for k, v in pairs(args) do
		if type(k) == 'number' then
			v = trim(v)
			knownargs[v] = 1
		elseif k:find('^regexp[1-9][0-9]*$') then
			table.insert(regexps, '^' .. v .. '$')
		end
	end
	if isnotempty(preview) then 
		preview = '&lt;div class=&quot;hatnote&quot; style=&quot;color:red&quot;&gt;&lt;strong&gt;Warning:&lt;/strong&gt; ' .. preview .. ' (this message is shown only in preview).&lt;/div&gt;'
	elseif preview == nil then
		preview = unknown
	end

	-- loop over the parent args, and make sure they are on the list
	for k, v in pairs(pargs) do
		if type(k) == 'string' and knownargs[k] == nil then
			local knownflag = false
			for i, regexp in ipairs(regexps) do
				if mw.ustring.match(k, regexp) then
					knownflag = true
					break
				end
			end
			if not knownflag and ( not ignoreblank or isnotempty(v) )  then
				k = mw.ustring.gsub(k, '[^%w\-_ ]', '?')
				table.insert(values, k)
			end
		elseif type(k) == 'number' and 
			knownargs[tostring(k)] == nil and
			( showblankpos or isnotempty(v) )
		then
			local vlen = mw.ustring.len(v)
			v = mw.ustring.sub(v, 1, (vlen &lt; 25) and vlen or 25) 
			v = mw.ustring.gsub(v, '[^%w\-_ ]', '?')
			table.insert(values, k .. ' = ' .. v .. ((vlen &gt;= 25) and ' ...' or ''))
		end
	end

	-- add resuls to the output tables
	if #values &gt; 0 then
		if frame:preprocess( &quot;{{REVISIONID}}&quot; ) == &quot;&quot; then
			unknown = preview
		end
		for k, v in pairs(values) do
			if v == '' then
			-- Fix odd bug for | = which gets stripped to the empty string and
			-- breaks category links
			v = ' '
			end
			local r =  unknown:gsub('_VALUE_', v)
			table.insert(res, r)
		end
	end

	return table.concat(res)
end

return p</text>
      <sha1>hrayw1t1r2ij1wg65qi0jh0x6y31ba4</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Check isxn</title>
    <ns>828</ns>
    <id>47420247</id>
    <revision>
      <id>783139241</id>
      <parentid>712698918</parentid>
      <timestamp>2017-05-31T10:38:54Z</timestamp>
      <contributor>
        <username>The Anome</username>
        <id>76</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:Check isxn]]&quot;: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5972">-- This template is a copy of the ISXN validation code from [[Module:Citation/CS1]]
-- which allows for validating ISBN, ISMN, and ISSN without invoking a citation template

local p = {}

--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------

ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit. ISBN-13 is checked in check_isbn().
If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length and stripped of dashes,
spaces and other non-isxn characters.

]]

local function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of byte values '0'  0x30 .. '9'   0x39, 'X'  0x58
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( &quot;X&quot; ) then		-- if checkdigit is X (compares the byte value of 'X' which is 0x58)
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N  _ 1 3 &gt;----------------------------------------------

ISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.
If the number is valid, the result will be 0. Before calling this function, isbn-13/ismn must be checked for length
and stripped of dashes, spaces and other non-isxn-13 characters.

]]

local function is_valid_isxn_13 (isxn_str)
	local temp=0;
	
	isxn_str = { isxn_str:byte(1, 13) };										-- make a table of byte values '0'  0x30 .. '9'   0x39
	for i, v in ipairs( isxn_str ) do
		temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );				-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit
	end
	return temp % 10 == 0;														-- sum modulo 10 is zero when isbn-13/ismn is correct
end

--[[--------------------------&lt; C H E C K _ I S B N &gt;------------------------------------------------------------

Determines whether an ISBN string is valid

]]

local function check_isbn( isbn_str, error_string )
	if nil ~= isbn_str:match(&quot;[^%s-0-9X]&quot;) then -- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
		return error_string;
	end
	isbn_str = isbn_str:gsub( &quot;-&quot;, &quot;&quot; ):gsub( &quot; &quot;, &quot;&quot; );	-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return error_string;
	end

	if len == 10 then
		if isbn_str:match( &quot;^%d*X?$&quot; ) == nil then 
			return error_string; 
		end
		return is_valid_isxn(isbn_str, 10) and '' or error_string;
	else
		local temp = 0;
		if isbn_str:match( &quot;^97[89]%d*$&quot; ) == nil then -- isbn13 begins with 978 or 979; ismn begins with 979
			return error_string; 
		end
		return is_valid_isxn_13 (isbn_str) and '' or error_string;
	end
end

--[[--------------------------&lt; C H E C K _ I S M N &gt;------------------------------------------------------------

Determines whether an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the
same check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf
section 2, pages 912.

]]

local function check_ismn (id, error_string)
	local text;
	local valid_ismn = true;

	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );													-- strip spaces, hyphens, and endashes from the ismn

	if 13 ~= id:len() or id:match( &quot;^9790%d*$&quot; ) == nil then					-- ismn must be 13 digits and begin 9790
		valid_ismn = false;
	else
		valid_ismn=is_valid_isxn_13 (id);										-- validate ismn
	end

	return valid_ismn and '' or error_string
end

--[[--------------------------&lt; I S S N &gt;----------------------------------------------------------------------

Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but has separated the two groups of four
digits with a space.  When that condition occurred, the resulting link looked like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length and makes sure that the checkdigit agrees
with the calculated value.  Incorrect length (8 digits), characters other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn
error message.

]]

local function check_issn(id, error_string)
	local issn_copy = id;		-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local text;
	local valid_issn = true;

	if not id:match ('^%d%d%d%d%-%d%d%d[%dX]$') then
		return error_string;
	end
	
	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );									-- strip spaces, hyphens, and endashes from the issn

	if 8 ~= id:len() or nil == id:match( &quot;^%d*X?$&quot; ) then		-- validate the issn: 8 digits long, containing only 0-9 or X in the last position
		valid_issn=false;										-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);						-- validate issn
	end

	return valid_issn and '' or error_string
end


------------------------------&lt; E N T R Y   P O I N T S &gt;--------------------------------------------------====

function p.check_isbn(frame)
	return check_isbn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

function p.check_ismn(frame)
	return check_ismn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

function p.check_issn(frame)
	return check_issn(frame.args[1] or frame:getParent().args[1], frame.args['error'] or frame:getParent().args['error'] or 'error')
end

return p</text>
      <sha1>m39a8k5gmtbg6x3k2f7rizj3jk5on20</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1</title>
    <ns>828</ns>
    <id>38573037</id>
    <revision>
      <id>782677680</id>
      <parentid>777958692</parentid>
      <timestamp>2017-05-28T13:34:26Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>interim fix to kern_quotes(); see [[Help_talk:Citation_Style_1#single_quote_for_an_ASCII_quote|discussion]];</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="167324">
local cs1 ={};

--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local dates, year_date_check, reformat_dates, date_hyphen_to_dash				-- functions in Module:Citation/CS1/Date_validation

local is_set, in_array, substitute, error_comment, set_error, select_one,		-- functions in Module:Citation/CS1/Utilities
	add_maint_cat, wrap_style, safe_for_italics, remove_wiki_link;

local z ={};																	-- tables in Module:Citation/CS1/Utilities

local extract_ids, extract_id_access_levels, build_id_list, is_embargoed;		-- functions in Module:Citation/CS1/Identifiers

local make_coins_title, get_coins_pages, COinS;									-- functions in Module:Citation/CS1/COinS

local cfg = {};																	-- table of configuration tables that are defined in Module:Citation/CS1/Configuration
local whitelist = {};															-- table of tables listing valid template parameter names; defined in Module:Citation/CS1/Whitelist


--[[--------------------------&lt; P A G E   S C O P E   V A R I A B L E S &gt;--------------------------------------

delare variables here that have page-wide scope that are not brought in from other modules; thatare created here
and used here

]]

local added_deprecated_cat;														-- boolean flag so that the category is added only once
local added_prop_cats = {};														-- list of property categories that have been added to z.properties_cats
local added_vanc_errs;															-- boolean flag so we only emit one Vancouver error / category

local Frame;																	-- holds the module's frame table


--[[--------------------------&lt; F I R S T _ S E T &gt;------------------------------------------------------------

Locates and returns the first set value in a table of values where the order established in the table,
left-to-right (or top-to-bottom), is the order in which the values are evaluated.  Returns nil if none are set.

This version replaces the original 'for _, val in pairs do' and a similar version that used ipairs.  With the pairs
version the order of evaluation could not be guaranteed.  With the ipairs version, a nil value would terminate
the for-loop before it reached the actual end of the list.

]]

local function first_set (list, count)
	local i = 1;
	while i &lt;= count do															-- loop through all items in list
		if is_set( list[i] ) then
			return list[i];														-- return the first set list member
		end
		i = i + 1;																-- point to next
	end
end

--[[--------------------------&lt; A D D _ P R O P _ C A T &gt;--------------------------------------------------------

Adds a category to z.properties_cats using names from the configuration file with additional text if any.

added_prop_cats is a table declared in page scope variables above

]]

local function add_prop_cat (key, arguments)
	if not added_prop_cats [key] then
		added_prop_cats [key] = true;											-- note that we've added this category
		table.insert( z.properties_cats, substitute (cfg.prop_cats [key], arguments));		-- make name then add to table
	end
end

--[[--------------------------&lt; A D D _ V A N C _ E R R O R &gt;----------------------------------------------------

Adds a single Vancouver system error message to the template's output regardless of how many error actually exist.
To prevent duplication, added_vanc_errs is nil until an error message is emitted.

added_vanc_errs is a boolean declared in page scope variables above

]]

local function add_vanc_error (source)
	if not added_vanc_errs then
		added_vanc_errs = true;													-- note that we've added this category
		table.insert( z.message_tail, { set_error( 'vancouver', {source}, true ) } );
	end
end


--[[--------------------------&lt; I S _ S C H E M E &gt;------------------------------------------------------------

does this thing that purports to be a uri scheme seem to be a valid scheme?  The scheme is checked to see if it
is in agreement with http://tools.ietf.org/html/std66#section-3.1 which says:
	Scheme names consist of a sequence of characters beginning with a
   letter and followed by any combination of letters, digits, plus
   (&quot;+&quot;), period (&quot;.&quot;), or hyphen (&quot;-&quot;).

returns true if it does, else false

]]

local function is_scheme (scheme)
	return scheme and scheme:match ('^%a[%a%d%+%.%-]*:');						-- true if scheme is set and matches the pattern
end


--[=[-------------------------&lt; I S _ D O M A I N _ N A M E &gt;--------------------------------------------------

Does this thing that purports to be a domain name seem to be a valid domain name?

Syntax defined here: http://tools.ietf.org/html/rfc1034#section-3.5
BNF defined here: https://tools.ietf.org/html/rfc4234
Single character names are generally reserved; see https://tools.ietf.org/html/draft-ietf-dnsind-iana-dns-01#page-15;
	see also [[Single-letter second-level domain]]
list of tlds: https://www.iana.org/domains/root/db

rfc952 (modified by rfc 1123) requires the first and last character of a hostname to be a letter or a digit.  Between
the first and last characters the name may use letters, digits, and the hyphen.

Also allowed are IPv4 addresses. IPv6 not supported

domain is expected to be stripped of any path so that the last character in the last character of the tld.  tld
is two or more alpha characters.  Any preceding '//' (from splitting a url with a scheme) will be stripped
here.  Perhaps not necessary but retained incase it is necessary for IPv4 dot decimal.

There are several tests:
	the first character of the whole domain name including subdomains must be a letter or a digit
	internationalized domain name (ascii characters with .xn-- ASCII Compatible Encoding (ACE) prefix xn-- in the tld) see https://tools.ietf.org/html/rfc3490
	single-letter/digit second-level domains in the .org TLD
	q, x, and z SL domains in the .com TLD
	i and q SL domains in the .net TLD
	single-letter SL domains in the ccTLDs (where the ccTLD is two letters)
	two-character SL domains in gTLDs (where the gTLD is two or more letters)
	three-plus-character SL domains in gTLDs (where the gTLD is two or more letters)
	IPv4 dot-decimal address format; TLD not allowed

returns true if domain appears to be a proper name and tld or IPv4 address, else false

]=]

local function is_domain_name (domain)
	if not domain then
		return false;															-- if not set, abandon
	end
	
	domain = domain:gsub ('^//', '');											-- strip '//' from domain name if present; done here so we only have to do it once
	
	if not domain:match ('^[%a%d]') then										-- first character must be letter or digit
		return false;
	end
																				-- Do most common case first
	if domain:match ('%f[%a%d][%a%d][%a%d%-]+[%a%d]%.%a%a+$') then				-- three or more character hostname.hostname or hostname.tld
		return true;
	elseif domain:match ('%f[%a%d][%a%d][%a%d%-]+[%a%d]%.xn%-%-[%a%d]+$') then	-- internationalized domain name with ACE prefix
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.org$') then							-- one character .org hostname
		return true;
	elseif domain:match ('%f[%a][qxz]%.com$') then								-- assigned one character .com hostname (x.com times out 2015-12-10)
		return true;
	elseif domain:match ('%f[%a][iq]%.net$') then								-- assigned one character .net hostname (q.net registered but not active 2015-12-10)
		return true;
	elseif domain:match ('%f[%a%d][%a%d]%.%a%a$') then							-- one character hostname and cctld (2 chars)
		return true;
	elseif domain:match ('%f[%a%d][%a%d][%a%d]%.%a%a+$') then					-- two character hostname and tld
		return true;
	elseif domain:match ('^%d%d?%d?%.%d%d?%d?%.%d%d?%d?%.%d%d?%d?') then		-- IPv4 address
		return true;
	else
		return false;
	end
end


--[[--------------------------&lt; I S _ U R L &gt;------------------------------------------------------------------

returns true if the scheme and domain parts of a url appear to be a valid url; else false.

This function is the last step in the validation process.  This function is separate because there are cases that
are not covered by split_url(), for example is_parameter_ext_wikilink() which is looking for bracketted external
wikilinks.

]]

local function is_url (scheme, domain)
	if is_set (scheme) then														-- if scheme is set check it and domain
		return is_scheme (scheme) and is_domain_name (domain);
	else
		return is_domain_name (domain);											-- scheme not set when url is protocol relative
	end
end


--[[--------------------------&lt; S P L I T _ U R L &gt;------------------------------------------------------------

Split a url into a scheme, authority indicator, and domain.

First remove Fully Qualified Domain Name terminator (a dot following tld) (if any) and any path(/), query(?) or fragment(#).

If protocol relative url, return nil scheme and domain else return nil for both scheme and domain.

When not protocol relative, get scheme, authority indicator, and domain.  If there is an authority indicator (one
or more '/' characters immediately following the scheme's colon), make sure that there are only 2.

Strip off any port and path;

]]

local function split_url (url_str)
	local scheme, authority, domain;
	
	url_str = url_str:gsub ('([%a%d])%.?[/%?#].*$', '%1');						-- strip FQDN terminator and path(/), query(?), fragment (#) (the capture prevents false replacement of '//')

	if url_str:match ('^//%S*') then											-- if there is what appears to be a protocol relative url
		domain = url_str:match ('^//(%S*)')
	elseif url_str:match ('%S-:/*%S+') then										-- if there is what appears to be a scheme, optional authority indicator, and domain name
		scheme, authority, domain = url_str:match ('(%S-:)(/*)(%S+)');			-- extract the scheme, authority indicator, and domain portions
		authority = authority:gsub ('//', '', 1);								-- replace place 1 pair of '/' with nothing;
		if is_set(authority) then												-- if anything left (1 or 3+ '/' where authority should be) then
			return scheme;														-- return scheme only making domain nil which will cause an error message
		end
		domain = domain:gsub ('(%a):%d+', '%1');								-- strip port number if present
	end
	
	return scheme, domain;
end


--[[--------------------------&lt; L I N K _ P A R A M _ O K &gt;---------------------------------------------------

checks the content of |title-link=, |series-link=, |author-link= etc for properly formatted content: no wikilinks, no urls

Link parameters are to hold the title of a wikipedia article so none of the WP:TITLESPECIALCHARACTERS are allowed:
	# &lt; &gt; [ ] | { } _
except the underscore which is used as a space in wiki urls and # which is used for section links

returns false when the value contains any of these characters.

When there are no illegal characters, this function returns TRUE if value DOES NOT appear to be a valid url (the
|&lt;param&gt;-link= parameter is ok); else false when value appears to be a valid url (the |&lt;param&gt;-link= parameter is NOT ok).

]]

local function link_param_ok (value)
	local scheme, domain;
	if value:find ('[&lt;&gt;%[%]|{}]') then											-- if any prohibited characters
		return false;
	end

	scheme, domain = split_url (value);											-- get scheme or nil and domain or nil from url; 
	return not is_url (scheme, domain);											-- return true if value DOES NOT appear to be a valid url
end

--[[--------------------------&lt; L I N K _ T I T L E _ O K &gt;---------------------------------------------------

Use link_param_ok() to validate |&lt;param&gt;-link= value and its matching |&lt;title&gt;= value.

|&lt;title&gt;= may be wikilinked but not when |&lt;param&gt;-link= has a value.  This function emits an error message when
that condition exists

]]

local function link_title_ok (link, lorig, title, torig)
local orig;

	if is_set (link) then 														-- don't bother if &lt;param&gt;-link doesn't have a value
		if not link_param_ok (link) then										-- check |&lt;param&gt;-link= markup
			orig = lorig;														-- identify the failing link parameter
		elseif title:find ('%[%[') then											-- check |title= for wikilink markup
			orig = torig;														-- identify the failing |title= parameter
		end
	end

	if is_set (orig) then
		table.insert( z.message_tail, { set_error( 'bad_paramlink', orig)});	-- url or wikilink in |title= with |title-link=;
	end
end


--[[--------------------------&lt; C H E C K _ U R L &gt;------------------------------------------------------------

Determines whether a URL string appears to be valid.

First we test for space characters.  If any are found, return false.  Then split the url into scheme and domain
portions, or for protocol relative (//example.com) urls, just the domain.  Use is_url() to validate the two
portions of the url.  If both are valid, or for protocol relative if domain is valid, return true, else false.

Because it is different from a standard url, and because this module used external_link() to make external links
that work for standard and news: links, we validate newsgroup names here.  The specification for a newsgroup name
is at https://tools.ietf.org/html/rfc5536#section-3.1.4

]]

local function check_url( url_str )
	if nil == url_str:match (&quot;^%S+$&quot;) then										-- if there are any spaces in |url=value it can't be a proper url
		return false;
	end
	local scheme, domain;

	scheme, domain = split_url (url_str);										-- get scheme or nil and domain or nil from url;
	
	if 'news:' == scheme then													-- special case for newsgroups
		return domain:match('^[%a%d%+%-_]+%.[%a%d%+%-_%.]*[%a%d%+%-_]$');
	end
	
	return is_url (scheme, domain);												-- return true if value appears to be a valid url
end


--[=[-------------------------&lt; I S _ P A R A M E T E R _ E X T _ W I K I L I N K &gt;----------------------------

Return true if a parameter value has a string that begins and ends with square brackets [ and ] and the first
non-space characters following the opening bracket appear to be a url.  The test will also find external wikilinks
that use protocol relative urls. Also finds bare urls.

The frontier pattern prevents a match on interwiki links which are similar to scheme:path urls.  The tests that
find bracketed urls are required because the parameters that call this test (currently |title=, |chapter=, |work=,
and |publisher=) may have wikilinks and there are articles or redirects like '//Hus' so, while uncommon, |title=[[//Hus]]
is possible as might be [[en://Hus]].

]=]

local function is_parameter_ext_wikilink (value)
local scheme, domain;

	if value:match ('%f[%[]%[%a%S*:%S+.*%]') then								-- if ext wikilink with scheme and domain: [xxxx://yyyyy.zzz]
		scheme, domain = split_url (value:match ('%f[%[]%[(%a%S*:%S+).*%]'));
	elseif value:match ('%f[%[]%[//%S+.*%]') then								-- if protocol relative ext wikilink: [//yyyyy.zzz]
		scheme, domain = split_url (value:match ('%f[%[]%[(//%S+).*%]'));
	elseif value:match ('%a%S*:%S+') then										-- if bare url with scheme; may have leading or trailing plain text
		scheme, domain = split_url (value:match ('(%a%S*:%S+)'));
	elseif value:match ('//%S+') then											-- if protocol relative bare url: //yyyyy.zzz; may have leading or trailing plain text
		scheme, domain = split_url (value:match ('(//%S+)'));					-- what is left should be the domain
	else
		return false;															-- didn't find anything that is obviously a url
	end

	return is_url (scheme, domain);												-- return true if value appears to be a valid url
end


--[[-------------------------&lt; C H E C K _ F O R _ U R L &gt;-----------------------------------------------------

loop through a list of parameters and their values.  Look at the value and if it has an external link, emit an error message.

]]

local function check_for_url (parameter_list)
local error_message = '';
	for k, v in pairs (parameter_list) do										-- for each parameter in the list
		if is_parameter_ext_wikilink (v) then									-- look at the value; if there is a url add an error message
			if is_set(error_message) then										-- once we've added the first portion of the error message ...
				error_message=error_message .. &quot;, &quot;;							-- ... add a comma space separator
			end
			error_message=error_message .. &quot;&amp;#124;&quot; .. k .. &quot;=&quot;;				-- add the failed parameter
		end
	end
	if is_set (error_message) then												-- done looping, if there is an error message, display it
		table.insert( z.message_tail, { set_error( 'param_has_ext_link', {error_message}, true ) } );
	end
end


--[[--------------------------&lt; S A F E _ F O R _ U R L &gt;------------------------------------------------------

Escape sequences for content that will be used for URL descriptions

]]

local function safe_for_url( str )
	if str:match( &quot;%[%[.-%]%]&quot; ) ~= nil then 
		table.insert( z.message_tail, { set_error( 'wikilink_in_url', {}, true ) } );
	end
	
	return str:gsub( '[%[%]\n]', {	
		['['] = '&amp;#91;',
		[']'] = '&amp;#93;',
		['\n'] = ' ' } );
end

--[[--------------------------&lt; E X T E R N A L _ L I N K &gt;----------------------------------------------------

Format an external link with error checking

]]

local function external_link( URL, label, source, access)
	local error_str = &quot;&quot;;
	local domain;
	local path;
	local base_url;
	
	if not is_set( label ) then
		label = URL;
		if is_set( source ) then
			error_str = set_error( 'bare_url_missing_title', { wrap_style ('parameter', source) }, false, &quot; &quot; );
		else
			error( cfg.messages[&quot;bare_url_no_origin&quot;] );
		end			
	end
	if not check_url( URL ) then
		error_str = set_error( 'bad_url', {wrap_style ('parameter', source)}, false, &quot; &quot; ) .. error_str;
	end
	
	domain, path = URL:match ('^([/%.%-%+:%a%d]+)([/%?#].*)$');					-- split the url into scheme plus domain and path
	if path then																-- if there is a path portion
		path = path:gsub ('[%[%]]', {['[']='%5b',[']']='%5d'});					-- replace '[' and ']' with their percent encoded values
		URL=domain..path;														-- and reassemble
	end
	
	if is_set (access) then														-- access level (subscription, registration, limited)
		local label_head = '';
		local label_tail;
		local markup = '';														-- can't start a span inside italic markup and end it outside the italic markup

		label = safe_for_url (label);											-- replace square brackets and newlines (is this necessary? already done above?)
		if label:match (&quot;(.*)%s+(.+)('''?)$&quot;) then								-- for italicized titles (cite book, etc)
			label_head, label_tail, markup = label:match (&quot;(.*)%s+(.+)('''?)$&quot;);	-- split the label at the right-most space; separate the markup
		elseif label:match (&quot;(.*)%s+(.+)$&quot;) then								-- for upright titles (journal, news, magazine, etc)
			label_head, label_tail = label:match (&quot;(.*)%s+(.+)$&quot;);				-- split the label at the right-most space; no markup 
		elseif label:match (&quot;(.+)('''?)$&quot;) then									-- single word label with markup
			label_tail, markup = label:match (&quot;(.+)('''?)$&quot;);					-- save label text as label tail; separate the markup
		else
			label_tail = label;
		end

		base_url = table.concat (
			{
			'&lt;span class=&quot;plainlinks&quot;&gt;[',										-- opening css
			URL,																-- the url
			' ',																-- the required space
			label_head,															-- all but the last word of the label
			' &lt;span class=&quot;nowrap&quot;&gt;',											-- nowrap css for the last word and the signal icon
			label_tail,															-- last (or only) word of the label inside the span
			'&lt;span style=&quot;padding-left:0.15em&quot;&gt;',								-- signal spacing css
			cfg.presentation[access],											-- the appropriate icon
			'&lt;/span&gt;&lt;/span&gt;',													-- close signal spacing and nowrap spans
			markup,																-- insert italic markup if any
			']&lt;/span&gt;'															-- close the plain links span
			});
	else
		base_url = table.concat({ &quot;[&quot;, URL, &quot; &quot;, safe_for_url( label ), &quot;]&quot; });	-- no signal markup
	end
	
	return table.concat({ base_url, error_str });
end


--[[--------------------------&lt; D E P R E C A T E D _ P A R A M E T E R &gt;--------------------------------------

Categorize and emit an error message when the citation contains one or more deprecated parameters.  The function includes the
offending parameter name to the error message.  Only one error message is emitted regardless of the number of deprecated
parameters in the citation.

added_deprecated_cat is a boolean declared in page scope variables above

]]

local function deprecated_parameter(name)
	if not added_deprecated_cat then
		added_deprecated_cat = true;											-- note that we've added this category
		table.insert( z.message_tail, { set_error( 'deprecated_params', {name}, true ) } );		-- add error message
	end
end

--[[--------------------------&lt; K E R N _ Q U O T E S &gt;--------------------------------------------------------

Apply kerning to open the space between the quote mark provided by the Module and a leading or trailing quote mark contained in a |title= or |chapter= parameter's value.
This function will positive kern either single or double quotes:
	&quot;'Unkerned title with leading and trailing single quote marks'&quot;
	&quot; 'Kerned title with leading and trailing single quote marks' &quot; (in real life the kerning isn't as wide as this example)
Double single quotes (italic or bold wikimarkup) are not kerned.

Replaces unicode quotemarks with typewriter quote marks regardless of the need for kerning.

Call this function for chapter titles, for website titles, etc; not for book titles.

]]

local function kern_quotes (str)
	local cap='';
	local cap2='';
																				-- TODO: move this elswhere so that all title-holding elements get these quote marks replaced?
--	str= mw.ustring.gsub (str, '[]', '\&quot;');									-- replace  (U+201C &amp; U+201D) with &quot; (typewriter double quote mark)
--	str= mw.ustring.gsub (str, '[]', '\'');									-- replace  (U+2018 &amp; U+2019) with ' (typewriter single quote mark)
	
	cap, cap2 = str:match (&quot;^([\&quot;\'])([^\'].+)&quot;);								-- match leading double or single quote but not double single quotes
	if is_set (cap) then
		str = substitute (cfg.presentation['kern-left'], {cap, cap2});
	end

	cap, cap2 = str:match (&quot;^(.+[^\'])([\&quot;\'])$&quot;)
	if is_set (cap) then
		str = substitute (cfg.presentation['kern-right'], {cap, cap2});
	end
	return str;
end

--[[--------------------------&lt; F O R M A T _ S C R I P T _ V A L U E &gt;----------------------------------------

|script-title= holds title parameters that are not written in Latin based scripts: Chinese, Japanese, Arabic, Hebrew, etc. These scripts should
not be italicized and may be written right-to-left.  The value supplied by |script-title= is concatenated onto Title after Title has been wrapped
in italic markup.

Regardless of language, all values provided by |script-title= are wrapped in &lt;bdi&gt;...&lt;/bdi&gt; tags to isolate rtl languages from the English left to right.

|script-title= provides a unique feature.  The value in |script-title= may be prefixed with a two-character ISO639-1 language code and a colon:
	|script-title=ja:*** *** (where * represents a Japanese character)
Spaces between the two-character code and the colon and the colon and the first script character are allowed:
	|script-title=ja : *** ***
	|script-title=ja: *** ***
	|script-title=ja :*** ***
Spaces preceding the prefix are allowed: |script-title = ja:*** ***

The prefix is checked for validity.  If it is a valid ISO639-1 language code, the lang attribute (lang=&quot;ja&quot;) is added to the &lt;bdi&gt; tag so that browsers can
know the language the tag contains.  This may help the browser render the script more correctly.  If the prefix is invalid, the lang attribute
is not added.  At this time there is no error message for this condition.

Supports |script-title= and |script-chapter=

TODO: error messages when prefix is invalid ISO639-1 code; when script_value has prefix but no script;
]]

local function format_script_value (script_value)
	local lang='';																-- initialize to empty string
	local name;
	if script_value:match('^%l%l%s*:') then										-- if first 3 non-space characters are script language prefix
		lang = script_value:match('^(%l%l)%s*:%s*%S.*');						-- get the language prefix or nil if there is no script
		if not is_set (lang) then
			return '';															-- script_value was just the prefix so return empty string
		end
																				-- if we get this far we have prefix and script
		name = mw.language.fetchLanguageName( lang, &quot;en&quot; );						-- get language name so that we can use it to categorize
		if is_set (name) then													-- is prefix a proper ISO 639-1 language code?
			script_value = script_value:gsub ('^%l%l%s*:%s*', '');				-- strip prefix from script
																				-- is prefix one of these language codes?
			if in_array (lang, cfg.script_lang_codes) then
				add_prop_cat ('script_with_name', {name, lang})
			else
				add_prop_cat ('script')
			end
			lang = ' lang=&quot;' .. lang .. '&quot; ';									-- convert prefix into a lang attribute
		else
			lang = '';															-- invalid so set lang to empty string
		end
	end
	script_value = substitute (cfg.presentation['bdi'], {lang, script_value});	-- isolate in case script is rtl

	return script_value;
end

--[[--------------------------&lt; S C R I P T _ C O N C A T E N A T E &gt;------------------------------------------

Initially for |title= and |script-title=, this function concatenates those two parameter values after the script value has been 
wrapped in &lt;bdi&gt; tags.
]]

local function script_concatenate (title, script)
	if is_set (script) then
		script = format_script_value (script);									-- &lt;bdi&gt; tags, lang atribute, categorization, etc; returns empty string on error
		if is_set (script) then
			title = title .. ' ' .. script;										-- concatenate title and script title
		end
	end
	return title;
end


--[[--------------------------&lt; W R A P _ M S G &gt;--------------------------------------------------------------

Applies additional message text to various parameter values. Supplied string is wrapped using a message_list
configuration taking one argument.  Supports lower case text for {{citation}} templates.  Additional text taken
from citation_config.messages - the reason this function is similar to but separate from wrap_style().

]]

local function wrap_msg (key, str, lower)
	if not is_set( str ) then
		return &quot;&quot;;
	end
	if true == lower then
		local msg;
		msg = cfg.messages[key]:lower();										-- set the message to lower case before 
		return substitute( msg, str );										-- including template text
	else
		return substitute( cfg.messages[key], str );
	end		
end


--[[--------------------------&lt; F O R M A T _ C H A P T E R _ T I T L E &gt;--------------------------------------

Format the four chapter parameters: |script-chapter=, |chapter=, |trans-chapter=, and |chapter-url= into a single Chapter meta-
parameter (chapter_url_source used for error messages).

]]

local function format_chapter_title (scriptchapter, chapter, transchapter, chapterurl, chapter_url_source, no_quotes)
	local chapter_error = '';
	
	if not is_set (chapter) then
		chapter = '';															-- to be safe for concatenation
	else
		if false == no_quotes then
			chapter = kern_quotes (chapter);										-- if necessary, separate chapter title's leading and trailing quote marks from Module provided quote marks
			chapter = wrap_style ('quoted-title', chapter);
		end
	end

	chapter = script_concatenate (chapter, scriptchapter)						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped

	if is_set (transchapter) then
		transchapter = wrap_style ('trans-quoted-title', transchapter);
		if is_set (chapter) then
			chapter = chapter ..  ' ' .. transchapter;
		else																	-- here when transchapter without chapter or script-chapter
			chapter = transchapter;												-- 
			chapter_error = ' ' .. set_error ('trans_missing_title', {'chapter'});
		end
	end

	if is_set (chapterurl) then
		chapter = external_link (chapterurl, chapter, chapter_url_source, nil);		-- adds bare_url_missing_title error if appropriate
	end

	return chapter .. chapter_error;
end

--[[--------------------------&lt; H A S _ I N V I S I B L E _ C H A R S &gt;----------------------------------------

This function searches a parameter's value for nonprintable or invisible characters.  The search stops at the
first match.

This function will detect the visible replacement character when it is part of the wikisource.

Detects but ignores nowiki and math stripmarkers.  Also detects other named stripmarkers (gallery, math, pre, ref)
and identifies them with a slightly different error message.  See also coins_cleanup().

Detects but ignores the character pattern that results from the transclusion of {{'}} templates.

Output of this function is an error message that identifies the character or the Unicode group, or the stripmarker
that was detected along with its position (or, for multi-byte characters, the position of its first byte) in the
parameter value.

]]

local function has_invisible_chars (param, v)
	local position = '';														-- position of invisible char or starting position of stripmarker
	local dummy;																-- end of matching string; not used but required to hold end position when a capture is returned
	local capture;																-- used by stripmarker detection to hold name of the stripmarker
	local i=1;
	local stripmarker, apostrophe;
	
	capture = string.match (v, '[%w%p ]*');										-- Test for values that are simple ASCII text and bypass other tests if true
	if capture == v then														-- if same there are no unicode characters
		return;
	end

	while cfg.invisible_chars[i] do
		local char=cfg.invisible_chars[i][1]									-- the character or group name
		local pattern=cfg.invisible_chars[i][2]									-- the pattern used to find it
		position, dummy, capture = mw.ustring.find (v, pattern)					-- see if the parameter value contains characters that match the pattern
		
		if position then
			if 'nowiki' == capture or 'math' == capture then 					-- nowiki, math stripmarker (not an error condition)
				stripmarker = true;												-- set a flag
			elseif true == stripmarker and 'delete' == char then				-- because stripmakers begin and end with the delete char, assume that we've found one end of a stripmarker
				position = nil;													-- unset
			else
				local err_msg;
				if capture then
					err_msg = capture .. ' ' .. char;
				else
					err_msg = char .. ' ' .. 'character';
				end

				table.insert( z.message_tail, { set_error( 'invisible_char', {err_msg, wrap_style ('parameter', param), position}, true ) } );	-- add error message
				return;															-- and done with this parameter
			end
		end
		i=i+1;																	-- bump our index
	end
end


--[[--------------------------&lt; A R G U M E N T _ W R A P P E R &gt;----------------------------------------------

Argument wrapper.  This function provides support for argument mapping defined in the configuration file so that
multiple names can be transparently aliased to single internal variable.

]]

local function argument_wrapper( args )
	local origin = {};
	
	return setmetatable({
		ORIGIN = function( self, k )
			local dummy = self[k]; --force the variable to be loaded.
			return origin[k];
		end
	},
	{
		__index = function ( tbl, k )
			if origin[k] ~= nil then
				return nil;
			end
			
			local args, list, v = args, cfg.aliases[k];
			
			if type( list ) == 'table' then
				v, origin[k] = select_one( args, list, 'redundant_parameters' );
				if origin[k] == nil then
					origin[k] = ''; -- Empty string, not nil
				end
			elseif list ~= nil then
				v, origin[k] = args[list], list;
			else
				-- maybe let through instead of raising an error?
				-- v, origin[k] = args[k], k;
				error( cfg.messages['unknown_argument_map'] );
			end
			
			-- Empty strings, not nil;
			if v == nil then
				v = cfg.defaults[k] or '';
				origin[k] = '';
			end
			
			tbl = rawset( tbl, k, v );
			return v;
		end,
	});
end

--[[--------------------------&lt; V A L I D A T E &gt;--------------------------------------------------------------

Looks for a parameter's name in one of several whitelists.

Parameters in the whitelist can have three values:
	true - active, supported parameters
	false - deprecated, supported parameters
	nil - unsupported parameters
	
]]

--local function validate( name )
local function validate( name, cite_class )
	local name = tostring( name );
	local state;
	
	if in_array (cite_class, {'arxiv', 'biorxiv', 'citeseerx'}) then				-- limited parameter sets allowed for these templates
		state = whitelist.limited_basic_arguments[ name ];
		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end

		if 'arxiv' == cite_class then											-- basic parameters unique to these templates
			state = whitelist.arxiv_basic_arguments[name];
		end
		if 'biorxiv' == cite_class then
			state = whitelist.biorxiv_basic_arguments[name];
		end
		if 'citeseerx' == cite_class then
			state = whitelist.citeseerx_basic_arguments[name];
		end

		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end
																				-- limited enumerated parameters list
		name = name:gsub( &quot;%d+&quot;, &quot;#&quot; );											-- replace digit(s) with # (last25 becomes last#)
		state = whitelist.limited_numbered_arguments[ name ];
		if true == state then return true; end									-- valid actively supported parameter
		if false == state then
			deprecated_parameter (name);										-- parameter is deprecated but still supported
			return true;
		end

		return false;															-- not supported because not found or name is set to nil
	end																			-- end limited parameter-set templates
		
	state = whitelist.basic_arguments[ name ];									-- all other templates; all normal parameters allowed
											
	if true == state then return true; end										-- valid actively supported parameter
	if false == state then
		deprecated_parameter (name);											-- parameter is deprecated but still supported
		return true;
	end
																				-- all enumerated parameters allowed
	name = name:gsub( &quot;%d+&quot;, &quot;#&quot; );												-- replace digit(s) with # (last25 becomes last#
	state = whitelist.numbered_arguments[ name ];

	if true == state then return true; end										-- valid actively supported parameter
	if false == state then
		deprecated_parameter (name);											-- parameter is deprecated but still supported
		return true;
	end
	
	return false;																-- not supported because not found or name is set to nil
end


--[[--------------------------&lt; N O W R A P _ D A T E &gt;--------------------------------------------------------

When date is YYYY-MM-DD format wrap in nowrap span: &lt;span ...&gt;YYYY-MM-DD&lt;/span&gt;.  When date is DD MMMM YYYY or is
MMMM DD, YYYY then wrap in nowrap span: &lt;span ...&gt;DD MMMM&lt;/span&gt; YYYY or &lt;span ...&gt;MMMM DD,&lt;/span&gt; YYYY

DOES NOT yet support MMMM YYYY or any of the date ranges.

]]

local function nowrap_date (date)
	local cap='';
	local cap2='';

	if date:match(&quot;^%d%d%d%d%-%d%d%-%d%d$&quot;) then
		date = substitute (cfg.presentation['nowrap1'], date);
	
	elseif date:match(&quot;^%a+%s*%d%d?,%s+%d%d%d%d$&quot;) or date:match (&quot;^%d%d?%s*%a+%s+%d%d%d%d$&quot;) then
		cap, cap2 = string.match (date, &quot;^(.*)%s+(%d%d%d%d)$&quot;);
		date = substitute (cfg.presentation['nowrap2'], {cap, cap2});
	end
	
	return date;
end

--[[--------------------------&lt; S E T _ T I T L E T Y P E &gt;----------------------------------------------------

This function sets default title types (equivalent to the citation including |type=&lt;default value&gt;) for those templates that have defaults.
Also handles the special case where it is desirable to omit the title type from the rendered citation (|type=none).

]]

local function set_titletype (cite_class, title_type)
	if is_set(title_type) then
		if &quot;none&quot; == title_type then
			title_type = &quot;&quot;;													-- if |type=none then type parameter not displayed
		end
		return title_type;														-- if |type= has been set to any other value use that value
	end

	return cfg.title_types [cite_class] or '';									-- set template's default title type; else empty string for concatenation
end


--[[--------------------------&lt; H Y P H E N _ T O _ D A S H &gt;--------------------------------------------------

Converts a hyphen to a dash

]]

local function hyphen_to_dash( str )
	if not is_set(str) or str:match( &quot;[%[%]{}&lt;&gt;]&quot; ) ~= nil then
		return str;
	end	
	return str:gsub( '-', '' );
end


--[[--------------------------&lt; S A F E _ J O I N &gt;------------------------------------------------------------

Joins a sequence of strings together while checking for duplicate separation characters.

]]

local function safe_join( tbl, duplicate_char )
	--[[
	Note: we use string functions here, rather than ustring functions.
	
	This has considerably faster performance and should work correctly as 
	long as the duplicate_char is strict ASCII.  The strings
	in tbl may be ASCII or UTF8.
	]]
	
	local str = '';																-- the output string
	local comp = '';															-- what does 'comp' mean?
	local end_chr = '';
	local trim;
	for _, value in ipairs( tbl ) do
		if value == nil then value = ''; end
		
		if str == '' then														-- if output string is empty
			str = value;														-- assign value to it (first time through the loop)
		elseif value ~= '' then
			if value:sub(1,1) == '&lt;' then										-- Special case of values enclosed in spans and other markup.
				comp = value:gsub( &quot;%b&lt;&gt;&quot;, &quot;&quot; );								-- remove html markup (&lt;span&gt;string&lt;/span&gt; -&gt; string)
			else
				comp = value;
			end
																				-- typically duplicate_char is sepc
			if comp:sub(1,1) == duplicate_char then								-- is first charactier same as duplicate_char? why test first character?
																				--   Because individual string segments often (always?) begin with terminal punct for th
																				--   preceding segment: 'First element' .. 'sepc next element' .. etc?
				trim = false;
				end_chr = str:sub(-1,-1);										-- get the last character of the output string
				-- str = str .. &quot;&lt;HERE(enchr=&quot; .. end_chr.. &quot;)&quot;					-- debug stuff?
				if end_chr == duplicate_char then								-- if same as separator
					str = str:sub(1,-2);										-- remove it
				elseif end_chr == &quot;'&quot; then										-- if it might be wikimarkup
					if str:sub(-3,-1) == duplicate_char .. &quot;''&quot; then			-- if last three chars of str are sepc'' 
						str = str:sub(1, -4) .. &quot;''&quot;;							-- remove them and add back ''
					elseif str:sub(-5,-1) == duplicate_char .. &quot;]]''&quot; then		-- if last five chars of str are sepc]]'' 
						trim = true;											-- why? why do this and next differently from previous?
					elseif str:sub(-4,-1) == duplicate_char .. &quot;]''&quot; then		-- if last four chars of str are sepc]'' 
						trim = true;											-- same question
					end
				elseif end_chr == &quot;]&quot; then										-- if it might be wikimarkup
					if str:sub(-3,-1) == duplicate_char .. &quot;]]&quot; then			-- if last three chars of str are sepc]] wikilink 
						trim = true;
					elseif str:sub(-2,-1) == duplicate_char .. &quot;]&quot; then			-- if last two chars of str are sepc] external link
						trim = true;
					elseif str:sub(-4,-1) == duplicate_char .. &quot;'']&quot; then		-- normal case when |url=something &amp; |title=Title.
						trim = true;
					end
				elseif end_chr == &quot; &quot; then										-- if last char of output string is a space
					if str:sub(-2,-1) == duplicate_char .. &quot; &quot; then				-- if last two chars of str are &lt;sepc&gt;&lt;space&gt;
						str = str:sub(1,-3);									-- remove them both
					end
				end

				if trim then
					if value ~= comp then 										-- value does not equal comp when value contains html markup
						local dup2 = duplicate_char;
						if dup2:match( &quot;%A&quot; ) then dup2 = &quot;%&quot; .. dup2; end		-- if duplicate_char not a letter then escape it
						
						value = value:gsub( &quot;(%b&lt;&gt;)&quot; .. dup2, &quot;%1&quot;, 1 )			-- remove duplicate_char if it follows html markup
					else
						value = value:sub( 2, -1 );								-- remove duplicate_char when it is first character
					end
				end
			end
			str = str .. value;													--add it to the output string
		end
	end
	return str;
end  


--[[--------------------------&lt; I S _ S U F F I X &gt;------------------------------------------------------------

returns true is suffix is properly formed Jr, Sr, or ordinal in the range 29.  Puncutation not allowed.

]]

local function is_suffix (suffix)
	if in_array (suffix, {'Jr', 'Sr', '2nd', '3rd'}) or suffix:match ('^%dth$') then
		return true;
	end
	return false;
end

--[[--------------------------&lt; I S _ G O O D _ V A N C _ N A M E &gt;--------------------------------------------

For Vancouver Style, author/editor names are supposed to be rendered in Latin (read ASCII) characters.  When a name
uses characters that contain diacritical marks, those characters are to converted to the corresponding Latin character.
When a name is written using a non-Latin alphabet or logogram, that name is to be transliterated into Latin characters.
These things are not currently possible in this module so are left to the editor to do.

This test allows |first= and |last= names to contain any of the letters defined in the four Unicode Latin character sets
	[http://www.unicode.org/charts/PDF/U0000.pdf C0 Controls and Basic Latin] 0041005A, 0061007A
	[http://www.unicode.org/charts/PDF/U0080.pdf C1 Controls and Latin-1 Supplement] 00C000D6, 00D800F6, 00F800FF
	[http://www.unicode.org/charts/PDF/U0100.pdf Latin Extended-A] 0100017F
	[http://www.unicode.org/charts/PDF/U0180.pdf Latin Extended-B] 018001BF, 01C4024F

|lastn= also allowed to contain hyphens, spaces, and apostrophes. (http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35029/)
|firstn= also allowed to contain hyphens, spaces, apostrophes, and periods

This original test:
	if nil == mw.ustring.find (last, &quot;^[A-Za-z----%-%s%']*$&quot;) or nil == mw.ustring.find (first, &quot;^[A-Za-z----%-%s%'%.]+[2-6%a]*$&quot;) then
was written ouside of the code editor and pasted here because the code editor gets confused between character insertion point and cursor position.
The test has been rewritten to use decimal character escape sequence for the individual bytes of the unicode characters so that it is not necessary
to use an external editor to maintain this code.

	\195\128-\195\150  - (U+00C0U+00D6  C0 controls)
	\195\152-\195\182  - (U+00D8-U+00F6  C0 controls)
	\195\184-\198\191  - (U+00F8-U+01BF  C0 controls, Latin extended A &amp; B)
	\199\132-\201\143  - (U+01C4-U+024F  Latin extended B)

]]

local function is_good_vanc_name (last, first)
	local first, suffix = first:match ('(.-),?%s*([%dJS][%drndth]+)%.?$') or first;		-- if first has something that looks like a generational suffix, get it

	if is_set (suffix) then
		if not is_suffix (suffix) then
			add_vanc_error ('suffix');
			return false;														-- not a name with an appropriate suffix
		end
	end
	if nil == mw.ustring.find (last, &quot;^[A-Za-z\195\128-\195\150\195\152-\195\182\195\184-\198\191\199\132-\201\143%-%s%']*$&quot;) or
		nil == mw.ustring.find (first, &quot;^[A-Za-z\195\128-\195\150\195\152-\195\182\195\184-\198\191\199\132-\201\143%-%s%'%.]*$&quot;) then
			add_vanc_error ('non-Latin character');
			return false;														-- not a string of latin characters; Vancouver requires Romanization
	end;
	return true;
end

--[[--------------------------&lt; R E D U C E _ T O _ I N I T I A L S &gt;------------------------------------------

Attempts to convert names to initials in support of |name-list-format=vanc.  

Names in |firstn= may be separated by spaces or hyphens, or for initials, a period. See http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35062/.

Vancouver style requires family rank designations (Jr, II, III, etc) to be rendered as Jr, 2nd, 3rd, etc.  See http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35085/.
This code only accepts and understands generational suffix in the Vancouver format because Roman numerals look like, and can be mistaken for, initials.

This function uses ustring functions because firstname initials may be any of the unicode Latin characters accepted by is_good_vanc_name ().

]]

local function reduce_to_initials(first)
	local name, suffix = mw.ustring.match(first, &quot;^(%u+) ([%dJS][%drndth]+)$&quot;);

	if not name then															-- if not initials and a suffix
		name = mw.ustring.match(first, &quot;^(%u+)$&quot;);								-- is it just intials?
	end

	if name then																-- if first is initials with or without suffix
		if 3 &gt; mw.ustring.len (name) then										-- if one or two initials
			if suffix then														-- if there is a suffix
				if is_suffix (suffix) then										-- is it legitimate?
					return first;												-- one or two initials and a valid suffix so nothing to do
				else
					add_vanc_error ('suffix');									-- one or two initials with invalid suffix so error message
					return first;												-- and return first unmolested
				end
			else
				return first;													-- one or two initials without suffix; nothing to do
			end
		end
	end																			-- if here then name has 3 or more uppercase letters so treat them as a word


	local initials, names = {}, {};												-- tables to hold name parts and initials
	local i = 1;																-- counter for number of initials

	names = mw.text.split (first, '[%s,]+');									-- split into a table of names and possible suffix

	while names[i] do															-- loop through the table
		if 1 &lt; i and names[i]:match ('[%dJS][%drndth]+%.?$') then				-- if not the first name, and looks like a suffix (may have trailing dot)
			names[i] = names[i]:gsub ('%.', '');								-- remove terminal dot if present
			if is_suffix (names[i]) then										-- if a legitimate suffix
				table.insert (initials, ' ' .. names[i]);						-- add a separator space, insert at end of initials table
				break;															-- and done because suffix must fall at the end of a name
			end																	-- no error message if not a suffix; possibly because of Romanization
		end
		if 3 &gt; i then
			table.insert (initials, mw.ustring.sub(names[i],1,1));				-- insert the intial at end of initials table
		end
		i = i+1;																-- bump the counter
	end
			
	return table.concat(initials)												-- Vancouver format does not include spaces.
end

--[[--------------------------&lt; L I S T  _ P E O P L E &gt;-------------------------------------------------------

Formats a list of people (e.g. authors / editors) 

]]

local function list_people(control, people, etal)
	local sep;
	local namesep;
	local format = control.format
	local maximum = control.maximum
	local lastauthoramp = control.lastauthoramp;
	local text = {}

	if 'vanc' == format then													-- Vancouver-like author/editor name styling?
		sep = ',';																-- name-list separator between authors is a comma
		namesep = ' ';															-- last/first separator is a space
	elseif 'mla' == control.mode then
		sep = ',';																-- name-list separator between authors is a comma
		namesep = ', '															-- last/first separator is &lt;comma&gt;&lt;space&gt;
	else
		sep = ';'																-- name-list separator between authors is a semicolon
		namesep = ', '															-- last/first separator is &lt;comma&gt;&lt;space&gt;
	end
	
	if sep:sub(-1,-1) ~= &quot; &quot; then sep = sep .. &quot; &quot; end
	if is_set (maximum) and maximum &lt; 1 then return &quot;&quot;, 0; end					-- returned 0 is for EditorCount; not used for authors
	
	for i,person in ipairs(people) do
		if is_set(person.last) then
			local mask = person.mask
			local one
			local sep_one = sep;
			if is_set (maximum) and i &gt; maximum then
				etal = true;
				break;
			elseif (mask ~= nil) then
				local n = tonumber(mask)
				if (n ~= nil) then
					one = string.rep(&quot;&amp;mdash;&quot;,n)
				else
					one = mask;
					sep_one = &quot; &quot;;
				end
			else
				one = person.last
				local first = person.first
				if is_set(first) then
					if 'mla' == control.mode then 
						if i == 1 then											-- for mla
							one = one .. namesep .. first;						-- first name last, first
						else													-- all other names
							one = first .. ' ' .. one;							-- first last
						end
					else
						if ( &quot;vanc&quot; == format ) then								-- if vancouver format
							one = one:gsub ('%.', '');								-- remove periods from surnames (http://www.ncbi.nlm.nih.gov/books/NBK7271/box/A35029/)
							if not person.corporate and is_good_vanc_name (one, first) then					-- and name is all Latin characters; corporate authors not tested
								first = reduce_to_initials(first)					-- attempt to convert first name(s) to initials
							end
						end
						one = one .. namesep .. first;
					end
				end
				if is_set(person.link) and person.link ~= control.page_name then
					one = &quot;[[&quot; .. person.link .. &quot;|&quot; .. one .. &quot;]]&quot;				-- link author/editor if this page is not the author's/editor's page
				end
			end
			table.insert( text, one )
			table.insert( text, sep_one )
		end
	end

	local count = #text / 2;													-- (number of names + number of separators) divided by 2
	if count &gt; 0 then 
		if count &gt; 1 and is_set(lastauthoramp) and not etal then
			if 'mla' == control.mode then
				text[#text-2] = &quot;, and &quot;;										-- replace last separator with ', and ' text
			else
				text[#text-2] = &quot; &amp; &quot;;											-- replace last separator with ampersand text
			end
		end
		text[#text] = nil;														-- erase the last separator
	end
	
	local result = table.concat(text)											-- construct list
	if etal and is_set (result) then											-- etal may be set by |display-authors=etal but we might not have a last-first list
		result = result .. sep .. ' ' .. cfg.messages['et al'];					-- we've go a last-first list and etal so add et al.
	end
	
	return result, count
end

--[[--------------------------&lt; A N C H O R _ I D &gt;------------------------------------------------------------

Generates a CITEREF anchor ID if we have at least one name or a date.  Otherwise returns an empty string.

namelist is one of the contributor-, author-, or editor-name lists chosen in that order.  year is Year or anchor_year.

]]
local function anchor_id (namelist, year)
	local names={};																-- a table for the one to four names and year
	for i,v in ipairs (namelist) do												-- loop through the list and take up to the first four last names
		names[i] = v.last 
		if i == 4 then break end												-- if four then done
	end
	table.insert (names, year);													-- add the year at the end
	local id = table.concat(names);												-- concatenate names and year for CITEREF id
	if is_set (id) then															-- if concatenation is not an empty string
		return &quot;CITEREF&quot; .. id;													-- add the CITEREF portion
	else
		return '';																-- return an empty string; no reason to include CITEREF id in this citation
	end
end


--[[--------------------------&lt; N A M E _ H A S _ E T A L &gt;----------------------------------------------------

Evaluates the content of author and editor name parameters for variations on the theme of et al.  If found,
the et al. is removed, a flag is set to true and the function returns the modified name and the flag.

This function never sets the flag to false but returns it's previous state because it may have been set by
previous passes through this function or by the parameters |display-authors=etal or |display-editors=etal

]]

local function name_has_etal (name, etal, nocat)

	if is_set (name) then														-- name can be nil in which case just return
		local etal_pattern = &quot;[;,]? *[\&quot;']*%f[%a][Ee][Tt] *[Aa][Ll][%.\&quot;']*$&quot;	-- variations on the 'et al' theme
		local others_pattern = &quot;[;,]? *%f[%a]and [Oo]thers&quot;;					-- and alternate to et al.
		
		if name:match (etal_pattern) then										-- variants on et al.
			name = name:gsub (etal_pattern, '');								-- if found, remove
			etal = true;														-- set flag (may have been set previously here or by |display-authors=etal)
			if not nocat then													-- no categorization for |vauthors=
				add_maint_cat ('etal');											-- and add a category if not already added
			end
		elseif name:match (others_pattern) then									-- if not 'et al.', then 'and others'?
			name = name:gsub (others_pattern, '');								-- if found, remove
			etal = true;														-- set flag (may have been set previously here or by |display-authors=etal)
			if not nocat then													-- no categorization for |vauthors=
				add_maint_cat ('etal');											-- and add a category if not already added
			end
		end
	end
	return name, etal;															-- 
end


--[[--------------------------&lt; N A M E _ H A S _ E D _ M A R K U P &gt;------------------------------------------

Evaluates the content of author and editor parameters for extranious editor annotations: ed, ed., eds, (Ed.), etc.
These annotation do not belong in author parameters and are redundant in editor parameters.  If found, the function
adds the editor markup maintenance category.

]]

local function name_has_ed_markup (name, list_name)
	local _, pattern;
	local patterns = {															-- these patterns match annotations at end of name
		'%f[%(%[][%(%[]%s*[Ee][Dd][Ss]?%.?%s*[%)%]]?$',							-- (ed) or (eds): leading '(', case insensitive 'ed', optional 's', '.' and/or ')'
		'[,%.%s]%f[e]eds?%.?$',													-- ed or eds: without '('or ')'; case sensitive (ED could be initials Ed could be name)
		'%f[%(%[][%(%[]%s*[Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%.?%s*[%)%]]?$',			-- (editor) or (editors): leading '(', case insensitive, optional '.' and/or ')'
		'[,%.%s]%f[Ee][Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%.?$',						-- editor or editors: without '('or ')'; case insensitive
		
																				-- these patterns match annotations at beginning of name
		'^eds?[%.,;]',															-- ed. or eds.: lower case only, optional 's', requires '.'
		'^[%(%[]%s*[Ee][Dd][Ss]?%.?%s*[%)%]]',									-- (ed) or (eds): also sqare brackets, case insensitive, optional 's', '.'
		'^[%(%[]?%s*[Ee][Dd][Ii][Tt][Oo][Rr][Ss]?%A',							-- (editor or (editors: also sq brackets, case insensitive, optional brackets, 's'
		'^[%(%[]?%s*[Ee][Dd][Ii][Tt][Ee][Dd]%A',								-- (edited: also sq brackets, case insensitive, optional brackets

		}

	if is_set (name) then
		for _, pattern in ipairs (patterns) do									-- spin through patterns table and
			if name:match (pattern) then
				add_maint_cat ('extra_text_names', cfg.special_case_translation [list_name]);	-- add a maint cat for this template
				break;
			end
		end
	end
	return name;																-- and done
end


--[[--------------------------&lt; N A M E _ H A S _ M U L T _ N A M E S &gt;----------------------------------------

Evaluates the content of author and editor (surnames only) parameters for multiple names.  Multiple names are
indicated if there is more than one comma and or semicolon.  If found, the function adds the multiple name
(author or editor) maintenance category.

]]

local function name_has_mult_names (name, list_name)
local count, _;
	if is_set (name) then
		_, count = name:gsub ('[;,]', '');										-- count the number of separator-like characters
		
		if 1 &lt; count then														-- param could be |author= or |editor= so one separator character is acceptable
			add_maint_cat ('mult_names', cfg.special_case_translation [list_name]);	-- more than one separator indicates multiple names so add a maint cat for this template
		end
	end
	return name;																-- and done
end


--[[--------------------------&lt; N A M E _ C H E C K S &gt;--------------------------------------------------------
This function calls various name checking functions used to validate the content of the various name-holding
parameters.

]]

local function name_checks (last, first, list_name)
	if is_set (last) then
		if last:match ('^%(%(.*%)%)$') then										-- if wrapped in doubled parentheses, accept as written 
			last = last:match ('^%(%((.*)%)%)$');								-- strip parens
		else
			last = name_has_mult_names (last, list_name);						-- check for multiple names in the parameter (last only)
			last = name_has_ed_markup (last, list_name);						-- check for extraneous 'editor' annotation
		end
	end
	if is_set (first) then
		if first:match ('^%(%(.*%)%)$') then									-- if wrapped in doubled parentheses, accept as written 
			first = first:match ('^%(%((.*)%)%)$');								-- strip parens
		else
			first = name_has_ed_markup (first, list_name);						-- check for extraneous 'editor' annotation
		end
	end
	return last, first;															-- done
	end


--[[--------------------------&lt; E X T R A C T _ N A M E S &gt;----------------------------------------------------
Gets name list from the input arguments

Searches through args in sequential order to find |lastn= and |firstn= parameters (or their aliases), and their matching link and mask parameters.
Stops searching when both |lastn= and |firstn= are not found in args after two sequential attempts: found |last1=, |last2=, and |last3= but doesn't
find |last4= and |last5= then the search is done.

This function emits an error message when there is a |firstn= without a matching |lastn=.  When there are 'holes' in the list of last names, |last1= and |last3=
are present but |last2= is missing, an error message is emitted. |lastn= is not required to have a matching |firstn=.

When an author or editor parameter contains some form of 'et al.', the 'et al.' is stripped from the parameter and a flag (etal) returned
that will cause list_people() to add the static 'et al.' text from Module:Citation/CS1/Configuration.  This keeps 'et al.' out of the 
template's metadata.  When this occurs, the page is added to a maintenance category.

]]

local function extract_names(args, list_name)
	local names = {};			-- table of names
	local last;					-- individual name components
	local first;
	local link;
	local mask;
	local i = 1;				-- loop counter/indexer
	local n = 1;				-- output table indexer
	local count = 0;			-- used to count the number of times we haven't found a |last= (or alias for authors, |editor-last or alias for editors)
	local etal=false;			-- return value set to true when we find some form of et al. in an author parameter

	local err_msg_list_name = list_name:match (&quot;(%w+)List&quot;) .. 's list';		-- modify AuthorList or EditorList for use in error messages if necessary
	while true do
		last = select_one( args, cfg.aliases[list_name .. '-Last'], 'redundant_parameters', i );		-- search through args for name components beginning at 1
		first = select_one( args, cfg.aliases[list_name .. '-First'], 'redundant_parameters', i );
		link = select_one( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i );
		mask = select_one( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i );

		last, etal = name_has_etal (last, etal, false);							-- find and remove variations on et al.
		first, etal = name_has_etal (first, etal, false);						-- find and remove variations on et al.
		last, first= name_checks (last, first, list_name);						-- multiple names, extraneous annotation, etc checks
		
		if first and not last then												-- if there is a firstn without a matching lastn
			table.insert( z.message_tail, { set_error( 'first_missing_last', {err_msg_list_name, i}, true ) } );	-- add this error message
		elseif not first and not last then										-- if both firstn and lastn aren't found, are we done?
			count = count + 1;													-- number of times we haven't found last and first
			if 2 &lt;= count then													-- two missing names and we give up
				break;															-- normal exit or there is a two-name hole in the list; can't tell which
			end
		else																	-- we have last with or without a first
			link_title_ok (link, list_name:match (&quot;(%w+)List&quot;):lower() .. '-link' .. i, last, list_name:match (&quot;(%w+)List&quot;):lower() .. '-last' .. i);	-- check for improper wikimarkup

			names[n] = {last = last, first = first, link = link, mask = mask, corporate=false};	-- add this name to our names list (corporate for |vauthors= only)
			n = n + 1;															-- point to next location in the names table
			if 1 == count then													-- if the previous name was missing
				table.insert( z.message_tail, { set_error( 'missing_name', {err_msg_list_name, i-1}, true ) } );		-- add this error message
			end
			count = 0;															-- reset the counter, we're looking for two consecutive missing names
		end
		i = i + 1;																-- point to next args location
	end
	
	return names, etal;															-- all done, return our list of names
end

--[[--------------------------&lt; G E T _ I S O 6 3 9 _ C O D E &gt;------------------------------------------------

Validates language names provided in |language= parameter if not an ISO639-1 or 639-2 code.

Returns the language name and associated two- or three-character code.  Because case of the source may be incorrect
or different from the case that WikiMedia uses, the name comparisons are done in lower case and when a match is
found, the Wikimedia version (assumed to be correct) is returned along with the code.  When there is no match, we
return the original language name string.

mw.language.fetchLanguageNames(&lt;local wiki language&gt;, 'all') return a list of languages that in some cases may include
extensions. For example, code 'cbk-zam' and its associated name 'Chavacano de Zamboanga' (MediaWiki does not support
code 'cbk' or name 'Chavacano'.

Names but that are included in the list will be found if that name is provided in the |language= parameter.  For example,
if |language=Chavacano de Zamboanga, that name will be found with the associated code 'cbk-zam'.  When names are found
and the associated code is not two or three characters, this function returns only the Wikimedia language name.

Adapted from code taken from Module:Check ISO 639-1.

]]

local function get_iso639_code (lang, this_wiki_code)
	if 'bangla' == lang:lower() then											-- special case related to Wikimedia remap of code 'bn' at mw:Extension:CLDR
		return 'Bengali', 'bn';													-- make sure rendered version is properly capitalized
	end

	local languages = mw.language.fetchLanguageNames(this_wiki_code, 'all')		-- get a list of language names known to Wikimedia
																				-- ('all' is required for North Ndebele, South Ndebele, and Ojibwa)
	local langlc = mw.ustring.lower(lang);										-- lower case version for comparisons
	
	for code, name in pairs(languages) do										-- scan the list to see if we can find our language
		if langlc == mw.ustring.lower(name) then
			if 2 ~= code:len() and 3 ~= code:len() then							-- two- or three-character codes only; extensions not supported
				return name;													-- so return the name but not the code
			end
			return name, code;													-- found it, return name to ensure proper capitalization and the the code
		end
	end
	return lang;																-- not valid language; return language in original case and nil for the code
end


--[[--------------------------&lt; L A N G U A G E _ P A R A M E T E R &gt;------------------------------------------

Gets language name from a provided two- or three-character ISO 639 code.  If a code is recognized by MediaWiki,
use the returned name; if not, then use the value that was provided with the language parameter.

When |language= contains a recognized language (either code or name), the page is assigned to the category for
that code: Category:Norwegian-language sources (no).  For valid three-character code languages, the page is assigned
to the single category for '639-2' codes: Category:CS1 ISO 639-2 language sources.

Languages that are the same as the local wiki are not categorized.  MediaWiki does not recognize three-character
equivalents of two-character codes: code 'ar' is recognized bit code 'ara' is not.

This function supports multiple languages in the form |language=nb, French, th where the language names or codes are
separated from each other by commas.

]]

local function language_parameter (lang)
	local code;																	-- the two- or three-character language code
	local name;																	-- the language name
	local language_list = {};													-- table of language names to be rendered
	local names_table = {};														-- table made from the value assigned to |language=

	local this_wiki = mw.getContentLanguage();									-- get a language object for this wiki
	local this_wiki_code = this_wiki:getCode()									-- get this wiki's language code
	local this_wiki_name = mw.language.fetchLanguageName(this_wiki_code, this_wiki_code);	-- get this wiki's language name

	names_table = mw.text.split (lang, '%s*,%s*');								-- names should be a comma separated list

	for _, lang in ipairs (names_table) do										-- reuse lang

		if lang:match ('^%a%a%-') then											-- strip ietf language tags from code; TODO: is there a need to support 3-char with tag?
			lang = lang:match ('(%a%a)%-')										-- keep only 639-1 code portion to lang; TODO: do something with 3166 alpha 2 country code?
		end
		if 2 == lang:len() or 3 == lang:len() then								-- if two-or three-character code
			name = mw.language.fetchLanguageName( lang:lower(), this_wiki_code);	-- get language name if |language= is a proper code
		end
	
		if is_set (name) then													-- if |language= specified a valid code
			code = lang:lower();												-- save it
		else
			name, code = get_iso639_code (lang, this_wiki_code);				-- attempt to get code from name (assign name here so that we are sure of proper capitalization)
		end
	
		if is_set (code) then													-- only 2- or 3-character codes
			if 'bn' == code then name = 'Bengali' end;							-- override wikimedia when code is 'bn'
			if this_wiki_code ~= code then										-- when the language is not the same as this wiki's language
				if 2 == code:len() then											-- and is a two-character code
					add_prop_cat ('foreign_lang_source', {name, code})			-- categorize it
				else															-- or is a recognized language (but has a three-character code)
					add_prop_cat ('foreign_lang_source_2', {code})				-- categorize it differently TODO: support mutliple three-character code categories per cs1|2 template
				end
			end
		else
			add_maint_cat ('unknown_lang');										-- add maint category if not already added
		end
		
		table.insert (language_list, name);
		name = '';																-- so we can reuse it
	end
	
	code = #language_list														-- reuse code as number of languages in the list
	if 2 &gt;= code then
		name = table.concat (language_list, ' and ')							-- insert '&lt;space&gt;and&lt;space&gt;' between two language names
	elseif 2 &lt; code then
		language_list[code] = 'and ' .. language_list[code];					-- prepend last name with 'and&lt;space&gt;'
		name = table.concat (language_list, ', ')								-- and concatenate with '&lt;comma&gt;&lt;space&gt;' separators
	end
	if this_wiki_name == name then
		return '';																-- if one language and that language is this wiki's return an empty string (no annotation)
	end
	return (&quot; &quot; .. wrap_msg ('language', name));								-- otherwise wrap with '(in ...)'
	--[[ TODO: should only return blank or name rather than full list
	so we can clean up the bunched parenthetical elements Language, Type, Format
	]]
end

--[[--------------------------&lt; S E T _ C S 1 _ S T Y L E &gt;----------------------------------------------------

Set style settings for CS1 citation templates. Returns separator and postscript settings

]]

local function set_cs1_style (ps)
	if not is_set (ps) then														-- unless explicitely set to something
		ps = '.';																-- terminate the rendered citation with a period
	end
	return '.', ps;																-- separator is a full stop
end

--[[--------------------------&lt; S E T _ C S 2 _ S T Y L E &gt;----------------------------------------------------

Set style settings for CS2 citation templates. Returns separator, postscript, ref settings

]]

local function set_cs2_style (ps, ref)
	if not is_set (ps) then														-- if |postscript= has not been set, set cs2 default
		ps = '';																-- make sure it isn't nil
	end
	if not is_set (ref) then													-- if |ref= is not set
		ref = &quot;harv&quot;;															-- set default |ref=harv
	end
	return ',', ps, ref;														-- separator is a comma
end

--[[--------------------------&lt; G E T _ S E T T I N G S _ F R O M _ C I T E _ C L A S S &gt;----------------------

When |mode= is not set or when its value is invalid, use config.CitationClass and parameter values to establish
rendered style.

]]

local function get_settings_from_cite_class (ps, ref, cite_class)
	local sep;
	if (cite_class == &quot;citation&quot;) then											-- for citation templates (CS2)
		sep, ps, ref = set_cs2_style (ps, ref);
	else																		-- not a citation template so CS1
		sep, ps = set_cs1_style (ps);
	end

	return sep, ps, ref															-- return them all
end

--[[--------------------------&lt; S E T _ S T Y L E &gt;------------------------------------------------------------

Establish basic style settings to be used when rendering the citation.  Uses |mode= if set and valid or uses
config.CitationClass from the template's #invoke: to establish style.

]]

local function set_style (mode, ps, ref, cite_class)
	local sep;
	if 'cs2' == mode then														-- if this template is to be rendered in CS2 (citation) style
		sep, ps, ref = set_cs2_style (ps, ref);
	elseif 'cs1' == mode then													-- if this template is to be rendered in CS1 (cite xxx) style
		sep, ps = set_cs1_style (ps);
	elseif 'mla' == mode then													-- if this template is to be rendered in mla style use cs1 for bot cs1 &amp; cs2 templates
		sep, ps = set_cs1_style (ps);
	else																		-- anything but cs1 or cs2
		sep, ps, ref = get_settings_from_cite_class (ps, ref, cite_class);		-- get settings based on the template's CitationClass
	end
	if 'none' == ps:lower() then												-- if assigned value is 'none' then
		ps = '';																-- set to empty string
	end
	
	return sep, ps, ref
end

--[=[-------------------------&lt; I S _ P D F &gt;------------------------------------------------------------------

Determines if a url has the file extension that is one of the pdf file extensions used by [[MediaWiki:Common.css]] when
applying the pdf icon to external links.

returns true if file extension is one of the recognized extension, else false

]=]

local function is_pdf (url)
	return url:match ('%.pdf[%?#]?') or url:match ('%.PDF[%?#]?');
end

--[[--------------------------&lt; S T Y L E _ F O R M A T &gt;------------------------------------------------------

Applies css style to |format=, |chapter-format=, etc.  Also emits an error message if the format parameter does
not have a matching url parameter.  If the format parameter is not set and the url contains a file extension that
is recognized as a pdf document by MediaWiki's commons.css, this code will set the format parameter to (PDF) with
the appropriate styling.

]]

local function style_format (format, url, fmt_param, url_param)
	if is_set (format) then
		format = wrap_style ('format', format);									-- add leading space, parenthases, resize
		if not is_set (url) then
			format = format .. set_error( 'format_missing_url', {fmt_param, url_param} );	-- add an error message
		end
	elseif is_pdf (url) then													-- format is not set so if url is a pdf file then
		format = wrap_style ('format', 'PDF');									-- set format to pdf
	else
		format = '';															-- empty string for concatenation
	end
	return format;
end

--[[--------------------------&lt; G E T _ D I S P L A Y _ A U T H O R S _ E D I T O R S &gt;------------------------

Returns a number that defines the number of names displayed for author and editor name lists and a boolean flag
to indicate when et al. should be appended to the name list.

When the value assigned to |display-xxxxors= is a number greater than or equal to zero, return the number and
the previous state of the 'etal' flag (false by default but may have been set to true if the name list contains
some variant of the text 'et al.').

When the value assigned to |display-xxxxors= is the keyword 'etal', return a number that is one greater than the
number of authors in the list and set the 'etal' flag true.  This will cause the list_people() to display all of
the names in the name list followed by 'et al.'

In all other cases, returns nil and the previous state of the 'etal' flag.

inputs:
	max: A['DisplayAuthors'] or A['DisplayEditors']; a number or some flavor of etal
	count: #a or #e
	list_name: 'authors' or 'editors'
	etal: author_etal or editor_etal

]]

local function get_display_authors_editors (max, count, list_name, etal)
	if is_set (max) then
		if 'etal' == max:lower():gsub(&quot;[ '%.]&quot;, '') then						-- the :gsub() portion makes 'etal' from a variety of 'et al.' spellings and stylings
			max = count + 1;													-- number of authors + 1 so display all author name plus et al.
			etal = true;														-- overrides value set by extract_names()
		elseif max:match ('^%d+$') then											-- if is a string of numbers
			max = tonumber (max);												-- make it a number
			if max &gt;= count then												-- if |display-xxxxors= value greater than or equal to number of authors/editors
				add_maint_cat ('disp_auth_ed', cfg.special_case_translation [list_name]);
			end
		else																	-- not a valid keyword or number
			table.insert( z.message_tail, { set_error( 'invalid_param_val', {'display-' .. list_name, max}, true ) } );		-- add error message
			max = nil;															-- unset; as if |display-xxxxors= had not been set
		end
	end
	
	return max, etal;
end

--[[--------------------------&lt; E X T R A _ T E X T _ I N _ P A G E _ C H E C K &gt;------------------------------

Adds page to Category:CS1 maint: extra text if |page= or |pages= has what appears to be some form of p. or pp. 
abbreviation in the first characters of the parameter content.

check Page and Pages for extraneous p, p., pp, and pp. at start of parameter value:
	good pattern: '^P[^%.P%l]' matches when |page(s)= begins PX or P# but not Px where x and X are letters and # is a dgiit
	bad pattern: '^[Pp][Pp]' matches matches when |page(s)= begins pp or pP or Pp or PP

]]

local function extra_text_in_page_check (page)
--	local good_pattern = '^P[^%.P%l]';
	local good_pattern = '^P[^%.Pp]';											-- ok to begin with uppercase P: P7 (pg 7 of section P) but not p123 (page 123) TODO: add Gg for PG or Pg?
--	local bad_pattern = '^[Pp][Pp]';
	local bad_pattern = '^[Pp]?[Pp]%.?[ %d]';

	if not page:match (good_pattern) and (page:match (bad_pattern) or  page:match ('^[Pp]ages?')) then
		add_maint_cat ('extra_text');
	end
--		if Page:match ('^[Pp]?[Pp]%.?[ %d]') or  Page:match ('^[Pp]ages?[ %d]') or
--			Pages:match ('^[Pp]?[Pp]%.?[ %d]') or  Pages:match ('^[Pp]ages?[ %d]') then
--				add_maint_cat ('extra_text');
--		end
end

--[[--------------------------&lt; G E T _ V _ N A M E _ T A B L E &gt;----------------------------------------------

split apart a |vautthors= or |veditors= parameter.  This function allows for corporate names, wrapped in doubled
parentheses to also have commas; in the old version of the code, the doubled parnetheses were included in the
rendered citation and in the metadata.

	|vauthors=Jones AB, White EB, ((Black, Brown, and Co.))

This code is experimental and may not be retained.

]]
local function get_v_name_table (vparam, output_table)
	local name_table = mw.text.split(vparam, &quot;%s*,%s*&quot;);						-- names are separated by commas
	
	local i = 1;
	
	while name_table[i] do
		if name_table[i]:match ('^%(%(.*[^%)][^%)]$') then						-- first segment of corporate with one or more commas; this segment has the opening doubled parens
			local name = name_table[i];
			i=i+1;																-- bump indexer to next segment
			while name_table[i] do
				name = name .. ', ' .. name_table[i];							-- concatenate with previous segments
				if name_table[i]:match ('^.*%)%)$') then						-- if this table member has the closing doubled parens
					break;														-- and done reassembling so
				end
				i=i+1;															-- bump indexer
			end
			table.insert (output_table, name);									-- and add corporate name to the output table
		else
			table.insert (output_table, name_table[i]);							-- add this name 
		end
		i = i+1;
	end	
	return output_table;
end

--[[--------------------------&lt; P A R S E _ V A U T H O R S _ V E D I T O R S &gt;--------------------------------

This function extracts author / editor names from |vauthors= or |veditors= and finds matching |xxxxor-maskn= and
|xxxxor-linkn= in args.  It then returns a table of assembled names just as extract_names() does.

Author / editor names in |vauthors= or |veditors= must be in Vancouver system style. Corporate or institutional names
may sometimes be required and because such names will often fail the is_good_vanc_name() and other format compliance
tests, are wrapped in doubled paranethese ((corporate name)) to suppress the format tests.

Supports generational suffixes Jr, 2nd, 3rd, 4th6th.

This function sets the vancouver error when a reqired comma is missing and when there is a space between an author's initials.

]]

local function parse_vauthors_veditors (args, vparam, list_name)
	local names = {};															-- table of names assembled from |vauthors=, |author-maskn=, |author-linkn=
	local v_name_table = {};
	local etal = false;															-- return value set to true when we find some form of et al. vauthors parameter
	local last, first, link, mask, suffix;
	local corporate = false;

	vparam, etal = name_has_etal (vparam, etal, true);							-- find and remove variations on et al. do not categorize (do it here because et al. might have a period)
	if vparam:find ('%[%[') or vparam:find ('%]%]')	then						-- no wikilinking vauthors names
		add_vanc_error ('wikilink');
	end
	v_name_table = get_v_name_table (vparam, v_name_table);						-- names are separated by commas

	for i, v_name in ipairs(v_name_table) do
		if v_name:match ('^%(%(.+%)%)$') then									-- corporate authors are wrapped in doubled parentheses to supress vanc formatting and error detection
			first = '';															-- set to empty string for concatenation and because it may have been set for previous author/editor
			last = v_name:match ('^%(%((.+)%)%)$')								-- remove doubled parntheses
			corporate = true;													-- flag used in list_people()
		elseif string.find(v_name, &quot;%s&quot;) then
			if v_name:find('[;%.]') then										-- look for commonly occurring punctuation characters; 
				add_vanc_error ('punctuation');
			end
			local lastfirstTable = {}
			lastfirstTable = mw.text.split(v_name, &quot;%s&quot;)
			first = table.remove(lastfirstTable);								-- removes and returns value of last element in table which should be author intials
			if is_suffix (first) then											-- if a valid suffix
				suffix = first													-- save it as a suffix and
				first = table.remove(lastfirstTable);							-- get what should be the initials from the table
			end																	-- no suffix error message here because letter combination may be result of Romanization; check for digits?
			last = table.concat(lastfirstTable, &quot; &quot;)							-- returns a string that is the concatenation of all other names that are not initials
			if mw.ustring.match (last, '%a+%s+%u+%s+%a+') then
				add_vanc_error ('missing comma');								-- matches last II last; the case when a comma is missing
			end
			if mw.ustring.match (v_name, ' %u %u$') then						-- this test is in the wrong place TODO: move or replace with a more appropriate test
				add_vanc_error ('name');										-- matches a space between two intiials
			end
		else
			first = '';															-- set to empty string for concatenation and because it may have been set for previous author/editor
			last = v_name;														-- last name or single corporate name?  Doesn't support multiword corporate names? do we need this?
		end
																
		if is_set (first) then
			if not mw.ustring.match (first, &quot;^%u?%u$&quot;) then						-- first shall contain one or two upper-case letters, nothing else
				add_vanc_error ('initials');									-- too many initials; mixed case initials (which may be ok Romanization); hyphenated initials
			end
			is_good_vanc_name (last, first);									-- check first and last before restoring the suffix which may have a non-Latin digit
			if is_set (suffix) then
				first = first .. ' ' .. suffix;									-- if there was a suffix concatenate with the initials
				suffix = '';													-- unset so we don't add this suffix to all subsequent names
			end
		else
			if not corporate then
				is_good_vanc_name (last, '');
			end
		end
																				-- this from extract_names ()
		link = select_one( args, cfg.aliases[list_name .. '-Link'], 'redundant_parameters', i );
		mask = select_one( args, cfg.aliases[list_name .. '-Mask'], 'redundant_parameters', i );
		names[i] = {last = last, first = first, link = link, mask = mask, corporate=corporate};		-- add this assembled name to our names list
	end
	return names, etal;															-- all done, return our list of names
end


--[[--------------------------&lt; S E L E C T _ A U T H O R _ E D I T O R _ S O U R C E &gt;------------------------

Select one of |authors=, |authorn= / |lastn / firstn=, or |vauthors= as the source of the author name list or
select one of |editors=, |editorn= / editor-lastn= / |editor-firstn= or |veditors= as the source of the editor name list.

Only one of these appropriate three will be used.  The hierarchy is: |authorn= (and aliases) highest and |authors= lowest and
similarly, |editorn= (and aliases) highest and |editors= lowest

When looking for |authorn= / |editorn= parameters, test |xxxxor1= and |xxxxor2= (and all of their aliases); stops after the second
test which mimicks the test used in extract_names() when looking for a hole in the author name list.  There may be a better
way to do this, I just haven't discovered what that way is.

Emits an error message when more than one xxxxor name source is provided.

In this function, vxxxxors = vauthors or veditors; xxxxors = authors or editors as appropriate.

]]

local function select_author_editor_source (vxxxxors, xxxxors, args, list_name)
local lastfirst = false;
	if select_one( args, cfg.aliases[list_name .. '-Last'], 'none', 1 ) or		-- do this twice incase we have a |first1= without a |last1=; this ...
		select_one( args, cfg.aliases[list_name .. '-First'], 'none', 1 ) or	-- ... also catches the case where |first= is used with |vauthors=
		select_one( args, cfg.aliases[list_name .. '-Last'], 'none', 2 ) or
		select_one( args, cfg.aliases[list_name .. '-First'], 'none', 2 ) then
			lastfirst=true;
	end

	if (is_set (vxxxxors) and true == lastfirst) or								-- these are the three error conditions
		(is_set (vxxxxors) and is_set (xxxxors)) or
		(true == lastfirst and is_set (xxxxors)) then
			local err_name;
			if 'AuthorList' == list_name then									-- figure out which name should be used in error message
				err_name = 'author';
			else
				err_name = 'editor';
			end
			table.insert( z.message_tail, { set_error( 'redundant_parameters',
				{err_name .. '-name-list parameters'}, true ) } );				-- add error message
	end

	if true == lastfirst then return 1 end;										-- return a number indicating which author name source to use
	if is_set (vxxxxors) then return 2 end;
	if is_set (xxxxors) then return 3 end;
	return 1;																	-- no authors so return 1; this allows missing author name test to run in case there is a first without last 
end


--[[--------------------------&lt; I S _ V A L I D _ P A R A M E T E R _ V A L U E &gt;------------------------------

This function is used to validate a parameter's assigned value for those parameters that have only a limited number
of allowable values (yes, y, true, no, etc).  When the parameter value has not been assigned a value (missing or empty
in the source template) the function refurns true.  If the parameter value is one of the list of allowed values returns
true; else, emits an error message and returns false.

]]

local function is_valid_parameter_value (value, name, possible, cite_class)
-- begin hack to limit |mode=mla to a specific set of templates
	if ('mode' == name) and ('mla' == value) and not in_array (cite_class, {'book', 'journal', 'news'}) then
		table.insert( z.message_tail, { set_error( 'invalid_param_val', {name, value}, true ) } );	-- not an allowed value so add error message
		return false
	end
-- end hack

	if not is_set (value) then
		return true;															-- an empty parameter is ok
	elseif in_array(value:lower(), possible) then
		return true;
	else
		table.insert( z.message_tail, { set_error( 'invalid_param_val', {name, value}, true ) } );	-- not an allowed value so add error message
		return false
	end
end


--[[--------------------------&lt; T E R M I N A T E _ N A M E _ L I S T &gt;----------------------------------------

This function terminates a name list (author, contributor, editor) with a separator character (sepc) and a space
when the last character is not a sepc character or when the last three characters are not sepc followed by two
closing square brackets (close of a wikilink).  When either of these is true, the name_list is terminated with a
single space character.

]]

local function terminate_name_list (name_list, sepc)
	if (string.sub (name_list,-3,-1) == sepc .. '. ') then						-- if already properly terminated
		return name_list;														-- just return the name list
	elseif (string.sub (name_list,-1,-1) == sepc) or (string.sub (name_list,-3,-1) == sepc .. ']]') then	-- if last name in list ends with sepc char
		return name_list .. &quot; &quot;;												-- don't add another
	else
		return name_list .. sepc .. ' ';										-- otherwise terninate the name list
	end
end


--[[-------------------------&lt; F O R M A T _ V O L U M E _ I S S U E &gt;----------------------------------------

returns the concatenation of the formatted volume and issue parameters as a single string; or formatted volume
or formatted issue, or an empty string if neither are set.

]]
	
local function format_volume_issue (volume, issue, cite_class, origin, sepc, lower, mode)
	if not is_set (volume) and not is_set (issue) then
		return '';
	end
	
	if ('mla' == mode) and ('journal' == cite_class) then						-- same as cs1 for magazines
		lower = true;															-- mla 8th edition; force these to lower case
		if is_set (volume) and is_set (issue) then
			return wrap_msg ('vol-no', {sepc, volume, issue}, lower);
		elseif is_set (volume) then
			return wrap_msg ('vol', {sepc, volume}, lower);
		else
			return '';
		end
	end

	if 'magazine' == cite_class or (in_array (cite_class, {'citation', 'map'}) and 'magazine' == origin) then
		if is_set (volume) and is_set (issue) then
			return wrap_msg ('vol-no', {sepc, volume, issue}, lower);
		elseif is_set (volume) then
			return wrap_msg ('vol', {sepc, volume}, lower);
		else
			return wrap_msg ('issue', {sepc, issue}, lower);
		end
	end

	local vol = '';
		
	if is_set (volume) then
		if (4 &lt; mw.ustring.len(volume)) then
			vol = substitute (cfg.messages['j-vol'], {sepc, volume});
		else
			vol = substitute (cfg.presentation['vol-bold'], {sepc, hyphen_to_dash(volume)});
		end
	end
	if is_set (issue) then
		return vol .. substitute (cfg.messages['j-issue'], issue);
	end
	return vol;
end


--[[-------------------------&lt; N O R M A L I Z E _ P A G E _ L I S T &gt;-----------------------------------------

not currently used

normalizes a comma, ampersand, and/or space separated list to be '&lt;value&gt;, &lt;value&gt;, ..., &lt;value&gt;'
returns list unchanged if there are no commas else strips whitespace and then reformats the list

]]
--[[
local function normalize_page_list (list)
	if not list:find ('[,&amp; ]') then return list end								-- if list is not delimited with commas, ampersands, or spaces; done
	
	list = mw.text.split (list, '[,&amp;%s]+');										-- make a table of values
	list = table.concat (list, ', ');											-- and now make a normalized list
	return list;
end
]]


--[[-------------------------&lt; F O R M A T _ P A G E S _ S H E E T S &gt;-----------------------------------------

adds static text to one of |page(s)= or |sheet(s)= values and returns it with all of the others set to empty strings.
The return order is:
	page, pages, sheet, sheets

Singular has priority over plural when both are provided.

]]

local function format_pages_sheets (page, pages, sheet, sheets, cite_class, origin, sepc, nopp, lower, mode)
	if 'map' == cite_class then													-- only cite map supports sheet(s) as in-source locators
		if is_set (sheet) then
			if 'journal' == origin then
				return '', '', wrap_msg ('j-sheet', sheet, lower), '';
			else
				return '', '', wrap_msg ('sheet', {sepc, sheet}, lower), '';
			end
		elseif is_set (sheets) then
			if 'journal' == origin then
				return '', '', '', wrap_msg ('j-sheets', sheets, lower);
			else
				return '', '', '', wrap_msg ('sheets', {sepc, sheets}, lower);
			end
		end
	end

	local is_journal = 'journal' == cite_class or (in_array (cite_class, {'citation', 'map'}) and 'journal' == origin);
	
	if is_journal and 'mla' == mode then
		is_journal = false;														-- mla always uses p &amp; pp
	end

	if is_set (page) then
		if is_journal then
			return substitute (cfg.messages['j-page(s)'], page), '', '', '';
		elseif not nopp then
			return substitute (cfg.messages['p-prefix'], {sepc, page}), '', '', '';
		else
			return substitute (cfg.messages['nopp'], {sepc, page}), '', '', '';
		end
	elseif is_set(pages) then
		if is_journal then
			return substitute (cfg.messages['j-page(s)'], pages), '', '', '';
		elseif tonumber(pages) ~= nil and not nopp then										-- if pages is only digits, assume a single page number
			return '', substitute (cfg.messages['p-prefix'], {sepc, pages}), '', '';
		elseif not nopp then
			return '', substitute (cfg.messages['pp-prefix'], {sepc, pages}), '', '';
		else
			return '', substitute (cfg.messages['nopp'], {sepc, pages}), '', '';
		end
	end
	
	return '', '', '', '';														-- return empty strings
end


--[=[-------------------------&lt; A R C H I V E _ U R L _ C H E C K &gt;--------------------------------------------

Check archive.org urls to make sure they at least look like they are pointing at valid archives and not to the 
save snapshot url or to calendar pages.  When the archive url is 'https://web.archive.org/save/' (or http://...)
archive.org saves a snapshot of the target page in the url.  That is something that Wikipedia should not allow
unwitting readers to do.

When the archive.org url does not have a complete timestamp, archive.org chooses a snapshot according to its own
algorithm or provides a calendar 'search' result.  [[WP:ELNO]] discourages links to search results.

This function looks at the value assigned to |archive-url= and returns empty strings for |archive-url= and
|archive-date= and an error message when:
	|archive-url= holds an archive.org save command url
	|archive-url= is an archive.org url that does not have a complete timestamp (YYYYMMDDhhmmss 14 digits) in the
		correct place
otherwise returns |archive-url= and |archive-date=

There are two mostly compatible archive.org urls:
	//web.archive.org/&lt;timestamp&gt;...		-- the old form
	//web.archive.org/web/&lt;timestamp&gt;...	-- the new form

The old form does not support or map to the new form when it contains a display flag.  There are four identified flags
('id_', 'js_', 'cs_', 'im_') but since archive.org ignores others following the same form (two letters and an underscore)
we don't check for these specific flags but we do check the form.

This function supports a preview mode.  When the article is rendered in preview mode, this funct may return a modified
archive url:
	for save command errors, return undated wildcard (/*/)
	for timestamp errors when the timestamp has a wildcard, return the url unmodified
	for timestamp errors when the timestamp does not have a wildcard, return with timestamp limited to six digits plus wildcard (/yyyymm*/)

]=]

local function archive_url_check (url, date)
	local err_msg = '';															-- start with the error message empty
	local path, timestamp, flag;												-- portions of the archive.or url
	
	if (not url:match('//web%.archive%.org/')) and (not url:match('//liveweb%.archive%.org/')) then		-- also deprecated liveweb Wayback machine url
		return url, date;														-- not an archive.org archive, return ArchiveURL and ArchiveDate
	end

	if url:match('//web%.archive%.org/save/') then								-- if a save command url, we don't want to allow saving of the target page 
		err_msg = 'save command';
		url = url:gsub ('(//web%.archive%.org)/save/', '%1/*/', 1);				-- for preview mode: modify ArchiveURL
	elseif url:match('//liveweb%.archive%.org/') then
		err_msg = 'liveweb';
	else
		path, timestamp, flag = url:match('//web%.archive%.org/([^%d]*)(%d+)([^/]*)/');		-- split out some of the url parts for evaluation
		
		if not is_set(timestamp) or 14 ~= timestamp:len() then					-- path and flag optional, must have 14-digit timestamp here
			err_msg = 'timestamp';
			if '*' ~= flag then
				url=url:gsub ('(//web%.archive%.org/[^%d]*%d?%d?%d?%d?%d?%d?)[^/]*', '%1*', 1)	-- for preview, modify ts to be yearmo* max (0-6 digits plus splat)
			end
		elseif is_set(path) and 'web/' ~= path then								-- older archive urls do not have the extra 'web/' path element
			err_msg = 'path';
		elseif is_set (flag) and not is_set (path) then							-- flag not allowed with the old form url (without the 'web/' path element)
			err_msg = 'flag';
		elseif is_set (flag) and not flag:match ('%a%a_') then					-- flag if present must be two alpha characters and underscore (requires 'web/' path element)
			err_msg = 'flag';
		else
			return url, date;													-- return archiveURL and ArchiveDate
		end
	end
																				-- if here, something not right so
	table.insert( z.message_tail, { set_error( 'archive_url', {err_msg}, true ) } );	-- add error message and
	if is_set (Frame:preprocess('{{REVISIONID}}')) then
		return '', '';															-- return empty strings for archiveURL and ArchiveDate
	else
		return url, date;														-- preview mode so return archiveURL and ArchiveDate
	end
end


--[[--------------------------&lt; M I S S I N G _ P I P E _ C H E C K &gt;------------------------------------------

Look at the contents of a parameter. If the content has a string of characters and digits followed by an equal
sign, compare the alphanumeric string to the list of cs1|2 parameters.  If found, then the string is possibly a
parameter that is missing its pipe:
	{{cite ... |title=Title access-date=2016-03-17}}

cs1|2 shares some parameter names with xml/html atributes: class=, title=, etc.  To prevent false positives xml/html
tags are removed before the search.

If a missing pipe is detected, this function adds the missing pipe maintenance category.

]]

local function missing_pipe_check (value)
	local capture;
	value = value:gsub ('%b&lt;&gt;', '');											-- remove xml/html tags because attributes: class=, title=, etc 

	capture = value:match ('%s+(%a[%a%d]+)%s*=') or value:match ('^(%a[%a%d]+)%s*=');	-- find and categorize parameters with possible missing pipes
	if capture and validate (capture) then								-- if the capture is a valid parameter name
		add_maint_cat ('missing_pipe');
	end
end


--[[--------------------------&lt; C I T A T I O N 0 &gt;------------------------------------------------------------

This is the main function doing the majority of the citation formatting.

]]

local function citation0( config, args)
	--[[ 
	Load Input Parameters
	The argument_wrapper facilitates the mapping of multiple aliases to single internal variable.
	]]
	local A = argument_wrapper( args );
	local i 

	-- Pick out the relevant fields from the arguments.  Different citation templates
	-- define different field names for the same underlying things.	

-- set default parameter values defined by |mode= parameter.  If |mode= is empty or omitted, use CitationClass to set these values
	local Mode = A['Mode'];
	if not is_valid_parameter_value (Mode, 'mode', cfg.keywords['mode'], config.CitationClass) then
		Mode = '';
	end

	local author_etal;
	local a	= {};																-- authors list from |lastn= / |firstn= pairs or |vauthors=
	local Authors;
	local NameListFormat = A['NameListFormat'];
	local Collaboration = A['Collaboration'];

	do																			-- to limit scope of selected
		local selected = select_author_editor_source (A['Vauthors'], A['Authors'], args, 'AuthorList');
		if 1 == selected then
			a, author_etal = extract_names (args, 'AuthorList');				-- fetch author list from |authorn= / |lastn= / |firstn=, |author-linkn=, and |author-maskn=
		elseif 2 == selected then
			NameListFormat = 'vanc';											-- override whatever |name-list-format= might be
			a, author_etal = parse_vauthors_veditors (args, args.vauthors, 'AuthorList');	-- fetch author list from |vauthors=, |author-linkn=, and |author-maskn=
		elseif 3 == selected then
			Authors = A['Authors'];												-- use content of |authors=
			if 'authors' == A:ORIGIN('Authors') then							-- but add a maint cat if the parameter is |authors=
				add_maint_cat ('authors');										-- because use of this parameter is discouraged; what to do about the aliases is a TODO:
			end
		end
		if is_set (Collaboration) then
			author_etal = true;													-- so that |display-authors=etal not required
		end
	end

	local Others = A['Others'];

	local editor_etal;
	local e	= {};																-- editors list from |editor-lastn= / |editor-firstn= pairs or |veditors=
	local Editors;

	do																			-- to limit scope of selected
		local selected = select_author_editor_source (A['Veditors'], A['Editors'], args, 'EditorList');
		if 1 == selected then
			e, editor_etal = extract_names (args, 'EditorList');				-- fetch editor list from |editorn= / |editor-lastn= / |editor-firstn=, |editor-linkn=, and |editor-maskn=
		elseif 2 == selected then
			NameListFormat = 'vanc';											-- override whatever |name-list-format= might be
			e, editor_etal = parse_vauthors_veditors (args, args.veditors, 'EditorList');	-- fetch editor list from |veditors=, |editor-linkn=, and |editor-maskn=
		elseif 3 == selected then
			Editors = A['Editors'];												-- use content of |editors=
			add_maint_cat ('editors');											-- but add a maint cat because use of this parameter is discouraged
		end
	end

	local t = {};																-- translators list from |translator-lastn= / translator-firstn= pairs
	local Translators;															-- assembled translators name list
	t = extract_names (args, 'TranslatorList');									-- fetch translator list from |translatorn= / |translator-lastn=, -firstn=, -linkn=, -maskn=
	

	local interviewers_list = {};
	local Interviewers = A['Interviewers']
	if is_set (Interviewers) then												-- add a maint cat if the |interviewers= is used
		add_maint_cat ('interviewers');											-- because use of this parameter is discouraged
	else
		interviewers_list = extract_names (args, 'InterviewerList');			-- else, process preferred interviewers parameters
	end

	local c = {};																-- contributors list from |contributor-lastn= / contributor-firstn= pairs
	local Contributors;															-- assembled contributors name list
	local Contribution = A['Contribution'];
	if in_array(config.CitationClass, {&quot;book&quot;,&quot;citation&quot;}) and not is_set(A['Periodical']) then	-- |contributor= and |contribution= only supported in book cites
		c = extract_names (args, 'ContributorList');							-- fetch contributor list from |contributorn= / |contributor-lastn=, -firstn=, -linkn=, -maskn=
		
		if 0 &lt; #c then
			if not is_set (Contribution) then									-- |contributor= requires |contribution=
				table.insert( z.message_tail, { set_error( 'contributor_missing_required_param', 'contribution')});	-- add missing contribution error message
				c = {};															-- blank the contributors' table; it is used as a flag later
			end
			if 0 == #a then														-- |contributor= requires |author=
				table.insert( z.message_tail, { set_error( 'contributor_missing_required_param', 'author')});	-- add missing author error message
				c = {};															-- blank the contributors' table; it is used as a flag later
			end
		end
	else																		-- if not a book cite
		if select_one (args, cfg.aliases['ContributorList-Last'], 'redundant_parameters', 1 ) then	-- are there contributor name list parameters?
			table.insert( z.message_tail, { set_error( 'contributor_ignored')});	-- add contributor ignored error message
		end
		Contribution = nil;														-- unset
	end

	if not is_valid_parameter_value (NameListFormat, 'name-list-format', cfg.keywords['name-list-format']) then			-- only accepted value for this parameter is 'vanc'
		NameListFormat = '';													-- anything else, set to empty string
	end

	local Year = A['Year'];
	local PublicationDate = A['PublicationDate'];
	local OrigYear = A['OrigYear'];
	local Date = A['Date'];
	local LayDate = A['LayDate'];
	------------------------------------------------- Get title data
	local Title = A['Title'];
	local ScriptTitle = A['ScriptTitle'];
	local BookTitle = A['BookTitle'];
	local Conference = A['Conference'];
	local TransTitle = A['TransTitle'];
	local TitleNote = A['TitleNote'];
	local TitleLink = A['TitleLink'];
			link_title_ok (TitleLink, A:ORIGIN ('TitleLink'), Title, 'title');	-- check for wikimarkup in |title-link= or wikimarkup in |title= when |title-link= is set

	local Chapter = A['Chapter'];
	local ScriptChapter = A['ScriptChapter'];
	local ChapterLink	-- = A['ChapterLink'];									-- deprecated as a parameter but still used internally by cite episode
	local TransChapter = A['TransChapter'];
	local TitleType = A['TitleType'];
	local Degree = A['Degree'];
	local Docket = A['Docket'];
	local ArchiveFormat = A['ArchiveFormat'];

	local ArchiveDate;
	local ArchiveURL;

	ArchiveURL, ArchiveDate = archive_url_check (A['ArchiveURL'], A['ArchiveDate'])
	
	local DeadURL = A['DeadURL']
		if not is_valid_parameter_value (DeadURL, 'dead-url', cfg.keywords ['deadurl']) then	-- set in config.defaults to 'yes'
			DeadURL = '';														-- anything else, set to empty string
		end

	local URL = A['URL']
	local URLorigin = A:ORIGIN('URL');											-- get name of parameter that holds URL
	local ChapterURL = A['ChapterURL'];
	local ChapterURLorigin = A:ORIGIN('ChapterURL');							-- get name of parameter that holds ChapterURL
	local ConferenceFormat = A['ConferenceFormat'];
	local ConferenceURL = A['ConferenceURL'];
	local ConferenceURLorigin = A:ORIGIN('ConferenceURL');						-- get name of parameter that holds ConferenceURL
	local Periodical = A['Periodical'];
	local Periodical_origin = A:ORIGIN('Periodical');							-- get the name of the periodical parameter

	local Series = A['Series'];
	
	local Volume;
	local Issue;
	local Page;
	local Pages;
	local At;
																				-- previously conference books did not support volume
--	if in_array (config.CitationClass, cfg.templates_using_volume) and not ('conference' == config.CitationClass and not is_set (Periodical)) then
	if in_array (config.CitationClass, cfg.templates_using_volume) then
		Volume = A['Volume'];
	end
																				-- conference &amp; map books do not support issue
	if in_array (config.CitationClass, cfg.templates_using_issue) and not (in_array (config.CitationClass, {'conference', 'map'}) and not is_set (Periodical))then
		Issue = A['Issue'];
	end
	local Position = '';
	if not in_array (config.CitationClass, cfg.templates_not_using_page) then
		Page = A['Page'];
		Pages = hyphen_to_dash( A['Pages'] );	
		At = A['At'];
	end

	local Edition = A['Edition'];
	local PublicationPlace = A['PublicationPlace']
	local Place = A['Place'];
	
	local PublisherName = A['PublisherName'];
	local RegistrationRequired = A['RegistrationRequired'];
		if not is_valid_parameter_value (RegistrationRequired, 'registration', cfg.keywords ['yes_true_y']) then
			RegistrationRequired=nil;
		end
	local SubscriptionRequired = A['SubscriptionRequired'];
		if not is_valid_parameter_value (SubscriptionRequired, 'subscription', cfg.keywords ['yes_true_y']) then
			SubscriptionRequired=nil;
		end
	local UrlAccess = A['UrlAccess'];
		if not is_valid_parameter_value (UrlAccess, 'url-access', cfg.keywords ['url-access']) then
			UrlAccess = nil;
		end
		if not is_set(URL) and is_set(UrlAccess) then
			UrlAccess = nil;
			table.insert( z.message_tail, { set_error( 'param_access_requires_param', {'url'}, true ) } );
		end

		if is_set (UrlAccess) and is_set (SubscriptionRequired) then			-- while not aliases, these are much the same so if both are set
			table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'url-access') .. ' and ' .. wrap_style ('parameter', 'subscription')}, true ) } );		-- add error message
			SubscriptionRequired = nil;											-- unset; prefer |access= over |subscription=
		end
		if is_set (UrlAccess) and is_set (RegistrationRequired) then			-- these are not the same but contradictory so if both are set
			table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'url-access') .. ' and ' .. wrap_style ('parameter', 'registration')}, true ) } );		-- add error message
			RegistrationRequired = nil;											-- unset; prefer |access= over |registration=
		end


	local Via = A['Via'];
	local AccessDate = A['AccessDate'];
	local Agency = A['Agency'];

	local Language = A['Language'];
	local Format = A['Format'];
	local ChapterFormat = A['ChapterFormat'];
	local DoiBroken = A['DoiBroken'];
	local ID = A['ID'];
	local ASINTLD = A['ASINTLD'];
	local IgnoreISBN = A['IgnoreISBN'];
		if not is_valid_parameter_value (IgnoreISBN, 'ignore-isbn-error', cfg.keywords ['yes_true_y']) then
			IgnoreISBN = nil;													-- anything else, set to empty string
		end
	local Embargo = A['Embargo'];
	local Class = A['Class'];													-- arxiv class identifier

	local ID_list = extract_ids( args );
	local ID_access_levels = extract_id_access_levels( args, ID_list );

	local Quote = A['Quote'];

	local LayFormat = A['LayFormat'];
	local LayURL = A['LayURL'];
	local LaySource = A['LaySource'];
	local Transcript = A['Transcript'];
	local TranscriptFormat = A['TranscriptFormat'];
	local TranscriptURL = A['TranscriptURL'] 
	local TranscriptURLorigin = A:ORIGIN('TranscriptURL');						-- get name of parameter that holds TranscriptURL

	local LastAuthorAmp = A['LastAuthorAmp'];
		if not is_valid_parameter_value (LastAuthorAmp, 'last-author-amp', cfg.keywords ['yes_true_y']) then
			LastAuthorAmp = nil;												-- set to empty string
		end
		if 'mla' == Mode then												
			LastAuthorAmp = 'yes';												-- replaces last author/editor separator with ' and ' text
		end
	local no_tracking_cats = A['NoTracking'];
		if not is_valid_parameter_value (no_tracking_cats, 'no-tracking', cfg.keywords ['yes_true_y']) then
			no_tracking_cats = nil;												-- set to empty string
		end

--local variables that are not cs1 parameters
	local use_lowercase;														-- controls capitalization of certain static text
	local this_page = mw.title.getCurrentTitle();								-- also used for COinS and for language
	local anchor_year;															-- used in the CITEREF identifier
	local COinS_date = {};														-- holds date info extracted from |date= for the COinS metadata by Module:Date verification

	local DF = A['DF'];															-- date format set in cs1|2 template
	if not is_valid_parameter_value (DF, 'df', cfg.keywords['date-format']) then	-- validate reformatting keyword
		DF = '';																-- not valid, set to empty string
	end

	local sepc;											-- separator between citation elements for CS1 a period, for CS2, a comma
	local PostScript;
	local Ref;
	sepc, PostScript, Ref = set_style (Mode:lower(), A['PostScript'], A['Ref'], config.CitationClass);
	use_lowercase = ( sepc == ',' );					-- used to control capitalization for certain static text

--check this page to see if it is in one of the namespaces that cs1 is not supposed to add to the error categories
	if not is_set (no_tracking_cats) then										-- ignore if we are already not going to categorize this page
		if in_array (this_page.nsText, cfg.uncategorized_namespaces) then
			no_tracking_cats = &quot;true&quot;;											-- set no_tracking_cats
		end
		for _,v in ipairs (cfg.uncategorized_subpages) do						-- cycle through page name patterns
			if this_page.text:match (v) then									-- test page name against each pattern
				no_tracking_cats = &quot;true&quot;;										-- set no_tracking_cats
				break;															-- bail out if one is found
			end
		end
	end

-- check for extra |page=, |pages= or |at= parameters. (also sheet and sheets while we're at it)
	select_one( args, {'page', 'p', 'pp', 'pages', 'at', 'sheet', 'sheets'}, 'redundant_parameters' );		-- this is a dummy call simply to get the error message and category

	local NoPP = A['NoPP'] 
	if is_set (NoPP) and is_valid_parameter_value (NoPP, 'nopp', cfg.keywords ['yes_true_y']) then
		NoPP = true;
	else
		NoPP = nil;																-- unset, used as a flag later
	end

	if is_set(Page) then
		if is_set(Pages) or is_set(At) then
			Pages = '';															-- unset the others
			At = '';
		end
		extra_text_in_page_check (Page);										-- add this page to maint cat if |page= value begins with what looks like p. or pp.
	elseif is_set(Pages) then
		if is_set(At) then
			At = '';															-- unset
		end
		extra_text_in_page_check (Pages);										-- add this page to maint cat if |pages= value begins with what looks like p. or pp.
	end	

-- both |publication-place= and |place= (|location=) allowed if different
	if not is_set(PublicationPlace) and is_set(Place) then
		PublicationPlace = Place;							-- promote |place= (|location=) to |publication-place
	end
	
	if PublicationPlace == Place then Place = ''; end		-- don't need both if they are the same
	
--[[
Parameter remapping for cite encyclopedia:
When the citation has these parameters:
	|encyclopedia and |title then map |title to |article and |encyclopedia to |title
	|encyclopedia and |article then map |encyclopedia to |title
	|encyclopedia then map |encyclopedia to |title

	|trans_title maps to |trans_chapter when |title is re-mapped
	|url maps to |chapterurl when |title is remapped

All other combinations of |encyclopedia, |title, and |article are not modified

]]

local Encyclopedia = A['Encyclopedia'];

	if ( config.CitationClass == &quot;encyclopaedia&quot; ) or ( config.CitationClass == &quot;citation&quot; and is_set (Encyclopedia)) then	-- test code for citation
		if is_set(Periodical) then												-- Periodical is set when |encyclopedia is set
			if is_set(Title) or is_set (ScriptTitle) then
				if not is_set(Chapter) then
					Chapter = Title;											-- |encyclopedia and |title are set so map |title to |article and |encyclopedia to |title
					ScriptChapter = ScriptTitle;
					TransChapter = TransTitle;
					ChapterURL = URL;
					if not is_set (ChapterURL) and is_set (TitleLink) then
						Chapter= '[[' .. TitleLink .. '|' .. Chapter .. ']]';
					end
					Title = Periodical;
					ChapterFormat = Format;
					Periodical = '';											-- redundant so unset
					TransTitle = '';
					URL = '';
					Format = '';
					TitleLink = '';
					ScriptTitle = '';
				end
			else																-- |title not set
				Title = Periodical;												-- |encyclopedia set and |article set or not set so map |encyclopedia to |title
				Periodical = '';												-- redundant so unset
			end
		end
	end

-- Special case for cite techreport.
	if (config.CitationClass == &quot;techreport&quot;) then								-- special case for cite techreport
		if is_set(A['Number']) then												-- cite techreport uses 'number', which other citations alias to 'issue'
			if not is_set(ID) then												-- can we use ID for the &quot;number&quot;?
				ID = A['Number'];												-- yes, use it
			else																-- ID has a value so emit error message
				table.insert( z.message_tail, { set_error('redundant_parameters', {wrap_style ('parameter', 'id') .. ' and ' .. wrap_style ('parameter', 'number')}, true )});
			end
		end	
	end

-- special case for cite mailing list
	if (config.CitationClass == &quot;mailinglist&quot;) then
		Periodical = A ['MailingList'];
	elseif 'mailinglist' == A:ORIGIN('Periodical') then
		Periodical = '';														-- unset because mailing list is only used for cite mailing list
	end

-- Account for the oddity that is {{cite conference}}, before generation of COinS data.
	if 'conference' == config.CitationClass then
		if is_set(BookTitle) then
			Chapter = Title;
--			ChapterLink = TitleLink;											-- |chapterlink= is deprecated
			ChapterURL = URL;
			ChapterURLorigin = URLorigin;
			URLorigin = '';
			ChapterFormat = Format;
			TransChapter = TransTitle;
			Title = BookTitle;
			Format = '';
--			TitleLink = '';
			TransTitle = '';
			URL = '';
		end
	elseif 'speech' ~= config.CitationClass then
		Conference = '';														-- not cite conference or cite speech so make sure this is empty string
	end

-- cite map oddities
	local Cartography = &quot;&quot;;
	local Scale = &quot;&quot;;
	local Sheet = A['Sheet'] or '';
	local Sheets = A['Sheets'] or '';
	if config.CitationClass == &quot;map&quot; then
		Chapter = A['Map'];
		ChapterURL = A['MapURL'];
		TransChapter = A['TransMap'];
		ChapterURLorigin = A:ORIGIN('MapURL');
		ChapterFormat = A['MapFormat'];
		
		Cartography = A['Cartography'];
		if is_set( Cartography ) then
			Cartography = sepc .. &quot; &quot; .. wrap_msg ('cartography', Cartography, use_lowercase);
		end		
		Scale = A['Scale'];
		if is_set( Scale ) then
			Scale = sepc .. &quot; &quot; .. Scale;
		end
	end

-- Account for the oddities that are {{cite episode}} and {{cite serial}}, before generation of COinS data.
	if 'episode' == config.CitationClass or 'serial' == config.CitationClass then
		local AirDate = A['AirDate'];
		local SeriesLink = A['SeriesLink'];

		link_title_ok (SeriesLink, A:ORIGIN ('SeriesLink'), Series, 'series');	-- check for wikimarkup in |series-link= or wikimarkup in |series= when |series-link= is set

		local Network = A['Network'];
		local Station = A['Station'];
		local s, n = {}, {};
																				-- do common parameters first
		if is_set(Network) then table.insert(n, Network); end
		if is_set(Station) then table.insert(n, Station); end
		ID = table.concat(n, sepc .. ' ');
		
		if not is_set (Date) and is_set (AirDate) then							-- promote airdate to date
			Date = AirDate;
		end

		if 'episode' == config.CitationClass then								-- handle the oddities that are strictly {{cite episode}}
			local Season = A['Season'];
			local SeriesNumber = A['SeriesNumber'];

			if is_set (Season) and is_set (SeriesNumber) then					-- these are mutually exclusive so if both are set
				table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'season') .. ' and ' .. wrap_style ('parameter', 'seriesno')}, true ) } );		-- add error message
				SeriesNumber = '';												-- unset; prefer |season= over |seriesno=
			end
																				-- assemble a table of parts concatenated later into Series
			if is_set(Season) then table.insert(s, wrap_msg ('season', Season, use_lowercase)); end
			if is_set(SeriesNumber) then table.insert(s, wrap_msg ('series', SeriesNumber, use_lowercase)); end
			if is_set(Issue) then table.insert(s, wrap_msg ('episode', Issue, use_lowercase)); end
			Issue = '';															-- unset because this is not a unique parameter
	
			Chapter = Title;													-- promote title parameters to chapter
			ScriptChapter = ScriptTitle;
			ChapterLink = TitleLink;											-- alias episodelink
			TransChapter = TransTitle;
			ChapterURL = URL;
			ChapterURLorigin = A:ORIGIN('URL');
			
			Title = Series;														-- promote series to title
			TitleLink = SeriesLink;
			Series = table.concat(s, sepc .. ' ');								-- this is concatenation of season, seriesno, episode number

			if is_set (ChapterLink) and not is_set (ChapterURL) then			-- link but not URL
				Chapter = '[[' .. ChapterLink .. '|' .. Chapter .. ']]';		-- ok to wikilink
			elseif is_set (ChapterLink) and is_set (ChapterURL) then			-- if both are set, URL links episode;
				Series = '[[' .. ChapterLink .. '|' .. Series .. ']]';			-- series links with ChapterLink (episodelink -&gt; TitleLink -&gt; ChapterLink) ugly
			end
			URL = '';															-- unset
			TransTitle = '';
			ScriptTitle = '';
			
		else																	-- now oddities that are cite serial
			Issue = '';															-- unset because this parameter no longer supported by the citation/core version of cite serial
			Chapter = A['Episode'];												-- TODO: make |episode= available to cite episode someday?
			if is_set (Series) and is_set (SeriesLink) then
				Series = '[[' .. SeriesLink .. '|' .. Series .. ']]';
			end
			Series = wrap_style ('italic-title', Series);						-- series is italicized
		end	
	end
-- end of {{cite episode}} stuff

-- Account for the oddities that are {{cite arxiv}}, {{cite biorxiv}}, {{cite citeseerx}}, before generation of COinS data.
	do
		if in_array (config.CitationClass, {'arxiv', 'biorxiv', 'citeseerx'}) then
			if not is_set (ID_list[config.CitationClass:upper()]) then			-- |arxiv= or |eprint= required for cite arxiv; |biorxiv= &amp; |citeseerx= required for their templates
				table.insert( z.message_tail, { set_error( config.CitationClass .. '_missing', {}, true ) } );		-- add error message
			end
			
			if 'arxiv' == config.CitationClass then
				Periodical = 'arXiv';											-- set to arXiv for COinS; after that, must be set to empty string
			end
			if 'biorxiv' == config.CitationClass then
				Periodical = 'bioRxiv';											-- set to bioRxiv for COinS; after that, must be set to empty string
			end
			if 'citeseerx' == config.CitationClass then
				Periodical = 'CiteSeerX';										-- set to CiteSeerX for COinS; after that, must be set to empty string
			end
		end
	end

-- handle type parameter for those CS1 citations that have default values
	if in_array(config.CitationClass, {&quot;AV-media-notes&quot;, &quot;interview&quot;, &quot;mailinglist&quot;, &quot;map&quot;, &quot;podcast&quot;, &quot;pressrelease&quot;, &quot;report&quot;, &quot;techreport&quot;, &quot;thesis&quot;}) then
		TitleType = set_titletype (config.CitationClass, TitleType);
		if is_set(Degree) and &quot;Thesis&quot; == TitleType then						-- special case for cite thesis
			TitleType = Degree .. ' ' .. cfg.title_types ['thesis']:lower();
		end
	end

	if is_set(TitleType) then													-- if type parameter is specified
		TitleType = substitute( cfg.messages['type'], TitleType);				-- display it in parentheses
	-- TODO: Hack on TitleType to fix bunched parentheses problem
	end

-- legacy: promote PublicationDate to Date if neither Date nor Year are set.
	if not is_set (Date) then
		Date = Year;															-- promote Year to Date
		Year = nil;																-- make nil so Year as empty string isn't used for CITEREF
		if not is_set (Date) and is_set(PublicationDate) then					-- use PublicationDate when |date= and |year= are not set
			Date = PublicationDate;												-- promote PublicationDate to Date
			PublicationDate = '';												-- unset, no longer needed
		end
	end

	if PublicationDate == Date then PublicationDate = ''; end					-- if PublicationDate is same as Date, don't display in rendered citation

--[[
Go test all of the date-holding parameters for valid MOS:DATE format and make sure that dates are real dates. This must be done before we do COinS because here is where
we get the date used in the metadata.

Date validation supporting code is in Module:Citation/CS1/Date_validation
]]
	do	-- create defined block to contain local variables error_message, date_parameters_list, mismatch
		local error_message = '';
																				-- AirDate has been promoted to Date so not necessary to check it
		local date_parameters_list = {['access-date']=AccessDate, ['archive-date']=ArchiveDate, ['date']=Date, ['doi-broken-date']=DoiBroken,
				['embargo']=Embargo, ['lay-date']=LayDate, ['publication-date']=PublicationDate, ['year']=Year};

		anchor_year, Embargo, error_message = dates(date_parameters_list, COinS_date);

		if is_set (Year) and is_set (Date) then									-- both |date= and |year= not normally needed; 
			local mismatch = year_date_check (Year, Date)
			if 0 == mismatch then												-- |year= does not match a year-value in |date=
				if is_set (error_message) then									-- if there is already an error message
					error_message = error_message .. ', ';						-- tack on this additional message
				end
				error_message = error_message .. '&amp;#124;year= / &amp;#124;date= mismatch';
			elseif 1 == mismatch then											-- |year= matches year-value in |date=
				add_maint_cat ('date_year');
			end
		end
		
		if not is_set(error_message) then										-- error free dates only
			local modified = false;												-- flag
			if is_set (DF) then													-- if we need to reformat dates
				modified = reformat_dates (date_parameters_list, DF, false);	-- reformat to DF format, use long month names if appropriate
			end

			if true == date_hyphen_to_dash (date_parameters_list) then					-- convert hyphens to dashes where appropriate
				modified = true;
				add_maint_cat ('date_format');									-- hyphens were converted so add maint category
			end
			
			if modified then													-- if the date_parameters_list values were modified
				AccessDate = date_parameters_list['access-date'];				-- overwrite date holding parameters with modified values
				ArchiveDate = date_parameters_list['archive-date'];
				Date = date_parameters_list['date'];
				DoiBroken = date_parameters_list['doi-broken-date'];
				LayDate = date_parameters_list['lay-date'];
				PublicationDate = date_parameters_list['publication-date'];
			end
		else
			table.insert( z.message_tail, { set_error( 'bad_date', {error_message}, true ) } );	-- add this error message
		end
	end	-- end of do

-- Account for the oddity that is {{cite journal}} with |pmc= set and |url= not set.  Do this after date check but before COInS.
-- Here we unset Embargo if PMC not embargoed (|embargo= not set in the citation) or if the embargo time has expired. Otherwise, holds embargo date
	Embargo = is_embargoed (Embargo);											-- 

	if config.CitationClass == &quot;journal&quot; and not is_set(URL) and is_set(ID_list['PMC']) then
		if not is_set (Embargo) then											-- if not embargoed or embargo has expired
			URL=cfg.id_handlers['PMC'].prefix .. ID_list['PMC'];				-- set url to be the same as the PMC external link if not embargoed
			URLorigin = cfg.id_handlers['PMC'].parameters[1];					-- set URLorigin to parameter name for use in error message if citation is missing a |title=
			if is_set(AccessDate) then											-- access date requires |url=; pmc created url is not |url=
				table.insert( z.message_tail, { set_error( 'accessdate_missing_url', {}, true ) } );
				AccessDate = '';												-- unset
			end

		end
	end

-- At this point fields may be nil if they weren't specified in the template use.  We can use that fact.
	-- Test if citation has no title
	if	not is_set(Title) and
		not is_set(TransTitle) and
		not is_set(ScriptTitle) then
			if 'episode' == config.CitationClass then							-- special case for cite episode; TODO: is there a better way to do this?
				table.insert( z.message_tail, { set_error( 'citation_missing_title', {'series'}, true ) } );
			else
				table.insert( z.message_tail, { set_error( 'citation_missing_title', {'title'}, true ) } );
			end
	end
	
	if 'none' == Title and in_array (config.CitationClass, {'journal', 'citation'}) and is_set (Periodical) and 'journal' == A:ORIGIN('Periodical') then	-- special case for journal cites
		Title = '';																-- set title to empty string
		add_maint_cat ('untitled');
	end

	check_for_url ({															-- add error message when any of these parameters contains a URL
		['title']=Title,
		[A:ORIGIN('Chapter')]=Chapter,
		[A:ORIGIN('Periodical')]=Periodical,
		[A:ORIGIN('PublisherName')] = PublisherName
		});

	-- COinS metadata (see &lt;http://ocoins.info/&gt;) for automated parsing of citation information.
	-- handle the oddity that is cite encyclopedia and {{citation |encyclopedia=something}}. Here we presume that
	-- when Periodical, Title, and Chapter are all set, then Periodical is the book (encyclopedia) title, Title
	-- is the article title, and Chapter is a section within the article.  So, we remap 
	
	local coins_chapter = Chapter;												-- default assuming that remapping not required
	local coins_title = Title;													-- et tu
	if 'encyclopaedia' == config.CitationClass or ('citation' == config.CitationClass and is_set (Encyclopedia)) then
		if is_set (Chapter) and is_set (Title) and is_set (Periodical) then		-- if all are used then
			coins_chapter = Title;												-- remap
			coins_title = Periodical;
		end
	end
	local coins_author = a;														-- default for coins rft.au 
	if 0 &lt; #c then																-- but if contributor list
		coins_author = c;														-- use that instead
	end

	-- this is the function call to COinS()
	local OCinSoutput = COinS({
		['Periodical'] = Periodical,
		['Encyclopedia'] = Encyclopedia,
		['Chapter'] = make_coins_title (coins_chapter, ScriptChapter),			-- Chapter and ScriptChapter stripped of bold / italic wikimarkup
		['Degree'] = Degree;													-- cite thesis only
		['Title'] = make_coins_title (coins_title, ScriptTitle),				-- Title and ScriptTitle stripped of bold / italic wikimarkup
		['PublicationPlace'] = PublicationPlace,
		['Date'] = COinS_date.rftdate,											-- COinS_date has correctly formatted date if Date is valid;
		['Season'] = COinS_date.rftssn,
		['Chron'] =  COinS_date.rftchron or (not COinS_date.rftdate and Date) or '',	-- chron but if not set and invalid date format use Date; keep this last bit?
		['Series'] = Series,
		['Volume'] = Volume,
		['Issue'] = Issue,
		['Pages'] = get_coins_pages (first_set ({Sheet, Sheets, Page, Pages, At}, 5)),				-- pages stripped of external links
		['Edition'] = Edition,
		['PublisherName'] = PublisherName,
		['URL'] = first_set ({ChapterURL, URL}, 2),
		['Authors'] = coins_author,
		['ID_list'] = ID_list,
		['RawPage'] = this_page.prefixedText,
	}, config.CitationClass);

-- Account for the oddities that are {{cite arxiv}}, AFTER generation of COinS data.
--	if 'arxiv' == config.CitationClass then										-- we have set rft.jtitle in COinS to arXiv, now unset so it isn't displayed
	if in_array (config.CitationClass, {'arxiv', 'biorxiv', 'citeseerx'}) then	-- we have set rft.jtitle in COinS to arXiv, bioRxiv, or CiteSeerX now unset so it isn't displayed
		Periodical = '';														-- periodical not allowed in these templates; if article has been published, use cite journal
	end

-- special case for cite newsgroup.  Do this after COinS because we are modifying Publishername to include some static text
	if 'newsgroup' == config.CitationClass then
		if is_set (PublisherName) then
			PublisherName = substitute (cfg.messages['newsgroup'], external_link( 'news:' .. PublisherName, PublisherName, A:ORIGIN('PublisherName'), nil ));
		end
	end



	-- Now perform various field substitutions.
	-- We also add leading spaces and surrounding markup and punctuation to the
	-- various parts of the citation, but only when they are non-nil.
	local EditorCount;															-- used only for choosing {ed.) or (eds.) annotation at end of editor name-list
	do
		local last_first_list;
		local control = { 
			format = NameListFormat,											-- empty string or 'vanc'
			maximum = nil,														-- as if display-authors or display-editors not set
			lastauthoramp = LastAuthorAmp,
			page_name = this_page.text,											-- get current page name so that we don't wikilink to it via editorlinkn
			mode = Mode
		};

		do																		-- do editor name list first because the now unsupported coauthors used to modify control table
			control.maximum , editor_etal = get_display_authors_editors (A['DisplayEditors'], #e, 'editors', editor_etal);
			last_first_list, EditorCount = list_people(control, e, editor_etal);

			if is_set (Editors) then
				if editor_etal then
					Editors = Editors .. ' ' .. cfg.messages['et al'];			-- add et al. to editors parameter beause |display-editors=etal
					EditorCount = 2;											-- with et al., |editors= is multiple names; spoof to display (eds.) annotation
				else
					EditorCount = 2;											-- we don't know but assume |editors= is multiple names; spoof to display (eds.) annotation
				end
			else
				Editors = last_first_list;										-- either an author name list or an empty string
			end

			if 1 == EditorCount and (true == editor_etal or 1 &lt; #e) then		-- only one editor displayed but includes etal then 
				EditorCount = 2;												-- spoof to display (eds.) annotation
			end
		end
		do																		-- now do interviewers
			control.maximum = #interviewers_list;							-- number of interviewerss
			Interviewers = list_people(control, interviewers_list, false);	-- et al not currently supported
		end
		do																		-- now do translators
			control.maximum = #t;												-- number of translators
			Translators = list_people(control, t, false);						-- et al not currently supported
		end
		do																		-- now do contributors
			control.maximum = #c;												-- number of contributors
			Contributors = list_people(control, c, false);						-- et al not currently supported
		end
		do																		-- now do authors
			control.maximum , author_etal = get_display_authors_editors (A['DisplayAuthors'], #a, 'authors', author_etal);

			last_first_list = list_people(control, a, author_etal);

			if is_set (Authors) then
				Authors, author_etal = name_has_etal (Authors, author_etal, false);	-- find and remove variations on et al.
				if author_etal then
					Authors = Authors .. ' ' .. cfg.messages['et al'];			-- add et al. to authors parameter
				end
			else
				Authors = last_first_list;										-- either an author name list or an empty string
			end
		end																		-- end of do
	
		if is_set (Authors) and is_set (Collaboration) then
			Authors = Authors .. ' (' .. Collaboration .. ')';					-- add collaboration after et al.
		end

	end

-- apply |[xx-]format= styling; at the end, these parameters hold correctly styled format annotation,
-- an error message if the associated url is not set, or an empty string for concatenation
	ArchiveFormat = style_format (ArchiveFormat, ArchiveURL, 'archive-format', 'archive-url');
	ConferenceFormat = style_format (ConferenceFormat, ConferenceURL, 'conference-format', 'conference-url');
	Format = style_format (Format, URL, 'format', 'url');
	LayFormat = style_format (LayFormat, LayURL, 'lay-format', 'lay-url');
	TranscriptFormat = style_format (TranscriptFormat, TranscriptURL, 'transcript-format', 'transcripturl');

-- special case for chapter format so no error message or cat when chapter not supported
	if not (in_array(config.CitationClass, {'web', 'news', 'journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'arxiv', 'biorxiv', 'citeseerx'}) or
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia))) then
			ChapterFormat = style_format (ChapterFormat, ChapterURL, 'chapter-format', 'chapter-url');
	end

	if not is_set(URL) then
		if in_array(config.CitationClass, {&quot;web&quot;,&quot;podcast&quot;, &quot;mailinglist&quot;}) then	-- |url= required for cite web, cite podcast, and cite mailinglist
			table.insert( z.message_tail, { set_error( 'cite_web_url', {}, true ) } );
		end
		
		-- do we have |accessdate= without either |url= or |chapter-url=?
		if is_set(AccessDate) and not is_set(ChapterURL)then					-- ChapterURL may be set when URL is not set;
			table.insert( z.message_tail, { set_error( 'accessdate_missing_url', {}, true ) } );
			AccessDate = '';
		end
	end

	local OriginalURL, OriginalURLorigin, OriginalFormat, OriginalAccess;
	DeadURL = DeadURL:lower();													-- used later when assembling archived text
	if is_set( ArchiveURL ) then
		if is_set (ChapterURL) then 											-- URL not set so if chapter-url is set apply archive url to it
			OriginalURL = ChapterURL;											-- save copy of source chapter's url for archive text
			OriginalURLorigin = ChapterURLorigin;								-- name of chapter-url parameter for error messages
			OriginalFormat = ChapterFormat;										-- and original |format=
			if 'no' ~= DeadURL then
				ChapterURL = ArchiveURL											-- swap-in the archive's url
				ChapterURLorigin = A:ORIGIN('ArchiveURL')						-- name of archive-url parameter for error messages
				ChapterFormat = ArchiveFormat or '';							-- swap in archive's format
			end
		elseif is_set (URL) then
			OriginalURL = URL;													-- save copy of original source URL
			OriginalURLorigin = URLorigin;										-- name of url parameter for error messages
			OriginalFormat = Format; 											-- and original |format=
			OriginalAccess = UrlAccess;
			if 'no' ~= DeadURL then												-- if URL set then archive-url applies to it
				URL = ArchiveURL												-- swap-in the archive's url
				URLorigin = A:ORIGIN('ArchiveURL')								-- name of archive url parameter for error messages
				Format = ArchiveFormat or '';									-- swap in archive's format
				UrlAccess = nil;												-- restricted access levels do not make sense for archived urls
			end
 		end
	end

	if in_array(config.CitationClass, {'web','news','journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'arxiv', 'biorxiv', 'citeseerx'}) or	-- if any of the 'periodical' cites except encyclopedia
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia)) then
			local chap_param;
			if is_set (Chapter) then											-- get a parameter name from one of these chapter related meta-parameters
				chap_param = A:ORIGIN ('Chapter')
			elseif is_set (TransChapter) then
				chap_param = A:ORIGIN ('TransChapter')
			elseif is_set (ChapterURL) then
				chap_param = A:ORIGIN ('ChapterURL')
			elseif is_set (ScriptChapter) then
				chap_param = A:ORIGIN ('ScriptChapter')
			else is_set (ChapterFormat)
				chap_param = A:ORIGIN ('ChapterFormat')
			end

			if is_set (chap_param) then											-- if we found one
				table.insert( z.message_tail, { set_error( 'chapter_ignored', {chap_param}, true ) } );		-- add error message
				Chapter = '';													-- and set them to empty string to be safe with concatenation
				TransChapter = '';
				ChapterURL = '';
				ScriptChapter = '';
				ChapterFormat = '';
			end
	else																		-- otherwise, format chapter / article title
		local no_quotes = false;												-- default assume that we will be quoting the chapter parameter value
		if is_set (Contribution) and 0 &lt; #c then								-- if this is a contribution with contributor(s)
			if in_array (Contribution:lower(), cfg.keywords.contribution) then	-- and a generic contribution title
				no_quotes = true;												-- then render it unquoted
			end
		end

		Chapter = format_chapter_title (ScriptChapter, Chapter, TransChapter, ChapterURL, ChapterURLorigin, no_quotes);		-- Contribution is also in Chapter
		if is_set (Chapter) then
			Chapter = Chapter .. ChapterFormat ;
			if 'map' == config.CitationClass and is_set (TitleType) then
				Chapter = Chapter .. ' ' .. TitleType;							-- map annotation here; not after title
			end
			Chapter = Chapter.. sepc .. ' ';
		elseif is_set (ChapterFormat) then										-- |chapter= not set but |chapter-format= is so ...
			Chapter = ChapterFormat .. sepc .. ' ';								-- ... ChapterFormat has error message, we want to see it
		end
	end

	-- Format main title.
	if is_set(TitleLink) and is_set(Title) then
		Title = &quot;[[&quot; .. TitleLink .. &quot;|&quot; .. Title .. &quot;]]&quot;
	end

	if in_array(config.CitationClass, {'web', 'news', 'journal', 'magazine', 'pressrelease', 'podcast', 'newsgroup', 'mailinglist', 'interview', 'arxiv', 'biorxiv', 'citeseerx'}) or
		('citation' == config.CitationClass and is_set (Periodical) and not is_set (Encyclopedia)) or
		('map' == config.CitationClass and is_set (Periodical)) then			-- special case for cite map when the map is in a periodical treat as an article
			Title = kern_quotes (Title);										-- if necessary, separate title's leading and trailing quote marks from Module provided quote marks
			Title = wrap_style ('quoted-title', Title);
			Title = script_concatenate (Title, ScriptTitle);					-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
			TransTitle= wrap_style ('trans-quoted-title', TransTitle );
	elseif 'report' == config.CitationClass then								-- no styling for cite report
		Title = script_concatenate (Title, ScriptTitle);						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
		TransTitle= wrap_style ('trans-quoted-title', TransTitle );				-- for cite report, use this form for trans-title
	else
		Title = wrap_style ('italic-title', Title);
		Title = script_concatenate (Title, ScriptTitle);						-- &lt;bdi&gt; tags, lang atribute, categorization, etc; must be done after title is wrapped
		TransTitle = wrap_style ('trans-italic-title', TransTitle);
	end

	local TransError = &quot;&quot;;
	if is_set(TransTitle) then
		if is_set(Title) then
			TransTitle = &quot; &quot; .. TransTitle;
		else
			TransError = &quot; &quot; .. set_error( 'trans_missing_title', {'title'} );
		end
	end
	
	if is_set(Title) then
		if not is_set(TitleLink) and is_set(URL) then
			
			Title = external_link( URL, Title, URLorigin, UrlAccess ) .. TransTitle .. TransError .. Format;
-- this experiment hidden 2016-04-10; see Help_talk:Citation_Style_1#Recycled_urls
--			local temp_title = external_link( URL, Title, URLorigin ) .. TransError .. Format;	-- do this so we get error message even if url is usurped no archive
--			if in_array (DeadURL, {'unfit no archive', 'usurped no archive'}) then	-- when url links to inappropriate location and there is no archive of original source available
--				local err_msg
--				if temp_title:match ('%[%S+%s+(.+)%](&lt;.+)') then				-- if there is an error message
--					Title, err_msg = temp_title:match ('%[%S+%s+(.+)%](&lt;.+)');	-- strip off external link; TODO: find a better to do this
--					Title = Title .. (err_msg or '');
--				end
--			else
--				Title = temp_title;
--			end

			URL = '';															-- unset these because no longer needed
			Format = &quot;&quot;;
		else
			Title = Title .. TransTitle .. TransError;
		end
	end

	if is_set(Place) then
		Place = &quot; &quot; .. wrap_msg ('written', Place, use_lowercase) .. sepc .. &quot; &quot;;
	end

	if is_set (Conference) then
		if is_set (ConferenceURL) then
			Conference = external_link( ConferenceURL, Conference, ConferenceURLorigin, nil );
		end
		Conference = sepc .. &quot; &quot; .. Conference .. ConferenceFormat;
	elseif is_set(ConferenceURL) then
		Conference = sepc .. &quot; &quot; .. external_link( ConferenceURL, nil, ConferenceURLorigin, nil );
	end

	if not is_set(Position) then
		local Minutes = A['Minutes'];
		local Time = A['Time'];

		if is_set(Minutes) then
			if is_set (Time) then
				table.insert( z.message_tail, { set_error( 'redundant_parameters', {wrap_style ('parameter', 'minutes') .. ' and ' .. wrap_style ('parameter', 'time')}, true ) } );
			end
			Position = &quot; &quot; .. Minutes .. &quot; &quot; .. cfg.messages['minutes'];
		else
			if is_set(Time) then
				local TimeCaption = A['TimeCaption']
				if not is_set(TimeCaption) then
					TimeCaption = cfg.messages['event'];
					if sepc ~= '.' then
						TimeCaption = TimeCaption:lower();
					end
				end
				Position = &quot; &quot; .. TimeCaption .. &quot; &quot; .. Time;
			end
		end
	else
		Position = &quot; &quot; .. Position;
		At = '';
	end

	Page, Pages, Sheet, Sheets = format_pages_sheets (Page, Pages, Sheet, Sheets, config.CitationClass, Periodical_origin, sepc, NoPP, use_lowercase, Mode);

	At = is_set(At) and (sepc .. &quot; &quot; .. At) or &quot;&quot;;
	Position = is_set(Position) and (sepc .. &quot; &quot; .. Position) or &quot;&quot;;
	if config.CitationClass == 'map' then
		local Section = A['Section'];
		local Sections = A['Sections'];
		local Inset = A['Inset'];
		
		if is_set( Inset ) then
			Inset = sepc .. &quot; &quot; .. wrap_msg ('inset', Inset, use_lowercase);
		end			

		if is_set( Sections ) then
			Section = sepc .. &quot; &quot; .. wrap_msg ('sections', Sections, use_lowercase);
		elseif is_set( Section ) then
			Section = sepc .. &quot; &quot; .. wrap_msg ('section', Section, use_lowercase);
		end
		At = At .. Inset .. Section;		
	end	

	if is_set (Language) then
		Language = language_parameter (Language);								-- format, categories, name from ISO639-1, etc
	else
		Language=&quot;&quot;;															-- language not specified so make sure this is an empty string;
	--[[ TODO: need to extract the wrap_msg from language_parameter
	so that we can solve parentheses bunching problem with Format/Language/TitleType
	]]
	end

	Others = is_set(Others) and (sepc .. &quot; &quot; .. Others) or &quot;&quot;;
	
	if is_set (Translators) then
		if 'mla' == Mode then
			Others = sepc .. ' Trans. ' .. Translators .. Others;
		else
			Others = sepc .. ' ' .. wrap_msg ('translated', Translators, use_lowercase) .. Others;
		end
	end
	if is_set (Interviewers) then
		Others = sepc .. ' ' .. wrap_msg ('interview', Interviewers, use_lowercase) .. Others;
	end
	
	TitleNote = is_set(TitleNote) and (sepc .. &quot; &quot; .. TitleNote) or &quot;&quot;;
	if is_set (Edition) then
		if Edition:match ('%f[%a][Ee]d%.?$') or Edition:match ('%f[%a][Ee]dition$') then
			add_maint_cat ('extra_text', 'edition');
		end
		if 'mla' == Mode then
			Edition = '. ' .. Edition .. ' ed.';
		else
			Edition = &quot; &quot; .. wrap_msg ('edition', Edition);
		end
	else
		Edition = '';
	end

	Series = is_set(Series) and (sepc .. &quot; &quot; .. Series) or &quot;&quot;;
	if 'mla' == Mode then														-- not in brackets for mla
		OrigYear = is_set(OrigYear) and (&quot;. &quot; .. OrigYear) or &quot;&quot;;
	else
		OrigYear = is_set(OrigYear) and (&quot; [&quot; .. OrigYear .. &quot;]&quot;) or &quot;&quot;;
	end
	Agency = is_set(Agency) and (sepc .. &quot; &quot; .. Agency) or &quot;&quot;;

	Volume = format_volume_issue (Volume, Issue, config.CitationClass, Periodical_origin, sepc, use_lowercase, Mode);

	------------------------------------ totally unrelated data
	if is_set(Via) then
		Via = &quot; &quot; .. wrap_msg ('via', Via);
	end

--[[
Subscription implies paywall; Registration does not.  If both are used in a citation, the subscription required link
note is displayed. There are no error messages for this condition.

]]
	if is_set (SubscriptionRequired) then
		SubscriptionRequired = sepc .. &quot; &quot; .. cfg.messages['subscription'];		-- subscription required message
	elseif is_set (RegistrationRequired) then
		SubscriptionRequired = sepc .. &quot; &quot; .. cfg.messages['registration'];		-- registration required message
	else
		SubscriptionRequired = '';												-- either or both might be set to something other than yes true y
	end

	if is_set(AccessDate) then
		local retrv_text = &quot; &quot; .. cfg.messages['retrieved']

		AccessDate = nowrap_date (AccessDate);									-- wrap in nowrap span if date in appropriate format
		if 'mla' == Mode then													-- retrieved text not used in mla
			AccessDate = ' ' .. AccessDate;
		else
			if (sepc ~= &quot;.&quot;) then retrv_text = retrv_text:lower() end			-- if mode is cs2, lower case
			AccessDate = substitute (retrv_text, AccessDate);					-- add retrieved text
		end
		AccessDate = substitute (cfg.presentation['accessdate'], {sepc, AccessDate});	-- allow editors to hide accessdates
	end
	
	if is_set(ID) then ID = sepc ..&quot; &quot;.. ID; end
   	if &quot;thesis&quot; == config.CitationClass and is_set(Docket) then
		ID = sepc ..&quot; Docket &quot;.. Docket .. ID;
	end
   	if &quot;report&quot; == config.CitationClass and is_set(Docket) then					-- for cite report when |docket= is set
		ID = sepc .. ' ' .. Docket;												-- overwrite ID even if |id= is set
	end

	ID_list = build_id_list( ID_list, {IdAccessLevels=ID_access_levels, DoiBroken = DoiBroken, ASINTLD = ASINTLD, IgnoreISBN = IgnoreISBN, Embargo=Embargo, Class = Class} );

	if is_set(URL) then
		URL = &quot; &quot; .. external_link( URL, nil, URLorigin, UrlAccess );
	end

	if is_set(Quote) then
		if Quote:sub(1,1) == '&quot;' and Quote:sub(-1,-1) == '&quot;' then				-- if first and last characters of quote are quote marks
			Quote = Quote:sub(2,-2);											-- strip them off
		end
		Quote = sepc ..&quot; &quot; .. wrap_style ('quoted-text', Quote ); 				-- wrap in &lt;q&gt;...&lt;/q&gt; tags
		PostScript = &quot;&quot;;														-- cs1|2 does not supply terminal punctuation when |quote= is set
	end
	
	local Archived
	if is_set(ArchiveURL) then
		if not is_set(ArchiveDate) then
			ArchiveDate = set_error('archive_missing_date');
		end
		if &quot;no&quot; == DeadURL then
			local arch_text = cfg.messages['archived'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			Archived = sepc .. &quot; &quot; .. substitute( cfg.messages['archived-not-dead'],
				{ external_link( ArchiveURL, arch_text, A:ORIGIN('ArchiveURL'), nil ) .. ArchiveFormat, ArchiveDate } );
			if not is_set(OriginalURL) then
				Archived = Archived .. &quot; &quot; .. set_error('archive_missing_url');							   
			end
		elseif is_set(OriginalURL) then											-- DeadURL is empty, 'yes', 'true', 'y', 'unfit', 'usurped'
			local arch_text = cfg.messages['archived-dead'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			if in_array (DeadURL, {'unfit', 'usurped', 'bot: unknown'}) then
				Archived = sepc .. &quot; &quot; .. 'Archived from the original on ' .. ArchiveDate;	-- format already styled
				if 'bot: unknown' == DeadURL then
					add_maint_cat ('bot:_unknown');								-- and add a category if not already added
				else
					add_maint_cat ('unfit');									-- and add a category if not already added
				end
			else																-- DeadURL is empty, 'yes', 'true', or 'y'
				Archived = sepc .. &quot; &quot; .. substitute( arch_text,
					{ external_link( OriginalURL, cfg.messages['original'], OriginalURLorigin, OriginalAccess ) .. OriginalFormat, ArchiveDate } );	-- format already styled
			end	
		else
			local arch_text = cfg.messages['archived-missing'];
			if sepc ~= &quot;.&quot; then arch_text = arch_text:lower() end
			Archived = sepc .. &quot; &quot; .. substitute( arch_text, 
				{ set_error('archive_missing_url'), ArchiveDate } );
		end
	elseif is_set (ArchiveFormat) then
		Archived = ArchiveFormat;												-- if set and ArchiveURL not set ArchiveFormat has error message
	else
		Archived = &quot;&quot;
	end
	
	local Lay = '';
	if is_set(LayURL) then
		if is_set(LayDate) then LayDate = &quot; (&quot; .. LayDate .. &quot;)&quot; end
		if is_set(LaySource) then 
			LaySource = &quot; &amp;ndash; ''&quot; .. safe_for_italics(LaySource) .. &quot;''&quot;;
		else
			LaySource = &quot;&quot;;
		end
		if sepc == '.' then
			Lay = sepc .. &quot; &quot; .. external_link( LayURL, cfg.messages['lay summary'], A:ORIGIN('LayURL'), nil ) .. LayFormat .. LaySource .. LayDate
		else
			Lay = sepc .. &quot; &quot; .. external_link( LayURL, cfg.messages['lay summary']:lower(), A:ORIGIN('LayURL'), nil ) .. LayFormat .. LaySource .. LayDate
		end			
	elseif is_set (LayFormat) then												-- Test if |lay-format= is given without giving a |lay-url=
		Lay = sepc .. LayFormat;												-- if set and LayURL not set, then LayFormat has error message
	end

	if is_set(Transcript) then
		if is_set(TranscriptURL) then
			Transcript = external_link( TranscriptURL, Transcript, TranscriptURLorigin, nil );
		end
		Transcript = sepc .. ' ' .. Transcript .. TranscriptFormat;
	elseif is_set(TranscriptURL) then
		Transcript = external_link( TranscriptURL, nil, TranscriptURLorigin, nil );
	end

	local Publisher;
	if is_set(PublicationDate) then
		PublicationDate = wrap_msg ('published', PublicationDate);
	end
	if is_set(PublisherName) then
		if is_set(PublicationPlace) then
			Publisher = sepc .. &quot; &quot; .. PublicationPlace .. &quot;: &quot; .. PublisherName .. PublicationDate;
		else
			Publisher = sepc .. &quot; &quot; .. PublisherName .. PublicationDate;  
		end			
	elseif is_set(PublicationPlace) then 
		Publisher= sepc .. &quot; &quot; .. PublicationPlace .. PublicationDate;
	else 
		Publisher = PublicationDate;
	end
	
	-- Several of the above rely upon detecting this as nil, so do it last.
	if is_set(Periodical) then
		if is_set(Title) or is_set(TitleNote) then 
			Periodical = sepc .. &quot; &quot; .. wrap_style ('italic-title', Periodical) 
		else 
			Periodical = wrap_style ('italic-title', Periodical)
		end
	end

--[[
Handle the oddity that is cite speech.  This code overrides whatever may be the value assigned to TitleNote (through |department=) and forces it to be &quot; (Speech)&quot; so that
the annotation directly follows the |title= parameter value in the citation rather than the |event= parameter value (if provided).
]]
	if &quot;speech&quot; == config.CitationClass then				-- cite speech only
		TitleNote = &quot; (Speech)&quot;;							-- annotate the citation
		if is_set (Periodical) then							-- if Periodical, perhaps because of an included |website= or |journal= parameter 
			if is_set (Conference) then						-- and if |event= is set
				Conference = Conference .. sepc .. &quot; &quot;;		-- then add appropriate punctuation to the end of the Conference variable before rendering
			end
		end
	end

	-- Piece all bits together at last.  Here, all should be non-nil.
	-- We build things this way because it is more efficient in LUA
	-- not to keep reassigning to the same string variable over and over.

	local tcommon;
	local tcommon2;																-- used for book cite when |contributor= is set
	
	if in_array(config.CitationClass, {&quot;journal&quot;,&quot;citation&quot;}) and is_set(Periodical) then
		if is_set(Others) then Others = Others .. sepc .. &quot; &quot; end
		if 'mla' == Mode then
			tcommon = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Edition, Publisher, Agency, Volume}, sepc );
		else
			tcommon = safe_join( {Others, Title, TitleNote, Conference, Periodical, Format, TitleType, Series, 
				Language, Edition, Publisher, Agency, Volume}, sepc );
		end		
	elseif in_array(config.CitationClass, {&quot;book&quot;,&quot;citation&quot;}) and not is_set(Periodical) then		-- special cases for book cites
		if is_set (Contributors) then											-- when we are citing foreword, preface, introduction, etc
			tcommon = safe_join( {Title, TitleNote}, sepc );					-- author and other stuff will come after this and before tcommon2
			if 'mla' == Mode then
				tcommon2 = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Volume, Edition, Publisher, Agency}, sepc );
			else
				tcommon2 = safe_join( {Conference, Periodical, Format, TitleType, Series, Language, Volume, Others, Edition, Publisher, Agency}, sepc );
			end
		elseif 'mla' == Mode then
			tcommon = safe_join( {TitleNote, Conference, Periodical, Format, TitleType, Series, Language, Volume, Publisher, Agency}, sepc );
		else
			tcommon = safe_join( {Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, Volume, Others, Edition, Publisher, Agency}, sepc );
		end

	elseif 'map' == config.CitationClass then									-- special cases for cite map
		if is_set (Chapter) then												-- map in a book; TitleType is part of Chapter
			tcommon = safe_join( {Title, Format, Edition, Scale, Series, Language, Cartography, Others, Publisher, Volume}, sepc );
		elseif is_set (Periodical) then											-- map in a periodical
			tcommon = safe_join( {Title, TitleType, Format, Periodical, Scale, Series, Language, Cartography, Others, Publisher, Volume}, sepc );
		else																	-- a sheet or stand-alone map
			tcommon = safe_join( {Title, TitleType, Format, Edition, Scale, Series, Language, Cartography, Others, Publisher}, sepc );
		end
		
	elseif 'episode' == config.CitationClass then								-- special case for cite episode
		tcommon = safe_join( {Title, TitleNote, TitleType, Series, Transcript, Language, Edition, Publisher}, sepc );

	elseif ('news' == config.CitationClass) and ('mla' == Mode) then			-- special case for cite news in MLA mode
		tcommon = safe_join( {Periodical, Format, TitleType, Series, Language, Edition, Agency}, sepc );

	elseif ('web' == config.CitationClass) and ('mla' == Mode) then				-- special case for cite web in MLA mode
		tcommon = safe_join( {Periodical, Format, TitleType, Series, Language, 
			Edition, Publisher, Agency}, sepc );

	else																		-- all other CS1 templates
		tcommon = safe_join( {Title, TitleNote, Conference, Periodical, Format, TitleType, Series, Language, 
			Volume, Others, Edition, Publisher, Agency}, sepc );
	end
	
	if #ID_list &gt; 0 then
		ID_list = safe_join( { sepc .. &quot; &quot;,  table.concat( ID_list, sepc .. &quot; &quot; ), ID }, sepc );
	else
		ID_list = ID;
	end
	
	local idcommon = safe_join( { ID_list, URL, Archived, AccessDate, Via, SubscriptionRequired, Lay, Quote }, sepc );
	local text;
	local pgtext = Position .. Sheet .. Sheets .. Page .. Pages .. At;

	if is_set(Date) then
		if ('mla' == Mode) then
			if in_array (config.CitationClass, {'book', 'news', 'web'}) then
				Date = ', ' .. Date;											-- origyear follows title in mla
			elseif 'journal' == config.CitationClass then
				Date = ', (' .. Date .. ')';
			end
		elseif is_set (Authors) or is_set (Editors) then						-- date follows authors or editors when authors not set
			Date = &quot; (&quot; .. Date ..&quot;)&quot; .. OrigYear .. sepc .. &quot; &quot;;				-- in paranetheses
		else																	-- neither of authors and editors set
			if (string.sub(tcommon,-1,-1) == sepc) then							-- if the last character of tcommon is sepc
				Date = &quot; &quot; .. Date .. OrigYear;									-- Date does not begin with sepc
			else
				Date = sepc .. &quot; &quot; .. Date .. OrigYear;							-- Date begins with sepc
			end
		end
	end	
	if is_set(Authors) then
		if (not is_set (Date)) or ('mla' == Mode) then							-- when date is set it's in parentheses; no Authors termination
			Authors = terminate_name_list (Authors, sepc);						-- when no date, terminate with 0 or 1 sepc and a space
		end
		if is_set(Editors) then
			local in_text = &quot; &quot;;
			local post_text = &quot;&quot;;
			if is_set(Chapter) and 0 == #c and 'mla' ~= Mode then
				in_text = in_text .. cfg.messages['in'] .. &quot; &quot;
				if (sepc ~= '.') then in_text = in_text:lower() end				-- lowercase for cs2
			elseif is_set(Chapter) and 'mla' == Mode then
				if EditorCount &lt;= 1 then
					in_text = '. Ed. ';
				else
					in_text = '. Eds. ';
				end
			else
				if EditorCount &lt;= 1 then
					post_text = &quot;, &quot; .. cfg.messages['editor'];
				else
					post_text = &quot;, &quot; .. cfg.messages['editors'];
				end
			end 
			Editors = terminate_name_list (in_text .. Editors .. post_text, sepc);	-- terminate with 0 or 1 sepc and a space
		end
		if is_set (Contributors) then											-- book cite and we're citing the intro, preface, etc
			local by_text = sepc .. ' ' .. cfg.messages['by'] .. ' ';
			if (sepc ~= '.') then by_text = by_text:lower() end					-- lowercase for cs2
			Authors = by_text .. Authors;										-- author follows title so tweak it here
			if is_set (Editors) and is_set (Date) and ('mla' ~= Mode) then		-- when Editors make sure that Authors gets terminated
				Authors = terminate_name_list (Authors, sepc);					-- terminate with 0 or 1 sepc and a space
			end
			if (not is_set (Date)) or ('mla' == Mode) then											-- when date is set it's in parentheses; no Contributors termination
				Contributors = terminate_name_list (Contributors, sepc);		-- terminate with 0 or 1 sepc and a space
			end
			if 'mla' == Mode then
				text = safe_join( {Contributors, Chapter, tcommon, OrigYear, Authors, Place, Others, Editors, tcommon2, Date, pgtext, idcommon }, sepc );
			else
				text = safe_join( {Contributors, Date, Chapter, tcommon, Authors, Place, Editors, tcommon2, pgtext, idcommon }, sepc );
			end
		elseif 'mla' == Mode then
			tcommon = tcommon .. Date;											-- hack to avoid duplicate separators
			text = safe_join( {Authors, Chapter, Title, OrigYear, Others, Editors, Edition, Place, tcommon, pgtext, idcommon }, sepc );
		else
			text = safe_join( {Authors, Date, Chapter, Place, Editors, tcommon, pgtext, idcommon }, sepc );
		end
	elseif is_set(Editors) then
		if is_set(Date) then
			if EditorCount &lt;= 1 then
				Editors = Editors .. &quot;, &quot; .. cfg.messages['editor'];
			else
				Editors = Editors .. &quot;, &quot; .. cfg.messages['editors'];
			end
		else
			if EditorCount &lt;= 1 then
				Editors = Editors .. &quot; (&quot; .. cfg.messages['editor'] .. &quot;)&quot; .. sepc .. &quot; &quot;
			else
				Editors = Editors .. &quot; (&quot; .. cfg.messages['editors'] .. &quot;)&quot; .. sepc .. &quot; &quot;
			end
		end
		if 'mla' == Mode then
			if in_array(config.CitationClass, {'journal', 'news', 'web'}) and is_set(Periodical) then
				text = safe_join( {Editors, Title, Place, tcommon, pgtext, Date, idcommon}, sepc );
			else
				text = safe_join( {Editors, Chapter, Title, Place, tcommon, Date, pgtext, idcommon}, sepc );
			end
		else
			text = safe_join( {Editors, Date, Chapter, Place, tcommon, pgtext, idcommon}, sepc );
		end
	elseif 'mla' == Mode then
		if in_array(config.CitationClass, {'journal', 'news', 'web'}) and is_set(Periodical) then
			text = safe_join( {Title, Place, tcommon, pgtext, Date, idcommon}, sepc );
		else
			text = safe_join( {Chapter, Title, Place, tcommon, Date, pgtext, idcommon}, sepc );
		end
	else
		if in_array(config.CitationClass, {&quot;journal&quot;,&quot;citation&quot;}) and is_set(Periodical) then
			text = safe_join( {Chapter, Place, tcommon, pgtext, Date, idcommon}, sepc );
		else
			text = safe_join( {Chapter, Place, tcommon, Date, pgtext, idcommon}, sepc );
		end
	end
	
	if is_set(PostScript) and PostScript ~= sepc then
		text = safe_join( {text, sepc}, sepc );  --Deals with italics, spaces, etc.
		text = text:sub(1,-sepc:len()-1);
	end	
	
	text = safe_join( {text, PostScript}, sepc );

	-- Now enclose the whole thing in a &lt;cite/&gt; element
	local options = {};
	
	if is_set(config.CitationClass) and config.CitationClass ~= &quot;citation&quot; then
		options.class = config.CitationClass;
		options.class = &quot;citation &quot; .. config.CitationClass;					-- class=citation required for blue highlight when used with |ref=
	else
		options.class = &quot;citation&quot;;
	end
	
	if is_set(Ref) and Ref:lower() ~= &quot;none&quot; then								-- set reference anchor if appropriate
		local id = Ref
		if ('harv' == Ref ) then
			local namelist = {};												-- holds selected contributor, author, editor name list
			local year = first_set ({Year, anchor_year}, 2);					-- Year first for legacy citations and for YMD dates that require disambiguation

			if #c &gt; 0 then														-- if there is a contributor list
				namelist = c;													-- select it
			elseif #a &gt; 0 then													-- or an author list
				namelist = a;
			elseif #e &gt; 0 then													-- or an editor list
				namelist = e;
			end
			if #namelist &gt; 0 then												-- if there are names in namelist
				id = anchor_id (namelist, year);								-- go make the CITEREF anchor
			else
				id = '';														-- unset
			end
		end
		options.id = id;
	end
	
	if string.len(text:gsub(&quot;&lt;span[^&gt;/]*&gt;(.-)&lt;/span&gt;&quot;, &quot;%1&quot;):gsub(&quot;%b&lt;&gt;&quot;,&quot;&quot;)) &lt;= 2 then	-- remove &lt;span&gt; tags and other html-like markup; then get length of what remains
		z.error_categories = {};
		text = set_error('empty_citation');
		z.message_tail = {};
	end
	
	if is_set(options.id) then													-- here we wrap the rendered citation in &lt;cite ...&gt;...&lt;/cite&gt; tags
		text = substitute (cfg.presentation['cite-id'], {mw.uri.anchorEncode(options.id), mw.text.nowiki(options.class), text});	-- when |ref= is set
	else
		text = substitute (cfg.presentation['cite'], {mw.text.nowiki(options.class), text});	-- all other cases
	end		

	text = text .. substitute (cfg.presentation['ocins'], {OCinSoutput});		-- append metadata to the citation
	
	if #z.message_tail ~= 0 then
		text = text .. &quot; &quot;;
		for i,v in ipairs( z.message_tail ) do
			if is_set(v[1]) then
				if i == #z.message_tail then
					text = text .. error_comment( v[1], v[2] );
				else
					text = text .. error_comment( v[1] .. &quot;; &quot;, v[2] );
				end
			end
		end
	end

	if #z.maintenance_cats ~= 0 then
		text = text .. '&lt;span class=&quot;citation-comment&quot; style=&quot;display:none; color:#33aa33; margin-left:0.3em&quot;&gt;';
		for _, v in ipairs( z.maintenance_cats ) do								-- append maintenance categories
			text = text .. v .. ' ([[:Category:' .. v ..'|link]])';
		end
		text = text .. '&lt;/span&gt;';												-- maintenance mesages (realy just the names of the categories for now)
	end
	
	no_tracking_cats = no_tracking_cats:lower();
	if in_array(no_tracking_cats, {&quot;&quot;, &quot;no&quot;, &quot;false&quot;, &quot;n&quot;}) then
		for _, v in ipairs( z.error_categories ) do
			text = text .. '[[Category:' .. v ..']]';
		end
		for _, v in ipairs( z.maintenance_cats ) do								-- append maintenance categories
			text = text .. '[[Category:' .. v ..']]';
		end
		for _, v in ipairs( z.properties_cats ) do								-- append maintenance categories
			text = text .. '[[Category:' .. v ..']]';
		end
	end
	
	return text
end


--[[--------------------------&lt; C S 1 . C I T A T I O N &gt;------------------------------------------------------

This is used by templates such as {{cite book}} to create the actual citation text.

]]

function cs1.citation(frame)
	Frame = frame;																-- save a copy incase we need to display an error message in preview mode
	local pframe = frame:getParent()
	local validation, utilities, identifiers, metadata;
	
	if nil ~= string.find (frame:getTitle(), 'sandbox', 1, true) then			-- did the {{#invoke:}} use sandbox version?
		cfg = mw.loadData ('Module:Citation/CS1/Configuration/sandbox');		-- load sandbox versions of support modules
		whitelist = mw.loadData ('Module:Citation/CS1/Whitelist/sandbox');
		utilities = require ('Module:Citation/CS1/Utilities/sandbox');
		validation = require ('Module:Citation/CS1/Date_validation/sandbox');
		identifiers = require ('Module:Citation/CS1/Identifiers/sandbox');
		metadata = require ('Module:Citation/CS1/COinS/sandbox');
		
	else																		-- otherwise
		cfg = mw.loadData ('Module:Citation/CS1/Configuration');				-- load live versions of support modules
		whitelist = mw.loadData ('Module:Citation/CS1/Whitelist');
		utilities = require ('Module:Citation/CS1/Utilities');
		validation = require ('Module:Citation/CS1/Date_validation');
		identifiers = require ('Module:Citation/CS1/Identifiers');
		metadata = require ('Module:Citation/CS1/COinS');
	end

	utilities.set_selected_modules (cfg);										-- so that functions in Utilities can see the cfg tables
	identifiers.set_selected_modules (cfg, utilities);							-- so that functions in Identifiers can see the selected cfg tables and selected Utilities module
	validation.set_selected_modules (utilities);								-- so that functions in Date validataion can see the selected Utilities module
	metadata.set_selected_modules (cfg, utilities);								-- so that functions in COinS can see the selected cfg tables and selected Utilities module

	dates = validation.dates;													-- imported functions from Module:Citation/CS1/Date validation
	year_date_check = validation.year_date_check;
	reformat_dates = validation.reformat_dates;
	date_hyphen_to_dash = validation.date_hyphen_to_dash;
	
	is_set = utilities.is_set;													-- imported functions from Module:Citation/CS1/Utilities
	in_array = utilities.in_array;
	substitute = utilities.substitute;
	error_comment = utilities.error_comment;
	set_error = utilities.set_error;
	select_one = utilities.select_one;
	add_maint_cat = utilities.add_maint_cat;
	wrap_style = utilities.wrap_style;
	safe_for_italics = utilities.safe_for_italics;
	remove_wiki_link = utilities.remove_wiki_link;

	z = utilities.z;															-- table of error and category tables in Module:Citation/CS1/Utilities

	extract_ids = identifiers.extract_ids;										-- imported functions from Module:Citation/CS1/Identifiers
	build_id_list = identifiers.build_id_list;
	is_embargoed = identifiers.is_embargoed;
	extract_id_access_levels = identifiers.extract_id_access_levels;
	
	make_coins_title = metadata.make_coins_title;								-- imported functions from Module:Citation/CS1/COinS
	get_coins_pages = metadata.get_coins_pages;
	COinS = metadata.COinS;

	local args = {};															-- table where we store all of the template's arguments
	local suggestions = {};														-- table where we store suggestions if we need to loadData them
	local error_text, error_state;

	local config = {};															-- table to store parameters from the module {{#invoke:}}
	for k, v in pairs( frame.args ) do
		config[k] = v;
--		args[k] = v;															-- debug tool that allows us to render a citation from module {{#invoke:}}
	end	

	local capture;																-- the single supported capture when matching unknown parameters using patterns
	for k, v in pairs( pframe.args ) do
		if v ~= '' then
			if not validate( k, config.CitationClass ) then			
				error_text = &quot;&quot;;
				if type( k ) ~= 'string' then
					-- Exclude empty numbered parameters
					if v:match(&quot;%S+&quot;) ~= nil then
						error_text, error_state = set_error( 'text_ignored', {v}, true );
					end
				elseif validate( k:lower(), config.CitationClass ) then 
					error_text, error_state = set_error( 'parameter_ignored_suggest', {k, k:lower()}, true );
				else
					if nil == suggestions.suggestions then						-- if this table is nil then we need to load it
						if nil ~= string.find (frame:getTitle(), 'sandbox', 1, true) then			-- did the {{#invoke:}} use sandbox version?
							suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions/sandbox' );	-- use the sandbox version
						else
							suggestions = mw.loadData( 'Module:Citation/CS1/Suggestions' );			-- use the live version
						end
					end
					for pattern, param in pairs (suggestions.patterns) do		-- loop through the patterns to see if we can suggest a proper parameter
						capture = k:match (pattern);							-- the whole match if no caputre in pattern else the capture if a match
						if capture then											-- if the pattern matches 
							param = substitute( param, capture );				-- add the capture to the suggested parameter (typically the enumerator)
							error_text, error_state = set_error( 'parameter_ignored_suggest', {k, param}, true );	-- set the error message
						end
					end
					if not is_set (error_text) then								-- couldn't match with a pattern, is there an expicit suggestion?
						if suggestions.suggestions[ k:lower() ] ~= nil then
							error_text, error_state = set_error( 'parameter_ignored_suggest', {k, suggestions.suggestions[ k:lower() ]}, true );
						else
							error_text, error_state = set_error( 'parameter_ignored', {k}, true );
							v = '';												-- unset value assigned to unrecognized parameters (this for the limited parameter lists)
						end
					end
				end				  
				if error_text ~= '' then
					table.insert( z.message_tail, {error_text, error_state} );
				end				
			end
			missing_pipe_check (v);												-- do we think that there is a parameter that is missing a pipe?
			
			args[k] = v;
		elseif args[k] ~= nil or (k == 'postscript') then
			args[k] = v;
		end		
	end	

	for k, v in pairs( args ) do
		if 'string' == type (k) then											-- don't evaluate positional parameters
			has_invisible_chars (k, v);
		end
	end
	return citation0( config, args)
end

return cs1;</text>
      <sha1>3f3q4btal4dccpz3fgm2gs5lzro4q94</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/COinS</title>
    <ns>828</ns>
    <id>48828620</id>
    <revision>
      <id>778352763</id>
      <parentid>777799217</parentid>
      <timestamp>2017-05-02T16:22:11Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>long-time corrupted-metadata bug fixed;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="16669">
local coins = {};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array, remove_wiki_link;										-- functions in Module:Citation/CS1/Utilities

local cfg;																		-- table of configuration tables that are defined in Module:Citation/CS1/Configuration


--[[--------------------------&lt; S T R I P _ A P O S T R O P H E _ M A R K U P &gt;--------------------------------

Strip wiki italic and bold markup from argument so that it doesn't contaminate COinS metadata.
This function strips common patterns of apostrophe markup.  We presume that editors who have taken the time to
markup a title have, as a result, provided valid markup. When they don't, some single apostrophes are left behind.

]]

local function strip_apostrophe_markup (argument)
	if not is_set (argument) then return argument; end

	if argument:find ( &quot;''&quot;, 1, true ) == nil then								-- Is there at least one double apostrophe?  If not, exit.
		return argument;
	end

	while true do
		if argument:find ( &quot;'''''&quot;, 1, true ) then								-- bold italic (5)
			argument=argument:gsub(&quot;%'%'%'%'%'&quot;, &quot;&quot;);							-- remove all instances of it
		elseif argument:find ( &quot;''''&quot;, 1, true ) then							-- italic start and end without content (4)
			argument=argument:gsub(&quot;%'%'%'%'&quot;, &quot;&quot;);
		elseif argument:find ( &quot;'''&quot;, 1, true ) then							-- bold (3)
			argument=argument:gsub(&quot;%'%'%'&quot;, &quot;&quot;);
		elseif argument:find ( &quot;''&quot;, 1, true ) then								-- italic (2)
			argument=argument:gsub(&quot;%'%'&quot;, &quot;&quot;);
		else
			break;
		end
	end
	return argument;															-- done
end


--[[--------------------------&lt; M A K E _ C O I N S _ T I T L E &gt;----------------------------------------------

Makes a title for COinS from Title and / or ScriptTitle (or any other name-script pairs)

Apostrophe markup (bold, italics) is stripped from each value so that the COinS metadata isn't corrupted with strings
of %27%27...

]]

local function make_coins_title (title, script)
	if is_set (title) then
		title = strip_apostrophe_markup (title);								-- strip any apostrophe markup
	else
		title='';																-- if not set, make sure title is an empty string
	end
	if is_set (script) then
		script = script:gsub ('^%l%l%s*:%s*', '');								-- remove language prefix if present (script value may now be empty string)
		script = strip_apostrophe_markup (script);								-- strip any apostrophe markup
	else
		script='';																-- if not set, make sure script is an empty string
	end
	if is_set (title) and is_set (script) then
		script = ' ' .. script;													-- add a space before we concatenate
	end
	return title .. script;														-- return the concatenation
end


--[[--------------------------&lt; E S C A P E _ L U A _ M A G I C _ C H A R S &gt;----------------------------------

Returns a string where all of lua's magic characters have been escaped.  This is important because functions like
string.gsub() treat their pattern and replace strings as patterns, not literal strings.
]]

local function escape_lua_magic_chars (argument)
	argument = argument:gsub(&quot;%%&quot;, &quot;%%%%&quot;);										-- replace % with %%
	argument = argument:gsub(&quot;([%^%$%(%)%.%[%]%*%+%-%?])&quot;, &quot;%%%1&quot;);				-- replace all other lua magic pattern characters
	return argument;
end


--[[--------------------------&lt; G E T _ C O I N S _ P A G E S &gt;------------------------------------------------

Extract page numbers from external wikilinks in any of the |page=, |pages=, or |at= parameters for use in COinS.

]]

local function get_coins_pages (pages)
	local pattern;
	if not is_set (pages) then return pages; end								-- if no page numbers then we're done
	
	while true do
		pattern = pages:match(&quot;%[(%w*:?//[^ ]+%s+)[%w%d].*%]&quot;);					-- pattern is the opening bracket, the url and following space(s): &quot;[url &quot;
		if nil == pattern then break; end										-- no more urls
		pattern = escape_lua_magic_chars (pattern);								-- pattern is not a literal string; escape lua's magic pattern characters
		pages = pages:gsub(pattern, &quot;&quot;);										-- remove as many instances of pattern as possible
	end
	pages = pages:gsub(&quot;[%[%]]&quot;, &quot;&quot;);											-- remove the brackets
	pages = pages:gsub(&quot;&quot;, &quot;-&quot; );							-- replace endashes with hyphens
	pages = pages:gsub(&quot;&amp;%w+;&quot;, &quot;-&quot; );						-- and replace html entities (&amp;ndash; etc.) with hyphens; do we need to replace numerical entities like &amp;#32; and the like?
	return pages;
end


--[=[-------------------------&lt; C O I N S _ R E P L A C E _ M A T H _ S T R I P M A R K E R &gt;------------------

There are three options for math markup rendering that depend on the editor's math preference settings.  These
settings are at [[Special:Preferences#mw-prefsection-rendering]] and are
	PNG images
	TeX source
	MathML with SVG or PNG fallback

All three are heavy with html and css which doesn't belong in the metadata.

Without this function, the metadata saved in the raw wikitext contained the rendering determined by the settings
of the last editor to save the page.

This function gets the rendered form of an equation according to the editor's preference before the page is saved.  It
then searches the rendering for the text equivalent of the rendered equation and replaces the rendering with that so
that the page is saved without extraneous html/css markup and with a reasonably readable text form of the equation.

When a replacement is made, this function returns true and the value with replacement; otherwise false and the intital
value.  To replace multipe equations it is necesary to call this function from within a loop.

]=]

local function coins_replace_math_stripmarker (value)
	local stripmarker = cfg.stripmarkers['math'];
	local rendering = value:match (stripmarker);								-- is there a math stripmarker

	if not rendering then														-- when value doesn't have a math stripmarker, abandon this test
		return false, value;
	end
	
	rendering = mw.text.unstripNoWiki (rendering);								-- convert stripmarker into rendered value (or nil? ''? when math render error)
	
	if rendering:match ('alt=&quot;[^&quot;]+&quot;') then										-- if PNG math option
		rendering = rendering:match ('alt=&quot;([^&quot;]+)&quot;');							-- extract just the math text
	elseif rendering:match ('$%s+.+%s+%$') then									-- if TeX math option; $ is legit character that is escapes as \$
		rendering = rendering:match ('$%s+(.+)%s+%$')							-- extract just the math text
	elseif rendering:match ('&lt;annotation[^&gt;]+&gt;.+&lt;/annotation&gt;') then			-- if MathML math option
		rendering = rendering:match ('&lt;annotation[^&gt;]+&gt;(.+)&lt;/annotation&gt;')		-- extract just the math text
	else
		return false, value;													-- had math stripmarker but not one of the three defined forms
	end
	
	return true, value:gsub (stripmarker, rendering, 1);
end


--[[--------------------------&lt; C O I N S _ C L E A N U P &gt;----------------------------------------------------

Cleanup parameter values for the metadata by removing or replacing invisible characters and certain html entities.

2015-12-10: there is a bug in mw.text.unstripNoWiki ().  It replaces math stripmarkers with the appropriate content
when it shouldn't.  See https://phabricator.wikimedia.org/T121085 and Wikipedia_talk:Lua#stripmarkers_and_mw.text.unstripNoWiki.28.29

TODO: move the replacement patterns and replacement values into a table in /Configuration similar to the invisible
characters table?

]]

local function coins_cleanup (value)
	local replaced = true;														-- default state to get the do loop running

	while replaced do															-- loop until all math stripmarkers replaced
		replaced, value = coins_replace_math_stripmarker (value);				-- replace math stripmarker with text representation of the equation
	end

	value = value:gsub (cfg.stripmarkers['math'], &quot;MATH RENDER ERROR&quot;);						-- one or more couldn't be replaced; insert vague error message
	
	value = mw.text.unstripNoWiki (value);										-- replace nowiki stripmarkers with their content
	value = value:gsub ('&lt;span class=&quot;nowrap&quot; style=&quot;padding%-left:0%.1em;&quot;&gt;&amp;#39;(s?)&lt;/span&gt;', &quot;'%1&quot;);	-- replace {{'}} or {{'s}} with simple apostrophe or apostrophe-s
	value = value:gsub ('&amp;nbsp;', ' ');											-- replace &amp;nbsp; entity with plain space
	value = value:gsub ('\226\128\138', ' ');									-- replace hair space with plain space
	value = value:gsub ('&amp;zwj;', '');											-- remove &amp;zwj; entities
	value = mw.ustring.gsub (value, '[\226\128\141\226\128\139\194\173]', '');	-- remove zero-width joiner, zero-width space, soft hyphen
	value = value:gsub ('[\009\010\013]', ' ');									-- replace horizontal tab, line feed, carriage return with plain space
	return value;
end


--[[--------------------------&lt; C O I N S &gt;--------------------------------------------------------------------

COinS metadata (see &lt;http://ocoins.info/&gt;) allows automated tools to parse the citation information.

]]

local function COinS(data, class)
	if 'table' ~= type(data) or nil == next(data) then
		return '';
	end

	for k, v in pairs (data) do													-- spin through all of the metadata parameter values
		if 'ID_list' ~= k and 'Authors' ~= k then								-- except the ID_list and Author tables (author nowiki stripmarker done when Author table processed)
			data[k] = coins_cleanup (v);
		end
	end

	local ctx_ver = &quot;Z39.88-2004&quot;;
	
	-- treat table strictly as an array with only set values.
	local OCinSoutput = setmetatable( {}, {
		__newindex = function(self, key, value)
			if is_set(value) then
				rawset( self, #self+1, table.concat{ key, '=', mw.uri.encode( remove_wiki_link( value ) ) } );
			end
		end
	});
	
	if in_array (class, {'arxiv', 'biorxiv', 'citeseerx', 'journal', 'news'}) or (in_array (class, {'conference', 'interview', 'map', 'press release', 'web'}) and is_set(data.Periodical)) or 
		('citation' == class and is_set(data.Periodical) and not is_set (data.Encyclopedia)) then
			OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:journal&quot;;			-- journal metadata identifier
			if in_array (class, {'arxiv', 'biorxiv', 'citeseerx'}) then			-- set genre according to the type of citation template we are rendering
				OCinSoutput[&quot;rft.genre&quot;] = &quot;preprint&quot;;							-- cite arxiv, cite biorxiv, cite citeseerx
			elseif 'conference' == class then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;conference&quot;;						-- cite conference (when Periodical set)
			elseif 'web' == class then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;unknown&quot;;							-- cite web (when Periodical set)
			else
				OCinSoutput[&quot;rft.genre&quot;] = &quot;article&quot;;							-- journal and other 'periodical' articles
			end
			OCinSoutput[&quot;rft.jtitle&quot;] = data.Periodical;						-- journal only
			OCinSoutput[&quot;rft.atitle&quot;] = data.Title;								-- 'periodical' article titles

																				-- these used only for periodicals
			OCinSoutput[&quot;rft.ssn&quot;] = data.Season;								-- keywords: winter, spring, summer, fall
			OCinSoutput[&quot;rft.chron&quot;] = data.Chron;								-- free-form date components
			OCinSoutput[&quot;rft.volume&quot;] = data.Volume;							-- does not apply to books
			OCinSoutput[&quot;rft.issue&quot;] = data.Issue;
			OCinSoutput[&quot;rft.pages&quot;] = data.Pages;								-- also used in book metadata

	elseif 'thesis' ~= class then												-- all others except cite thesis are treated as 'book' metadata; genre distinguishes
		OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:book&quot;;					-- book metadata identifier
		if 'report' == class or 'techreport' == class then						-- cite report and cite techreport
			OCinSoutput[&quot;rft.genre&quot;] = &quot;report&quot;;
		elseif 'conference' == class then										-- cite conference when Periodical not set
			OCinSoutput[&quot;rft.genre&quot;] = &quot;conference&quot;;
			OCinSoutput[&quot;rft.atitle&quot;] = data.Chapter;							-- conference paper as chapter in proceedings (book)
		elseif in_array (class, {'book', 'citation', 'encyclopaedia', 'interview', 'map'}) then
			if is_set (data.Chapter) then
				OCinSoutput[&quot;rft.genre&quot;] = &quot;bookitem&quot;;
				OCinSoutput[&quot;rft.atitle&quot;] = data.Chapter;						-- book chapter, encyclopedia article, interview in a book, or map title
			else
				if 'map' == class or 'interview' == class then
					OCinSoutput[&quot;rft.genre&quot;] = 'unknown';						-- standalone map or interview
				else
					OCinSoutput[&quot;rft.genre&quot;] = 'book';							-- book and encyclopedia
				end
			end
		else	--{'audio-visual', 'AV-media-notes', 'DVD-notes', 'episode', 'interview', 'mailinglist', 'map', 'newsgroup', 'podcast', 'press release', 'serial', 'sign', 'speech', 'web'}
			OCinSoutput[&quot;rft.genre&quot;] = &quot;unknown&quot;;
		end
		OCinSoutput[&quot;rft.btitle&quot;] = data.Title;									-- book only
		OCinSoutput[&quot;rft.place&quot;] = data.PublicationPlace;						-- book only
		OCinSoutput[&quot;rft.series&quot;] = data.Series;								-- book only
		OCinSoutput[&quot;rft.pages&quot;] = data.Pages;									-- book, journal
		OCinSoutput[&quot;rft.edition&quot;] = data.Edition;								-- book only
		OCinSoutput[&quot;rft.pub&quot;] = data.PublisherName;							-- book and dissertation
		
	else																		-- cite thesis
		OCinSoutput.rft_val_fmt = &quot;info:ofi/fmt:kev:mtx:dissertation&quot;;			-- dissertation metadata identifier
		OCinSoutput[&quot;rft.title&quot;] = data.Title;									-- dissertation (also patent but that is not yet supported)
		OCinSoutput[&quot;rft.degree&quot;] = data.Degree;								-- dissertation only
		OCinSoutput['rft.inst'] = data.PublisherName;							-- book and dissertation
	end
																				-- and now common parameters (as much as possible)
	OCinSoutput[&quot;rft.date&quot;] = data.Date;										-- book, journal, dissertation
	
	for k, v in pairs( data.ID_list ) do										-- what to do about these? For now assume that they are common to all?
--		if k == 'ISBN' then v = clean_isbn( v ) end
		if k == 'ISBN' then v = v:gsub( &quot;[^-0-9X]&quot;, &quot;&quot; ); end
		local id = cfg.id_handlers[k].COinS;
		if string.sub( id or &quot;&quot;, 1, 4 ) == 'info' then							-- for ids that are in the info:registry
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ id, &quot;/&quot;, v };
		elseif string.sub (id or &quot;&quot;, 1, 3 ) == 'rft' then						-- for isbn, issn, eissn, etc that have defined COinS keywords
			OCinSoutput[ id ] = v;
		elseif id then															-- when cfg.id_handlers[k].COinS is not nil
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ cfg.id_handlers[k].prefix, v };	-- others; provide a url
		end
	end

--[[	
	for k, v in pairs( data.ID_list ) do										-- what to do about these? For now assume that they are common to all?
		local id, value = cfg.id_handlers[k].COinS;
		if k == 'ISBN' then value = clean_isbn( v ); else value = v; end
		if string.sub( id or &quot;&quot;, 1, 4 ) == 'info' then
			OCinSoutput[&quot;rft_id&quot;] = table.concat{ id, &quot;/&quot;, v };
		else
			OCinSoutput[ id ] = value;
		end
	end
]]
	local last, first;
	for k, v in ipairs( data.Authors ) do
		last, first = coins_cleanup (v.last), coins_cleanup (v.first or '');	-- replace any nowiki strip markers, non-printing or invisible characers
		if k == 1 then															-- for the first author name only
			if is_set(last)  and is_set(first) then								-- set these COinS values if |first= and |last= specify the first author name
				OCinSoutput[&quot;rft.aulast&quot;] = last;								-- book, journal, dissertation
				OCinSoutput[&quot;rft.aufirst&quot;] = first;								-- book, journal, dissertation
			elseif is_set(last) then 
				OCinSoutput[&quot;rft.au&quot;] = last;									-- book, journal, dissertation -- otherwise use this form for the first name
			end
		else																	-- for all other authors
			if is_set(last) and is_set(first) then
				OCinSoutput[&quot;rft.au&quot;] = table.concat{ last, &quot;, &quot;, first };		-- book, journal, dissertation
			elseif is_set(last) then
				OCinSoutput[&quot;rft.au&quot;] = last;									-- book, journal, dissertation
			end
		end
	end

	OCinSoutput.rft_id = data.URL;
	OCinSoutput.rfr_id = table.concat{ &quot;info:sid/&quot;, mw.site.server:match( &quot;[^/]*$&quot; ), &quot;:&quot;, data.RawPage };
	OCinSoutput = setmetatable( OCinSoutput, nil );
	
	-- sort with version string always first, and combine.
	table.sort( OCinSoutput );
	table.insert( OCinSoutput, 1, &quot;ctx_ver=&quot; .. ctx_ver );  -- such as &quot;Z39.88-2004&quot;
	return table.concat(OCinSoutput, &quot;&amp;&quot;);
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table and imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	cfg = cfg_table_ptr;

	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;
	remove_wiki_link = utilities_page_ptr.remove_wiki_link;
end



return {
	make_coins_title = make_coins_title,
	get_coins_pages = get_coins_pages,
	COinS = COinS,
	set_selected_modules = set_selected_modules,
	}</text>
      <sha1>4995qhrt3cjizstwz85s4vt36gml0uj</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Configuration</title>
    <ns>828</ns>
    <id>39043527</id>
    <revision>
      <id>777956985</id>
      <parentid>777799228</parentid>
      <timestamp>2017-04-30T09:19:32Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>unsupport |ARXIV= and |BIBCODE=;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="43304">
local citation_config = {};

-- override &lt;code&gt;...&lt;/code&gt; styling to remove color, border, and padding.  &lt;code&gt; css is specified here:
-- https://git.wikimedia.org/blob/mediawiki%2Fcore.git/69cd73811f7aadd093050dbf20ed70ef0b42a713/skins%2Fcommon%2FcommonElements.css#L199
local code_style=&quot;color:inherit; border:inherit; padding:inherit;&quot;;

--[[--------------------------&lt; U N C A T E G O R I Z E D _ N A M E S P A C E S &gt;------------------------------

List of namespaces that should not be included in citation error categories.  Same as setting notracking = true by default

Note: Namespace names should use underscores instead of spaces.

]]
local uncategorized_namespaces = { 'User', 'Talk', 'User_talk', 'Wikipedia_talk', 'File_talk', 'Template_talk',
	'Help_talk', 'Category_talk', 'Portal_talk', 'Book_talk', 'Draft', 'Draft_talk', 'Education_Program_talk',
	'Module_talk', 'MediaWiki_talk' };

local uncategorized_subpages = {'/[Ss]andbox', '/[Tt]estcases'};		-- list of Lua patterns found in page names of pages we should not categorize

--[[--------------------------&lt; M E S S A G E S &gt;--------------------------------------------------------------

Translation table

The following contains fixed text that may be output as part of a citation.
This is separated from the main body to aid in future translations of this
module.

]]

local messages = {
	['archived-dead'] = 'Archived from $1 on $2',
	['archived-not-dead'] = '$1 from the original on $2',
	['archived-missing'] = 'Archived from the original$1 on $2',
	['archived'] = 'Archived',
	['by'] = 'By',																-- contributions to authored works: introduction, foreword, afterword
	['cartography'] = 'Cartography by $1',
	['editor'] = 'ed.',
	['editors'] = 'eds.',
	['edition'] = '($1 ed.)',
	['episode'] = 'Episode $1',
	['et al'] = 'et al.',
	['in'] = 'In',																-- edited works
	['inactive'] = 'inactive',
	['inset'] = '$1 inset',
	['interview'] = 'Interview with $1',										
	['lay summary'] = 'Lay summary',
	['newsgroup'] = '[[Usenet newsgroup|Newsgroup]]:&amp;nbsp;$1',
	['original'] = 'the original',
	['published'] = ' (published $1)',
	['retrieved'] = 'Retrieved $1',
	['season'] = 'Season $1',
	['section'] = ' $1',
	['sections'] = ' $1',
	['series'] = 'Series $1',
	['translated'] = 'Translated by $1',
	['type'] = ' ($1)',															-- for titletype
	['written'] = 'Written at $1',

	['vol'] = '$1 Vol.&amp;nbsp;$2',												-- $1 is sepc; bold journal style volume is in presentation{}
	['vol-no'] = '$1 Vol.&amp;nbsp;$2 no.&amp;nbsp;$3',									-- sepc, volume, issue
	['issue'] = '$1 No.&amp;nbsp;$2',												-- $1 is sepc

	['j-vol'] = '$1 $2',														-- sepc, volume; bold journal volume is in presentation{}
	['j-issue'] = ' ($1)',

	['nopp'] = '$1 $2';															-- page(s) without prefix; $1 is sepc

	['p-prefix'] = &quot;$1 p.&amp;nbsp;$2&quot;,												-- $1 is sepc
	['pp-prefix'] = &quot;$1 pp.&amp;nbsp;$2&quot;,											-- $1 is sepc
	['j-page(s)'] = ': $1',														-- same for page and pages

	['sheet'] = '$1 Sheet&amp;nbsp;$2',												-- $1 is sepc
	['sheets'] = '$1 Sheets&amp;nbsp;$2',											-- $1 is sepc
	['j-sheet'] = ': Sheet&amp;nbsp;$1',
	['j-sheets'] = ': Sheets&amp;nbsp;$1',
	
	['subscription'] = '&lt;span style=&quot;font-size:90%; color:#555&quot;&gt;(Subscription required (&lt;span title=&quot;The site requires a paid subscription to access this page.&quot; style=&quot;border-bottom:1px dotted;cursor:help&quot;&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
		'[[Category:Pages containing links to subscription-only content]]',
	
	['registration']='&lt;span style=&quot;font-size:90%; color:#555&quot;&gt;(Registration required (&lt;span title=&quot;The site requires registration to access this page.&quot; style=&quot;border-bottom:1px dotted;cursor:help&quot;&gt;help&lt;/span&gt;))&lt;/span&gt;' ..
		'[[Category:Pages with login required references or sources]]',
	
	['language'] = '(in $1)',
	['via'] = &quot; &amp;ndash; via $1&quot;,
	['event'] = 'Event occurs at',
	['minutes'] = 'minutes in',
	
	['parameter-separator'] = ', ',
	['parameter-final-separator'] = ', and ',
	['parameter-pair-separator'] = ' and ',
	
	-- Determines the location of the help page
	['help page link'] = 'Help:CS1 errors',
	['help page label'] = 'help',
	
	-- Internal errors (should only occur if configuration is bad)
	['undefined_error'] = 'Called with an undefined error condition',
	['unknown_manual_ID'] = 'Unrecognized manual ID mode',
	['unknown_ID_mode'] = 'Unrecognized ID mode',
	['unknown_argument_map'] = 'Argument map not defined for this variable',
	['bare_url_no_origin'] = 'Bare url found but origin indicator is nil or empty',
}

--[[--------------------------&lt; P R E S E N T A T I O N &gt;------------------------------------------------------

Fixed presentation markup.  Originally part of citation_config.messages it has been moved into its own, more semantically
correct place.

]]
local presentation = 
	{
	-- Error output
	-- .error class is specified at https://git.wikimedia.org/blob/mediawiki%2Fcore.git/9553bd02a5595da05c184f7521721fb1b79b3935/skins%2Fcommon%2Fshared.css#L538
	-- .citation-comment class is specified at Help:CS1_errors#Controlling_error_message_display
	['hidden-error'] = '&lt;span style=&quot;display:none;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;$1&lt;/span&gt;',
	['visible-error'] = '&lt;span style=&quot;font-size:100%&quot; class=&quot;error citation-comment&quot;&gt;$1&lt;/span&gt;',

	['accessdate'] = '&lt;span class=&quot;reference-accessdate&quot;&gt;$1$2&lt;/span&gt;',			-- to allow editors to hide accessdate using personal css

	['bdi'] = '&lt;bdi$1&gt;$2&lt;/bdi&gt;',												-- bidirectional isolation used with |script-title= and the like

	['cite'] = '&lt;cite class=&quot;$1&quot;&gt;$2&lt;/cite&gt;';									-- |ref= not set so no id=&quot;...&quot; attribute
	['cite-id'] = '&lt;cite id=&quot;$1&quot; class=&quot;$2&quot;&gt;$3&lt;/cite&gt;';							-- for use when |ref= is set

	['format'] = ' &lt;span style=&quot;font-size:85%;&quot;&gt;($1)&lt;/span&gt;',					-- for |format=, |chapter-format=, etc
	
																				-- various access levels, for |access=, |doi-access=, |arxiv=, ...
																				-- narrow no-break space &amp;#8239; may work better than nowrap css. Or not? browser support?

	['access-signal'] = '&lt;span class=&quot;plainlinks&quot;&gt;$1&amp;#8239;$2&lt;/span&gt;',			-- external link with appropriate lock icon
		['free'] = '[[File:Lock-green.svg|9px|link=|alt=Freely accessible|Freely accessible]]',
		['registration'] = '[[File:Lock-blue-alt-2.svg|9px|link=|alt=Free registration required|Free registration required]]',
		['limited'] = '[[File:Lock-blue-alt-2.svg|9px|link=|alt=Free access subject to limited trial, subscription normally required|Free access subject to limited trial, subscription normally required]]',
		['subscription'] = '[[File:Lock-red-alt.svg|9px|link=|alt=Paid subscription required|Paid subscription required]]',

	['italic-title'] = &quot;''$1''&quot;,

	['kern-left'] = '&lt;span style=&quot;padding-left:0.2em;&quot;&gt;$1&lt;/span&gt;$2',			-- spacing to use when title contains leading single or double quote mark
	['kern-right'] = '$1&lt;span style=&quot;padding-right:0.2em;&quot;&gt;$2&lt;/span&gt;',			-- spacing to use when title contains trailing single or double quote mark

	['nowrap1'] = '&lt;span class=&quot;nowrap&quot;&gt;$1&lt;/span&gt;',								-- for nowrapping an item: &lt;span ...&gt;yyyy-mm-dd&lt;/span&gt;
	['nowrap2'] = '&lt;span class=&quot;nowrap&quot;&gt;$1&lt;/span&gt; $2',							-- for nowrapping portions of an item: &lt;span ...&gt;dd mmmm&lt;/span&gt; yyyy (note white space)

	['ocins'] = '&lt;span title=&quot;$1&quot; class=&quot;Z3988&quot;&gt;&lt;span style=&quot;display:none;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;',		-- Note: Using display: none on the COinS span breaks some clients

	['parameter'] = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',

	['quoted-text'] = '&lt;q&gt;$1&lt;/q&gt;',												-- for wrapping |quote= content
	['quoted-title'] = '&quot;$1&quot;',

	['trans-italic-title'] = &quot;&amp;#91;''$1''&amp;#93;&quot;,
	['trans-quoted-title'] = &quot;&amp;#91;$1&amp;#93;&quot;,
	['vol-bold'] = '$1 &lt;b&gt;$2&lt;/b&gt;',												-- sepc, volume; for bold journal cites; for other cites ['vol'] in messages{}
	}

	
--[[--------------------------&lt; A L I A S E S &gt;----------------------------------------------------------------

Aliases table for commonly passed parameters

]]

local aliases = {
	['AccessDate'] = {'access-date', 'accessdate'},
	['Agency'] = 'agency',
	['AirDate'] = {'air-date', 'airdate'},
	['ArchiveDate'] = {'archive-date', 'archivedate'},
	['ArchiveFormat'] = 'archive-format',
	['ArchiveURL'] = {'archive-url', 'archiveurl'},
	['ASINTLD'] = {'ASIN-TLD', 'asin-tld'},
	['At'] = 'at',
	['Authors'] = {'authors', 'people', 'host', 'credits'},
	['BookTitle'] = {'book-title', 'booktitle'},
	['Cartography'] = 'cartography',
	['Chapter'] = {'chapter', 'contribution', 'entry', 'article', 'section'},
	['ChapterFormat'] = {'chapter-format', 'contribution-format', 'section-format'};
	['ChapterURL'] = {'chapter-url', 'chapterurl', 'contribution-url', 'contributionurl', 'section-url', 'sectionurl'},
	['Class'] = 'class',														-- cite arxiv and arxiv identifiers
	['Collaboration'] = 'collaboration',
	['Conference'] = {'conference', 'event'},
	['ConferenceFormat'] = {'conference-format', 'event-format'},
	['ConferenceURL'] = {'conference-url', 'conferenceurl', 'event-url', 'eventurl'},
	['Contribution'] = 'contribution',											-- introduction, foreword, afterword, etc; required when |contributor= set
	['Date'] = 'date',
	['DeadURL'] = {'dead-url', 'deadurl'},
	['Degree'] = 'degree',
	['DF'] = 'df',
	['DisplayAuthors'] = {'display-authors', 'displayauthors'},
	['DisplayEditors'] = {'display-editors', 'displayeditors'},
	['Docket'] = 'docket',
	['DoiBroken'] = {'doi-broken', 'doi-broken-date', 'doi-inactive-date', 'doi_brokendate', 'doi_inactivedate'},
	['Edition'] = 'edition',
	['Editors'] = 'editors',
	['Embargo'] = 'embargo',
	['Encyclopedia'] = {'encyclopedia', 'encyclopaedia'},						-- this one only used by citation
	['Episode'] = 'episode',													-- cite serial only TODO: make available to cite episode?
	['Format'] = 'format',
	['ID'] = {'id', 'ID'},
	['IgnoreISBN'] = {'ignore-isbn-error', 'ignoreisbnerror'},
	['Inset'] = 'inset',
	['Issue'] = {'issue', 'number'},
	['Interviewers'] = 'interviewers',
	['Language'] = {'language', 'in'},
	['LastAuthorAmp'] = {'last-author-amp', 'lastauthoramp'},
	['LayDate'] = {'lay-date', 'laydate'},
	['LayFormat'] = 'lay-format',
	['LaySource'] = {'lay-source', 'laysource'},
	['LayURL'] = {'lay-url', 'lay-summary', 'layurl', 'laysummary'},
	['MailingList'] = {'mailinglist', 'mailing-list'},							-- cite mailing list only
	['Map'] = 'map',															-- cite map only
	['MapFormat'] = 'map-format',												-- cite map only
	['MapURL'] = {'mapurl', 'map-url'},											-- cite map only
	['MessageID'] = 'message-id',
	['Minutes'] = 'minutes',
	['Mode'] = 'mode',
	['NameListFormat'] = 'name-list-format',
	['Network'] = 'network',
	['NoPP'] = {'no-pp', 'nopp'},
	['NoTracking'] = {'template-doc-demo', 'template doc demo', 'no-cat', 'nocat',
		'no-tracking', 'notracking'},
	['Number'] = 'number',														-- this case only for cite techreport
	['OrigYear'] = {'orig-year', 'origyear'},
	['Others'] = 'others',
	['Page'] = {'p', 'page'},
	['Pages'] = {'pp', 'pages'},
	['Periodical'] = {'journal', 'newspaper', 'magazine', 'work',
		'website',  'periodical', 'encyclopedia', 'encyclopaedia', 'dictionary', 'mailinglist'},
	['Place'] = {'place', 'location'},
	['PostScript'] = 'postscript',
	['PublicationDate'] = {'publicationdate', 'publication-date'},
	['PublicationPlace'] = {'publication-place', 'publicationplace'},
	['PublisherName'] = {'publisher', 'distributor', 'institution', 'newsgroup'},
	['Quote'] = {'quote', 'quotation'},
	['Ref'] = 'ref',
	['RegistrationRequired'] = 'registration',
	['Scale'] = 'scale',
	['ScriptChapter'] = 'script-chapter',
	['ScriptTitle'] = 'script-title',
	['Section'] = 'section',
	['Season'] = 'season',
	['Sections'] = 'sections',													-- cite map only
	['Series'] = {'series', 'version'},
	['SeriesSeparator'] = 'series-separator',
	['SeriesLink'] = {'series-link', 'serieslink'},
	['SeriesNumber'] = {'series-number', 'series-no', 'seriesnumber', 'seriesno'},
	['Sheet'] = 'sheet',														-- cite map only
	['Sheets'] = 'sheets',														-- cite map only
	['Station'] = 'station',
	['SubscriptionRequired'] = 'subscription',
	['Time'] = 'time',
	['TimeCaption'] = {'time-caption', 'timecaption'},
	['Title'] = 'title',
	['TitleLink'] = {'title-link', 'episode-link', 'titlelink', 'episodelink'},
	['TitleNote'] = 'department',
	['TitleType'] = {'type', 'medium'},
	['TransChapter'] = {'trans-chapter', 'trans_chapter'},
	['TransMap'] = 'trans-map',													-- cite map only
	['Transcript'] = 'transcript',
	['TranscriptFormat'] = 'transcript-format',
	['TranscriptURL'] = {'transcript-url', 'transcripturl'},
	['TransTitle'] = {'trans-title', 'trans_title'},
	['URL'] = {'url', 'URL'},
	['UrlAccess'] = {'url-access'},
	['Vauthors'] = 'vauthors',
	['Veditors'] = 'veditors',
	['Via'] = 'via',
	['Volume'] = 'volume',
	['Year'] = 'year',

	['AuthorList-First'] = {&quot;first#&quot;, &quot;given#&quot;, &quot;author-first#&quot;, &quot;author#-first&quot;},
	['AuthorList-Last'] = {&quot;last#&quot;, &quot;author#&quot;, &quot;surname#&quot;, &quot;author-last#&quot;, &quot;author#-last&quot;, &quot;subject#&quot;},
	['AuthorList-Link'] = {&quot;authorlink#&quot;, &quot;author-link#&quot;, &quot;author#-link&quot;, &quot;subjectlink#&quot;, &quot;author#link&quot;, &quot;subject-link#&quot;, &quot;subject#-link&quot;, &quot;subject#link&quot;},
	['AuthorList-Mask'] = {&quot;author-mask#&quot;, &quot;authormask#&quot;, &quot;author#mask&quot;, &quot;author#-mask&quot;},
	
	['ContributorList-First'] = {'contributor-first#', 'contributor#-first', 'contributor-given#', 'contributor#-given'},
	['ContributorList-Last'] = {'contributor#', 'contributor-last#', 'contributor#-last', 'contributor-surname#', 'contributor#-surname'},
	['ContributorList-Link'] = {'contributor-link#', 'contributor#-link'},
	['ContributorList-Mask'] = {'contributor-mask#', 'contributor#-mask'},

	['EditorList-First'] = {&quot;editor-first#&quot;, &quot;editor#-first&quot;, &quot;editor-given#&quot;, &quot;editor#-given&quot;},
	['EditorList-Last'] = {&quot;editor#&quot;, &quot;editor-last#&quot;, &quot;editor#-last&quot;, &quot;editor-surname#&quot;, &quot;editor#-surname&quot;},
	['EditorList-Link'] = {&quot;editor-link#&quot;, &quot;editor#-link&quot;, &quot;editorlink#&quot;, &quot;editor#link&quot;},
	['EditorList-Mask'] = {&quot;editor-mask#&quot;, &quot;editor#-mask&quot;, &quot;editormask#&quot;, &quot;editor#mask&quot;},
	
	['InterviewerList-First'] = {'interviewer-first#', 'interviewer#-first'},
	['InterviewerList-Last'] = {'interviewer#', 'interviewer-last#', 'interviewer#-last'},
	['InterviewerList-Link'] = {'interviewer-link#', 'interviewer#-link'},
	['InterviewerList-Mask'] = {'interviewer-mask#', 'interviewer#-mask'},

	['TranslatorList-First'] = {'translator-first#', 'translator#-first', 'translator-given#', 'translator#-given'},
	['TranslatorList-Last'] = {'translator#', 'translator-last#', 'translator#-last', 'translator-surname#', 'translator#-surname'},
	['TranslatorList-Link'] = {'translator-link#', 'translator#-link'},
	['TranslatorList-Mask'] = {'translator-mask#', 'translator#-mask'},
}

--[[--------------------------&lt; S P E C I A L   C A S E   T R A N S L A T I O N S &gt;----------------------------

This table is primarily here to support internationalization.  Translations in this table are used, for example,
when an error message, category name, etc is extracted from the English alias key.  There may be other cases where
this translation table may be useful.

]]

local special_case_translation = {
	['AuthorList'] = &quot;authors list&quot;,											-- these for multiple names maint categories
	['ContributorList'] = &quot;contributors list&quot;,
	['EditorList'] = &quot;editors list&quot;,
	['InterviewerList'] = &quot;interviewers list&quot;,
	['TranslatorList'] = &quot;translators list&quot;,
	
	['authors'] = &quot;authors&quot;,													-- used in get_display_authors_editors()
	['editors'] = &quot;editors&quot;,
	}

--[[--------------------------&lt; D E F A U L T S &gt;--------------------------------------------------------------

Default parameter values

TODO: keep this?  Only one default?
]]

local defaults = {
	['DeadURL'] = 'yes',
}


--[[--------------------------&lt; V O L U M E ,  I S S U E ,  P A G E S &gt;----------------------------------------

These tables hold cite class values (from the template invocation) and identify those templates that support
|volume=, |issue=, and |page(s)= parameters.  Cite conference and cite map require further qualification which
is handled in the main module.

]]

local templates_using_volume = {'citation', 'audio-visual', 'book', 'conference', 'encyclopaedia', 'interview', 'journal', 'magazine', 'map', 'news', 'report', 'techreport', 'thesis'}
local templates_using_issue = {'citation', 'conference', 'episode', 'interview', 'journal', 'magazine', 'map', 'news'}
local templates_not_using_page = {'audio-visual', 'episode', 'mailinglist', 'newsgroup', 'podcast', 'serial', 'sign', 'speech'}



--[[--------------------------&lt; K E Y W O R D S &gt;--------------------------------------------------------------

This table holds keywords for those parameters that have defined sets of acceptible keywords.

]]

local keywords = {
	['yes_true_y'] = {'yes', 'true', 'y'},										-- ignore-isbn-error, last-author-amp, no-tracking, nopp, registration, subscription
--	['deadurl'] = {'yes', 'true', 'y', 'no', 'unfit', 'usurped', 'unfit no archive', 'usurped no archive'},		-- hidden 2016-04-10; see Help_talk:Citation_Style_1#Recycled_urls
	['deadurl'] = {'yes', 'true', 'y', 'no', 'unfit', 'usurped', 'bot: unknown'},
	['mode'] = {'cs1', 'cs2', 'mla'},
	['name-list-format'] = {'vanc'},
	['contribution'] = {'afterword', 'foreword', 'introduction', 'preface'},	-- generic contribution titles that are rendered unquoted in the 'chapter' position
	['date-format'] = {'dmy', 'dmy-all', 'mdy', 'mdy-all', 'ymd', 'ymd-all'},
	['url-access'] = {'subscription', 'limited', 'registration'}, 	   -- access level of a URL (subscription required, limited access, free registration required), free to read by default
    ['id-access'] = {'free'},                                          -- access level of an identifier (free to read), subscription required (or no full text) by default
}


--[[--------------------------&lt; S T R I P M A R K E R S &gt;------------------------------------------------------

Common pattern definition location for stripmarkers so that we don't have to go hunting for them if (when)
MediaWiki changes their form.

]]

local stripmarkers = {
	['any'] = '\127[^\127]*UNIQ%-%-(%a+)%-[%a%d]+%-QINU[^\127]*\127',			-- capture returns name of stripmarker
	['math'] = '\127[^\127]*UNIQ%-%-math%-[%a%d]+%-QINU[^\127]*\127'			-- math stripmarkers used in coins_cleanup() and coins_replace_math_stripmarker()
	}


--[[--------------------------&lt; I N V I S I B L E _ C H A R A C T E R S &gt;--------------------------------------

This table holds non-printing or invisible characters indexed either by name or by Unicode group. Values are decimal
representations of UTF-8 codes.  The table is organized as a table of tables because the lua pairs keyword returns
table data in an arbitrary order.  Here, we want to process the table from top to bottom because the entries at
the top of the table are also found in the ranges specified by the entries at the bottom of the table.

This list contains patterns for templates like {{'}} which isn't an error but transcludes characters that are
invisible.  These kinds of patterns must be recognized by the functions that use this list.

Also here is a pattern that recognizes stripmarkers that begin and end with the delete characters.  The nowiki
stripmarker is not an error but some others are because the parameter values that include them become part of the
template's metadata before stripmarker replacement.

]]

local invisible_chars = {
	{'replacement', '\239\191\189'},											-- U+FFFD, EF BF BD
	{'zero width joiner', '\226\128\141'},										-- U+200D, E2 80 8D
	{'zero width space', '\226\128\139'},										-- U+200B, E2 80 8B
	{'hair space', '\226\128\138'},												-- U+200A, E2 80 8A
	{'soft hyphen', '\194\173'},												-- U+00AD, C2 AD
	{'horizontal tab', '\009'},													-- U+0009 (HT), 09
	{'line feed', '\010'},														-- U+000A (LF), 0A
	{'carriage return', '\013'},												-- U+000D (CR), 0D
	{'stripmarker', stripmarkers.any},											-- stripmarker; may or may not be an error; capture returns the stripmaker type
	{'delete', '\127'},															-- U+007F (DEL), 7F; must be done after stripmarker test
	{'C0 control', '[\000-\008\011\012\014-\031]'},								-- U+0000U+001F (NULLUS), 001F (except HT, LF, CR (09, 0A, 0D))
	{'C1 control', '[\194\128-\194\159]'},										-- U+0080U+009F (XXXAPC), C2 80  C2 9F
--	{'Specials', '[\239\191\185-\239\191\191]'},								-- U+FFF9-U+FFFF, EF BF B9  EF BF BF
--	{'Private use area', '[\238\128\128-\239\163\191]'},						-- U+E000U+F8FF, EE 80 80  EF A3 BF
--	{'Supplementary Private Use Area-A', '[\243\176\128\128-\243\191\191\189]'},	-- U+F0000U+FFFFD, F3 B0 80 80  F3 BF BF BD
--	{'Supplementary Private Use Area-B', '[\244\128\128\128-\244\143\191\189]'},	-- U+100000U+10FFFD, F4 80 80 80  F4 8F BF BD
}


--[[--------------------------&lt; L A N G U A G E S &gt;------------------------------------------------------------

This table is used to hold ISO 639-1 two-character language codes that apply only to |script-title= and |script-chapter=

]]

local script_lang_codes = {'am', 'ar', 'be', 'bg', 'bn', 'bs', 'dv', 'el',		-- ISO 639-1 codes only for |script-title= and |script-chapter=
	'fa', 'he', 'hy', 'ja', 'ka', 'kn', 'ko', 'ku',
	'mk', 'ml', 'mr', 'my', 'ps', 'ru', 'sd', 'sr',
	'th', 'uk', 'ug', 'ur', 'yi', 'zh'};


--[[--------------------------&lt; M A I N T E N A N C E _ C A T E G O R I E S &gt;----------------------------------

Here we name maintenance categories to be used in maintenance messages.

]]

local maint_cats = {
	['ASIN'] = 'CS1 maint: ASIN uses ISBN',
	['authors'] = 'CS1 maint: Uses authors parameter',
	['bot:_unknown'] = 'CS1 maint: BOT: original-url status unknown',
	['date_format'] = 'CS1 maint: Date format',
	['date_year'] = 'CS1 maint: Date and year',
	['disp_auth_ed'] = 'CS1 maint: display-$1',									-- $1 is authors or editors; gets value from special_case_translation table
	['editors'] = 'CS1 maint: Uses editors parameter',
	['embargo'] = 'CS1 maint: PMC embargo expired',
	['english'] = 'CS1 maint: English language specified',
	['etal'] = 'CS1 maint: Explicit use of et al.',
	['extra_text'] = 'CS1 maint: Extra text',
	['extra_text_names'] = 'CS1 maint: Extra text: $1',							-- $1 is &lt;name&gt;s list; gets value from special_case_translation table
	['ignore_isbn_err'] = 'CS1 maint: Ignored ISBN errors',
	['interviewers'] = 'CS1 maint: Uses interviewers parameter',
	['missing_pipe'] = 'CS1 maint: Missing pipe',
	['mult_names'] = 'CS1 maint: Multiple names: $1',							-- $1 is &lt;name&gt;s list; gets value from special_case_translation table
	['pmc_format'] = 'CS1 maint: PMC format',
	['unfit'] = 'CS1 maint: Unfit url',
	['unknown_lang'] = 'CS1 maint: Unrecognized language',
	['untitled'] = 'CS1 maint: Untitled periodical',
	}

--[[--------------------------&lt; P R O P E R T I E S _ C A T E G O R I E S &gt;------------------------------------

Here we name properties categories

]]

local prop_cats = {
	['foreign_lang_source'] = 'CS1 $1-language sources ($2)',					-- |language= categories; $1 is language name, $2 is ISO639-1 code
	['foreign_lang_source_2'] = 'CS1 foreign language sources (ISO 639-2)|$1',	-- |language= category; a cat for ISO639-2 languages; $1 is the ISO 639-2 code
	['script'] = 'CS1 uses foreign language script',							-- when language specified by |script-title=xx: doesn't have its own category
	['script_with_name'] = 'CS1 uses $1-language script ($2)',					-- |script-title=xx: has matching category; $1 is language name, $2 is ISO639-1 code
	}



--[[--------------------------&lt; T I T L E _ T Y P E S &gt;--------------------------------------------------------

Here we map a template's CitationClass to TitleType (default values for |type= parameter)

]]

local title_types = {
	['AV-media-notes'] = 'Media notes',
	['interview'] = 'Interview',
	['mailinglist'] = 'Mailing list',
	['map'] = 'Map',
	['podcast'] = 'Podcast',
	['pressrelease'] = 'Press release',
	['report'] = 'Report',
	['techreport'] = 'Technical report',
	['thesis'] = 'Thesis',
	}

--[[--------------------------&lt; E R R O R _ C O N D I T I O N S &gt;----------------------------------------------

Error condition table

The following contains a list of IDs for various error conditions defined in the code.  For each ID, we specify a
text message to display, an error category to include, and whether the error message should be wrapped as a hidden comment.

Anchor changes require identical changes to matching anchor in Help:CS1 errors

]]

local error_conditions = {
	accessdate_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;access-date=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'accessdate_missing_url',
		category = 'Pages using citations with accessdate and no URL',
		hidden = true },
	archive_missing_date = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-date=&lt;/code&gt;',
		anchor = 'archive_missing_date',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'archive_missing_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	archive_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;archive-url=&lt;/code&gt; is malformed: $1',
		anchor = 'archive_url',
		category = 'Pages with archiveurl citation errors',
		hidden = false },
	arxiv_missing = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;arxiv=&lt;/code&gt; required',
		anchor = 'arxiv_missing',
		category = 'CS1 errors: arXiv',											-- same as bad arxiv
		hidden = false },
	arxiv_params_not_supported = {
		message = 'Unsupported parameter(s) in cite arXiv',
		anchor = 'arxiv_params_not_supported',
		category = 'CS1 errors: arXiv',											-- same as bad arxiv
		hidden = false },
	bad_arxiv = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;arxiv=&lt;/code&gt; value',
		anchor = 'bad_arxiv',
		category = 'CS1 errors: arXiv',
		hidden = false },
	bad_asin = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;asin=&lt;/code&gt; value',
		anchor = 'bad_asin',
		category ='CS1 errors: ASIN',
		hidden = false },
	bad_bibcode = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;bibcode=&lt;/code&gt; $1',
		anchor = 'bad_bibcode',
		category = 'CS1 errors: bibcode',
		hidden = false },
	bad_biorxiv = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;biorxiv=&lt;/code&gt; value',
		anchor = 'bad_biorxiv',
		category = 'CS1 errors: bioRxiv',
		hidden = false },
	bad_citeseerx = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;citeseerx=&lt;/code&gt; value',
		anchor = 'bad_citeseerx',
		category = 'CS1 errors: citeseerx',
		hidden = false },
	bad_date = {
		message = 'Check date values in: &lt;code style=&quot;'..code_style..'&quot;&gt;$1&lt;/code&gt;',
		anchor = 'bad_date',
		category = 'CS1 errors: dates',
		hidden = false },
	bad_doi = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;doi=&lt;/code&gt; value',
		anchor = 'bad_doi',
		category = 'CS1 errors: DOI',
		hidden = false },
	bad_hdl = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;hdl=&lt;/code&gt; value',
		anchor = 'bad_hdl',
		category = 'CS1 errors: HDL',
		hidden = false },
	bad_isbn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;isbn=&lt;/code&gt; value: $1',
		anchor = 'bad_isbn',
		category = 'CS1 errors: ISBN',
		hidden = false },
	bad_ismn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ismn=&lt;/code&gt; value',
		anchor = 'bad_ismn',
		category = 'CS1 errors: ISMN',
		hidden = false },
	bad_issn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1issn=&lt;/code&gt; value',
		anchor = 'bad_issn',
		category = 'CS1 errors: ISSN',
		hidden = false },
	bad_lccn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;lccn=&lt;/code&gt; value',
		anchor = 'bad_lccn',
		category = 'CS1 errors: LCCN',
		hidden = false },
	bad_message_id = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;message-id=&lt;/code&gt; value',
		anchor = 'bad_message_id',
		category = 'CS1 errors: message-id',
		hidden = false },
	bad_ol = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ol=&lt;/code&gt; value',
		anchor = 'bad_ol',
		category = 'CS1 errors: OL',
		hidden = false },
	bad_paramlink = {															-- for |title-link=, |author/editor/translator-link=, |series-link=, |episode-link=
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; value',
		anchor = 'bad_paramlink',
		category = 'CS1 errors: parameter link',
		hidden = false },
	bad_pmc = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;pmc=&lt;/code&gt; value',
		anchor = 'bad_pmc',
		category = 'CS1 errors: PMC',
		hidden = false },
	bad_pmid = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;pmid=&lt;/code&gt; value',
		anchor = 'bad_pmid',
		category = 'CS1 errors: PMID',
		hidden = false },
	bad_oclc = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;oclc=&lt;/code&gt; value',
		anchor = 'bad_oclc',
		category = 'CS1 errors: OCLC',
		hidden = false },
	bad_ssrn = {
		message = 'Check &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;ssrn=&lt;/code&gt; value',
		anchor = 'bad_ssrn',
		category = 'CS1 errors: SSRN',
		hidden = false },
	bad_url = {
		message = 'Check $1 value',
		anchor = 'bad_url',
		category = 'Pages with URL errors',
		hidden = false },
	bare_url_missing_title = {
		message = '$1 missing title',
		anchor = 'bare_url_missing_title',
		category = 'Pages with citations having bare URLs',
		hidden = false },
	chapter_ignored = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'chapter_ignored',
		category = 'CS1 errors: chapter ignored',
		hidden = false },
	citation_missing_title = {
		message = 'Missing or empty &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'citation_missing_title',
		category = 'Pages with citations lacking titles',
		hidden = false },
	cite_web_url = {															-- this error applies to cite web and to cite podcast
		message = 'Missing or empty &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;url=&lt;/code&gt;',
		anchor = 'cite_web_url',
		category = 'Pages using web citations with no URL',
		hidden = true },
	contributor_ignored = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;contributor=&lt;/code&gt; ignored&lt;/code&gt;',
		anchor = 'contributor_ignored',
		category = 'CS1 errors: contributor',
		hidden = false },
	contributor_missing_required_param = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;contributor=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'contributor_missing_required_param',
		category = 'CS1 errors: contributor',
		hidden = false },
	deprecated_params = {
		message = 'Cite uses deprecated parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'deprecated_params',
		category = 'CS1 errors: deprecated parameters',
		hidden = false },
	empty_citation = {
		message = 'Empty citation',
		anchor = 'empty_citation',
		category = 'Pages with empty citations',
		hidden = false },
	first_missing_last = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;first$2=&lt;/code&gt; missing &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;last$2=&lt;/code&gt; in $1',
		anchor = 'first_missing_last',
		category = 'CS1 errors: missing author or editor',
		hidden = false },
	format_missing_url = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$2=&lt;/code&gt;',
		anchor = 'format_missing_url',
		category = 'Pages using citations with format and no URL',
		hidden = true },
	invalid_param_val = {
		message = 'Invalid &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=$2&lt;/code&gt;',
		anchor = 'invalid_param_val',
		category = 'CS1 errors: invalid parameter value',
		hidden = false },
	invisible_char = {
		message = '$1 in $2 at position $3',
		anchor = 'invisible_char',
		category = 'CS1 errors: invisible characters',
		hidden = false },
	missing_name = {
		message = 'Missing &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;last$2=&lt;/code&gt; in $1',
		anchor = 'missing_name',
		category = 'CS1 errors: missing author or editor',
		hidden = false },
	param_access_requires_param = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1-access=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'param_access_requires_param',
		category = 'CS1 errors: param-access',
		hidden = false },
	param_has_ext_link = {
		message = 'External link in &lt;code style=&quot;'..code_style..'&quot;&gt;$1&lt;/code&gt;',
		anchor = 'param_has_ext_link',
		category = 'CS1 errors: external links',
		hidden = false },
	parameter_ignored = {
		message = 'Unknown parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored',
		anchor = 'parameter_ignored',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	parameter_ignored_suggest = {
		message = 'Unknown parameter &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt; ignored (&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$2=&lt;/code&gt; suggested)',
		anchor = 'parameter_ignored_suggest',
		category = 'Pages with citations using unsupported parameters',
		hidden = false },
	redundant_parameters = {
		message = 'More than one of $1 specified',
		anchor = 'redundant_parameters',
		category = 'Pages with citations having redundant parameters',
		hidden = false },
	text_ignored = {
		message = 'Text &quot;$1&quot; ignored',
		anchor = 'text_ignored',
		category = 'Pages with citations using unnamed parameters',
		hidden = false },
	trans_missing_title = {
		message = '&lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;trans-$1=&lt;/code&gt; requires &lt;code style=&quot;'..code_style..'&quot;&gt;&amp;#124;$1=&lt;/code&gt;',
		anchor = 'trans_missing_title',
		category = 'CS1 errors: translated title',
		hidden = false },
	vancouver = {
		message = 'Vancouver style error: $1',
		anchor = 'vancouver',
		category = 'CS1 errors: Vancouver style',
		hidden = false },
	wikilink_in_url = {
		message = 'URLwikilink conflict',										-- uses ndash
		anchor = 'wikilink_in_url',
		category = 'CS1 errors: URLwikilink conflict',							-- uses ndash
		hidden = false },
}

--[[--------------------------&lt; I D _ H A N D L E R S &gt;--------------------------------------------------------

The following contains a list of values for various defined identifiers.  For each identifier we specify a
variety of information necessary to properly render the identifier in the citation.

	parameters: a list of parameter aliases for this identifier
	link: Wikipedia article name
	label: the alternate name to apply to link
	mode: 	'manual' when there is a specific function in the code to handle the identifier;
			'external' for identifiers that link outside of Wikipedia;
	prefix: the first part of a url that will be concatenated with a second part which usually contains the identifier
	encode: true if uri should be percent encoded; otherwise false
	COinS: identifier link or keyword for use in COinS:
		for identifiers registered at info-uri.info use: info:....
		for identifiers that have COinS keywords, use the keyword: rft.isbn, rft.issn, rft.eissn
		for others make a url using the value in prefix, use the keyword: pre (not checked; any text other than 'info' or 'rft' works here)
		set to nil to leave the identifier out of the COinS
	separator: character or text between label and the identifier in the rendered citation
	access: use this parameter to set the access level for all instances of this identifier.
			the value must be a valid access level for an identifier (see ['id-access'] in this file).
	custom_access: to enable custom access level for an identifier, set this parameter
			to the parameter that should control it (normally 'id-access')
]]

local id_handlers = {
	['ARXIV'] = {
		parameters = {'arxiv', 'eprint'},
		link = 'arXiv',
		label = 'arXiv',
		mode = 'manual',
		prefix = '//arxiv.org/abs/', 											-- protocol relative tested 2013-09-04
		encode = false,
		COinS = 'info:arxiv',
		separator = ':',
		access = 'free',														-- free to read
	},
	['ASIN'] = {
		parameters = { 'asin', 'ASIN' },
		link = 'Amazon Standard Identification Number',
		label = 'ASIN',
		mode = 'manual',
		prefix = '//www.amazon.',
		COinS = nil,															-- no COinS for this id (needs thinking on implementation because |asin-tld=)
		separator = '&amp;nbsp;',
		encode = false;
	},
	['BIBCODE'] = {
		parameters = {'bibcode'},
		link = 'Bibcode',
		label = 'Bibcode',
--		mode = 'external',
		mode = 'manual',
		prefix = 'http://adsabs.harvard.edu/abs/',
		encode = false,
		COinS = 'info:bibcode',
		separator = ':',
		custom_access = 'bibcode-access',
	},
	['BIORXIV'] = {
		parameters = {'biorxiv'},
		link = 'bioRxiv',
		label = 'bioRxiv',
		mode = 'manual',
		prefix = '//doi.org/10.1101/',
		COinS = 'pre',															-- use prefix value
		access = 'free',														-- free to read
		encode = true,
		separator = '&amp;nbsp;',
	},
	['CITESEERX'] = {
		parameters = {'citeseerx'},
		link = 'CiteSeerX',
		label = 'CiteSeerX',
		mode = 'manual',														-- manual for custom validation of the &quot;doi&quot;
		prefix = '//citeseerx.ist.psu.edu/viewdoc/summary?doi=',
		COinS =  'pre',															-- use prefix value
		access = 'free',														-- free to read
		encode = true,
		separator = '&amp;nbsp;',
	},
	['DOI'] = {
		parameters = { 'doi', 'DOI' },
		link = 'Digital object identifier',
		label = 'doi',
		mode = 'manual',
		prefix = '//doi.org/',
		COinS = 'info:doi',
		separator = ':',
		encode = true,
		custom_access = 'doi-access',
	},
	['EISSN'] = {
		parameters = {'eissn', 'EISSN'},
		link = 'International_Standard_Serial_Number#Electronic_ISSN',
		label = 'eISSN',
		mode = 'manual',
		prefix = '//www.worldcat.org/issn/',
		COinS = 'rft.eissn',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['HDL'] = {
		parameters = { 'hdl', 'HDL' },
		link = 'Handle System',
		label = 'hdl',
		mode = 'manual',
		prefix = '//hdl.handle.net/',
		COinS = 'info:hdl',
		separator = ':',
		encode = true,
		custom_access = 'hdl-access',
	},
	['ISBN'] = {
		parameters = {'isbn', 'ISBN', 'isbn13', 'ISBN13'},
		link = 'International Standard Book Number',
		label = 'ISBN',
		mode = 'manual',
		prefix = 'Special:BookSources/',
		COinS = 'rft.isbn',
		separator = '&amp;nbsp;',
	},
	['ISMN'] = {
		parameters = {'ismn', 'ISMN'},
		link = 'International Standard Music Number',
		label = 'ISMN',
		mode = 'manual',
		prefix = '',															-- not currently used;
		COinS = 'nil',															-- nil because we can't use pre or rft or info:
		separator = '&amp;nbsp;',
	},
	['ISSN'] = {
		parameters = {'issn', 'ISSN'},
		link = 'International Standard Serial Number',
		label = 'ISSN',
		mode = 'manual',
		prefix = '//www.worldcat.org/issn/',
		COinS = 'rft.issn',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['JFM'] = {
		parameters = {'jfm', 'JFM'},
		link = 'Jahrbuch ber die Fortschritte der Mathematik',
		label = 'JFM',
		mode = 'external',
		prefix = '//zbmath.org/?format=complete&amp;q=an:',
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	['JSTOR'] = {
		parameters = {'jstor', 'JSTOR'},
		link = 'JSTOR',
		label = 'JSTOR',
		mode = 'external',
		prefix = '//www.jstor.org/stable/', 									-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
		custom_access = 'jstor-access',
	},
	['LCCN'] = {
		parameters = {'LCCN', 'lccn'},
		link = 'Library of Congress Control Number',
		label = 'LCCN',
		mode = 'manual',
		prefix = '//lccn.loc.gov/', 											-- protocol relative tested 2015-12-28
		COinS = 'info:lccn',													-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
	},
	['MR'] = {
		parameters = {'MR', 'mr'},
		link = 'Mathematical Reviews',
		label = 'MR',
		mode = 'external',
		prefix = '//www.ams.org/mathscinet-getitem?mr=', 						-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
	['OCLC'] = {
		parameters = {'OCLC', 'oclc'},
		link = 'OCLC',
		label = 'OCLC',
		mode = 'manual',
		prefix = '//www.worldcat.org/oclc/',
		COinS = 'info:oclcnum',
		encode = true,
		separator = '&amp;nbsp;',
	},
	['OL'] = {
		parameters = { 'ol', 'OL' },
		link = 'Open Library',
		label = 'OL',
		mode = 'manual',
		prefix = '//openlibrary.org/',
		COinS = nil,															-- no COinS for this id (needs thinking on implementation because /authors/books/works/OL)
		separator = '&amp;nbsp;',
		encode = true,
		custom_access = 'ol-access',
	},
	['OSTI'] = {
		parameters = {'OSTI', 'osti'},
		link = 'Office of Scientific and Technical Information',
		label = 'OSTI',
		mode = 'external',
		prefix = '//www.osti.gov/energycitations/product.biblio.jsp?osti_id=',	-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		custom_access = 'osti-access',
	},
	['PMC'] = {
		parameters = {'PMC', 'pmc'},
		link = 'PubMed Central',
		label = 'PMC',
		mode = 'manual',
		prefix = '//www.ncbi.nlm.nih.gov/pmc/articles/PMC',
		suffix = &quot; &quot;,
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		access = 'free',														-- free to read
	},
	['PMID'] = {
		parameters = {'PMID', 'pmid'},
		link = 'PubMed Identifier',
		label = 'PMID',
		mode = 'manual',
		prefix = '//www.ncbi.nlm.nih.gov/pubmed/',
		COinS = 'info:pmid',
		encode = false,
		separator = '&amp;nbsp;',
	},
	['RFC'] = {
		parameters = {'RFC', 'rfc'},
		link = 'Request for Comments',
		label = 'RFC',
		mode = 'external',
		prefix = '//tools.ietf.org/html/rfc',
		COinS = 'pre',															-- use prefix value
		encode = false,
		separator = '&amp;nbsp;',
		access = 'free',														-- free to read
	},
	['SSRN'] = {
		parameters = {'SSRN', 'ssrn'},
		link = 'Social Science Research Network',
		label = 'SSRN',
		mode = 'manual',
		prefix = '//ssrn.com/abstract=', 										-- protocol relative tested 2013-09-04
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
		access = 'free',														-- always free to read
	},
	['USENETID'] = {
		parameters = {'message-id'},
		link = 'Usenet',
		label = 'Usenet:',
		mode = 'manual',
		prefix = 'news:',
		encode = false,
		COinS = 'pre',															-- use prefix value
		separator = '&amp;nbsp;',
	},
	['ZBL'] = {
		parameters = {'ZBL', 'zbl'},
		link = 'Zentralblatt MATH',
		label = 'Zbl',
		mode = 'external',
		prefix = '//zbmath.org/?format=complete&amp;q=an:',
		COinS = 'pre',															-- use prefix value
		encode = true,
		separator = '&amp;nbsp;',
	},
}

return 	{
	aliases = aliases,
	special_case_translation = special_case_translation,
	defaults = defaults,
	error_conditions = error_conditions,
	id_handlers = id_handlers,
	keywords = keywords,
	stripmarkers=stripmarkers,
	invisible_chars = invisible_chars,
	maint_cats = maint_cats,
	messages = messages,
	presentation = presentation,
	prop_cats = prop_cats,
	script_lang_codes = script_lang_codes,
	title_types = title_types,
	uncategorized_namespaces = uncategorized_namespaces,
	uncategorized_subpages = uncategorized_subpages,
	templates_using_volume = templates_using_volume,
	templates_using_issue = templates_using_issue,
	templates_not_using_page = templates_not_using_page,
	}</text>
      <sha1>9geurrccsx2nykua36cseygw8s5xo1h</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Date validation</title>
    <ns>828</ns>
    <id>42164542</id>
    <revision>
      <id>732205419</id>
      <parentid>723701925</parentid>
      <timestamp>2016-07-30T09:55:09Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>Synch from sandbox;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="41095">
local p = {}


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array;																	-- imported function from selected Module:Citation/CS1/Utilities


--[=[-------------------------&lt; I S _ V A L I D _ A C C E S S D A T E &gt;----------------------------------------

returns true if:
	Wikipedia start date &lt;= accessdate &lt; today + 2 days

Wikipedia start date is 2001-01-15T00:00:00 UTC which is 979516800 seconds after 1970-01-01T00:00:00 UTC (the start of Unix time)
accessdate is the date provided in |accessdate= at time 00:00:00 UTC
today is the current date at time 00:00:00 UTC plus 48 hours
	if today is 2015-01-01T00:00:00 then
		adding 24 hours gives 2015-01-02T00:00:00  one second more than today
		adding 24 hours gives 2015-01-03T00:00:00  one second more than tomorrow

This function does not work if it is fed month names for languages other than English.  Wikimedia #time: parser
apparently doesn't understand non-Engish date month names. This function will always return false when the date
contains a non-English month name because good1 is false after the call to lang.formatDate().  To get around that
call this function with YYYY-MM-DD format dates.

]=]

local function is_valid_accessdate (accessdate)
	local lang = mw.getContentLanguage();
	local good1, good2;
	local access_ts, tomorrow_ts;												-- to hold unix time stamps representing the dates
		
	good1, access_ts = pcall( lang.formatDate, lang, 'U', accessdate );			-- convert accessdate value to unix timesatmp 
	good2, tomorrow_ts = pcall( lang.formatDate, lang, 'U', 'today + 2 days' );	-- today midnight + 2 days is one second more than all day tomorrow
	
	if good1 and good2 then
		access_ts = tonumber (access_ts);										-- convert to numbers for the comparison
		tomorrow_ts = tonumber (tomorrow_ts);
	else
		return false;															-- one or both failed to convert to unix time stamp
	end

	if 979516800 &lt;= access_ts and access_ts &lt; tomorrow_ts then					-- Wikipedia start date &lt;= accessdate &lt; tomorrow's date
		return true;
	else
		return false;															-- accessdate out of range
	end
end


--[[--------------------------&lt; G E T _ M O N T H _ N U M B E R &gt;----------------------------------------------

returns a number according to the month in a date: 1 for January, etc.  Capitalization and spelling must be correct. If not a valid month, returns 0

]]

local function get_month_number (month)
local long_months = {['January']=1, ['February']=2, ['March']=3, ['April']=4, ['May']=5, ['June']=6, ['July']=7, ['August']=8, ['September']=9, ['October']=10, ['November']=11, ['December']=12};
local short_months = {['Jan']=1, ['Feb']=2, ['Mar']=3, ['Apr']=4, ['May']=5, ['Jun']=6, ['Jul']=7, ['Aug']=8, ['Sep']=9, ['Oct']=10, ['Nov']=11, ['Dec']=12};
	return long_months[month] or												-- if month is the long-form name
		short_months[month] or													-- if month is the short-form name
		0;																		-- misspelled, improper case, or not a month name
end


--[[--------------------------&lt; I S _ V A L I D _ E M B A R G O _ D A T E &gt;------------------------------------

returns true and date value if that value has proper dmy, mdy, ymd format.

returns false and 9999 (embargoed forever) when date value is not proper format; assumes that when |embargo= is
set, the editor intended to embargo a pmc but |embargo= does not hold a single date.

]]

local function is_valid_embargo_date (v)
	if v:match ('^%d%d%d%d%-%d%d%-%d%d$') or									-- ymd
		v:match ('^%d%d?%s+%a+%s+%d%d%d%d$') or									-- dmy
		v:match ('^%a+%s+%d%d?%s*,%s*%d%d%d%d$') then							-- mdy
			return true, v;
	end
	return false, '9999';														-- if here not good date so return false and set embargo date to long time in future
end


--[[--------------------------&lt; G E T _ S E A S O N _ N U M B E R &gt;--------------------------------------------

returns a number according to the sequence of seasons in a year: 1 for Winter, etc.  Capitalization and spelling must be correct. If not a valid season, returns 0

]]

local function get_season_number (season)
local season_list = {['Winter']=21, ['Spring']=22, ['Summer']=23, ['Fall']=24, ['Autumn']=24};	-- make sure these numbers do not overlap month numbers
local temp;
	temp=season_list[season];
	if temp then return temp; end												-- if season is a valid name return its number
	return 0;																	-- misspelled, improper case, or not a season name
end

--[[--------------------------&lt; I S _ P R O P E R _ N A M E &gt;--------------------------------------------------

returns a non-zero number if date contains a recognized proper name.  Capitalization and spelling must be correct.

]]

local function is_proper_name (name)
local name_list = {['Christmas']=31}
local temp;
	temp=name_list[name];
	if temp then return temp; end				-- if name is a valid name return its number
	return 0;									-- misspelled, improper case, or not a proper name
end

--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ O R _ S E A S O N &gt;------------------------------

--returns true if month or season is valid (properly spelled, capitalized, abbreviated)

]]

local function is_valid_month_or_season (month_season)
	if 0 == get_month_number (month_season) then		-- if month text isn't one of the twelve months, might be a season
		if 0 == get_season_number (month_season) then	-- not a month, is it a season?
			return false;								-- return false not a month or one of the five seasons
		end
	end
	return true;
end

--[[--------------------------&lt; I S _ V A L I D _ Y E A R &gt;----------------------------------------------------

Function gets current year from the server and compares it to year from a citation parameter.  Years more than one year in the future are not acceptable.

]]
local year_limit;
local function is_valid_year(year)
	if not is_set(year_limit) then
		year_limit = tonumber(os.date(&quot;%Y&quot;))+1;			-- global variable so we only have to fetch it once
	end
	return tonumber(year) &lt;= year_limit;				-- false if year is in the future more than one year
end

--[[--------------------------&lt; I S _ V A L I D _ D A T E &gt;----------------------------------------------------
Returns true if day is less than or equal to the number of days in month and year is no farther into the future
than next year; else returns false.

Assumes Julian calendar prior to year 1582 and Gregorian calendar thereafter. Accounts for Julian calendar leap
years before 1582 and Gregorian leap years after 1582. Where the two calendars overlap (1582 to approximately
1923) dates are assumed to be Gregorian.

]]

local function is_valid_date (year, month, day)
local days_in_month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
local month_length;
	if not is_valid_year(year) then												-- no farther into the future than next year
		return false;
	end
	
	month = tonumber(month);													-- required for YYYY-MM-DD dates
	
	if (2==month) then															-- if February
		month_length = 28;														-- then 28 days unless
		if 1582 &gt; tonumber(year) then											-- Julian calendar
			if 0==(year%4) then
				month_length = 29;
			end
		else																	-- Gregorian calendar
			if (0==(year%4) and (0~=(year%100) or 0==(year%400))) then			-- is a leap year?
				month_length = 29;												-- if leap year then 29 days in February
			end
		end
	else
		month_length=days_in_month[month];
	end

	if tonumber (day) &gt; month_length then
		return false;
	end
	return true;
end

--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ R A N G E _ S T Y L E &gt;--------------------------

Months in a range are expected to have the same style: JanMar or OctoberDecember but not FebruaryMar or JulAugust. 
There is a special test for May because it can be either short or long form.

Returns true when style for both months is the same

]]

local function is_valid_month_range_style (month1, month2)
local len1 = month1:len();
local len2 = month2:len();
	if len1 == len2 then
		return true;															-- both months are short form so return true
	elseif 'May' == month1 or 'May'== month2 then
		return true;															-- both months are long form so return true
	elseif 3 == len1 or 3 == len2 then
		return false;															-- months are mixed form so return false
	else
		return true;															-- both months are long form so return true
	end
end


--[[--------------------------&lt; I S _ V A L I D _ M O N T H _ S E A S O N _ R A N G E &gt;------------------------

Check a pair of months or seasons to see if both are valid members of a month or season pair.

Month pairs are expected to be left to right, earliest to latest in time.

Similarly, seasons are also left to right, earliest to latest in time.  There is an oddity with seasons: winter is assigned a value of 1, spring 2, ...,
fall and autumn 4.  Because winter can follow fall/autumn at the end of a calender year, a special test is made to see if |date=Fall-Winter yyyy (4-1) is the date.

]]

local function is_valid_month_season_range(range_start, range_end)
	local range_start_number = get_month_number (range_start);
	local range_end_number;
	
	if 0 == range_start_number then												-- is this a month range?
		local range_start_number = get_season_number (range_start);				-- not a month; is it a season? get start season number
		range_end_number = get_season_number (range_end);						-- get end season number

		if 0 ~= range_start_number then											-- is start of range a season?
			if range_start_number &lt; range_end_number then						-- range_start is a season
				return true;													-- return true when range_end is also a season and follows start season; else false
			end
			if 24 == range_start_number and 21 == range_end_number then			-- special case when season range is Fall-Winter or Autumn-Winter
				return true;
			end
		end
		return false;		-- range_start is not a month or a season; or range_start is a season and range_end is not; or improper season sequence
	end

	range_end_number = get_month_number (range_end);							-- get end month number
	if range_start_number &lt; range_end_number then								-- range_start is a month; does range_start precede range_end?
		if is_valid_month_range_style (range_start, range_end) then				-- do months have the same style?
			return true;														-- proper order and same style
		end
	end
	return false;																-- range_start month number is greater than or equal to range end number; or range end isn't a month
end


--[[--------------------------&lt; M A K E _ C O I N S _ D A T E &gt;------------------------------------------------

This function receives a table of date parts for one or two dates and an empty table reference declared in
Module:Citation/CS1.  The function is called only for |date= parameters and only if the |date=&lt;value&gt; is 
determined to be a valid date format.  The question of what to do with invalid date formats is not answered here.

The date parts in the input table are converted to an ISO 8601 conforming date string:
	single whole dates:		yyyy-mm-dd
	month and year dates:	yyyy-mm
	year dates:				yyyy
	ranges:					yyyy-mm-dd/yyyy-mm-dd
							yyyy-mm/yyyy-mm
							yyyy/yyyy

Dates in the Julian calendar are reduced to year or year/year so that we don't have to do calendar conversion from
Julian to Proleptic Gregorian.

The input table has:
	year, year2  always present; if before 1582, ignore months and days if present
	month, month2  0 if not provided, 1-12 for months, 21-24 for seasons; 31 proper name dates
	day, day2   0 if not provided, 1-31 for days
	
the output table receives:
	rftdate:	an IS8601 formatted date
	rftchron:	a free-form version of the date, usually without year which is in rftdate (season ranges and propername dates)
	rftssn:		one of four season keywords: winter, spring, summer, fall (lowercase)

]]

local function make_COinS_date (input, tCOinS_date)
	local date;																	-- one date or first date in a range
	local date2 = '';															-- end of range date
	
	if 1582 &gt; tonumber(input.year) or 20 &lt; tonumber(input.month) then			-- Julian calendar or season so &amp;rft.date gets year only
		date = input.year;
		if 0 ~= input.year2 and input.year ~= input.year2 then					-- if a range, only the second year portion when not the same as range start year
			date = string.format ('%.4d/%.4d', tonumber(input.year), tonumber(input.year2))		-- assemble the date range
		end
		if 20 &lt; tonumber(input.month) then										-- if season or propername date
			local season = {[21]='winter', [22]='spring', [23]='summer', [24]='fall', [31]='Christmas'};	-- seasons lowercase, no autumn; proper names use title case
			if 0 == input.month2 then											-- single season date
				if 30 &lt;tonumber(input.month) then
					tCOinS_date.rftchron = season[input.month];					-- proper name dates
				else
					tCOinS_date.rftssn = season[input.month];					-- seasons
				end
			else																-- season range with a second season specified
				if input.year ~= input.year2 then								-- season year  season year range or season yearyear
					tCOinS_date.rftssn = season[input.month];					-- start of range season; keep this?
					if 0~= input.month2 then
						tCOinS_date.rftchron = string.format ('%s %s  %s %s', season[input.month], input.year, season[input.month2], input.year2);
					end
				else															-- seasonseason year range
					tCOinS_date.rftssn = season[input.month];					-- start of range season; keep this?
					tCOinS_date.rftchron = season[input.month] .. '' .. season[input.month2];	-- seasonseason year range
				end
			end
		end
		tCOinS_date.rftdate = date;
		return;																	-- done
	end
	
	if 0 ~= input.day then
		date = string.format ('%s-%.2d-%.2d', input.year, tonumber(input.month), tonumber(input.day));	-- whole date
	elseif 0 ~= input.month then
		date = string.format ('%s-%.2d', input.year, tonumber(input.month));	-- year and month
	else
		date = string.format ('%s', input.year);								-- just year
	end

	if 0 ~= input.year2 then
		if 0 ~= input.day2 then
			date2 = string.format ('/%s-%.2d-%.2d', input.year2, tonumber(input.month2), tonumber(input.day2));		-- whole date
		elseif 0 ~= input.month2 then
			date2 = string.format ('/%s-%.2d', input.year2, tonumber(input.month2));	-- year and month
		else
			date2 = string.format ('/%s', input.year2);							-- just year
		end
	end
	
	tCOinS_date.rftdate = date .. date2;										-- date2 has the '/' separator
	return;
end


--[[--------------------------&lt; C H E C K _ D A T E &gt;----------------------------------------------------------

Check date format to see that it is one of the formats approved by WP:DATESNO or WP:DATERANGE. Exception: only
allowed range separator is endash.  Additionally, check the date to see that it is a real date: no 31 in 30-day
months; no 29 February when not a leap year.  Months, both long-form and three character abbreviations, and seasons
must be spelled correctly.  Future years beyond next year are not allowed.

If the date fails the format tests, this function returns false and does not return values for anchor_year and
COinS_date.  When this happens, the date parameter is used in the COinS metadata and the CITEREF identifier gets
its year from the year parameter if present otherwise CITEREF does not get a date value.

Inputs:
	date_string - date string from date-holding parameters (date, year, accessdate, embargo, archivedate, etc.)

Returns:
	false if date string is not a real date; else
	true, anchor_year, COinS_date
		anchor_year can be used in CITEREF anchors
		COinS_date is ISO 8601 format date; see make_COInS_date()

]]

local function check_date (date_string, tCOinS_date, test_accessdate)
	local year;			-- assume that year2, months, and days are not used;
	local year2=0;		-- second year in a year range
	local month=0;
	local month2=0;		-- second month in a month range
	local day=0;
	local day2=0;		-- second day in a day range
	local anchor_year;
	local coins_date;

	if date_string:match(&quot;^%d%d%d%d%-%d%d%-%d%d$&quot;) then										-- year-initial numerical year month day format
		year, month, day=string.match(date_string, &quot;(%d%d%d%d)%-(%d%d)%-(%d%d)&quot;);
		if 12 &lt; tonumber(month) or 1 &gt; tonumber(month) or 1582 &gt; tonumber(year) or 0 == tonumber(day) then return false; end	-- month or day number not valid or not Gregorian calendar
		anchor_year = year;

	elseif date_string:match(&quot;^%a+ +[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then						-- month-initial: month day, year
		month, day, anchor_year, year=string.match(date_string, &quot;(%a+)%s*(%d%d?),%s*((%d%d%d%d)%a?)&quot;);
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
				
	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d?[%-][1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then				-- month-initial day range: month dayday, year; days are separated by endash
		month, day, day2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?)[%-](%d%d?), +((%d%d%d%d)%a?)&quot;);
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
		month2=month;																		-- for metadata
		year2=year;

	elseif date_string:match(&quot;^[1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then						-- day-initial: day month year
		day, month, anchor_year, year=string.match(date_string, &quot;(%d%d*)%s*(%a+)%s*((%d%d%d%d)%a?)&quot;);
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d?[%-][1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then				-- day-range-initial: dayday month year; days are separated by endash
		day, day2, month, anchor_year, year=mw.ustring.match(date_string, &quot;(%d%d?)[%-](%d%d?) +(%a+) +((%d%d%d%d)%a?)&quot;);
		if tonumber(day) &gt;= tonumber(day2) then return false; end							-- date range order is left to right: earlier to later; dates may not be the same;
		month = get_month_number (month);
		if 0 == month then return false; end												-- return false if month text isn't one of the twelve months
		month2=month;																		-- for metadata
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d? +%a+ [%-] [1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then		-- day initial month-day-range: day month - day month year; uses spaced endash
		day, month, day2, month2, anchor_year, year=mw.ustring.match(date_string, &quot;(%d%d?) +(%a+) [%-] (%d%d?) +(%a+) +((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end	-- date range order is left to right: earlier to later;
		month = get_month_number (month);													-- for metadata
		month2 = get_month_number (month2);
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d? [%-] %a+ +[1-9]%d?, +[1-9]%d%d%d?%a?$&quot;) then		-- month initial month-day-range: month day  month day, year;  uses spaced endash
		month, day, month2, day2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?) [%-] (%a+) +(%d%d?), +((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or not is_valid_year(year) then return false; end
		month = get_month_number (month);													-- for metadata
		month2 = get_month_number (month2);
		year2=year;

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d? +%a+ +[1-9]%d%d%d [%-] [1-9]%d? +%a+ +[1-9]%d%d%d%a?$&quot;) then		-- day initial month-day-year-range: day month year - day month year; uses spaced endash
		day, month, year, day2, month2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%d%d?) +(%a+) +(%d%d%d%d?) [%-] (%d%d?) +(%a+) +((%d%d%d%d?)%a?)&quot;);
		if tonumber(year2) &lt;= tonumber(year) then return false; end												-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) or not is_valid_month_range_style(month, month2) then return false; end		-- year2 no more than one year in the future; months same style
		month = get_month_number (month);																		-- for metadata
		month2 = get_month_number (month2);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d?, +[1-9]%d%d%d [%-] %a+ +[1-9]%d?, +[1-9]%d%d%d%a?$&quot;) then		-- month initial month-day-year-range: month day, year  month day, year;  uses spaced endash
		month, day, year, month2, day2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d?), +(%d%d%d%d) [%-] (%a+) +(%d%d?), +((%d%d%d%d)%a?)&quot;);
		if tonumber(year2) &lt;= tonumber(year) then return false; end												-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) or not is_valid_month_range_style(month, month2) then return false; end		-- year2 no more than one year in the future; months same style
		month = get_month_number (month);																		-- for metadata
		month2 = get_month_number (month2);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d[%-]%d%d%a?$&quot;) then								-- special case Winter/Summer year-year (YYYY-YY); year separated with unspaced endash
		local century;
		month, year, century, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +((%d%d)%d%d)[%-]((%d%d)%a?)&quot;);
		if 'Winter' ~= month and 'Summer' ~= month then return false end;					-- 'month' can only be Winter or Summer
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		year2 = century..year2;																-- add the century to year2 for comparisons
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		month = get_season_number (month);

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d[%-][1-9]%d%d%d%a?$&quot;) then						-- special case Winter/Summer year-year; year separated with unspaced endash
		month, year, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d%d%d)[%-]((%d%d%d%d)%a?)&quot;);
		if 'Winter' ~= month and 'Summer' ~= month then return false end;					-- 'month' can only be Winter or Summer
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		if 1 ~= tonumber(year2) - tonumber(year) then return false; end						-- must be sequential years, left to right, earlier to later
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		month = get_season_number (month);													-- for metadata

	elseif mw.ustring.match(date_string, &quot;^%a+ +[1-9]%d%d%d +[%-] +%a+ +[1-9]%d%d%d%a?$&quot;) then				-- month/season year - month/season year; separated by spaced endash
		month, year, month2, anchor_year, year2=mw.ustring.match(date_string, &quot;(%a+) +(%d%d%d%d) +[%-] +(%a+) +((%d%d%d%d)%a?)&quot;);
		anchor_year=year..''..anchor_year;													-- assemble anchor_year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end							-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end									-- no year farther in the future than next year
		if 0 ~= get_month_number(month) and 0 ~= get_month_number(month2) and is_valid_month_range_style(month, month2) then 	-- both must be month year, same month style
			month = get_month_number(month);
			month2 = get_month_number(month2);
		elseif 0 ~= get_season_number(month) and 0 ~= get_season_number(month2) then		-- both must be or season year, not mixed
			month = get_season_number(month);
			month2 = get_season_number(month2);
		else
			 return false;
		end

	elseif mw.ustring.match(date_string, &quot;^%a+[%-]%a+ +[1-9]%d%d%d%a?$&quot;) then					-- month/season range year; months separated by endash 
		month, month2, anchor_year, year=mw.ustring.match(date_string, &quot;(%a+)[%-](%a+)%s*((%d%d%d%d)%a?)&quot;);
		if (not is_valid_month_season_range(month, month2)) or (not is_valid_year(year)) then return false; end
		if 0 ~= get_month_number(month) then									-- determined to be a valid range so just check this one to know if month or season
			month = get_month_number(month);
			month2 = get_month_number(month2);
		else
			month = get_season_number(month);
			month2 = get_season_number(month2);
		end
		year2=year;
		
	elseif date_string:match(&quot;^%a+ +%d%d%d%d%a?$&quot;) then							-- month/season year or proper-name year
		month, anchor_year, year=date_string:match(&quot;(%a+)%s*((%d%d%d%d)%a?)&quot;);
		if not is_valid_year(year) then return false; end
		if not is_valid_month_or_season (month) and 0 == is_proper_name (month) then return false; end
		if 0 ~= get_month_number(month) then									-- determined to be a valid range so just check this one to know if month or season
			month = get_month_number(month);
		elseif 0 ~= get_season_number(month) then
			month = get_season_number(month);
		else
			month = is_proper_name (month);										-- must be proper name; not supported in COinS
		end

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d%d%d?[%-][1-9]%d%d%d?%a?$&quot;) then				-- Year range: YYY-YYY or YYY-YYYY or YYYYYYYY; separated by unspaced endash; 100-9999
		year, anchor_year, year2=mw.ustring.match(date_string, &quot;(%d%d%d%d?)[%-]((%d%d%d%d?)%a?)&quot;);
		anchor_year=year..''..anchor_year;										-- assemble anchor year from both years
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif mw.ustring.match(date_string, &quot;^[1-9]%d%d%d[%-]%d%d%a?$&quot;) then						-- Year range: YYYYYY; separated by unspaced endash
		local century;
		year, century, anchor_year, year2=mw.ustring.match(date_string, &quot;((%d%d)%d%d)[%-]((%d%d)%a?)&quot;);
		anchor_year=year..''..anchor_year;										-- assemble anchor year from both years
		if 13 &gt; tonumber(year2) then return false; end							-- don't allow 2003-05 which might be May 2003
		year2 = century..year2;													-- add the century to year2 for comparisons
		if tonumber(year) &gt;= tonumber(year2) then return false; end				-- left to right, earlier to later, not the same
		if not is_valid_year(year2) then return false; end						-- no year farther in the future than next year

	elseif date_string:match(&quot;^[1-9]%d%d%d?%a?$&quot;) then							-- year; here accept either YYY or YYYY
		anchor_year, year=date_string:match(&quot;((%d%d%d%d?)%a?)&quot;);
		if false == is_valid_year(year) then
			return false;
		end

	else
		return false;															-- date format not one of the MOS:DATE approved formats
	end

	if test_accessdate then														-- test accessdate here because we have numerical date parts
		if 0 ~= year and 0 ~= month and 0 ~= day and 							-- all parts of a single date required
			0 == year2 and 0 == month2 and 0 == day2 then						-- none of these; accessdate must not be a range
				if not is_valid_accessdate (year..'-'..month..'-'..day) then	
					return false;												-- return false when accessdate out of bounds
				end
		else
			return false;														-- return false when accessdate is a range of two dates
		end
	end

	local result=true;															-- check whole dates for validity; assume true because not all dates will go through this test
	if 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 == day2 then		-- YMD (simple whole date)
		result=is_valid_date(year,month,day);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 == month2 and 0 ~= day2 then	-- YMD-d (day range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 == year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-md (day month range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year,month2,day2);

	elseif 0 ~= year and 0 ~= month and 0 ~= day and 0 ~= year2 and 0 ~= month2 and 0 ~= day2 then	-- YMD-ymd (day month year range)
		result=is_valid_date(year,month,day);
		result=result and is_valid_date(year2,month2,day2);
	end
	
	if false == result then return false; end

	if nil ~= tCOinS_date then													-- this table only passed into this function when testing |date= parameter values
		make_COinS_date ({year=year, month=month, day=day, year2=year2, month2=month2, day2=day2}, tCOinS_date);	-- make an ISO 8601 date string for COinS
	end
	
	return true, anchor_year;													-- format is good and date string represents a real date
end	


--[[--------------------------&lt; D A T E S &gt;--------------------------------------------------------------------

Cycle the date-holding parameters in passed table date_parameters_list through check_date() to check compliance with MOS:DATE. For all valid dates, check_date() returns
true. The |date= parameter test is unique, it is the only date holding parameter from which values for anchor_year (used in CITEREF identifiers) and COinS_date (used in
the COinS metadata) are derived.  The |date= parameter is the only date-holding parameter that is allowed to contain the no-date keywords &quot;n.d.&quot; or &quot;nd&quot; (without quotes).

Unlike most error messages created in this module, only one error message is created by this function. Because all of the date holding parameters are processed serially,
a single error message is created as the dates are tested.

]]

local function dates(date_parameters_list, tCOinS_date)
	local anchor_year;		-- will return as nil if the date being tested is not |date=
	local COinS_date;		-- will return as nil if the date being tested is not |date=
	local embargo_date;															-- if embargo date is a good dmy, mdy, ymd date then holds original value else reset to 9999
	local error_message = &quot;&quot;;
	local good_date = false;
	
	for k, v in pairs(date_parameters_list) do									-- for each date-holding parameter in the list
		if is_set(v) then														-- if the parameter has a value
			if v:match(&quot;^c%. [1-9]%d%d%d?%a?$&quot;) then							-- special case for c. year or with or without CITEREF disambiguator - only |date= and |year=
				local year = v:match(&quot;c%. ([1-9]%d%d%d?)%a?&quot;);					-- get the year portion so it can be tested
				if 'date'==k then
					anchor_year, COinS_date = v:match(&quot;((c%. [1-9]%d%d%d?)%a?)&quot;);	-- anchor year and COinS_date only from |date= parameter
					good_date = is_valid_year(year);
				elseif 'year'==k then
					good_date = is_valid_year(year);
				end
			elseif 'date'==k then												-- if the parameter is |date=
				if v:match(&quot;^n%.d%.%a?$&quot;) then									-- if |date=n.d. with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((n%.d%.)%a?)&quot;);	--&quot;n.d.&quot;; no error when date parameter is set to no date
				elseif v:match(&quot;^nd%a?$&quot;) then									-- if |date=nd with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((nd)%a?)&quot;);	--&quot;nd&quot;;	no error when date parameter is set to no date
				else
					good_date, anchor_year, COinS_date = check_date (v, tCOinS_date);	-- go test the date
				end
			elseif 'year'==k then												-- if the parameter is |year= it should hold only a year value
				if v:match(&quot;^[1-9]%d%d%d?%a?$&quot;) then							-- if |year= 3 or 4 digits only with or without a CITEREF disambiguator
					good_date, anchor_year, COinS_date = true, v:match(&quot;((%d+)%a?)&quot;);
				end
			elseif 'access-date'==k then										-- if the parameter is |date=
				good_date = check_date (v, nil, true);							-- go test the date; nil is a placeholder; true is the test_accessdate flag
			elseif 'embargo'==k then											-- if the parameter is |embargo=
				good_date = check_date (v);										-- go test the date
				if true == good_date then										-- if the date is a valid date
					good_date, embargo_date = is_valid_embargo_date (v);		-- is |embargo= date a single dmy, mdy, or ymd formatted date? yes:returns embargo; no: returns 9999
				end
			else																-- any other date-holding parameter
				good_date = check_date (v);										-- go test the date
			end
			if false==good_date then											-- assemble one error message so we don't add the tracking category multiple times
				if is_set(error_message) then									-- once we've added the first portion of the error message ...
					error_message=error_message .. &quot;, &quot;;						-- ... add a comma space separator
				end
				error_message=error_message .. &quot;&amp;#124;&quot; .. k .. &quot;=&quot;;			-- add the failed parameter
			end
		end
	end
	return anchor_year, embargo_date, error_message;											-- and done
end


--[[--------------------------&lt; Y E A R _ D A T E _ C H E C K &gt;------------------------------------------------

Compare the value provided in |year= with the year value(s) provided in |date=.  This function returns a numeric value:
	0 - year value does not match the year value in date
	1 - (default) year value matches the year value in date or one of the year values when date contains two years
	2 - year value matches the year value in date when date is in the form YYYY-MM-DD and year is disambiguated (|year=YYYYx)

]]

local function year_date_check (year_string, date_string)
	local year;
	local date1;
	local date2;
	local result = 1;															-- result of the test; assume that the test passes
	
	year = year_string:match ('(%d%d%d%d?)');

	if date_string:match ('%d%d%d%d%-%d%d%-%d%d') and year_string:match ('%d%d%d%d%a') then	--special case where both date and year are required YYYY-MM-DD and YYYYx
		date1 = date_string:match ('(%d%d%d%d)');
		year = year_string:match ('(%d%d%d%d)');
		if year ~= date1 then
			result = 0;															-- years don't match
		else
			result = 2;															-- years match; but because disambiguated, don't add to maint cat
		end
		
	elseif date_string:match (&quot;%d%d%d%d?.-%d%d%d%d?&quot;) then						-- any of the standard range formats of date with two three- or four-digit years
		date1, date2 = date_string:match (&quot;(%d%d%d%d?).-(%d%d%d%d?)&quot;);
		if year ~= date1 and year ~= date2 then
			result = 0;
		end

	elseif mw.ustring.match(date_string, &quot;%d%d%d%d[%-]%d%d&quot;) then								-- YYYY-YY date ranges
		local century;
		date1, century, date2 = mw.ustring.match(date_string, &quot;((%d%d)%d%d)[%-]+(%d%d)&quot;);
		date2 = century..date2;													-- convert YY to YYYY
		if year ~= date1 and year ~= date2 then
			result = 0;
		end

	elseif date_string:match (&quot;%d%d%d%d?&quot;) then									-- any of the standard formats of date with one year
		date1 = date_string:match (&quot;(%d%d%d%d?)&quot;);
		if year ~= date1 then
			result = 0;
		end
	else
		result = 0;																-- no recognizable year in date
	end
	return result;
end


--[[-------------------------&lt; R E F O R M A T   T A B L E S &gt;------------------------------------------------

These table are used exclusively for reformatting dates

]]

local source_patterns = {						-- this table holds patterns that match allowed date formats used to extract date components
	['dmy'] = '(%d%d?)%s+(%a+)%s+(%d%d%d%d)',
	['mdy'] = '(%a+)%s+(%d%d?),%s+(%d%d%d%d)',
	['ymd'] = '(%d%d%d%d)%-(%d%d)-(%d%d)',
	}

local short_formats = {							-- this table holds format strings used by os.date() for short month names
	['dmy'] = '%e %b %Y',
	['mdy'] = '%b %e, %Y',
	['ymd'] = '%F',
	}

local long_formats = {							-- this table holds format strings used by os.date() for long month names
	['dmy'] = '%e %B %Y',
	['mdy'] = '%B %e, %Y',
	['ymd'] = '%F',
	}


--[[-------------------------&lt; G E T _ D M Y _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from DMY formatted date, places them in the source_date table, and returns.

]]

local function get_dmy_date_parts (date, source_date)
	source_date.day, source_date.month, source_date.year = date:match (source_patterns['dmy']);	-- get date components as strings
	source_date.month = get_month_number (source_date.month);					-- get month number
end


--[[-------------------------&lt; G E T _ M D Y _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from MDY formatted date, places them in the source_date table, and returns.

]]

local function get_mdy_date_parts (date, source_date)
	source_date.month, source_date.day, source_date.year = date:match (source_patterns['mdy']);	-- get date components as strings
	source_date.month = get_month_number (source_date.month);					-- get month number
end


--[[-------------------------&lt; G E T _ Y M D _ D A T E _ P A R T S &gt;------------------------------------------

extracts year, month and day from YMD formatted date, places them in the source_date table, and returns.

]]

local function get_ymd_date_parts (date, source_date)
	source_date.year, source_date.month, source_date.day = date:match (source_patterns['ymd']);	-- get date components as strings
end


--[[-------------------------&lt; R E F O R M A T _ D A T E S &gt;--------------------------------------------------

Reformats existing dates into the format specified by format and short.

format is one of several keywords: dmy, dmy-all, mdy, mdy-all, ymd, ymd-all.  The all version includes access- and
archive-dates; otherwise these dates are not reformatted

Date ranges, season dates, proper name dates are not currently supported.

]]

local function reformat_dates (date_parameters_list, format, short)
	local all = false;															-- set to false to skip access- and archive-dates
	local format_str;
	local source_date = {};
	
	if format:match('%a+%-all') then
		format = format:match('(%a+)%-all');									-- extract the format
		all = true;																-- set to true to format access- and archive-dates
	end
	
	for param_name, param_val in pairs(date_parameters_list) do					-- for each date-holding parameter in the list
		if is_set(param_val) then												-- if the parameter has a value
			if not all and in_array (param_name, {'access-date', 'archive-date'}) then	-- if access- or archive-date and format not xxx-all
				param_val = '';													-- set to empty string so we don't process this date
			end
			for source, pattern in pairs(source_patterns) do
				if param_val:match(pattern) then
					if 'ymd' == source then
						get_ymd_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					elseif 'dmy' == source then
						get_dmy_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					elseif 'mdy' == source then
						get_mdy_date_parts (param_val, source_date);			-- get the date parts into the source_date table
					end

					if 'ymd' == format and 1582 &gt; tonumber(source_date.year) then	-- ymd format dates not allowed before 1582
						return false;											-- abandon reformatting
					end
					
					if short then
						format_str = short_formats[format];
					else
						format_str = long_formats[format];
					end
																				-- convert date and save;
					date_parameters_list[param_name] = mw.text.trim (os.date (format_str, os.time(source_date)));	-- strip leading space when single digit day and %e is first format
				end
			end
		end
	end
	return true;																-- declare success and done
end


--[[--------------------------&lt; D A T E _ H Y P H E N _ T O _ D A S H &gt;----------------------------------------

Loops through the list of date-holding parameters and converts any hyphen to an ndash.  Not called if the cs1|2
template has any date errors.

Modifies the date_parameters_list and returns true if hyphens are replaced, else returns false.

]]

local function date_hyphen_to_dash (date_parameters_list)
	local result = false;
	local n;
	for param_name, param_val in pairs(date_parameters_list) do					-- for each date-holding parameter in the list
		if not param_val:match ('%d%d%d%d%-%d%d%-%d%d') then					-- for those that are not ymd dates
			param_val, n = param_val:gsub ('%-', '');							-- replace any hyphen with ndash
			if 0 ~= n then
				date_parameters_list[param_name] = param_val;					-- update the list
				result = true;
			end
		end
	end
	return result;																-- so we know if 
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (utilities_page_ptr)
	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;											-- import functions from select Module:Citation/CS1/Utilities module
end



return {																		-- return exported functions
	dates = dates,
	year_date_check = year_date_check,
	reformat_dates = reformat_dates,
	date_hyphen_to_dash = date_hyphen_to_dash,
	set_selected_modules = set_selected_modules
	}</text>
      <sha1>i1fv7pqohu4tjsyxsm6wr9x4cy0aoey</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Identifiers</title>
    <ns>828</ns>
    <id>48812124</id>
    <revision>
      <id>803686721</id>
      <parentid>777799222</parentid>
      <timestamp>2017-10-04T00:50:45Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <minor/>
      <comment>ssrn limit -&gt; 3500000;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="42381">
local identifiers = {};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local is_set, in_array, set_error, select_one, add_maint_cat, substitute;					-- functions in Module:Citation/CS1/Utilities

local z;																		-- table of tables defined in Module:Citation/CS1/Utilities

local cfg;																		-- table of configuration tables that are defined in Module:Citation/CS1/Configuration


--[[--------------------------&lt; E X T E R N A L _ L I N K _ I D &gt;----------------------------------------------

Formats a wiki style external link

]]

local function external_link_id(options)
	local url_string = options.id;
	local ext_link;
	
	if options.encode == true or options.encode == nil then
		url_string = mw.uri.encode( url_string );
	end
	
	ext_link = mw.ustring.format ('[%s%s%s %s]', options.prefix, url_string, options.suffix or &quot;&quot;, mw.text.nowiki(options.id));
	if is_set(options.access) then
		ext_link = substitute (cfg.presentation['access-signal'], {ext_link, cfg.presentation[options.access]});	-- add the free-to-read / paywall lock
	end
	
	return mw.ustring.format( '[[%s|%s]]%s%s', options.link, options.label, options.separator or &quot;&amp;nbsp;&quot;, ext_link);
end


--[[--------------------------&lt; I N T E R N A L _ L I N K _ I D &gt;----------------------------------------------

Formats a wiki style internal link

]]

local function internal_link_id(options)
	return mw.ustring.format( '[[%s|%s]]%s[[%s%s%s|%s]]',
		options.link, options.label, options.separator or &quot;&amp;nbsp;&quot;,
		options.prefix, options.id, options.suffix or &quot;&quot;,
		mw.text.nowiki(options.id)
	);
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------

ISBN-10 and ISSN validator code calculates checksum across all isbn/issn digits including the check digit.
ISBN-13 is checked in check_isbn().

If the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length
and stripped of dashes, spaces and other non-isxn characters.

]]

local function is_valid_isxn (isxn_str, len)
	local temp = 0;
	isxn_str = { isxn_str:byte(1, len) };	-- make a table of byte values '0'  0x30 .. '9'   0x39, 'X'  0x58
	len = len+1;							-- adjust to be a loop counter
	for i, v in ipairs( isxn_str ) do		-- loop through all of the bytes and calculate the checksum
		if v == string.byte( &quot;X&quot; ) then		-- if checkdigit is X (compares the byte value of 'X' which is 0x58)
			temp = temp + 10*( len - i );	-- it represents 10 decimal
		else
			temp = temp + tonumber( string.char(v) )*(len-i);
		end
	end
	return temp % 11 == 0;					-- returns true if calculation result is zero
end


--[[--------------------------&lt; IS _ V A L I D _ I S X N  _ 1 3 &gt;----------------------------------------------

ISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.
If the number is valid, the result will be 0. Before calling this function, isbn-13/ismn must be checked for length
and stripped of dashes, spaces and other non-isxn-13 characters.

]]

local function is_valid_isxn_13 (isxn_str)
	local temp=0;
	
	isxn_str = { isxn_str:byte(1, 13) };										-- make a table of byte values '0'  0x30 .. '9'   0x39
	for i, v in ipairs( isxn_str ) do
		temp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );				-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit
	end
	return temp % 10 == 0;														-- sum modulo 10 is zero when isbn-13/ismn is correct
end


--[[--------------------------&lt; C H E C K _ I S B N &gt;------------------------------------------------------------

Determines whether an ISBN string is valid

]]

local function check_isbn( isbn_str )
	if nil ~= isbn_str:match(&quot;[^%s-0-9X]&quot;) then
		return false, 'invalid character';										-- fail if isbn_str contains anything but digits, hyphens, or the uppercase X
	end
	isbn_str = isbn_str:gsub( &quot;-&quot;, &quot;&quot; ):gsub( &quot; &quot;, &quot;&quot; );						-- remove hyphens and spaces
	local len = isbn_str:len();
 
	if len ~= 10 and len ~= 13 then
		return false, 'length';													-- fail if incorrect length
	end

	if len == 10 then
		if isbn_str:match( &quot;^%d*X?$&quot; ) == nil then								-- fail if isbn_str has 'X' anywhere but last position
			return false, 'invalid form';									
		end
		return is_valid_isxn(isbn_str, 10), 'checksum';
	else
		if isbn_str:match( &quot;^%d+$&quot; ) == nil then
			return false, 'invalid character';									-- fail if isbn13 is not all digits
		end
		if isbn_str:match( &quot;^97[89]%d*$&quot; ) == nil then
			return false, 'invalid prefix';										-- fail when isbn13 does not begin with 978 or 979
		end
		return is_valid_isxn_13 (isbn_str), 'checksum';
	end
end


--[[--------------------------&lt; I S M N &gt;----------------------------------------------------------------------

Determines whether an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the
same check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf
section 2, pages 912.

]]

local function ismn (id)
	local handler = cfg.id_handlers['ISMN'];
	local text;
	local valid_ismn = true;
	local id_copy;

	id_copy = id;																-- save a copy because this testing is destructive
	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );													-- strip spaces, hyphens, and endashes from the ismn

	if 13 ~= id:len() or id:match( &quot;^9790%d*$&quot; ) == nil then					-- ismn must be 13 digits and begin 9790
		valid_ismn = false;
	else
		valid_ismn=is_valid_isxn_13 (id);										-- validate ismn
	end

--	text = internal_link_id({link = handler.link, label = handler.label,		-- use this (or external version) when there is some place to link to
--		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	text=&quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]&quot; .. handler.separator .. id_copy;		-- because no place to link to yet

	if false == valid_ismn then
		text = text .. ' ' .. set_error( 'bad_ismn' )							-- add an error message if the ismn is invalid
	end 
	
	return text;
end


--[[--------------------------&lt; I S S N &gt;----------------------------------------------------------------------

Validate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but
has separated the two groups of four digits with a space.  When that condition occurred, the resulting link looked
like this:

	|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link
	
This code now prevents that by inserting a hyphen at the issn midpoint.  It also validates the issn for length
and makes sure that the checkdigit agrees with the calculated value.  Incorrect length (8 digits), characters
other than 0-9 and X, or checkdigit / calculated value mismatch will all cause a check issn error message.  The
issn is always displayed with a hyphen, even if the issn was given as a single group of 8 digits.

]]

local function issn(id, e)
	local issn_copy = id;		-- save a copy of unadulterated issn; use this version for display if issn does not validate
	local handler;
	local text;
	local valid_issn = true;
	
	if e then
		 handler = cfg.id_handlers['EISSN'];
	else
		 handler = cfg.id_handlers['ISSN'];
	end

	id=id:gsub( &quot;[%s-]&quot;, &quot;&quot; );									-- strip spaces, hyphens, and endashes from the issn

	if 8 ~= id:len() or nil == id:match( &quot;^%d*X?$&quot; ) then		-- validate the issn: 8 digits long, containing only 0-9 or X in the last position
		valid_issn=false;										-- wrong length or improper character
	else
		valid_issn=is_valid_isxn(id, 8);						-- validate issn
	end

	if true == valid_issn then
		id = string.sub( id, 1, 4 ) .. &quot;-&quot; .. string.sub( id, 5 );	-- if valid, display correctly formatted version
	else
		id = issn_copy;											-- if not valid, use the show the invalid issn with error message
	end
	
	text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if false == valid_issn then
		text = text .. ' ' .. set_error( 'bad_issn', e and 'e' or '' )			-- add an error message if the issn is invalid
	end 
	
	return text
end


--[[--------------------------&lt; A M A Z O N &gt;------------------------------------------------------------------

Formats a link to Amazon.  Do simple error checking: asin must be mix of 10 numeric or uppercase alpha
characters.  If a mix, first character must be uppercase alpha; if all numeric, asins must be 10-digit
isbn. If 10-digit isbn, add a maintenance category so a bot or awb script can replace |asin= with |isbn=.
Error message if not 10 characters, if not isbn10, if mixed and first character is a digit.

]]

local function amazon(id, domain)
	local err_cat = &quot;&quot;

	if not id:match(&quot;^[%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u][%d%u]$&quot;) then
		err_cat =  ' ' .. set_error ('bad_asin');								-- asin is not a mix of 10 uppercase alpha and numeric characters
	else
		if id:match(&quot;^%d%d%d%d%d%d%d%d%d[%dX]$&quot;) then								-- if 10-digit numeric (or 9 digits with terminal X)
			if check_isbn( id ) then												-- see if asin value is isbn10
				add_maint_cat ('ASIN');
			elseif not is_set (err_cat) then
				err_cat =  ' ' .. set_error ('bad_asin');						-- asin is not isbn10
			end
		elseif not id:match(&quot;^%u[%d%u]+$&quot;) then
			err_cat =  ' ' .. set_error ('bad_asin');							-- asin doesn't begin with uppercase alpha
		end
	end
	if not is_set(domain) then 
		domain = &quot;com&quot;;
	elseif in_array (domain, {'jp', 'uk'}) then			-- Japan, United Kingdom
		domain = &quot;co.&quot; .. domain;
	elseif in_array (domain, {'au', 'br', 'mx'}) then	-- Australia, Brazil, Mexico
		domain = &quot;com.&quot; .. domain;
	end
	local handler = cfg.id_handlers['ASIN'];
	return external_link_id({link=handler.link,
		label=handler.label, prefix=handler.prefix .. domain .. &quot;/dp/&quot;,
		id=id, encode=handler.encode, separator = handler.separator}) .. err_cat;
end


--[[--------------------------&lt; A R X I V &gt;--------------------------------------------------------------------

See: http://arxiv.org/help/arxiv_identifier

format and error check arXiv identifier.  There are three valid forms of the identifier:
the first form, valid only between date codes 9108 and 0703 is:
	arXiv:&lt;archive&gt;.&lt;class&gt;/&lt;date code&gt;&lt;number&gt;&lt;version&gt;
where:
	&lt;archive&gt; is a string of alpha characters - may be hyphenated; no other punctuation
	&lt;class&gt; is a string of alpha characters - may be hyphenated; no other punctuation
	&lt;date code&gt; is four digits in the form YYMM where YY is the last two digits of the four-digit year and MM is the month number January = 01
		first digit of YY for this form can only 9 and 0
	&lt;number&gt; is a three-digit number
	&lt;version&gt; is a 1 or more digit number preceded with a lowercase v; no spaces (undocumented)
	
the second form, valid from April 2007 through December 2014 is:
	arXiv:&lt;date code&gt;.&lt;number&gt;&lt;version&gt;
where:
	&lt;date code&gt; is four digits in the form YYMM where YY is the last two digits of the four-digit year and MM is the month number January = 01
	&lt;number&gt; is a four-digit number
	&lt;version&gt; is a 1 or more digit number preceded with a lowercase v; no spaces

the third form, valid from January 2015 is:
	arXiv:&lt;date code&gt;.&lt;number&gt;&lt;version&gt;
where:
	&lt;date code&gt; and &lt;version&gt; are as defined for 0704-1412
	&lt;number&gt; is a five-digit number
]]

local function arxiv (id, class)
	local handler = cfg.id_handlers['ARXIV'];
	local year, month, version;
	local err_cat = '';
	local text;
	
	if id:match(&quot;^%a[%a%.%-]+/[90]%d[01]%d%d%d%d$&quot;) or id:match(&quot;^%a[%a%.%-]+/[90]%d[01]%d%d%d%dv%d+$&quot;) then	-- test for the 9108-0703 format w/ &amp; w/o version
		year, month = id:match(&quot;^%a[%a%.%-]+/([90]%d)([01]%d)%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((not (90 &lt; year or 8 &gt; year)) or (1 &gt; month or 12 &lt; month)) or		-- if invalid year or invalid month
			((91 == year and 7 &gt; month) or (7 == year and 3 &lt; month)) then		-- if years ok, are starting and ending months ok?
				err_cat = ' ' .. set_error( 'bad_arxiv' );						-- set error message
		end
	elseif id:match(&quot;^%d%d[01]%d%.%d%d%d%d$&quot;) or id:match(&quot;^%d%d[01]%d%.%d%d%d%dv%d+$&quot;) then	-- test for the 0704-1412 w/ &amp; w/o version
		year, month = id:match(&quot;^(%d%d)([01]%d)%.%d%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((7 &gt; year) or (14 &lt; year) or (1 &gt; month or 12 &lt; month)) or			-- is year invalid or is month invalid? (doesn't test for future years)
			((7 == year) and (4 &gt; month)) then --or									-- when year is 07, is month invalid (before April)?
				err_cat = ' ' .. set_error( 'bad_arxiv' );						-- set error message
		end
	elseif id:match(&quot;^%d%d[01]%d%.%d%d%d%d%d$&quot;) or id:match(&quot;^%d%d[01]%d%.%d%d%d%d%dv%d+$&quot;) then	-- test for the 1501- format w/ &amp; w/o version
		year, month = id:match(&quot;^(%d%d)([01]%d)%.%d%d%d%d%d[v%d]*$&quot;);
		year = tonumber(year);
		month = tonumber(month);
		if ((15 &gt; year) or (1 &gt; month or 12 &lt; month)) then						-- is year invalid or is month invalid? (doesn't test for future years)
			err_cat = ' ' .. set_error( 'bad_arxiv' );							-- set error message
		end
	else
		err_cat = ' ' .. set_error( 'bad_arxiv' );								-- arXiv id doesn't match any format
	end

	text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;

	if is_set (class) then
		class = ' [[' .. '//arxiv.org/archive/' .. class .. ' ' .. class .. ']]';	-- external link within square brackets, not wikilink
	else
		class = '';																-- empty string for concatenation
	end
	
	return text .. class;
end


--[[--------------------------&lt; B I O R X I V &gt;-----------------------------------------------------------------

Format bioRxiv id and do simple error checking.  BiorXiv ids are exactly 6 digits.
The bioRxiv id is the number following the last slash in the bioRxiv-issued DOI:
https://doi.org/10.1101/078733 -&gt; 078733

]]

local function biorxiv(id)
	local handler = cfg.id_handlers['BIORXIV'];
	local err_cat =  '';								-- presume that bioRxiv id is valid
	
	if nil == id:match(&quot;^%d%d%d%d%d%d$&quot;) then				-- if bioRxiv id has anything but six digits
		err_cat = ' ' .. set_error( 'bad_biorxiv');	-- set an error message
    end
	
	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator,
			encode=handler.encode, access=handler.access}) .. err_cat;
end


--[[--------------------------&lt; N O R M A L I Z E _ L C C N &gt;--------------------------------------------------

lccn normalization (http://www.loc.gov/marc/lccn-namespace.html#normalization)
1. Remove all blanks.
2. If there is a forward slash (/) in the string, remove it, and remove all characters to the right of the forward slash.
3. If there is a hyphen in the string:
	a. Remove it.
	b. Inspect the substring following (to the right of) the (removed) hyphen. Then (and assuming that steps 1 and 2 have been carried out):
		1. All these characters should be digits, and there should be six or less. (not done in this function)
		2. If the length of the substring is less than 6, left-fill the substring with zeroes until the length is six.

Returns a normalized lccn for lccn() to validate.  There is no error checking (step 3.b.1) performed in this function.
]]

local function normalize_lccn (lccn)
	lccn = lccn:gsub (&quot;%s&quot;, &quot;&quot;);									-- 1. strip whitespace

	if nil ~= string.find (lccn,'/') then
		lccn = lccn:match (&quot;(.-)/&quot;);								-- 2. remove forward slash and all character to the right of it
	end

	local prefix
	local suffix
	prefix, suffix = lccn:match (&quot;(.+)%-(.+)&quot;);						-- 3.a remove hyphen by splitting the string into prefix and suffix

	if nil ~= suffix then											-- if there was a hyphen
		suffix=string.rep(&quot;0&quot;, 6-string.len (suffix)) .. suffix;	-- 3.b.2 left fill the suffix with 0s if suffix length less than 6
		lccn=prefix..suffix;										-- reassemble the lccn
	end
	
	return lccn;
	end


--[[--------------------------&lt; L C C N &gt;----------------------------------------------------------------------

Format LCCN link and do simple error checking.  LCCN is a character string 8-12 characters long. The length of
the LCCN dictates the character type of the first 1-3 characters; the rightmost eight are always digits.
http://info-uri.info/registry/OAIHandler?verb=GetRecord&amp;metadataPrefix=reg&amp;identifier=info:lccn/

length = 8 then all digits
length = 9 then lccn[1] is lower case alpha
length = 10 then lccn[1] and lccn[2] are both lower case alpha or both digits
length = 11 then lccn[1] is lower case alpha, lccn[2] and lccn[3] are both lower case alpha or both digits
length = 12 then lccn[1] and lccn[2] are both lower case alpha

]]

local function lccn(lccn)
	local handler = cfg.id_handlers['LCCN'];
	local err_cat =  '';								-- presume that LCCN is valid
	local id = lccn;									-- local copy of the lccn

	id = normalize_lccn (id);							-- get canonical form (no whitespace, hyphens, forward slashes)
	local len = id:len();								-- get the length of the lccn

	if 8 == len then
		if id:match(&quot;[^%d]&quot;) then						-- if LCCN has anything but digits (nil if only digits)
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- set an error message
		end
	elseif 9 == len then								-- LCCN should be adddddddd
		if nil == id:match(&quot;%l%d%d%d%d%d%d%d%d&quot;) then			-- does it match our pattern?
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- set an error message
		end
	elseif 10 == len then								-- LCCN should be aadddddddd or dddddddddd
		if id:match(&quot;[^%d]&quot;) then							-- if LCCN has anything but digits (nil if only digits) ...
			if nil == id:match(&quot;^%l%l%d%d%d%d%d%d%d%d&quot;) then	-- ... see if it matches our pattern
				err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
			end
		end
	elseif 11 == len then								-- LCCN should be aaadddddddd or adddddddddd
		if not (id:match(&quot;^%l%l%l%d%d%d%d%d%d%d%d&quot;) or id:match(&quot;^%l%d%d%d%d%d%d%d%d%d%d&quot;)) then	-- see if it matches one of our patterns
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
		end
	elseif 12 == len then								-- LCCN should be aadddddddddd
		if not id:match(&quot;^%l%l%d%d%d%d%d%d%d%d%d%d&quot;) then	-- see if it matches our pattern
			err_cat = ' ' .. set_error( 'bad_lccn' );	-- no match, set an error message
		end
	else
		err_cat = ' ' .. set_error( 'bad_lccn' );		-- wrong length, set an error message
	end

	if not is_set (err_cat) and nil ~= lccn:find ('%s') then
		err_cat = ' ' .. set_error( 'bad_lccn' );		-- lccn contains a space, set an error message
	end

	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=lccn,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; P M I D &gt;----------------------------------------------------------------------

Format PMID and do simple error checking.  PMIDs are sequential numbers beginning at 1 and counting up.  This
code checks the PMID to see that it contains only digits and is less than test_limit; the value in local variable
test_limit will need to be updated periodically as more PMIDs are issued.

]]

local function pmid(id)
	local test_limit = 30000000;						-- update this value as PMIDs approach
	local handler = cfg.id_handlers['PMID'];
	local err_cat =  '';								-- presume that PMID is valid
	
	if id:match(&quot;[^%d]&quot;) then							-- if PMID has anything but digits
		err_cat = ' ' .. set_error( 'bad_pmid' );		-- set an error message
	else												-- PMID is only digits
		local id_num = tonumber(id);					-- convert id to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then		-- if PMID is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_pmid' );	-- set an error message
		end
	end
	
	return external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode}) .. err_cat;
end


--[[--------------------------&lt; I S _ E M B A R G O E D &gt;------------------------------------------------------

Determines if a PMC identifier's online version is embargoed. Compares the date in |embargo= against today's date.  If embargo date is
in the future, returns the content of |embargo=; otherwise, returns and empty string because the embargo has expired or because
|embargo= was not set in this cite.

]]

local function is_embargoed (embargo)
	if is_set (embargo) then
		local lang = mw.getContentLanguage();
		local good1, embargo_date, good2, todays_date;
		good1, embargo_date = pcall( lang.formatDate, lang, 'U', embargo );
		good2, todays_date = pcall( lang.formatDate, lang, 'U' );
	
		if good1 and good2 then													-- if embargo date and today's date are good dates
			if tonumber( embargo_date ) &gt;= tonumber( todays_date ) then			-- is embargo date is in the future?
				return embargo;													-- still embargoed
			else
				add_maint_cat ('embargo')
				return '';														-- unset because embargo has expired
			end
		end
	end
	return '';																	-- |embargo= not set return empty string
end


--[[--------------------------&lt; P M C &gt;------------------------------------------------------------------------

Format a PMC, do simple error checking, and check for embargoed articles.

The embargo parameter takes a date for a value. If the embargo date is in the future the PMC identifier will not
be linked to the article.  If the embargo date is today or in the past, or if it is empty or omitted, then the
PMC identifier is linked to the article through the link at cfg.id_handlers['PMC'].prefix.

PMC embargo date testing is done in function is_embargoed () which is called earlier because when the citation
has |pmc=&lt;value&gt; but does not have a |url= then |title= is linked with the PMC link.  Function is_embargoed ()
returns the embargo date if the PMC article is still embargoed, otherwise it returns an empty string.

PMCs are sequential numbers beginning at 1 and counting up.  This code checks the PMC to see that it contains only digits and is less
than test_limit; the value in local variable test_limit will need to be updated periodically as more PMCs are issued.

]]

local function pmc(id, embargo)
	local test_limit = 6000000;													-- update this value as PMCs approach
	local handler = cfg.id_handlers['PMC'];
	local err_cat =  '';														-- presume that PMC is valid
	local id_num;
	local text;
	
	id_num = id:match ('^[Pp][Mm][Cc](%d+)$');                                  -- identifier with pmc prefix

	if is_set (id_num) then
		add_maint_cat ('pmc_format');
	else																        -- plain number without pmc prefix
		id_num = id:match ('^%d+$');											-- if here id is all digits
	end

	if is_set (id_num) then														-- id_num has a value so test it
		id_num = tonumber(id_num);												-- convert id_num to a number for range testing
		if 1 &gt; id_num or test_limit &lt; id_num then								-- if PMC is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_pmc' );							-- set an error message
		else
			id = tostring (id_num);												-- make sure id is a string
		end
	else																		-- when id format incorrect
		err_cat = ' ' .. set_error( 'bad_pmc' );								-- set an error message
	end
	
	if is_set (embargo) then													-- is PMC is still embargoed?
		text=&quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]&quot; .. handler.separator .. id .. err_cat;	-- still embargoed so no external link
	else
		text = external_link_id({link = handler.link, label = handler.label,	-- no embargo date or embargo has expired, ok to link to article
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;
	end
	return text;
end


--[[--------------------------&lt; D O I &gt;------------------------------------------------------------------------

Formats a DOI and checks for DOI errors.

DOI names contain two parts: prefix and suffix separated by a forward slash.
	Prefix: directory indicator '10.' followed by a registrant code
	Suffix: character string of any length chosen by the registrant

This function checks a DOI name for: prefix/suffix.  If the doi name contains spaces or endashes, or, if it ends
with a period or a comma, this function will emit a bad_doi error message.

DOI names are case-insensitive and can incorporate any printable Unicode characters so the test for spaces, endash,
and terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely
if ever used in doi names.

]]

local function doi(id, inactive, access)
	local cat = &quot;&quot;
	local handler = cfg.id_handlers['DOI'];
	
	local text;
	if is_set(inactive) then
		local inactive_year = inactive:match(&quot;%d%d%d%d&quot;) or '';		-- try to get the year portion from the inactive date
		text = &quot;[[&quot; .. handler.link .. &quot;|&quot; .. handler.label .. &quot;]]:&quot; .. id;
		if is_set(inactive_year) then
			table.insert( z.error_categories, &quot;Pages with DOIs inactive since &quot; .. inactive_year );
		else
			table.insert( z.error_categories, &quot;Pages with inactive DOIs&quot; );	-- when inactive doesn't contain a recognizable year
		end
		inactive = &quot; (&quot; .. cfg.messages['inactive'] .. &quot; &quot; .. inactive .. &quot;)&quot; 
	else 
		text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=access})
		inactive = &quot;&quot; 
	end

	if nil == id:match(&quot;^10%.[^%s]-/[^%s]-[^%.,]$&quot;) then	-- doi must begin with '10.', must contain a fwd slash, must not contain spaces or endashes, and must not end with period or comma
		cat = ' ' .. set_error( 'bad_doi' );
	end
	return text .. inactive .. cat 
end


--[[--------------------------&lt; H D L &gt;------------------------------------------------------------------------

Formats an HDL with minor error checking.

HDL names contain two parts: prefix and suffix separated by a forward slash.
	Prefix: character string using any character in the UCS-2 character set except '/'
	Suffix: character string of any length using any character in the UCS-2 character set chosen by the registrant

This function checks a HDL name for: prefix/suffix.  If the HDL name contains spaces, endashes, or, if it ends
with a period or a comma, this function will emit a bad_hdl error message.

HDL names are case-insensitive and can incorporate any printable Unicode characters so the test for endashes and
terminal punctuation may not be technically correct but it appears, that in practice these characters are rarely
if ever used in HDLs.

]]

local function hdl(id, access)
	local handler = cfg.id_handlers['HDL'];
	
	local text = external_link_id({link = handler.link, label = handler.label,
			prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=access})

	if nil == id:match(&quot;^[^%s]-/[^%s]-[^%.,]$&quot;) then							-- hdl must contain a fwd slash, must not contain spaces, endashes, and must not end with period or comma
		text = text .. ' ' .. set_error( 'bad_hdl' );
	end
	return text;
end


--[[--------------------------&lt; O P E N L I B R A R Y &gt;--------------------------------------------------------

Formats an OpenLibrary link, and checks for associated errors.

]]

local function openlibrary(id, access)
	local code = id:match(&quot;^%d+([AMW])$&quot;);										-- only digits followed by 'A', 'M', or 'W'
	local handler = cfg.id_handlers['OL'];

	if ( code == &quot;A&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'authors/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	elseif ( code == &quot;M&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'books/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	elseif ( code == &quot;W&quot; ) then
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'works/OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access})
	else
		return external_link_id({link=handler.link, label=handler.label,
			prefix=handler.prefix .. 'OL',
			id=id, separator=handler.separator,	encode = handler.encode,
			access = access}) .. ' ' .. set_error( 'bad_ol' );
	end
end


--[[--------------------------&lt; M E S S A G E _ I D &gt;----------------------------------------------------------

Validate and format a usenet message id.  Simple error checking, looks for 'id-left@id-right' not enclosed in
'&lt;' and/or '&gt;' angle brackets.

]]

local function message_id (id)
	local handler = cfg.id_handlers['USENETID'];

	local text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode})
 
	if not id:match('^.+@.+$') or not id:match('^[^&lt;].*[^&gt;]$')then				-- doesn't have '@' or has one or first or last character is '&lt; or '&gt;'
		text = text .. ' ' .. set_error( 'bad_message_id' )						-- add an error message if the message id is invalid
	end 
	
	return text
end


--[[--------------------------&lt; O C L C &gt;----------------------------------------------------------------------

Validate and format an oclc id.  https://www.oclc.org/batchload/controlnumber.en.html

]]

local function oclc (id)
	local handler = cfg.id_handlers['OCLC'];
	local number;
	local err_msg = '';															-- empty string for concatenation
	
	if id:match('^ocm%d%d%d%d%d%d%d%d$') then									-- ocm prefix and 8 digits; 001 field (12 characters)
		number = id:match('ocm(%d+)');											-- get the number
	elseif id:match('^ocn%d%d%d%d%d%d%d%d%d$') then								-- ocn prefix and 9 digits; 001 field (12 characters)
		number = id:match('ocn(%d+)');											-- get the number
	elseif id:match('^on%d%d%d%d%d%d%d%d%d%d+$') then							-- on prefix and 10 or more digits; 001 field (12 characters)
		number = id:match('^on(%d%d%d%d%d%d%d%d%d%d+)$');						-- get the number
	elseif id:match('^%(OCoLC%)[1-9]%d*$') then									-- (OCoLC) prefix and variable number digits; no leading zeros; 035 field
		number = id:match('%(OCoLC%)([1-9]%d*)');								-- get the number
		if 9 &lt; number:len() then
			number = nil;														-- contrain to 1 to 9 digits; change this when oclc issues 10-digit numbers
		end
	elseif id:match('^%d+$') then												-- no prefix
		number = id;															-- get the number
		if 10 &lt; number:len() then
			number = nil;														-- contrain to 1 to 10 digits; change this when oclc issues 11-digit numbers
		end
	end

	if number then																-- proper format
		id = number;															-- exclude prefix, if any, from external link
	else
		err_msg = ' ' .. set_error( 'bad_oclc' )								-- add an error message if the id is malformed
	end
	
	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode}) .. err_msg;

	return text;
end


--[[--------------------------&lt; B I B C O D E &gt;--------------------------------------------------------------------

Validates (sort of) and formats a bibcode id.

Format for bibcodes is specified here: http://adsabs.harvard.edu/abs_doc/help_pages/data.html#bibcodes

But, this: 2015arXiv151206696F is apparently valid so apparently, the only things that really matter are length, 19 characters
and first four digits must be a year.  This function makes these tests:
	length must be 19 characters
	characters in position
		14 must be digits and must represent a year in the range of 1000  next year
		5 must be a letter
		6 must be letter, ampersand, or dot (ampersand cannot directly precede a dot; &amp;. )
		78 must be letter, digit, ampersand, or dot (ampersand cannot directly precede a dot; &amp;. )
		918 must be letter, digit, or dot
		19 must be a letter or dot

]]

local function bibcode (id, access)
	local handler = cfg.id_handlers['BIBCODE'];
	local err_type;
	local year;

	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode,
		access=access});
	
	if 19 ~= id:len() then
		err_type = 'length';
	else
		year = id:match (&quot;^(%d%d%d%d)[%a][%a&amp;%.][%a&amp;%.%d][%a&amp;%.%d][%a%d%.]+[%a%.]$&quot;)	-- 
		if not year then														-- if nil then no pattern match
			err_type = 'value';													-- so value error
		else
			local next_year = tonumber(os.date ('%Y'))+1;						-- get the current year as a number and add one for next year
			year = tonumber (year);												-- convert year portion of bibcode to a number
			if (1000 &gt; year) or (year &gt; next_year) then
				err_type = 'year';												-- year out of bounds
			end
			if id:find('&amp;%.') then
				err_type = 'journal';											-- journal abbreviation must not have '&amp;.' (if it does its missing a letter)
			end
		end
	end

	if is_set (err_type) then													-- if there was an error detected
		text = text .. ' ' .. set_error( 'bad_bibcode', {err_type});
	end
	return text;
end


--[[--------------------------&lt; C I T E S E E R X &gt;------------------------------------------------------------

CiteSeerX use their own notion of &quot;doi&quot; (not to be confused with the identifiers resolved via doi.org).

The description of the structure of this identifier can be found at Help_talk:Citation_Style_1/Archive_26#CiteSeerX_id_structure
]]

local function citeseerx (id)
	local handler = cfg.id_handlers['CITESEERX'];
	local matched;
	
	local text = external_link_id({link=handler.link, label=handler.label,
		prefix=handler.prefix, id=id, separator=handler.separator, encode=handler.encode,
		access=handler.access});
	
	matched = id:match (&quot;^10%.1%.1%.[1-9]%d?%d?%d?%.[1-9]%d?%d?%d?$&quot;);
	if not matched then
		text = text .. ' ' .. set_error( 'bad_citeseerx' );
	end
	return text;
end


--[[--------------------------&lt; S S R N &gt;----------------------------------------------------------------------

Format an ssrn, do simple error checking

SSRNs are sequential numbers beginning at 100? and counting up.  This code checks the ssrn to see that it is
only digits and is greater than 99 and less than test_limit; the value in local variable test_limit will need
to be updated periodically as more SSRNs are issued.

]]

local function ssrn (id)
	local test_limit = 3500000;													-- update this value as SSRNs approach
	local handler = cfg.id_handlers['SSRN'];
	local err_cat =  '';														-- presume that SSRN is valid
	local id_num;
	local text;
	
	id_num = id:match ('^%d+$');												-- id must be all digits

	if is_set (id_num) then														-- id_num has a value so test it
		id_num = tonumber(id_num);												-- convert id_num to a number for range testing
		if 100 &gt; id_num or test_limit &lt; id_num then								-- if SSRN is outside test limit boundaries
			err_cat = ' ' .. set_error( 'bad_ssrn' );							-- set an error message
		end
	else																		-- when id format incorrect
		err_cat = ' ' .. set_error( 'bad_ssrn' );								-- set an error message
	end
	
	text = external_link_id({link = handler.link, label = handler.label,
		prefix=handler.prefix,id=id,separator=handler.separator, encode=handler.encode, access=handler.access}) .. err_cat;

	return text;
end


--[[--------------------------&lt; B U I L D _ I D _ L I S T &gt;--------------------------------------------------------

Takes a table of IDs created by extract_ids() and turns it into a table of formatted ID outputs.

inputs:
	id_list  table of identifiers built by extract_ids()
	options  table of various template parameter values used to modify some manually handled identifiers

]]

local function build_id_list( id_list, options )
	local new_list, handler = {};

	local function fallback(k) return { __index = function(t,i) return cfg.id_handlers[k][i] end } end;
	
	for k, v in pairs( id_list ) do												-- k is uc identifier name as index to cfg.id_handlers; e.g. cfg.id_handlers['ISBN'], v is a table
		
		-- fallback to read-only cfg
		handler = setmetatable( { ['id'] = v, ['access'] = options.IdAccessLevels[k] }, fallback(k) );

		if handler.mode == 'external' then
			table.insert( new_list, {handler.label, external_link_id( handler ) } );
		elseif handler.mode == 'internal' then
			table.insert( new_list, {handler.label, internal_link_id( handler ) } );
		elseif handler.mode ~= 'manual' then
			error( cfg.messages['unknown_ID_mode'] );
		elseif k == 'BIBCODE' then
			table.insert( new_list, {handler.label, bibcode( v, handler.access ) } );
		elseif k == 'BIORXIV' then
			table.insert( new_list, {handler.label, biorxiv( v ) } );
		elseif k == 'CITESEERX' then
			table.insert( new_list, {handler.label, citeseerx( v ) } );
		elseif k == 'DOI' then
			table.insert( new_list, {handler.label, doi( v, options.DoiBroken, handler.access ) } );
		elseif k == 'HDL' then
			table.insert( new_list, {handler.label, hdl( v, handler.access ) } );
		elseif k == 'ARXIV' then
			table.insert( new_list, {handler.label, arxiv( v, options.Class ) } ); 
		elseif k == 'ASIN' then
			table.insert( new_list, {handler.label, amazon( v, options.ASINTLD ) } ); 
		elseif k == 'LCCN' then
			table.insert( new_list, {handler.label, lccn( v ) } );
		elseif k == 'OL' or k == 'OLA' then
			table.insert( new_list, {handler.label, openlibrary( v, handler.access ) } );
		elseif k == 'PMC' then
			table.insert( new_list, {handler.label, pmc( v, options.Embargo ) } );
		elseif k == 'PMID' then
			table.insert( new_list, {handler.label, pmid( v ) } );
		elseif k == 'OCLC' then
			table.insert( new_list, {handler.label, oclc( v ) } );
		elseif k == 'SSRN' then
			table.insert( new_list, {handler.label, ssrn( v ) } );
		elseif k == 'ISMN' then
			table.insert( new_list, {handler.label, ismn( v ) } );
		elseif k == 'ISSN' then
			table.insert( new_list, {handler.label, issn( v ) } );
		elseif k == 'EISSN' then
			table.insert( new_list, {handler.label, issn( v, true ) } );		-- true distinguishes eissn from issn
		elseif k == 'ISBN' then
			local ISBN = internal_link_id( handler );
			local check;
			local err_type = '';
			check, err_type = check_isbn( v );
			if not check then
				if is_set(options.IgnoreISBN) then								-- ISBN is invalid; if |ignore-isbn-error= set
					add_maint_cat ('ignore_isbn_err');							-- ad a maint category
				else
					ISBN = ISBN .. set_error( 'bad_isbn', {err_type}, false, &quot; &quot;, &quot;&quot; );	-- else display an error message
				end
			elseif is_set(options.IgnoreISBN) then								-- ISBN is OK; if |ignore-isbn-error= set
					add_maint_cat ('ignore_isbn_err');							-- because |ignore-isbn-error= unnecessary
			end
			table.insert( new_list, {handler.label, ISBN } );				
		elseif k == 'USENETID' then
			table.insert( new_list, {handler.label, message_id( v ) } );
		else
			error( cfg.messages['unknown_manual_ID'] );
		end
	end
	
	local function comp( a, b )	-- used in following table.sort()
		return a[1] &lt; b[1];
	end
	
	table.sort( new_list, comp );
	for k, v in ipairs( new_list ) do
		new_list[k] = v[2];
	end
	
	return new_list;
end


--[[--------------------------&lt; E X T R A C T _ I D S &gt;------------------------------------------------------------

Populates ID table from arguments using configuration settings. Loops through cfg.id_handlers and searches args for
any of the parameters listed in each cfg.id_handlers['...'].parameters.  If found, adds the parameter and value to
the identifier list.  Emits redundant error message is more than one alias exists in args

]]

local function extract_ids( args )
	local id_list = {};															-- list of identifiers found in args
	for k, v in pairs( cfg.id_handlers ) do										-- k is uc identifier name as index to cfg.id_handlers; e.g. cfg.id_handlers['ISBN'], v is a table
		v = select_one( args, v.parameters, 'redundant_parameters' );			-- v.parameters is a table of aliases for k; here we pick one from args if present
		if is_set(v) then id_list[k] = v; end									-- if found in args, add identifier to our list
	end
	return id_list;
end


--[[--------------------------&lt; E X T R A C T _ I D _ A C C E S S _ L E V E L S &gt;--------------------------------------

Fetches custom id access levels from arguments using configuration settings.
Parameters which have a predefined access level (e.g. arxiv) do not use this
function as they are directly rendered as free without using an additional parameter.

]]

local function extract_id_access_levels( args, id_list )
	local id_accesses_list = {};
	for k, v in pairs( cfg.id_handlers ) do
		local access_param = v.custom_access;
		local k_lower = string.lower(k);
		if is_set(access_param) then
			local access_level = args[access_param];
			if is_set(access_level) then
				if not in_array (access_level:lower(), cfg.keywords['id-access']) then
					table.insert( z.message_tail, { set_error( 'invalid_param_val', {access_param, access_level}, true ) } );	
					access_level = nil;
				end
				if not is_set(id_list[k]) then
					table.insert( z.message_tail, { set_error( 'param_access_requires_param', {k_lower}, true ) } );
				end
				if is_set(access_level) then
					access_level = access_level:lower();
				end
				id_accesses_list[k] = access_level;
			end
		end
	end
	return id_accesses_list;
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table and imported functions table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr, utilities_page_ptr)
	cfg = cfg_table_ptr;

	is_set = utilities_page_ptr.is_set;											-- import functions from select Module:Citation/CS1/Utilities module
	in_array = utilities_page_ptr.in_array;
	set_error = utilities_page_ptr.set_error;
	select_one = utilities_page_ptr.select_one;
	add_maint_cat = utilities_page_ptr.add_maint_cat;
	substitute = utilities_page_ptr.substitute;

	z = utilities_page_ptr.z;													-- table of tables in Module:Citation/CS1/Utilities
end


return {
	build_id_list = build_id_list,
	extract_ids = extract_ids,
	extract_id_access_levels = extract_id_access_levels,
	is_embargoed = is_embargoed;
	set_selected_modules = set_selected_modules;
	}</text>
      <sha1>bhgirhnotg5ivjt09o7i94bxtg9i1rp</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Utilities</title>
    <ns>828</ns>
    <id>48808487</id>
    <revision>
      <id>729837287</id>
      <parentid>699961606</parentid>
      <timestamp>2016-07-14T22:01:43Z</timestamp>
      <contributor>
        <username>Redrose64</username>
        <id>9612106</id>
      </contributor>
      <comment>this kind of markup is no longer allowed, and puts pages in [[Category:Pages using invalid self-closed HTML tags]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="11004">local u = {}

local z = {
	error_categories = {};														-- for categorizing citations that contain errors
	error_ids = {};
	message_tail = {};
	maintenance_cats = {};														-- for categorizing citations that aren't erroneous per se, but could use a little work
	properties_cats = {};														-- for categorizing citations based on certain properties, language of source for instance
};


--[[--------------------------&lt; F O R W A R D   D E C L A R A T I O N S &gt;--------------------------------------
]]

local cfg;																		-- table of tables imported from slected Module:Citation/CS1/Configuration


--[[--------------------------&lt; I S _ S E T &gt;------------------------------------------------------------------

Returns true if argument is set; false otherwise. Argument is 'set' when it exists (not nil) or when it is not an empty string.
This function is global because it is called from both this module and from Date validation

]]
local function is_set( var )
	return not (var == nil or var == '');
end


--[[--------------------------&lt; I N _ A R R A Y &gt;--------------------------------------------------------------

Whether needle is in haystack

]]

local function in_array( needle, haystack )
	if needle == nil then
		return false;
	end
	for n,v in ipairs( haystack ) do
		if v == needle then
			return n;
		end
	end
	return false;
end


--[[--------------------------&lt; S U B S T I T U T E &gt;----------------------------------------------------------

Populates numbered arguments in a message string using an argument table.

]]

local function substitute( msg, args )
	return args and mw.message.newRawMessage( msg, args ):plain() or msg;
end


--[[--------------------------&lt; E R R O R _ C O M M E N T &gt;----------------------------------------------------

Wraps error messages with css markup according to the state of hidden.

]]
local function error_comment( content, hidden )
	return substitute( hidden and cfg.presentation['hidden-error'] or cfg.presentation['visible-error'], content );
end


--[[--------------------------&lt; S E T _ E R R O R &gt;--------------------------------------------------------------

Sets an error condition and returns the appropriate error message.  The actual placement of the error message in the output is
the responsibility of the calling function.

]]
local function set_error( error_id, arguments, raw, prefix, suffix )
	local error_state = cfg.error_conditions[ error_id ];
	
	prefix = prefix or &quot;&quot;;
	suffix = suffix or &quot;&quot;;
	
	if error_state == nil then
		error( cfg.messages['undefined_error'] );
	elseif is_set( error_state.category ) then
		table.insert( z.error_categories, error_state.category );
	end
	
	local message = substitute( error_state.message, arguments );
	
	message = message .. &quot; ([[&quot; .. cfg.messages['help page link'] .. 
		&quot;#&quot; .. error_state.anchor .. &quot;|&quot; ..
		cfg.messages['help page label'] .. &quot;]])&quot;;
	
	z.error_ids[ error_id ] = true;
	if in_array( error_id, { 'bare_url_missing_title', 'trans_missing_title' } )
			and z.error_ids['citation_missing_title'] then
		return '', false;
	end
	
	message = table.concat({ prefix, message, suffix });
	
	if raw == true then
		return message, error_state.hidden;
	end		
		
	return error_comment( message, error_state.hidden );
end


--[[-------------------------&lt; I S _ A L I A S _ U S E D &gt;-----------------------------------------------------

This function is used by select_one() to determine if one of a list of alias parameters is in the argument list
provided by the template.

Input:
	args  pointer to the arguments table from calling template
	alias  one of the list of possible aliases in the aliases lists from Module:Citation/CS1/Configuration
	index  for enumerated parameters, identifies which one
	enumerated  true/false flag used choose how enumerated aliases are examined
	value  value associated with an alias that has previously been selected; nil if not yet selected
	selected  the alias that has previously been selected; nil if not yet selected
	error_list  list of aliases that are duplicates of the alias already selected

Returns:
	value  value associated with alias we selected or that was previously selected or nil if an alias not yet selected
	selected  the alias we selected or the alias that was previously selected or nil if an alias not yet selected

]]

local function is_alias_used (args, alias, index, enumerated, value, selected, error_list)
	if enumerated then															-- is this a test for an enumerated parameters?
		alias = alias:gsub ('#', index);										-- replace '#' with the value in index
	else
		alias = alias:gsub ('#', '');											-- remove '#' if it exists
	end

	if is_set(args[alias]) then													-- alias is in the template's argument list
		if value ~= nil and selected ~= alias then								-- if we have already selected one of the aliases
			local skip;
			for _, v in ipairs(error_list) do									-- spin through the error list to see if we've added this alias
				if v == alias then
					skip = true;
					break;														-- has been added so stop looking 
				end
			end
			if not skip then													-- has not been added so
				table.insert( error_list, alias );								-- add error alias to the error list
			end
		else
			value = args[alias];												-- not yet selected an alias, so select this one
			selected = alias;
		end
	end
	return value, selected;														-- return newly selected alias, or previously selected alias
end


--[[--------------------------&lt; A D D _ M A I N T _ C A T &gt;------------------------------------------------------

Adds a category to z.maintenance_cats using names from the configuration file with additional text if any.
To prevent duplication, the added_maint_cats table lists the categories by key that have been added to z.maintenance_cats.

]]

local added_maint_cats = {}														-- list of maintenance categories that have been added to z.maintenance_cats
local function add_maint_cat (key, arguments)
	if not added_maint_cats [key] then
		added_maint_cats [key] = true;											-- note that we've added this category
		table.insert( z.maintenance_cats, substitute (cfg.maint_cats [key], arguments));	-- make name then add to table
	end
end


--[[--------------------------&lt; S A F E _ F O R _ I T A L I C S &gt;----------------------------------------------

Protects a string that will be wrapped in wiki italic markup '' ... ''

Note: We cannot use &lt;i&gt; for italics, as the expected behavior for italics specified by ''...'' in the title is that
they will be inverted (i.e. unitalicized) in the resulting references.  In addition, &lt;i&gt; and '' tend to interact
poorly under Mediawiki's HTML tidy.

]]

local function safe_for_italics( str )
	if not is_set(str) then
		return str;
	else
		if str:sub(1,1) == &quot;'&quot; then str = &quot;&lt;span&gt;&lt;/span&gt;&quot; .. str; end
		if str:sub(-1,-1) == &quot;'&quot; then str = str .. &quot;&lt;span&gt;&lt;/span&gt;&quot;; end
		
		-- Remove newlines as they break italics.
		return str:gsub( '\n', ' ' );
	end
end


--[[--------------------------&lt; W R A P _ S T Y L E &gt;----------------------------------------------------------

Applies styling to various parameters.  Supplied string is wrapped using a message_list configuration taking one
argument; protects italic styled parameters.  Additional text taken from citation_config.presentation - the reason
this function is similar to but separate from wrap_msg().

]]

local function wrap_style (key, str)
	if not is_set( str ) then
		return &quot;&quot;;
	elseif in_array( key, { 'italic-title', 'trans-italic-title' } ) then
		str = safe_for_italics( str );
	end

	return substitute( cfg.presentation[key], {str} );
end


--[[--------------------------&lt; S E L E C T _ O N E &gt;----------------------------------------------------------

Chooses one matching parameter from a list of parameters to consider.  The list of parameters to consider is just
names.  For parameters that may be enumerated, the position of the numerator in the parameter name is identified
by the '#' so |author-last1= and |author1-last= are represented as 'author-last#' and 'author#-last'.

Because enumerated parameter |&lt;param&gt;1= is an alias of |&lt;param&gt;= we must test for both possibilities.


Generates an error if more than one match is present.

]]

local function select_one( args, aliases_list, error_condition, index )
	local value = nil;															-- the value assigned to the selected parameter
	local selected = '';														-- the name of the parameter we have chosen
	local error_list = {};

	if index ~= nil then index = tostring(index); end

	for _, alias in ipairs( aliases_list ) do									-- for each alias in the aliases list
		if alias:match ('#') then												-- if this alias can be enumerated
			if '1' == index then												-- when index is 1 test for enumerated and non-enumerated aliases
				value, selected = is_alias_used (args, alias, index, false, value, selected, error_list);	-- first test for non-enumerated alias
			end
			value, selected = is_alias_used (args, alias, index, true, value, selected, error_list);		-- test for enumerated alias
		else
			value, selected = is_alias_used (args, alias, index, false, value, selected, error_list);		--test for non-enumerated alias
		end
	end

	if #error_list &gt; 0 and 'none' ~= error_condition then						-- for cases where this code is used outside of extract_names()
		local error_str = &quot;&quot;;
		for _, k in ipairs( error_list ) do
			if error_str ~= &quot;&quot; then error_str = error_str .. cfg.messages['parameter-separator'] end
			error_str = error_str .. wrap_style ('parameter', k);
		end
		if #error_list &gt; 1 then
			error_str = error_str .. cfg.messages['parameter-final-separator'];
		else
			error_str = error_str .. cfg.messages['parameter-pair-separator'];
		end
		error_str = error_str .. wrap_style ('parameter', selected);
		table.insert( z.message_tail, { set_error( error_condition, {error_str}, true ) } );
	end
	
	return value, selected;
end


--[=[-------------------------&lt; R E M O V E _ W I K I _ L I N K &gt;----------------------------------------------

Gets the display text from a wikilink like [[A|B]] or [[B]] gives B

]=]

local function remove_wiki_link (str)
	return (str:gsub( &quot;%[%[([^%[%]]*)%]%]&quot;, function(l)
		return l:gsub( &quot;^[^|]*|(.*)$&quot;, &quot;%1&quot; ):gsub(&quot;^%s*(.-)%s*$&quot;, &quot;%1&quot;);
	end));
end


--[[--------------------------&lt; S E T _ S E L E C T E D _ M O D U L E S &gt;--------------------------------------

Sets local cfg table to same (live or sandbox) as that used by the other modules.

]]

local function set_selected_modules (cfg_table_ptr)
	cfg = cfg_table_ptr;
end



return {																		-- return exported functions and tables
	is_set = is_set,
	in_array = in_array,
	substitute = substitute,
	error_comment = error_comment,
	set_error = set_error,
	select_one = select_one,
	add_maint_cat = add_maint_cat,
	wrap_style = wrap_style;
	safe_for_italics = safe_for_italics;
	remove_wiki_link = remove_wiki_link;
	set_selected_modules = set_selected_modules;
	z = z,
	}</text>
      <sha1>pvch8640xcg83okjfikzjpcsn9567i3</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Citation/CS1/Whitelist</title>
    <ns>828</ns>
    <id>39013723</id>
    <revision>
      <id>777956977</id>
      <parentid>777799226</parentid>
      <timestamp>2017-04-30T09:19:28Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <comment>unsupport |ARXIV= and |BIBCODE=;</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="18820">
--[[--------------------------&lt; P A R A M E T E R S   N O T   S U P P O R T E D &gt;------------------------------

This is a list of parameters that once were but now are no longer supported:

	['albumlink'] = nil,			-- unique alias of titlelink used by old cite AV media notes
	['albumtype'] = nil,			-- controled inappropriate functionality in the old cite AV media notes
	['artist'] = nil,				-- unique alias of others used by old cite AV media notes
	['ARXIV'] = nil,				-- not an initialization
	['Author'] = nil,				-- non-standard capitalization
	['authorformat'] = nil,			-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-format'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-name-separator'] = nil,-- primarily used to support Vancouver format which functionality now part of name-list-format
	['author-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['began'] = nil,				-- module handles date ranges; cite episode and cite series
	['BIBCODE'] = nil,				-- not an initialization
	['callsign'] = nil,				-- cite interview removed
	['call-sign'] = nil,			-- cite interview removed
	['chapterlink'] = nil,			-- if ever necessary to link to a chapter article, |chapter= can be wikilinked 
	['chapter-link'] = nil,			-- 
	['city'] = nil,					-- cite interview removed
	['coauthor'] = nil,				-- redundant to |authorn=; not made part of metadata
	['coauthors'] = nil,			-- redundant to |authorn=; not made part of metadata
	['cointerviewers'] = nil,		-- unique alias of others used by old cite interview
	['day'] = nil,					-- deprecated in {{citation/core}} and somehow undeprecated in Module:Citation/CS1 and now finally removed
	['director'] = nil,				-- unique alias of author used by old cite DVD-notes
	['DoiBroken'] = nil,			-- not used, non-standard captialization
	['Editor'] = nil,				-- non-standard capitalization
	['editorformat'] = nil,			-- primarily used to support Vancouver format which functionality now part of name-list-format
	['EditorSurname'] = nil,		-- non-standard capitalization
	['editor-format'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['EditorGiven'] = nil,			-- non-standard capitalization
	['editor-name-separator'] = nil,-- primarily used to support Vancouver format which functionality now part of name-list-format
	['editor-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['Embargo'] = nil,				-- not used, non-standard capitalization
	['ended'] = nil,				-- module handles date ranges; cite episode and cite series
	['month'] = nil,				-- functionality supported by |date=
	['name-separator'] = nil,		-- primarily used to support Vancouver format which functionality now part of name-list-format
	['notestitle'] = nil,			-- unique alias of chapter used by old cite AV media notes
	['PPrefix'] = nil,				-- non-standard capitalization
	['PPPrefix'] = nil,				-- not used, non-standard capitalization
	['pp-prefix'] = nil,			-- not used, not documented
	['p-prefix'] = nil,				-- not used, not documented
	['program'] = nil,				-- cite interview removed
	['publisherid'] = nil,			-- unique alias of id used by old cite AV media notes and old cite DVD-notes
	['Ref'] = nil,					-- non-standard capitalization
	['separator'] = nil,			-- this functionality now provided by |mode=
	['titleyear'] = nil,			-- unique alias of origyear used by old cite DVD-notes

	['Author#'] = nil,				-- non-standard capitalization
	['authors#'] = nil,				-- no need for multiple lists of author names
	['Editor#'] = nil,				-- non-standard capitalization
	['editors#'] = nil,				-- no need for multiple lists of editor names
	['EditorGiven#'] = nil,			-- non-standard capitalization
	['EditorSurname#'] = nil,		-- non-standard capitalization

]]

--[[--------------------------&lt; S U P P O R T E D   P A R A M E T E R S &gt;--------------------------------------

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local whitelist = {}

local basic_arguments = {
	['accessdate'] = true,
	['access-date'] = true,
	['agency'] = true,
	['airdate'] = true,
	['air-date'] = true,
	['archivedate'] = true,
	['archive-date'] = true,
	['archive-format'] = true,
	['archiveurl'] = true,
	['archive-url'] = true,
	['article'] = true,
	['arxiv'] = true,
	['asin'] = true,
	['ASIN'] = true,
	['asin-tld'] = true,
	['ASIN-TLD'] = true,
	['at'] = true,
	['author'] = true,
	['author-first'] = true,
	['author-last'] = true,
	['authorlink'] = true,
	['author-link'] = true,
	['authormask'] = true,
	['author-mask'] = true,
	['authors'] = true,
	['bibcode'] = true,
	['bibcode-access'] = true,
	['biorxiv'] = true,
	['booktitle'] = true,
	['book-title'] = true,
	['cartography'] = true,
	['chapter'] = true,
	['chapter-format'] = true,
	['chapterurl'] = true,
	['chapter-url'] = true,
	['citeseerx'] = true,
	['class'] = true,				-- cite arxiv and arxiv identifiers
	['collaboration'] = true,
	['conference'] = true,
	['conference-format'] = true,
	['conferenceurl'] = true,
	['conference-url'] = true,
	['contribution'] = true,
	['contribution-format'] = true,
	['contributionurl'] = true,
	['contribution-url'] = true,
	['contributor'] = true,
	['contributor-first'] = true,
	['contributor-last'] = true,
	['contributor-given'] = true,
	['contributor-surname'] = true,
	['contributor-link'] = true,
	['contributor-mask'] = true,
	['credits'] = true,				-- cite episode, cite serial
	['date'] = true,
	['deadurl'] = true,
	['dead-url'] = true,
	['degree'] = true,
	['department'] = true,
	['df'] = true,
	['dictionary'] = true,
	['displayauthors'] = true,
	['display-authors'] = true,
	['displayeditors'] = true,
	['display-editors'] = true,
	['docket'] = true,
	['doi'] = true,
	['DOI'] = true,
	['doi-access'] = true,
	['doi-broken'] = true,
	['doi_brokendate'] = true,					-- @TODO deprecate underscore version?
	['doi-broken-date'] = true,
	['doi_inactivedate'] = true,				-- @TODO deprecate underscore version?
	['doi-inactive-date'] = true,
	['edition'] = true,
	['editor'] = true,
	['editor-first'] = true,
	['editor-given'] = true,
	['editor-last'] = true,
	['editorlink'] = true,
	['editor-link'] = true,
	['editormask'] = true,
	['editor-mask'] = true,
	['editors'] = true,
	['editor-surname'] = true,
	['eissn'] = true,
	['EISSN'] = true,
	['embargo'] = true,
	['encyclopaedia'] = true,
	['encyclopedia'] = true,
	['entry'] = true,
	['episode'] = true,															-- cite serial only TODO: make available to cite episode?
	['episodelink'] = true,														-- cite episode and cite serial
	['episode-link'] = true,													-- cite episode and cite serial
	['eprint'] = true,															-- cite arxiv and arxiv identifiers
	['event'] = true,
	['event-format'] = true,
	['eventurl'] = true,
	['event-url'] = true,
	['first'] = true,
	['format'] = true,
	['given'] = true,
	['hdl'] = true,
	['HDL'] = true,
	['hdl-access'] = true,
	['host'] = true,
	['id'] = true,
	['ID'] = true,
	['ignoreisbnerror'] = true,
	['ignore-isbn-error'] = true,
	['in'] = true,
	['inset'] = true,
	['institution'] = true,
	['interviewer'] = true,
	['interviewer-first'] = true,
	['interviewer-last'] = true,
	['interviewerlink'] = true,
	['interviewer-link'] = true,
	['interviewermask'] = true,
	['interviewer-mask'] = true,
	['interviewers'] = true,
	['isbn'] = true,
	['ISBN'] = true,
	['isbn13'] = true,
	['ISBN13'] = true,
	['ismn'] = true,
	['ISMN'] = true,
	['issn'] = true,
	['ISSN'] = true,
	['issue'] = true,
	['jfm'] = true,
	['JFM'] = true,
	['journal'] = true,
	['jstor'] = true,
	['JSTOR'] = true,
	['jstor-access'] = true,
	['language'] = true,
	['last'] = true,
	['lastauthoramp'] = true,
	['last-author-amp'] = true,
	['laydate'] = true,
	['lay-date'] = true,
	['laysource'] = true,
	['lay-source'] = true,
	['laysummary'] = true,
	['lay-summary'] = true,
	['lay-format'] = true,
	['layurl'] = true,
	['lay-url'] = true,
	['lccn'] = true,
	['LCCN'] = true,
	['location'] = true,
	['magazine'] = true,
	['mailinglist'] = true,				-- cite mailing list only
	['mailing-list'] = true,			-- cite mailing list only
	['map'] = true,						-- cite map only
	['map-format'] = true,				-- cite map only
	['mapurl'] = true,					-- cite map only
	['map-url'] = true,					-- cite map only
	['medium'] = true,
	['message-id'] = true,			-- cite newsgroup
	['minutes'] = true,
	['mode'] = true,
	['mr'] = true,
	['MR'] = true,
	['name-list-format'] = true,
	['network'] = true,
	['newsgroup'] = true,
	['newspaper'] = true,
	['nocat'] = true,
	['no-cat'] = true,
	['nopp'] = true,
	['no-pp'] = true,
	['notracking'] = true,
	['no-tracking'] = true,
	['number'] = true,
	['oclc'] = true,
	['OCLC'] = true,
	['ol'] = true,
	['OL'] = true,
	['ol-access'] = true,
	['origyear'] = true,
	['orig-year'] = true,
	['osti'] = true,
	['OSTI'] = true,
	['osti-access'] = true,
	['others'] = true,
	['p'] = true,
	['page'] = true,
	['pages'] = true,
	['people'] = true,
	['periodical'] = true,
	['place'] = true,
	['pmc'] = true,
	['PMC'] = true,
	['pmid'] = true,
	['PMID'] = true,
	['postscript'] = true,
	['pp'] = true,
	['publicationdate'] = true,
	['publication-date'] = true,
	['publicationplace'] = true,
	['publication-place'] = true,
	['publisher'] = true,
	['quotation'] = true,
	['quote'] = true,
	['ref'] = true,
	['registration'] = true,
	['rfc'] = true,
	['RFC'] = true,
	['scale'] = true,
	['script-chapter'] = true,
	['script-title'] = true,
	['season'] = true,
	['section'] = true,
	['section-format'] = true,
	['sections'] = true,					-- cite map only
	['sectionurl'] = true,
	['section-url'] = true,
	['series'] = true,
	['serieslink'] = true,
	['series-link'] = true,
	['seriesno'] = true,
	['series-no'] = true,
	['seriesnumber'] = true,
	['series-number'] = true,
	['series-separator'] = true,
	['sheet'] = true,															-- cite map only
	['sheets'] = true,															-- cite map only
	['ssrn'] = true,
	['SSRN'] = true,
	['station'] = true,
	['subject'] = true,
	['subjectlink'] = true,
	['subject-link'] = true,
	['subscription'] = true,
	['surname'] = true,
	['template doc demo'] = true,
	['template-doc-demo'] = true,
	['time'] = true,
	['timecaption'] = true,
	['time-caption'] = true,
	['title'] = true,
	['titlelink'] = true,
	['title-link'] = true,
	['trans_chapter'] = true,
	['trans-chapter'] = true,
	['trans-map'] = true,
	['transcript'] = true,
	['transcript-format'] = true,
	['transcripturl'] = true,
	['transcript-url'] = true,
	['trans_title'] = true,
	['trans-title'] = true,
	['translator'] = true,
	['translator-first'] = true,
	['translator-last'] = true,
	['translator-given'] = true,
	['translator-surname'] = true,
	['translator-link'] = true,
	['translator-mask'] = true,
	['type'] = true,
	['url'] = true,
	['URL'] = true,
	['url-access'] = true,
	['vauthors'] = true,
	['veditors'] = true,
	['version'] = true,
	['via'] = true,
	['volume'] = true,
	['website'] = true,
	['work'] = true,
	['year'] = true,
	['zbl'] = true,
	['ZBL'] = true,
}

local numbered_arguments = {
	['author#'] = true,
	['author-first#'] = true,
	['author#-first'] = true,
	['author-last#'] = true,
	['author#-last'] = true,
	['author-link#'] = true,
	['author#link'] = true,
	['author#-link'] = true,
	['authorlink#'] = true,
	['author-mask#'] = true,
	['author#mask'] = true,
	['author#-mask'] = true,
	['authormask#'] = true,
	['contributor#'] = true,
	['contributor-first#'] = true,
	['contributor#-first'] = true,
	['contributor-last#'] = true,
	['contributor#-last'] = true,
	['contributor-given#'] = true,
	['contributor#-given'] = true,
	['contributor-surname#'] = true,
	['contributor#-surname'] = true,
	['contributor-link#'] = true,
	['contributor#-link'] = true,
	['contributor-mask#'] = true,
	['contributor#-mask'] = true,
	['editor#'] = true,
	['editor-first#'] = true,
	['editor#-first'] = true,
	['editor#-given'] = true,
	['editor-given#'] = true,
	['editor-last#'] = true,
	['editor#-last'] = true,
	['editor-link#'] = true,
	['editor#link'] = true,
	['editor#-link'] = true,
	['editorlink#'] = true,
	['editor-mask#'] = true,
	['editor#mask'] = true,
	['editor#-mask'] = true,
	['editormask#'] = true,
	['editor#-surname'] = true,
	['editor-surname#'] = true,
	['first#'] = true,
	['given#'] = true,
	['interviewer#'] = true,
	['interviewer-first#'] = true,
	['interviewer#-first'] = true,
	['interviewer-last#'] = true,
	['interviewer#-last'] = true,
	['interviewer-link#'] = true,
	['interviewer#-link'] = true,
	['interviewer-mask#'] = true,
	['interviewer#-mask'] = true,
	['last#'] = true,
	['subject#'] = true,
	['subject-link#'] = true,
	['subject#link'] = true,
	['subject#-link'] = true,
	['subjectlink#'] = true,
	['surname#'] = true,
	['translator#'] = true,
	['translator-first#'] = true,
	['translator#-first'] = true,
	['translator-last#'] = true,
	['translator#-last'] = true,
	['translator-given#'] = true,
	['translator#-given'] = true,
	['translator-surname#'] = true,
	['translator#-surname'] = true,
	['translator-link#'] = true,
	['translator#-link'] = true,
	['translator-mask#'] = true,
	['translator#-mask'] = true,
}

--[[--------------------------&lt; C I T E   A R X I V   S U P P O R T E D   P A R A M E T E R S &gt;----------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite arxiv template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

--[[
This is a list of parameters that once were but now are no longer supported:
	['ARXIV'] = nil,				-- not an initialization
	['version'] = nil,				-- this is the cite arxiv parameter; |version= still supported by other cs1|2 templates

]]

local arxiv_basic_arguments = {
	['arxiv'] = true,
	['class'] = true,															-- cite arxiv and arxiv identifiers
	['eprint'] = true,															-- cite arxiv and arxiv identifiers
}


--[[--------------------------&lt; C I T E   B I O R X I V   S U P P O R T E D   P A R A M E T E R S &gt;------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite biorxiv template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local biorxiv_basic_arguments = {
	['biorxiv'] = true,
}


--[[--------------------------&lt; C I T E   C I T E S E E R X   S U P P O R T E D   P A R A M E T E R S &gt;--------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite citeseerx template.  This method might be expanded to other templates being considered.

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local citeseerx_basic_arguments = {
	['citeseerx'] = true,
}


--[[--------------------------&lt; L I M I T E D   S U P P O R T E D   P A R A M E T E R S &gt;----------------------

This is an experiment that attempts to use validate() and a limited list of valid parameters to validate the
parameters provided in a cite arxiv, cite biorxiv, or cite citeseerx templates.  These parameters are common to
all three templates

Because a steady-state signal conveys no useful information, whitelist.basic_arguments[] list items can have three values:
	true - these parameters are valid and supported parameters
	false - these parameters are deprecated but still supported
	nil - these parameters are no longer supported (when setting a parameter to nil, leave a comment stating the reasons for invalidating the parameter)
	
]]

local limited_basic_arguments = {
	['at'] = true,
	['author'] = true,
	['author-first'] = true,
	['author-last'] = true,
	['authorlink'] = true,
	['author-link'] = true,
	['authormask'] = true,
	['author-mask'] = true,
	['authors'] = true,
	['collaboration'] = true,
	['date'] = true,
	['df'] = true,
	['display-authors'] = true,
	['first'] = true,
	['given'] = true,
	['language'] = true,
	['last'] = true,
	['lastauthoramp'] = true,
	['last-author-amp'] = true,
	['mode'] = true,
	['name-list-format'] = true,
	['nocat'] = true,
	['no-cat'] = true,
	['notracking'] = true,
	['no-tracking'] = true,
	['p'] = true,
	['page'] = true,
	['pages'] = true,
	['postscript'] = true,
	['pp'] = true,
	['quotation'] = true,
	['quote'] = true,
	['ref'] = true,
	['surname'] = true,
	['template doc demo'] = true,
	['template-doc-demo'] = true,
	['title'] = true,
	['url'] = true,
	['URL'] = true,
	['vauthors'] = true,
	['year'] = true,
}
local limited_numbered_arguments = {
	['author#'] = true,
	['author-first#'] = true,
	['author#-first'] = true,
	['author-last#'] = true,
	['author#-last'] = true,
	['author-link#'] = true,
	['author#link'] = true,
	['author#-link'] = true,
	['authorlink#'] = true,
	['author-mask#'] = true,
	['author#mask'] = true,
	['author#-mask'] = true,
	['authormask#'] = true,
	['first#'] = true,
	['given#'] = true,
	['last#'] = true,
	['surname#'] = true,
}

return {
	basic_arguments = basic_arguments,
	numbered_arguments = numbered_arguments,
	limited_basic_arguments = limited_basic_arguments,
	limited_numbered_arguments = limited_numbered_arguments,
	arxiv_basic_arguments = arxiv_basic_arguments,
	biorxiv_basic_arguments = biorxiv_basic_arguments,
	citeseerx_basic_arguments = citeseerx_basic_arguments
};</text>
      <sha1>jofaptxmpph8fnllpe14li5b6y100zo</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert</title>
    <ns>828</ns>
    <id>38570716</id>
    <revision>
      <id>795876376</id>
      <parentid>788386378</parentid>
      <timestamp>2017-08-17T01:39:24Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="133739">-- Convert a value from one unit of measurement to another.
-- Example: {{convert|123|lb|kg}} --&gt; 123 pounds (56 kg)
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.

local MINUS = ''  -- Unicode U+2212 MINUS SIGN (UTF-8: e2 88 92)
local abs = math.abs
local floor = math.floor
local format = string.format
local log10 = math.log10
local ustring = mw.ustring
local ulen = ustring.len
local usub = ustring.sub

-- Configuration options to keep magic values in one location.
-- Conversion data and message text are defined in separate modules.
local config, maxsigfig
local numdot  -- must be '.' or ',' or a character which works in a regex
local numsep, numsep_remove, numsep_remove2
local data_code, all_units
local text_code
local varname        -- can be a code to use variable names that depend on value
local from_en_table  -- to translate an output string of en digits to local language
local to_en_table    -- to translate an input string of digits in local language to en
-- Use translation_table in convert/text to change the following.
local en_default           -- true uses lang=en unless convert has lang=local or local digits
local group_method = 3     -- code for how many digits are in a group
local per_word = 'per'     -- for units like &quot;liters per kilometer&quot;
local plural_suffix = 's'  -- only other useful value is probably '' to disable plural unit names
local omitsep              -- true to omit separator before local symbol/name

-- All units should be defined in the data module. However, to cater for quick changes
-- and experiments, any unknown unit is looked up in an extra data module, if it exists.
-- That module would be transcluded in only a small number of pages, so there should be
-- little server overhead from making changes, and changes should propagate quickly.
local extra_module  -- name of module with extra units
local extra_units   -- nil or table of extra units from extra_module

-- Some options in the invoking template can set variables used later in the module.
local currency_text  -- for a user-defined currency symbol: {{convert|12|$/ha|$=}} (euro replaces dollar)

local function from_en(text)
	-- Input is a string representing a number in en digits with '.' decimal mark,
	-- without digit grouping (which is done just after calling this).
	-- Return the translation of the string with numdot and digits in local language.
	if numdot ~= '.' then
		text = text:gsub('%.', numdot)
	end
	if from_en_table then
		text = text:gsub('%d', from_en_table)
	end
	return text
end

local function to_en(text)
	-- Input is a string representing a number in the local language with
	-- an optional numdot decimal mark and numsep digit grouping.
	-- Return the translation of the string with '.' mark and en digits,
	-- and no separators (they have to be removed here to handle cases like
	-- numsep = '.' and numdot = ',' with input &quot;1.234.567,8&quot;).
	if to_en_table then
		text = ustring.gsub(text, '%d', to_en_table)
	end
	if numsep_remove then
		text = text:gsub(numsep_remove, '')
	end
	if numsep_remove2 then
		text = text:gsub(numsep_remove2, '')
	end
	if numdot ~= '.' then
		text = text:gsub(numdot, '.')
	end
	return text
end

local function decimal_mark(text)
	-- Return ',' if text probably is using comma for decimal mark, or has no decimal mark.
	-- Return '.' if text probably is using dot for decimal mark.
	-- Otherwise return nothing (decimal mark not known).
	if not text:find('[.,]') then return ',' end
	text = text:gsub('^%-', ''):gsub('%+%d+/%d+$', ''):gsub('[Ee]%-?%d+$', '')
	local decimal =
		text:match('^0?([.,])%d+$') or
		text:match('%d([.,])%d?%d?$') or
		text:match('%d([.,])%d%d%d%d+$')
	if decimal then return decimal end
	if text:match('%.%d+%.') then return ',' end
	if text:match('%,%d+,') then return '.' end
end

local add_warning, with_separator  -- forward declarations
local function to_en_with_check(text, parms)
	-- Version of to_en() for a wiki using numdot = ',' and numsep = '.' to check
	-- text (an input number as a string) which might have been copied from enwiki.
	-- For example, in '1.234' the '.' could be a decimal mark or a group separator.
	-- From viwiki.
	if to_en_table then
		text = ustring.gsub(text, '%d', to_en_table)
	end
	if decimal_mark(text) == '.' then
		local original = text
		text = text:gsub(',', '')  -- for example, interpret &quot;1,234.5&quot; as an enwiki value
		if parms then
			add_warning(parms, 0, 'cvt_enwiki_num', original, with_separator({}, text))
		end
	else
		if numsep_remove then
			text = text:gsub(numsep_remove, '')
		end
		if numsep_remove2 then
			text = text:gsub(numsep_remove2, '')
		end
		if numdot ~= '.' then
			text = text:gsub(numdot, '.')
		end
	end
	return text
end

local function omit_separator(id)
	-- Return true if there should be no separator before id (a unit symbol or name).
	-- For zhwiki, there should be no separator if id uses local characters.
	-- The following kludge should be a sufficient test.
	if omitsep then
		if id:sub(1, 2) == '-{' then  -- for &quot;-{...}-&quot; content language variant
			return true
		end
		if id:byte() &gt; 127 then
			local first = usub(id, 1, 1)
			if first ~= '' and first ~= '' and first ~= '' then
				return true
			end
		end
	end
	return id:sub(1, 1) == '/'  -- no separator before units like &quot;/ha&quot;
end

local spell_module  -- name of module that can spell numbers
local speller       -- function from that module to handle spelling (set if needed)
local wikidata_module, wikidata_data_module  -- names of Wikidata modules
local wikidata_code, wikidata_data  -- exported tables from those modules (set if needed)

local function set_config(args)
	-- Set configuration options from template #invoke or defaults.
	config = args
	maxsigfig = config.maxsigfig or 14  -- maximum number of significant figures
	local data_module, text_module
	local sandbox = config.sandbox and ('/' .. config.sandbox) or ''
	data_module = &quot;Module:Convert/data&quot; .. sandbox
	text_module = &quot;Module:Convert/text&quot; .. sandbox
	extra_module = &quot;Module:Convert/extra&quot; .. sandbox
	wikidata_module = &quot;Module:Convert/wikidata&quot; .. sandbox
	wikidata_data_module = &quot;Module:Convert/wikidata/data&quot; .. sandbox
	spell_module = &quot;Module:ConvertNumeric&quot;
	data_code = mw.loadData(data_module)
	text_code = mw.loadData(text_module)
	all_units = data_code.all_units
	local translation = text_code.translation_table
	if translation then
		numdot = translation.numdot
		numsep = translation.numsep
		if numdot == ',' and numsep == '.' then
			if text_code.all_messages.cvt_enwiki_num then
				to_en = to_en_with_check
			end
		end
		if translation.group then
			group_method = translation.group
		end
		if translation.per_word then
			per_word = translation.per_word
		end
		if translation.plural_suffix then
			plural_suffix = translation.plural_suffix
		end
		varname = translation.varname
		from_en_table = translation.from_en
		local use_workaround = true
		if use_workaround then
			-- 2013-07-05 workaround bug by making a copy of the required table.
			-- mw.ustring.gsub fails with a table (to_en_table) as the replacement,
			-- if the table is accessed via mw.loadData.
			local source = translation.to_en
			if source then
				to_en_table = {}
				for k, v in pairs(source) do
					to_en_table[k] = v
				end
			end
		else
			to_en_table = translation.to_en
		end
		if translation.lang == 'en default' then
			en_default = true  -- for hiwiki
		end
		omitsep = translation.omitsep  -- for zhwiki
	end
	numdot = config.numdot or numdot or '.'  -- decimal mark before fractional digits
	numsep = config.numsep or numsep or ','  -- group separator for numbers
	-- numsep should be ',' or '.' or '' or '&amp;nbsp;' or a Unicode character.
	-- numsep_remove must work in a regex to identify separators to be removed.
	if numsep ~= '' then
		numsep_remove = (numsep == '.') and '%.' or numsep
	end
	if numsep ~= ',' and numdot ~= ',' then
		numsep_remove2 = ','  -- so numbers copied from enwiki will work
	end
end

local function collection()
	-- Return a table to hold items.
	return {
		n = 0,
		add = function (self, item)
			self.n = self.n + 1
			self[self.n] = item
		end,
	}
end

local function divide(numerator, denominator)
	-- Return integers quotient, remainder resulting from dividing the two
	-- given numbers, which should be unsigned integers.
	local quotient, remainder = floor(numerator / denominator), numerator % denominator
	if not (0 &lt;= remainder and remainder &lt; denominator) then
		-- Floating point limits may need this, as in {{convert|160.02|Ym|ydftin}}.
		remainder = 0
	end
	return quotient, remainder
end

local function split(text, delimiter)
	-- Return a numbered table with fields from splitting text.
	-- The delimiter is used in a regex without escaping (for example, '.' would fail).
	-- Each field has any leading/trailing whitespace removed.
	local t = {}
	text = text .. delimiter  -- to get last item
	for item in text:gmatch('%s*(.-)%s*' .. delimiter) do
		table.insert(t, item)
	end
	return t
end

local function strip(text)
	-- If text is a string, return its content with no leading/trailing
	-- whitespace. Otherwise return nil (a nil argument gives a nil result).
	if type(text) == 'string' then
		return text:match(&quot;^%s*(.-)%s*$&quot;)
	end
end

local function table_len(t)
	-- Return length (&lt;100) of a numbered table to replace #t which is
	-- documented to not work if t is accessed via mw.loadData().
	for i = 1, 100 do
		if t[i] == nil then
			return i - 1
		end
	end
end

local function wanted_category(catkey, catsort, want_warning)
	-- Return message category if it is wanted in current namespace,
	-- otherwise return ''.
	local cat
	local title = mw.title.getCurrentTitle()
	if title then
		local nsdefault = '0'  -- default namespace: '0' = article; '0,10' = article and template
		local namespace = title.namespace
		for _, v in ipairs(split(config.nscat or nsdefault, ',')) do
			if namespace == tonumber(v) then
				cat = text_code.all_categories[want_warning and 'warning' or catkey]
				if catsort and catsort ~= '' and cat:sub(-2) == ']]' then
					cat = cat:sub(1, -3) .. '|' .. mw.text.nowiki(usub(catsort, 1, 20)) .. ']]'
				end
				break
			end
		end
	end
	return cat or ''
end

local function message(parms, mcode, is_warning)
	-- Return wikitext for an error message, including category if specified
	-- for the message type.
	-- mcode = numbered table specifying the message:
	--    mcode[1] = 'cvt_xxx' (string used as a key to get message info)
	--    mcode[2] = 'parm1' (string to replace '$1' if any in message)
	--    mcode[3] = 'parm2' (string to replace '$2' if any in message)
	--    mcode[4] = 'parm3' (string to replace '$3' if any in message)
	local msg
	if type(mcode) == 'table' then
		if mcode[1] == 'cvt_no_output' then
			-- Some errors should cause convert to output an empty string,
			-- for example, for an optional field in an infobox.
			return ''
		end
		msg = text_code.all_messages[mcode[1]]
	end
	parms.have_problem = true
	local function subparm(fmt, ...)
		local rep = {}
		for i, v in ipairs({...}) do
			rep['$' .. i] = v
		end
		return (fmt:gsub('$%d+', rep))
	end
	if msg then
		local parts = {}
		local regex, replace = msg.regex, msg.replace
		for i = 1, 3 do
			local limit = 40
			local s = mcode[i + 1]
			if s then
				if regex and replace then
					s = s:gsub(regex, replace)
					limit = nil  -- allow long &quot;should be&quot; messages
				end
				-- Escape user input so it does not break the message.
				-- To avoid tags (like {{convert|1&lt;math&gt;23&lt;/math&gt;|m}}) breaking
				-- the mouseover title, any strip marker starting with char(127) is
				-- replaced with '...' (text not needing i18n).
				local append
				local pos = s:find(string.char(127), 1, true)
				if pos then
					append = '...'
					s = s:sub(1, pos - 1)
				end
				if limit and ulen(s) &gt; limit then
					s = usub(s, 1, limit)
					append = '...'
				end
				s = mw.text.nowiki(s) .. (append or '')
			else
				s = '?'
			end
			parts['$' .. i] = s
		end
		local function ispreview()
			-- Return true if a prominent message should be shown.
			if parms.test == 'preview' or parms.test == 'nopreview' then
				-- For testing, can preview a real message or simulate a preview
				-- when running automated tests.
				return parms.test == 'preview'
			end
			local success, revid = pcall(function ()
				return (parms.frame):preprocess('{{REVISIONID}}') end)
			return success and (revid == '')
		end
		local want_warning = is_warning and
			not config.warnings and  -- show unobtrusive warnings if config.warnings not configured
			not msg.nowarn           -- but use msg settings, not standard warning, if specified
		local title = string.gsub(msg[1] or 'Missing message', '$%d+', parts)
		local text = want_warning and '*' or msg[2] or 'Missing message'
		local cat = wanted_category(msg[3], mcode[2], want_warning)
		local anchor = msg[4] or ''
		local fmtkey = ispreview() and 'cvt_format_preview' or
			(want_warning and 'cvt_format2' or msg.format or 'cvt_format')
		local fmt = text_code.all_messages[fmtkey] or 'convert: bug'
		return subparm(fmt, title:gsub('&quot;', '&amp;quot;'), text, cat, anchor)
	end
	return 'Convert internal error: unknown message'
end

function add_warning(parms, level, key, text1, text2)  -- for forward declaration above
	-- If enabled, add a warning that will be displayed after the convert result.
	-- A higher level is more verbose: more kinds of warnings are displayed.
	-- To reduce output noise, only the first warning is displayed.
	if level &lt;= (tonumber(config.warnings) or 1) then
		if parms.warnings == nil then
			parms.warnings = message(parms, { key, text1, text2 }, true)
		end
	end
end

local function spell_number(parms, inout, number, numerator, denominator)
	-- Return result of spelling (number, numerator, denominator), or
	-- return nil if spelling is not available or not supported for given text.
	-- Examples (each value must be a string or nil):
	--   number  numerator  denominator  output
	--   ------  ---------  -----------  -------------------
	--   &quot;1.23&quot;    nil        nil        one point two three
	--    &quot;1&quot;      &quot;2&quot;        &quot;3&quot;        one and two thirds
	--    nil      &quot;2&quot;        &quot;3&quot;        two thirds
	if not speller then
		local function get_speller(module)
			return require(module).spell_number
		end
		local success
		success, speller = pcall(get_speller, spell_module)
		if not success or type(speller) ~= 'function' then
			add_warning(parms, 1, 'cvt_no_spell', 'spell')
			return nil
		end
	end
	local case
	if parms.spell_upper == inout then
		case = true
		parms.spell_upper = nil  -- only uppercase first word in a multiple unit
	end
	local sp = not parms.opt_sp_us
	local adj = parms.opt_adjectival
	return speller(number, numerator, denominator, case, sp, adj)
end

------------------------------------------------------------------------
-- BEGIN: Code required only for built-in units.
-- LATER: If need much more code, move to another module to simplify this module.
local function speed_of_sound(altitude)
	-- This is for the Mach built-in unit of speed.
	-- Return speed of sound in metres per second at given altitude in feet.
	-- If no altitude given, use default (zero altitude = sea level).
	-- Table gives speed of sound in miles per hour at various altitudes:
	--   altitude = -17,499 to 302,499 feet
	-- mach_table[a + 4] = s where
	--   a = (altitude / 5000) rounded to nearest integer (-3 to 60)
	--   s = speed of sound (mph) at that altitude
	-- LATER: Should calculate result from an interpolation between the next
	-- lower and higher altitudes in table, rather than rounding to nearest.
	-- From: http://www.aerospaceweb.org/question/atmosphere/q0112.shtml
	local mach_table = {                                                       -- a =
		799.5, 787.0, 774.2, 761.207051,                                       -- -3 to  0
		748.0, 734.6, 721.0, 707.0, 692.8, 678.3, 663.5, 660.1, 660.1, 660.1,  --  1 to 10
		660.1, 660.1, 660.1, 662.0, 664.3, 666.5, 668.9, 671.1, 673.4, 675.6,  -- 11 to 20
		677.9, 683.7, 689.9, 696.0, 702.1, 708.1, 714.0, 719.9, 725.8, 731.6,  -- 21 to 30
		737.3, 737.7, 737.7, 736.2, 730.5, 724.6, 718.8, 712.9, 707.0, 701.1,  -- 31 to 40
		695.0, 688.9, 682.8, 676.6, 670.4, 664.1, 657.8, 652.9, 648.3, 643.7,  -- 41 to 50
		639.1, 634.4, 629.6, 624.8, 620.0, 615.2, 613.2, 613.2, 613.2, 613.5,  -- 51 to 60
	}
	altitude = altitude or 0
	local a = (altitude &lt; 0) and -altitude or altitude
	a = floor(a / 5000 + 0.5)
	if altitude &lt; 0 then
		a = -a
	end
	if a &lt; -3 then
		a = -3
	elseif a &gt; 60 then
		a = 60
	end
	return mach_table[a + 4] * 0.44704  -- mph converted to m/s
end
-- END: Code required only for built-in units.
------------------------------------------------------------------------

local function get_range(word)
	-- Return a range (string or table) corresponding to word (like &quot;to&quot;),
	-- or return nil if not a range word.
	local ranges = text_code.ranges
	return ranges.types[word] or ranges.types[ranges.aliases[word]]
end

local function check_mismatch(unit1, unit2)
	-- If unit1 cannot be converted to unit2, return an error message table.
	-- This allows conversion between units of the same type, and between
	-- Nm (normally torque) and ftlb (energy), as in gun-related articles.
	-- This works because Nm is the base unit (scale = 1) for both the
	-- primary type (torque), and the alternate type (energy, where Nm = J).
	-- A match occurs if the primary types are the same, or if unit1 matches
	-- the alternate type of unit2, and vice versa. That provides a whitelist
	-- of which conversions are permitted between normally incompatible types.
	if unit1.utype == unit2.utype or
		(unit1.utype == unit2.alttype and unit1.alttype == unit2.utype) then
		return nil
	end
	return { 'cvt_mismatch', unit1.utype, unit2.utype }
end

local function override_from(out_table, in_table, fields)
	-- Copy the specified fields from in_table to out_table, but do not
	-- copy nil fields (keep any corresponding field in out_table).
	for _, field in ipairs(fields) do
		if in_table[field] then
			out_table[field] = in_table[field]
		end
	end
end

local function shallow_copy(t)
	-- Return a shallow copy of table t.
	-- Do not need the features and overhead of the Scribunto mw.clone().
	local result = {}
	for k, v in pairs(t) do
		result[k] = v
	end
	return result
end

local unit_mt = {
	-- Metatable to get missing values for a unit that does not accept SI prefixes.
	-- Warning: The boolean value 'false' is returned for any missing field
	-- so __index is not called twice for the same field in a given unit.
	__index = function (self, key)
		local value
		if key == 'name1' or key == 'sym_us' then
			value = self.symbol
		elseif key == 'name2' then
			value = self.name1 .. plural_suffix
		elseif key == 'name1_us' then
			value = self.name1
			if not rawget(self, 'name2_us') then
				-- If name1_us is 'foot', do not make name2_us by appending plural_suffix.
				self.name2_us = self.name2
			end
		elseif key == 'name2_us' then
			local raw1_us = rawget(self, 'name1_us')
			if raw1_us then
				value = raw1_us .. plural_suffix
			else
				value = self.name2
			end
		elseif key == 'link' then
			value = self.name1
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local function prefixed_name(unit, name, index)
	-- Return unit name with SI prefix inserted at correct position.
	-- index = 1 (name1), 2 (name2), 3 (name1_us), 4 (name2_us).
	-- The position is a byte (not character) index, so use Lua's sub().
	local pos = rawget(unit, 'prefix_position')
	if type(pos) == 'string' then
		pos = tonumber(split(pos, ',')[index])
	end
	if pos then
		return name:sub(1, pos - 1) .. unit.si_name .. name:sub(pos)
	end
	return unit.si_name .. name
end

local unit_prefixed_mt = {
	-- Metatable to get missing values for a unit that accepts SI prefixes.
	-- Before use, fields si_name, si_prefix must be defined.
	-- The unit must define _symbol, _name1 and
	-- may define _sym_us, _name1_us, _name2_us
	-- (_sym_us, _name2_us may be defined for a language using sp=us
	-- to refer to a variant unrelated to U.S. units).
	__index = function (self, key)
		local value
		if key == 'symbol' then
			value = self.si_prefix .. self._symbol
		elseif key == 'sym_us' then
			value = rawget(self, '_sym_us')
			if value then
				value = self.si_prefix .. value
			else
				value = self.symbol
			end
		elseif key == 'name1' then
			value = prefixed_name(self, self._name1, 1)
		elseif key == 'name2' then
			value = rawget(self, '_name2')
			if value then
				value = prefixed_name(self, value, 2)
			else
				value = self.name1 .. plural_suffix
			end
		elseif key == 'name1_us' then
			value = rawget(self, '_name1_us')
			if value then
				value = prefixed_name(self, value, 3)
			else
				value = self.name1
			end
		elseif key == 'name2_us' then
			value = rawget(self, '_name2_us')
			if value then
				value = prefixed_name(self, value, 4)
			elseif rawget(self, '_name1_us') then
				value = self.name1_us .. plural_suffix
			else
				value = self.name2
			end
		elseif key == 'link' then
			value = self.name1
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local unit_per_mt = {
	-- Metatable to get values for a per unit of form &quot;x/y&quot;.
	-- This is never called to determine a unit name or link because per units
	-- are handled as a special case.
	-- Similarly, the default output is handled elsewhere.
	__index = function (self, key)
		local value
		if key == 'symbol' then
			local per = self.per
			local unit1, unit2 = per[1], per[2]
			if unit1 then
				value = unit1[key] .. '/' .. unit2[key]
			else
				value = '/' .. unit2[key]
			end
		elseif key == 'sym_us' then
			value = self.symbol
		elseif key == 'scale' then
			local per = self.per
			local unit1, unit2 = per[1], per[2]
			value = (unit1 and unit1.scale or 1) * self.scalemultiplier / unit2.scale
		else
			value = false
		end
		rawset(self, key, value)
		return value
	end
}

local function make_per(unitcode, unit_table, ulookup)
	-- Return true, t where t is a per unit with unit codes expanded to unit tables,
	-- or return false, t where t is an error message table.
	local result = {
		unitcode = unitcode,
		utype = unit_table.utype,
		per = {}
	}
	override_from(result, unit_table, { 'invert', 'iscomplex', 'default', 'link', 'symbol', 'symlink' })
	result.symbol_raw = (result.symbol or false)  -- to distinguish between a defined exception and a metatable calculation
	local prefix
	for i, v in ipairs(unit_table.per) do
		if i == 1 and v == '' then
			-- First unit symbol can be empty; that gives a nil first unit table.
		elseif i == 1 and text_code.currency[v] then
			prefix = currency_text or v
		else
			local success, t = ulookup(v)
			if not success then return false, t end
			result.per[i] = t
		end
	end
	local multiplier = unit_table.multiplier
	if not result.utype then
		-- Creating an automatic per unit.
		local unit1 = result.per[1]
		local utype = (unit1 and unit1.utype or prefix or '') .. '/' .. result.per[2].utype
		local t = data_code.per_unit_fixups[utype]
		if t then
			if type(t) == 'table' then
				utype = t.utype or utype
				result.link = result.link or t.link
				multiplier = multiplier or t.multiplier
			else
				utype = t
			end
		end
		result.utype = utype
	end
	result.scalemultiplier = multiplier or 1
	result.vprefix = prefix or false  -- set to non-nil to avoid calling __index
	return true, setmetatable(result, unit_per_mt)
end

local function lookup(parms, unitcode, what, utable, fails, depth)
	-- Return true, t where t is a copy of the unit's converter table,
	-- or return false, t where t is an error message table.
	-- Parameter 'what' determines whether combination units are accepted:
	--   'no_combination'  : single unit only
	--   'any_combination' : single unit or combination or output multiple
	--   'only_multiple'   : single unit or output multiple only
	-- Parameter unitcode is a symbol (like 'g'), with an optional SI prefix (like 'kg').
	-- If, for example, 'kg' is in this table, that entry is used;
	-- otherwise the prefix ('k') is applied to the base unit ('g').
	-- If unitcode is a known combination code (and if allowed by what),
	-- a table of output multiple unit tables is included in the result.
	-- For compatibility with the old template, an underscore in a unitcode is
	-- replaced with a space so usage like {{convert|350|board_feet}} works.
	-- Wikignomes may also put two spaces or &quot;&amp;nbsp;&quot; in combinations, so
	-- replace underscore, &quot;&amp;nbsp;&quot;, and multiple spaces with a single space.
	utable = utable or parms.unittable or all_units
	fails = fails or {}
	depth = depth and depth + 1 or 1
	if depth &gt; 9 then
		-- There are ways to mistakenly define units which result in infinite
		-- recursion when lookup() is called. That gives a long delay and very
		-- confusing error messages, so the depth parameter is used as a guard.
		return false, { 'cvt_lookup', unitcode }
	end
	if unitcode == nil or unitcode == '' then
		return false, { 'cvt_no_unit' }
	end
	unitcode = unitcode:gsub('_', ' '):gsub('&amp;nbsp;', ' '):gsub('  +', ' ')
	local function call_make_per(t)
		return make_per(unitcode, t,
			function (ucode) return lookup(parms, ucode, 'no_combination', utable, fails, depth) end
		)
	end
	local t = utable[unitcode]
	if t then
		if t.shouldbe then
			return false, { 'cvt_should_be', t.shouldbe }
		end
		if t.sp_us then
			parms.opt_sp_us = true
		end
		local target = t.target  -- nil, or unitcode is an alias for this target
		if target then
			local success, result = lookup(parms, target, what, utable, fails, depth)
			if not success then return false, result end
			override_from(result, t, { 'customary', 'default', 'link', 'symbol', 'symlink' })
			local multiplier = t.multiplier
			if multiplier then
				result.multiplier = tostring(multiplier)
				result.scale = result.scale * multiplier
			end
			return true, result
		end
		if t.per then
			return call_make_per(t)
		end
		local combo = t.combination  -- nil or a table of unitcodes
		if combo then
			local multiple = t.multiple
			if what == 'no_combination' or (what == 'only_multiple' and not multiple) then
				return false, { 'cvt_bad_unit', unitcode }
			end
			-- Recursively create a combination table containing the
			-- converter table of each unitcode.
			local result = { utype = t.utype, multiple = multiple, combination = {} }
			local cvt = result.combination
			for i, v in ipairs(combo) do
				local success, t = lookup(parms, v, multiple and 'no_combination' or 'only_multiple', utable, fails, depth)
				if not success then return false, t end
				cvt[i] = t
			end
			return true, result
		end
		local result = shallow_copy(t)
		result.unitcode = unitcode
		if result.prefixes then
			result.si_name = ''
			result.si_prefix = ''
			return true, setmetatable(result, unit_prefixed_mt)
		end
		return true, setmetatable(result, unit_mt)
	end
	local SIprefixes = text_code.SIprefixes
	for plen = SIprefixes[1] or 2, 1, -1 do
		-- Look for an SI prefix; should never occur with an alias.
		-- Check for longer prefix first ('dam' is decametre).
		-- SIprefixes[1] = prefix maximum #characters (as seen by mw.ustring.sub).
		local prefix = usub(unitcode, 1, plen)
		local si = SIprefixes[prefix]
		if si then
			local t = utable[usub(unitcode, plen+1)]
			if t and t.prefixes then
				local result = shallow_copy(t)
				result.unitcode = unitcode
				result.si_name = parms.opt_sp_us and si.name_us or si.name
				result.si_prefix = si.prefix or prefix
				result.scale = t.scale * 10 ^ (si.exponent * t.prefixes)
				return true, setmetatable(result, unit_prefixed_mt)
			end
		end
	end
	-- Accept any unit with an engineering notation prefix like &quot;e6cuft&quot;
	-- (million cubic feet), but not chained prefixes like &quot;e3e6cuft&quot;,
	-- and not if the unit is a combination or multiple,
	-- and not if the unit has an offset or is a built-in.
	-- Only en digits are accepted.
	local has_plus = unitcode:find('+', 1, true)
	if not has_plus then
		local exponent, baseunit = unitcode:match('^e(%d+)(.*)')
		if exponent then
			local engscale = text_code.eng_scales[exponent]
			if engscale then
				local success, result = lookup(parms, baseunit, 'no_combination', utable, fails, depth)
				if success and not (result.offset or result.builtin or result.engscale) then
					result.unitcode = unitcode  -- 'e6cuft' not 'cuft'
					result.defkey = unitcode  -- key to lookup default exception
					result.engscale = engscale
					result.scale = result.scale * 10 ^ tonumber(exponent)
					return true, result
				end
			end
		end
	end
	-- Accept user-defined combinations like &quot;acre+m2+ha&quot; or &quot;acre m2 ha&quot; for output.
	-- If '+' is used, each unit code can include a space, and any error is fatal.
	-- If ' ' is used and if each space-separated word is a unit code, it is a combo,
	-- but errors are not fatal so the unit code can be looked up as an extra unit.
	local err_is_fatal
	local combo = collection()
	if has_plus then
		err_is_fatal = true
		for item in (unitcode .. '+'):gmatch('%s*(.-)%s*%+') do
			if item ~= '' then
				combo:add(item)
			end
		end
	elseif unitcode:find('%s') then
		for item in unitcode:gmatch('%S+') do
			combo:add(item)
		end
	end
	if combo.n &gt; 1 then
		local function lookup_combo()
			if what == 'no_combination' or what == 'only_multiple' then
				return false, { 'cvt_bad_unit', unitcode }
			end
			local result = { combination = {} }
			local cvt = result.combination
			for i, v in ipairs(combo) do
				local success, t = lookup(parms, v, 'only_multiple', utable, fails, depth)
				if not success then return false, t end
				if i == 1 then
					result.utype = t.utype
				else
					local mismatch = check_mismatch(result, t)
					if mismatch then
						return false, mismatch
					end
				end
				cvt[i] = t
			end
			return true, result
		end
		local success, result = lookup_combo()
		if success or err_is_fatal then
			return success, result
		end
	end
	-- Look for x/y; split on right-most slash to get scale correct (x/y/z is x/y per z).
	local top, bottom = unitcode:match('^(.-)/([^/]+)$')
	if top and not unitcode:find('e%d') then
		-- If valid, create an automatic per unit for an &quot;x/y&quot; unit code.
		-- The unitcode must not include extraneous spaces.
		-- Engineering notation (apart from at start and which has been stripped before here),
		-- is not supported so do not make a per unit if find text like 'e3' in unitcode.
		local success, result = call_make_per({ per = {top, bottom} })
		if success then
			return true, result
		end
	end
	if not parms.opt_ignore_error and not get_range(unitcode) then
		-- Want the &quot;what links here&quot; list for the extra_module to show only cases
		-- where an extra unit is used, so do not require it if invoked from {{val}}
		-- or if looking up a range word which cannot be a unit.
		if not extra_units then
			local success, extra = pcall(function () return require(extra_module).extra_units end)
			if success and type(extra) == 'table' then
				extra_units = extra
			end
		end
		if extra_units then
			-- A unit in one data table might refer to a unit in the other table, so
			-- switch between them, relying on fails or depth to terminate loops.
			if not fails[unitcode] then
				fails[unitcode] = true
				local other = (utable == all_units) and extra_units or all_units
				local success, result = lookup(parms, unitcode, what, other, fails, depth)
				if success then
					return true, result
				end
			end
		end
	end
	if to_en_table then
		-- At fawiki it is common to translate all digits so a unit like &quot;km2&quot; becomes &quot;km&quot;.
		local en_code = ustring.gsub(unitcode, '%d', to_en_table)
		if en_code ~= unitcode then
			return lookup(parms, en_code, what, utable, fails, depth)
		end
	end
	return false, { 'cvt_unknown', unitcode }
end

local function valid_number(num)
	-- Return true if num is a valid number.
	-- In Scribunto (different from some standard Lua), when expressed as a string,
	-- overflow or other problems are indicated with text like &quot;inf&quot; or &quot;nan&quot;
	-- which are regarded as invalid here (each contains &quot;n&quot;).
	if type(num) == 'number' and tostring(num):find('n', 1, true) == nil then
		return true
	end
end

local function hyphenated(name, parts)
	-- Return a hyphenated form of given name (for adjectival usage).
	-- The name may be linked and the target of the link must not be changed.
	-- Hypothetical examples:
	--   [[long ton|ton]]           [[long ton|ton]]          (no change)
	--   [[tonne|long ton]]         [[tonne|long-ton]]
	--   [[metric ton|long ton]]    [[metric ton|long-ton]]
	--   [[long ton]]               [[long ton|long-ton]]
	-- Input can also have multiple links in a single name like:
	--   [[United States customary units|U.S.]] [[US gallon|gallon]]
	--   [[mile]]s per [[United States customary units|U.S.]] [[quart]]
	--   [[long ton]]s per [[short ton]]
	-- Assume that links cannot be nested (never like &quot;[[abc[[def]]ghi]]&quot;).
	-- This uses a simple and efficient procedure that works for most cases.
	-- Some units (if used) would require more, and can later think about
	-- adding a method to handle exceptions.
	-- The procedure is to replace each space with a hyphen, but
	-- not a space after ')' [for &quot;(pre-1954&amp;nbsp;US) nautical mile&quot;], and
	-- not spaces immediately before '(' or in '(...)' [for cases like
	-- &quot;British thermal unit (ISO)&quot; and &quot;Calorie (International Steam Table)&quot;].
	if name:find(' ', 1, true) then
		if parts then
			local pos
			if name:sub(1, 1) == '(' then
				pos = name:find(')', 1, true)
				if pos then
					return name:sub(1, pos+1) .. name:sub(pos+2):gsub(' ', '-')
				end
			elseif name:sub(-1) == ')' then
				pos = name:find('(', 1, true)
				if pos then
					return name:sub(1, pos-2):gsub(' ', '-') .. name:sub(pos-1)
				end
			end
			return name:gsub(' ', '-')
		end
		parts = collection()
		for before, item, after in name:gmatch('([^[]*)(%[%[[^[]*%]%])([^[]*)') do
			if item:find(' ', 1, true) then
				local prefix
				local plen = item:find('|', 1, true)
				if plen then
					prefix = item:sub(1, plen)
					item = item:sub(plen + 1, -3)
				else
					prefix = item:sub(1, -3) .. '|'
					item = item:sub(3, -3)
				end
				item = prefix .. hyphenated(item, parts) .. ']]'
			end
			parts:add(before:gsub(' ', '-') .. item .. after:gsub(' ', '-'))
		end
		if parts.n == 0 then
			-- No link like &quot;[[...]]&quot; was found in the original name.
			parts:add(hyphenated(name, parts))
		end
		return table.concat(parts)
	end
	return name
end

local function hyphenated_maybe(parms, want_name, sep, id, inout)
	-- Return s, f where
	--   s = id, possibly modified
	--   f = true if hyphenated
	-- Possible modifications: hyphenate; prepend '-'; append mid text.
	if id == nil or id == '' then
		return ''
	end
	local mid = (inout == (parms.opt_flip and 'out' or 'in')) and parms.mid or ''
	if want_name then
		if parms.opt_adjectival then
			return '-' .. hyphenated(id) .. mid, true
		end
		if parms.opt_add_s and id:sub(-1) ~= 's' then
			id = id .. 's'  -- for nowiki
		end
	end
	return sep .. id .. mid
end

local function use_minus(text)
	-- Return text with Unicode minus instead of '-', if present.
	if text:sub(1, 1) == '-' then
		return MINUS .. text:sub(2)
	end
	return text
end

local function digit_groups(parms, text, method)
	-- Return a numbered table of groups of digits (left-to-right, in local language).
	-- Parameter method is a number or nil:
	--   3 for 3-digit grouping (default), or
	--   2 for 3-then-2 grouping (only for digits before decimal mark).
	local len_right
	local len_left = text:find('.', 1, true)
	if len_left then
		len_right = #text - len_left
		len_left = len_left - 1
	else
		len_left = #text
	end
	local twos = method == 2 and len_left &gt; 5
	local groups = collection()
	local run = len_left
	local n
	if run &lt; 4 or (run == 4 and parms.opt_comma5) then
		if parms.opt_gaps then
			n = run
		else
			n = #text
		end
	elseif twos then
		n = run % 2 == 0 and 1 or 2
	else
		n = run % 3 == 0 and 3 or run % 3
	end
	while run &gt; 0 do
		groups:add(n)
		run = run - n
		n = (twos and run &gt; 3) and 2 or 3
	end
	if len_right then
		if groups.n == 0 then
			groups:add(0)
		end
		if parms.opt_gaps and len_right &gt; 3 then
			local want4 = not parms.opt_gaps3  -- true gives no gap before trailing single digit
			local isfirst = true
			run = len_right
			while run &gt; 0 do
				n = (want4 and run == 4) and 4 or (run &gt; 3 and 3 or run)
				if isfirst then
					isfirst = false
					groups[groups.n] = groups[groups.n] + 1 + n
				else
					groups:add(n)
				end
				run = run - n
			end
		else
			groups[groups.n] = groups[groups.n] + 1 + len_right
		end
	end
	local pos = 1
	for i, length in ipairs(groups) do
		groups[i] = from_en(text:sub(pos, pos + length - 1))
		pos = pos + length
	end
	return groups
end

function with_separator(parms, text)  -- for forward declaration above
	-- Input text is a number in en digits with optional '.' decimal mark.
	-- Return an equivalent, formatted for display:
	--   with a custom decimal mark instead of '.', if wanted
	--   with thousand separators inserted, if wanted
	--   digits in local language
	-- The given text is like '123' or '123.' or '12345.6789'.
	-- The text has no sign (caller inserts that later, if necessary).
	-- When using gaps, they are inserted before and after the decimal mark.
	-- Separators are inserted only before the decimal mark.
	-- A trailing dot (as in '123.') is removed because their use appears to
	-- be accidental, and such a number should be shown as '123' or '123.0'.
	-- It is useful for convert to suppress the dot so, for example, '4000.'
	-- is a simple way of indicating that all the digits are significant.
	if text:sub(-1) == '.' then
		text = text:sub(1, -2)
	end
	if #text &lt; 4 or parms.opt_nocomma or numsep == '' then
		return from_en(text)
	end
	local groups = digit_groups(parms, text, group_method)
	if parms.opt_gaps then
		if groups.n &lt;= 1 then
			return groups[1] or ''
		end
		local nowrap = '&lt;span style=&quot;white-space: nowrap&quot;&gt;'
		local gap = '&lt;span style=&quot;margin-left: 0.25em&quot;&gt;'
		local close = '&lt;/span&gt;'
		return nowrap .. groups[1] .. gap .. table.concat(groups, close .. gap, 2, groups.n) .. close .. close
	end
	return table.concat(groups, numsep)
end

-- An input value like 1.23e12 is displayed using scientific notation (1.2310).
-- That also makes the output use scientific notation, except for small values.
-- In addition, very small or very large output values use scientific notation.
-- Use format(fmtpower, significand, '10', exponent) where each argument is a string.
local fmtpower = '%s&lt;span style=&quot;margin:0 .15em 0 .25em&quot;&gt;&lt;/span&gt;%s&lt;sup&gt;%s&lt;/sup&gt;'

local function with_exponent(parms, show, exponent)
	-- Return wikitext to display the implied value in scientific notation.
	-- Input uses en digits; output uses digits in local language.
	return format(fmtpower, with_separator(parms, show), from_en('10'), use_minus(from_en(tostring(exponent))))
end

local function make_sigfig(value, sigfig)
	-- Return show, exponent that are equivalent to the result of
	-- converting the number 'value' (where value &gt;= 0) to a string,
	-- rounded to 'sigfig' significant figures.
	-- The returned items are:
	--   show: a string of digits; no sign and no dot;
	--         there is an implied dot before show.
	--   exponent: a number (an integer) to shift the implied dot.
	-- Resulting value = tonumber('.' .. show) * 10^exponent.
	-- Examples:
	--   make_sigfig(23.456, 3) returns '235', 2 (.235 * 10^2).
	--   make_sigfig(0.0023456, 3) returns '235', -2 (.235 * 10^-2).
	--   make_sigfig(0, 3) returns '000', 1 (.000 * 10^1).
	if sigfig &lt;= 0 then
		sigfig = 1
	elseif sigfig &gt; maxsigfig then
		sigfig = maxsigfig
	end
	if value == 0 then
		return string.rep('0', sigfig), 1
	end
	local exp, fracpart = math.modf(log10(value))
	if fracpart &gt;= 0 then
		fracpart = fracpart - 1
		exp = exp + 1
	end
	local digits = format('%.0f', 10^(fracpart + sigfig))
	if #digits &gt; sigfig then
		-- Overflow (for sigfig=3: like 0.9999 rounding to &quot;1000&quot;; need &quot;100&quot;).
		digits = digits:sub(1, sigfig)
		exp = exp + 1
	end
	assert(#digits == sigfig, 'Bug: rounded number has wrong length')
	return digits, exp
end

-- Fraction output format.
local fracfmt = {
	{ -- Like {{frac}} (fraction slash).
		-- 1/2    : sign, numerator, denominator
		-- 1+2/3  : signed_wholenumber, numerator, denominator
		'&lt;span class=&quot;frac nowrap&quot;&gt;%s&lt;sup&gt;%s&lt;/sup&gt;&amp;frasl;&lt;sub&gt;%s&lt;/sub&gt;&lt;/span&gt;',
		'&lt;span class=&quot;frac nowrap&quot;&gt;%s&lt;span class=&quot;visualhide&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;sup&gt;%s&lt;/sup&gt;&amp;frasl;&lt;sub&gt;%s&lt;/sub&gt;&lt;/span&gt;',
	},
	{ -- Like {{sfrac}} (fraction horizontal bar).
		-- 1//2   : sign, numerator, denominator (sign should probably be before the fraction, but then it can wrap, and html is already too long)
		-- 1+2//3 : signed_wholenumber, numerator, denominator
		'&lt;span class=&quot;sfrac nowrap&quot; style=&quot;display:inline-block; vertical-align:-0.5em; font-size:85%%; text-align:center;&quot;&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em;&quot;&gt;%s%s&lt;/span&gt;&lt;span class=&quot;visualhide&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em; border-top:1px solid;&quot;&gt;%s&lt;/span&gt;&lt;/span&gt;',
		'&lt;span class=&quot;sfrac nowrap&quot;&gt;%s&lt;span class=&quot;visualhide&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;display:inline-block; vertical-align:-0.5em; font-size:85%%; text-align:center;&quot;&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em;&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;visualhide&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;display:block; line-height:1em; padding:0 0.1em; border-top:1px solid;&quot;&gt;%s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;',
	},
}

local function format_fraction(parms, inout, negative, wholestr, numstr, denstr, do_spell, style)
	-- Return wikitext for a fraction, possibly spelled.
	-- Inputs use en digits and have no sign; output uses digits in local language.
	local wikitext
	if not style then
		style = parms.opt_fraction_horizontal and 2 or 1
	end
	if wholestr == '' then
		wholestr = nil
	end
	if wholestr then
		local decorated = with_separator(parms, wholestr)
		if negative then
			decorated = MINUS .. decorated
		end
		local fmt = fracfmt[style][2]
		wikitext = format(fmt, decorated, from_en(numstr), from_en(denstr))
	else
		local sign = negative and MINUS or ''
		wikitext = format(fracfmt[style][1], sign, from_en(numstr), from_en(denstr))
	end
	if do_spell then
		if negative then
			if wholestr then
				wholestr = '-' .. wholestr
			else
				numstr = '-' .. numstr
			end
		end
		wikitext = spell_number(parms, inout, wholestr, numstr, denstr) or wikitext
	end
	return wikitext
end

local function format_number(parms, show, exponent, isnegative)
	-- Parameter show is a string or a table containing strings.
	-- Each string is a formatted number in en digits and optional '.' decimal mark.
	-- A table represents a fraction: integer, numerator, denominator;
	-- if a table is given, exponent must be nil.
	-- Return t where t is a table with fields:
	--   show = wikitext formatted to display implied value
	--          (digits in local language)
	--   is_scientific = true if show uses scientific notation
	--   clean = unformatted show (possibly adjusted and with inserted '.')
	--          (en digits)
	--   sign = '' or MINUS
	--   exponent = exponent (possibly adjusted)
	-- The clean and exponent fields can be used to calculate the
	-- rounded absolute value, if needed.
	--
	-- The value implied by the arguments is found from:
	--   exponent is nil; and
	--   show is a string of digits (no sign), with an optional dot;
	--   show = '123.4' is value 123.4, '1234' is value 1234.0;
	-- or:
	--   exponent is an integer indicating where dot should be;
	--   show is a string of digits (no sign and no dot);
	--   there is an implied dot before show;
	--   show does not start with '0';
	--   show = '1234', exponent = 3 is value 0.1234*10^3 = 123.4.
	--
	-- The formatted result:
	-- * Is for an output value and is spelled if wanted and possible.
	-- * Includes a Unicode minus if isnegative and not spelled.
	-- * Uses a custom decimal mark, if wanted.
	-- * Has digits grouped where necessary, if wanted.
	-- * Uses scientific notation if requested, or for very small or large values
	--   (which forces result to not be spelled).
	-- * Has no more than maxsigfig significant digits
	--   (same as old template and {{#expr}}).
	local xhi, xlo  -- these control when scientific notation (exponent) is used
	if parms.opt_scientific then
		xhi, xlo = 4, 2  -- default for output if input uses e-notation
	elseif parms.opt_scientific_always then
		xhi, xlo = 0, 0  -- always use scientific notation (experimental)
	else
		xhi, xlo = 10, 4  -- default
	end
	local sign = isnegative and MINUS or ''
	local maxlen = maxsigfig
	local tfrac
	if type(show) == 'table' then
		tfrac = show
		show = tfrac.wholestr
		assert(exponent == nil, 'Bug: exponent given with fraction')
	end
	if not tfrac and not exponent then
		local integer, dot, decimals = show:match('^(%d*)(%.?)(.*)')
		if integer == '0' or integer == '' then
			local zeros, figs = decimals:match('^(0*)([^0]?.*)')
			if #figs == 0 then
				if #zeros &gt; maxlen then
					show = '0.' .. zeros:sub(1, maxlen)
				end
			elseif #zeros &gt;= xlo then
				show = figs
				exponent = -#zeros
			elseif #figs &gt; maxlen then
				show = '0.' .. zeros .. figs:sub(1, maxlen)
			end
		elseif #integer &gt;= xhi then
			show = integer .. decimals
			exponent = #integer
		else
			maxlen = maxlen + #dot
			if #show &gt; maxlen then
				show = show:sub(1, maxlen)
			end
		end
	end
	if exponent then
		local function zeros(n)
			return string.rep('0', n)
		end
		if #show &gt; maxlen then
			show = show:sub(1, maxlen)
		end
		if exponent &gt; xhi or exponent &lt;= -xlo or (exponent == xhi and show ~= '1' .. zeros(xhi - 1)) then
			-- When xhi, xlo = 10, 4 (the default), scientific notation is used if the
			-- rounded value satisfies: value &gt;= 1e9 or value &lt; 1e-4 (1e9 = 0.1e10),
			-- except if show is '1000000000' (1e9), for example:
			-- {{convert|1000000000|m|m|sigfig=10}}  1,000,000,000 metres (1,000,000,000 m)
			local significand
			if #show &gt; 1 then
				significand = show:sub(1, 1) .. '.' .. show:sub(2)
			else
				significand = show
			end
			return {
				clean = '.' .. show,
				exponent = exponent,
				sign = sign,
				show = sign .. with_exponent(parms, significand, exponent-1),
				is_scientific = true,
			}
		end
		if exponent &gt;= #show then
			show = show .. zeros(exponent - #show)  -- result has no dot
		elseif exponent &lt;= 0 then
			show = '0.' .. zeros(-exponent) .. show
		else
			show = show:sub(1, exponent) .. '.' .. show:sub(exponent+1)
		end
	end
	local formatted_show
	if tfrac then
		show = tostring(tfrac.value)  -- to set clean in returned table
		formatted_show = format_fraction(parms, 'out', isnegative, tfrac.wholestr, tfrac.numstr, tfrac.denstr, parms.opt_spell_out)
	else
		if isnegative and show:match('^0.?0*$') then
			sign = ''  -- don't show minus if result is negative but rounds to zero
		end
		formatted_show = sign .. with_separator(parms, show)
		if parms.opt_spell_out then
			formatted_show = spell_number(parms, 'out', sign .. show) or formatted_show
		end
	end
	return {
		clean = show,
		sign = sign,
		show = formatted_show,
		is_scientific = false,  -- to avoid calling __index
	}
end

local function extract_fraction(parms, text, negative)
	-- If text represents a fraction, return
	--   value, altvalue, show, denominator
	-- where
	--   value is a number (value of the fraction in argument text)
	--   altvalue is an alternate interpretation of any fraction for the hands
	--        unit where &quot;12.1+3/4&quot; means 12 hands 1.75 inches
	--   show is a string (formatted text for display of an input value,
	--        and is spelled if wanted and possible)
	--   denominator is value of the denominator in the fraction
	-- Otherwise, return nil.
	-- Input uses en digits and '.' decimal mark (input has been translated).
	-- Output uses digits in local language and local decimal mark, if any.
	------------------------------------------------------------------------
	-- Originally this function accepted x+y/z where x, y, z were any valid
	-- numbers, possibly with a sign. For example '1.23e+2+1.2/2.4' = 123.5,
	-- and '2-3/8' = 1.625. However, such usages were found to be errors or
	-- misunderstandings, so since August 2014 the following restrictions apply:
	--   x (if present) is an integer or has a single digit after decimal mark
	--   y and z are unsigned integers
	--   e-notation is not accepted
	-- The overall number can start with '+' or '-' (so '12+3/4' and '+12+3/4'
	-- and '-12-3/4' are valid).
	-- Any leading negative sign is removed by the caller, so only inputs
	-- like the following are accepted here (may have whitespace):
	--   negative = false       false        true (there was a leading '-')
	--   text     = '2/3'       '+2/3'       '2/3'
	--   text     = '1+2/3'     '+1+2/3'     '1-2/3'
	--   text     = '12.3+1/2'  '+12.3+1/2'  '12.3-1/2'
	-- Values like '12.3+1/2' are accepted, but are intended only for use
	-- with the hands unit (not worth adding code to enforce that).
	------------------------------------------------------------------------
	local leading_plus, prefix, numstr, slashes, denstr =
		text:match('^%s*(%+?)%s*(.-)%s*(%d+)%s*(/+)%s*(%d+)%s*$')
	if not leading_plus then
		-- Accept a single U+2044 fraction slash because that may be pasted.
		leading_plus, prefix, numstr, denstr =
			text:match('^%s*(%+?)%s*(.-)%s*(%d+)%s*%s*(%d+)%s*$')
		slashes = '/'
	end
	local numerator = tonumber(numstr)
	local denominator = tonumber(denstr)
	if numerator == nil or denominator == nil or (negative and leading_plus ~= '') then
		return nil
	end
	local whole, wholestr
	if prefix == '' then
		wholestr = ''
		whole = 0
	else
		-- Any prefix must be like '12+' or '12-' (whole number and fraction sign);
		-- '12.3+' and '12.3-' are also accepted (single digit after decimal point)
		-- because '12.3+1/2 hands' is valid (12 hands 3 inches).
		local num1, num2, frac_sign = prefix:match('^(%d+)(%.?%d?)%s*([+%-])$')
		if num1 == nil then return nil end
		if num2 == '' then  -- num2 must be '' or like '.1' but not '.' or '.12'
			wholestr = num1
		else
			if #num2 ~= 2 then return nil end
			wholestr = num1 .. num2
		end
		if frac_sign ~= (negative and '-' or '+') then return nil end
		whole = tonumber(wholestr)
		if whole == nil then return nil end
	end
	local value = whole + numerator / denominator
	if not valid_number(value) then return nil end
	local altvalue = whole + numerator / (denominator * 10)
	local style = #slashes  -- kludge: 1 or 2 slashes can be used to select style
	if style &gt; 2 then style = 2 end
	local wikitext = format_fraction(parms, 'in', negative, leading_plus .. wholestr, numstr, denstr, parms.opt_spell_in, style)
	return value, altvalue, wikitext, denominator
end

local function extract_number(parms, text, another, no_fraction)
	-- Return true, info if can extract a number from text,
	-- where info is a table with the result,
	-- or return false, t where t is an error message table.
	-- Input can use en digits or digits in local language and can
	-- have references at the end. Accepting references is intended
	-- for use in infoboxes with a field for a value passed to convert.
	-- Parameter another = true if the expected value is not the first.
	-- Before processing, the input text is cleaned:
	-- * Any thousand separators (valid or not) are removed.
	-- * Any sign (and optional following whitespace) is replaced with
	--   '-' (if negative) or '' (otherwise).
	--   That replaces Unicode minus with '-'.
	-- If successful, the returned info table contains named fields:
	--   value    = a valid number
	--   altvalue = a valid number, usually same as value but different
	--              if fraction used (for hands unit)
	--   singular = true if value is 1 or -1 (to use singular form of units)
	--   clean    = cleaned text with any separators and sign removed
	--              (en digits and '.' decimal mark)
	--   show     = text formatted for output, possibly with ref strip markers
	--              (digits in local language and custom decimal mark)
	-- The resulting show:
	-- * Is for an input value and is spelled if wanted and possible.
	-- * Has a rounded value, if wanted.
	-- * Has digits grouped where necessary, if wanted.
	-- * If negative, a Unicode minus is used; otherwise the sign is
	--   '+' (if the input text used '+'), or is '' (if no sign in input).
	text = strip(text or '')
	local reference
	local pos = text:find('\127', 1, true)
	if pos then
		local before = text:sub(1, pos - 1)
		local remainder = text:sub(pos)
		local refs = {}
		while #remainder &gt; 0 do
			local ref, spaces
			ref, spaces, remainder = remainder:match('^(\127[^\127]*UNIQ[^\127]*%-ref[^\127]*\127)(%s*)(.*)')
			if ref then
				table.insert(refs, ref)
			else
				refs = {}
				break
			end
		end
		if #refs &gt; 0 then
			text = strip(before)
			reference = table.concat(refs)
		end
	end
	local clean = to_en(text, parms)
	if clean == '' then
		return false, { another and 'cvt_no_num2' or 'cvt_no_num' }
	end
	local isnegative, propersign = false, ''  -- most common case
	local singular, show, denominator
	local value = tonumber(clean)
	local altvalue
	if value then
		local sign = clean:sub(1, 1)
		if sign == '+' or sign == '-' then
			propersign = (sign == '+') and '+' or MINUS
			clean = clean:sub(2)
		end
		if value &lt; 0 then
			isnegative = true
			value = -value
		end
	else
		local valstr
		for _, prefix in ipairs({ '-', MINUS, '&amp;minus;' }) do
			-- Including '-' means inputs like '- 2' (with space) are accepted as -2.
			-- It also sets isnegative in case input is a fraction like '-2-3/4'.
			local plen = #prefix
			if clean:sub(1, plen) == prefix then
				valstr = clean:sub(plen + 1)
				break
			end
		end
		if valstr then
			isnegative = true
			propersign = MINUS
			clean = valstr
			value = tonumber(clean)
		end
		if value == nil then
			if not no_fraction then
				value, altvalue, show, denominator = extract_fraction(parms, clean, isnegative)
			end
			if value == nil then
				return false, { 'cvt_bad_num', text }
			end
			if value &lt;= 1 then
				singular = true  -- for example, &quot; mile&quot; or &quot;one half mile&quot; (singular unit)
			end
		end
	end
	if not valid_number(value) then  -- for example, &quot;1e310&quot; may overflow
		return false, { 'cvt_invalid_num' }
	end
	if show == nil then
		-- clean is a non-empty string with no spaces, and does not represent a fraction,
		-- and value = tonumber(clean) is a number &gt;= 0.
		-- If the input uses e-notation, show will be displayed using a power of ten, but
		-- we use the number as given so it might not be normalized scientific notation.
		-- The input value is spelled if specified so any e-notation is ignored;
		-- that allows input like 2e6 to be spelled as &quot;two million&quot; which works
		-- because the spell module converts '2e6' to '2000000' before spelling.
		local function rounded(value, default, exponent)
			local precision = parms.opt_ri
			if precision then
				local fmt = '%.' .. format('%d', precision) .. 'f'
				local result = fmt:format(tonumber(value) + 2e-14)  -- fudge for some common cases of bad rounding
				if not exponent then
					singular = (tonumber(result) == 1)
				end
				return result
			end
			return default
		end
		singular = (value == 1)
		local scientific
		local significand, exponent = clean:match('^([%d.]+)[Ee]([+%-]?%d+)')
		if significand then
			show = with_exponent(parms, rounded(significand, significand, exponent), exponent)
			scientific = true
		else
			show = with_separator(parms, rounded(value, clean))
		end
		show = propersign .. show
		if parms.opt_spell_in then
			show = spell_number(parms, 'in', propersign .. rounded(value, clean)) or show
			scientific = false
		end
		if scientific then
			parms.opt_scientific = true
		end
	end
	if isnegative and (value ~= 0) then
		value = -value
		altvalue = -(altvalue or value)
	end
	return true, {
		value = value,
		altvalue = altvalue or value,
		singular = singular,
		clean = clean,
		show = show .. (reference or ''),
		denominator = denominator,
	}
end

local function get_number(text)
	-- Return v, f where:
	--   v = nil (text is not a number)
	-- or
	--   v = value of text (text is a number)
	--   f = true if value is an integer
	-- Input can use en digits or digits in local language,
	-- but no separators, no Unicode minus, and no fraction.
	if text then
		local number = tonumber(to_en(text))
		if number then
			local _, fracpart = math.modf(number)
			return number, (fracpart == 0)
		end
	end
end

local function gcd(a, b)
	-- Return the greatest common denominator for the given values,
	-- which are known to be positive integers.
	if a &gt; b then
		a, b = b, a
	end
	if a &lt;= 0 then
		return b
	end
	local r = b % a
	if r &lt;= 0 then
		return a
	end
	if r == 1 then
		return 1
	end
	return gcd(r, a)
end

local function fraction_table(value, denominator)
	-- Return value as a string or a table:
	-- * If result is a string, there is no fraction, and the result
	--   is value formatted as a string of en digits.
	-- * If result is a table, it represents a fraction with named fields:
	--   wholestr, numstr, denstr (strings of en digits for integer, numerator, denominator).
	-- The result is rounded to the nearest multiple of (1/denominator).
	-- If the multiple is zero, no fraction is included.
	-- No fraction is included if value is very large as the fraction would
	-- be unhelpful, particularly if scientific notation is required.
	-- Input value is a non-negative number.
	-- Input denominator is a positive integer for the desired fraction.
	if value &lt;= 0 then
		return '0'
	end
	if denominator &lt;= 0 or value &gt; 1e8 then
		return format('%.2f', value)
	end
	local integer, decimals = math.modf(value)
	local numerator = floor((decimals * denominator) +
		0.5 + 2e-14)  -- add fudge for some common cases of bad rounding
	if numerator &gt;= denominator then
		integer = integer + 1
		numerator = 0
	end
	local wholestr = tostring(integer)
	if numerator &gt; 0 then
		local div = gcd(numerator, denominator)
		if div &gt; 1 then
			numerator = numerator / div
			denominator = denominator / div
		end
		return {
			wholestr = (integer &gt; 0) and wholestr or '',
			numstr = tostring(numerator),
			denstr = tostring(denominator),
			value = value,
		}
	end
	return wholestr
end

local function preunits(count, preunit1, preunit2)
	-- If count is 1:
	--     ignore preunit2
	--     return p1
	-- else:
	--     preunit1 is used for preunit2 if the latter is empty
	--     return p1, p2
	-- where:
	--     p1 is text to insert before the input unit
	--     p2 is text to insert before the output unit
	--     p1 or p2 may be nil to mean &quot;no preunit&quot;
	-- Using '+ ' gives output like &quot;5+ feet&quot; (no preceding space).
	local function withspace(text, i)
		-- Insert space at beginning if i == 1, or at end if i == -1.
		-- However, no space is inserted if there is a space or '&amp;nbsp;'
		-- or '-' at that position ('-' is for adjectival text).
		local current = text:sub(i, i)
		if current == ' ' or current == '-' then
			return text
		end
		if i == 1 then
			current = text:sub(1, 6)
		else
			current = text:sub(-6, -1)
		end
		if current == '&amp;nbsp;' then
			return text
		end
		if i == 1 then
			return ' ' .. text
		end
		return text .. ' '
	end
	preunit1 = preunit1 or ''
	local trim1 = strip(preunit1)
	if count == 1 then
		if trim1 == '' then
			return nil
		end
		return withspace(withspace(preunit1, 1), -1)
	end
	preunit2 = preunit2 or ''
	local trim2 = strip(preunit2)
	if trim1 == '' and trim2 == '' then
		return nil, nil
	end
	if trim1 ~= '+' then
		preunit1 = withspace(preunit1, 1)
	end
	if trim2 == '&amp;#32;' then  -- trick to make preunit2 empty
		preunit2 = nil
	elseif trim2 == '' then
		preunit2 = preunit1
	elseif trim2 ~= '+' then
		preunit2 = withspace(preunit2, 1)
	end
	return preunit1, preunit2
end

local function range_text(range, want_name, parms, before, after, inout)
	-- Return before .. rtext .. after
	-- where rtext is the text that separates two values in a range.
	local rtext, adj_text, exception
	if type(range) == 'table' then
		-- Table must specify range text for ('off' and 'on') or ('input' and 'output'),
		-- and may specify range text for 'adj=on',
		-- and may specify exception = true.
		rtext = range[want_name and 'off' or 'on'] or
				range[((inout == 'in') == (parms.opt_flip == true)) and 'output' or 'input']
		adj_text = range['adj']
		exception = range['exception']
	else
		rtext = range
	end
	if parms.opt_adjectival then
		if want_name or (exception and parms.abbr_org == 'on') then
			rtext = adj_text or rtext:gsub(' ', '-'):gsub('&amp;nbsp;', '-')
		end
	end
	if rtext == '' and after:sub(1, #MINUS) == MINUS then
		rtext = '&amp;nbsp; '
	end
	return before .. rtext .. after
end

local function get_composite(parms, iparm, in_unit_table)
	-- Look for a composite input unit. For example, {{convert|1|yd|2|ft|3|in}}
	-- would result in a call to this function with
	--   iparm = 3 (parms[iparm] = &quot;2&quot;, just after the first unit)
	--   in_unit_table = (unit table for &quot;yd&quot;; contains value 1 for number of yards)
	-- Return true, iparm, unit where
	--   iparm = index just after the composite units (7 in above example)
	--   unit = composite unit table holding all input units,
	-- or return true if no composite unit is present in parms,
	-- or return false, t where t is an error message table.
	local default, subinfo
	local composite_units, count = { in_unit_table }, 1
	local fixups = {}
	local total = in_unit_table.valinfo[1].value
	local subunit = in_unit_table
	while subunit.subdivs do  -- subdivs is nil or a table of allowed subdivisions
		local subcode = strip(parms[iparm+1])
		local subdiv = subunit.subdivs[subcode] or subunit.subdivs[(all_units[subcode] or {}).target]
		if not subdiv then
			break
		end
		local success
		success, subunit = lookup(parms, subcode, 'no_combination')
		if not success then return false, subunit end  -- should never occur
		success, subinfo = extract_number(parms, parms[iparm])
		if not success then return false, subinfo end
		iparm = iparm + 2
		subunit.inout = 'in'
		subunit.valinfo = { subinfo }
		-- Recalculate total as a number of subdivisions.
		-- subdiv[1] = number of subdivisions per previous unit (integer &gt; 1).
		total = total * subdiv[1] + subinfo.value
		if not default then  -- set by the first subdiv with a default defined
			default = subdiv.default
		end
		count = count + 1
		composite_units[count] = subunit
		if subdiv.unit or subdiv.name then
			fixups[count] = { unit = subdiv.unit, name = subdiv.name, valinfo = subunit.valinfo }
		end
	end
	if count == 1 then
		return true  -- no error and no composite unit
	end
	for i, fixup in pairs(fixups) do
		local unit = fixup.unit
		local name = fixup.name
		if not unit or (count &gt; 2 and name) then
			composite_units[i].fixed_name = name
		else
			local success, alternate = lookup(parms, unit, 'no_combination')
			if not success then return false, alternate end  -- should never occur
			alternate.inout = 'in'
			alternate.valinfo = fixup.valinfo
			composite_units[i] = alternate
		end
	end
	return true, iparm, {
		utype = in_unit_table.utype,
		scale = subunit.scale,  -- scale of last (least significant) unit
		valinfo = { { value = total, clean = subinfo.clean, denominator = subinfo.denominator } },
		composite = composite_units,
		default = default or in_unit_table.default
	}
end

local function translate_parms(parms, kv_pairs)
	-- Update fields in parms by translating each key:value in kv_pairs to terms
	-- used by this module (may involve translating from local language to English).
	-- Also, checks are performed which may display warnings, if enabled.
	-- Return true if successful or return false, t where t is an error message table.
	currency_text = nil  -- local testing can hold module in memory; must clear globals
	local accept_any_text = {
		input = true,
		qid = true,
		qual = true,
		stylein = true,
		styleout = true,
		tracking = true,
	}
	if kv_pairs.adj and kv_pairs.sing then
		-- For enwiki (before translation), warn if attempt to use adj and sing
		-- as the latter is a deprecated alias for the former.
		if kv_pairs.adj ~= kv_pairs.sing and kv_pairs.sing ~= '' then
			add_warning(parms, 1, 'cvt_unknown_option', 'sing=' .. kv_pairs.sing)
		end
		kv_pairs.sing = nil
	end
	for loc_name, loc_value in pairs(kv_pairs) do
		local en_name = text_code.en_option_name[loc_name]
		if en_name then
			local en_value
			if en_name == '$' or en_name == 'frac' or en_name == 'sigfig' then
				if loc_value == '' then
					add_warning(parms, 2, 'cvt_empty_option', loc_name)
				elseif en_name == '$' then
					-- Value should be a single character like &quot;&quot; for the euro currency symbol, but anything is accepted.
					currency_text = (loc_value == 'euro') and '' or loc_value
				else
					local minimum
					local number, is_integer = get_number(loc_value)
					if en_name == 'frac' then
						minimum = 2
						if number and number &lt; 0 then
							parms.opt_fraction_horizontal = true
							number = -number
						end
					else
						minimum = 1
					end
					if number and is_integer and number &gt;= minimum then
						en_value = number
					else
						add_warning(parms, 1, (en_name == 'frac' and 'cvt_bad_frac' or 'cvt_bad_sigfig'), loc_name .. '=' .. loc_value)
					end
				end
			elseif accept_any_text[en_name] then
				en_value = loc_value ~= '' and loc_value or nil  -- accept non-empty user text with no validation
				if en_name == 'input' then
					-- May have something like {{convert|input=}} (empty input) if source is an infobox
					-- with optional fields. In that case, want to output nothing rather than an error.
					parms.input_text = loc_value  -- keep input because parms.input is nil if loc_value == ''
				end
			else
				en_value = text_code.en_option_value[en_name][loc_value]
				if en_value and en_value:sub(-1) == '?' then
					en_value = en_value:sub(1, -2)
					add_warning(parms, -1, 'cvt_deprecated', loc_name .. '=' .. loc_value)
				end
				if en_value == nil then
					if loc_value == '' then
						add_warning(parms, 2, 'cvt_empty_option', loc_name)
					else
						add_warning(parms, 1, 'cvt_unknown_option', loc_name .. '=' .. loc_value)
					end
				elseif en_value == '' then
					en_value = nil  -- an ignored option like adj=off
				elseif type(en_value) == 'string' and en_value:sub(1, 4) == 'opt_' then
					for _, v in ipairs(split(en_value, ',')) do
						local lhs, rhs = v:match('^(.-)=(.+)$')
						if rhs then
							parms[lhs] = tonumber(rhs) or rhs
						else
							parms[v] = true
						end
					end
					en_value = nil
				end
			end
			parms[en_name] = en_value
		else
			add_warning(parms, 1, 'cvt_unknown_option', loc_name .. '=' .. loc_value)
		end
	end
	local abbr_entered = parms.abbr
	local cfg_abbr = config.abbr
	if cfg_abbr then
		-- Don't warn if invalid because every convert would show that warning.
		if cfg_abbr == 'on always' then
			parms.abbr = 'on'
		elseif cfg_abbr == 'off always' then
			parms.abbr = 'off'
		elseif parms.abbr == nil then
			if cfg_abbr == 'on default' then
				parms.abbr = 'on'
			elseif cfg_abbr == 'off default' then
				parms.abbr = 'off'
			end
		end
	end
	if parms.abbr then
		if parms.abbr == 'unit' then
			parms.abbr = 'on'
			parms.number_word = true
		end
		parms.abbr_org = parms.abbr  -- original abbr, before any flip
	elseif parms.opt_hand_hh then
		parms.abbr_org = 'on'
		parms.abbr = 'on'
	else
		parms.abbr = 'out'  -- default is to abbreviate output only (use symbol, not name)
	end
	if parms.opt_order_out then
		-- Disable options that do not work in a useful way with order=out.
		parms.opt_flip = nil  -- override adj=flip
		parms.opt_spell_in = nil
		parms.opt_spell_out = nil
		parms.opt_spell_upper = nil
	end
	if parms.opt_spell_out and not abbr_entered then
		parms.abbr = 'off'  -- should show unit name when spelling the output value
	end
	if parms.opt_flip then
		local function swap_in_out(option)
			local value = parms[option]
			if value == 'in' then
				parms[option] = 'out'
			elseif value == 'out' then
				parms[option] = 'in'
			end
		end
		swap_in_out('abbr')
		swap_in_out('lk')
		if parms.opt_spell_in and not parms.opt_spell_out then
			-- For simplicity, and because it does not appear to be needed,
			-- user cannot set an option to spell the output only.
			parms.opt_spell_in = nil
			parms.opt_spell_out = true
		end
	end
	if parms.opt_spell_upper then
		parms.spell_upper = parms.opt_flip and 'out' or 'in'
	end
	if parms.opt_table or parms.opt_tablecen then
		if abbr_entered == nil and parms.lk == nil then
			parms.opt_values = true
		end
		parms.table_align = parms.opt_table and 'right' or 'center'
	end
	if parms.table_align or parms.opt_sortable_on then
		parms.need_table_or_sort = true
	end
	local disp_joins = text_code.disp_joins
	local default_joins = disp_joins['b']
	parms.join_between = default_joins[3] or '; '
	local disp = parms.disp
	if disp == nil then  -- special case for the most common setting
		parms.joins = default_joins
	elseif disp == 'x' then
		-- Later, parms.joins is set from the input parameters.
	else
		-- Old template does this.
		local abbr = parms.abbr
		if disp == 'slash' then
			if abbr_entered == nil then
				disp = 'slash-nbsp'
			elseif abbr == 'in' or abbr == 'out' then
				disp = 'slash-sp'
			else
				disp = 'slash-nosp'
			end
		elseif disp == 'sqbr' then
			if abbr == 'on' then
				disp = 'sqbr-nbsp'
			else
				disp = 'sqbr-sp'
			end
		end
		parms.joins = disp_joins[disp] or default_joins
		parms.join_between = parms.joins[3] or parms.join_between
		parms.wantname = parms.joins.wantname
	end
	if (en_default and not parms.opt_lang_local and (parms[1] or ''):find('%d')) or parms.opt_lang_en then
		from_en_table = nil
	end
	if en_default and from_en_table then
		-- For hiwiki: localized symbol/name is defined with the US symbol/name field,
		-- and is used if output uses localized numbers.
		parms.opt_sp_us = true
	end
	return true
end

local function get_values(parms)
	-- If successful, update parms and return true, v, i where
	--   v = table of input values
	--   i = index to next entry in parms after those processed here
	-- or return false, t where t is an error message table.
	local valinfo = collection()  -- numbered table of input values
	local range = collection()  -- numbered table of range items (having, for example, 2 range items requires 3 input values)
	local had_nocomma  -- true if removed &quot;nocomma&quot; kludge from second parameter (like &quot;tonocomma&quot;)
	local parm2 = strip(parms[2])
	if parm2 and parm2:sub(-7, -1) == 'nocomma' then
		parms[2] = strip(parm2:sub(1, -8))
		parms.opt_nocomma = true
		had_nocomma = true
	end
	local function extractor(i)
		-- If the parameter is not a value, try unpacking it as a range (&quot;1-23&quot; for &quot;1 to 23&quot;).
		-- However, &quot;-1-2/3&quot; is a negative fraction (-1), so it must be extracted first.
		-- Do not unpack a parameter if it is like &quot;3-1/2&quot; which is sometimes incorrectly
		-- used instead of &quot;3+1/2&quot; (and which should not be interpreted as &quot;3 to &quot;).
		-- Unpacked items are inserted into the parms table.
		-- The tail recursion allows combinations like &quot;1x2 to 3x4&quot;.
		local valstr = strip(parms[i])  -- trim so any '-' as a negative sign will be at start
		local success, result = extract_number(parms, valstr, i &gt; 1)
		if not success and valstr and i &lt; 20 then  -- check i to limit abuse
			local lhs, sep, rhs = valstr:match('^(%S+)%s+(%S+)%s+(%S.*)')
			if lhs and not (sep == '-' and rhs:match('/')) then
				if sep:find('%d') then
					return success, result  -- to reject {{convert|1 234 567|m}} with a decent message (en only)
				end
				parms[i] = rhs
				table.insert(parms, i, sep)
				table.insert(parms, i, lhs)
				return extractor(i)
			end
			if not valstr:match('%-.*/') then
				for _, sep in ipairs(text_code.ranges.words) do
					local start, stop = valstr:find(sep, 2, true)  -- start at 2 to skip any negative sign for range '-'
					if start then
						parms[i] = valstr:sub(stop + 1)
						table.insert(parms, i, sep)
						table.insert(parms, i, valstr:sub(1, start - 1))
						return extractor(i)
					end
				end
			end
		end
		return success, result
	end
	local i = 1
	local is_change
	while true do
		local success, info = extractor(i)  -- need to set parms.opt_nocomma before calling this
		if not success then return false, info end
		i = i + 1
		if is_change then
			info.is_change = true  -- value is after &quot;&quot; and so is a change (significant for range like {{convert|5||5|C}})
			is_change = nil
		end
		valinfo:add(info)
		local range_item = get_range(strip(parms[i]))
		if not range_item then
			break
		end
		i = i + 1
		range:add(range_item)
		if type(range_item) == 'table' then
			-- For range &quot;x&quot;, if append unit to some values, append it to all.
			parms.in_range_x = parms.in_range_x or range_item.in_range_x
			parms.out_range_x = parms.out_range_x or range_item.out_range_x
			parms.abbr_range_x = parms.abbr_range_x or range_item.abbr_range_x
			is_change = range_item.is_range_change
		end
	end
	if range.n &gt; 0 then
		if range.n &gt; 30 then  -- limit abuse, although 4 is a more likely upper limit
			return false, { 'cvt_invalid_num' }  -- misleading message but it will do
		end
		parms.range = range
	elseif had_nocomma then
		return false, { 'cvt_unknown', parm2 }
	end
	return true, valinfo, i
end

local function simple_get_values(parms)
	-- If input is like &quot;{{convert|valid_value|valid_unit|...}}&quot;,
	-- return true, i, in_unit, in_unit_table
	-- i = index in parms of what follows valid_unit, if anything.
	-- The valid_value is not negative and does not use a fraction, and
	-- no options requiring further processing of the input are used.
	-- Otherwise, return nothing or return false, parm1 for caller to interpret.
	-- Testing shows this function is successful for 96% of converts in articles,
	-- and that on average it speeds up converts by 8%.
	if parms.opt_ri or parms.opt_spell_in then return end
	local clean = to_en(strip(parms[1] or ''), parms)
	if #clean &gt; 10 or not clean:match('^[0-9.]+$') then
		return false, clean
	end
	local value = tonumber(clean)
	if not value then return end
	local info = {
		value = value,
		altvalue = value,
		singular = (value == 1),
		clean = clean,
		show = with_separator(parms, clean),
	}
	local in_unit = strip(parms[2])
	local success, in_unit_table = lookup(parms, in_unit, 'no_combination')
	if not success then return end
	in_unit_table.valinfo = { info }
	return true, 3, in_unit, in_unit_table
end

local function wikidata_call(parms, operation, ...)
	-- Return true, s where s is the result of a Wikidata operation,
	-- or return false, t where t is an error message table.
	local function worker(...)
		wikidata_code = wikidata_code or require(wikidata_module)
		wikidata_data = wikidata_data or mw.loadData(wikidata_data_module)
		return wikidata_code[operation](wikidata_data, ...)
	end
	local success, status, result = pcall(worker, ...)
	if success then
		return status, result
	end
	if parms.opt_sortable_debug then
		-- Use debug=yes to crash if an error while accessing Wikidata.
		error('Error accessing Wikidata: ' .. status, 0)
	end
	return false, { 'cvt_wd_fail' }
end

local function get_parms(parms, args)
	-- If successful, update parms and return true, unit where
	--   parms is a table of all arguments passed to the template
	--        converted to named arguments, and
	--   unit is the input unit table;
	-- or return false, t where t is an error message table.
	-- For special processing (not a convert), can also return
	-- true, wikitext where wikitext is the final result.
	-- The returned input unit table may be for a fake unit using the specified
	-- unit code as the symbol and name, and with bad_mcode = message code table.
	-- MediaWiki removes leading and trailing whitespace from the values of
	-- named arguments. However, the values of numbered arguments include any
	-- whitespace entered in the template, and whitespace is used by some
	-- parameters (example: the numbered parameters associated with &quot;disp=x&quot;).
	local kv_pairs = {}  -- table of input key:value pairs where key is a name; needed because cannot iterate parms and add new fields to it
	for k, v in pairs(args) do
		if type(k) == 'number' or k == 'test' then  -- parameter &quot;test&quot; is reserved for testing and is not translated
			parms[k] = v
		else
			kv_pairs[k] = v
		end
	end
	if parms.test == 'wikidata' then
		local ulookup = function (ucode)
			-- Use empty table for parms so it does not accumulate results when used repeatedly.
			return lookup({}, ucode, 'no_combination')
		end
		return wikidata_call(parms, '_listunits', ulookup)
	end
	local success, msg = translate_parms(parms, kv_pairs)
	if not success then return false, msg end
	if parms.input then
		success, msg = wikidata_call(parms, '_adjustparameters', parms, 1)
		if not success then return false, msg end
	end
	local success, i, in_unit, in_unit_table = simple_get_values(parms)
	if not success then
		if type(i) == 'string' and i:match('^NNN+$') then
			-- Some infoboxes have examples like {{convert|NNN|m}} (3 or more &quot;N&quot;).
			-- Output an empty string for these.
			return false, { 'cvt_no_output' }
		end
		local valinfo
		success, valinfo, i = get_values(parms)
		if not success then return false, valinfo end
		in_unit = strip(parms[i])
		i = i + 1
		success, in_unit_table = lookup(parms, in_unit, 'no_combination')
		if not success then
			in_unit = in_unit or ''
			if parms.opt_ignore_error then  -- display given unit code with no error (for use with {{val}})
				in_unit_table = ''  -- suppress error message and prevent processing of output unit
			end
			in_unit_table = setmetatable({
				symbol = in_unit, name2 = in_unit, utype = in_unit,
				scale = 1, default = '', defkey = '', linkey = '',
				bad_mcode = in_unit_table }, unit_mt)
		end
		in_unit_table.valinfo = valinfo
	end
	if parms.test == 'msg' then
		-- Am testing the messages produced when no output unit is specified, and
		-- the input unit has a missing or invalid default.
		-- Set two units for testing that.
		-- LATER: Remove this code.
		if in_unit == 'chain' then
			in_unit_table.default = nil  -- no default
		elseif in_unit == 'rd' then
			in_unit_table.default  = &quot;ft!X!m&quot;  -- an invalid expression
		end
	end
	in_unit_table.inout = 'in'  -- this is an input unit
	if not parms.range then
		local success, inext, composite_unit = get_composite(parms, i, in_unit_table)
		if not success then return false, inext end
		if composite_unit then
			in_unit_table = composite_unit
			i = inext
		end
	end
	if in_unit_table.builtin == 'mach' then
		-- As with old template, a number following Mach as the input unit is the altitude,
		-- and there is no way to specify an altitude for the output unit.
		-- Could put more code in this function to get any output unit and check for
		-- an altitude following that unit.
		local success, info = extract_number(parms, parms[i], false, true)
		if success then
			i = i + 1
			in_unit_table.altitude = info.value
		end
	end
	local word = strip(parms[i])
	i = i + 1
	local precision, is_bad_precision
	local function set_precision(text)
		local number, is_integer = get_number(text)
		if number then
			if is_integer then
				precision = number
			else
				precision = text
				is_bad_precision = true
			end
			return true  -- text was used for precision, good or bad
		end
	end
	if word and not set_precision(word) then
		parms.out_unit = parms.out_unit or word
		if set_precision(strip(parms[i])) then
			i = i + 1
		end
	end
	if parms.opt_adj_mid then
		word = parms[i]
		i = i + 1
		if word then  -- mid-text words
			if word:sub(1, 1) == '-' then
				parms.mid = word
			else
				parms.mid = ' ' .. word
			end
		end
	end
	if parms.opt_one_preunit then
		parms[parms.opt_flip and 'preunit2' or 'preunit1'] = preunits(1, parms[i])
		i = i + 1
	end
	if parms.disp == 'x' then
		-- Following is reasonably compatible with the old template.
		local first = parms[i] or ''
		local second = parms[i+1] or ''
		i = i + 2
		if strip(first) == '' then  -- user can enter '&amp;#32;' rather than ' ' to avoid the default
			first = ' [&amp;nbsp;' .. first
			second = '&amp;nbsp;]' .. second
		end
		parms.joins = { first, second }
	elseif parms.opt_two_preunits then
		local p1, p2 = preunits(2, parms[i], parms[i+1])
		i = i + 2
		if parms.preunit1 then
			-- To simplify documentation, allow unlikely use of adj=pre with disp=preunit
			-- (however, an output unit must be specified with adj=pre and with disp=preunit).
			parms.preunit1 = parms.preunit1 .. p1
			parms.preunit2 = p2
		else
			parms.preunit1, parms.preunit2 = p1, p2
		end
	end
	if precision == nil then
		if set_precision(strip(parms[i])) then
			i = i + 1
		end
	end
	if is_bad_precision then
		add_warning(parms, 1, 'cvt_bad_prec', precision)
	else
		parms.precision = precision
	end
	return true, in_unit_table
end

local function record_default_precision(parms, out_current, precision)
	-- If necessary, adjust parameters and return a possibly adjusted precision.
	-- When converting a range of values where a default precision is required,
	-- that default is calculated for each value because the result sometimes
	-- depends on the precise input and output values. This function may cause
	-- the entire convert process to be repeated in order to ensure that the
	-- same default precision is used for each individual convert.
	-- If that were not done, a range like 1000 to 1000.4 may give poor results
	-- because the first output could be heavily rounded, while the second is not.
	-- For range 1000.4 to 1000, this function can give the second convert the
	-- same default precision that was used for the first.
	if not parms.opt_round_each then
		local maxdef = out_current.max_default_precision
		if maxdef then
			if maxdef &lt; precision then
				parms.do_convert_again = true
				out_current.max_default_precision = precision
			else
				precision = out_current.max_default_precision
			end
		else
			out_current.max_default_precision = precision
		end
	end
	return precision
end

local function default_precision(parms, invalue, inclean, denominator, outvalue, in_current, out_current, extra)
	-- Return a default value for precision (an integer like 2, 0, -2).
	-- If denominator is not nil, it is the value of the denominator in inclean.
	-- Code follows procedures used in old template.
	local fudge = 1e-14  -- {{Order of magnitude}} adds this, so we do too
	local prec, minprec, adjust
	local subunit_ignore_trailing_zero
	local subunit_more_precision  -- kludge for &quot;in&quot; used in input like &quot;|2|ft|6|in&quot;
	local composite = in_current.composite
	if composite then
		subunit_ignore_trailing_zero = true  -- input &quot;|2|st|10|lb&quot; has precision 0, not -1
		if composite[#composite].exception == 'subunit_more_precision' then
			subunit_more_precision = true  -- do not use standard precision with input like &quot;|2|ft|6|in&quot;
		end
	end
	if denominator and denominator &gt; 0 then
		prec = math.max(log10(denominator), 1)
	else
		-- Count digits after decimal mark, handling cases like '12.345e6'.
		local exponent
		local integer, dot, decimals, expstr = inclean:match('^(%d*)(%.?)(%d*)(.*)')
		local e = expstr:sub(1, 1)
		if e == 'e' or e == 'E' then
			exponent = tonumber(expstr:sub(2))
		end
		if dot == '' then
			prec = subunit_ignore_trailing_zero and 0 or -integer:match('0*$'):len()
		else
			prec = #decimals
		end
		if exponent then
			-- So '1230' and '1.23e3' both give prec = -1, and '0.00123' and '1.23e-3' give 5.
			prec = prec - exponent
		end
	end
	if in_current.istemperature and out_current.istemperature then
		-- Converting between common temperatures (C, F, R, K); not keVT.
		-- Kelvin value can be almost zero, or small but negative due to precision problems.
		-- Also, an input value like -300 C (below absolute zero) gives negative kelvins.
		-- Calculate minimum precision from absolute value.
		adjust = 0
		local kelvin = abs((invalue - in_current.offset) * in_current.scale)
		if kelvin &lt; 1e-8 then  -- assume nonzero due to input or calculation precision problem
			minprec = 2
		else
			minprec = 2 - floor(log10(kelvin) + fudge)  -- 3 sigfigs in kelvin
		end
	else
		if invalue == 0 or outvalue &lt;= 0 then
			-- We are never called with a negative outvalue, but it might be zero.
			-- This is special-cased to avoid calculation exceptions.
			return record_default_precision(parms, out_current, 0)
		end
		if out_current.exception == 'integer_more_precision' and floor(invalue) == invalue then
			-- With certain output units that sometimes give poor results
			-- with default rounding, use more precision when the input
			-- value is equal to an integer. An example of a poor result
			-- is when input 50 gives a smaller output than input 49.5.
			-- Experiment shows this helps, but it does not eliminate all
			-- surprises because it is not clear whether &quot;50&quot; should be
			-- interpreted as &quot;from 45 to 55&quot; or &quot;from 49.5 to 50.5&quot;.
			adjust = -log10(in_current.scale)
		elseif subunit_more_precision then
			-- Conversion like &quot;{{convert|6|ft|1|in|cm}}&quot; (where subunit is &quot;in&quot;)
			-- has a non-standard adjust value, to give more output precision.
			adjust = log10(out_current.scale) + 2
		else
			adjust = log10(abs(invalue / outvalue))
		end
		adjust = adjust + log10(2)
		-- Ensure that the output has at least two significant figures.
		minprec = 1 - floor(log10(outvalue) + fudge)
	end
	if extra then
		adjust = extra.adjust or adjust
		minprec = extra.minprec or minprec
	end
	return record_default_precision(parms, out_current, math.max(floor(prec + adjust), minprec))
end

local function convert(parms, invalue, info, in_current, out_current)
	-- Convert given input value from one unit to another.
	-- Return output_value (a number) if a simple convert, or
	-- return f, t where
	--   f = true, t = table of information with results, or
	--   f = false, t = error message table.
	local inscale = in_current.scale
	local outscale = out_current.scale
	if not in_current.iscomplex and not out_current.iscomplex then
		return invalue * (inscale / outscale)  -- minimize overhead for most common case
	end
	if in_current.invert or out_current.invert then
		-- Inverted units, such as inverse length, inverse time, or
		-- fuel efficiency. Built-in units do not have invert set.
		if (in_current.invert or 1) * (out_current.invert or 1) &lt; 0 then
			return 1 / (invalue * inscale * outscale)
		end
		return invalue * (inscale / outscale)
	elseif in_current.offset then
		-- Temperature (there are no built-ins for this type of unit).
		if info.is_change then
			return invalue * (inscale / outscale)
		end
		return (invalue - in_current.offset) * (inscale / outscale) + out_current.offset
	else
		-- Built-in unit.
		local in_builtin = in_current.builtin
		local out_builtin = out_current.builtin
		if in_builtin and out_builtin then
			if in_builtin == out_builtin then
				return invalue
			end
			-- There are no cases (yet) where need to convert from one
			-- built-in unit to another, so this should never occur.
			return false, { 'cvt_bug_convert' }
		end
		if in_builtin == 'mach' or out_builtin == 'mach' then
			local adjust
			if in_builtin == 'mach' then
				inscale = speed_of_sound(in_current.altitude)
				adjust = outscale / 0.1
			else
				outscale = speed_of_sound(out_current.altitude)
				adjust = 0.1 / inscale
			end
			return true, {
				outvalue = invalue * (inscale / outscale),
				adjust = log10(adjust) + log10(2),
			}
		elseif in_builtin == 'hand' then
			-- 1 hand = 4 inches; 1.2 hands = 6 inches.
			-- Decimals of a hand are only defined for the first digit, and
			-- the first fractional digit should be a number of inches (1, 2 or 3).
			-- However, this code interprets the entire fractional part as the number
			-- of inches / 10 (so 1.75 inches would be 0.175 hands).
			-- A value like 12.3 hands is exactly 12*4 + 3 inches; base default precision on that.
			local integer, fracpart = math.modf(invalue)
			local inch_value = 4 * integer + 10 * fracpart  -- equivalent number of inches
			local factor = inscale / outscale
			if factor == 4 then
				-- Am converting to inches: show exact result, and use &quot;inches&quot; not &quot;in&quot; by default.
				if parms.abbr_org == nil then
					out_current.usename = true
				end
				local show = format('%g', abs(inch_value))  -- show and clean are unsigned
				if not show:find('e', 1, true) then
					return true, {
						invalue = inch_value,
						outvalue = inch_value,
						clean = show,
						show = show,
					}
				end
			end
			local outvalue = (integer + 2.5 * fracpart) * factor
			local fracstr = info.clean:match('%.(.*)') or ''
			local fmt
			if fracstr == '' then
				fmt = '%.0f'
			else
				fmt = '%.' .. format('%d', #fracstr - 1) .. 'f'
			end
			return true, {
				invalue = inch_value,
				clean = format(fmt, inch_value),
				outvalue = outvalue,
				minprec = 0,
			}
		end
	end
	return false, { 'cvt_bug_convert' }  -- should never occur
end

local function user_style(parms, i)
	-- Return text for a user-specified style for a table cell, or '' if none,
	-- given i = 1 (input style) or 2 (output style).
	local style = parms[(i == 1) and 'stylein' or 'styleout']
	if style then
		style = style:gsub('&quot;', '')
		if style ~= '' then
			if style:sub(-1) ~= ';' then
				style = style .. ';'
			end
			return style
		end
	end
	return ''
end

local function make_table_or_sort(parms, invalue, info, in_current, scaled_top)
	-- Set options to handle output for a table or a sort key, or both.
	-- The text sort key is based on the value resulting from converting
	-- the input to a fake base unit with scale = 1, and other properties
	-- required for a conversion derived from the input unit.
	-- For other modules, return the sort key in a hidden span element, and
	-- the scaled value used to generate the sort key.
	-- If scaled_top is set, it is the scaled value of the numerator of a per unit
	-- to be combined with this unit (the denominator) to make the sort key.
	-- Scaling only works with units that convert with a factor (not temperature).
	local sortkey, scaled_value
	if parms.opt_sortable_on then
		local base = {  -- a fake unit with enough fields for a valid convert
			scale = 1,
			invert = in_current.invert and 1,
			iscomplex = in_current.iscomplex,
			offset = in_current.offset and 0,
		}
		local outvalue, extra = convert(parms, invalue, info, in_current, base)
		if extra then
			outvalue = extra.outvalue
		end
		if in_current.istemperature then
			-- Have converted to kelvin; assume numbers close to zero have a
			-- rounding error and should be zero.
			if abs(outvalue) &lt; 1e-12 then
				outvalue = 0
			end
		end
		if scaled_top and outvalue ~= 0 then
			outvalue = scaled_top / outvalue
		end
		scaled_value = outvalue
		if not valid_number(outvalue) then
			if outvalue &lt; 0 then
				sortkey = '1000000000000000000'
			else
				sortkey = '9000000000000000000'
			end
		elseif outvalue == 0 then
			sortkey = '5000000000000000000'
		else
			local mag = floor(log10(abs(outvalue)) + 1e-14)
			local prefix
			if outvalue &gt; 0 then
				prefix = 7000 + mag
			else
				prefix = 2999 - mag
				outvalue = outvalue + 10^(mag+1)
			end
			sortkey = format('%d', prefix) .. format('%015.0f', floor(outvalue * 10^(14-mag)))
		end
	end
	local sortspan
	if sortkey and (parms.opt_sortable_debug or not parms.table_align) then
		sortspan = parms.opt_sortable_debug and
			'&lt;span style=&quot;border:1px solid;display:inline;&quot; class=&quot;sortkey&quot;&gt;' .. sortkey .. '&lt;/span&gt;' or
			'&lt;span style=&quot;display:none&quot; class=&quot;sortkey&quot;&gt;' .. sortkey .. '&lt;/span&gt;'
		parms.join_before = sortspan
	end
	if parms.table_align then
		local style = 'style=&quot;text-align:' .. parms.table_align .. ';'
		local sort = sortkey and ' data-sort-value=&quot;' .. sortkey .. '&quot;' or ''
		local joins = {}
		for i = 1, 2 do
			joins[i] = (i == 1 and '' or '\n|') .. style .. user_style(parms, i) .. '&quot;' .. sort .. '|'
		end
		parms.table_joins = joins
	end
	return sortspan, scaled_value
end

local cvt_to_hand

local function cvtround(parms, info, in_current, out_current)
	-- Return true, t where t is a table with the conversion results; fields:
	--   show = rounded, formatted string with the result of converting value in info,
	--      using the rounding specified in parms.
	--   singular = true if result (after rounding and ignoring any negative sign)
	--      is &quot;1&quot;, or like &quot;1.00&quot;, or is a fraction with value &lt; 1;
	--   (and more fields shown below, and a calculated 'absvalue' field).
	-- or return false, t where t is an error message table.
	-- Input info.clean uses en digits (it has been translated, if necessary).
	-- Output show uses en or non-en digits as appropriate, or can be spelled.
	if out_current.builtin == 'hand' then
		return cvt_to_hand(parms, info, in_current, out_current)
	end
	local invalue = in_current.builtin == 'hand' and info.altvalue or info.value
	local outvalue, extra = convert(parms, invalue, info, in_current, out_current)
	if parms.need_table_or_sort then
		parms.need_table_or_sort = nil  -- process using first input value only
		make_table_or_sort(parms, invalue, info, in_current)
	end
	if extra then
		if not outvalue then return false, extra end
		invalue = extra.invalue or invalue
		outvalue = extra.outvalue
	end
	if not valid_number(outvalue) then
		return false, { 'cvt_invalid_num' }
	end
	local isnegative
	if outvalue &lt; 0 then
		isnegative = true
		outvalue = -outvalue
	end
	local precision, show, exponent
	local denominator = out_current.frac
	if denominator then
		show = fraction_table(outvalue, denominator)
	else
		precision = parms.precision
		if not precision then
			if parms.sigfig then
				show, exponent = make_sigfig(outvalue, parms.sigfig)
			elseif parms.opt_round then
				local n = parms.opt_round
				if n == 0.5 then
					local integer, fracpart = math.modf(floor(2 * outvalue + 0.5) / 2)
					if fracpart == 0 then
						show = format('%.0f', integer)
					else
						show = format('%.1f', integer + fracpart)
					end
				else
					show = format('%.0f', floor((outvalue / n) + 0.5) * n)
				end
			else
				local inclean = info.clean
				if extra then
					inclean = extra.clean or inclean
					show = extra.show
				end
				if not show then
					precision = default_precision(parms, invalue, inclean, info.denominator, outvalue, in_current, out_current, extra)
				end
			end
		end
	end
	if precision then
		if precision &gt;= 0 then
			local fudge
			if precision &lt;= 8 then
				-- Add a fudge to handle common cases of bad rounding due to inability
				-- to precisely represent some values. This makes the following work:
				-- {{convert|-100.1|C|K}} and {{convert|5555000|um|m|2}}.
				-- Old template uses #expr round, which invokes PHP round().
				-- LATER: Investigate how PHP round() works.
				fudge = 2e-14
			else
				fudge = 0
			end
			local fmt = '%.' .. format('%d', precision) .. 'f'
			local success
			success, show = pcall(format, fmt, outvalue + fudge)
			if not success then
				return false, { 'cvt_big_prec', tostring(precision) }
			end
		else
			precision = -precision  -- #digits to zero (in addition to any digits after dot)
			local shift = 10 ^ precision
			show = format('%.0f', outvalue/shift)
			if show ~= '0' then
				exponent = #show + precision
			end
		end
	end
	local t = format_number(parms, show, exponent, isnegative)
	if type(show) == 'string' then
		-- Set singular using match because on some systems 0.99999999999999999 is 1.0.
		if exponent then
			t.singular = (exponent == 1 and show:match('^10*$'))
		else
			t.singular = (show == '1' or show:match('^1%.0*$'))
		end
	else
		t.fraction_table = show
		t.singular = (outvalue &lt;= 1)  -- cannot have 'fraction == 1', but if it were possible it would be singular
	end
	t.raw_absvalue = outvalue  -- absolute value before rounding
	return true, setmetatable(t, {
		__index = function (self, key)
			if key == 'absvalue' then
				-- Calculate absolute value after rounding, if needed.
				local clean, exponent = rawget(self, 'clean'), rawget(self, 'exponent')
				local value = tonumber(clean)  -- absolute value (any negative sign has been ignored)
				if exponent then
					value = value * 10^exponent
				end
				rawset(self, key, value)
				return value
			end
		end })
end

function cvt_to_hand(parms, info, in_current, out_current)
	-- Convert input to hands, inches.
	-- Return true, t where t is a table with the conversion results;
	-- or return false, t where t is an error message table.
	if parms.abbr_org == nil then
		out_current.usename = true  -- default is to show name not symbol
	end
	local precision = parms.precision
	local frac = out_current.frac
	if not frac and precision and precision &gt; 1 then
		frac = (precision == 2) and 2 or 4
	end
	local out_next = out_current.out_next
	if out_next then
		-- Use magic knowledge to determine whether the next unit is inches without requiring i18n.
		-- The following ensures that when the output combination &quot;hand in&quot; is used, the inches
		-- value is rounded to match the hands value. Also, displaying say &quot;61&quot; instead of 61.5
		-- is better as 61.5 implies the value is not 61.4.
		if out_next.exception == 'subunit_more_precision' then
			out_next.frac = frac
		end
	end
	-- Convert to inches; calculate hands from that.
	local dummy_unit_table = { scale = out_current.scale / 4, frac = frac }
	local success, outinfo = cvtround(parms, info, in_current, dummy_unit_table)
	if not success then return false, outinfo end
	local tfrac = outinfo.fraction_table
	local inches = outinfo.raw_absvalue
	if tfrac then
		inches = floor(inches)  -- integer part only; fraction added later
	else
		inches = floor(inches + 0.5)  -- a hands measurement never shows decimals of an inch
	end
	local hands, inches = divide(inches, 4)
	outinfo.absvalue = hands + inches/4  -- supposed to be the absolute rounded value, but this is close enough
	local inchstr = tostring(inches)  -- '0', '1', '2' or '3'
	if precision and precision &lt;= 0 then  -- using negative or 0 for precision rounds to nearest hand
		hands = floor(outinfo.raw_absvalue/4 + 0.5)
		inchstr = ''
	elseif tfrac then
		-- Always show an integer before fraction (like &quot;15.0&quot;) because &quot;15&quot; means 15-and-a-half hands.
		inchstr = numdot .. format_fraction(parms, 'out', false, inchstr, tfrac.numstr, tfrac.denstr)
	else
		inchstr = numdot .. from_en(inchstr)
	end
	outinfo.show = outinfo.sign .. with_separator(parms, format('%.0f', hands)) .. inchstr
	return true, outinfo
end

local function evaluate_condition(value, condition)
	-- Return true or false from applying a conditional expression to value,
	-- or throw an error if invalid.
	-- A very limited set of expressions is supported:
	--    v &lt; 9
	--    v * 9 &lt; 9
	-- where
	--    'v' is replaced with value
	--    9 is any number (as defined by Lua tonumber)
	--      only en digits are accepted
	--    '&lt;' can also be '&lt;=' or '&gt;' or '&gt;='
	-- In addition, the following form is supported:
	--    LHS and RHS
	-- where
	--    LHS, RHS = any of above expressions.
	local function compare(value, text)
		local arithop, factor, compop, limit = text:match('^%s*v%s*([*]?)(.-)([&lt;&gt;]=?)(.*)$')
		if arithop == nil then
			error('Invalid default expression', 0)
		elseif arithop == '*' then
			factor = tonumber(factor)
			if factor == nil then
				error('Invalid default expression', 0)
			end
			value = value * factor
		end
		limit = tonumber(limit)
		if limit == nil then
			error('Invalid default expression', 0)
		end
		if compop == '&lt;' then
			return value &lt; limit
		elseif compop == '&lt;=' then
			return value &lt;= limit
		elseif compop == '&gt;' then
			return value &gt; limit
		elseif compop == '&gt;=' then
			return value &gt;= limit
		end
		error('Invalid default expression', 0)  -- should not occur
	end
	local lhs, rhs = condition:match('^(.-%W)and(%W.*)')
	if lhs == nil then
		return compare(value, condition)
	end
	return compare(value, lhs) and compare(value, rhs)
end

local function get_default(value, unit_table)
	-- Return true, s where s = name of unit's default output unit,
	-- or return false, t where t is an error message table.
	-- Some units have a default that depends on the input value
	-- (the first value if a range of values is used).
	-- If '!' is in the default, the first bang-delimited field is an
	-- expression that uses 'v' to represent the input value.
	-- Example: 'v &lt; 120 ! small ! big ! suffix' (suffix is optional)
	-- evaluates 'v &lt; 120' as a boolean with result
	-- 'smallsuffix' if (value &lt; 120), or 'bigsuffix' otherwise.
	-- Input must use en digits and '.' decimal mark.
	local default = data_code.default_exceptions[unit_table.defkey or unit_table.symbol] or unit_table.default
	if not default then
		local per = unit_table.per
		if per then
			local function a_default(v, u)
				local success, ucode = get_default(v, u)
				if not success then
					return '?'  -- an unlikely error has occurred; will cause lookup of default to fail
				end
				-- Attempt to use only the first unit if a combination or output multiple.
				-- This is not bulletproof but should work for most cases.
				-- Where it does not work, the convert will need to specify the wanted output unit.
				local t = all_units[ucode]
				if t then
					local combo = t.combination
					if combo then
						-- For a multiple like ftin, the &quot;first&quot; unit (ft) is last in the combination.
						local i = t.multiple and table_len(combo) or 1
						ucode = combo[i]
					end
				else
					-- Try for an automatically generated combination.
					local item = ucode:match('^(.-)%+') or ucode:match('^(%S+)%s')
					if all_units[item] then
						return item
					end
				end
				return ucode
			end
			local unit1, unit2 = per[1], per[2]
			local def1 = (unit1 and a_default(value, unit1) or unit_table.vprefix or '')
			local def2 = a_default(1, unit2)  -- 1 because per unit of denominator
			return true, def1 .. '/' .. def2
		end
		return false, { 'cvt_no_default', unit_table.symbol }
	end
	if default:find('!', 1, true) == nil then
		return true, default
	end
	local t = split(default, '!')
	if #t == 3 or #t == 4 then
		local success, result = pcall(evaluate_condition, value, t[1])
		if success then
			default = result and t[2] or t[3]
			if #t == 4 then
				default = default .. t[4]
			end
			return true, default
		end
	end
	return false, { 'cvt_bad_default', unit_table.symbol }
end

local linked_pages  -- to record linked pages so will not link to the same page more than once

local function unlink(unit_table)
	-- Forget that the given unit has previously been linked (if it has).
	-- That is needed when processing a range of inputs or outputs when an id
	-- for the first range value may have been evaluated, but only an id for
	-- the last value is displayed, and that id may need to be linked.
	linked_pages[unit_table.unitcode or unit_table] = nil
end

local function make_link(link, id, unit_table)
	-- Return wikilink &quot;[[link|id]]&quot;, possibly abbreviated as in examples:
	--   [[Mile|mile]]  --&gt; [[mile]]
	--   [[Mile|miles]] --&gt; [[mile]]s
	-- However, just id is returned if:
	-- * no link given (so caller does not need to check if a link was defined); or
	-- * link has previously been used during the current convert (to avoid overlinking).
	local link_key
	if unit_table then
		link_key = unit_table.unitcode or unit_table
	else
		link_key = link
	end
	if not link or link == '' or linked_pages[link_key] then
		return id
	end
	linked_pages[link_key] = true
	-- Following only works for language en, but it should be safe on other wikis,
	-- and overhead of doing it generally does not seem worthwhile.
	local l = link:sub(1, 1):lower() .. link:sub(2)
	if link == id or l == id then
		return '[[' .. id .. ']]'
	elseif link .. 's' == id or l .. 's' == id then
		return '[[' .. id:sub(1, -2) .. ']]s'
	else
		return '[[' .. link .. '|' .. id .. ']]'
	end
end

local function variable_name(clean, unit_table)
	-- For slwiki, a unit name depends on the value.
	-- Parameter clean is the unsigned rounded value in en digits, as a string.
	-- Value             Source    Example for &quot;m&quot;
	-- integer 1:        name1     meter  (also is the name of the unit)
	-- integer 2:        var{1}    metra
	-- integer 3 and 4:  var{2}    metri
	-- integer else:     var{3}    metrov (0 and 5 or more)
	-- real/fraction:    var{4}    metra
	-- var{i} means the i'th field in unit_table.varname if it exists and has
	-- an i'th field, otherwise name2.
	-- Fields are separated with &quot;!&quot; and are not empty.
	-- A field for a unit using an SI prefix has the prefix name inserted,
	-- replacing '#' if found, or before the field otherwise.
	local vname
	if clean == '1' then
		vname = unit_table.name1
	elseif unit_table.varname then
		local i
		if clean == '2' then
			i = 1
		elseif clean == '3' or clean == '4' then
			i = 2
		elseif clean:find('.', 1, true) then
			i = 4
		else
			i = 3
		end
		if i &gt; 1 and varname == 'pl' then
			i = i - 1
		end
		vname = split(unit_table.varname, '!')[i]
	end
	if vname then
		local si_name = rawget(unit_table, 'si_name') or ''
		local pos = vname:find('#', 1, true)
		if pos then
			vname = vname:sub(1, pos - 1) .. si_name .. vname:sub(pos + 1)
		else
			vname = si_name .. vname
		end
		return vname
	end
	return unit_table.name2
end

local function linked_id(parms, unit_table, key_id, want_link, clean)
	-- Return final unit id (symbol or name), optionally with a wikilink,
	-- and update unit_table.sep if required.
	-- key_id is one of: 'symbol', 'sym_us', 'name1', 'name1_us', 'name2', 'name2_us'.
	local abbr_on = (key_id == 'symbol' or key_id == 'sym_us')
	if abbr_on and want_link then
		local symlink = rawget(unit_table, 'symlink')
		if symlink then
			return symlink  -- for exceptions that have the linked symbol built-in
		end
	end
	local multiplier = rawget(unit_table, 'multiplier')
	local per = unit_table.per
	if per then
		local unit1 = per[1]  -- top unit_table, or nil
		local unit2 = per[2]  -- bottom unit_table
		if abbr_on then
			if not unit1 then
				unit_table.sep = ''  -- no separator in &quot;$2/acre&quot;
			end
			if not want_link then
				local symbol = unit_table.symbol_raw
				if symbol then
					return symbol  -- for exceptions that have the symbol built-in
				end
			end
		end
		local key_id2  -- unit2 is always singular
		if key_id == 'name2' then
			key_id2 = 'name1'
		elseif key_id == 'name2_us' then
			key_id2 = 'name1_us'
		else
			key_id2 = key_id
		end
		local result
		if abbr_on then
			result = '/'
		elseif omitsep then
			result = per_word
		elseif unit1 then
			result = ' ' .. per_word .. ' '
		else
			result = per_word .. ' '
		end
		if want_link and unit_table.link then
			if abbr_on or not varname then
				result = (unit1 and linked_id(parms, unit1, key_id, false, clean) or '') .. result .. linked_id(parms, unit2, key_id2, false, '1')
			else
				result = (unit1 and variable_name(clean, unit1) or '') .. result .. variable_name('1', unit2)
			end
			if omit_separator(result) then
				unit_table.sep = ''
			end
			return make_link(unit_table.link, result, unit_table)
		end
		if unit1 then
			result = linked_id(parms, unit1, key_id, want_link, clean) .. result
			if unit1.sep then
				unit_table.sep = unit1.sep
			end
		elseif omitsep then
			unit_table.sep = ''
		end
		return result .. linked_id(parms, unit2, key_id2, want_link, '1')
	end
	if multiplier then
		-- A multiplier (like &quot;100&quot; in &quot;100km&quot;) forces the unit to be plural.
		multiplier = from_en(multiplier)
		if not omitsep then
			multiplier = multiplier .. (abbr_on and '&amp;nbsp;' or ' ')
		end
		if not abbr_on then
			if key_id == 'name1' then
				key_id = 'name2'
			elseif key_id == 'name1_us' then
				key_id = 'name2_us'
			end
		end
	else
		multiplier = ''
	end
	local id = unit_table.fixed_name or ((varname and not abbr_on) and variable_name(clean, unit_table) or unit_table[key_id])
	if omit_separator(id) then
		unit_table.sep = ''
	end
	if want_link then
		local link = data_code.link_exceptions[unit_table.linkey or unit_table.symbol] or unit_table.link
		if link then
			local before = ''
			local i = unit_table.customary
			if i == 1 and parms.opt_sp_us then
				i = 2  -- show &quot;U.S.&quot; not &quot;US&quot;
			end
			if i == 3 and abbr_on then
				i = 4  -- abbreviate &quot;imperial&quot; to &quot;imp&quot;
			end
			local customary = text_code.customary_units[i]
			if customary then
				-- LATER: This works for language en only, but it's esoteric so ignore for now.
				local pertext
				if id:sub(1, 1) == '/' then
					-- Want unit &quot;/USgal&quot; to display as &quot;/U.S. gal&quot;, not &quot;U.S. /gal&quot;.
					pertext = '/'
					id = id:sub(2)
				elseif id:sub(1, 4) == 'per ' then
					-- Similarly want &quot;per U.S. gallon&quot;, not &quot;U.S. per gallon&quot; (but in practice this is unlikely to be used).
					pertext = 'per '
					id = id:sub(5)
				else
					pertext = ''
				end
				-- Omit any &quot;US&quot;/&quot;U.S.&quot;/&quot;imp&quot;/&quot;imperial&quot; from start of id since that will be inserted.
				local removes = (i &lt; 3) and { 'US&amp;nbsp;', 'US ', 'U.S.&amp;nbsp;', 'U.S. ' } or { 'imp&amp;nbsp;', 'imp ', 'imperial ' }
				for _, prefix in ipairs(removes) do
					local plen = #prefix
					if id:sub(1, plen) == prefix then
						id = id:sub(plen + 1)
						break
					end
				end
				before = pertext .. make_link(customary.link, customary[1]) .. ' '
			end
			id = before .. make_link(link, id, unit_table)
		end
	end
	return multiplier .. id
end

local function make_id(parms, which, unit_table)
	-- Return id, f where
	--   id = unit name or symbol, possibly modified
	--   f = true if id is a name, or false if id is a symbol
	-- using the value for index 'which', and for 'in' or 'out' (unit_table.inout).
	-- Result is '' if no symbol/name is to be used.
	-- In addition, set unit_table.sep = ' ' or '&amp;nbsp;' or ''
	-- (the separator that caller will normally insert before the id).
	if parms.opt_values then
		unit_table.sep = ''
		return ''
	end
	local inout = unit_table.inout
	local info = unit_table.valinfo[which]
	local abbr_org = parms.abbr_org
	local adjectival = parms.opt_adjectival
	local lk = parms.lk
	local want_link = (lk == 'on' or lk == inout)
	local usename = unit_table.usename
	local singular = info.singular
	local want_name
	if usename then
		want_name = true
	else
		if abbr_org == nil then
			if parms.wantname then
				want_name = true
			end
			if unit_table.usesymbol then
				want_name = false
			end
		end
		if want_name == nil then
			local abbr = parms.abbr
			if abbr == 'on' or abbr == inout or (abbr == 'mos' and inout == 'out') then
				want_name = false
			else
				want_name = true
			end
		end
	end
	local key
	if want_name then
		if lk == nil and unit_table.builtin == 'hand' then
			want_link = true
		end
		if parms.opt_use_nbsp then
			unit_table.sep = '&amp;nbsp;'
		else
			unit_table.sep = ' '
		end
		if parms.opt_singular then
			local value
			if inout == 'in' then
				value = info.value
			else
				value = info.absvalue
			end
			if value then  -- some unusual units do not always set value field
				value = abs(value)
				singular = (0 &lt; value and value &lt; 1.0001)
			end
		end
		if unit_table.engscale then
			-- engscale: so &quot;|1|e3kg&quot; gives &quot;1 thousand kilograms&quot; (plural)
			singular = false
		end
		key = (adjectival or singular) and 'name1' or 'name2'
		if parms.opt_sp_us then
			key = key .. '_us'
		end
	else
		if unit_table.builtin == 'hand' then
			if parms.opt_hand_hh then
				unit_table.symbol = 'hh'  -- LATER: might want i18n applied to this
			end
		end
		unit_table.sep = '&amp;nbsp;'
		key = parms.opt_sp_us and 'sym_us' or 'symbol'
	end
	return linked_id(parms, unit_table, key, want_link, info.clean), want_name
end

local function decorate_value(parms, unit_table, which, number_word)
	-- If needed, update unit_table so values will be shown with extra information.
	-- For consistency with the old template (but different from fmtpower),
	-- the style to display powers of 10 includes &quot;display:none&quot; to allow some
	-- browsers to copy, for example, &quot;10&quot; as &quot;10^3&quot;, rather than as &quot;103&quot;.
	local info
	local engscale = unit_table.engscale
	local prefix = unit_table.vprefix
	if engscale or prefix then
		info = unit_table.valinfo[which]
		if info.decorated then
			return  -- do not redecorate if repeating convert
		end
		info.decorated = true
		if engscale then
			local inout = unit_table.inout
			local abbr = parms.abbr
			if (abbr == 'on' or abbr == inout) and not parms.number_word then
				info.show = info.show ..
				'&lt;span style=&quot;margin-left:0.2em&quot;&gt;&lt;span style=&quot;margin-left:0.1em&quot;&gt;' ..
				from_en('10') ..
				'&lt;/span&gt;&lt;/span&gt;&lt;s style=&quot;display:none&quot;&gt;^&lt;/s&gt;&lt;sup&gt;' ..
				from_en(tostring(engscale.exponent)) .. '&lt;/sup&gt;'
			elseif number_word then
				local number_id
				local lk = parms.lk
				if lk == 'on' or lk == inout then
					number_id = make_link(engscale.link, engscale[1])
				else
					number_id = engscale[1]
				end
				-- WP:NUMERAL recommends &quot;&amp;nbsp;&quot; in values like &quot;12 million&quot;.
				info.show = info.show .. (parms.opt_adjectival and '-' or '&amp;nbsp;') .. number_id
			end
		end
		if prefix then
			info.show = prefix .. info.show
		end
	end
end

local function process_input(parms, in_current)
	-- Processing required once per conversion.
	-- Return block of text to represent input (value/unit).
	if parms.opt_output_only or parms.opt_output_number_only or parms.opt_output_unit_only then
		parms.joins = { '', '' }
		return ''
	end
	local first_unit
	local composite = in_current.composite  -- nil or table of units
	if composite then
		first_unit = composite[1]
	else
		first_unit = in_current
	end
	local id1, want_name = make_id(parms, 1, first_unit)
	local sep = first_unit.sep  -- separator between value and unit, set by make_id
	local preunit = parms.preunit1
	if preunit then
		sep = ''  -- any separator is included in preunit
	else
		preunit = ''
	end
	if parms.opt_input_unit_only then
		parms.joins = { '', '' }
		if composite then
			local parts = { id1 }
			for i, unit in ipairs(composite) do
				if i &gt; 1 then
					table.insert(parts, (make_id(parms, 1, unit)))
				end
			end
			id1 = table.concat(parts, ' ')
		end
		if want_name and parms.opt_adjectival then
			return preunit .. hyphenated(id1)
		end
		return  preunit .. id1
	end
	if parms.opt_also_symbol and not composite then
		local join1 = parms.joins[1]
		if join1 == ' (' or join1 == ' [' then
			parms.joins = { ' [' .. first_unit[parms.opt_sp_us and 'sym_us' or 'symbol'] .. ']' .. join1 , parms.joins[2] }
		end
	end
	if in_current.builtin == 'mach' and first_unit.sep ~= '' then  -- '' means omitsep with non-enwiki name
		local prefix = id1 .. '&amp;nbsp;'
		local range = parms.range
		local valinfo = first_unit.valinfo
		local result = prefix .. valinfo[1].show
		if range then
			-- For simplicity and because more not needed, handle one range item only.
			local prefix2 = make_id(parms, 2, first_unit) .. '&amp;nbsp;'
			result = range_text(range[1], want_name, parms, result, prefix2 .. valinfo[2].show, 'in')
		end
		return preunit .. result
	end
	if composite then
		-- Simplify: assume there is no range, and no decoration.
		local mid = (not parms.opt_flip) and parms.mid or ''
		local sep1 = '&amp;nbsp;'
		local sep2 = ' '
		if parms.opt_adjectival and want_name then
			sep1 = '-'
			sep2 = '-'
		end
		if omitsep and sep == '' then
			-- Testing the id of the most significant unit should be sufficient.
			sep1 = ''
			sep2 = ''
		end
		local parts = { first_unit.valinfo[1].show .. sep1 .. id1 }
		for i, unit in ipairs(composite) do
			if i &gt; 1 then
				table.insert(parts, unit.valinfo[1].show .. sep1 .. (make_id(parms, 1, unit)))
			end
		end
		return table.concat(parts, sep2) .. mid
	end
	local add_unit = (parms.abbr == 'mos') or
		parms[parms.opt_flip and 'out_range_x' or 'in_range_x'] or
		(not want_name and parms.abbr_range_x)
	local range = parms.range
	if range and not add_unit then
		unlink(first_unit)
	end
	local id = range and make_id(parms, range.n + 1, first_unit) or id1
	local extra, was_hyphenated = hyphenated_maybe(parms, want_name, sep, id, 'in')
	if was_hyphenated then
		add_unit = false
	end
	local result
	local valinfo = first_unit.valinfo
	if range then
		for i = 0, range.n do
			local number_word
			if i == range.n then
				add_unit = false
				number_word = true
			end
			decorate_value(parms, first_unit, i+1, number_word)
			local show = valinfo[i+1].show
			if add_unit then
				show = show .. first_unit.sep .. (i == 0 and id1 or make_id(parms, i+1, first_unit))
			end
			if i == 0 then
				result = show
			else
				result = range_text(range[i], want_name, parms, result, show, 'in')
			end
		end
	else
		decorate_value(parms, first_unit, 1, true)
		result = valinfo[1].show
	end
	return result .. preunit .. extra
end

local function process_one_output(parms, out_current)
	-- Processing required for each output unit.
	-- Return block of text to represent output (value/unit).
	local inout = out_current.inout  -- normally 'out' but can be 'in' for order=out
	local id1, want_name = make_id(parms, 1, out_current)
	local sep = out_current.sep  -- set by make_id
	local preunit = parms.preunit2
	if preunit then
		sep = ''  -- any separator is included in preunit
	else
		preunit = ''
	end
	if parms.opt_output_unit_only then
		if want_name and parms.opt_adjectival then
			return preunit .. hyphenated(id1)
		end
		return preunit .. id1
	end
	if out_current.builtin == 'mach' and out_current.sep ~= '' then  -- '' means omitsep with non-enwiki name
		local prefix = id1 .. '&amp;nbsp;'
		local range = parms.range
		local valinfo = out_current.valinfo
		local result = prefix .. valinfo[1].show
		if range then
			-- For simplicity and because more not needed, handle one range item only.
			result = range_text(range[1], want_name, parms, result, prefix .. valinfo[2].show, inout)
		end
		return preunit .. result
	end
	local add_unit = (parms[parms.opt_flip and 'in_range_x' or 'out_range_x'] or
		(not want_name and parms.abbr_range_x)) and
		not parms.opt_output_number_only
	local range = parms.range
	if range and not add_unit then
		unlink(out_current)
	end
	local id = range and make_id(parms, range.n + 1, out_current) or id1
	local extra, was_hyphenated = hyphenated_maybe(parms, want_name, sep, id, inout)
	if was_hyphenated then
		add_unit = false
	end
	local result
	local valinfo = out_current.valinfo
	if range then
		for i = 0, range.n do
			local number_word
			if i == range.n then
				add_unit = false
				number_word = true
			end
			decorate_value(parms, out_current, i+1, number_word)
			local show = valinfo[i+1].show
			if add_unit then
				show = show .. out_current.sep .. (i == 0 and id1 or make_id(parms, i+1, out_current))
			end
			if i == 0 then
				result = show
			else
				result = range_text(range[i], want_name, parms, result, show, inout)
			end
		end
	else
		decorate_value(parms, out_current, 1, true)
		result = valinfo[1].show
	end
	if parms.opt_output_number_only then
		return result
	end
	return result .. preunit .. extra
end

local function make_output_single(parms, in_unit_table, out_unit_table)
	-- Return true, item where item = wikitext of the conversion result
	-- for a single output (which is not a combination or a multiple);
	-- or return false, t where t is an error message table.
	if parms.opt_order_out and in_unit_table.unitcode == out_unit_table.unitcode then
		out_unit_table.valinfo = in_unit_table.valinfo
	else
		out_unit_table.valinfo = collection()
		for _, v in ipairs(in_unit_table.valinfo) do
			local success, info = cvtround(parms, v, in_unit_table, out_unit_table)
			if not success then return false, info end
			out_unit_table.valinfo:add(info)
		end
	end
	return true, process_one_output(parms, out_unit_table)
end

local function make_output_multiple(parms, in_unit_table, out_unit_table)
	-- Return true, item where item = wikitext of the conversion result
	-- for an output which is a multiple (like 'ftin');
	-- or return false, t where t is an error message table.
	local inout = out_unit_table.inout  -- normally 'out' but can be 'in' for order=out
	local multiple = out_unit_table.multiple  -- table of scaling factors (will not be nil)
	local combos = out_unit_table.combination  -- table of unit tables (will not be nil)
	local abbr = parms.abbr
	local abbr_org = parms.abbr_org
	local disp = parms.disp
	local want_name = (abbr_org == nil and (disp == 'or' or disp == 'slash')) or
						not (abbr == 'on' or abbr == inout or abbr == 'mos')
	local want_link = (parms.lk == 'on' or parms.lk == inout)
	local mid = parms.opt_flip and parms.mid or ''
	local sep1 = '&amp;nbsp;'
	local sep2 = ' '
	if parms.opt_adjectival and want_name then
		sep1 = '-'
		sep2 = '-'
	end
	local do_spell = parms.opt_spell_out
	parms.opt_spell_out = nil  -- so the call to cvtround does not spell the value
	local function make_result(info, isfirst)
		local fmt, outvalue, sign
		local results = {}
		for i = 1, #combos do
			local tfrac, thisvalue, strforce
			local out_current = combos[i]
			out_current.inout = inout
			local scale = multiple[i]
			if i == 1 then  -- least significant unit ('in' from 'ftin')
				local decimals
				out_current.frac = out_unit_table.frac
				local success, outinfo = cvtround(parms, info, in_unit_table, out_current)
				if not success then return false, outinfo end
				if isfirst then
					out_unit_table.valinfo = { outinfo }  -- in case output value of first least significant unit is needed
				end
				sign = outinfo.sign
				tfrac = outinfo.fraction_table
				if outinfo.is_scientific then
					strforce = outinfo.show
					decimals = ''
				elseif tfrac then
					decimals = ''
				else
					local show = outinfo.show  -- number as a string in local language
					local p1, p2 = show:find(numdot, 1, true)
					decimals = p1 and show:sub(p2 + 1) or ''  -- text after numdot, if any
				end
				fmt = '%.' .. ulen(decimals) .. 'f'  -- to reproduce precision
				if decimals == '' then
					if tfrac then
						outvalue = floor(outinfo.raw_absvalue)  -- integer part only; fraction added later
					else
						outvalue = floor(outinfo.raw_absvalue + 0.5)  -- keep all integer digits of least significant unit
					end
				else
					outvalue = outinfo.absvalue
				end
			end
			if scale then
				outvalue, thisvalue = divide(outvalue, scale)
			else
				thisvalue = outvalue
			end
			local id
			if want_name then
				if varname then
					local clean
					if strforce or tfrac then
						clean = '.1'  -- dummy value to force name for floating point
					else
						clean = format(fmt, thisvalue)
					end
					id = variable_name(clean, out_current)
				else
					local key = 'name2'
					if parms.opt_adjectival then
						key = 'name1'
					elseif tfrac then
						if thisvalue == 0 then
							key = 'name1'
						end
					elseif parms.opt_singular then
						if 0 &lt; thisvalue and thisvalue &lt; 1.0001 then
							key = 'name1'
						end
					else
						if thisvalue == 1 then
							key = 'name1'
						end
					end
					id = out_current[key]
				end
			else
				id = out_current['symbol']
			end
			if i == 1 and omit_separator(id) then
				-- Testing the id of the least significant unit should be sufficient.
				sep1 = ''
				sep2 = ''
			end
			if want_link then
				local link = out_current.link
				if link then
					id = make_link(link, id, out_current)
				end
			end
			local strval
			local spell_inout = (i == #combos or outvalue == 0) and inout or ''  -- trick so the last value processed (first displayed) has uppercase, if requested
			if strforce and outvalue == 0 then
				sign = ''  -- any sign is in strforce
				strval = strforce  -- show small values in scientific notation; will only use least significant unit
			elseif tfrac then
				local wholestr = (thisvalue &gt; 0) and tostring(thisvalue) or nil
				strval = format_fraction(parms, spell_inout, false, wholestr, tfrac.numstr, tfrac.denstr, do_spell)
			else
				strval = (thisvalue == 0) and from_en('0') or with_separator(parms, format(fmt, thisvalue))
				if do_spell then
					strval = spell_number(parms, spell_inout, strval) or strval
				end
			end
			table.insert(results, strval .. sep1 .. id)
			if outvalue == 0 then
				break
			end
			fmt = '%.0f'  -- only least significant unit can have a non-integral value
		end
		local reversed, count = {}, #results
		for i = 1, count do
			reversed[i] = results[count + 1 - i]
		end
		return true, sign .. table.concat(reversed, sep2)
	end
	local valinfo = in_unit_table.valinfo
	local success, result = make_result(valinfo[1], true)
	if not success then return false, result end
	local range = parms.range
	if range then
		for i = 1, range.n do
			local success, result2 = make_result(valinfo[i+1])
			if not success then return false, result2 end
			result = range_text(range[i], want_name, parms, result, result2, inout)
		end
	end
	return true, result .. mid
end

local function process(parms, in_unit_table, out_unit_table)
	-- Return true, s, outunit where s = final wikitext result,
	-- or return false, t where t is an error message table.
	linked_pages = {}
	local success, bad_output
	local bad_input_mcode = in_unit_table.bad_mcode  -- nil if input unit is a valid convert unit
	local out_unit = parms.out_unit
	if out_unit == nil or out_unit == '' or type(out_unit) == 'function' then
		if bad_input_mcode or parms.opt_input_unit_only then
			bad_output = ''
		else
			local getdef = type(out_unit) == 'function' and out_unit or get_default
			success, out_unit = getdef(in_unit_table.valinfo[1].value, in_unit_table)
			parms.out_unit = out_unit
			if not success then
				bad_output = out_unit
			end
		end
	end
	if not bad_output and not out_unit_table then
		success, out_unit_table = lookup(parms, out_unit, 'any_combination')
		if success then
			local mismatch = check_mismatch(in_unit_table, out_unit_table)
			if mismatch then
				bad_output = mismatch
			end
		else
			bad_output = out_unit_table
		end
	end
	local lhs, rhs
	local flipped = parms.opt_flip and not bad_input_mcode
	if bad_output then
		rhs = (bad_output == '') and '' or message(parms, bad_output)
	elseif parms.opt_input_unit_only then
		rhs = ''
	else
		local combos  -- nil (for 'ft' or 'ftin'), or table of unit tables (for 'm ft')
		if not out_unit_table.multiple then  -- nil/false ('ft' or 'm ft'), or table of factors ('ftin')
			combos = out_unit_table.combination
		end
		local frac = parms.frac  -- nil or denominator of fraction for output values
		if frac then
			-- Apply fraction to the unit (if only one), or to non-SI units (if a combination),
			-- except that if a precision is also specified, the fraction only applies to
			-- the hand unit; that allows the following result:
			-- {{convert|156|cm|in hand|1|frac=2}}  156 centimetres (61.4 in; 15.1 hands)
			-- However, the following is handled elsewhere as a special case:
			-- {{convert|156|cm|hand in|1|frac=2}}  156 centimetres (15.1 hands; 61 in)
			if combos then
				local precision = parms.precision
				for _, unit in ipairs(combos) do
					if unit.builtin == 'hand' or (not precision and not unit.prefixes) then
						unit.frac = frac
					end
				end
			else
				out_unit_table.frac = frac
			end
		end
		local outputs = {}
		local imax = combos and #combos or 1  -- 1 (single unit) or number of unit tables
		if imax == 1 then
			parms.opt_order_out = nil  -- only useful with an output combination
		end
		if not flipped and not parms.opt_order_out then
			-- Process left side first so any duplicate links (from lk=on) are suppressed
			-- on right. Example: {{convert|28|e9pc|e9ly|abbr=off|lk=on}}
			lhs = process_input(parms, in_unit_table)
		end
		for i = 1, imax do
			local success, item
			local out_current = combos and combos[i] or out_unit_table
			out_current.inout = 'out'
			if i == 1 then
				if imax &gt; 1 and out_current.builtin == 'hand' then
					out_current.out_next = combos[2]  -- built-in hand can influence next unit in a combination
				end
				if parms.opt_order_out then
					out_current.inout = 'in'
				end
			end
			if out_current.multiple then
				success, item = make_output_multiple(parms, in_unit_table, out_current)
			else
				success, item = make_output_single(parms, in_unit_table, out_current)
			end
			if not success then return false, item end
			outputs[i] = item
		end
		if parms.opt_order_out then
			lhs = outputs[1]
			table.remove(outputs, 1)
		end
		local sep = parms.table_joins and parms.table_joins[2] or parms.join_between
		rhs = table.concat(outputs, sep)
	end
	if flipped or not lhs then
		local input = process_input(parms, in_unit_table)
		if flipped then
			lhs = rhs
			rhs = input
		else
			lhs = input
		end
	end
	if parms.join_before then
		lhs = parms.join_before .. lhs
	end
	local wikitext
	if bad_input_mcode then
		if bad_input_mcode == '' then
			wikitext = lhs
		else
			wikitext = lhs .. message(parms, bad_input_mcode)
		end
	elseif parms.table_joins then
		wikitext = parms.table_joins[1] .. lhs .. parms.table_joins[2] .. rhs
	else
		wikitext = lhs .. parms.joins[1] .. rhs .. parms.joins[2]
	end
	if parms.warnings and not bad_input_mcode then
		wikitext = wikitext .. parms.warnings
	end
	return true, wikitext, out_unit_table
end

local function main_convert(frame)
	-- Do convert, and if needed, do it again with higher default precision.
	local parms = { frame = frame }  -- will hold template arguments, after translation
	set_config(frame.args)
	local success, result = get_parms(parms, frame:getParent().args)
	if success then
		if type(result) ~= 'table' then
			return tostring(result)
		end
		local in_unit_table = result
		local out_unit_table
		for _ = 1, 2 do  -- use counter so cannot get stuck repeating convert
			success, result, out_unit_table = process(parms, in_unit_table, out_unit_table)
			if success and parms.do_convert_again then
				parms.do_convert_again = false
			else
				break
			end
		end
	end
	-- If input=x gives a problem, the result should be just the user input
	-- (if x is a property like P123 it has been replaced with '').
	-- An unknown input unit would display the input and an error message
	-- with success == true at this point.
	-- Also, can have success == false with a message that outputs an empty string.
	if parms.input_text then
		if success and not parms.have_problem then
			return result
		end
		local cat
		if parms.tracking then
			-- Add a tracking category using the given text as the category sort key.
			-- There is currently only one type of tracking, but in principle multiple
			-- items could be tracked, using different sort keys for convenience.
			cat = wanted_category('tracking', parms.tracking)
		end
		return parms.input_text .. (cat or '')
	end
	return success and result or message(parms, result)
end

local function _unit(unitcode, options)
	-- Helper function for Module:Val to look up a unit.
	-- Parameter unitcode must be a string to identify the wanted unit.
	-- Parameter options must be nil or a table with optional fields:
	--   value = number (for sort key; default value is 1)
	--   scaled_top = nil for a normal unit, or a number for a unit which is
	--                the denominator of a per unit (for sort key)
	--   si = { 'symbol', 'link' }
	--                (a table with two strings) to make an SI unit
	--                that will be used for the look up
	--   link = true if result should be [[linked]]
	--   sort = 'on' or 'debug' if result should include a sort key in a
	--                span element ('debug' makes the key visible)
	--   name = true for the name of the unit instead of the symbol
	--   us = true for the US spelling of the unit, if any
	-- Return nil if unitcode is not a non-empty string.
	-- Otherwise return a table with fields:
	--   text = requested symbol or name of unit, optionally linked
	--   scaled_value = input value adjusted by unit scale; used for sort key
	--   sortspan = span element with sort key like that provided by {{ntsh}},
	--     calculated from the result of converting value
	--     to a base unit with scale 1.
	--   unknown = true if the unitcode was not known
	unitcode = strip(unitcode)
	if unitcode == nil or unitcode == '' then
		return nil
	end
	set_config({})
	linked_pages = {}
	options = options or {}
	local parms = {
		abbr = options.name and 'off' or 'on',
		lk = options.link and 'on' or nil,
		opt_sp_us = options.us and true or nil,
		opt_ignore_error = true,  -- do not add pages using this function to 'what links here' for Module:Convert/extra
		opt_sortable_on = options.sort == 'on' or options.sort == 'debug',
		opt_sortable_debug = options.sort == 'debug',
	}
	if options.si then
		-- Make a dummy table of units (just one unit) for lookup to use.
		-- This makes lookup recognize any SI prefix in the unitcode.
		local symbol = options.si[1] or '?'
		parms.unittable = { [symbol] = {
			_name1 = symbol,
			_name2 = symbol,
			_symbol = symbol,
			utype = symbol,
			scale = symbol == 'g' and 0.001 or 1,
			prefixes = 1,
			default = symbol,
			link = options.si[2],
		}}
	end
	local success, unit_table = lookup(parms, unitcode, 'no_combination')
	if not success then
		unit_table = setmetatable({
			symbol = unitcode, name2 = unitcode, utype = unitcode,
			scale = 1, default = '', defkey = '', linkey = '' }, unit_mt)
	end
	local value = tonumber(options.value) or 1
	local clean = tostring(abs(value))
	local info = {
		value = value,
		altvalue = value,
		singular = (clean == '1'),
		clean = clean,
		show = clean,
	}
	unit_table.inout = 'in'
	unit_table.valinfo = { info }
	local sortspan, scaled_value
	if options.sort then
		sortspan, scaled_value = make_table_or_sort(parms, value, info, unit_table, options.scaled_top)
	end
	return {
		text = make_id(parms, 1, unit_table),
		sortspan = sortspan,
		scaled_value = scaled_value,
		unknown = not success and true or nil,
	}
end

return { convert = main_convert, _unit = _unit }</text>
      <sha1>59lqgnwzlhq9nwdy3nyki88i6bs1u05</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert/data</title>
    <ns>828</ns>
    <id>38570725</id>
    <revision>
      <id>795876381</id>
      <parentid>788386388</parentid>
      <timestamp>2017-08-17T01:39:27Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="178050">-- Conversion data used by [[Module:Convert]] which uses mw.loadData() for
-- read-only access to this module so that it is loaded only once per page.
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.
--
-- These data tables follow:
--   all_units           all properties for a unit, including default output
--   default_exceptions  exceptions for default output ('kg' and 'g' have different defaults)
--   link_exceptions     exceptions for links ('kg' and 'g' have different links)
--
-- These tables are generated by a script which reads the wikitext of a page that
-- documents the required properties of each unit; see [[:en:Module:Convert/doc]].

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local all_units = {
    [&quot;Gy&quot;] = {
	_name1   = &quot;gray&quot;,
	_symbol  = &quot;Gy&quot;,
	utype    = &quot;absorbed radiation dose&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;rad&quot;,
	link     = &quot;Gray (unit)&quot;,
    },
    [&quot;rad&quot;] = {
	_name1   = &quot;rad&quot;,
	_symbol  = &quot;rad&quot;,
	utype    = &quot;absorbed radiation dose&quot;,
	scale    = 0.01,
	prefixes = 1,
	default  = &quot;Gy&quot;,
	link     = &quot;Rad (unit)&quot;,
    },
    [&quot;cm/s2&quot;] = {
	name1    = &quot;centimetre per second squared&quot;,
	name1_us = &quot;centimeter per second squared&quot;,
	name2    = &quot;centimetres per second squared&quot;,
	name2_us = &quot;centimeters per second squared&quot;,
	symbol   = &quot;cm/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.01,
	default  = &quot;ft/s2&quot;,
	link     = &quot;Gal (unit)&quot;,
    },
    [&quot;ft/s2&quot;] = {
	name1    = &quot;foot per second squared&quot;,
	name2    = &quot;feet per second squared&quot;,
	symbol   = &quot;ft/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.3048,
	default  = &quot;m/s2&quot;,
    },
    [&quot;g0&quot;] = {
	name1    = &quot;standard gravity&quot;,
	name2    = &quot;standard gravities&quot;,
	symbol   = &quot;''g&lt;sub&gt;0&lt;/sub&gt;''&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 9.80665,
	default  = &quot;m/s2&quot;,
    },
    [&quot;km/hs&quot;] = {
	name1    = &quot;kilometre per hour per second&quot;,
	name1_us = &quot;kilometer per hour per second&quot;,
	name2    = &quot;kilometres per hour per second&quot;,
	name2_us = &quot;kilometers per hour per second&quot;,
	symbol   = &quot;km/(hs)&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mph/s&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;km/s2&quot;] = {
	name1    = &quot;kilometre per second squared&quot;,
	name1_us = &quot;kilometer per second squared&quot;,
	name2    = &quot;kilometres per second squared&quot;,
	name2_us = &quot;kilometers per second squared&quot;,
	symbol   = &quot;km/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 1000,
	default  = &quot;mph/s&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;m/s2&quot;] = {
	name1    = &quot;metre per second squared&quot;,
	name1_us = &quot;meter per second squared&quot;,
	name2    = &quot;metres per second squared&quot;,
	name2_us = &quot;meters per second squared&quot;,
	symbol   = &quot;m/s&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 1,
	default  = &quot;ft/s2&quot;,
    },
    [&quot;mph/s&quot;] = {
	name1    = &quot;mile per hour per second&quot;,
	name2    = &quot;miles per hour per second&quot;,
	symbol   = &quot;mph/s&quot;,
	utype    = &quot;acceleration&quot;,
	scale    = 0.44704,
	default  = &quot;km/hs&quot;,
	link     = &quot;Acceleration&quot;,
    },
    [&quot;km/h/s&quot;] = {
	target   = &quot;km/hs&quot;,
    },
    [&quot;standard gravity&quot;] = {
	target   = &quot;g0&quot;,
    },
    [&quot;1000sqft&quot;] = {
	name1    = &quot;thousand square feet&quot;,
	name2    = &quot;thousand square feet&quot;,
	symbol   = &quot;1000&amp;nbsp;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 92.90304,
	default  = &quot;m2&quot;,
	link     = &quot;Square foot&quot;,
    },
    [&quot;a&quot;] = {
	_name1   = &quot;are&quot;,
	_symbol  = &quot;a&quot;,
	utype    = &quot;area&quot;,
	scale    = 100,
	prefixes = 1,
	default  = &quot;sqft&quot;,
	link     = &quot;Hectare#Are&quot;,
    },
    [&quot;acre&quot;] = {
	symbol   = &quot;acre&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 4046.8564224,
	default  = &quot;ha&quot;,
    },
    [&quot;acre-sing&quot;] = {
	target   = &quot;acre&quot;,
    },
    [&quot;arpent&quot;] = {
	symbol   = &quot;arpent&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3418.89,
	default  = &quot;ha&quot;,
    },
    [&quot;cda&quot;] = {
	name1    = &quot;cuerda&quot;,
	symbol   = &quot;cda&quot;,
	utype    = &quot;area&quot;,
	scale    = 3930.395625,
	default  = &quot;ha acre&quot;,
    },
    [&quot;daa&quot;] = {
	name1    = &quot;decare&quot;,
	symbol   = &quot;daa&quot;,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
    },
    [&quot;dunam&quot;] = {
	symbol   = &quot;dunam&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
    },
    [&quot;dunum&quot;] = {
	symbol   = &quot;dunum&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1000,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Dunam&quot;,
    },
    [&quot;ha&quot;] = {
	name1    = &quot;hectare&quot;,
	symbol   = &quot;ha&quot;,
	utype    = &quot;area&quot;,
	scale    = 10000,
	default  = &quot;acre&quot;,
    },
    [&quot;hectare&quot;] = {
	name1    = &quot;hectare&quot;,
	symbol   = &quot;ha&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 10000,
	default  = &quot;acre&quot;,
    },
    [&quot;Irish acre&quot;] = {
	name1    = &quot;Irish acre&quot;,
	symbol   = &quot;Irish&amp;nbsp;acres&quot;,
	utype    = &quot;area&quot;,
	scale    = 6555.2385024,
	default  = &quot;ha&quot;,
	link     = &quot;Acre (Irish)&quot;,
    },
    [&quot;m2&quot;] = {
	_name1   = &quot;square metre&quot;,
	_name1_us= &quot;square meter&quot;,
	_symbol  = &quot;m&lt;sup&gt;2&lt;/sup&gt;&quot;,
	prefix_position= 8,
	utype    = &quot;area&quot;,
	scale    = 1,
	prefixes = 2,
	default  = &quot;sqft&quot;,
	link     = &quot;Square metre&quot;,
    },
    [&quot;pondemaat&quot;] = {
	name1    = &quot;pondemaat&quot;,
	name2    = &quot;pondemaat&quot;,
	symbol   = &quot;pond&quot;,
	utype    = &quot;area&quot;,
	scale    = 3674.363358816,
	default  = &quot;m2&quot;,
	link     = &quot;:nl:pondemaat&quot;,
    },
    [&quot;pyeong&quot;] = {
	name2    = &quot;pyeong&quot;,
	symbol   = &quot;pyeong&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3.3057851239669422,
	default  = &quot;m2&quot;,
    },
    [&quot;rai&quot;] = {
	name2    = &quot;rai&quot;,
	symbol   = &quot;rai&quot;,
	utype    = &quot;area&quot;,
	scale    = 1600,
	default  = &quot;m2&quot;,
	link     = &quot;Rai (unit)&quot;,
    },
    [&quot;rood&quot;] = {
	symbol   = &quot;rood&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1011.7141056,
	default  = &quot;sqft sqm&quot;,
	subdivs  = { [&quot;sqperch&quot;] = { 40, default = &quot;m2&quot; } },
	link     = &quot;Rood (unit)&quot;,
    },
    [&quot;sqfoot&quot;] = {
	name1    = &quot;square foot&quot;,
	name2    = &quot;square foot&quot;,
	symbol   = &quot;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.09290304,
	default  = &quot;m2&quot;,
    },
    [&quot;sqft&quot;] = {
	name1    = &quot;square foot&quot;,
	name2    = &quot;square feet&quot;,
	symbol   = &quot;sq&amp;nbsp;ft&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.09290304,
	default  = &quot;m2&quot;,
    },
    [&quot;sqin&quot;] = {
	name1    = &quot;square inch&quot;,
	name2    = &quot;square inches&quot;,
	symbol   = &quot;sq&amp;nbsp;in&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.00064516,
	default  = &quot;cm2&quot;,
    },
    [&quot;sqmi&quot;] = {
	name1    = &quot;square mile&quot;,
	symbol   = &quot;sq&amp;nbsp;mi&quot;,
	utype    = &quot;area&quot;,
	scale    = 2589988.110336,
	default  = &quot;km2&quot;,
    },
    [&quot;sqnmi&quot;] = {
	name1    = &quot;square nautical mile&quot;,
	symbol   = &quot;sq&amp;nbsp;nmi&quot;,
	utype    = &quot;area&quot;,
	scale    = 3429904,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;sqperch&quot;] = {
	name2    = &quot;perches&quot;,
	symbol   = &quot;perch&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 25.29285264,
	default  = &quot;sqm&quot;,
	link     = &quot;Perch (unit)#Area&quot;,
    },
    [&quot;sqverst&quot;] = {
	symbol   = &quot;square verst&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 1138062.24,
	default  = &quot;km2 sqmi&quot;,
	link     = &quot;Verst&quot;,
    },
    [&quot;sqyd&quot;] = {
	name1    = &quot;square yard&quot;,
	symbol   = &quot;sq&amp;nbsp;yd&quot;,
	utype    = &quot;area&quot;,
	scale    = 0.83612736,
	default  = &quot;m2&quot;,
    },
    [&quot;tsubo&quot;] = {
	name2    = &quot;tsubo&quot;,
	symbol   = &quot;tsubo&quot;,
	usename  = 1,
	utype    = &quot;area&quot;,
	scale    = 3.3057851239669422,
	default  = &quot;m2&quot;,
	link     = &quot;Japanese units of measurement#Area&quot;,
    },
    [&quot;acres&quot;] = {
	target   = &quot;acre&quot;,
    },
    [&quot;are&quot;] = {
	target   = &quot;a&quot;,
    },
    [&quot;decare&quot;] = {
	target   = &quot;daa&quot;,
    },
    [&quot;foot2&quot;] = {
	target   = &quot;sqfoot&quot;,
    },
    [&quot;ft2&quot;] = {
	target   = &quot;sqft&quot;,
    },
    [&quot;in2&quot;] = {
	target   = &quot;sqin&quot;,
	symbol   = &quot;in&lt;sup&gt;2&lt;/sup&gt;&quot;,
    },
    [&quot;km&quot;] = {
	target   = &quot;km2&quot;,
    },
    [&quot;mi2&quot;] = {
	target   = &quot;sqmi&quot;,
    },
    [&quot;million acre&quot;] = {
	target   = &quot;e6acre&quot;,
    },
    [&quot;million acres&quot;] = {
	target   = &quot;e6acre&quot;,
    },
    [&quot;million hectares&quot;] = {
	target   = &quot;e6ha&quot;,
    },
    [&quot;m&quot;] = {
	target   = &quot;m2&quot;,
    },
    [&quot;nmi2&quot;] = {
	target   = &quot;sqnmi&quot;,
    },
    [&quot;pond&quot;] = {
	target   = &quot;pondemaat&quot;,
    },
    [&quot;sq arp&quot;] = {
	target   = &quot;arpent&quot;,
    },
    [&quot;sqkm&quot;] = {
	target   = &quot;km2&quot;,
    },
    [&quot;sqm&quot;] = {
	target   = &quot;m2&quot;,
    },
    [&quot;square verst&quot;] = {
	target   = &quot;sqverst&quot;,
    },
    [&quot;verst2&quot;] = {
	target   = &quot;sqverst&quot;,
    },
    [&quot;yd2&quot;] = {
	target   = &quot;sqyd&quot;,
    },
    [&quot;m2/ha&quot;] = {
	name1    = &quot;square metre per hectare&quot;,
	name1_us = &quot;square meter per hectare&quot;,
	name2    = &quot;square metres per hectare&quot;,
	name2_us = &quot;square meters per hectare&quot;,
	symbol   = &quot;m&lt;sup&gt;2&lt;/sup&gt;/ha&quot;,
	utype    = &quot;area per unit area&quot;,
	scale    = 0.0001,
	default  = &quot;sqft/acre&quot;,
	link     = &quot;Basal area&quot;,
    },
    [&quot;sqft/acre&quot;] = {
	name1    = &quot;square foot per acre&quot;,
	name2    = &quot;square feet per acre&quot;,
	symbol   = &quot;sq&amp;nbsp;ft/acre&quot;,
	utype    = &quot;area per unit area&quot;,
	scale    = 2.295684113865932e-5,
	default  = &quot;m2/ha&quot;,
    },
    [&quot;cent&quot;] = {
	name1    = &quot;cent&quot;,
	symbol   = &quot;&quot;,
	utype    = &quot;cent&quot;,
	scale    = 1,
	default  = &quot;cent&quot;,
	link     = &quot;Cent (currency)&quot;,
    },
    [&quot;&quot;] = {
	target   = &quot;cent&quot;,
    },
    [&quot;A.h&quot;] = {
	name1    = &quot;ampere-hour&quot;,
	symbol   = &quot;Ah&quot;,
	utype    = &quot;charge&quot;,
	scale    = 3600,
	default  = &quot;coulomb&quot;,
    },
    [&quot;coulomb&quot;] = {
	_name1   = &quot;coulomb&quot;,
	_symbol  = &quot;C&quot;,
	utype    = &quot;charge&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;e&quot;,
	link     = &quot;Coulomb&quot;,
    },
    [&quot;e&quot;] = {
	name1    = &quot;elementary charge&quot;,
	symbol   = &quot;''e''&quot;,
	utype    = &quot;charge&quot;,
	scale    = 1.602176487e-19,
	default  = &quot;coulomb&quot;,
    },
    [&quot;Ah&quot;] = {
	target   = &quot;A.h&quot;,
    },
    [&quot;g-mol&quot;] = {
	name1    = &quot;gram-mole&quot;,
	symbol   = &quot;g&amp;#8209;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol&quot;] = {
	name1    = &quot;gram-mole&quot;,
	symbol   = &quot;gmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol&quot;] = {
	name1    = &quot;kilomole&quot;,
	symbol   = &quot;kmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1000,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;lb-mol&quot;] = {
	name1    = &quot;pound-mole&quot;,
	symbol   = &quot;lb&amp;#8209;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 453.59237,
	default  = &quot;mol&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol&quot;] = {
	name1    = &quot;pound-mole&quot;,
	symbol   = &quot;lbmol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 453.59237,
	default  = &quot;mol&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;mol&quot;] = {
	name1    = &quot;mole&quot;,
	symbol   = &quot;mol&quot;,
	utype    = &quot;chemical amount&quot;,
	scale    = 1,
	default  = &quot;lbmol&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kgCO2/L&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg(CO&lt;sub&gt;2&lt;/sub&gt;)/L&quot;,
	utype    = &quot;co2 per unit volume&quot;,
	scale    = 1000,
	default  = &quot;lbCO2/USgal&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lbCO2/USgal&quot;] = {
	name1    = &quot;pound per US gallon&quot;,
	name2    = &quot;pounds per US gallon&quot;,
	symbol   = &quot;lbCO2/US&amp;nbsp;gal&quot;,
	utype    = &quot;co2 per unit volume&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kgCO2/L&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;oz/lb&quot;] = {
	per      = { &quot;oz&quot;, &quot;lb&quot; },
	utype    = &quot;concentration&quot;,
	default  = &quot;mg/kg&quot;,
    },
    [&quot;mg/kg&quot;] = {
	per      = { &quot;mg&quot;, &quot;kg&quot; },
	utype    = &quot;concentration&quot;,
	default  = &quot;oz/lb&quot;,
    },
    [&quot;$/acre&quot;] = {
	per      = { &quot;$&quot;, &quot;acre&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/ha&quot;,
    },
    [&quot;$/ha&quot;] = {
	per      = { &quot;$&quot;, &quot;ha&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/acre&quot;,
    },
    [&quot;$/m2&quot;] = {
	per      = { &quot;$&quot;, &quot;m2&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/sqft&quot;,
    },
    [&quot;$/sqft&quot;] = {
	per      = { &quot;$&quot;, &quot;sqft&quot; },
	utype    = &quot;cost $ per unit area&quot;,
	default  = &quot;$/m2&quot;,
    },
    [&quot;$/km&quot;] = {
	per      = { &quot;$&quot;, &quot;km&quot; },
	utype    = &quot;cost $ per unit length&quot;,
	default  = &quot;$/mi&quot;,
    },
    [&quot;$/mi&quot;] = {
	per      = { &quot;$&quot;, &quot;mi&quot; },
	utype    = &quot;cost $ per unit length&quot;,
	default  = &quot;$/km&quot;,
    },
    [&quot;$/kg&quot;] = {
	per      = { &quot;$&quot;, &quot;kg&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/lb&quot;,
    },
    [&quot;$/g&quot;] = {
	per      = { &quot;$&quot;, &quot;g&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/lb&quot;,
    },
    [&quot;$/lb&quot;] = {
	per      = { &quot;$&quot;, &quot;lb&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/kg&quot;,
    },
    [&quot;$/oz&quot;] = {
	per      = { &quot;$&quot;, &quot;oz&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/g&quot;,
    },
    [&quot;$/ozt&quot;] = {
	per      = { &quot;$&quot;, &quot;ozt&quot; },
	utype    = &quot;cost $ per unit mass&quot;,
	default  = &quot;$/kg&quot;,
    },
    [&quot;$/m3&quot;] = {
	per      = { &quot;$&quot;, &quot;m3&quot; },
	utype    = &quot;cost $ per unit volume&quot;,
	default  = &quot;$/oilbbl&quot;,
    },
    [&quot;$/oilbbl&quot;] = {
	per      = { &quot;$&quot;, &quot;oilbbl&quot; },
	utype    = &quot;cost $ per unit volume&quot;,
	default  = &quot;$/m3&quot;,
    },
    [&quot;/acre&quot;] = {
	per      = { &quot;&quot;, &quot;acre&quot; },
	utype    = &quot;cost  per unit area&quot;,
	default  = &quot;/ha&quot;,
    },
    [&quot;/ha&quot;] = {
	per      = { &quot;&quot;, &quot;ha&quot; },
	utype    = &quot;cost  per unit area&quot;,
	default  = &quot;/acre&quot;,
    },
    [&quot;g/dm3&quot;] = {
	name1    = &quot;gram per cubic decimetre&quot;,
	name1_us = &quot;gram per cubic decimeter&quot;,
	name2    = &quot;grams per cubic decimetre&quot;,
	name2_us = &quot;grams per cubic decimeter&quot;,
	symbol   = &quot;g/dm&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/L&quot;] = {
	name1    = &quot;gram per litre&quot;,
	name1_us = &quot;gram per liter&quot;,
	name2    = &quot;grams per litre&quot;,
	name2_us = &quot;grams per liter&quot;,
	symbol   = &quot;g/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/mL&quot;] = {
	name1    = &quot;gram per millilitre&quot;,
	name1_us = &quot;gram per milliliter&quot;,
	name2    = &quot;grams per millilitre&quot;,
	name2_us = &quot;grams per milliliter&quot;,
	symbol   = &quot;g/mL&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/ml&quot;] = {
	name1    = &quot;gram per millilitre&quot;,
	name1_us = &quot;gram per milliliter&quot;,
	name2    = &quot;grams per millilitre&quot;,
	name2_us = &quot;grams per milliliter&quot;,
	symbol   = &quot;g/ml&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/dm3&quot;] = {
	name1    = &quot;kilogram per cubic decimetre&quot;,
	name1_us = &quot;kilogram per cubic decimeter&quot;,
	name2    = &quot;kilograms per cubic decimetre&quot;,
	name2_us = &quot;kilograms per cubic decimeter&quot;,
	symbol   = &quot;kg/dm&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/cuft&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/L&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/USgal&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/l&quot;] = {
	name1    = &quot;kilogram per litre&quot;,
	name1_us = &quot;kilogram per liter&quot;,
	name2    = &quot;kilograms per litre&quot;,
	name2_us = &quot;kilograms per liter&quot;,
	symbol   = &quot;kg/l&quot;,
	utype    = &quot;density&quot;,
	scale    = 1000,
	default  = &quot;lb/USgal&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;kg/m3&quot;] = {
	name1    = &quot;kilogram per cubic metre&quot;,
	name1_us = &quot;kilogram per cubic meter&quot;,
	name2    = &quot;kilograms per cubic metre&quot;,
	name2_us = &quot;kilograms per cubic meter&quot;,
	symbol   = &quot;kg/m&lt;sup&gt;3&lt;/sup&gt;&quot;,
	utype    = &quot;density&quot;,
	scale    = 1,
	default  = &quot;lb/cuyd&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuft&quot;] = {
	name1    = &quot;pound per cubic foot&quot;,
	name2    = &quot;pounds per cubic foot&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;ft&quot;,
	utype    = &quot;density&quot;,
	scale    = 16.018463373960142,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuin&quot;] = {
	name1    = &quot;pound per cubic inch&quot;,
	name2    = &quot;pounds per cubic inch&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/cuyd&quot;] = {
	name1    = &quot;pound per cubic yard&quot;,
	name2    = &quot;pounds per cubic yard&quot;,
	symbol   = &quot;lb/cu&amp;nbsp;yd&quot;,
	utype    = &quot;density&quot;,
	scale    = 0.5932764212577829,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/impgal&quot;] = {
	name1    = &quot;pound per imperial gallon&quot;,
	name2    = &quot;pounds per imperial gallon&quot;,
	symbol   = &quot;lb/imp&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 99.776372663101697,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/in3&quot;] = {
	name1    = &quot;pound per cubic inch&quot;,
	name2    = &quot;pounds per cubic inch&quot;,
	symbol   = &quot;lb/cu&amp;thinsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/U.S.gal&quot;] = {
	name1    = &quot;pound per U.S. gallon&quot;,
	name2    = &quot;pounds per U.S. gallon&quot;,
	symbol   = &quot;lb/U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lb/USbu&quot;] = {
	name1    = &quot;pound per US bushel&quot;,
	name2    = &quot;pounds per US bushel&quot;,
	symbol   = &quot;lb/US&amp;nbsp;bu&quot;,
	utype    = &quot;density&quot;,
	scale    = 12.871859780974471,
	default  = &quot;kg/m3&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;lb/USgal&quot;] = {
	name1    = &quot;pound per US gallon&quot;,
	name2    = &quot;pounds per US gallon&quot;,
	symbol   = &quot;lb/US&amp;nbsp;gal&quot;,
	utype    = &quot;density&quot;,
	scale    = 119.82642731689663,
	default  = &quot;kg/L&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;lbm/cuin&quot;] = {
	name1    = &quot;pound mass per cubic inch&quot;,
	name2    = &quot;pounds mass per cubic inch&quot;,
	symbol   = &quot;lbm/cu&amp;thinsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 27679.904710203122,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;mg/L&quot;] = {
	name1    = &quot;milligram per litre&quot;,
	name1_us = &quot;milligram per liter&quot;,
	name2    = &quot;milligrams per litre&quot;,
	name2_us = &quot;milligrams per liter&quot;,
	symbol   = &quot;mg/L&quot;,
	utype    = &quot;density&quot;,
	scale    = 0.001,
	default  = &quot;lb/cuin&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;oz/cuin&quot;] = {
	name1    = &quot;ounce per cubic inch&quot;,
	name2    = &quot;ounces per cubic inch&quot;,
	symbol   = &quot;oz/cu&amp;nbsp;in&quot;,
	utype    = &quot;density&quot;,
	scale    = 1729.9940443876951,
	default  = &quot;g/cm3&quot;,
	link     = &quot;Density&quot;,
    },
    [&quot;g/cm3&quot;] = {
	per      = { &quot;g&quot;, &quot;cm3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuin&quot;,
    },
    [&quot;g/m3&quot;] = {
	per      = { &quot;g&quot;, &quot;m3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuyd&quot;,
	link     = &quot;density&quot;,
    },
    [&quot;Mg/m3&quot;] = {
	per      = { &quot;Mg&quot;, &quot;m3&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuft&quot;,
    },
    [&quot;mg/l&quot;] = {
	per      = { &quot;mg&quot;, &quot;l&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;oz/cuin&quot;,
    },
    [&quot;g/dL&quot;] = {
	per      = { &quot;g&quot;, &quot;dL&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;lb/cuin&quot;,
    },
    [&quot;g/l&quot;] = {
	per      = { &quot;g&quot;, &quot;l&quot; },
	utype    = &quot;density&quot;,
	default  = &quot;oz/cuin&quot;,
    },
    [&quot;lb/ft3&quot;] = {
	target   = &quot;lb/cuft&quot;,
    },
    [&quot;lb/yd3&quot;] = {
	target   = &quot;lb/cuyd&quot;,
    },
    [&quot;lbm/in3&quot;] = {
	target   = &quot;lbm/cuin&quot;,
    },
    [&quot;mcg/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;oz/in3&quot;] = {
	target   = &quot;oz/cuin&quot;,
    },
    [&quot;ug/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;g/dL&quot;] = {
	target   = &quot;g/dL&quot;,
    },
    [&quot;ug/l&quot;] = {
	target   = &quot;g/l&quot;,
    },
    [&quot;B.O.T.U.&quot;] = {
	name1    = &quot;Board of Trade Unit&quot;,
	symbol   = &quot;B.O.T.U.&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;bboe&quot;] = {
	name1    = &quot;barrel of oil equivalent&quot;,
	name2    = &quot;barrels of oil equivalent&quot;,
	symbol   = &quot;bboe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6117863200,
	default  = &quot;GJ&quot;,
    },
    [&quot;BOE&quot;] = {
	name1    = &quot;barrel of oil equivalent&quot;,
	name2    = &quot;barrels of oil equivalent&quot;,
	symbol   = &quot;BOE&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6117863200,
	default  = &quot;GJ&quot;,
    },
    [&quot;BTU&quot;] = {
	name1    = &quot;British thermal unit&quot;,
	symbol   = &quot;BTU&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
    },
    [&quot;Btu&quot;] = {
	name1    = &quot;British thermal unit&quot;,
	symbol   = &quot;Btu&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
    },
    [&quot;BTU-39F&quot;] = {
	name1    = &quot;British thermal unit (39F)&quot;,
	name2    = &quot;British thermal units (39F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;39F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1059.67,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-39F&quot;] = {
	name1    = &quot;British thermal unit (39F)&quot;,
	name2    = &quot;British thermal units (39F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;39F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1059.67,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-59F&quot;] = {
	name1    = &quot;British thermal unit (59F)&quot;,
	name2    = &quot;British thermal units (59F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;59F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.804,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-59F&quot;] = {
	name1    = &quot;British thermal unit (59F)&quot;,
	name2    = &quot;British thermal units (59F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;59F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.804,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-60F&quot;] = {
	name1    = &quot;British thermal unit (60F)&quot;,
	name2    = &quot;British thermal units (60F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;60F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.68,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-60F&quot;] = {
	name1    = &quot;British thermal unit (60F)&quot;,
	name2    = &quot;British thermal units (60F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;60F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.68,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-63F&quot;] = {
	name1    = &quot;British thermal unit (63F)&quot;,
	name2    = &quot;British thermal units (63F)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;63F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.6,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-63F&quot;] = {
	name1    = &quot;British thermal unit (63F)&quot;,
	name2    = &quot;British thermal units (63F)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;63F&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.6,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-ISO&quot;] = {
	name1    = &quot;British thermal unit (ISO)&quot;,
	name2    = &quot;British thermal units (ISO)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;ISO&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.056,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-ISO&quot;] = {
	target   = &quot;BTU-ISO&quot;,
    },
    [&quot;BTU-IT&quot;] = {
	name1    = &quot;British thermal unit (IT)&quot;,
	name2    = &quot;British thermal units (IT)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-IT&quot;] = {
	name1    = &quot;British thermal unit (IT)&quot;,
	name2    = &quot;British thermal units (IT)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.05585262,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-mean&quot;] = {
	name1    = &quot;British thermal unit (mean)&quot;,
	name2    = &quot;British thermal units (mean)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;mean&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.87,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-mean&quot;] = {
	name1    = &quot;British thermal unit (mean)&quot;,
	name2    = &quot;British thermal units (mean)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;mean&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055.87,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;BTU-th&quot;] = {
	name1    = &quot;British thermal unit (thermochemical)&quot;,
	name2    = &quot;British thermal units (thermochemical)&quot;,
	symbol   = &quot;BTU&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.35026444,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Btu-th&quot;] = {
	name1    = &quot;British thermal unit (thermochemical)&quot;,
	name2    = &quot;British thermal units (thermochemical)&quot;,
	symbol   = &quot;Btu&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1054.35026444,
	default  = &quot;kJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Cal&quot;] = {
	name1    = &quot;calorie&quot;,
	symbol   = &quot;Cal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
    },
    [&quot;cal&quot;] = {
	name1    = &quot;calorie&quot;,
	symbol   = &quot;cal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184,
	default  = &quot;J&quot;,
    },
    [&quot;Cal-15&quot;] = {
	name1    = &quot;Calorie (15C)&quot;,
	name2    = &quot;Calories (15C)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-15&quot;] = {
	name1    = &quot;calorie (15C)&quot;,
	name2    = &quot;calories (15C)&quot;,
	symbol   = &quot;cal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1858,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal-IT&quot;] = {
	name1    = &quot;Calorie (International Steam Table)&quot;,
	name2    = &quot;Calories (International Steam Table)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-IT&quot;] = {
	name1    = &quot;calorie (International Steam Table)&quot;,
	name2    = &quot;calories (International Steam Table)&quot;,
	symbol   = &quot;cal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal-th&quot;] = {
	name1    = &quot;Calorie (thermochemical)&quot;,
	name2    = &quot;Calories (thermochemical)&quot;,
	symbol   = &quot;Cal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal-th&quot;] = {
	name1    = &quot;calorie (thermochemical)&quot;,
	name2    = &quot;calories (thermochemical)&quot;,
	symbol   = &quot;cal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184,
	default  = &quot;J&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;ccatm&quot;] = {
	name1    = &quot;cubic centimetre-atmosphere&quot;,
	name1_us = &quot;cubic centimeter-atmosphere&quot;,
	symbol   = &quot;ccatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;CHU-IT&quot;] = {
	name1    = &quot;Celsius heat unit (International Table)&quot;,
	name2    = &quot;Celsius heat units (International Table)&quot;,
	symbol   = &quot;CHU&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1899.100534716,
	default  = &quot;kJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cm3atm&quot;] = {
	name1    = &quot;cubic centimetre-atmosphere&quot;,
	name1_us = &quot;cubic centimeter-atmosphere&quot;,
	symbol   = &quot;cm&lt;sup&gt;3&lt;/sup&gt;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cufootatm&quot;] = {
	name1    = &quot;cubic foot of atmosphere&quot;,
	name2    = &quot;cubic foot of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cufootnaturalgas&quot;] = {
	name1    = &quot;cubic foot of natural gas&quot;,
	name2    = &quot;cubic foot of natural gas&quot;,
	symbol   = &quot;cuftnaturalgas&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 1055055.85262,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cuftatm&quot;] = {
	name1    = &quot;cubic foot of atmosphere&quot;,
	name2    = &quot;cubic feet of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;cuftnaturalgas&quot;] = {
	name1    = &quot;cubic foot of natural gas&quot;,
	name2    = &quot;cubic feet of natural gas&quot;,
	symbol   = &quot;cuftnaturalgas&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 1055055.85262,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;cuydatm&quot;] = {
	name1    = &quot;cubic yard of atmosphere&quot;,
	name2    = &quot;cubic yards of atmosphere&quot;,
	symbol   = &quot;cu&amp;nbsp;yd&amp;nbsp;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 77468.5209852288,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Eh&quot;] = {
	name1    = &quot;Hartree&quot;,
	symbol   = &quot;''E''&lt;sub&gt;h&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.35974417e-18,
	default  = &quot;eV&quot;,
    },
    [&quot;erg&quot;] = {
	symbol   = &quot;erg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0000001,
	default  = &quot;J&quot;,
    },
    [&quot;eV&quot;] = {
	name1    = &quot;electronvolt&quot;,
	symbol   = &quot;eV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-19,
	default  = &quot;aJ&quot;,
    },
    [&quot;feV&quot;] = {
	name1    = &quot;femtoelectronvolt&quot;,
	symbol   = &quot;feV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-34,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;foe&quot;] = {
	symbol   = &quot;foe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1e44,
	default  = &quot;YJ&quot;,
	link     = &quot;Foe (unit)&quot;,
    },
    [&quot;ftlb&quot;] = {
	name1    = &quot;foot-pound&quot;,
	symbol   = &quot;ftlb&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftlb-f&quot;] = {
	name1    = &quot;foot-pound force&quot;,
	name2    = &quot;foot-pounds force&quot;,
	symbol   = &quot;ftlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftlbf&quot;] = {
	name1    = &quot;foot-pound force&quot;,
	name2    = &quot;foot-pounds force&quot;,
	symbol   = &quot;ftlbf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;J&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;ftpdl&quot;] = {
	name1    = &quot;foot-poundal&quot;,
	symbol   = &quot;ftpdl&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0421401100938048,
	default  = &quot;J&quot;,
    },
    [&quot;GeV&quot;] = {
	name1    = &quot;gigaelectronvolt&quot;,
	symbol   = &quot;GeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-10,
	default  = &quot;nJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;GLatm&quot;] = {
	name1    = &quot;gigalitre-atmosphere&quot;,
	name1_us = &quot;gigaliter-atmosphere&quot;,
	symbol   = &quot;GLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Glatm&quot;] = {
	name1    = &quot;gigalitre-atmosphere&quot;,
	name1_us = &quot;gigaliter-atmosphere&quot;,
	symbol   = &quot;Glatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;gTNT&quot;] = {
	name2    = &quot;grams of TNT&quot;,
	symbol   = &quot;gram of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;Gtoe&quot;] = {
	name1    = &quot;gigatonne of oil equivalent&quot;,
	name2    = &quot;gigatonnes of oil equivalent&quot;,
	symbol   = &quot;Gtoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e19,
	default  = &quot;EJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;GtonTNT&quot;] = {
	name2    = &quot;gigatons of TNT&quot;,
	symbol   = &quot;gigaton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e18,
	default  = &quot;EJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;GtTNT&quot;] = {
	name2    = &quot;gigatonnes of TNT&quot;,
	symbol   = &quot;gigatonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e18,
	default  = &quot;EJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;GW.h&quot;] = {
	name1    = &quot;gigawatt-hour&quot;,
	symbol   = &quot;GWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;GWh&quot;] = {
	name1    = &quot;gigawatt-hour&quot;,
	symbol   = &quot;GWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;hph&quot;] = {
	name1    = &quot;horsepower-hour&quot;,
	symbol   = &quot;hph&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2684519.537696172792,
	default  = &quot;kWh&quot;,
	link     = &quot;Horsepower&quot;,
    },
    [&quot;impgalatm&quot;] = {
	name1    = &quot;imperial gallon-atmosphere&quot;,
	symbol   = &quot;imp galatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 460.63256925,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;inlb&quot;] = {
	name1    = &quot;inch-pound&quot;,
	symbol   = &quot;inlb&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inlb-f&quot;] = {
	name1    = &quot;inch-pound force&quot;,
	name2    = &quot;inch-pounds force&quot;,
	symbol   = &quot;inlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inlbf&quot;] = {
	name1    = &quot;inch-pound force&quot;,
	name2    = &quot;inch-pounds force&quot;,
	symbol   = &quot;inlbf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inoz-f&quot;] = {
	name1    = &quot;inch-ounce force&quot;,
	name2    = &quot;inch-ounces force&quot;,
	symbol   = &quot;inoz&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.00706155181422604375,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;inozf&quot;] = {
	name1    = &quot;inch-ounce force&quot;,
	name2    = &quot;inch-ounces force&quot;,
	symbol   = &quot;inozf&quot;,
	utype    = &quot;energy&quot;,
	alttype  = &quot;torque&quot;,
	scale    = 0.00706155181422604375,
	default  = &quot;mJ&quot;,
	link     = &quot;Foot-pound (energy)&quot;,
    },
    [&quot;J&quot;] = {
	_name1   = &quot;joule&quot;,
	_symbol  = &quot;J&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;cal&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kBOE&quot;] = {
	name1    = &quot;kilo barrel of oil equivalent&quot;,
	name2    = &quot;kilo barrels of oil equivalent&quot;,
	symbol   = &quot;kBOE&quot;,
	utype    = &quot;energy&quot;,
	scale    = 6.1178632e12,
	default  = &quot;TJ&quot;,
	link     = &quot;Barrel of oil equivalent&quot;,
    },
    [&quot;kcal&quot;] = {
	name1    = &quot;kilocalorie&quot;,
	symbol   = &quot;kcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-15&quot;] = {
	name1    = &quot;kilocalorie (15C)&quot;,
	name2    = &quot;kilocalories (15C)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-IT&quot;] = {
	name1    = &quot;kilocalorie (International Steam Table)&quot;,
	name2    = &quot;kilocalories (International Steam Table)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186.8,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kcal-th&quot;] = {
	name1    = &quot;kilocalorie (thermochemical)&quot;,
	name2    = &quot;kilocalories (thermochemical)&quot;,
	symbol   = &quot;kcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kerg&quot;] = {
	name1    = &quot;kiloerg&quot;,
	symbol   = &quot;kerg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0001,
	default  = &quot;mJ&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;keV&quot;] = {
	name1    = &quot;kiloelectronvolt&quot;,
	symbol   = &quot;keV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-16,
	default  = &quot;fJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;kgTNT&quot;] = {
	name2    = &quot;kilograms of TNT&quot;,
	symbol   = &quot;kilogram of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;kLatm&quot;] = {
	name1    = &quot;kilolitre-atmosphere&quot;,
	name1_us = &quot;kiloliter-atmosphere&quot;,
	symbol   = &quot;kLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;klatm&quot;] = {
	name1    = &quot;kilolitre-atmosphere&quot;,
	name1_us = &quot;kiloliter-atmosphere&quot;,
	symbol   = &quot;klatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;kt(TNT)&quot;] = {
	name1    = &quot;kilotonne&quot;,
	name1_us = &quot;kiloton&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktoe&quot;] = {
	name1    = &quot;kilotonne of oil equivalent&quot;,
	name2    = &quot;kilotonnes of oil equivalent&quot;,
	symbol   = &quot;ktoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e13,
	default  = &quot;TJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;ktonTNT&quot;] = {
	name1    = &quot;kiloton of TNT&quot;,
	name2    = &quot;kilotons of TNT&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktTNT&quot;] = {
	name2    = &quot;kilotonnes of TNT&quot;,
	symbol   = &quot;kilotonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;kW.h&quot;] = {
	name1    = &quot;kilowatt-hour&quot;,
	symbol   = &quot;kWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;kWh&quot;] = {
	name1    = &quot;kilowatt-hour&quot;,
	symbol   = &quot;kWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000,
	default  = &quot;MJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;Latm&quot;] = {
	name1    = &quot;litre-atmosphere&quot;,
	name1_us = &quot;liter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;latm&quot;] = {
	name1    = &quot;litre-atmosphere&quot;,
	name1_us = &quot;liter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;m3atm&quot;] = {
	name1    = &quot;cubic metre-atmosphere&quot;,
	name1_us = &quot;cubic meter-atmosphere&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;atm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Mcal&quot;] = {
	name1    = &quot;megacalorie&quot;,
	symbol   = &quot;Mcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal&quot;] = {
	name1    = &quot;millicalorie&quot;,
	symbol   = &quot;mcal&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.004184,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-15&quot;] = {
	name1    = &quot;megacalorie (15C)&quot;,
	name2    = &quot;megacalories (15C)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4185800,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-15&quot;] = {
	name1    = &quot;millicalorie (15C)&quot;,
	name2    = &quot;millicalories (15C)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;15&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0041858,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-IT&quot;] = {
	name1    = &quot;megacalorie (International Steam Table)&quot;,
	name2    = &quot;megacalories (International Steam Table)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186800,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-IT&quot;] = {
	name1    = &quot;millicalorie (International Steam Table)&quot;,
	name2    = &quot;millicalories (International Steam Table)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;IT&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0041868,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Mcal-th&quot;] = {
	name1    = &quot;megacalorie (thermochemical)&quot;,
	name2    = &quot;megacalories (thermochemical)&quot;,
	symbol   = &quot;Mcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;mcal-th&quot;] = {
	name1    = &quot;millicalorie (thermochemical)&quot;,
	name2    = &quot;millicalories (thermochemical)&quot;,
	symbol   = &quot;mcal&lt;sub&gt;th&lt;/sub&gt;&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.004184,
	default  = &quot;mJ&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Merg&quot;] = {
	name1    = &quot;megaerg&quot;,
	symbol   = &quot;Merg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.1,
	default  = &quot;J&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;merg&quot;] = {
	name1    = &quot;millierg&quot;,
	symbol   = &quot;merg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0000000001,
	default  = &quot;J&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;MeV&quot;] = {
	name1    = &quot;megaelectronvolt&quot;,
	symbol   = &quot;MeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-13,
	default  = &quot;pJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;meV&quot;] = {
	name1    = &quot;millielectronvolt&quot;,
	symbol   = &quot;meV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-22,
	default  = &quot;zJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;MLatm&quot;] = {
	name1    = &quot;megalitre-atmosphere&quot;,
	name1_us = &quot;megaliter-atmosphere&quot;,
	symbol   = &quot;MLatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000,
	default  = &quot;MJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Mlatm&quot;] = {
	name1    = &quot;megalitre-atmosphere&quot;,
	name1_us = &quot;megaliter-atmosphere&quot;,
	symbol   = &quot;Mlatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101325000,
	default  = &quot;MJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;mLatm&quot;] = {
	name1    = &quot;millilitre-atmosphere&quot;,
	name1_us = &quot;milliliter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;mlatm&quot;] = {
	name1    = &quot;millilitre-atmosphere&quot;,
	name1_us = &quot;milliliter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;MMBtu&quot;] = {
	name1    = &quot;million British thermal units&quot;,
	name2    = &quot;million British thermal units&quot;,
	symbol   = &quot;MMBtu&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1055055852.62,
	default  = &quot;GJ&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;Mt(TNT)&quot;] = {
	name1    = &quot;megatonne&quot;,
	name1_us = &quot;megaton&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;Mtoe&quot;] = {
	name1    = &quot;megatonne of oil equivalent&quot;,
	name2    = &quot;megatonnes of oil equivalent&quot;,
	symbol   = &quot;Mtoe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.1868e16,
	default  = &quot;PJ&quot;,
	link     = &quot;Tonne of oil equivalent&quot;,
    },
    [&quot;MtonTNT&quot;] = {
	name1    = &quot;megaton of TNT&quot;,
	name2    = &quot;megatons of TNT&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;mtonTNT&quot;] = {
	name2    = &quot;millitons of TNT&quot;,
	symbol   = &quot;milliton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtTNT&quot;] = {
	name2    = &quot;megatonnes of TNT&quot;,
	symbol   = &quot;megatonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e15,
	default  = &quot;PJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;mtTNT&quot;] = {
	name2    = &quot;millitonnes of TNT&quot;,
	symbol   = &quot;millitonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000,
	default  = &quot;MJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MW.h&quot;] = {
	name1    = &quot;megawatt-hour&quot;,
	symbol   = &quot;MWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;mW.h&quot;] = {
	name1    = &quot;milliwatt-hour&quot;,
	symbol   = &quot;mWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6,
	default  = &quot;J&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;MWh&quot;] = {
	name1    = &quot;megawatt-hour&quot;,
	symbol   = &quot;MWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600000000,
	default  = &quot;GJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;mWh&quot;] = {
	name1    = &quot;milliwatt-hour&quot;,
	symbol   = &quot;mWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6,
	default  = &quot;J&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;neV&quot;] = {
	name1    = &quot;nanoelectronvolt&quot;,
	symbol   = &quot;neV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-28,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;PeV&quot;] = {
	name1    = &quot;petaelectronvolt&quot;,
	symbol   = &quot;PeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0001602176487,
	default  = &quot;mJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;peV&quot;] = {
	name1    = &quot;picoelectronvolt&quot;,
	symbol   = &quot;peV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-31,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;PSh&quot;] = {
	name1    = &quot;Pferdestrkenstunde&quot;,
	symbol   = &quot;PSh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2647795.5,
	default  = &quot;kWh&quot;,
    },
    [&quot;quad&quot;] = {
	name1    = &quot;quadrillion British thermal units&quot;,
	name2    = &quot;quadrillion British thermal units&quot;,
	symbol   = &quot;quad&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.054804e18,
	default  = &quot;EJ&quot;,
	link     = &quot;Quad (unit)&quot;,
    },
    [&quot;Ry&quot;] = {
	name1    = &quot;rydberg&quot;,
	symbol   = &quot;Ry&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2.1798741e-18,
	default  = &quot;eV&quot;,
	link     = &quot;Rydberg constant&quot;,
    },
    [&quot;scc&quot;] = {
	name1    = &quot;standard cubic centimetre&quot;,
	name1_us = &quot;standard cubic centimeter&quot;,
	symbol   = &quot;scc&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.101325,
	default  = &quot;mJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scf&quot;] = {
	name1    = &quot;standard cubic foot&quot;,
	name2    = &quot;standard cubic feet&quot;,
	symbol   = &quot;scf&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scfoot&quot;] = {
	name1    = &quot;standard cubic foot&quot;,
	name2    = &quot;standard cubic foot&quot;,
	symbol   = &quot;scf&quot;,
	utype    = &quot;energy&quot;,
	scale    = 2869.2044809344,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;scy&quot;] = {
	name1    = &quot;standard cubic yard&quot;,
	symbol   = &quot;scy&quot;,
	utype    = &quot;energy&quot;,
	scale    = 77468.5209852288,
	default  = &quot;kJ&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;sl&quot;] = {
	name1    = &quot;standard litre&quot;,
	name1_us = &quot;standard liter&quot;,
	symbol   = &quot;sl&quot;,
	utype    = &quot;energy&quot;,
	scale    = 101.325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;t(TNT)&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TeV&quot;] = {
	name1    = &quot;teraelectronvolt&quot;,
	symbol   = &quot;TeV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-7,
	default  = &quot;J&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;th&quot;] = {
	name1    = &quot;thermie&quot;,
	symbol   = &quot;th&quot;,
	utype    = &quot;energy&quot;,
	scale    = 4186800,
	default  = &quot;MJ&quot;,
	link     = &quot;Conversion of units&quot;,
    },
    [&quot;thm-EC&quot;] = {
	name1    = &quot;therm (EC)&quot;,
	name2    = &quot;therms (EC)&quot;,
	symbol   = &quot;thm (EC)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105506000,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;thm-UK&quot;] = {
	name1    = &quot;therm (UK)&quot;,
	name2    = &quot;therms (UK)&quot;,
	symbol   = &quot;thm (UK)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105505585.257348,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;thm-US&quot;] = {
	name1    = &quot;therm (US)&quot;,
	name1_us = &quot;therm (U.S.)&quot;,
	name2    = &quot;therms (US)&quot;,
	name2_us = &quot;therms (U.S.)&quot;,
	symbol   = &quot;thm (US)&quot;,
	sym_us   = &quot;thm (U.S.)&quot;,
	utype    = &quot;energy&quot;,
	scale    = 105480400,
	default  = &quot;MJ&quot;,
	link     = &quot;Therm&quot;,
    },
    [&quot;toe&quot;] = {
	name1    = &quot;tonne of oil equivalent&quot;,
	name2    = &quot;tonnes of oil equivalent&quot;,
	symbol   = &quot;toe&quot;,
	utype    = &quot;energy&quot;,
	scale    = 41868000000,
	default  = &quot;GJ&quot;,
    },
    [&quot;tonTNT&quot;] = {
	name2    = &quot;tons of TNT&quot;,
	symbol   = &quot;ton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;tTNT&quot;] = {
	name2    = &quot;tonnes of TNT&quot;,
	symbol   = &quot;tonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184000000,
	default  = &quot;GJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TtonTNT&quot;] = {
	name2    = &quot;teratons of TNT&quot;,
	symbol   = &quot;teraton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e21,
	default  = &quot;ZJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TtTNT&quot;] = {
	name2    = &quot;teratonnes of TNT&quot;,
	symbol   = &quot;teratonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4.184e21,
	default  = &quot;ZJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TW.h&quot;] = {
	name1    = &quot;terawatt-hour&quot;,
	symbol   = &quot;TWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e15,
	default  = &quot;PJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;TWh&quot;] = {
	name1    = &quot;terawatt-hour&quot;,
	symbol   = &quot;TWh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3.6e15,
	default  = &quot;PJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;USgalatm&quot;] = {
	name1    = &quot;US gallon-atmosphere&quot;,
	name1_us = &quot;U.S. gallon-atmosphere&quot;,
	symbol   = &quot;US&amp;nbsp;galatm&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;galatm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 383.5568490138,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;W.h&quot;] = {
	name1    = &quot;watt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600,
	default  = &quot;kJ&quot;,
    },
    [&quot;Wh&quot;] = {
	name1    = &quot;watt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 3600,
	default  = &quot;kJ&quot;,
    },
    [&quot;erg&quot;] = {
	name1    = &quot;microerg&quot;,
	symbol   = &quot;erg&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1e-13,
	default  = &quot;nJ&quot;,
	link     = &quot;Erg&quot;,
    },
    [&quot;eV&quot;] = {
	name1    = &quot;microelectronvolt&quot;,
	symbol   = &quot;eV&quot;,
	utype    = &quot;energy&quot;,
	scale    = 1.602176487e-25,
	default  = &quot;yJ&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;Latm&quot;] = {
	name1    = &quot;microlitre-atmosphere&quot;,
	name1_us = &quot;microliter-atmosphere&quot;,
	symbol   = &quot;Latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.000101325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;latm&quot;] = {
	name1    = &quot;microlitre-atmosphere&quot;,
	name1_us = &quot;microliter-atmosphere&quot;,
	symbol   = &quot;latm&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.000101325,
	default  = &quot;J&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;tonTNT&quot;] = {
	name2    = &quot;microtons of TNT&quot;,
	symbol   = &quot;microton of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;tTNT&quot;] = {
	name2    = &quot;microtonnes of TNT&quot;,
	symbol   = &quot;microtonne of TNT&quot;,
	usename  = 1,
	utype    = &quot;energy&quot;,
	scale    = 4184,
	default  = &quot;kJ&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;W.h&quot;] = {
	name1    = &quot;microwatt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0036,
	default  = &quot;mJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;Wh&quot;] = {
	name1    = &quot;microwatt-hour&quot;,
	symbol   = &quot;Wh&quot;,
	utype    = &quot;energy&quot;,
	scale    = 0.0036,
	default  = &quot;mJ&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;-kW.h&quot;] = {
	target   = &quot;kW.h&quot;,
	link     = &quot;Kilowatt hour&quot;,
    },
    [&quot;btu&quot;] = {
	target   = &quot;BTU&quot;,
    },
    [&quot;Calorie&quot;] = {
	target   = &quot;Cal&quot;,
    },
    [&quot;ft.lbf&quot;] = {
	target   = &quot;ftlbf&quot;,
    },
    [&quot;ftlb-f&quot;] = {
	target   = &quot;ftlb-f&quot;,
    },
    [&quot;ftlbf&quot;] = {
	target   = &quot;ftlbf&quot;,
    },
    [&quot;g-cal-15&quot;] = {
	target   = &quot;cal-15&quot;,
    },
    [&quot;g-cal-IT&quot;] = {
	target   = &quot;cal-IT&quot;,
    },
    [&quot;g-cal-th&quot;] = {
	target   = &quot;cal-th&quot;,
    },
    [&quot;g-kcal-15&quot;] = {
	target   = &quot;kcal-15&quot;,
    },
    [&quot;g-kcal-IT&quot;] = {
	target   = &quot;kcal-IT&quot;,
    },
    [&quot;g-kcal-th&quot;] = {
	target   = &quot;kcal-th&quot;,
    },
    [&quot;g-Mcal-15&quot;] = {
	target   = &quot;Mcal-15&quot;,
    },
    [&quot;g-mcal-15&quot;] = {
	target   = &quot;mcal-15&quot;,
    },
    [&quot;g-Mcal-IT&quot;] = {
	target   = &quot;Mcal-IT&quot;,
    },
    [&quot;g-mcal-IT&quot;] = {
	target   = &quot;mcal-IT&quot;,
    },
    [&quot;g-Mcal-th&quot;] = {
	target   = &quot;Mcal-th&quot;,
    },
    [&quot;g-mcal-th&quot;] = {
	target   = &quot;mcal-th&quot;,
    },
    [&quot;GW-h&quot;] = {
	target   = &quot;GW.h&quot;,
    },
    [&quot;GWh&quot;] = {
	target   = &quot;GW.h&quot;,
    },
    [&quot;Hartree&quot;] = {
	target   = &quot;Eh&quot;,
    },
    [&quot;hp.h&quot;] = {
	target   = &quot;hph&quot;,
    },
    [&quot;hph&quot;] = {
	target   = &quot;hph&quot;,
    },
    [&quot;in.lb-f&quot;] = {
	target   = &quot;inlb-f&quot;,
    },
    [&quot;in.lbf&quot;] = {
	target   = &quot;inlbf&quot;,
    },
    [&quot;in.oz-f&quot;] = {
	target   = &quot;inoz-f&quot;,
    },
    [&quot;in.ozf&quot;] = {
	target   = &quot;inozf&quot;,
    },
    [&quot;inlb-f&quot;] = {
	target   = &quot;inlb-f&quot;,
    },
    [&quot;inlbf&quot;] = {
	target   = &quot;inlbf&quot;,
    },
    [&quot;inoz-f&quot;] = {
	target   = &quot;inoz-f&quot;,
    },
    [&quot;inozf&quot;] = {
	target   = &quot;inozf&quot;,
    },
    [&quot;kbboe&quot;] = {
	target   = &quot;kBOE&quot;,
	symbol   = &quot;kbboe&quot;,
    },
    [&quot;kg-cal-15&quot;] = {
	target   = &quot;Cal-15&quot;,
    },
    [&quot;kg-cal-IT&quot;] = {
	target   = &quot;Cal-IT&quot;,
    },
    [&quot;kg-cal-th&quot;] = {
	target   = &quot;Cal-th&quot;,
    },
    [&quot;kW-h&quot;] = {
	target   = &quot;kW.h&quot;,
    },
    [&quot;kWh&quot;] = {
	target   = &quot;kW.h&quot;,
    },
    [&quot;MW-h&quot;] = {
	target   = &quot;MW.h&quot;,
    },
    [&quot;mW-h&quot;] = {
	target   = &quot;mW.h&quot;,
    },
    [&quot;MWh&quot;] = {
	target   = &quot;MW.h&quot;,
    },
    [&quot;mWh&quot;] = {
	target   = &quot;mW.h&quot;,
    },
    [&quot;TW-h&quot;] = {
	target   = &quot;TW.h&quot;,
    },
    [&quot;TWh&quot;] = {
	target   = &quot;TW.h&quot;,
    },
    [&quot;U.S.galatm&quot;] = {
	target   = &quot;USgalatm&quot;,
	sp_us    = true,
    },
    [&quot;uerg&quot;] = {
	target   = &quot;erg&quot;,
    },
    [&quot;ueV&quot;] = {
	target   = &quot;eV&quot;,
    },
    [&quot;uLatm&quot;] = {
	target   = &quot;Latm&quot;,
    },
    [&quot;ulatm&quot;] = {
	target   = &quot;latm&quot;,
    },
    [&quot;usgalatm&quot;] = {
	target   = &quot;USgalatm&quot;,
    },
    [&quot;utonTNT&quot;] = {
	target   = &quot;tonTNT&quot;,
    },
    [&quot;utTNT&quot;] = {
	target   = &quot;tTNT&quot;,
    },
    [&quot;uW-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;uW.h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;uWh&quot;] = {
	target   = &quot;Wh&quot;,
    },
    [&quot;uWh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;erg&quot;] = {
	target   = &quot;erg&quot;,
    },
    [&quot;eV&quot;] = {
	target   = &quot;eV&quot;,
    },
    [&quot;Latm&quot;] = {
	target   = &quot;Latm&quot;,
    },
    [&quot;latm&quot;] = {
	target   = &quot;latm&quot;,
    },
    [&quot;tonTNT&quot;] = {
	target   = &quot;tonTNT&quot;,
    },
    [&quot;tTNT&quot;] = {
	target   = &quot;tTNT&quot;,
    },
    [&quot;W-h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;W.h&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;Wh&quot;,
    },
    [&quot;Wh&quot;] = {
	target   = &quot;W.h&quot;,
    },
    [&quot;eVpar&quot;] = {
	_name1   = &quot;electronvolt&quot;,
	_symbol  = &quot;eV&quot;,
	utype    = &quot;energy per chemical amount&quot;,
	scale    = 96485.329522144166,
	prefixes = 1,
	default  = &quot;kcal/mol&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;kcal/mol&quot;] = {
	per      = { &quot;kcal&quot;, &quot;mol&quot; },
	utype    = &quot;energy per chemical amount&quot;,
	default  = &quot;kJ/mol&quot;,
	link     = &quot;Kilocalorie per mole&quot;,
    },
    [&quot;kJ/mol&quot;] = {
	per      = { &quot;kJ&quot;, &quot;mol&quot; },
	utype    = &quot;energy per chemical amount&quot;,
	default  = &quot;kcal/mol&quot;,
	link     = &quot;Joule per mole&quot;,
    },
    [&quot;kWh/100 km&quot;] = {
	name1    = &quot;kilowatt-hour per 100 kilometres&quot;,
	name1_us = &quot;kilowatt-hour per 100 kilometers&quot;,
	name2    = &quot;kilowatt-hours per 100 kilometres&quot;,
	name2_us = &quot;kilowatt-hours per 100 kilometers&quot;,
	symbol   = &quot;kWh/100&amp;nbsp;km&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 36,
	default  = &quot;MJ/km kWh/mi&quot;,
	link     = &quot;Watt-hour&quot;,
    },
    [&quot;kWh/100 mi&quot;] = {
	name1    = &quot;kilowatt-hour per 100 miles&quot;,
	name2    = &quot;kilowatt-hours per 100 miles&quot;,
	symbol   = &quot;kWh/100&amp;nbsp;mi&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 22.3694,
	default  = &quot;mpge&quot;,
	link     = &quot;Miles per gallon gasoline equivalent&quot;,
    },
    [&quot;MJ/100 km&quot;] = {
	name1    = &quot;megajoule per 100 kilometres&quot;,
	name1_us = &quot;megajoule per 100 kilometers&quot;,
	name2    = &quot;megajoules per 100 kilometres&quot;,
	name2_us = &quot;megajoules per 100 kilometers&quot;,
	symbol   = &quot;MJ/100&amp;nbsp;km&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 10,
	default  = &quot;BTU/mi&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;mpge&quot;] = {
	name1    = &quot;mile per gallon gasoline equivalent&quot;,
	name2    = &quot;miles per gallon gasoline equivalent&quot;,
	symbol   = &quot;mpg&amp;#8209;e&quot;,
	utype    = &quot;energy per unit length&quot;,
	scale    = 13e-6,
	invert   = -1,
	iscomplex= true,
	default  = &quot;kWh/100 mi&quot;,
	link     = &quot;Miles per gallon gasoline equivalent&quot;,
    },
    [&quot;BTU/mi&quot;] = {
	per      = { &quot;BTU&quot;, &quot;mi&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;v &gt; 1525 ! M ! k ! J/km&quot;,
    },
    [&quot;kJ/km&quot;] = {
	per      = { &quot;kJ&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;BTU/mi&quot;,
    },
    [&quot;kWh/km&quot;] = {
	per      = { &quot;-kW.h&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;MJ/km kWh/mi&quot;,
    },
    [&quot;kWh/mi&quot;] = {
	per      = { &quot;-kW.h&quot;, &quot;mi&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;kWh/km MJ/km&quot;,
    },
    [&quot;MJ/km&quot;] = {
	per      = { &quot;MJ&quot;, &quot;km&quot; },
	utype    = &quot;energy per unit length&quot;,
	default  = &quot;BTU/mi&quot;,
    },
    [&quot;mpg-e&quot;] = {
	target   = &quot;mpge&quot;,
    },
    [&quot;BTU/lb&quot;] = {
	name1    = &quot;British thermal unit per pound&quot;,
	name2    = &quot;British thermal units per pound&quot;,
	symbol   = &quot;BTU/lb&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 429.92261414790346,
	default  = &quot;kJ/kg&quot;,
	link     = &quot;British thermal unit&quot;,
    },
    [&quot;cal/g&quot;] = {
	name1    = &quot;calorie per gram&quot;,
	name2    = &quot;calories per gram&quot;,
	symbol   = &quot;cal/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184,
	default  = &quot;J/g&quot;,
    },
    [&quot;GJ/kg&quot;] = {
	name1    = &quot;gigajoule per kilogram&quot;,
	name2    = &quot;gigajoules per kilogram&quot;,
	symbol   = &quot;GJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1e9,
	default  = &quot;ktTNT/t&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;J/g&quot;] = {
	name1    = &quot;joule per gram&quot;,
	name2    = &quot;joules per gram&quot;,
	symbol   = &quot;J/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000,
	default  = &quot;kcal/g&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kcal/g&quot;] = {
	name1    = &quot;kilocalorie per gram&quot;,
	name2    = &quot;kilocalories per gram&quot;,
	symbol   = &quot;kcal/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000,
	default  = &quot;kJ/g&quot;,
    },
    [&quot;kJ/g&quot;] = {
	name1    = &quot;kilojoule per gram&quot;,
	name2    = &quot;kilojoules per gram&quot;,
	symbol   = &quot;kJ/g&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000000,
	default  = &quot;kcal/g&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;kJ/kg&quot;] = {
	name1    = &quot;kilojoule per kilogram&quot;,
	name2    = &quot;kilojoules per kilogram&quot;,
	symbol   = &quot;kJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1000,
	default  = &quot;BTU/lb&quot;,
    },
    [&quot;ktonTNT/MT&quot;] = {
	name2    = &quot;kilotons of TNT per metric ton&quot;,
	symbol   = &quot;kiloton of TNT per metric ton&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000000,
	default  = &quot;GJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;ktTNT/t&quot;] = {
	name2    = &quot;kilotonnes of TNT per tonne&quot;,
	symbol   = &quot;kilotonne of TNT per tonne&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4184000000,
	default  = &quot;GJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtonTNT/MT&quot;] = {
	name2    = &quot;megatons of TNT per metric ton&quot;,
	symbol   = &quot;megaton of TNT per metric ton&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;MtTNT/MT&quot;] = {
	name2    = &quot;megatonnes of TNT per tonne&quot;,
	symbol   = &quot;megatonne of TNT per tonne&quot;,
	usename  = 1,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 4.184e12,
	default  = &quot;TJ/kg&quot;,
	link     = &quot;TNT equivalent&quot;,
    },
    [&quot;TJ/kg&quot;] = {
	name1    = &quot;terajoule per kilogram&quot;,
	name2    = &quot;terajoules per kilogram&quot;,
	symbol   = &quot;TJ/kg&quot;,
	utype    = &quot;energy per unit mass&quot;,
	scale    = 1e12,
	default  = &quot;MtTNT/MT&quot;,
	link     = &quot;Joule&quot;,
    },
    [&quot;Cal/g&quot;] = {
	per      = { &quot;Cal&quot;, &quot;g&quot; },
	utype    = &quot;energy per unit mass&quot;,
	default  = &quot;kJ/g&quot;,
    },
    [&quot;BTU/cuft&quot;] = {
	per      = { &quot;BTU&quot;, &quot;cuft&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/12USoz(mL)serve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USoz(mL)serve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/12USoz(ml)serve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USoz(ml)serve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/l&quot;,
    },
    [&quot;Cal/12USozserve&quot;] = {
	per      = { &quot;Cal&quot;, &quot;-12USozserve&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/L&quot;,
    },
    [&quot;Cal/USoz&quot;] = {
	per      = { &quot;Cal&quot;, &quot;USoz&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;kJ/ml&quot;,
    },
    [&quot;kJ/L&quot;] = {
	per      = { &quot;kJ&quot;, &quot;L&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;kJ/l&quot;] = {
	per      = { &quot;kJ&quot;, &quot;l&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;kJ/ml&quot;] = {
	per      = { &quot;kJ&quot;, &quot;ml&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;Cal/USoz&quot;,
    },
    [&quot;MJ/m3&quot;] = {
	per      = { &quot;MJ&quot;, &quot;m3&quot; },
	utype    = &quot;energy per unit volume&quot;,
	default  = &quot;BTU/cuft&quot;,
    },
    [&quot;Sv&quot;] = {
	_name1   = &quot;sievert&quot;,
	_symbol  = &quot;Sv&quot;,
	utype    = &quot;equivalent radiation dose&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;rem&quot;,
	link     = &quot;Sievert&quot;,
    },
    [&quot;rem&quot;] = {
	_name1   = &quot;rem&quot;,
	_symbol  = &quot;rem&quot;,
	utype    = &quot;equivalent radiation dose&quot;,
	scale    = 0.01,
	prefixes = 1,
	default  = &quot;Sv&quot;,
	link     = &quot;Roentgen equivalent man&quot;,
    },
    [&quot;g/km&quot;] = {
	name1    = &quot;gram per kilometre&quot;,
	name1_us = &quot;gram per kilometer&quot;,
	name2    = &quot;grams per kilometre&quot;,
	name2_us = &quot;grams per kilometer&quot;,
	symbol   = &quot;g/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1e-6,
	default  = &quot;oz/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;g/mi&quot;] = {
	name1    = &quot;gram per mile&quot;,
	name2    = &quot;grams per mile&quot;,
	symbol   = &quot;g/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 6.2137119223733397e-7,
	default  = &quot;g/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;gCO2/km&quot;] = {
	name1    = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name1_us = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	name2    = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name2_us = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	symbol   = &quot;g(CO&lt;sub&gt;2&lt;/sub&gt;)/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1e-6,
	default  = &quot;ozCO2/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;gCO2/mi&quot;] = {
	name1    = &quot;gram of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;grams of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;g(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 6.2137119223733397e-7,
	default  = &quot;gCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;kg/km&quot;] = {
	name1    = &quot;kilogram per kilometre&quot;,
	name1_us = &quot;kilogram per kilometer&quot;,
	name2    = &quot;kilograms per kilometre&quot;,
	name2_us = &quot;kilograms per kilometer&quot;,
	symbol   = &quot;kg/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.001,
	default  = &quot;lb/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;kgCO2/km&quot;] = {
	name1    = &quot;kilogram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name1_us = &quot;kilogram of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	name2    = &quot;kilograms of CO&lt;sub&gt;2&lt;/sub&gt; per kilometre&quot;,
	name2_us = &quot;kilograms of CO&lt;sub&gt;2&lt;/sub&gt; per kilometer&quot;,
	symbol   = &quot;kg(CO&lt;sub&gt;2&lt;/sub&gt;)/km&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.001,
	default  = &quot;lbCO2/mi&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lb/mi&quot;] = {
	name1    = &quot;pound per mile&quot;,
	name2    = &quot;pounds per mile&quot;,
	symbol   = &quot;lb/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.00028184923173665794,
	default  = &quot;kg/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;lbCO2/mi&quot;] = {
	name1    = &quot;pound of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;pounds of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;lb(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 0.00028184923173665794,
	default  = &quot;kgCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;oz/mi&quot;] = {
	name1    = &quot;ounce per mile&quot;,
	name2    = &quot;ounces per mile&quot;,
	symbol   = &quot;oz/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1.7615576983541121e-5,
	default  = &quot;g/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;ozCO2/mi&quot;] = {
	name1    = &quot;ounce of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	name2    = &quot;ounces of CO&lt;sub&gt;2&lt;/sub&gt; per mile&quot;,
	symbol   = &quot;oz(CO&lt;sub&gt;2&lt;/sub&gt;)/mi&quot;,
	utype    = &quot;exhaust emission&quot;,
	scale    = 1.7615576983541121e-5,
	default  = &quot;gCO2/km&quot;,
	link     = &quot;Exhaust gas&quot;,
    },
    [&quot;cuft/a&quot;] = {
	name1    = &quot;cubic foot per annum&quot;,
	name2    = &quot;cubic feet per annum&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 8.9730672142368242e-10,
	default  = &quot;m3/a&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/d&quot;] = {
	name1    = &quot;cubic foot per day&quot;,
	name2    = &quot;cubic feet per day&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 3.2774128000000003e-7,
	default  = &quot;m3/d&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/h&quot;] = {
	name1    = &quot;cubic foot per hour&quot;,
	name2    = &quot;cubic feet per hour&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 7.8657907200000004e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuft/min&quot;] = {
	name1    = &quot;cubic foot per minute&quot;,
	name2    = &quot;cubic feet per minute&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00047194744319999999,
	default  = &quot;m3/min&quot;,
	link     = &quot;Cubic foot#cubic foot per second&quot;,
    },
    [&quot;cuft/s&quot;] = {
	name1    = &quot;cubic foot per second&quot;,
	name2    = &quot;cubic feet per second&quot;,
	symbol   = &quot;cu&amp;nbsp;ft/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 28316846592e-12,
	default  = &quot;m3/s&quot;,
    },
    [&quot;cumi/a&quot;] = {
	name1    = &quot;cubic mile per annum&quot;,
	name2    = &quot;cubic miles per annum&quot;,
	symbol   = &quot;cu&amp;nbsp;mi/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 132.08171170940057,
	default  = &quot;km3/a&quot;,
	link     = &quot;Cubic foot per second&quot;,
    },
    [&quot;cuyd/h&quot;] = {
	name1    = &quot;cubic yard per hour&quot;,
	name2    = &quot;cubic yards per hour&quot;,
	symbol   = &quot;cuyd/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00021237634944000001,
	default  = &quot;m3/h&quot;,
	link     = &quot;Cubic foot per minute&quot;,
    },
    [&quot;cuyd/s&quot;] = {
	name1    = &quot;cubic yard per second&quot;,
	name2    = &quot;cubic yards per second&quot;,
	symbol   = &quot;cu&amp;nbsp;yd/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.76455485798400002,
	default  = &quot;m3/s&quot;,
    },
    [&quot;Goilbbl/a&quot;] = {
	name1    = &quot;billion barrels per year&quot;,
	name2    = &quot;billion barrels per year&quot;,
	symbol   = &quot;Gbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933836,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e6 ! e9 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;impgal/h&quot;] = {
	name1    = &quot;imperial gallon per hour&quot;,
	name2    = &quot;imperial gallons per hour&quot;,
	symbol   = &quot;imp&amp;nbsp;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.2628027777777779e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;impgal/min&quot;] = {
	name1    = &quot;imperial gallon per minute&quot;,
	name2    = &quot;imperial gallons per minute&quot;,
	symbol   = &quot;imp gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 7.5768166666666671e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;impgal/s&quot;] = {
	name1    = &quot;imperial gallon per second&quot;,
	name2    = &quot;imperial gallons per second&quot;,
	symbol   = &quot;impgal/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00454609,
	default  = &quot;m3/s&quot;,
	link     = &quot;Imperial gallons per second&quot;,
    },
    [&quot;km3/a&quot;] = {
	name1    = &quot;cubic kilometre per annum&quot;,
	name1_us = &quot;cubic kilometer per annum&quot;,
	name2    = &quot;cubic kilometres per annum&quot;,
	name2_us = &quot;cubic kilometers per annum&quot;,
	symbol   = &quot;km&lt;sup&gt;3&lt;/sup&gt;/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 31.68808781402895,
	default  = &quot;cumi/a&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;km3/d&quot;] = {
	name1    = &quot;cubic kilometre per day&quot;,
	name1_us = &quot;cubic kilometer per day&quot;,
	name2    = &quot;cubic kilometres per day&quot;,
	name2_us = &quot;cubic kilometers per day&quot;,
	symbol   = &quot;km&lt;sup&gt;3&lt;/sup&gt;/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 11574.074074074075,
	default  = &quot;cuft/d&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;koilbbl/a&quot;] = {
	name1    = &quot;thousand barrels per year&quot;,
	name2    = &quot;thousand barrels per year&quot;,
	symbol   = &quot;kbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933841e-6,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;koilbbl/d&quot;] = {
	name1    = &quot;thousand barrels per day&quot;,
	name2    = &quot;thousand barrels per day&quot;,
	symbol   = &quot;kbbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.0018401307283333335,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3/d&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;L/h&quot;] = {
	name1    = &quot;litre per hour&quot;,
	name1_us = &quot;liter per hour&quot;,
	name2    = &quot;litres per hour&quot;,
	name2_us = &quot;liters per hour&quot;,
	symbol   = &quot;L/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 2.7777777777777776e-7,
	default  = &quot;impgal/h USgal/h&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;L/min&quot;] = {
	name1    = &quot;litre per minute&quot;,
	name1_us = &quot;liter per minute&quot;,
	name2    = &quot;litres per minute&quot;,
	name2_us = &quot;liters per minute&quot;,
	symbol   = &quot;L/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.6666666666666667e-5,
	default  = &quot;impgal/min USgal/min&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;L/s&quot;] = {
	name1    = &quot;litre per second&quot;,
	name1_us = &quot;liter per second&quot;,
	name2    = &quot;litres per second&quot;,
	name2_us = &quot;liters per second&quot;,
	symbol   = &quot;L/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.001,
	default  = &quot;cuft/s&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/a&quot;] = {
	name1    = &quot;cubic metre per annum&quot;,
	name1_us = &quot;cubic meter per annum&quot;,
	name2    = &quot;cubic metres per annum&quot;,
	name2_us = &quot;cubic meters per annum&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 3.1688087814028947e-8,
	default  = &quot;cuft/a&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/d&quot;] = {
	name1    = &quot;cubic metre per day&quot;,
	name1_us = &quot;cubic meter per day&quot;,
	name2    = &quot;cubic metres per day&quot;,
	name2_us = &quot;cubic meters per day&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;cuft/d&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/h&quot;] = {
	name1    = &quot;cubic metre per hour&quot;,
	name1_us = &quot;cubic meter per hour&quot;,
	name2    = &quot;cubic metres per hour&quot;,
	name2_us = &quot;cubic meters per hour&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;cuft/h&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/min&quot;] = {
	name1    = &quot;cubic metre per minute&quot;,
	name1_us = &quot;cubic meter per minute&quot;,
	name2    = &quot;cubic metres per minute&quot;,
	name2_us = &quot;cubic meters per minute&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;cuft/min&quot;,
	link     = &quot;Cubic metre per second&quot;,
    },
    [&quot;m3/s&quot;] = {
	name1    = &quot;cubic metre per second&quot;,
	name1_us = &quot;cubic meter per second&quot;,
	name2    = &quot;cubic metres per second&quot;,
	name2_us = &quot;cubic meters per second&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1,
	default  = &quot;cuft/s&quot;,
    },
    [&quot;Moilbbl/a&quot;] = {
	name1    = &quot;million barrels per year&quot;,
	name2    = &quot;million barrels per year&quot;,
	symbol   = &quot;Mbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.0050380033629933837,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;Moilbbl/d&quot;] = {
	name1    = &quot;million barrels per day&quot;,
	name2    = &quot;million barrels per day&quot;,
	symbol   = &quot;Mbbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.8401307283333335,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3/d&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;oilbbl/a&quot;] = {
	name1    = &quot;barrel per year&quot;,
	name2    = &quot;barrels per year&quot;,
	symbol   = &quot;bbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5.0380033629933841e-9,
	default  = &quot;m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;oilbbl/d&quot;] = {
	name1    = &quot;barrel per day&quot;,
	name2    = &quot;barrels per day&quot;,
	symbol   = &quot;bbl/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.8401307283333336e-6,
	default  = &quot;m3/d&quot;,
    },
    [&quot;Toilbbl/a&quot;] = {
	name1    = &quot;trillion barrels per year&quot;,
	name2    = &quot;trillion barrels per year&quot;,
	symbol   = &quot;Tbbl/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 5038.0033629933832,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e9 ! e12 ! m3/a&quot;,
	link     = &quot;Barrel per day&quot;,
    },
    [&quot;U.S.gal/d&quot;] = {
	name1    = &quot;U.S. gallon per day&quot;,
	name2    = &quot;U.S. gallons per day&quot;,
	symbol   = &quot;U.S.&amp;nbsp;gal/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 4.3812636388888893e-8,
	default  = &quot;m3/s&quot;,
	customary= 1,
    },
    [&quot;U.S.gal/h&quot;] = {
	name1    = &quot;gallon per hour&quot;,
	name2    = &quot;gallons per hour&quot;,
	symbol   = &quot;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.0515032733333334e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
	customary= 2,
    },
    [&quot;U.S.gal/min&quot;] = {
	name1    = &quot;U.S. gallon per minute&quot;,
	name2    = &quot;U.S. gallons per minute&quot;,
	symbol   = &quot;U.S.&amp;nbsp;gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 6.3090196400000003e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal/a&quot;] = {
	name1    = &quot;US gallon per year&quot;,
	name2    = &quot;US gallons per year&quot;,
	symbol   = &quot;US&amp;nbsp;gal/a&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.1995246102365199e-10,
	default  = &quot;m3/s&quot;,
	link     = &quot;US gallon per day&quot;,
    },
    [&quot;USgal/d&quot;] = {
	name1    = &quot;US gallon per day&quot;,
	name2    = &quot;US gallons per day&quot;,
	symbol   = &quot;US&amp;nbsp;gal/d&quot;,
	utype    = &quot;flow&quot;,
	scale    = 4.3812636388888893e-8,
	default  = &quot;m3/s&quot;,
    },
    [&quot;USgal/h&quot;] = {
	name1    = &quot;gallon per hour&quot;,
	name2    = &quot;gallons per hour&quot;,
	symbol   = &quot;gal/h&quot;,
	utype    = &quot;flow&quot;,
	scale    = 1.0515032733333334e-6,
	default  = &quot;m3/h&quot;,
	link     = &quot;Gallon&quot;,
	customary= 1,
    },
    [&quot;USgal/min&quot;] = {
	name1    = &quot;US gallon per minute&quot;,
	name2    = &quot;US gallons per minute&quot;,
	symbol   = &quot;US&amp;nbsp;gal/min&quot;,
	utype    = &quot;flow&quot;,
	scale    = 6.3090196400000003e-5,
	default  = &quot;m3/s&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal/s&quot;] = {
	name1    = &quot;US gallon per second&quot;,
	name1_us = &quot;U.S. gallon per second&quot;,
	name2    = &quot;US gallons per second&quot;,
	name2_us = &quot;U.S. gallons per second&quot;,
	symbol   = &quot;USgal/s&quot;,
	utype    = &quot;flow&quot;,
	scale    = 0.003785411784,
	default  = &quot;m3/s&quot;,
	link     = &quot;US gallons per second&quot;,
    },
    [&quot;ft3/a&quot;] = {
	target   = &quot;cuft/a&quot;,
    },
    [&quot;ft3/d&quot;] = {
	target   = &quot;cuft/d&quot;,
    },
    [&quot;ft3/h&quot;] = {
	target   = &quot;cuft/h&quot;,
    },
    [&quot;ft3/s&quot;] = {
	target   = &quot;cuft/s&quot;,
    },
    [&quot;Gcuft/a&quot;] = {
	target   = &quot;e9cuft/a&quot;,
    },
    [&quot;Gcuft/d&quot;] = {
	target   = &quot;e9cuft/d&quot;,
    },
    [&quot;kcuft/a&quot;] = {
	target   = &quot;e3cuft/a&quot;,
    },
    [&quot;kcuft/d&quot;] = {
	target   = &quot;e3cuft/d&quot;,
    },
    [&quot;kcuft/s&quot;] = {
	target   = &quot;e3cuft/s&quot;,
    },
    [&quot;Mcuft/a&quot;] = {
	target   = &quot;e6cuft/a&quot;,
    },
    [&quot;Mcuft/d&quot;] = {
	target   = &quot;e6cuft/d&quot;,
    },
    [&quot;Mcuft/s&quot;] = {
	target   = &quot;e6cuft/s&quot;,
    },
    [&quot;m/s&quot;] = {
	target   = &quot;m3/s&quot;,
    },
    [&quot;Tcuft/a&quot;] = {
	target   = &quot;e12cuft/a&quot;,
    },
    [&quot;Tcuft/d&quot;] = {
	target   = &quot;e12cuft/d&quot;,
    },
    [&quot;u.s.gal/min&quot;] = {
	target   = &quot;U.S.gal/min&quot;,
    },
    [&quot;usgal/min&quot;] = {
	target   = &quot;USgal/min&quot;,
    },
    [&quot;-LTf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LTf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;-STf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;STf&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;dyn&quot;] = {
	name1    = &quot;dyne&quot;,
	symbol   = &quot;dyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00001,
	default  = &quot;gr-f&quot;,
    },
    [&quot;g-f&quot;] = {
	name1    = &quot;gram-force&quot;,
	name2    = &quot;grams-force&quot;,
	symbol   = &quot;g&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN oz-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;gf&quot;] = {
	name1    = &quot;gram-force&quot;,
	name2    = &quot;grams-force&quot;,
	symbol   = &quot;gf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN ozf&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;gr-f&quot;] = {
	name1    = &quot;grain-force&quot;,
	name2    = &quot;grains-force&quot;,
	symbol   = &quot;gr&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.0006354602307515,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;grf&quot;] = {
	name1    = &quot;grain-force&quot;,
	name2    = &quot;grains-force&quot;,
	symbol   = &quot;grf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.0006354602307515,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;kdyn&quot;] = {
	name1    = &quot;kilodyne&quot;,
	symbol   = &quot;kdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.01,
	default  = &quot;oz-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;kg-f&quot;] = {
	name1    = &quot;kilogram-force&quot;,
	name2    = &quot;kilograms-force&quot;,
	symbol   = &quot;kg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lb-f&quot;,
    },
    [&quot;kgf&quot;] = {
	name1    = &quot;kilogram-force&quot;,
	name2    = &quot;kilograms-force&quot;,
	symbol   = &quot;kgf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lbf&quot;,
    },
    [&quot;kp&quot;] = {
	name1    = &quot;kilopond&quot;,
	symbol   = &quot;kp&quot;,
	utype    = &quot;force&quot;,
	scale    = 9.80665,
	default  = &quot;N lb-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;L/T-f&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;L/T&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;L/Tf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;L/Tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;lb-f&quot;] = {
	name1    = &quot;pound-force&quot;,
	name2    = &quot;pounds-force&quot;,
	symbol   = &quot;lb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
    },
    [&quot;lbf&quot;] = {
	name1    = &quot;pound-force&quot;,
	name2    = &quot;pounds-force&quot;,
	symbol   = &quot;lbf&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
    },
    [&quot;lb(f)&quot;] = {
	name1    = &quot;pound&quot;,
	symbol   = &quot;lb&quot;,
	utype    = &quot;force&quot;,
	scale    = 4.4482216152605,
	default  = &quot;N&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;LT-f&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LT&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;LTf&quot;] = {
	name1    = &quot;long ton-force&quot;,
	name2    = &quot;long tons-force&quot;,
	symbol   = &quot;LTf&quot;,
	usename  = 1,
	utype    = &quot;force&quot;,
	scale    = 9964.01641818352,
	default  = &quot;kN&quot;,
    },
    [&quot;Mdyn&quot;] = {
	name1    = &quot;megadyne&quot;,
	symbol   = &quot;Mdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 10,
	default  = &quot;lb-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;mdyn&quot;] = {
	name1    = &quot;millidyne&quot;,
	symbol   = &quot;mdyn&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000001,
	default  = &quot;gr-f&quot;,
	link     = &quot;Dyne&quot;,
    },
    [&quot;mg-f&quot;] = {
	name1    = &quot;milligram-force&quot;,
	name2    = &quot;milligrams-force&quot;,
	symbol   = &quot;mg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N gr-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;mgf&quot;] = {
	name1    = &quot;milligram-force&quot;,
	name2    = &quot;milligrams-force&quot;,
	symbol   = &quot;mgf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N grf&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;Mp&quot;] = {
	name1    = &quot;megapond&quot;,
	symbol   = &quot;Mp&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LT-f ST-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;mp&quot;] = {
	name1    = &quot;millipond&quot;,
	symbol   = &quot;mp&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00000980665,
	default  = &quot;N gr-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;N&quot;] = {
	_name1   = &quot;newton&quot;,
	_symbol  = &quot;N&quot;,
	utype    = &quot;force&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;lb-f&quot;,
	link     = &quot;Newton (unit)&quot;,
    },
    [&quot;oz-f&quot;] = {
	name1    = &quot;ounce-force&quot;,
	name2    = &quot;ounces-force&quot;,
	symbol   = &quot;oz&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.2780138203095378125,
	default  = &quot;mN&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;ozf&quot;] = {
	name1    = &quot;ounce-force&quot;,
	name2    = &quot;ounces-force&quot;,
	symbol   = &quot;ozf&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.2780138203095378125,
	default  = &quot;mN&quot;,
	link     = &quot;Pound-force&quot;,
    },
    [&quot;p&quot;] = {
	name1    = &quot;pond&quot;,
	symbol   = &quot;p&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.00980665,
	default  = &quot;mN oz-f&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;pdl&quot;] = {
	name1    = &quot;poundal&quot;,
	symbol   = &quot;pdl&quot;,
	utype    = &quot;force&quot;,
	scale    = 0.138254954376,
	default  = &quot;N&quot;,
    },
    [&quot;S/T-f&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;S/T&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;S/Tf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;S/Tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;ST-f&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;ST&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;STf&quot;] = {
	name1    = &quot;short ton-force&quot;,
	name2    = &quot;short tons-force&quot;,
	symbol   = &quot;STf&quot;,
	usename  = 1,
	utype    = &quot;force&quot;,
	scale    = 8896.443230521,
	default  = &quot;kN&quot;,
    },
    [&quot;t-f&quot;] = {
	name1    = &quot;tonne-force&quot;,
	name2    = &quot;tonnes-force&quot;,
	symbol   = &quot;t&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LT-f ST-f&quot;,
	link     = &quot;Ton-force#Tonne-force&quot;,
    },
    [&quot;tf&quot;] = {
	name1    = &quot;tonne-force&quot;,
	name2    = &quot;tonnes-force&quot;,
	symbol   = &quot;tf&quot;,
	utype    = &quot;force&quot;,
	scale    = 9806.65,
	default  = &quot;kN LTf STf&quot;,
	link     = &quot;Ton-force#Tonne-force&quot;,
    },
    [&quot;dyne&quot;] = {
	target   = &quot;dyn&quot;,
    },
    [&quot;newtons&quot;] = {
	target   = &quot;N&quot;,
    },
    [&quot;poundal&quot;] = {
	target   = &quot;pdl&quot;,
    },
    [&quot;tonne-force&quot;] = {
	target   = &quot;tf&quot;,
    },
    [&quot;impgal/mi&quot;] = {
	per      = { &quot;@impgal&quot;, &quot;mi&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km USgal/mi&quot;,
    },
    [&quot;km/L&quot;] = {
	per      = { &quot;km&quot;, &quot;L&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;km/l&quot;] = {
	per      = { &quot;km&quot;, &quot;l&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;L/100 km&quot;] = {
	per      = { &quot;L&quot;, &quot;100km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|L/100&amp;nbsp;km]]&quot;,
    },
    [&quot;l/100 km&quot;] = {
	per      = { &quot;l&quot;, &quot;100km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|l/100&amp;nbsp;km]]&quot;,
    },
    [&quot;L/km&quot;] = {
	per      = { &quot;L&quot;, &quot;km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;l/km&quot;] = {
	per      = { &quot;l&quot;, &quot;km&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;mpgimp mpgus&quot;,
    },
    [&quot;mi/impqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;impqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/U.S.qt&quot;] = {
	per      = { &quot;mi&quot;, &quot;U.S.qt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/USqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;USqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mi/usqt&quot;] = {
	per      = { &quot;mi&quot;, &quot;usqt&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;km/L&quot;,
    },
    [&quot;mpgimp&quot;] = {
	per      = { &quot;mi&quot;, &quot;@impgal&quot; },
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;imp&lt;/sub&gt;&quot;,
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;L/100 km+mpgus&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[Imperial units|imp]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgus&quot;] = {
	per      = { &quot;mi&quot;, &quot;+USgal&quot; },
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;US&lt;/sub&gt;&quot;,
	utype    = &quot;fuel efficiency&quot;,
	invert   = -1,
	iscomplex= true,
	default  = &quot;L/100 km+mpgimp&quot;,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|US]]&lt;/sub&gt;&quot;,
    },
    [&quot;U.S.gal/mi&quot;] = {
	per      = { &quot;*U.S.gal&quot;, &quot;mi&quot; },
	sp_us    = true,
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km impgal/mi&quot;,
    },
    [&quot;usgal/mi&quot;] = {
	per      = { &quot;+USgal&quot;, &quot;mi&quot; },
	utype    = &quot;fuel efficiency&quot;,
	invert   = 1,
	iscomplex= true,
	default  = &quot;l/km impgal/mi&quot;,
    },
    [&quot;L/100km&quot;] = {
	target   = &quot;L/100 km&quot;,
    },
    [&quot;l/100km&quot;] = {
	target   = &quot;l/100 km&quot;,
    },
    [&quot;mpg&quot;] = {
	shouldbe = &quot;Use %{mpgus%} for miles per US gallon or %{mpgimp%} for miles per imperial gallon (not %{mpg%})&quot;,
    },
    [&quot;mpgU.S.&quot;] = {
	target   = &quot;mpgus&quot;,
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;U.S.&lt;/sub&gt;&quot;,
	sp_us    = true,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|U.S.]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgu.s.&quot;] = {
	target   = &quot;mpgus&quot;,
	symbol   = &quot;mpg&lt;sub&gt;&amp;#8209;U.S.&lt;/sub&gt;&quot;,
	sp_us    = true,
	symlink  = &quot;[[Fuel economy in automobiles#Units of measure|mpg]]&lt;sub&gt;&amp;#8209;[[United States customary units|U.S.]]&lt;/sub&gt;&quot;,
    },
    [&quot;mpgUS&quot;] = {
	target   = &quot;mpgus&quot;,
    },
    [&quot;USgal/mi&quot;] = {
	target   = &quot;usgal/mi&quot;,
    },
    [&quot;kPa/m&quot;] = {
	per      = { &quot;kPa&quot;, &quot;-m-frac&quot; },
	utype    = &quot;fracture gradient&quot;,
	default  = &quot;psi/ft&quot;,
    },
    [&quot;psi/ft&quot;] = {
	per      = { &quot;psi&quot;, &quot;-ft-frac&quot; },
	utype    = &quot;fracture gradient&quot;,
	default  = &quot;kPa/m&quot;,
    },
    [&quot;cm/km&quot;] = {
	name1    = &quot;centimetre per kilometre&quot;,
	name1_us = &quot;centimeter per kilometer&quot;,
	name2    = &quot;centimetres per kilometre&quot;,
	name2_us = &quot;centimeters per kilometer&quot;,
	symbol   = &quot;cm/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00001,
	default  = &quot;ft/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;ft/mi&quot;] = {
	name1    = &quot;foot per mile&quot;,
	name2    = &quot;feet per mile&quot;,
	symbol   = &quot;ft/mi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00018939393939393939,
	default  = &quot;v &lt; 5.28 ! c ! ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;ft/nmi&quot;] = {
	name1    = &quot;foot per nautical mile&quot;,
	name2    = &quot;feet per nautical mile&quot;,
	symbol   = &quot;ft/nmi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.00016457883369330455,
	default  = &quot;v &lt; 6.076 ! c ! ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;in/ft&quot;] = {
	name1    = &quot;inch per foot&quot;,
	name2    = &quot;inches per foot&quot;,
	symbol   = &quot;in/ft&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.083333333333333329,
	default  = &quot;mm/m&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;in/mi&quot;] = {
	name1    = &quot;inch per mile&quot;,
	name2    = &quot;inches per mile&quot;,
	symbol   = &quot;in/mi&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 1.5782828282828283e-5,
	default  = &quot;v &lt; 0.6336 ! m ! c ! m/km&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;m/km&quot;] = {
	name1    = &quot;metre per kilometre&quot;,
	name1_us = &quot;meter per kilometer&quot;,
	name2    = &quot;metres per kilometre&quot;,
	name2_us = &quot;meters per kilometer&quot;,
	symbol   = &quot;m/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.001,
	default  = &quot;ft/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;mm/km&quot;] = {
	name1    = &quot;millimetre per kilometre&quot;,
	name1_us = &quot;millimeter per kilometer&quot;,
	name2    = &quot;millimetres per kilometre&quot;,
	name2_us = &quot;millimeters per kilometer&quot;,
	symbol   = &quot;mm/km&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.000001,
	default  = &quot;in/mi&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;mm/m&quot;] = {
	name1    = &quot;millimetre per metre&quot;,
	name1_us = &quot;millimeter per meter&quot;,
	name2    = &quot;millimetres per metre&quot;,
	name2_us = &quot;millimeters per meter&quot;,
	symbol   = &quot;mm/m&quot;,
	utype    = &quot;gradient&quot;,
	scale    = 0.001,
	default  = &quot;in/ft&quot;,
	link     = &quot;Grade (slope)&quot;,
    },
    [&quot;admi&quot;] = {
	name1    = &quot;admiralty mile&quot;,
	symbol   = &quot;nmi&amp;nbsp;(admiralty)&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;AU&quot;] = {
	name1    = &quot;astronomical unit&quot;,
	symbol   = &quot;AU&quot;,
	utype    = &quot;length&quot;,
	scale    = 149597870700,
	default  = &quot;km mi&quot;,
    },
    [&quot;Brnmi&quot;] = {
	name1    = &quot;British nautical mile&quot;,
	symbol   = &quot;(Brit)&amp;nbsp;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;bu&quot;] = {
	name2    = &quot;bu&quot;,
	symbol   = &quot;bu&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0030303030303030303,
	default  = &quot;mm&quot;,
	link     = &quot;Japanese units of measurement#Length&quot;,
    },
    [&quot;ch&quot;] = {
	name1    = &quot;chain&quot;,
	symbol   = &quot;ch&quot;,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 66, default = &quot;m&quot; }, [&quot;yd&quot;] = { 22, default = &quot;m&quot; } },
	link     = &quot;Chain (unit)&quot;,
    },
    [&quot;chlk&quot;] = {
	name1    = &quot;[[Chain (unit)|chain]]&quot;,
	symbol   = &quot;[[Chain (unit)|ch]]&quot;,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	link     = &quot;&quot;,
    },
    [&quot;chain&quot;] = {
	symbol   = &quot;chain&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 66, default = &quot;m&quot; }, [&quot;yd&quot;] = { 22, default = &quot;m&quot; } },
	link     = &quot;Chain (unit)&quot;,
    },
    [&quot;chainlk&quot;] = {
	symbol   = &quot;[[Chain (unit)|chain]]&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 20.1168,
	default  = &quot;ft m&quot;,
	link     = &quot;&quot;,
    },
    [&quot;dpcm&quot;] = {
	name2    = &quot;dot/cm&quot;,
	symbol   = &quot;dot/cm&quot;,
	utype    = &quot;length&quot;,
	scale    = 100,
	invert   = -1,
	iscomplex= true,
	default  = &quot;dpi&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;dpi&quot;] = {
	name2    = &quot;DPI&quot;,
	symbol   = &quot;DPI&quot;,
	utype    = &quot;length&quot;,
	scale    = 39.370078740157481,
	invert   = -1,
	iscomplex= true,
	default  = &quot;pitch&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;fathom&quot;] = {
	symbol   = &quot;fathom&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 1.8288,
	default  = &quot;ft m&quot;,
    },
    [&quot;foot&quot;] = {
	name1    = &quot;foot&quot;,
	name2    = &quot;foot&quot;,
	symbol   = &quot;ft&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.3048,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;in&quot;] = { 12, default = &quot;m&quot; } },
	link     = &quot;Foot (unit)&quot;,
    },
    [&quot;ft&quot;] = {
	name1    = &quot;foot&quot;,
	name2    = &quot;feet&quot;,
	symbol   = &quot;ft&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.3048,
	exception= &quot;integer_more_precision&quot;,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;in&quot;] = { 12, default = &quot;m&quot; } },
	link     = &quot;Foot (unit)&quot;,
    },
    [&quot;furlong&quot;] = {
	symbol   = &quot;furlong&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 201.168,
	default  = &quot;ft m&quot;,
    },
    [&quot;Gly&quot;] = {
	name1    = &quot;gigalight-year&quot;,
	symbol   = &quot;Gly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e24,
	default  = &quot;Mpc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;Gpc&quot;] = {
	name1    = &quot;gigaparsec&quot;,
	symbol   = &quot;Gpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e25,
	default  = &quot;Gly&quot;,
	link     = &quot;Parsec#Megaparsecs and gigaparsecs&quot;,
    },
    [&quot;hand&quot;] = {
	name1    = &quot;hand&quot;,
	symbol   = &quot;h&quot;,
	utype    = &quot;length&quot;,
	builtin  = &quot;hand&quot;,
	scale    = 0.1016,
	iscomplex= true,
	default  = &quot;in cm&quot;,
	link     = &quot;Hand (unit)&quot;,
    },
    [&quot;in&quot;] = {
	name1    = &quot;inch&quot;,
	name2    = &quot;inches&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0254,
	exception= &quot;subunit_more_precision&quot;,
	default  = &quot;mm&quot;,
    },
    [&quot;inabbreviated&quot;] = {
	name2    = &quot;in&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0254,
	default  = &quot;mm&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;kly&quot;] = {
	name1    = &quot;kilolight-year&quot;,
	symbol   = &quot;kly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e18,
	default  = &quot;pc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;kpc&quot;] = {
	name1    = &quot;kiloparsec&quot;,
	symbol   = &quot;kpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e19,
	default  = &quot;kly&quot;,
	link     = &quot;Parsec#Parsecs and kiloparsecs&quot;,
    },
    [&quot;LD&quot;] = {
	name1    = &quot;lunar distance&quot;,
	symbol   = &quot;LD&quot;,
	utype    = &quot;length&quot;,
	scale    = 384403000,
	default  = &quot;km mi&quot;,
	link     = &quot;Lunar distance (astronomy)&quot;,
    },
    [&quot;league&quot;] = {
	symbol   = &quot;league&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 4828.032,
	default  = &quot;km&quot;,
	link     = &quot;League (unit)&quot;,
    },
    [&quot;ly&quot;] = {
	name1    = &quot;light-year&quot;,
	symbol   = &quot;ly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e15,
	default  = &quot;AU&quot;,
    },
    [&quot;m&quot;] = {
	_name1   = &quot;metre&quot;,
	_name1_us= &quot;meter&quot;,
	_symbol  = &quot;m&quot;,
	utype    = &quot;length&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;v &gt; 0 and v &lt; 3 ! ftin ! ft&quot;,
	link     = &quot;Metre&quot;,
    },
    [&quot;mi&quot;] = {
	name1    = &quot;mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	subdivs  = { [&quot;ch&quot;] = { 80, default = &quot;km&quot; }, [&quot;chlk&quot;] = { 80, default = &quot;km&quot; }, [&quot;chain&quot;] = { 80, default = &quot;km&quot; }, [&quot;chainlk&quot;] = { 80, default = &quot;km&quot; }, [&quot;ft&quot;] = { 5280, default = &quot;km&quot; }, [&quot;furlong&quot;] = { 8, default = &quot;km&quot; }, [&quot;yd&quot;] = { 1760, default = &quot;km&quot; } },
    },
    [&quot;mil&quot;] = {
	symbol   = &quot;mil&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0000254,
	default  = &quot;mm&quot;,
	link     = &quot;Thousandth of an inch&quot;,
    },
    [&quot;Mly&quot;] = {
	name1    = &quot;megalight-year&quot;,
	symbol   = &quot;Mly&quot;,
	utype    = &quot;length&quot;,
	scale    = 9.4607304725808e21,
	default  = &quot;kpc&quot;,
	link     = &quot;Light-year#Distances in light-years&quot;,
    },
    [&quot;Mpc&quot;] = {
	name1    = &quot;megaparsec&quot;,
	symbol   = &quot;Mpc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e22,
	default  = &quot;Mly&quot;,
	link     = &quot;Parsec#Megaparsecs and gigaparsecs&quot;,
    },
    [&quot;NM&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;NM&quot;,
	utype    = &quot;length&quot;,
	scale    = 1852,
	default  = &quot;km mi&quot;,
    },
    [&quot;nmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1852,
	default  = &quot;km mi&quot;,
    },
    [&quot;oldUKnmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.184,
	default  = &quot;km mi&quot;,
    },
    [&quot;oldUSnmi&quot;] = {
	name1    = &quot;nautical mile&quot;,
	symbol   = &quot;nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
    },
    [&quot;pc&quot;] = {
	name1    = &quot;parsec&quot;,
	symbol   = &quot;pc&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.0856775814671916e16,
	default  = &quot;ly&quot;,
    },
    [&quot;perch&quot;] = {
	name2    = &quot;perches&quot;,
	symbol   = &quot;perch&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;pitch&quot;] = {
	name2    = &quot;m&quot;,
	symbol   = &quot;m&quot;,
	utype    = &quot;length&quot;,
	scale    = 1e-6,
	default  = &quot;dpi&quot;,
	defkey   = &quot;pitch&quot;,
	linkey   = &quot;pitch&quot;,
	link     = &quot;Dots per inch&quot;,
    },
    [&quot;pole&quot;] = {
	symbol   = &quot;pole&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;pre1954U.S.nmi&quot;] = {
	name1    = &quot;(pre-1954&amp;nbsp;U.S.) nautical mile&quot;,
	symbol   = &quot;(pre&amp;#8209;1954&amp;nbsp;U.S.) nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;pre1954USnmi&quot;] = {
	name1    = &quot;(pre-1954&amp;nbsp;US) nautical mile&quot;,
	name1_us = &quot;(pre-1954&amp;nbsp;U.S.) nautical mile&quot;,
	symbol   = &quot;(pre&amp;#8209;1954&amp;nbsp;US) nmi&quot;,
	sym_us   = &quot;(pre&amp;#8209;1954&amp;nbsp;U.S.) nmi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1853.24496,
	default  = &quot;km mi&quot;,
	link     = &quot;Nautical mile&quot;,
    },
    [&quot;rd&quot;] = {
	name1    = &quot;rod&quot;,
	symbol   = &quot;rd&quot;,
	utype    = &quot;length&quot;,
	scale    = 5.0292,
	default  = &quot;ft m&quot;,
	link     = &quot;Rod (unit)&quot;,
    },
    [&quot;royal cubit&quot;] = {
	name1    = &quot;royal cubit&quot;,
	symbol   = &quot;cu&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.524,
	default  = &quot;mm&quot;,
    },
    [&quot;rtkm&quot;] = {
	name1    = &quot;route kilometre&quot;,
	name1_us = &quot;route kilometer&quot;,
	symbol   = &quot;km&quot;,
	utype    = &quot;length&quot;,
	scale    = 1000,
	default  = &quot;mi&quot;,
	link     = &quot;Kilometre&quot;,
    },
    [&quot;rtmi&quot;] = {
	name1    = &quot;route mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	link     = &quot;Mile&quot;,
    },
    [&quot;shaku&quot;] = {
	name2    = &quot;shaku&quot;,
	symbol   = &quot;shaku&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.30303030303030304,
	default  = &quot;m&quot;,
	link     = &quot;Shaku (unit)&quot;,
    },
    [&quot;sm&quot;] = {
	name1    = &quot;smoot&quot;,
	symbol   = &quot;sm&quot;,
	utype    = &quot;length&quot;,
	scale    = 1.70180,
	default  = &quot;m&quot;,
	link     = &quot;Smoot (unit)&quot;,
    },
    [&quot;smi&quot;] = {
	name1    = &quot;statute mile&quot;,
	symbol   = &quot;mi&quot;,
	utype    = &quot;length&quot;,
	scale    = 1609.344,
	default  = &quot;km&quot;,
	subdivs  = { [&quot;chain&quot;] = { 80, default = &quot;km&quot; } },
    },
    [&quot;solar radius&quot;] = {
	name1    = &quot;solar radius&quot;,
	name2    = &quot;solar radii&quot;,
	symbol   = &quot;''R''&lt;sub&gt;&lt;/sub&gt;&quot;,
	utype    = &quot;length&quot;,
	scale    = 695700e3,
	default  = &quot;km&quot;,
    },
    [&quot;sun&quot;] = {
	name2    = &quot;sun&quot;,
	symbol   = &quot;sun&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.030303030303030304,
	default  = &quot;mm&quot;,
	link     = &quot;Japanese units of measurement#Length&quot;,
    },
    [&quot;thou&quot;] = {
	name2    = &quot;thou&quot;,
	symbol   = &quot;thou&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 0.0000254,
	default  = &quot;mm&quot;,
	link     = &quot;Thousandth of an inch&quot;,
    },
    [&quot;verst&quot;] = {
	symbol   = &quot;verst&quot;,
	usename  = 1,
	utype    = &quot;length&quot;,
	scale    = 1066.8,
	default  = &quot;km mi&quot;,
    },
    [&quot;yd&quot;] = {
	name1    = &quot;yard&quot;,
	symbol   = &quot;yd&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.9144,
	default  = &quot;m&quot;,
	subdivs  = { [&quot;ft&quot;] = { 3, default = &quot;m&quot; } },
    },
    [&quot;in&quot;] = {
	name1    = &quot;microinch&quot;,
	name2    = &quot;microinches&quot;,
	symbol   = &quot;in&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0000000254,
	default  = &quot;nm&quot;,
	link     = &quot;SI prefix#Non-SI units&quot;,
    },
    [&quot;&quot;] = {
	name1    = &quot;ngstrm&quot;,
	symbol   = &quot;&quot;,
	utype    = &quot;length&quot;,
	scale    = 0.0000000001,
	default  = &quot;in&quot;,
	link     = &quot;Angstrom&quot;,
    },
    [&quot;Hz&quot;] = {
	_name1   = &quot;hertz&quot;,
	_name2   = &quot;hertz&quot;,
	_symbol  = &quot;Hz&quot;,
	utype    = &quot;length&quot;,
	scale    = 3.3356409519815204e-9,
	invert   = -1,
	iscomplex= true,
	prefixes = 1,
	default  = &quot;m&quot;,
	link     = &quot;Hertz&quot;,
    },
    [&quot;-ft-frac&quot;] = {
	target   = &quot;ft&quot;,
	link     = &quot;Fracture gradient&quot;,
    },
    [&quot;-in-stiff&quot;] = {
	target   = &quot;in&quot;,
	link     = &quot;Stiffness&quot;,
    },
    [&quot;-m-frac&quot;] = {
	target   = &quot;m&quot;,
	link     = &quot;Fracture gradient&quot;,
    },
    [&quot;-m-stiff&quot;] = {
	target   = &quot;m&quot;,
	link     = &quot;Stiffness&quot;,
    },
    [&quot;100km&quot;] = {
	target   = &quot;km&quot;,
	multiplier= 100,
    },
    [&quot;admiralty nmi&quot;] = {
	target   = &quot;oldUKnmi&quot;,
    },
    [&quot;angstrom&quot;] = {
	target   = &quot;&quot;,
    },
    [&quot;au&quot;] = {
	target   = &quot;AU&quot;,
	symbol   = &quot;au&quot;,
    },
    [&quot;feet&quot;] = {
	target   = &quot;ft&quot;,
    },
    [&quot;hands&quot;] = {
	target   = &quot;hand&quot;,
    },
    [&quot;inch&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;light-year&quot;] = {
	target   = &quot;ly&quot;,
    },
    [&quot;meter&quot;] = {
	target   = &quot;m&quot;,
	sp_us    = true,
    },
    [&quot;meters&quot;] = {
	target   = &quot;m&quot;,
	sp_us    = true,
    },
    [&quot;metre&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;metres&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;micrometre&quot;] = {
	target   = &quot;m&quot;,
    },
    [&quot;micron&quot;] = {
	target   = &quot;m&quot;,
	default  = &quot;in&quot;,
    },
    [&quot;mile&quot;] = {
	target   = &quot;mi&quot;,
    },
    [&quot;miles&quot;] = {
	target   = &quot;mi&quot;,
    },
    [&quot;parsec&quot;] = {
	target   = &quot;pc&quot;,
    },
    [&quot;rod&quot;] = {
	target   = &quot;rd&quot;,
    },
    [&quot;smoot&quot;] = {
	target   = &quot;sm&quot;,
    },
    [&quot;uin&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;yard&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;yards&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;yds&quot;] = {
	target   = &quot;yd&quot;,
    },
    [&quot;in&quot;] = {
	target   = &quot;in&quot;,
    },
    [&quot;dtex&quot;] = {
	name1    = &quot;decitex&quot;,
	name2    = &quot;decitex&quot;,
	symbol   = &quot;dtex&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1e-7,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Units of textile measurement#Tex&quot;,
    },
    [&quot;kg/cm&quot;] = {
	name1    = &quot;kilogram per centimetre&quot;,
	name1_us = &quot;kilogram per centimeter&quot;,
	name2    = &quot;kilograms per centimetre&quot;,
	name2_us = &quot;kilograms per centimeter&quot;,
	symbol   = &quot;kg/cm&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 100,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;kg/m&quot;] = {
	name1    = &quot;kilogram per metre&quot;,
	name1_us = &quot;kilogram per meter&quot;,
	name2    = &quot;kilograms per metre&quot;,
	name2_us = &quot;kilograms per meter&quot;,
	symbol   = &quot;kg/m&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1,
	default  = &quot;lb/yd&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;lb/ft&quot;] = {
	name1    = &quot;pound per foot&quot;,
	name2    = &quot;pounds per foot&quot;,
	symbol   = &quot;lb/ft&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 1.4881639435695539,
	default  = &quot;kg/m&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;lb/yd&quot;] = {
	name1    = &quot;pound per yard&quot;,
	name2    = &quot;pounds per yard&quot;,
	symbol   = &quot;lb/yd&quot;,
	utype    = &quot;linear density&quot;,
	scale    = 0.49605464785651798,
	default  = &quot;kg/m&quot;,
	link     = &quot;Linear density&quot;,
    },
    [&quot;G&quot;] = {
	_name1   = &quot;gauss&quot;,
	_name2   = &quot;gauss&quot;,
	_symbol  = &quot;G&quot;,
	utype    = &quot;magnetic field strength&quot;,
	scale    = 0.0001,
	prefixes = 1,
	default  = &quot;T&quot;,
	link     = &quot;Gauss (unit)&quot;,
    },
    [&quot;T&quot;] = {
	_name1   = &quot;tesla&quot;,
	_symbol  = &quot;T&quot;,
	utype    = &quot;magnetic field strength&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;G&quot;,
	link     = &quot;Tesla (unit)&quot;,
    },
    [&quot;A/m&quot;] = {
	name1    = &quot;ampere per metre&quot;,
	name1_us = &quot;ampere per meter&quot;,
	name2    = &quot;amperes per metre&quot;,
	name2_us = &quot;amperes per meter&quot;,
	symbol   = &quot;A/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1,
	default  = &quot;Oe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;kA/m&quot;] = {
	name1    = &quot;kiloampere per metre&quot;,
	name1_us = &quot;kiloampere per meter&quot;,
	name2    = &quot;kiloamperes per metre&quot;,
	name2_us = &quot;kiloamperes per meter&quot;,
	symbol   = &quot;kA/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1000,
	default  = &quot;kOe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;MA/m&quot;] = {
	name1    = &quot;megaampere per metre&quot;,
	name1_us = &quot;megaampere per meter&quot;,
	name2    = &quot;megaamperes per metre&quot;,
	name2_us = &quot;megaamperes per meter&quot;,
	symbol   = &quot;MA/m&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 1e6,
	default  = &quot;kOe&quot;,
	link     = &quot;Magnetic field#Units&quot;,
    },
    [&quot;Oe&quot;] = {
	_name1   = &quot;oersted&quot;,
	_symbol  = &quot;Oe&quot;,
	utype    = &quot;magnetizing field&quot;,
	scale    = 79.5774715,
	prefixes = 1,
	default  = &quot;kA/m&quot;,
	link     = &quot;Oersted&quot;,
    },
    [&quot;-Lcwt&quot;] = {
	name1    = &quot;hundredweight&quot;,
	name2    = &quot;hundredweight&quot;,
	symbol   = &quot;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb&quot;,
    },
    [&quot;-Scwt&quot;] = {
	name1    = &quot;hundredweight&quot;,
	name2    = &quot;hundredweight&quot;,
	symbol   = &quot;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb&quot;,
    },
    [&quot;-ST&quot;] = {
	name1    = &quot;short ton&quot;,
	symbol   = &quot;ST&quot;,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;carat&quot;] = {
	symbol   = &quot;carat&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.0002,
	default  = &quot;g&quot;,
	link     = &quot;Carat (mass)&quot;,
    },
    [&quot;drachm&quot;] = {
	name1_us = &quot;dram&quot;,
	symbol   = &quot;drachm&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.001771845195,
	default  = &quot;g&quot;,
	link     = &quot;Dram (unit)&quot;,
    },
    [&quot;dram&quot;] = {
	target   = &quot;drachm&quot;,
    },
    [&quot;dwt&quot;] = {
	name1    = &quot;pennyweight&quot;,
	symbol   = &quot;dwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.00155517384,
	default  = &quot;oz g&quot;,
    },
    [&quot;DWton&quot;] = {
	symbol   = &quot;deadweight ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;DWtonne&quot;,
	link     = &quot;Tonnage&quot;,
    },
    [&quot;DWtonne&quot;] = {
	symbol   = &quot;deadweight tonne&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;DWton&quot;,
	link     = &quot;Tonnage&quot;,
    },
    [&quot;g&quot;] = {
	_name1   = &quot;gram&quot;,
	_symbol  = &quot;g&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;oz&quot;,
	link     = &quot;Gram&quot;,
    },
    [&quot;gr&quot;] = {
	name1    = &quot;grain&quot;,
	symbol   = &quot;gr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.00006479891,
	default  = &quot;g&quot;,
	link     = &quot;Grain (unit)&quot;,
    },
    [&quot;Gt&quot;] = {
	name1    = &quot;gigatonne&quot;,
	symbol   = &quot;Gt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;impgalh2o&quot;] = {
	name1    = &quot;imperial gallon of water&quot;,
	name2    = &quot;imperial gallons of water&quot;,
	symbol   = &quot;imp&amp;nbsp;gal H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;mass&quot;,
	scale    = 4.5359236999999499,
	default  = &quot;lb kg&quot;,
	link     = &quot;Imperial gallon&quot;,
    },
    [&quot;kt&quot;] = {
	name1    = &quot;kilotonne&quot;,
	symbol   = &quot;kt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;lb&quot;] = {
	name1    = &quot;pound&quot;,
	symbol   = &quot;lb&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.45359237,
	exception= &quot;integer_more_precision&quot;,
	default  = &quot;kg&quot;,
	subdivs  = { [&quot;oz&quot;] = { 16, default = &quot;kg&quot; } },
	link     = &quot;Pound (mass)&quot;,
    },
    [&quot;Lcwt&quot;] = {
	name1    = &quot;long hundredweight&quot;,
	name2    = &quot;long hundredweight&quot;,
	symbol   = &quot;Lcwt&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb&quot;,
	subdivs  = { [&quot;qtr&quot;] = { 4, default = &quot;kg&quot; }, [&quot;st&quot;] = { 8, default = &quot;kg&quot; } },
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;long cwt&quot;] = {
	name1    = &quot;long hundredweight&quot;,
	name2    = &quot;long hundredweight&quot;,
	symbol   = &quot;long&amp;nbsp;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 50.80234544,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;qtr&quot;] = { 4, default = &quot;kg&quot; } },
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;long qtr&quot;] = {
	name1    = &quot;long quarter&quot;,
	symbol   = &quot;long&amp;nbsp;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 12.70058636,
	default  = &quot;lb kg&quot;,
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;LT&quot;] = {
	symbol   = &quot;long ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Lcwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Lcwt&quot; } },
    },
    [&quot;lt&quot;] = {
	name1    = &quot;long ton&quot;,
	symbol   = &quot;LT&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1016.0469088,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Lcwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Lcwt&quot; } },
    },
    [&quot;metric ton&quot;] = {
	symbol   = &quot;metric ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;long ton&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;MT&quot;] = {
	name1    = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;Mt&quot;] = {
	name1    = &quot;megatonne&quot;,
	symbol   = &quot;Mt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000000000,
	default  = &quot;LT ST&quot;,
	link     = &quot;Tonne&quot;,
    },
    [&quot;oz&quot;] = {
	name1    = &quot;ounce&quot;,
	symbol   = &quot;oz&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.028349523125,
	default  = &quot;g&quot;,
    },
    [&quot;ozt&quot;] = {
	name1    = &quot;troy ounce&quot;,
	symbol   = &quot;ozt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.0311034768,
	default  = &quot;oz g&quot;,
    },
    [&quot;pdr&quot;] = {
	name1    = &quot;pounder&quot;,
	symbol   = &quot;pdr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 0.45359237,
	default  = &quot;kg&quot;,
	link     = &quot;Pound (mass)&quot;,
    },
    [&quot;qtr&quot;] = {
	name1    = &quot;quarter&quot;,
	symbol   = &quot;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 12.70058636,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;lb&quot;] = { 28, default = &quot;kg&quot; } },
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;Scwt&quot;] = {
	name1    = &quot;short hundredweight&quot;,
	name2    = &quot;short hundredweight&quot;,
	symbol   = &quot;Scwt&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb&quot;,
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;short cwt&quot;] = {
	name1    = &quot;short hundredweight&quot;,
	name2    = &quot;short hundredweight&quot;,
	symbol   = &quot;short&amp;nbsp;cwt&quot;,
	utype    = &quot;mass&quot;,
	scale    = 45.359237,
	default  = &quot;lb kg&quot;,
	link     = &quot;Hundredweight&quot;,
    },
    [&quot;short qtr&quot;] = {
	name1    = &quot;short quarter&quot;,
	symbol   = &quot;short&amp;nbsp;qtr&quot;,
	utype    = &quot;mass&quot;,
	scale    = 11.33980925,
	default  = &quot;lb kg&quot;,
	link     = &quot;Avoirdupois&quot;,
    },
    [&quot;ST&quot;] = {
	symbol   = &quot;short ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
	subdivs  = { [&quot;Scwt&quot;] = { 20, default = &quot;t&quot;, unit = &quot;-Scwt&quot; } },
    },
    [&quot;shtn&quot;] = {
	name1    = &quot;short ton&quot;,
	symbol   = &quot;sh&amp;nbsp;tn&quot;,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;shton&quot;] = {
	symbol   = &quot;ton&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 907.18474,
	default  = &quot;t&quot;,
    },
    [&quot;solar mass&quot;] = {
	name1    = &quot;solar mass&quot;,
	name2    = &quot;solar masses&quot;,
	symbol   = &quot;''M''&lt;sub&gt;&lt;/sub&gt;&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1.98855e30,
	default  = &quot;kg&quot;,
    },
    [&quot;st&quot;] = {
	name1    = &quot;stone&quot;,
	name2    = &quot;stone&quot;,
	symbol   = &quot;st&quot;,
	utype    = &quot;mass&quot;,
	scale    = 6.35029318,
	default  = &quot;lb kg&quot;,
	subdivs  = { [&quot;lb&quot;] = { 14, default = &quot;kg lb&quot; } },
	link     = &quot;Stone (unit)&quot;,
    },
    [&quot;t&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;LT ST&quot;,
    },
    [&quot;tonne&quot;] = {
	name1    = &quot;tonne&quot;,
	name1_us = &quot;metric ton&quot;,
	symbol   = &quot;t&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1000,
	default  = &quot;shton&quot;,
    },
    [&quot;troy pound&quot;] = {
	symbol   = &quot;troy pound&quot;,
	usename  = 1,
	utype    = &quot;mass&quot;,
	scale    = 0.3732417216,
	default  = &quot;lb kg&quot;,
	link     = &quot;Troy weight&quot;,
    },
    [&quot;usgalh2o&quot;] = {
	name1    = &quot;US gallon of water&quot;,
	name1_us = &quot;U.S. gallon of water&quot;,
	name2    = &quot;US gallons of water&quot;,
	name2_us = &quot;U.S. gallons of water&quot;,
	symbol   = &quot;US&amp;nbsp;gal H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;mass&quot;,
	scale    = 3.7776215836051126,
	default  = &quot;lb kg&quot;,
	link     = &quot;United States customary units#Fluid volume&quot;,
    },
    [&quot;viss&quot;] = {
	name2    = &quot;viss&quot;,
	symbol   = &quot;viss&quot;,
	utype    = &quot;mass&quot;,
	scale    = 1.632932532,
	default  = &quot;kg&quot;,
	link     = &quot;Burmese units of measurement#mass&quot;,
    },
    [&quot;billion tonne&quot;] = {
	target   = &quot;e9t&quot;,
    },
    [&quot;kilogram&quot;] = {
	target   = &quot;kg&quot;,
    },
    [&quot;kilotonne&quot;] = {
	target   = &quot;kt&quot;,
    },
    [&quot;lbs&quot;] = {
	target   = &quot;lb&quot;,
    },
    [&quot;lbt&quot;] = {
	target   = &quot;troy pound&quot;,
    },
    [&quot;lcwt&quot;] = {
	target   = &quot;Lcwt&quot;,
    },
    [&quot;long ton&quot;] = {
	target   = &quot;LT&quot;,
    },
    [&quot;mcg&quot;] = {
	target   = &quot;g&quot;,
    },
    [&quot;million tonne&quot;] = {
	target   = &quot;e6t&quot;,
    },
    [&quot;scwt&quot;] = {
	target   = &quot;Scwt&quot;,
    },
    [&quot;short ton&quot;] = {
	target   = &quot;ST&quot;,
    },
    [&quot;stone&quot;] = {
	target   = &quot;st&quot;,
    },
    [&quot;thousand tonne&quot;] = {
	target   = &quot;e3t&quot;,
    },
    [&quot;tonnes&quot;] = {
	target   = &quot;t&quot;,
    },
    [&quot;kg/kW&quot;] = {
	name1    = &quot;kilogram per kilowatt&quot;,
	name2    = &quot;kilograms per kilowatt&quot;,
	symbol   = &quot;kg/kW&quot;,
	utype    = &quot;mass per unit power&quot;,
	scale    = 0.001,
	default  = &quot;lb/hp&quot;,
	link     = &quot;Kilowatt&quot;,
    },
    [&quot;lb/hp&quot;] = {
	name1    = &quot;pound per horsepower&quot;,
	name2    = &quot;pounds per horsepower&quot;,
	symbol   = &quot;lb/hp&quot;,
	utype    = &quot;mass per unit power&quot;,
	scale    = 0.00060827738784176115,
	default  = &quot;kg/kW&quot;,
	link     = &quot;Horsepower&quot;,
    },
    [&quot;kg/h&quot;] = {
	per      = { &quot;kg&quot;, &quot;h&quot; },
	utype    = &quot;mass per unit time&quot;,
	default  = &quot;lb/h&quot;,
    },
    [&quot;lb/h&quot;] = {
	per      = { &quot;lb&quot;, &quot;h&quot; },
	utype    = &quot;mass per unit time&quot;,
	default  = &quot;kg/h&quot;,
    },
    [&quot;g-mol/d&quot;] = {
	name1    = &quot;gram-mole per day&quot;,
	name2    = &quot;gram-moles per day&quot;,
	symbol   = &quot;g&amp;#8209;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/h&quot;] = {
	name1    = &quot;gram-mole per hour&quot;,
	name2    = &quot;gram-moles per hour&quot;,
	symbol   = &quot;g&amp;#8209;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/min&quot;] = {
	name1    = &quot;gram-mole per minute&quot;,
	name2    = &quot;gram-moles per minute&quot;,
	symbol   = &quot;g&amp;#8209;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;g-mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;g-mol/s&quot;] = {
	name1    = &quot;gram-mole per second&quot;,
	name2    = &quot;gram-moles per second&quot;,
	symbol   = &quot;g&amp;#8209;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lb-mol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/d&quot;] = {
	name1    = &quot;gram-mole per day&quot;,
	name2    = &quot;gram-moles per day&quot;,
	symbol   = &quot;gmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/h&quot;] = {
	name1    = &quot;gram-mole per hour&quot;,
	name2    = &quot;gram-moles per hour&quot;,
	symbol   = &quot;gmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/min&quot;] = {
	name1    = &quot;gram-mole per minute&quot;,
	name2    = &quot;gram-moles per minute&quot;,
	symbol   = &quot;gmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;gmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;gmol/s&quot;] = {
	name1    = &quot;gram-mole per second&quot;,
	name2    = &quot;gram-moles per second&quot;,
	symbol   = &quot;gmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lbmol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/d&quot;] = {
	name1    = &quot;kilomole per day&quot;,
	name2    = &quot;kilomoles per day&quot;,
	symbol   = &quot;kmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.011574074074074073,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/h&quot;] = {
	name1    = &quot;kilomole per hour&quot;,
	name2    = &quot;kilomoles per hour&quot;,
	symbol   = &quot;kmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;kmol/min&quot;] = {
	name1    = &quot;kilomole per minute&quot;,
	name2    = &quot;kilomoles per minute&quot;,
	symbol   = &quot;kmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 16.666666666666668,
	default  = &quot;mol/s&quot;,
	link     = &quot;Kilomole (unit)&quot;,
    },
    [&quot;kmol/s&quot;] = {
	name1    = &quot;kilomole per second&quot;,
	name2    = &quot;kilomoles per second&quot;,
	symbol   = &quot;kmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1000,
	default  = &quot;lb-mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;lb-mol/d&quot;] = {
	name1    = &quot;pound-mole per day&quot;,
	name2    = &quot;pound-moles per day&quot;,
	symbol   = &quot;lb&amp;#8209;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.0052499116898148141,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/h&quot;] = {
	name1    = &quot;pound-mole per hour&quot;,
	name2    = &quot;pound-moles per hour&quot;,
	symbol   = &quot;lb&amp;#8209;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.12599788055555555,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/min&quot;] = {
	name1    = &quot;pound-mole per minute&quot;,
	name2    = &quot;pound-moles per minute&quot;,
	symbol   = &quot;lb&amp;#8209;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 7.5598728333333334,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lb-mol/s&quot;] = {
	name1    = &quot;pound-mole per second&quot;,
	name2    = &quot;pound-moles per second&quot;,
	symbol   = &quot;lb&amp;#8209;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 453.59237,
	default  = &quot;kmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/d&quot;] = {
	name1    = &quot;pound-mole per day&quot;,
	name2    = &quot;pound-moles per day&quot;,
	symbol   = &quot;lbmol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.0052499116898148141,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/h&quot;] = {
	name1    = &quot;pound-mole per hour&quot;,
	name2    = &quot;pound-moles per hour&quot;,
	symbol   = &quot;lbmol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.12599788055555555,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/min&quot;] = {
	name1    = &quot;pound-mole per minute&quot;,
	name2    = &quot;pound-moles per minute&quot;,
	symbol   = &quot;lbmol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 7.5598728333333334,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;lbmol/s&quot;] = {
	name1    = &quot;pound-mole per second&quot;,
	name2    = &quot;pound-moles per second&quot;,
	symbol   = &quot;lbmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 453.59237,
	default  = &quot;kmol/s&quot;,
	link     = &quot;Mole (unit)#Other units called \&quot;mole\&quot;&quot;,
    },
    [&quot;mmol/s&quot;] = {
	name1    = &quot;millimole per second&quot;,
	name2    = &quot;millimoles per second&quot;,
	symbol   = &quot;mmol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.001,
	default  = &quot;lb-mol/d&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/d&quot;] = {
	name1    = &quot;mole per day&quot;,
	name2    = &quot;moles per day&quot;,
	symbol   = &quot;mol/d&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1.1574074074074073e-5,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/h&quot;] = {
	name1    = &quot;mole per hour&quot;,
	name2    = &quot;moles per hour&quot;,
	symbol   = &quot;mol/h&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.00027777777777777778,
	default  = &quot;mmol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/min&quot;] = {
	name1    = &quot;mole per minute&quot;,
	name2    = &quot;moles per minute&quot;,
	symbol   = &quot;mol/min&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;mol/s&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/s&quot;] = {
	name1    = &quot;mole per second&quot;,
	name2    = &quot;moles per second&quot;,
	symbol   = &quot;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 1,
	default  = &quot;lb-mol/min&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;mol/s&quot;] = {
	name1    = &quot;micromole per second&quot;,
	name2    = &quot;micromoles per second&quot;,
	symbol   = &quot;mol/s&quot;,
	utype    = &quot;molar rate&quot;,
	scale    = 0.000001,
	default  = &quot;lb-mol/d&quot;,
	link     = &quot;Mole (unit)&quot;,
    },
    [&quot;umol/s&quot;] = {
	target   = &quot;mol/s&quot;,
    },
    [&quot;mol/s&quot;] = {
	target   = &quot;mol/s&quot;,
    },
    [&quot;/acre&quot;] = {
	name1    = &quot;per acre&quot;,
	name2    = &quot;per acre&quot;,
	symbol   = &quot;/acre&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 0.00024710538146716532,
	default  = &quot;/ha&quot;,
	link     = &quot;Acre&quot;,
    },
    [&quot;/ha&quot;] = {
	name1    = &quot;per hectare&quot;,
	name2    = &quot;per hectare&quot;,
	symbol   = &quot;/ha&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 100e-6,
	default  = &quot;/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;/sqcm&quot;] = {
	name1    = &quot;per square centimetre&quot;,
	name1_us = &quot;per square centimeter&quot;,
	name2    = &quot;per square centimetre&quot;,
	name2_us = &quot;per square centimeter&quot;,
	symbol   = &quot;/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e4,
	default  = &quot;/sqin&quot;,
	link     = &quot;Square centimetre&quot;,
    },
    [&quot;/sqin&quot;] = {
	name1    = &quot;per square inch&quot;,
	name2    = &quot;per square inch&quot;,
	symbol   = &quot;/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1550.0031000062002,
	default  = &quot;/sqcm&quot;,
	link     = &quot;Square inch&quot;,
    },
    [&quot;/sqkm&quot;] = {
	name1    = &quot;per square kilometre&quot;,
	name1_us = &quot;per square kilometer&quot;,
	name2    = &quot;per square kilometre&quot;,
	name2_us = &quot;per square kilometer&quot;,
	symbol   = &quot;/km&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e-6,
	default  = &quot;/sqmi&quot;,
	link     = &quot;Square kilometre&quot;,
    },
    [&quot;/sqmi&quot;] = {
	name1    = &quot;per square mile&quot;,
	name2    = &quot;per square mile&quot;,
	symbol   = &quot;/sq&amp;nbsp;mi&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 3.8610215854244582e-7,
	default  = &quot;/sqkm&quot;,
	link     = &quot;Square mile&quot;,
    },
    [&quot;PD/acre&quot;] = {
	name1    = &quot;inhabitant per acre&quot;,
	name2    = &quot;inhabitants per acre&quot;,
	symbol   = &quot;/acre&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 0.00024710538146716532,
	default  = &quot;PD/ha&quot;,
	link     = &quot;Acre&quot;,
    },
    [&quot;PD/ha&quot;] = {
	name1    = &quot;inhabitant per hectare&quot;,
	name2    = &quot;inhabitants per hectare&quot;,
	symbol   = &quot;/ha&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 100e-6,
	default  = &quot;PD/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;PD/sqkm&quot;] = {
	name1    = &quot;inhabitant per square kilometre&quot;,
	name1_us = &quot;inhabitant per square kilometer&quot;,
	name2    = &quot;inhabitants per square kilometre&quot;,
	name2_us = &quot;inhabitants per square kilometer&quot;,
	symbol   = &quot;/km&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 1e-6,
	default  = &quot;PD/sqmi&quot;,
	link     = &quot;Square kilometre&quot;,
    },
    [&quot;PD/sqmi&quot;] = {
	name1    = &quot;inhabitant per square mile&quot;,
	name2    = &quot;inhabitants per square mile&quot;,
	symbol   = &quot;/sq&amp;nbsp;mi&quot;,
	utype    = &quot;per unit area&quot;,
	scale    = 3.8610215854244582e-7,
	default  = &quot;PD/sqkm&quot;,
	link     = &quot;Square mile&quot;,
    },
    [&quot;/cm2&quot;] = {
	target   = &quot;/sqcm&quot;,
    },
    [&quot;/in2&quot;] = {
	target   = &quot;/sqin&quot;,
    },
    [&quot;/km2&quot;] = {
	target   = &quot;/sqkm&quot;,
    },
    [&quot;pd/acre&quot;] = {
	target   = &quot;PD/acre&quot;,
    },
    [&quot;pd/ha&quot;] = {
	target   = &quot;PD/ha&quot;,
    },
    [&quot;PD/km2&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/km2&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;PD/km&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/sqkm&quot;] = {
	target   = &quot;PD/sqkm&quot;,
    },
    [&quot;pd/sqmi&quot;] = {
	target   = &quot;PD/sqmi&quot;,
    },
    [&quot;/l&quot;] = {
	name1    = &quot;per litre&quot;,
	name1_us = &quot;per liter&quot;,
	name2    = &quot;per litre&quot;,
	name2_us = &quot;per liter&quot;,
	symbol   = &quot;/l&quot;,
	utype    = &quot;per unit volume&quot;,
	scale    = 1000,
	default  = &quot;/usgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;/USgal&quot;] = {
	name1    = &quot;per gallon&quot;,
	name2    = &quot;per gallon&quot;,
	symbol   = &quot;/gal&quot;,
	utype    = &quot;per unit volume&quot;,
	scale    = 264.172052,
	default  = &quot;/l&quot;,
	link     = &quot;US gallon&quot;,
	customary= 2,
    },
    [&quot;/usgal&quot;] = {
	target   = &quot;/USgal&quot;,
    },
    [&quot;bhp&quot;] = {
	name1    = &quot;brake horsepower&quot;,
	name2    = &quot;brake horsepower&quot;,
	symbol   = &quot;bhp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Brake horsepower&quot;,
    },
    [&quot;Cal/d&quot;] = {
	name1    = &quot;large calorie per day&quot;,
	name2    = &quot;large calories per day&quot;,
	symbol   = &quot;Cal/d&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.048425925925925928,
	default  = &quot;kJ/d&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;Cal/h&quot;] = {
	name1    = &quot;large calorie per hour&quot;,
	name2    = &quot;large calories per hour&quot;,
	symbol   = &quot;Cal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 1.1622222222222223,
	default  = &quot;kJ/h&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;cal/h&quot;] = {
	name1    = &quot;calorie per hour&quot;,
	name2    = &quot;calories per hour&quot;,
	symbol   = &quot;cal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.0011622222222222223,
	default  = &quot;W&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;CV&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;CV&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;hk&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;hk&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;hp&quot;] = {
	name1    = &quot;horsepower&quot;,
	name2    = &quot;horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
    },
    [&quot;hp-electric&quot;] = {
	name1    = &quot;electric horsepower&quot;,
	name2    = &quot;electric horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 746,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Electrical horsepower&quot;,
    },
    [&quot;hp-electrical&quot;] = {
	name1    = &quot;electrical horsepower&quot;,
	name2    = &quot;electrical horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 746,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Electrical horsepower&quot;,
    },
    [&quot;hp-metric&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;hp&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;ihp&quot;] = {
	name1    = &quot;indicated horsepower&quot;,
	name2    = &quot;indicated horsepower&quot;,
	symbol   = &quot;ihp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Indicated horsepower&quot;,
    },
    [&quot;kcal/h&quot;] = {
	name1    = &quot;kilocalorie per hour&quot;,
	name2    = &quot;kilocalories per hour&quot;,
	symbol   = &quot;kcal/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 1.1622222222222223,
	default  = &quot;kW&quot;,
	link     = &quot;Calorie&quot;,
    },
    [&quot;kJ/d&quot;] = {
	name1    = &quot;kilojoule per day&quot;,
	name2    = &quot;kilojoules per day&quot;,
	symbol   = &quot;kJ/d&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.011574074074074073,
	default  = &quot;Cal/d&quot;,
	link     = &quot;Kilojoule&quot;,
    },
    [&quot;kJ/h&quot;] = {
	name1    = &quot;kilojoule per hour&quot;,
	name2    = &quot;kilojoules per hour&quot;,
	symbol   = &quot;kJ/h&quot;,
	utype    = &quot;power&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;W&quot;,
	link     = &quot;Kilojoule&quot;,
    },
    [&quot;PS&quot;] = {
	name1    = &quot;metric horsepower&quot;,
	name2    = &quot;metric horsepower&quot;,
	symbol   = &quot;PS&quot;,
	utype    = &quot;power&quot;,
	scale    = 735.49875,
	default  = &quot;kW&quot;,
    },
    [&quot;shp&quot;] = {
	name1    = &quot;shaft horsepower&quot;,
	name2    = &quot;shaft horsepower&quot;,
	symbol   = &quot;shp&quot;,
	utype    = &quot;power&quot;,
	scale    = 745.69987158227022,
	default  = &quot;kW&quot;,
	link     = &quot;Horsepower#Shaft horsepower&quot;,
    },
    [&quot;W&quot;] = {
	_name1   = &quot;watt&quot;,
	_symbol  = &quot;W&quot;,
	utype    = &quot;power&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;hp&quot;,
	link     = &quot;Watt&quot;,
    },
    [&quot;BTU/h&quot;] = {
	per      = { &quot;BTU&quot;, &quot;h&quot; },
	utype    = &quot;power&quot;,
	default  = &quot;W&quot;,
    },
    [&quot;Btu/h&quot;] = {
	per      = { &quot;Btu&quot;, &quot;h&quot; },
	utype    = &quot;power&quot;,
	default  = &quot;W&quot;,
    },
    [&quot;BHP&quot;] = {
	target   = &quot;bhp&quot;,
    },
    [&quot;btu/h&quot;] = {
	target   = &quot;BTU/h&quot;,
    },
    [&quot;HP&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;Hp&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;hp-mechanical&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;IHP&quot;] = {
	target   = &quot;ihp&quot;,
    },
    [&quot;SHP&quot;] = {
	target   = &quot;shp&quot;,
    },
    [&quot;whp&quot;] = {
	target   = &quot;hp&quot;,
    },
    [&quot;hp/lb&quot;] = {
	name1    = &quot;horsepower per pound&quot;,
	name2    = &quot;horsepower per pound&quot;,
	symbol   = &quot;hp/lb&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1643.986806,
	default  = &quot;kW/kg&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/LT&quot;] = {
	name1    = &quot;horsepower per long ton&quot;,
	name2    = &quot;horsepower per long ton&quot;,
	symbol   = &quot;hp/LT&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.73392268125000004,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/ST&quot;] = {
	name1    = &quot;horsepower per short ton&quot;,
	name2    = &quot;horsepower per short ton&quot;,
	symbol   = &quot;hp/ST&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.821993403,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/t&quot;] = {
	name1    = &quot;horsepower per tonne&quot;,
	name2    = &quot;horsepower per tonne&quot;,
	symbol   = &quot;hp/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.74569987158227022,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;kW/kg&quot;] = {
	name1    = &quot;kilowatt per kilogram&quot;,
	name2    = &quot;kilowatts per kilogram&quot;,
	symbol   = &quot;kW/kg&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1000,
	default  = &quot;hp/lb&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;kW/t&quot;] = {
	name1    = &quot;kilowatt per tonne&quot;,
	name2    = &quot;kilowatts per tonne&quot;,
	symbol   = &quot;kW/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1,
	default  = &quot;PS/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;PS/t&quot;] = {
	name1    = &quot;metric horsepower per tonne&quot;,
	name2    = &quot;metric horsepower per tonne&quot;,
	symbol   = &quot;PS/t&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 0.73549875,
	default  = &quot;kW/t&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;shp/lb&quot;] = {
	name1    = &quot;shaft horsepower per pound&quot;,
	name2    = &quot;shaft horsepower per pound&quot;,
	symbol   = &quot;shp/lb&quot;,
	utype    = &quot;power per unit mass&quot;,
	scale    = 1643.986806,
	default  = &quot;kW/kg&quot;,
	link     = &quot;Power-to-weight ratio&quot;,
    },
    [&quot;hp/tonne&quot;] = {
	target   = &quot;hp/t&quot;,
	symbol   = &quot;hp/tonne&quot;,
	default  = &quot;kW/tonne&quot;,
    },
    [&quot;kW/tonne&quot;] = {
	target   = &quot;kW/t&quot;,
	symbol   = &quot;kW/tonne&quot;,
    },
    [&quot;-lb/in2&quot;] = {
	name1    = &quot;pound per square inch&quot;,
	name2    = &quot;pounds per square inch&quot;,
	symbol   = &quot;lb/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa kgf/cm2&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;atm&quot;] = {
	name1    = &quot;standard atmosphere&quot;,
	symbol   = &quot;atm&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 101325,
	default  = &quot;kPa&quot;,
	link     = &quot;Atmosphere (unit)&quot;,
    },
    [&quot;Ba&quot;] = {
	name1    = &quot;barye&quot;,
	symbol   = &quot;Ba&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 0.1,
	default  = &quot;Pa&quot;,
    },
    [&quot;bar&quot;] = {
	symbol   = &quot;bar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100000,
	default  = &quot;kPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;dbar&quot;] = {
	name1    = &quot;decibar&quot;,
	symbol   = &quot;dbar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 10000,
	default  = &quot;kPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;inHg&quot;] = {
	name1    = &quot;inch of mercury&quot;,
	name2    = &quot;inches of mercury&quot;,
	symbol   = &quot;inHg&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 3386.388640341,
	default  = &quot;kPa&quot;,
    },
    [&quot;kBa&quot;] = {
	name1    = &quot;kilobarye&quot;,
	symbol   = &quot;kBa&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Barye&quot;,
    },
    [&quot;kg-f/cm2&quot;] = {
	name1    = &quot;kilogram-force per square centimetre&quot;,
	name1_us = &quot;kilogram-force per square centimeter&quot;,
	name2    = &quot;kilograms-force per square centimetre&quot;,
	name2_us = &quot;kilograms-force per square centimeter&quot;,
	symbol   = &quot;kg&lt;sub&gt;f&lt;/sub&gt;/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;kg/cm2&quot;] = {
	name1    = &quot;kilogram per square centimetre&quot;,
	name1_us = &quot;kilogram per square centimeter&quot;,
	name2    = &quot;kilograms per square centimetre&quot;,
	name2_us = &quot;kilograms per square centimeter&quot;,
	symbol   = &quot;kg/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;kgf/cm2&quot;] = {
	name1    = &quot;kilogram-force per square centimetre&quot;,
	name1_us = &quot;kilogram-force per square centimeter&quot;,
	name2    = &quot;kilograms-force per square centimetre&quot;,
	name2_us = &quot;kilograms-force per square centimeter&quot;,
	symbol   = &quot;kgf/cm&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 98066.5,
	default  = &quot;psi&quot;,
	link     = &quot;Kilogram-force&quot;,
    },
    [&quot;ksi&quot;] = {
	name1    = &quot;kilopound per square inch&quot;,
	name2    = &quot;kilopounds per square inch&quot;,
	symbol   = &quot;ksi&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894757.2931683613,
	default  = &quot;MPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;lbf/in2&quot;] = {
	name1    = &quot;pound-force per square inch&quot;,
	name2    = &quot;pounds-force per square inch&quot;,
	symbol   = &quot;lbf/in&lt;sup&gt;2&lt;/sup&gt;&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa kgf/cm2&quot;,
	link     = &quot;Pounds-force per square inch&quot;,
    },
    [&quot;mb&quot;] = {
	name1    = &quot;millibar&quot;,
	symbol   = &quot;mb&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;mbar&quot;] = {
	name1    = &quot;millibar&quot;,
	symbol   = &quot;mbar&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 100,
	default  = &quot;hPa&quot;,
	link     = &quot;Bar (unit)&quot;,
    },
    [&quot;mmHg&quot;] = {
	name1    = &quot;millimetre of mercury&quot;,
	name1_us = &quot;millimeter of mercury&quot;,
	name2    = &quot;millimetres of mercury&quot;,
	name2_us = &quot;millimeters of mercury&quot;,
	symbol   = &quot;mmHg&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 133.322387415,
	default  = &quot;kPa&quot;,
	link     = &quot;Millimeter of mercury&quot;,
    },
    [&quot;Pa&quot;] = {
	_name1   = &quot;pascal&quot;,
	_symbol  = &quot;Pa&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;psi&quot;,
	link     = &quot;Pascal (unit)&quot;,
    },
    [&quot;psf&quot;] = {
	name1    = &quot;pound per square foot&quot;,
	name2    = &quot;pounds per square foot&quot;,
	symbol   = &quot;psf&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 47.880258980335839,
	default  = &quot;kPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;psi&quot;] = {
	name1    = &quot;pound per square inch&quot;,
	name2    = &quot;pounds per square inch&quot;,
	symbol   = &quot;psi&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 6894.7572931683608,
	default  = &quot;kPa&quot;,
	link     = &quot;Pounds per square inch&quot;,
    },
    [&quot;Torr&quot;] = {
	name1    = &quot;torr&quot;,
	symbol   = &quot;Torr&quot;,
	utype    = &quot;pressure&quot;,
	scale    = 133.32236842105263,
	default  = &quot;kPa&quot;,
    },
    [&quot;N/cm2&quot;] = {
	per      = { &quot;N&quot;, &quot;cm2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;psi&quot;,
    },
    [&quot;N/m2&quot;] = {
	per      = { &quot;N&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;psi&quot;,
    },
    [&quot;g/cm2&quot;] = {
	per      = { &quot;g&quot;, &quot;cm2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;g/m2&quot;] = {
	per      = { &quot;g&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;kg/ha&quot;] = {
	per      = { &quot;kg&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;kg/m2&quot;] = {
	per      = { &quot;kg&quot;, &quot;m2&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;lb/sqft&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/1000sqft&quot;] = {
	per      = { &quot;lb&quot;, &quot;1000sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/acre&quot;] = {
	per      = { &quot;lb&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/sqft&quot;] = {
	per      = { &quot;lb&quot;, &quot;sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;lb/sqyd&quot;] = {
	per      = { &quot;lb&quot;, &quot;sqyd&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;kg/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;LT/acre&quot;] = {
	per      = { &quot;LT&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;t/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;MT/ha&quot;] = {
	per      = { &quot;MT&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;LT/acre ST/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;oz/sqft&quot;] = {
	per      = { &quot;oz&quot;, &quot;sqft&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;oz/sqyd&quot;] = {
	per      = { &quot;oz&quot;, &quot;sqyd&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;g/m2&quot;,
	multiplier= 9.80665,
    },
    [&quot;ST/acre&quot;] = {
	per      = { &quot;ST&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;t/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;t/ha&quot;] = {
	per      = { &quot;t&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;LT/acre ST/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;tonne/acre&quot;] = {
	per      = { &quot;tonne&quot;, &quot;acre&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;tonne/ha&quot;,
	multiplier= 9.80665,
    },
    [&quot;tonne/ha&quot;] = {
	per      = { &quot;tonne&quot;, &quot;ha&quot; },
	utype    = &quot;pressure&quot;,
	default  = &quot;tonne/acre&quot;,
	multiplier= 9.80665,
    },
    [&quot;kgfpsqcm&quot;] = {
	target   = &quot;kgf/cm2&quot;,
    },
    [&quot;kgpsqcm&quot;] = {
	target   = &quot;kg/cm2&quot;,
    },
    [&quot;kN/m2&quot;] = {
	target   = &quot;kPa&quot;,
    },
    [&quot;lb/in2&quot;] = {
	target   = &quot;lbf/in2&quot;,
    },
    [&quot;torr&quot;] = {
	target   = &quot;Torr&quot;,
    },
    [&quot;Bq&quot;] = {
	_name1   = &quot;becquerel&quot;,
	_symbol  = &quot;Bq&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;pCi&quot;,
	link     = &quot;Becquerel&quot;,
    },
    [&quot;Ci&quot;] = {
	_name1   = &quot;curie&quot;,
	_symbol  = &quot;Ci&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 3.7e10,
	prefixes = 1,
	default  = &quot;GBq&quot;,
	link     = &quot;Curie&quot;,
    },
    [&quot;Rd&quot;] = {
	_name1   = &quot;rutherford&quot;,
	_symbol  = &quot;Rd&quot;,
	utype    = &quot;radioactivity&quot;,
	scale    = 1e6,
	prefixes = 1,
	default  = &quot;MBq&quot;,
	link     = &quot;Rutherford (unit)&quot;,
    },
    [&quot;cm/h&quot;] = {
	name1    = &quot;centimetre per hour&quot;,
	name1_us = &quot;centimeter per hour&quot;,
	name2    = &quot;centimetres per hour&quot;,
	name2_us = &quot;centimeters per hour&quot;,
	symbol   = &quot;cm/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.7777777777777775e-6,
	default  = &quot;in/h&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;cm/s&quot;] = {
	name1    = &quot;centimetre per second&quot;,
	name1_us = &quot;centimeter per second&quot;,
	name2    = &quot;centimetres per second&quot;,
	name2_us = &quot;centimeters per second&quot;,
	symbol   = &quot;cm/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.01,
	default  = &quot;in/s&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;cm/year&quot;] = {
	name1    = &quot;centimetre per year&quot;,
	name1_us = &quot;centimeter per year&quot;,
	name2    = &quot;centimetres per year&quot;,
	name2_us = &quot;centimeters per year&quot;,
	symbol   = &quot;cm/year&quot;,
	utype    = &quot;speed&quot;,
	scale    = 3.168873850681143e-10,
	default  = &quot;in/year&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;foot/s&quot;] = {
	name1    = &quot;foot per second&quot;,
	name2    = &quot;foot per second&quot;,
	symbol   = &quot;ft/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.3048,
	default  = &quot;m/s&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;ft/min&quot;] = {
	name1    = &quot;foot per minute&quot;,
	name2    = &quot;feet per minute&quot;,
	symbol   = &quot;ft/min&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.00508,
	default  = &quot;m/min&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;ft/s&quot;] = {
	name1    = &quot;foot per second&quot;,
	name2    = &quot;feet per second&quot;,
	symbol   = &quot;ft/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.3048,
	default  = &quot;m/s&quot;,
	link     = &quot;Feet per second&quot;,
    },
    [&quot;furlong per fortnight&quot;] = {
	name2    = &quot;furlongs per fortnight&quot;,
	symbol   = &quot;furlong per fortnight&quot;,
	usename  = 1,
	utype    = &quot;speed&quot;,
	scale    = 0.00016630952380952381,
	default  = &quot;km/h mph&quot;,
	link     = &quot;FFF System&quot;,
    },
    [&quot;in/h&quot;] = {
	name1    = &quot;inch per hour&quot;,
	name2    = &quot;inches per hour&quot;,
	symbol   = &quot;in/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 7.0555555555555559e-6,
	default  = &quot;cm/h&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;in/s&quot;] = {
	name1    = &quot;inch per second&quot;,
	name2    = &quot;inches per second&quot;,
	symbol   = &quot;in/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.0254,
	default  = &quot;cm/s&quot;,
	link     = &quot;Inch&quot;,
    },
    [&quot;in/year&quot;] = {
	name1    = &quot;inch per year&quot;,
	name2    = &quot;inches per year&quot;,
	symbol   = &quot;in/year&quot;,
	utype    = &quot;speed&quot;,
	scale    = 8.0489395807301024e-10,
	default  = &quot;cm/year&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;isp&quot;] = {
	name1    = &quot;second&quot;,
	symbol   = &quot;s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 9.80665,
	default  = &quot;km/s&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;km/d&quot;] = {
	name1    = &quot;kilometre per day&quot;,
	name1_us = &quot;kilometer per day&quot;,
	name2    = &quot;kilometres per day&quot;,
	name2_us = &quot;kilometers per day&quot;,
	symbol   = &quot;km/d&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1.1574074074074074e-2,
	default  = &quot;mi/d&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;km/h&quot;] = {
	name1    = &quot;kilometre per hour&quot;,
	name1_us = &quot;kilometer per hour&quot;,
	name2    = &quot;kilometres per hour&quot;,
	name2_us = &quot;kilometers per hour&quot;,
	symbol   = &quot;km/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.27777777777777779,
	default  = &quot;mph&quot;,
	link     = &quot;Kilometres per hour&quot;,
    },
    [&quot;km/s&quot;] = {
	name1    = &quot;kilometre per second&quot;,
	name1_us = &quot;kilometer per second&quot;,
	name2    = &quot;kilometres per second&quot;,
	name2_us = &quot;kilometers per second&quot;,
	symbol   = &quot;km/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1000,
	default  = &quot;mi/s&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;kn&quot;] = {
	name1    = &quot;knot&quot;,
	symbol   = &quot;kn&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.51444444444444448,
	default  = &quot;km/h mph&quot;,
	link     = &quot;Knot (unit)&quot;,
    },
    [&quot;kNs/kg&quot;] = {
	name2    = &quot;kN&amp;#8209;s/kg&quot;,
	symbol   = &quot;kN&amp;#8209;s/kg&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1000,
	default  = &quot;isp&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;m/min&quot;] = {
	name1    = &quot;metre per minute&quot;,
	name1_us = &quot;meter per minute&quot;,
	name2    = &quot;metres per minute&quot;,
	name2_us = &quot;meters per minute&quot;,
	symbol   = &quot;m/min&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.016666666666666666,
	default  = &quot;ft/min&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;m/s&quot;] = {
	name1    = &quot;metre per second&quot;,
	name1_us = &quot;meter per second&quot;,
	name2    = &quot;metres per second&quot;,
	name2_us = &quot;meters per second&quot;,
	symbol   = &quot;m/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1,
	default  = &quot;ft/s&quot;,
    },
    [&quot;Mach&quot;] = {
	name2    = &quot;Mach&quot;,
	symbol   = &quot;Mach&quot;,
	utype    = &quot;speed&quot;,
	builtin  = &quot;mach&quot;,
	scale    = 0,
	iscomplex= true,
	default  = &quot;km/h mph&quot;,
	link     = &quot;Mach number&quot;,
    },
    [&quot;mi/d&quot;] = {
	name1    = &quot;mile per day&quot;,
	name2    = &quot;miles per day&quot;,
	symbol   = &quot;mi/d&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1.8626666666666667e-2,
	default  = &quot;km/d&quot;,
	link     = &quot;Orders of magnitude (speed)&quot;,
    },
    [&quot;mi/s&quot;] = {
	name1    = &quot;mile per second&quot;,
	name2    = &quot;miles per second&quot;,
	symbol   = &quot;mi/s&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1609.344,
	default  = &quot;km/s&quot;,
	link     = &quot;Mile&quot;,
    },
    [&quot;mm/h&quot;] = {
	name1    = &quot;millimetre per hour&quot;,
	name1_us = &quot;millimeter per hour&quot;,
	name2    = &quot;millimetres per hour&quot;,
	name2_us = &quot;millimeters per hour&quot;,
	symbol   = &quot;mm/h&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.7777777777777781e-7,
	default  = &quot;in/h&quot;,
	link     = &quot;Metre per second&quot;,
    },
    [&quot;mph&quot;] = {
	name1    = &quot;mile per hour&quot;,
	name2    = &quot;miles per hour&quot;,
	symbol   = &quot;mph&quot;,
	utype    = &quot;speed&quot;,
	scale    = 0.44704,
	default  = &quot;km/h&quot;,
	link     = &quot;Miles per hour&quot;,
    },
    [&quot;Ns/kg&quot;] = {
	name2    = &quot;N&amp;#8209;s/kg&quot;,
	symbol   = &quot;N&amp;#8209;s/kg&quot;,
	utype    = &quot;speed&quot;,
	scale    = 1,
	default  = &quot;isp&quot;,
	link     = &quot;Specific impulse&quot;,
    },
    [&quot;si tsfc&quot;] = {
	name2    = &quot;g/(kNs)&quot;,
	symbol   = &quot;g/(kNs)&quot;,
	utype    = &quot;speed&quot;,
	scale    = 9.9999628621379242e-7,
	invert   = -1,
	iscomplex= true,
	default  = &quot;tsfc&quot;,
	link     = &quot;Thrust specific fuel consumption&quot;,
    },
    [&quot;tsfc&quot;] = {
	name2    = &quot;lb/(lbfh)&quot;,
	symbol   = &quot;lb/(lbfh)&quot;,
	utype    = &quot;speed&quot;,
	scale    = 2.832545036049801e-5,
	invert   = -1,
	iscomplex= true,
	default  = &quot;si tsfc&quot;,
	link     = &quot;Thrust specific fuel consumption&quot;,
    },
    [&quot;cm/y&quot;] = {
	target   = &quot;cm/year&quot;,
    },
    [&quot;cm/yr&quot;] = {
	target   = &quot;cm/year&quot;,
    },
    [&quot;in/y&quot;] = {
	target   = &quot;in/year&quot;,
    },
    [&quot;in/yr&quot;] = {
	target   = &quot;in/year&quot;,
    },
    [&quot;knot&quot;] = {
	target   = &quot;kn&quot;,
    },
    [&quot;knots&quot;] = {
	target   = &quot;kn&quot;,
    },
    [&quot;kph&quot;] = {
	target   = &quot;km/h&quot;,
    },
    [&quot;mi/h&quot;] = {
	target   = &quot;mph&quot;,
    },
    [&quot;mm/s&quot;] = {
	per      = { &quot;mm&quot;, &quot;s&quot; },
	utype    = &quot;speed&quot;,
	default  = &quot;in/s&quot;,
	link     = &quot;metre per second&quot;,
    },
    [&quot;C&quot;] = {
	name1    = &quot;degree Celsius&quot;,
	name2    = &quot;degrees Celsius&quot;,
	symbol   = &quot;C&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 1,
	offset   = -273.15,
	iscomplex= true,
	istemperature= true,
	default  = &quot;F&quot;,
	link     = &quot;Celsius&quot;,
    },
    [&quot;F&quot;] = {
	name1    = &quot;degree Fahrenheit&quot;,
	name2    = &quot;degrees Fahrenheit&quot;,
	symbol   = &quot;F&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 0.55555555555555558,
	offset   = 32-273.15*(9/5),
	iscomplex= true,
	istemperature= true,
	default  = &quot;C&quot;,
	link     = &quot;Fahrenheit&quot;,
    },
    [&quot;K&quot;] = {
	_name1   = &quot;kelvin&quot;,
	_symbol  = &quot;K&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 1,
	offset   = 0,
	iscomplex= true,
	istemperature= true,
	prefixes = 1,
	default  = &quot;C F&quot;,
	link     = &quot;Kelvin&quot;,
    },
    [&quot;keVT&quot;] = {
	name1    = &quot;kiloelectronvolt&quot;,
	symbol   = &quot;keV&quot;,
	utype    = &quot;temperature&quot;,
	scale    = 11.604505e6,
	offset   = 0,
	iscomplex= true,
	default  = &quot;MK&quot;,
	link     = &quot;Electronvolt&quot;,
    },
    [&quot;R&quot;] = {
	name1    = &quot;degree Rankine&quot;,
	name2    = &quot;degrees Rankine&quot;,
	symbol   = &quot;R&quot;,
	usesymbol= 1,
	utype    = &quot;temperature&quot;,
	scale    = 0.55555555555555558,
	offset   = 0,
	iscomplex= true,
	istemperature= true,
	default  = &quot;K F C&quot;,
	link     = &quot;Rankine scale&quot;,
    },
    [&quot;Celsius&quot;] = {
	target   = &quot;C&quot;,
    },
    [&quot;C&quot;] = {
	target   = &quot;C&quot;,
    },
    [&quot;F&quot;] = {
	target   = &quot;F&quot;,
    },
    [&quot;R&quot;] = {
	target   = &quot;R&quot;,
    },
    [&quot;C-change&quot;] = {
	name1    = &quot;degree Celsius change&quot;,
	name2    = &quot;degrees Celsius change&quot;,
	symbol   = &quot;C&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 1,
	default  = &quot;F-change&quot;,
	link     = &quot;Celsius&quot;,
    },
    [&quot;F-change&quot;] = {
	name1    = &quot;degree Fahrenheit change&quot;,
	name2    = &quot;degrees Fahrenheit change&quot;,
	symbol   = &quot;F&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 0.55555555555555558,
	default  = &quot;C-change&quot;,
	link     = &quot;Fahrenheit&quot;,
    },
    [&quot;K-change&quot;] = {
	name1    = &quot;kelvin change&quot;,
	name2    = &quot;kelvins change&quot;,
	symbol   = &quot;K&quot;,
	usesymbol= 1,
	utype    = &quot;temperature change&quot;,
	scale    = 1,
	default  = &quot;F-change&quot;,
	link     = &quot;Kelvin&quot;,
    },
    [&quot;C-change&quot;] = {
	target   = &quot;C-change&quot;,
    },
    [&quot;F-change&quot;] = {
	target   = &quot;F-change&quot;,
    },
    [&quot;century&quot;] = {
	name1    = &quot;century&quot;,
	name2    = &quot;centuries&quot;,
	symbol   = &quot;ha&quot;,
	utype    = &quot;time&quot;,
	scale    = 3155760000,
	default  = &quot;Gs&quot;,
    },
    [&quot;d&quot;] = {
	name1    = &quot;day&quot;,
	symbol   = &quot;d&quot;,
	utype    = &quot;time&quot;,
	scale    = 86400,
	default  = &quot;ks&quot;,
    },
    [&quot;decade&quot;] = {
	name1    = &quot;decade&quot;,
	symbol   = &quot;daa&quot;,
	utype    = &quot;time&quot;,
	scale    = 315576000,
	default  = &quot;Ms&quot;,
    },
    [&quot;dog year&quot;] = {
	name1    = &quot;dog year&quot;,
	symbol   = &quot;dog yr&quot;,
	utype    = &quot;time&quot;,
	scale    = 220903200,
	default  = &quot;years&quot;,
    },
    [&quot;fortnight&quot;] = {
	symbol   = &quot;fortnight&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 1209600,
	default  = &quot;week&quot;,
    },
    [&quot;h&quot;] = {
	name1    = &quot;hour&quot;,
	symbol   = &quot;h&quot;,
	utype    = &quot;time&quot;,
	scale    = 3600,
	default  = &quot;ks&quot;,
    },
    [&quot;long billion year&quot;] = {
	name1    = &quot;billion years&quot;,
	name2    = &quot;billion years&quot;,
	symbol   = &quot;Ta&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000000,
	default  = &quot;Es&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;millennium&quot;] = {
	name1    = &quot;millennium&quot;,
	name2    = &quot;millennia&quot;,
	symbol   = &quot;ka&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000,
	default  = &quot;Gs&quot;,
    },
    [&quot;milliard year&quot;] = {
	name1    = &quot;milliard years&quot;,
	name2    = &quot;milliard years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;million year&quot;] = {
	name1    = &quot;million years&quot;,
	name2    = &quot;million years&quot;,
	symbol   = &quot;Ma&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000,
	default  = &quot;Ts&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;min&quot;] = {
	name1    = &quot;minute&quot;,
	symbol   = &quot;min&quot;,
	utype    = &quot;time&quot;,
	scale    = 60,
	default  = &quot;s&quot;,
    },
    [&quot;month&quot;] = {
	symbol   = &quot;month&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 2629800,
	default  = &quot;Ms&quot;,
    },
    [&quot;months&quot;] = {
	name1    = &quot;month&quot;,
	symbol   = &quot;mo&quot;,
	utype    = &quot;time&quot;,
	scale    = 2629800,
	default  = &quot;year&quot;,
    },
    [&quot;s&quot;] = {
	_name1   = &quot;second&quot;,
	_symbol  = &quot;s&quot;,
	utype    = &quot;time&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;min&quot;,
	link     = &quot;Second&quot;,
    },
    [&quot;short billion year&quot;] = {
	name1    = &quot;billion years&quot;,
	name2    = &quot;billion years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;short trillion year&quot;] = {
	name1    = &quot;trillion years&quot;,
	name2    = &quot;trillion years&quot;,
	symbol   = &quot;Ta&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000000,
	default  = &quot;Es&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;thousand million year&quot;] = {
	name1    = &quot;thousand million years&quot;,
	name2    = &quot;thousand million years&quot;,
	symbol   = &quot;Ga&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600000000000,
	default  = &quot;Ps&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;wk&quot;] = {
	symbol   = &quot;week&quot;,
	usename  = 1,
	utype    = &quot;time&quot;,
	scale    = 604800,
	default  = &quot;Ms&quot;,
    },
    [&quot;year&quot;] = {
	name1    = &quot;year&quot;,
	symbol   = &quot;a&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600,
	default  = &quot;Ms&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;years&quot;] = {
	name1    = &quot;year&quot;,
	symbol   = &quot;yr&quot;,
	utype    = &quot;time&quot;,
	scale    = 31557600,
	default  = &quot;Ms&quot;,
	link     = &quot;Annum&quot;,
    },
    [&quot;byr&quot;] = {
	target   = &quot;short billion year&quot;,
    },
    [&quot;day&quot;] = {
	target   = &quot;d&quot;,
    },
    [&quot;days&quot;] = {
	target   = &quot;d&quot;,
    },
    [&quot;dog yr&quot;] = {
	target   = &quot;dog year&quot;,
    },
    [&quot;Gyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;hour&quot;] = {
	target   = &quot;h&quot;,
    },
    [&quot;hours&quot;] = {
	target   = &quot;h&quot;,
    },
    [&quot;kMyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;kmyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;kyr&quot;] = {
	target   = &quot;millennium&quot;,
    },
    [&quot;long byr&quot;] = {
	target   = &quot;long billion year&quot;,
    },
    [&quot;minute&quot;] = {
	target   = &quot;min&quot;,
    },
    [&quot;minutes&quot;] = {
	target   = &quot;min&quot;,
    },
    [&quot;mth&quot;] = {
	target   = &quot;month&quot;,
    },
    [&quot;Myr&quot;] = {
	target   = &quot;million year&quot;,
    },
    [&quot;myr&quot;] = {
	target   = &quot;million year&quot;,
    },
    [&quot;second&quot;] = {
	target   = &quot;s&quot;,
    },
    [&quot;seconds&quot;] = {
	target   = &quot;s&quot;,
    },
    [&quot;tmyr&quot;] = {
	target   = &quot;thousand million year&quot;,
    },
    [&quot;tryr&quot;] = {
	target   = &quot;short trillion year&quot;,
    },
    [&quot;tyr&quot;] = {
	target   = &quot;millennium&quot;,
    },
    [&quot;week&quot;] = {
	target   = &quot;wk&quot;,
    },
    [&quot;weeks&quot;] = {
	target   = &quot;wk&quot;,
    },
    [&quot;yr&quot;] = {
	target   = &quot;year&quot;,
    },
    [&quot;kg.m&quot;] = {
	name1    = &quot;kilogram metre&quot;,
	name1_us = &quot;kilogram meter&quot;,
	symbol   = &quot;kgm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbft&quot;,
    },
    [&quot;kgf.m&quot;] = {
	name1    = &quot;kilogram force-metre&quot;,
	name1_us = &quot;kilogram force-meter&quot;,
	symbol   = &quot;kgfm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;kgm&quot;] = {
	name1    = &quot;kilogram metre&quot;,
	name1_us = &quot;kilogram meter&quot;,
	symbol   = &quot;kgm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
    },
    [&quot;lb-fft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;ftlb&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lb.ft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;lbft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lb.in&quot;] = {
	name1    = &quot;pound force-inch&quot;,
	symbol   = &quot;lbin&quot;,
	utype    = &quot;torque&quot;,
	scale    = 0.1129848290276167,
	default  = &quot;mN.m&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lbfft&quot;] = {
	name1    = &quot;pound force-foot&quot;,
	name2    = &quot;pound force-feet&quot;,
	symbol   = &quot;lbfft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;lbft&quot;] = {
	name1    = &quot;pound-foot&quot;,
	name2    = &quot;pound-feet&quot;,
	symbol   = &quot;lbft&quot;,
	utype    = &quot;torque&quot;,
	scale    = 1.3558179483314004,
	default  = &quot;Nm&quot;,
	link     = &quot;Pound-foot (torque)&quot;,
    },
    [&quot;m.kg-f&quot;] = {
	name1    = &quot;metre kilogram-force&quot;,
	name1_us = &quot;meter kilogram-force&quot;,
	name2    = &quot;metre kilograms-force&quot;,
	name2_us = &quot;meter kilograms-force&quot;,
	symbol   = &quot;mkg&lt;sub&gt;f&lt;/sub&gt;&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;m.kgf&quot;] = {
	name1    = &quot;metre kilogram-force&quot;,
	name1_us = &quot;meter kilogram-force&quot;,
	name2    = &quot;metre kilograms-force&quot;,
	name2_us = &quot;meter kilograms-force&quot;,
	symbol   = &quot;mkgf&quot;,
	utype    = &quot;torque&quot;,
	scale    = 9.80665,
	default  = &quot;Nm lbfft&quot;,
	link     = &quot;Kilogram metre&quot;,
    },
    [&quot;mN.m&quot;] = {
	name1    = &quot;millinewton metre&quot;,
	name1_us = &quot;millinewton meter&quot;,
	symbol   = &quot;mNm&quot;,
	utype    = &quot;torque&quot;,
	scale    = 0.001,
	default  = &quot;lb.in&quot;,
	link     = &quot;Newton metre&quot;,
    },
    [&quot;Nm&quot;] = {
	_name1   = &quot;newton metre&quot;,
	_name1_us= &quot;newton meter&quot;,
	_symbol  = &quot;Nm&quot;,
	utype    = &quot;torque&quot;,
	alttype  = &quot;energy&quot;,
	scale    = 1,
	prefixes = 1,
	default  = &quot;lbfft&quot;,
	link     = &quot;Newton metre&quot;,
    },
    [&quot;kN/m&quot;] = {
	per      = { &quot;kN&quot;, &quot;-m-stiff&quot; },
	utype    = &quot;torque&quot;,
	default  = &quot;lbf/in&quot;,
    },
    [&quot;lbf/in&quot;] = {
	per      = { &quot;lbf&quot;, &quot;-in-stiff&quot; },
	utype    = &quot;torque&quot;,
	default  = &quot;kN/m&quot;,
    },
    [&quot;lb-f.ft&quot;] = {
	target   = &quot;lb-fft&quot;,
    },
    [&quot;lb-fft&quot;] = {
	target   = &quot;lb-fft&quot;,
    },
    [&quot;lbf.ft&quot;] = {
	target   = &quot;lbfft&quot;,
    },
    [&quot;lbfft&quot;] = {
	target   = &quot;lbfft&quot;,
    },
    [&quot;lbft&quot;] = {
	target   = &quot;lb.ft&quot;,
    },
    [&quot;mkg-f&quot;] = {
	target   = &quot;m.kg-f&quot;,
    },
    [&quot;mkgf&quot;] = {
	target   = &quot;m.kgf&quot;,
    },
    [&quot;N.m&quot;] = {
	target   = &quot;Nm&quot;,
    },
    [&quot;Nm&quot;] = {
	target   = &quot;Nm&quot;,
    },
    [&quot;-12USoz(mL)serve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;mL) serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;mL&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;-12USoz(ml)serve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz (355&amp;nbsp;ml) serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;ml&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;-12USozserve&quot;] = {
	name1_us = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	symbol   = &quot;12&amp;nbsp;US&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	sym_us   = &quot;12&amp;nbsp;U.S.&amp;nbsp;fl&amp;nbsp;oz serving&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00035488235475000004,
	default  = &quot;mL&quot;,
	link     = &quot;Beverage can#Standard sizes&quot;,
    },
    [&quot;acre foot&quot;] = {
	name1    = &quot;acre foot&quot;,
	name2    = &quot;acre foot&quot;,
	symbol   = &quot;acreft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1233.48183754752,
	default  = &quot;m3&quot;,
    },
    [&quot;acre ft&quot;] = {
	name1    = &quot;acre foot&quot;,
	name2    = &quot;acre feet&quot;,
	symbol   = &quot;acreft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1233.48183754752,
	default  = &quot;m3&quot;,
    },
    [&quot;AUtbsp&quot;] = {
	name1    = &quot;Australian tablespoon&quot;,
	symbol   = &quot;AU&amp;nbsp;tbsp&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000020,
	default  = &quot;ml&quot;,
    },
    [&quot;bdft&quot;] = {
	name1    = &quot;board foot&quot;,
	name2    = &quot;board feet&quot;,
	symbol   = &quot;bd&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;board feet&quot;] = {
	name2    = &quot;board feet&quot;,
	symbol   = &quot;board foot&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;board foot&quot;] = {
	name2    = &quot;board foot&quot;,
	symbol   = &quot;board foot&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.0023597372167,
	default  = &quot;m3&quot;,
    },
    [&quot;cc&quot;] = {
	name1    = &quot;cubic centimetre&quot;,
	name1_us = &quot;cubic centimeter&quot;,
	symbol   = &quot;cc&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000001,
	default  = &quot;cuin&quot;,
    },
    [&quot;CID&quot;] = {
	name1    = &quot;cubic inch&quot;,
	name2    = &quot;cubic inches&quot;,
	symbol   = &quot;cu&amp;nbsp;in&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000016387064,
	default  = &quot;cc&quot;,
	link     = &quot;Cubic inch#Engine displacement&quot;,
    },
    [&quot;cord&quot;] = {
	symbol   = &quot;cord&quot;,
	utype    = &quot;volume&quot;,
	scale    = 3.624556363776,
	default  = &quot;m3&quot;,
	link     = &quot;Cord (unit)&quot;,
    },
    [&quot;cufoot&quot;] = {
	name1    = &quot;cubic foot&quot;,
	name2    = &quot;cubic foot&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.028316846592,
	default  = &quot;m3&quot;,
    },
    [&quot;cuft&quot;] = {
	name1    = &quot;cubic foot&quot;,
	name2    = &quot;cubic feet&quot;,
	symbol   = &quot;cu&amp;nbsp;ft&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.028316846592,
	default  = &quot;m3&quot;,
    },
    [&quot;cuin&quot;] = {
	name1    = &quot;cubic inch&quot;,
	name2    = &quot;cubic inches&quot;,
	symbol   = &quot;cu&amp;nbsp;in&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000016387064,
	default  = &quot;cm3&quot;,
    },
    [&quot;cumi&quot;] = {
	name1    = &quot;cubic mile&quot;,
	symbol   = &quot;cu&amp;nbsp;mi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 4168181825.440579584,
	default  = &quot;km3&quot;,
    },
    [&quot;cuyd&quot;] = {
	name1    = &quot;cubic yard&quot;,
	symbol   = &quot;cu&amp;nbsp;yd&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.764554857984,
	default  = &quot;m3&quot;,
    },
    [&quot;firkin&quot;] = {
	symbol   = &quot;firkin&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.04091481,
	default  = &quot;l impgal USgal&quot;,
    },
    [&quot;foot3&quot;] = {
	target   = &quot;cufoot&quot;,
    },
    [&quot;Goilbbl&quot;] = {
	name1    = &quot;billion barrels&quot;,
	name2    = &quot;billion barrels&quot;,
	symbol   = &quot;Gbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987294.928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e6 ! e9 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;gr water&quot;] = {
	name1    = &quot;grains water&quot;,
	name2    = &quot;grains water&quot;,
	symbol   = &quot;gr H&lt;sub&gt;2&lt;/sub&gt;O&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00000006479891,
	default  = &quot;cm3&quot;,
	link     = &quot;Grain (unit)&quot;,
    },
    [&quot;grt&quot;] = {
	name1    = &quot;gross register ton&quot;,
	symbol   = &quot;grt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 2.8316846592,
	default  = &quot;m3&quot;,
	link     = &quot;Gross register tonnage&quot;,
    },
    [&quot;impbbl&quot;] = {
	name1    = &quot;imperial barrel&quot;,
	symbol   = &quot;imp&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.16365924,
	default  = &quot;l impgal USgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;impbsh&quot;] = {
	name1    = &quot;imperial bushel&quot;,
	symbol   = &quot;imp&amp;nbsp;bsh&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03636872,
	default  = &quot;l impgal USdrygal&quot;,
    },
    [&quot;impbu&quot;] = {
	name1    = &quot;imperial bushel&quot;,
	symbol   = &quot;imp&amp;nbsp;bu&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03636872,
	default  = &quot;m3&quot;,
    },
    [&quot;impgal&quot;] = {
	name1    = &quot;imperial gallon&quot;,
	symbol   = &quot;imp&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00454609,
	default  = &quot;l USgal&quot;,
    },
    [&quot;impgi&quot;] = {
	name1    = &quot;gill&quot;,
	symbol   = &quot;gi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0001420653125,
	default  = &quot;ml USoz&quot;,
	link     = &quot;Gill (unit)&quot;,
    },
    [&quot;impkenning&quot;] = {
	name1    = &quot;imperial kenning&quot;,
	symbol   = &quot;kenning&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.01818436,
	default  = &quot;l USdrygal&quot;,
	link     = &quot;Kenning (unit)&quot;,
    },
    [&quot;impoz&quot;] = {
	name1    = &quot;imperial fluid ounce&quot;,
	symbol   = &quot;imp&amp;nbsp;fl&amp;nbsp;oz&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0000284130625,
	default  = &quot;ml USoz&quot;,
    },
    [&quot;imppk&quot;] = {
	name1    = &quot;imperial peck&quot;,
	symbol   = &quot;pk&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00909218,
	default  = &quot;l USdrygal&quot;,
	link     = &quot;Peck&quot;,
    },
    [&quot;imppt&quot;] = {
	name1    = &quot;imperial pint&quot;,
	symbol   = &quot;imp&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00056826125,
	default  = &quot;l&quot;,
    },
    [&quot;impqt&quot;] = {
	name1    = &quot;imperial quart&quot;,
	symbol   = &quot;imp&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0011365225,
	default  = &quot;ml USoz&quot;,
	customary= 3,
    },
    [&quot;kilderkin&quot;] = {
	symbol   = &quot;kilderkin&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.08182962,
	default  = &quot;l impgal USgal&quot;,
    },
    [&quot;koilbbl&quot;] = {
	name1    = &quot;thousand barrels&quot;,
	name2    = &quot;thousand barrels&quot;,
	symbol   = &quot;kbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158.987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! ! e3 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;L&quot;] = {
	_name1   = &quot;litre&quot;,
	_name1_us= &quot;liter&quot;,
	_symbol  = &quot;L&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;impgal USgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;l&quot;] = {
	_name1   = &quot;litre&quot;,
	_name1_us= &quot;liter&quot;,
	_symbol  = &quot;l&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001,
	prefixes = 1,
	default  = &quot;impgal USgal&quot;,
	link     = &quot;Litre&quot;,
    },
    [&quot;m3&quot;] = {
	_name1   = &quot;cubic metre&quot;,
	_name1_us= &quot;cubic meter&quot;,
	_symbol  = &quot;m&lt;sup&gt;3&lt;/sup&gt;&quot;,
	prefix_position= 7,
	utype    = &quot;volume&quot;,
	scale    = 1,
	prefixes = 3,
	default  = &quot;cuft&quot;,
	link     = &quot;Cubic metre&quot;,
    },
    [&quot;Mbbl&quot;] = {
	name1    = &quot;thousand barrels&quot;,
	name2    = &quot;thousand barrels&quot;,
	symbol   = &quot;Mbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158.987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;MMoilbbl&quot;] = {
	name1    = &quot;million barrels&quot;,
	name2    = &quot;million barrels&quot;,
	symbol   = &quot;MMbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987.294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;Moilbbl&quot;] = {
	name1    = &quot;million barrels&quot;,
	name2    = &quot;million barrels&quot;,
	symbol   = &quot;Mbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987.294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e3 ! e6 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;MTON&quot;] = {
	name1    = &quot;measurement ton&quot;,
	symbol   = &quot;MTON&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1.13267386368,
	default  = &quot;m3&quot;,
    },
    [&quot;MUSgal&quot;] = {
	name1    = &quot;million US gallons&quot;,
	name1_us = &quot;million U.S. gallons&quot;,
	name2    = &quot;million US gallons&quot;,
	name2_us = &quot;million U.S. gallons&quot;,
	symbol   = &quot;million US&amp;nbsp;gal&quot;,
	sym_us   = &quot;million U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 3785.411784,
	default  = &quot;Ml&quot;,
	link     = &quot;US gallon&quot;,
    },
    [&quot;oilbbl&quot;] = {
	name1    = &quot;barrel&quot;,
	symbol   = &quot;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.158987294928,
	default  = &quot;m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;stere&quot;] = {
	symbol   = &quot;stre&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 1,
	default  = &quot;cuft&quot;,
    },
    [&quot;Toilbbl&quot;] = {
	name1    = &quot;trillion barrels&quot;,
	name2    = &quot;trillion barrels&quot;,
	symbol   = &quot;Tbbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 158987294928,
	default  = &quot;v * 1.58987294928 &lt; 10 ! e9 ! e12 ! m3&quot;,
	link     = &quot;Barrel (unit)#Oil barrel&quot;,
    },
    [&quot;USbbl&quot;] = {
	name1    = &quot;US barrel&quot;,
	name1_us = &quot;U.S. barrel&quot;,
	symbol   = &quot;US&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.119240471196,
	default  = &quot;l USgal impgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USbeerbbl&quot;] = {
	name1    = &quot;US beer barrel&quot;,
	name1_us = &quot;U.S. beer barrel&quot;,
	symbol   = &quot;US&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.117347765304,
	default  = &quot;l USgal impgal&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USbsh&quot;] = {
	name1    = &quot;US bushel&quot;,
	name1_us = &quot;U.S. bushel&quot;,
	symbol   = &quot;US&amp;nbsp;bsh&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bsh&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03523907016688,
	default  = &quot;l USdrygal impgal&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USbu&quot;] = {
	name1    = &quot;US bushel&quot;,
	name1_us = &quot;U.S. bushel&quot;,
	symbol   = &quot;US&amp;nbsp;bu&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;bu&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.03523907016688,
	default  = &quot;l USdrygal impgal&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USdrybbl&quot;] = {
	name1    = &quot;US dry barrel&quot;,
	name1_us = &quot;U.S. dry barrel&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;bbl&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;bbl&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.11562819898508,
	default  = &quot;m3&quot;,
	link     = &quot;Barrel (unit)&quot;,
    },
    [&quot;USdrygal&quot;] = {
	name1    = &quot;US dry gallon&quot;,
	name1_us = &quot;U.S. dry gallon&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00440488377086,
	default  = &quot;l&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USdrypt&quot;] = {
	name1    = &quot;US dry pint&quot;,
	name1_us = &quot;U.S. dry pint&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;pt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0005506104713575,
	default  = &quot;ml&quot;,
	link     = &quot;Pint&quot;,
    },
    [&quot;USdryqt&quot;] = {
	name1    = &quot;US dry quart&quot;,
	name1_us = &quot;U.S. dry quart&quot;,
	symbol   = &quot;US&amp;nbsp;dry&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;dry&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.001101220942715,
	default  = &quot;ml&quot;,
	link     = &quot;Quart&quot;,
    },
    [&quot;USflgal&quot;] = {
	name1    = &quot;US gallon&quot;,
	name1_us = &quot;U.S. gallon&quot;,
	symbol   = &quot;US fl gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;fl&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.003785411784,
	default  = &quot;l impgal&quot;,
	link     = &quot;Gallon&quot;,
    },
    [&quot;USgal&quot;] = {
	name1    = &quot;US gallon&quot;,
	name1_us = &quot;U.S. gallon&quot;,
	symbol   = &quot;US&amp;nbsp;gal&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;gal&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.003785411784,
	default  = &quot;l impgal&quot;,
    },
    [&quot;USgi&quot;] = {
	name1    = &quot;gill&quot;,
	symbol   = &quot;gi&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0001182941183,
	default  = &quot;ml impoz&quot;,
	link     = &quot;Gill (unit)&quot;,
    },
    [&quot;USkenning&quot;] = {
	name1    = &quot;US kenning&quot;,
	name1_us = &quot;U.S. kenning&quot;,
	symbol   = &quot;US&amp;nbsp;kenning&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;kenning&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.01761953508344,
	default  = &quot;l impgal&quot;,
	link     = &quot;Kenning (unit)&quot;,
    },
    [&quot;USmin&quot;] = {
	name1    = &quot;US minim&quot;,
	name1_us = &quot;U.S. minim&quot;,
	symbol   = &quot;US&amp;nbsp;min&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;min&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000000061611519921875,
	default  = &quot;ml&quot;,
	link     = &quot;Minim (unit)&quot;,
    },
    [&quot;USoz&quot;] = {
	name1    = &quot;US fluid ounce&quot;,
	name1_us = &quot;U.S. fluid ounce&quot;,
	symbol   = &quot;US&amp;nbsp;fl&amp;nbsp;oz&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;fl&amp;nbsp;oz&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.0000295735295625,
	default  = &quot;ml&quot;,
    },
    [&quot;USpk&quot;] = {
	name1    = &quot;US peck&quot;,
	name1_us = &quot;U.S. peck&quot;,
	symbol   = &quot;US&amp;nbsp;pk&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;pk&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.00880976754172,
	default  = &quot;l impgal&quot;,
	link     = &quot;Peck&quot;,
    },
    [&quot;USpt&quot;] = {
	name1    = &quot;US pint&quot;,
	name1_us = &quot;U.S. pint&quot;,
	symbol   = &quot;US&amp;nbsp;pt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;pt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000473176473,
	default  = &quot;l imppt&quot;,
	link     = &quot;Pint&quot;,
    },
    [&quot;USqt&quot;] = {
	name1    = &quot;US quart&quot;,
	name1_us = &quot;U.S. quart&quot;,
	symbol   = &quot;US&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000946352946,
	default  = &quot;ml&quot;,
	link     = &quot;Quart&quot;,
	customary= 1,
    },
    [&quot;USquart&quot;] = {
	name1    = &quot;US quart&quot;,
	name1_us = &quot;U.S. quart&quot;,
	symbol   = &quot;US&amp;nbsp;qt&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;qt&quot;,
	utype    = &quot;volume&quot;,
	scale    = 0.000946352946,
	default  = &quot;ml impoz&quot;,
	link     = &quot;Quart&quot;,
    },
    [&quot;UStbsp&quot;] = {
	name1    = &quot;US tablespoon&quot;,
	name1_us = &quot;U.S. tablespoon&quot;,
	symbol   = &quot;US&amp;nbsp;tbsp&quot;,
	sym_us   = &quot;U.S.&amp;nbsp;tbsp&quot;,
	utype    = &quot;volume&quot;,
	scale    = 1.4786764781250001e-5,
	default  = &quot;ml&quot;,
    },
    [&quot;winecase&quot;] = {
	symbol   = &quot;case&quot;,
	usename  = 1,
	utype    = &quot;volume&quot;,
	scale    = 0.009,
	default  = &quot;l&quot;,
	link     = &quot;Case (goods)&quot;,
    },
    [&quot;*U.S.drygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	sp_us    = true,
	customary= 2,
    },
    [&quot;*U.S.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	customary= 2,
    },
    [&quot;+USdrygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	customary= 1,
    },
    [&quot;+usfloz&quot;] = {
	target   = &quot;USoz&quot;,
	link     = &quot;Fluid ounce&quot;,
	customary= 1,
    },
    [&quot;+USgal&quot;] = {
	target   = &quot;USgal&quot;,
	customary= 1,
    },
    [&quot;+USoz&quot;] = {
	target   = &quot;USoz&quot;,
	customary= 1,
    },
    [&quot;@impgal&quot;] = {
	target   = &quot;impgal&quot;,
	link     = &quot;Gallon&quot;,
	customary= 3,
    },
    [&quot;acre feet&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre-feet&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre-ft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acre.foot&quot;] = {
	target   = &quot;acre foot&quot;,
    },
    [&quot;acre.ft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;acrefoot&quot;] = {
	target   = &quot;acre foot&quot;,
    },
    [&quot;acreft&quot;] = {
	target   = &quot;acre ft&quot;,
    },
    [&quot;bushels&quot;] = {
	target   = &quot;USbsh&quot;,
    },
    [&quot;cid&quot;] = {
	target   = &quot;CID&quot;,
    },
    [&quot;ft3&quot;] = {
	target   = &quot;cuft&quot;,
    },
    [&quot;gal&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;gallon&quot;] = {
	shouldbe = &quot;Use %{USgal%} for US gallons or %{impgal%} for imperial gallons (not %{gallon%})&quot;,
    },
    [&quot;gallons&quot;] = {
	shouldbe = &quot;Use %{USgal%} for US gallons or %{impgal%} for imperial gallons (not %{gallons%})&quot;,
    },
    [&quot;Gcuft&quot;] = {
	target   = &quot;e9cuft&quot;,
    },
    [&quot;impfloz&quot;] = {
	target   = &quot;impoz&quot;,
    },
    [&quot;Impgal&quot;] = {
	target   = &quot;impgal&quot;,
    },
    [&quot;in3&quot;] = {
	target   = &quot;cuin&quot;,
	symbol   = &quot;in&lt;sup&gt;3&lt;/sup&gt;&quot;,
    },
    [&quot;kcuft&quot;] = {
	target   = &quot;e3cuft&quot;,
    },
    [&quot;kcum&quot;] = {
	target   = &quot;e3m3&quot;,
    },
    [&quot;km&quot;] = {
	target   = &quot;km3&quot;,
    },
    [&quot;liter&quot;] = {
	target   = &quot;L&quot;,
	sp_us    = true,
    },
    [&quot;liters&quot;] = {
	target   = &quot;L&quot;,
	sp_us    = true,
    },
    [&quot;litre&quot;] = {
	target   = &quot;L&quot;,
    },
    [&quot;litres&quot;] = {
	target   = &quot;L&quot;,
    },
    [&quot;Mcuft&quot;] = {
	target   = &quot;e6cuft&quot;,
    },
    [&quot;Mcum&quot;] = {
	target   = &quot;e6m3&quot;,
    },
    [&quot;Mft3&quot;] = {
	target   = &quot;e6cuft&quot;,
    },
    [&quot;mi3&quot;] = {
	target   = &quot;cumi&quot;,
    },
    [&quot;m&quot;] = {
	target   = &quot;m3&quot;,
    },
    [&quot;Pcuft&quot;] = {
	target   = &quot;e15cuft&quot;,
    },
    [&quot;pt&quot;] = {
	shouldbe = &quot;Use %{USpt%} for US pints or %{imppt%} for imperial pints (not %{pt%})&quot;,
    },
    [&quot;qt&quot;] = {
	shouldbe = &quot;Use %{USqt%} for US quarts or %{impqt%} for imperial quarts (not %{qt%})&quot;,
    },
    [&quot;Tcuft&quot;] = {
	target   = &quot;e12cuft&quot;,
    },
    [&quot;Tft3&quot;] = {
	target   = &quot;e12cuft&quot;,
    },
    [&quot;U.S.bbl&quot;] = {
	target   = &quot;USbbl&quot;,
	sp_us    = true,
	default  = &quot;l U.S.gal impgal&quot;,
    },
    [&quot;U.S.beerbbl&quot;] = {
	target   = &quot;USbeerbbl&quot;,
	sp_us    = true,
	default  = &quot;l U.S.gal impgal&quot;,
    },
    [&quot;U.S.bsh&quot;] = {
	target   = &quot;USbsh&quot;,
	sp_us    = true,
	default  = &quot;l U.S.drygal impgal&quot;,
    },
    [&quot;U.S.bu&quot;] = {
	target   = &quot;USbu&quot;,
	sp_us    = true,
	default  = &quot;l U.S.drygal impgal&quot;,
    },
    [&quot;U.S.drybbl&quot;] = {
	target   = &quot;USdrybbl&quot;,
	sp_us    = true,
    },
    [&quot;U.S.drygal&quot;] = {
	target   = &quot;USdrygal&quot;,
	sp_us    = true,
    },
    [&quot;U.S.drypt&quot;] = {
	target   = &quot;USdrypt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.dryqt&quot;] = {
	target   = &quot;USdryqt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.flgal&quot;] = {
	target   = &quot;USflgal&quot;,
	sp_us    = true,
    },
    [&quot;U.S.floz&quot;] = {
	target   = &quot;USoz&quot;,
	sp_us    = true,
    },
    [&quot;U.S.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	link     = &quot;U.S. gallon&quot;,
    },
    [&quot;u.s.gal&quot;] = {
	target   = &quot;USgal&quot;,
	sp_us    = true,
	default  = &quot;L impgal&quot;,
	link     = &quot;U.S. gallon&quot;,
    },
    [&quot;U.S.gi&quot;] = {
	target   = &quot;USgi&quot;,
	sp_us    = true,
    },
    [&quot;U.S.kenning&quot;] = {
	target   = &quot;USkenning&quot;,
	sp_us    = true,
    },
    [&quot;U.S.oz&quot;] = {
	target   = &quot;USoz&quot;,
	sp_us    = true,
    },
    [&quot;U.S.pk&quot;] = {
	target   = &quot;USpk&quot;,
	sp_us    = true,
    },
    [&quot;U.S.pt&quot;] = {
	target   = &quot;USpt&quot;,
	sp_us    = true,
    },
    [&quot;U.S.qt&quot;] = {
	target   = &quot;USqt&quot;,
	sp_us    = true,
	default  = &quot;L impqt&quot;,
	customary= 2,
    },
    [&quot;usbbl&quot;] = {
	target   = &quot;USbbl&quot;,
    },
    [&quot;usbeerbbl&quot;] = {
	target   = &quot;USbeerbbl&quot;,
    },
    [&quot;usbsh&quot;] = {
	target   = &quot;USbsh&quot;,
    },
    [&quot;usbu&quot;] = {
	target   = &quot;USbu&quot;,
    },
    [&quot;usdrybbl&quot;] = {
	target   = &quot;USdrybbl&quot;,
    },
    [&quot;usdrygal&quot;] = {
	target   = &quot;USdrygal&quot;,
    },
    [&quot;usdrypt&quot;] = {
	target   = &quot;USdrypt&quot;,
    },
    [&quot;usdryqt&quot;] = {
	target   = &quot;USdryqt&quot;,
    },
    [&quot;USfloz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;usfloz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;USGAL&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;usgal&quot;] = {
	target   = &quot;USgal&quot;,
    },
    [&quot;usgi&quot;] = {
	target   = &quot;USgi&quot;,
    },
    [&quot;uskenning&quot;] = {
	target   = &quot;USkenning&quot;,
    },
    [&quot;usoz&quot;] = {
	target   = &quot;USoz&quot;,
    },
    [&quot;uspk&quot;] = {
	target   = &quot;USpk&quot;,
    },
    [&quot;uspt&quot;] = {
	target   = &quot;USpt&quot;,
    },
    [&quot;usqt&quot;] = {
	target   = &quot;USqt&quot;,
    },
    [&quot;yd3&quot;] = {
	target   = &quot;cuyd&quot;,
    },
    [&quot;cuft/sqmi&quot;] = {
	per      = { &quot;cuft&quot;, &quot;sqmi&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;m3/ha&quot;] = {
	name1    = &quot;cubic metre per hectare&quot;,
	name1_us = &quot;cubic meter per hectare&quot;,
	name2    = &quot;cubic metres per hectare&quot;,
	name2_us = &quot;cubic meters per hectare&quot;,
	symbol   = &quot;m&lt;sup&gt;3&lt;/sup&gt;/ha&quot;,
	utype    = &quot;volume per unit area&quot;,
	scale    = 0.0001,
	default  = &quot;USbu/acre&quot;,
	link     = &quot;Hectare&quot;,
    },
    [&quot;m3/km2&quot;] = {
	per      = { &quot;m3&quot;, &quot;km2&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;cuft/sqmi&quot;,
    },
    [&quot;U.S.gal/acre&quot;] = {
	per      = { &quot;U.S.gal&quot;, &quot;acre&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;USbu/acre&quot;] = {
	name2    = &quot;US bushels per acre&quot;,
	symbol   = &quot;US bushel per acre&quot;,
	usename  = 1,
	utype    = &quot;volume per unit area&quot;,
	scale    = 8.7077638761350888e-6,
	default  = &quot;m3/ha&quot;,
	link     = &quot;Bushel&quot;,
    },
    [&quot;USgal/acre&quot;] = {
	per      = { &quot;USgal&quot;, &quot;acre&quot; },
	utype    = &quot;volume per unit area&quot;,
	default  = &quot;m3/km2&quot;,
    },
    [&quot;cuyd/mi&quot;] = {
	per      = { &quot;cuyd&quot;, &quot;mi&quot; },
	utype    = &quot;volume per unit length&quot;,
	default  = &quot;m3/km&quot;,
    },
    [&quot;m3/km&quot;] = {
	per      = { &quot;m3&quot;, &quot;km&quot; },
	utype    = &quot;volume per unit length&quot;,
	default  = &quot;cuyd/mi&quot;,
    },
    [&quot;mich&quot;] = {
	combination= { &quot;ch&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;michlk&quot;] = {
	combination= { &quot;chlk&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;michainlk&quot;] = {
	combination= { &quot;chainlk&quot;, &quot;mi&quot; },
	multiple = { 80 },
	utype    = &quot;length&quot;,
    },
    [&quot;miydftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot;, &quot;yd&quot;, &quot;mi&quot; },
	multiple = { 12, 3, 1760 },
	utype    = &quot;length&quot;,
    },
    [&quot;mift&quot;] = {
	combination= { &quot;ft&quot;, &quot;mi&quot; },
	multiple = { 5280 },
	utype    = &quot;length&quot;,
    },
    [&quot;ydftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot;, &quot;yd&quot; },
	multiple = { 12, 3 },
	utype    = &quot;length&quot;,
    },
    [&quot;ydft&quot;] = {
	combination= { &quot;ft&quot;, &quot;yd&quot; },
	multiple = { 3 },
	utype    = &quot;length&quot;,
    },
    [&quot;ftin&quot;] = {
	combination= { &quot;in&quot;, &quot;ft&quot; },
	multiple = { 12 },
	utype    = &quot;length&quot;,
    },
    [&quot;footin&quot;] = {
	combination= { &quot;in&quot;, &quot;foot&quot; },
	multiple = { 12 },
	utype    = &quot;length&quot;,
    },
    [&quot;handin&quot;] = {
	combination= { &quot;in&quot;, &quot;hand&quot; },
	multiple = { 4 },
	utype    = &quot;length&quot;,
    },
    [&quot;lboz&quot;] = {
	combination= { &quot;oz&quot;, &quot;lb&quot; },
	multiple = { 16 },
	utype    = &quot;mass&quot;,
    },
    [&quot;stlb&quot;] = {
	combination= { &quot;lb&quot;, &quot;st&quot; },
	multiple = { 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;stlboz&quot;] = {
	combination= { &quot;oz&quot;, &quot;lb&quot;, &quot;st&quot; },
	multiple = { 16, 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;st and lb&quot;] = {
	combination= { &quot;lb&quot;, &quot;st&quot; },
	multiple = { 14 },
	utype    = &quot;mass&quot;,
    },
    [&quot;GN LTf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN LTf STf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN STf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;GN STf LTf&quot;] = {
	combination= { &quot;GN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN LTf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN LTf STf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN STf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;kN STf LTf&quot;] = {
	combination= { &quot;kN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;LTf STf&quot;] = {
	combination= { &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN LTf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN LTf STf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-LTf&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN STf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-STf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;MN STf LTf&quot;] = {
	combination= { &quot;MN&quot;, &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;STf LTf&quot;] = {
	combination= { &quot;-STf&quot;, &quot;-LTf&quot; },
	utype    = &quot;force&quot;,
    },
    [&quot;L/100 km mpgimp&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgimp&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;l/100 km mpgimp&quot;] = {
	combination= { &quot;l/100 km&quot;, &quot;mpgimp&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;L/100 km mpgUS&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;L/100 km mpgus&quot;] = {
	combination= { &quot;L/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;l/100 km mpgus&quot;] = {
	combination= { &quot;l/100 km&quot;, &quot;mpgus&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;mpgimp L/100 km&quot;] = {
	combination= { &quot;mpgimp&quot;, &quot;L/100 km&quot; },
	utype    = &quot;fuel efficiency&quot;,
    },
    [&quot;LT ST t&quot;] = {
	combination= { &quot;lt&quot;, &quot;-ST&quot;, &quot;t&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;LT t ST&quot;] = {
	combination= { &quot;lt&quot;, &quot;t&quot;, &quot;-ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ST LT t&quot;] = {
	combination= { &quot;-ST&quot;, &quot;lt&quot;, &quot;t&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ST t LT&quot;] = {
	combination= { &quot;-ST&quot;, &quot;t&quot;, &quot;lt&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;t LT ST&quot;] = {
	combination= { &quot;t&quot;, &quot;lt&quot;, &quot;-ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;ton&quot;] = {
	combination= { &quot;LT&quot;, &quot;ST&quot; },
	utype    = &quot;mass&quot;,
    },
    [&quot;kPa kg/cm2&quot;] = {
	combination= { &quot;kPa&quot;, &quot;kgf/cm2&quot; },
	utype    = &quot;pressure&quot;,
    },
    [&quot;kPa lb/in2&quot;] = {
	combination= { &quot;kPa&quot;, &quot;-lb/in2&quot; },
	utype    = &quot;pressure&quot;,
    },
    [&quot;floz&quot;] = {
	combination= { &quot;impoz&quot;, &quot;USoz&quot; },
	utype    = &quot;volume&quot;,
    },
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local default_exceptions = {
	-- Prefixed units with a default different from that of the base unit.
	-- Each key item is a prefixed symbol (unitcode for engineering notation).
	[&quot;cm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;dm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;e3acre&quot;] = &quot;km2&quot;,
	[&quot;e3m2&quot;] = &quot;e6sqft&quot;,
	[&quot;e6acre&quot;] = &quot;km2&quot;,
	[&quot;e6ha&quot;] = &quot;e6acre&quot;,
	[&quot;e6km2&quot;] = &quot;e6sqmi&quot;,
	[&quot;e6m2&quot;] = &quot;e6sqft&quot;,
	[&quot;e6sqft&quot;] = &quot;v * 9.290304 &lt; 100 ! e3 ! e6 ! m2&quot;,
	[&quot;e6sqmi&quot;] = &quot;e6km2&quot;,
	[&quot;hm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;acre&quot;,
	[&quot;km&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqmi&quot;,
	[&quot;mm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;sqin&quot;,
	[&quot;aJ&quot;] = &quot;eV&quot;,
	[&quot;e3BTU&quot;] = &quot;MJ&quot;,
	[&quot;e6BTU&quot;] = &quot;GJ&quot;,
	[&quot;EJ&quot;] = &quot;kWh&quot;,
	[&quot;fJ&quot;] = &quot;keV&quot;,
	[&quot;GJ&quot;] = &quot;kWh&quot;,
	[&quot;MJ&quot;] = &quot;kWh&quot;,
	[&quot;PJ&quot;] = &quot;kWh&quot;,
	[&quot;pJ&quot;] = &quot;MeV&quot;,
	[&quot;TJ&quot;] = &quot;kWh&quot;,
	[&quot;YJ&quot;] = &quot;kWh&quot;,
	[&quot;yJ&quot;] = &quot;eV&quot;,
	[&quot;ZJ&quot;] = &quot;kWh&quot;,
	[&quot;zJ&quot;] = &quot;meV&quot;,
	[&quot;e12cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3/a&quot;,
	[&quot;e12cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3/d&quot;,
	[&quot;e12m3/a&quot;] = &quot;Tcuft/a&quot;,
	[&quot;e12m3/d&quot;] = &quot;Tcuft/d&quot;,
	[&quot;e3cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/a&quot;,
	[&quot;e3cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/d&quot;,
	[&quot;e3cuft/s&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3/s&quot;,
	[&quot;e3m3/a&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/a&quot;,
	[&quot;e3m3/d&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/d&quot;,
	[&quot;e3m3/s&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft/s&quot;,
	[&quot;e3USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! ! e3 ! m3/a&quot;,
	[&quot;e6cuft/a&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/a&quot;,
	[&quot;e6cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/d&quot;,
	[&quot;e6cuft/s&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3/s&quot;,
	[&quot;e6m3/a&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft/a&quot;,
	[&quot;e6m3/d&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft/d&quot;,
	[&quot;e6m3/s&quot;] = &quot;v &lt; 28.316846592 ! e6 ! e9 ! cuft/s&quot;,
	[&quot;e6USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e3 ! e6 ! m3/a&quot;,
	[&quot;e9cuft/a&quot;] = &quot;m3/a&quot;,
	[&quot;e9cuft/d&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e6 ! e9 ! m3/d&quot;,
	[&quot;e9m3/a&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft/a&quot;,
	[&quot;e9m3/d&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft/d&quot;,
	[&quot;e9m3/s&quot;] = &quot;v &lt; 28.316846592 ! e9 ! e12 ! cuft/s&quot;,
	[&quot;e9USgal/a&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e6 ! e9 ! m3/a&quot;,
	[&quot;e9USgal/s&quot;] = &quot;v * 3.785411784 &lt; 1000 ! e6 ! e9 ! m3/s&quot;,
	[&quot;nN&quot;] = &quot;gr-f&quot;,
	[&quot;N&quot;] = &quot;gr-f&quot;,
	[&quot;mN&quot;] = &quot;oz-f&quot;,
	[&quot;am&quot;] = &quot;in&quot;,
	[&quot;cm&quot;] = &quot;in&quot;,
	[&quot;dam&quot;] = &quot;ft&quot;,
	[&quot;dm&quot;] = &quot;in&quot;,
	[&quot;e12km&quot;] = &quot;e12mi&quot;,
	[&quot;e12mi&quot;] = &quot;e12km&quot;,
	[&quot;e3AU&quot;] = &quot;ly&quot;,
	[&quot;e3km&quot;] = &quot;e3mi&quot;,
	[&quot;e3mi&quot;] = &quot;e3km&quot;,
	[&quot;e6km&quot;] = &quot;e6mi&quot;,
	[&quot;e6mi&quot;] = &quot;e6km&quot;,
	[&quot;e9km&quot;] = &quot;AU&quot;,
	[&quot;e9mi&quot;] = &quot;e9km&quot;,
	[&quot;Em&quot;] = &quot;mi&quot;,
	[&quot;fm&quot;] = &quot;in&quot;,
	[&quot;Gm&quot;] = &quot;mi&quot;,
	[&quot;hm&quot;] = &quot;ft&quot;,
	[&quot;km&quot;] = &quot;mi&quot;,
	[&quot;mm&quot;] = &quot;in&quot;,
	[&quot;Mm&quot;] = &quot;mi&quot;,
	[&quot;nm&quot;] = &quot;in&quot;,
	[&quot;Pm&quot;] = &quot;mi&quot;,
	[&quot;pm&quot;] = &quot;in&quot;,
	[&quot;Tm&quot;] = &quot;mi&quot;,
	[&quot;Ym&quot;] = &quot;mi&quot;,
	[&quot;ym&quot;] = &quot;in&quot;,
	[&quot;Zm&quot;] = &quot;mi&quot;,
	[&quot;zm&quot;] = &quot;in&quot;,
	[&quot;m&quot;] = &quot;in&quot;,
	[&quot;e12lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! Mt ! Gt&quot;,
	[&quot;e3lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! kg ! t&quot;,
	[&quot;e3ozt&quot;] = &quot;v * 0.311034768 &lt; 10 ! kg ! t&quot;,
	[&quot;e3t&quot;] = &quot;LT ST&quot;,
	[&quot;e6carat&quot;] = &quot;t&quot;,
	[&quot;e6lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! t ! kilotonne&quot;,
	[&quot;e6ozt&quot;] = &quot;lb kg&quot;,
	[&quot;e6ST&quot;] = &quot;Mt&quot;,
	[&quot;e6t&quot;] = &quot;LT ST&quot;,
	[&quot;e9lb&quot;] = &quot;v * 4.5359237 &lt; 10 ! kilotonne ! Mt&quot;,
	[&quot;e9t&quot;] = &quot;LT ST&quot;,
	[&quot;Gg&quot;] = &quot;lb&quot;,
	[&quot;kg&quot;] = &quot;lb&quot;,
	[&quot;mg&quot;] = &quot;gr&quot;,
	[&quot;Mg&quot;] = &quot;LT ST&quot;,
	[&quot;ng&quot;] = &quot;gr&quot;,
	[&quot;g&quot;] = &quot;gr&quot;,
	[&quot;mBq&quot;] = &quot;fCi&quot;,
	[&quot;kBq&quot;] = &quot;nCi&quot;,
	[&quot;MBq&quot;] = &quot;Ci&quot;,
	[&quot;GBq&quot;] = &quot;mCi&quot;,
	[&quot;TBq&quot;] = &quot;Ci&quot;,
	[&quot;PBq&quot;] = &quot;kCi&quot;,
	[&quot;EBq&quot;] = &quot;kCi&quot;,
	[&quot;fCi&quot;] = &quot;mBq&quot;,
	[&quot;pCi&quot;] = &quot;Bq&quot;,
	[&quot;nCi&quot;] = &quot;Bq&quot;,
	[&quot;Ci&quot;] = &quot;kBq&quot;,
	[&quot;mCi&quot;] = &quot;MBq&quot;,
	[&quot;kCi&quot;] = &quot;TBq&quot;,
	[&quot;MCi&quot;] = &quot;PBq&quot;,
	[&quot;ns&quot;] = &quot;s&quot;,
	[&quot;s&quot;] = &quot;ms&quot;,
	[&quot;ms&quot;] = &quot;s&quot;,
	[&quot;ks&quot;] = &quot;h&quot;,
	[&quot;Ms&quot;] = &quot;week&quot;,
	[&quot;Gs&quot;] = &quot;decade&quot;,
	[&quot;Ts&quot;] = &quot;millennium&quot;,
	[&quot;Ps&quot;] = &quot;million year&quot;,
	[&quot;Es&quot;] = &quot;thousand million year&quot;,
	[&quot;MK&quot;] = &quot;keVT&quot;,
	[&quot;cL&quot;] = &quot;impoz usoz&quot;,
	[&quot;cl&quot;] = &quot;impoz usoz&quot;,
	[&quot;cm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;dL&quot;] = &quot;impoz usoz&quot;,
	[&quot;dl&quot;] = &quot;impoz usoz&quot;,
	[&quot;mm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;dm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cuin&quot;,
	[&quot;e12cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e9 ! e12 ! m3&quot;,
	[&quot;e12impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e12m3&quot;] = &quot;v &lt; 28.316846592 ! T ! P ! cuft&quot;,
	[&quot;e12U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e12USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! T ! P ! l&quot;,
	[&quot;e15cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e12 ! e15 ! m3&quot;,
	[&quot;e15m3&quot;] = &quot;Pcuft&quot;,
	[&quot;e3bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e3cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! ! e3 ! m3&quot;,
	[&quot;e3impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e3m3&quot;] = &quot;v &lt; 28.316846592 ! k ! M ! cuft&quot;,
	[&quot;e3U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e3USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! k ! M ! l&quot;,
	[&quot;e6bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e6cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e3 ! e6 ! m3&quot;,
	[&quot;e6cuyd&quot;] = &quot;v * 7.64554857984 &lt; 10 ! e3 ! e6 ! m3&quot;,
	[&quot;e6impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e6L&quot;] = &quot;USgal&quot;,
	[&quot;e6m3&quot;] = &quot;v &lt; 28.316846592 ! M ! G ! cuft&quot;,
	[&quot;e6U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e6USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! M ! G ! l&quot;,
	[&quot;e9bdft&quot;] = &quot;v * 0.23597372167 &lt; 100 ! e6 ! e9 ! m3&quot;,
	[&quot;e9cuft&quot;] = &quot;v * 2.8316846592 &lt; 100 ! e6 ! e9 ! m3&quot;,
	[&quot;e9impgal&quot;] = &quot;v * 4.54609 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;e9m3&quot;] = &quot;v &lt; 28.316846592 ! G ! T ! cuft&quot;,
	[&quot;e9U.S.gal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;e9USgal&quot;] = &quot;v * 3.785411784 &lt; 1000 ! G ! T ! l&quot;,
	[&quot;GL&quot;] = &quot;cuft&quot;,
	[&quot;Gl&quot;] = &quot;cuft&quot;,
	[&quot;kL&quot;] = &quot;cuft&quot;,
	[&quot;kl&quot;] = &quot;cuft&quot;,
	[&quot;km&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;cumi&quot;,
	[&quot;mL&quot;] = &quot;impoz usoz&quot;,
	[&quot;ml&quot;] = &quot;impoz usoz&quot;,
	[&quot;Ml&quot;] = &quot;v &lt; 28.316846592 ! e3 ! e6 ! cuft&quot;,
	[&quot;ML&quot;] = &quot;v &lt; 28.316846592 ! e3 ! e6 ! cuft&quot;,
	[&quot;TL&quot;] = &quot;cumi&quot;,
	[&quot;Tl&quot;] = &quot;cumi&quot;,
	[&quot;L&quot;] = &quot;cuin&quot;,
	[&quot;l&quot;] = &quot;cuin&quot;,
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local link_exceptions = {
	-- Prefixed units with a linked article different from that of the base unit.
	-- Each key item is a prefixed symbol (not unitcode).
	[&quot;mm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square millimetre&quot;,
	[&quot;cm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square centimetre&quot;,
	[&quot;dm&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square decimetre&quot;,
	[&quot;km&lt;sup&gt;2&lt;/sup&gt;&quot;] = &quot;Square kilometre&quot;,
	[&quot;kJ&quot;] = &quot;Kilojoule&quot;,
	[&quot;MJ&quot;] = &quot;Megajoule&quot;,
	[&quot;fm&quot;] = &quot;Femtometre&quot;,
	[&quot;pm&quot;] = &quot;Picometre&quot;,
	[&quot;nm&quot;] = &quot;Nanometre&quot;,
	[&quot;m&quot;] = &quot;Micrometre&quot;,
	[&quot;mm&quot;] = &quot;Millimetre&quot;,
	[&quot;cm&quot;] = &quot;Centimetre&quot;,
	[&quot;dm&quot;] = &quot;Decimetre&quot;,
	[&quot;dam&quot;] = &quot;Decametre&quot;,
	[&quot;hm&quot;] = &quot;Hectometre&quot;,
	[&quot;km&quot;] = &quot;Kilometre&quot;,
	[&quot;Mm&quot;] = &quot;Megametre&quot;,
	[&quot;Gm&quot;] = &quot;Gigametre&quot;,
	[&quot;Tm&quot;] = &quot;Terametre&quot;,
	[&quot;Pm&quot;] = &quot;Petametre&quot;,
	[&quot;Em&quot;] = &quot;Exametre&quot;,
	[&quot;Zm&quot;] = &quot;Zettametre&quot;,
	[&quot;Ym&quot;] = &quot;Yottametre&quot;,
	[&quot;g&quot;] = &quot;Microgram&quot;,
	[&quot;mg&quot;] = &quot;Milligram&quot;,
	[&quot;kg&quot;] = &quot;Kilogram&quot;,
	[&quot;Mg&quot;] = &quot;Tonne&quot;,
	[&quot;yW&quot;] = &quot;Yoctowatt&quot;,
	[&quot;zW&quot;] = &quot;Zeptowatt&quot;,
	[&quot;aW&quot;] = &quot;Attowatt&quot;,
	[&quot;fW&quot;] = &quot;Femtowatt&quot;,
	[&quot;pW&quot;] = &quot;Picowatt&quot;,
	[&quot;nW&quot;] = &quot;Nanowatt&quot;,
	[&quot;W&quot;] = &quot;Microwatt&quot;,
	[&quot;mW&quot;] = &quot;Milliwatt&quot;,
	[&quot;kW&quot;] = &quot;Kilowatt&quot;,
	[&quot;MW&quot;] = &quot;Megawatt&quot;,
	[&quot;GW&quot;] = &quot;Gigawatt&quot;,
	[&quot;TW&quot;] = &quot;Terawatt&quot;,
	[&quot;PW&quot;] = &quot;Petawatt&quot;,
	[&quot;EW&quot;] = &quot;Exawatt&quot;,
	[&quot;ZW&quot;] = &quot;Zettawatt&quot;,
	[&quot;YW&quot;] = &quot;Yottawatt&quot;,
	[&quot;as&quot;] = &quot;Attosecond&quot;,
	[&quot;fs&quot;] = &quot;Femtosecond&quot;,
	[&quot;ps&quot;] = &quot;Picosecond&quot;,
	[&quot;ns&quot;] = &quot;Nanosecond&quot;,
	[&quot;s&quot;] = &quot;Microsecond&quot;,
	[&quot;ms&quot;] = &quot;Millisecond&quot;,
	[&quot;ks&quot;] = &quot;Kilosecond&quot;,
	[&quot;Ms&quot;] = &quot;Megasecond&quot;,
	[&quot;Gs&quot;] = &quot;Gigasecond&quot;,
	[&quot;Ts&quot;] = &quot;Terasecond&quot;,
	[&quot;Ps&quot;] = &quot;Petasecond&quot;,
	[&quot;Es&quot;] = &quot;Exasecond&quot;,
	[&quot;Zs&quot;] = &quot;Zettasecond&quot;,
	[&quot;Ys&quot;] = &quot;Yottasecond&quot;,
	[&quot;mm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic millimetre&quot;,
	[&quot;cm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic centimetre&quot;,
	[&quot;dm&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic decimetre&quot;,
	[&quot;dam&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic decametre&quot;,
	[&quot;km&lt;sup&gt;3&lt;/sup&gt;&quot;] = &quot;Cubic kilometre&quot;,
	[&quot;L&quot;] = &quot;Microlitre&quot;,
	[&quot;l&quot;] = &quot;Microlitre&quot;,
	[&quot;mL&quot;] = &quot;Millilitre&quot;,
	[&quot;ml&quot;] = &quot;Millilitre&quot;,
	[&quot;cL&quot;] = &quot;Centilitre&quot;,
	[&quot;cl&quot;] = &quot;Centilitre&quot;,
	[&quot;dL&quot;] = &quot;Decilitre&quot;,
	[&quot;dl&quot;] = &quot;Decilitre&quot;,
	[&quot;daL&quot;] = &quot;Decalitre&quot;,
	[&quot;dal&quot;] = &quot;Decalitre&quot;,
	[&quot;hL&quot;] = &quot;Hectolitre&quot;,
	[&quot;hl&quot;] = &quot;Hectolitre&quot;,
	[&quot;kL&quot;] = &quot;Kilolitre&quot;,
	[&quot;kl&quot;] = &quot;Kilolitre&quot;,
	[&quot;ML&quot;] = &quot;Megalitre&quot;,
	[&quot;Ml&quot;] = &quot;Megalitre&quot;,
	[&quot;GL&quot;] = &quot;Gigalitre&quot;,
	[&quot;Gl&quot;] = &quot;Gigalitre&quot;,
	[&quot;TL&quot;] = &quot;Teralitre&quot;,
	[&quot;Tl&quot;] = &quot;Teralitre&quot;,
	[&quot;PL&quot;] = &quot;Petalitre&quot;,
	[&quot;Pl&quot;] = &quot;Petalitre&quot;,
}

---------------------------------------------------------------------------
-- Do not change the data in this table because it is created by running --
-- a script that reads the wikitext from a wiki page (see note above).   --
---------------------------------------------------------------------------
local per_unit_fixups = {
	-- Automatically created per units of form &quot;x/y&quot; may have their unit type
	-- changed, for example, &quot;length/time&quot; is changed to &quot;speed&quot;.
	-- Other adjustments can also be specified.
	[&quot;$/area&quot;] = &quot;cost $ per unit area&quot;,
	[&quot;$/length&quot;] = &quot;cost $ per unit length&quot;,
	[&quot;$/mass&quot;] = &quot;cost $ per unit mass&quot;,
	[&quot;$/volume&quot;] = &quot;cost $ per unit volume&quot;,
	[&quot;/area&quot;] = &quot;cost  per unit area&quot;,
	[&quot;/area&quot;] = &quot;per unit area&quot;,
	[&quot;/volume&quot;] = &quot;per unit volume&quot;,
	[&quot;area/area&quot;] = &quot;area per unit area&quot;,
	[&quot;energy/length&quot;] = &quot;energy per unit length&quot;,
	[&quot;energy/mass&quot;] = &quot;energy per unit mass&quot;,
	[&quot;energy/time&quot;] = { utype = &quot;power&quot;, link = &quot;Power&quot; },
	[&quot;energy/volume&quot;] = &quot;energy per unit volume&quot;,
	[&quot;force/area&quot;] = { utype = &quot;pressure&quot;, link = &quot;Pressure&quot; },
	[&quot;length/length&quot;] = { utype = &quot;gradient&quot;, link = &quot;Gradient&quot; },
	[&quot;length/time&quot;] = { utype = &quot;speed&quot;, link = &quot;Speed&quot; },
	[&quot;length/time/time&quot;] = { utype = &quot;acceleration&quot;, link = &quot;Acceleration&quot; },
	[&quot;mass/area&quot;] = { utype = &quot;pressure&quot;, multiplier = 9.80665 },
	[&quot;mass/length&quot;] = &quot;linear density&quot;,
	[&quot;mass/mass&quot;] = &quot;concentration&quot;,
	[&quot;mass/power&quot;] = &quot;mass per unit power&quot;,
	[&quot;mass/time&quot;] = &quot;mass per unit time&quot;,
	[&quot;mass/volume&quot;] = { utype = &quot;density&quot;, link = &quot;Density&quot; },
	[&quot;power/mass&quot;] = &quot;power per unit mass&quot;,
	[&quot;power/volume&quot;] = { link = &quot;Power density&quot; },
	[&quot;pressure/length&quot;] = &quot;fracture gradient&quot;,
	[&quot;speed/time&quot;] = { utype = &quot;acceleration&quot;, link = &quot;Acceleration&quot; },
	[&quot;volume/area&quot;] = &quot;volume per unit area&quot;,
	[&quot;volume/length&quot;] = &quot;volume per unit length&quot;,
	[&quot;volume/time&quot;] = &quot;flow&quot;,
}

return {
	all_units = all_units,
	default_exceptions = default_exceptions,
	link_exceptions = link_exceptions,
	per_unit_fixups = per_unit_fixups,
}</text>
      <sha1>cc2q22p013hj8usve1fbpi52s7i88e6</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Convert/text</title>
    <ns>828</ns>
    <id>39508461</id>
    <revision>
      <id>795876380</id>
      <parentid>788386389</parentid>
      <timestamp>2017-08-17T01:39:26Z</timestamp>
      <contributor>
        <username>Johnuniq</username>
        <id>6036800</id>
      </contributor>
      <comment>update from sandbox per [[Template talk:Convert#Module version 19]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="20156">-- Text used by Module:Convert for enwiki.
-- This is a separate module to simplify translation for use on another wiki.
-- See [[:en:Template:Convert/Transwiki guide]] if copying to another wiki.

-- Some units accept an SI prefix before the unit code, such as &quot;kg&quot; for kilogram.
local SIprefixes = {
	-- The prefix field is what the prefix should be, if different from the prefix used.
	['Y'] = { exponent = 24, name = 'yotta',                  },
	['Z'] = { exponent = 21, name = 'zetta',                  },
	['E'] = { exponent = 18, name = 'exa'  ,                  },
	['P'] = { exponent = 15, name = 'peta' ,                  },
	['T'] = { exponent = 12, name = 'tera' ,                  },
	['G'] = { exponent =  9, name = 'giga' ,                  },
	['M'] = { exponent =  6, name = 'mega' ,                  },
	['k'] = { exponent =  3, name = 'kilo' ,                  },
	['h'] = { exponent =  2, name = 'hecto',                  },
	['da']= { exponent =  1, name = 'deca' , name_us = 'deka' },
	['d'] = { exponent = -1, name = 'deci' ,                  },
	['c'] = { exponent = -2, name = 'centi',                  },
	['m'] = { exponent = -3, name = 'milli',                  },
	[''] = { exponent = -6, name = 'micro', prefix = ''     },  -- key = 'GREEK SMALL LETTER MU' (U+03BC) utf-8 CE BC
	[''] = { exponent = -6, name = 'micro',                  },  -- key = 'MICRO SIGN' (U+00B5) utf-8 C2 B5
	['u'] = { exponent = -6, name = 'micro', prefix = ''     },  -- not an SI prefix, but allow for people typing this
	['n'] = { exponent = -9, name = 'nano' ,                  },
	['p'] = { exponent =-12, name = 'pico' ,                  },
	['f'] = { exponent =-15, name = 'femto',                  },
	['a'] = { exponent =-18, name = 'atto' ,                  },
	['z'] = { exponent =-21, name = 'zepto',                  },
	['y'] = { exponent =-24, name = 'yocto',                  },
}

-- Some units can be qualified with one of the following prefixes, when linked.
local customary_units = {
	{ &quot;US&quot;, link = &quot;United States customary units&quot; },
	{ &quot;U.S.&quot;, link = &quot;United States customary units&quot; },
	{ &quot;imperial&quot;, link = &quot;Imperial units&quot; },
	{ &quot;imp&quot;, link = &quot;Imperial units&quot; },
}

-- Names when using engineering notation (a prefix of &quot;eN&quot; where N is a number; example &quot;e6km&quot;).
-- key = { &quot;name&quot;, link = &quot;article title&quot;, exponent = numeric_key_value }
-- If lk=on and link is defined, the name of the number will appear as a link.
local eng_scales = {
	[&quot;3&quot;]  = { &quot;thousand&quot;, exponent = 3 },
	[&quot;6&quot;]  = { &quot;million&quot;, exponent = 6 },
	[&quot;9&quot;]  = { &quot;billion&quot;, link = &quot;1000000000 (number)&quot;, exponent = 9 },
	[&quot;12&quot;] = { &quot;trillion&quot;, link = &quot;1000000000000 (number)&quot;, exponent = 12 },
	[&quot;15&quot;] = { &quot;quadrillion&quot;, link = &quot;1000000000000000 (number)&quot;, exponent = 15 },
}

local all_categories = {
	unit = &quot;[[Category:Convert errors]]&quot;,
	option = &quot;[[Category:Convert errors]]&quot;,
	warning = '[[Category:Convert invalid options]]',
	tracking = '[[Category:Convert tracking]]',
}

-- For some error messages, the following puts the wanted style around
-- each unit code marked like '...%{ft%}...'.
local unitcode_regex = '%%([{}])'
local unitcode_replace = { ['{'] = '&quot;', ['}'] = '&quot;' }  -- no longer need the more elaborate substitute used before 2013-09-28

-- All messages that may be displayed if a problem occurs.
local all_messages = {
	-- Message format string: $1=title, $2=text, $3=category, $4=anchor.
	-- Each displayed message starts with &quot;Convert:&quot; so can easily locate by searching article.
	cvt_format = '&lt;sup class=&quot;noprint Inline-Template&quot; style=&quot;white-space:nowrap;&quot;&gt;[&lt;i&gt;[[Help:Convert messages#$4|&lt;span title=&quot;Convert: $1&quot;&gt;convert: $2&lt;/span&gt;]]&lt;/i&gt;]&lt;/sup&gt;$3&lt;span class=&quot;error&quot;&gt;&lt;/span&gt;',
	cvt_format2 = '&lt;sup class=&quot;noprint Inline-Template&quot; style=&quot;white-space:nowrap;&quot;&gt;[[Help:Convert messages#$4|&lt;span title=&quot;Convert: $1&quot;&gt;$2&lt;/span&gt;]]&lt;/sup&gt;$3&lt;span class=&quot;error&quot;&gt;&lt;/span&gt;',
	cvt_format_preview = '&lt;strong class=&quot;error&quot;&gt;Error in convert: $1 [[Help:Convert messages#$4|(help)]]&lt;/strong&gt;$3',
	-- Each of following messages is a table:
	-- { [1] = 'title',         -- mouseover title text
	--   [2] = 'text',          -- link text displayed in article
	--   [3] = 'category key',  -- key to lookup category in all_categories
	--   [4] = 'anchor',        -- anchor for link to relevant section on help page
	--   regex = gsub_regex,
	--   replace = gsub_table,
	-- }                    Mouseover title text                           Link text               CatKey     Anchor
	cvt_bad_input      = { 'input &quot;$1&quot; must be a number and unit'       , 'invalid input'       , 'option',  'invalid_input'        },
	cvt_bad_num        = { 'Value &quot;$1&quot; must be a number'                , 'invalid number'      , 'option',  'invalid_number'       },
	cvt_big_prec       = { 'Precision &quot;$1&quot; is too large'                , 'precision too large' , 'option',  'precision_too_large'  },
	cvt_invalid_num    = { 'Number has overflowed'                      , 'number overflow'     , 'option',  'number_overflow'      },
	cvt_no_num         = { 'Needs the number to be converted'           , 'needs a number'      , 'option',  'needs_number'         },
	cvt_no_num2        = { 'Needs another number for a range'           , 'needs another number', 'option',  'needs_another_number' },
	cvt_bad_frac       = { '&quot;$1&quot; needs an integer above 1'              , 'invalid fraction'    , 'option',  'invalid_fraction'     },
	cvt_bad_prec       = { 'Precision &quot;$1&quot; must be an integer'          , 'invalid precision'   , 'option',  'invalid_precision'    },
	cvt_bad_sigfig     = { '&quot;$1&quot; needs a positive integer'              , 'invalid sigfig'      , 'option',  'invalid_sigfig'       },
	cvt_empty_option   = { 'Ignored empty option &quot;$1&quot;'                  , 'empty option'        , 'option',  'empty_option'         },
	cvt_deprecated     = { 'Option &quot;$1&quot; is deprecated'                  , '*'                   , 'option',  'deprecated_option', format = 'cvt_format2', nowarn = true },
	cvt_no_spell       = { 'Spelling is not available'                  , 'bug, ask for help'   , 'option',  'ask_for_help'         },
	cvt_unknown_option = { 'Ignored invalid option &quot;$1&quot;'                , 'invalid option'      , 'option',  'invalid_option'       },
	cvt_wd_fail        = { 'Unable to access Wikidata'                  , 'wikidata problem'    , 'option',  'wikidata_problem'     },
	cvt_bad_default    = { 'Unit &quot;$1&quot; has an invalid default'           , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_bad_unit       = { 'Unit &quot;$1&quot; is invalid here'                  , 'unit invalid here'   , 'unit'  ,  'unit_invalid_here'    },
	cvt_no_default     = { 'Unit &quot;$1&quot; has no default output unit'       , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_no_unit        = { 'Needs name of unit'                         , 'needs unit name'     , 'unit'  ,  'needs_unit_name'      },
	cvt_unknown        = { 'Unit name &quot;$1&quot; is not known'                , 'unknown unit'        , 'unit'  ,  'unknown_unit'         },
	cvt_should_be      = { '$1'                                         , 'ambiguous unit'      , 'unit'  ,  'ambiguous_unit', regex = unitcode_regex, replace = unitcode_replace },
	cvt_mismatch       = { 'Cannot convert &quot;$1&quot; to &quot;$2&quot;'                , 'unit mismatch'       , 'unit'  ,  'unit_mismatch'        },
	cvt_bug_convert    = { 'Bug: Cannot convert between specified units', 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
	cvt_lookup         = { 'Unit &quot;$1&quot; is incorrectly defined'           , 'bug, ask for help'   , 'unit'  ,  'ask_for_help'         },
}

-- Text to join input value/unit with output value/unit.
local disp_joins = {
	-- [1]=before output, [2]=after output, [3]=between outputs in a combination; default &quot;; &quot;
	-- [wantname] gives default abbr=off
	[&quot;or&quot;]         = { &quot; or &quot;    , &quot;&quot; , &quot; or &quot;, wantname = true },
	[&quot;sqbr-sp&quot;]    = { &quot; [&quot;      , &quot;]&quot; },
	[&quot;sqbr-nbsp&quot;]  = { &quot;&amp;nbsp;[&quot; , &quot;]&quot; },
	[&quot;comma&quot;]      = { &quot;, &quot;      , &quot;&quot; , &quot;, &quot; },
	[&quot;slash-sp&quot;]   = { &quot; / &quot;     , &quot;&quot; , wantname = true },
	[&quot;slash-nbsp&quot;] = { &quot;&amp;nbsp;/ &quot;, &quot;&quot; , wantname = true },
	[&quot;slash-nosp&quot;] = { &quot;/&quot;       , &quot;&quot; , wantname = true },
	[&quot;b&quot;]          = { &quot; (&quot;      , &quot;)&quot; },
	[&quot;(or)&quot;]       = { &quot; (&quot;      , &quot;)&quot;, &quot; or &quot; },
	[&quot;br&quot;]         = { &quot;&lt;br /&gt;&quot;  , &quot;&quot; , wantname = true },
	[&quot;br()&quot;]       = { &quot;&lt;br /&gt;(&quot; , &quot;)&quot;, wantname = true },
}

-- Text to separate values in a range.
local range_types = {
	-- Specifying a table requires either:
	-- * &quot;off&quot; and &quot;on&quot; values (for &quot;abbr=off&quot; and &quot;abbr=on&quot;), or
	-- * &quot;input&quot; and &quot;output&quot; values (for LHS and RHS);
	-- other fields are optional.
	-- When &quot;adj=on|abbr=off&quot; applies, spaces in range text are replaced with hyphens.
	-- With &quot;exception = true&quot;, that also occurs with &quot;adj=on|abbr=on&quot;.
	-- If &quot;adj&quot; is defined here, that text (unchanged) is used with &quot;adj=on&quot;.
	[&quot;+&quot;]      = &quot; + &quot;,
	[&quot;,&quot;]      = &quot;,&amp;nbsp;&quot;,
	[&quot;, and&quot;]  = &quot;, and &quot;,
	[&quot;, or&quot;]   = &quot;, or &quot;,
	[&quot;by&quot;]     = &quot; by &quot;,
	[&quot;-&quot;]      = &quot;&quot;,
	[&quot;to about&quot;] = &quot; to about &quot;,
	[&quot;and&quot;]    = { off = &quot; and &quot;, on = &quot; and &quot;, exception = true },
	[&quot;and(-)&quot;] = { input = &quot; and &quot;, output = &quot;&quot; },
	[&quot;or&quot;]     = { off = &quot; or &quot; , on = &quot; or &quot; , exception = true },
	[&quot;to&quot;]     = { off = &quot; to &quot; , on = &quot; to &quot; , exception = true },
	[&quot;to(-)&quot;]  = { input = &quot;&amp;nbsp;to &quot;, output = &quot;&quot; },
	[&quot;+/-&quot;]    = { off = &quot;&amp;nbsp;&amp;nbsp;&quot;, on = &quot;&amp;nbsp;&amp;nbsp;&quot;, adj = &quot;&amp;nbsp;&amp;nbsp;&quot;, is_range_change = true },
	[&quot;by(x)&quot;]  = { input = &quot; by &quot;, output = &quot; &amp;nbsp;&quot;, out_range_x = true },
	[&quot;x&quot;]      = { off = &quot; by &quot;, on = &quot; &amp;nbsp;&quot;, abbr_range_x = true },
	[&quot;xx&quot;]     = &quot;&amp;nbsp;&amp;nbsp;&quot;,
	[&quot;*&quot;]      = &quot;&quot;,  -- use &quot;*&quot; to replace &quot;x&quot; in {{convert/2}} which is different from &quot;x&quot; in old {{convert}}
	[&quot;/&quot;]      = &quot;&amp;thinsp;/&amp;thinsp;&quot;,  -- for a table of high/low temperatures with {{convert|83|/|63|F|disp=br()|abbr=values}}
	[&quot;#&quot;]      = { off = &quot;, &quot;, on = &quot;, &quot;, abbr_range_x = true, adj = &quot;&amp;nbsp;&amp;nbsp;&quot; },  -- to show multiple Wikidata values
}

local range_aliases = {
	-- [&quot;alternative name for a range&quot;] = &quot;standard range name&quot;
	[&quot;&amp;&quot;]        = &quot;and&quot;,
	[&quot;&quot;]        = &quot;-&quot;,
	[&quot;&amp;ndash;&quot;]  = &quot;-&quot;,
	[&quot;to-&quot;]      = &quot;to(-)&quot;,
	[&quot;&quot;]        = &quot;x&quot;,
	[&quot;&amp;times;&quot;]  = &quot;x&quot;,
	[&quot;&quot;]        = &quot;+/-&quot;,
	[&quot;&amp;plusmn;&quot;] = &quot;+/-&quot;,
}

-- Convert accepts range text delimited with whitespace, for example, {{convert|1 to 2|ft}}.
-- In addition, the following &quot;words&quot; are accepted without spaces, for example, {{convert|1-2|ft}}.
-- Words must be in correct order for searching, for example, 'x' after 'xx'.
local range_words = { '-', '', 'xx', 'x', '*' }

local ranges = {
	types = range_types,
	aliases = range_aliases,
	words = range_words,
}

-- Valid option names.
local en_option_name = {
	-- [&quot;local text for option name&quot;] = &quot;en name used in this module&quot;
	[&quot;$&quot;] = &quot;$&quot;,
	[&quot;abbr&quot;] = &quot;abbr&quot;,
	[&quot;adj&quot;] = &quot;adj&quot;,
	[&quot;comma&quot;] = &quot;comma&quot;,
	[&quot;debug&quot;] = &quot;debug&quot;,
	[&quot;disp&quot;] = &quot;disp&quot;,
	[&quot;frac&quot;] = &quot;frac&quot;,
	[&quot;input&quot;] = &quot;input&quot;,
	[&quot;lang&quot;] = &quot;lang&quot;,
	[&quot;lk&quot;] = &quot;lk&quot;,
	[&quot;near&quot;] = &quot;near&quot;,
	[&quot;order&quot;] = &quot;order&quot;,
	[&quot;qid&quot;] = &quot;qid&quot;,
	[&quot;qual&quot;] = &quot;qual&quot;,
	[&quot;qualifier&quot;] = &quot;qual&quot;,
	[&quot;round&quot;] = &quot;round&quot;,
	[&quot;sigfig&quot;] = &quot;sigfig&quot;,
	[&quot;sing&quot;] = &quot;adj&quot;,                   -- &quot;sing&quot; is an old alias for &quot;adj&quot;
	[&quot;sortable&quot;] = &quot;sortable&quot;,
	[&quot;sp&quot;] = &quot;sp&quot;,
	[&quot;spell&quot;] = &quot;spell&quot;,
	[&quot;stylein&quot;] = &quot;stylein&quot;,
	[&quot;styleout&quot;] = &quot;styleout&quot;,
	[&quot;tracking&quot;] = &quot;tracking&quot;,
}

-- Valid option values.
-- Convention: parms.opt_xxx refers to an option that is set here
-- (not intended to be set by the template which invokes this module).
-- Example: At enwiki, &quot;abbr&quot; includes:
--     [&quot;comma&quot;] = &quot;opt_nocomma&quot;
-- As a result, if the template uses abbr=comma, Module:Convert sets:
--     parms[&quot;opt_nocomma&quot;] = true
--     parms[&quot;abbr&quot;] = nil
-- Therefore parms.abbr will be nil, or will have one of the listed values
-- that do not start with &quot;opt_&quot;.
-- An option value of form &quot;xxx?&quot; is the same as &quot;xxx&quot; but shows the input as deprecated.
local en_option_value = {
	-- $=x is handled as a special case: x should be a currency symbol that will be used instead of &quot;$&quot;
	[&quot;abbr&quot;] = {
		-- [&quot;local text for option value&quot;] = &quot;en value used in this module&quot;
		[&quot;comma&quot;] = &quot;opt_nocomma?&quot;,     -- no numsep in input or output numbers
		[&quot;def&quot;] = &quot;&quot;,                   -- ignored (some wrapper templates call convert with &quot;abbr=def&quot; to mean &quot;default abbreviation&quot;)
		[&quot;h&quot;] = &quot;on&quot;,                   -- abbr=on + use &quot;h&quot; for hand unit (default)
		[&quot;hh&quot;] = &quot;opt_hand_hh&quot;,         -- abbr=on + use &quot;hh&quot; for hand unit
		[&quot;in&quot;] = &quot;in&quot;,                  -- use symbol for LHS unit
		[&quot;mos&quot;] = &quot;mos&quot;,                -- in a range, repeat the input unit (no longer used)
		[&quot;none&quot;] = &quot;off&quot;,               -- old name for &quot;off&quot;
		[&quot;off&quot;] = &quot;off&quot;,                -- use name for all units
		[&quot;on&quot;] = &quot;on&quot;,                  -- use symbol for all units
		[&quot;out&quot;] = &quot;out&quot;,                -- use symbol for RHS unit (default)
		[&quot;unit&quot;] = &quot;unit&quot;,              -- abbr=on but abbreviate units only: e6km  million km (not 10 km)
		[&quot;values&quot;] = &quot;opt_values&quot;,      -- show only input and output numbers, not units
		[&quot;~&quot;] = &quot;opt_also_symbol&quot;,      -- show input unit symbol as well as name
	},
	[&quot;adj&quot;] = {
		[&quot;1&quot;] = &quot;opt_singular&quot;,         -- unit name is singular when value satisfies: (-1 &lt;= v and v &lt; 0) or (0 &lt; v and v &lt;= 1)
		[&quot;flip&quot;] = &quot;opt_flip?&quot;,         -- reverse order of input/output
		[&quot;j&quot;] = &quot;opt_use_nbsp&quot;,         -- &quot;join&quot;: use &quot;&amp;nbsp;&quot; instead of &quot; &quot; between value and unit name
		[&quot;mid&quot;] = &quot;opt_adjectival, opt_adj_mid&quot;,  -- adj=on with user-specified text after input unit (between input and output)
		[&quot;nocomma&quot;] = &quot;opt_nocomma?&quot;,   -- no numsep in input or output numbers
		[&quot;off&quot;] = &quot;&quot;,                   -- ignored (off is the default)
		[&quot;on&quot;] = &quot;opt_adjectival&quot;,      -- unit name is singular and hyphenated
		[&quot;pre&quot;] = &quot;opt_one_preunit&quot;,    -- user-specified text before input unit
		[&quot;ri0&quot;] = &quot;opt_ri=0&quot;,           -- round input with precision = 0
		[&quot;ri1&quot;] = &quot;opt_ri=1&quot;,           -- round input with precision = 1
		[&quot;ri2&quot;] = &quot;opt_ri=2&quot;,           -- round input with precision = 2
		[&quot;ri3&quot;] = &quot;opt_ri=3&quot;,           -- round input with precision = 3
	},
	[&quot;comma&quot;] = {
		[&quot;5&quot;] = &quot;opt_comma5&quot;,           -- only use numsep grouping if 5 or more digits
		[&quot;gaps&quot;] = &quot;opt_gaps&quot;,          -- use gaps, not numsep, to separate groups of digits
		[&quot;gaps3&quot;] = &quot;opt_gaps, opt_gaps3&quot;,  -- group only in threes rather than default of no gap before a single digit after decimal mark
		[&quot;gaps5&quot;] = &quot;opt_gaps?&quot;,        -- deprecated 2015-05-29, was: opt_gaps + opt_comma5
		[&quot;off&quot;] = &quot;opt_nocomma&quot;,        -- no numsep in input or output numbers
	},
	[&quot;debug&quot;] = {
		[&quot;yes&quot;] = &quot;opt_sortable_debug&quot;, -- make the normally hidden sort key visible
	},
	[&quot;disp&quot;] = {
		[&quot;/&quot;] = &quot;or?&quot;,                  -- see &quot;slash&quot;
		[&quot;2&quot;] = &quot;opt_output_only?&quot;,     -- display only output value and symbol/name (not input)
		[&quot;5&quot;] = &quot;opt_round=5&quot;,          -- round output value to nearest 5
		[&quot;b&quot;] = &quot;b&quot;,                    -- join: '(...)'
		[&quot;(or)&quot;] = &quot;(or)&quot;,              -- join: '(...)' with 'or' between outputs in a combination
		[&quot;br&quot;] = &quot;br&quot;,                  -- join: '&lt;br /&gt;'
		[&quot;br()&quot;] = &quot;br()&quot;,              -- join: '&lt;br /&gt;(...)'
		[&quot;comma&quot;] = &quot;comma&quot;,            -- join: ','
		[&quot;flip&quot;] = &quot;opt_flip&quot;,          -- reverse order of input/output
		[&quot;flip5&quot;] = &quot;opt_flip, opt_round=5?&quot;,  -- disp=flip + disp=5
		[&quot;nocomma&quot;] = &quot;opt_nocomma?&quot;,   -- no numsep in input or output numbers
		[&quot;number&quot;] = &quot;opt_output_number_only&quot;,  -- display output value (not input, and not output symbol/name)
		[&quot;or&quot;] = &quot;or&quot;,                  -- join: 'or'
		[&quot;out&quot;] = &quot;opt_output_only&quot;,
		[&quot;output number only&quot;] = &quot;opt_output_number_only&quot;,
		[&quot;output only&quot;] = &quot;opt_output_only&quot;,
		[&quot;preunit&quot;] = &quot;opt_two_preunits&quot;,    -- user-specified text before input and output units
		[&quot;s&quot;] = &quot;or?&quot;,                  -- see &quot;slash&quot;
		[&quot;slash&quot;] = &quot;or?&quot;,              -- 2014-11-03: &quot;disp=slash&quot; is now equivalent to &quot;disp=or&quot; as slash is unhelpful
		[&quot;sqbr&quot;] = &quot;sqbr&quot;,              -- join: '[...]'
		[&quot;table&quot;] = &quot;opt_table&quot;,        -- output is suitable for a table cell with align=&quot;right&quot;
		[&quot;tablecen&quot;] = &quot;opt_tablecen&quot;,  -- output is suitable for a table cell with align=&quot;center&quot;
		[&quot;u2&quot;] = &quot;opt_output_unit_only?&quot;, -- display output symbol/name (not input, and not output value)
		[&quot;unit&quot;] = &quot;opt_input_unit_only&quot;, -- display input symbol/name (not output, and not input value)
		[&quot;unit or text&quot;] = &quot;opt_input_unit_only, opt_ignore_error&quot;, -- display input symbol/name, or given unit code if not known
		[&quot;unit2&quot;] = &quot;opt_output_unit_only&quot;,
		[&quot;x&quot;] = &quot;x&quot;,                    -- join: &lt;first&gt;...&lt;second&gt; (user-specified text)
	},
	-- frac=x is handled as a special case: x must be an integer (possibly in local language) = 2 or more
	-- input=x is handled as a special case: x should be &lt;value&gt;&lt;space&gt;&lt;unitcode&gt; or &lt;wikidata-property-id&gt;
	[&quot;lang&quot;] = {                        -- language for output digits (both en and local digits are always accepted for input)
		[&quot;en&quot;] = &quot;opt_lang_en&quot;,         -- use en digits for numbers, regardless of local language
		[&quot;local&quot;] = &quot;opt_lang_local&quot;,   -- use local digits for numbers (default, although config can change default to en)
	},
	[&quot;lk&quot;] = {
		[&quot;in&quot;] = &quot;in&quot;,                  -- link LHS unit name or symbol
		[&quot;off&quot;] = &quot;off&quot;,                -- do not link: same as default except for hand unit
		[&quot;on&quot;] = &quot;on&quot;,                  -- link all unit names or symbols (but not twice for the same unit)
		[&quot;out&quot;] = &quot;out&quot;,                -- link RHS unit name or symbol
	},
	[&quot;near&quot;] = {
		[&quot;5&quot;] = &quot;opt_round=5?&quot;,         -- round output value to nearest 5
	},
	[&quot;order&quot;] = {
		[&quot;flip&quot;] = &quot;opt_flip&quot;,          -- reverse order of input/output
		[&quot;out&quot;] = &quot;opt_order_out&quot;,      -- do not show input; instead, use order in output combination, with the first output shown as the input
	},
	-- qid=x is handled as a special case: x should be a Wikidata Q item identifier.
	-- qual=x is handled as a special case: x should be a Wikidata Q item identifier.
	[&quot;round&quot;] = {
		[&quot;0.5&quot;] = &quot;opt_round=0.5&quot;,      -- round output value to nearest 0.5
		[&quot;5&quot;] = &quot;opt_round=5&quot;,          -- round output value to nearest 5
		[&quot;10&quot;] = &quot;opt_round=10&quot;,        -- round output value to nearest 10 (same as but clearer than &quot;|-1&quot;)
		[&quot;25&quot;] = &quot;opt_round=25&quot;,        -- round output value to nearest 25
		[&quot;50&quot;] = &quot;opt_round=50&quot;,        -- round output value to nearest 50
		[&quot;each&quot;] = &quot;opt_round_each&quot;,    -- using default precision in a range, round each output separately (default uses highest precision of each item in range)
	},
	-- sigfig=x is handled as a special case: x must be an integer (possibly in local language) = 1 or more
	[&quot;sortable&quot;] = {
		[&quot;off&quot;] = &quot;&quot;,                   -- ignored (off is the default)
		[&quot;in&quot;] = &quot;opt_sortable_on?&quot;,    -- same as &quot;on&quot;
		[&quot;on&quot;] = &quot;opt_sortable_on&quot;,     -- output sort key for use in a sortable table, based on value from converting to a standard base unit
		[&quot;out&quot;] = &quot;opt_sortable_on?&quot;,   -- same as &quot;on&quot;
	},
	[&quot;sp&quot;] = {
		[&quot;us&quot;] = &quot;opt_sp_us&quot;,           -- use U.S. spelling (like &quot;meter&quot; instead of default &quot;metre&quot;)
	},
	[&quot;spell&quot;] = {                       -- only English spelling is supported; not scientific notation; only some fractions
		[&quot;in&quot;] = &quot;opt_spell_in&quot;,        -- spell input value in words
		[&quot;In&quot;] = &quot;opt_spell_in, opt_spell_upper&quot;,                -- spell input value in words with first letter uppercase
		[&quot;on&quot;] = &quot;opt_spell_in, opt_spell_out&quot;,                  -- spell input and output values in words
		[&quot;On&quot;] = &quot;opt_spell_in, opt_spell_out, opt_spell_upper&quot;, -- same, with first letter of first word in result uppercase
	},
	-- stylein=x is handled as a special case: x can be any text
	-- styleout=x is handled as a special case: x can be any text
	-- tracking=x is handled as a special case: x can be any text
}

return {
	SIprefixes = SIprefixes,
	all_categories = all_categories,
	all_messages = all_messages,
	currency = { ['$'] = true, [''] = true },
	customary_units = customary_units,
	disp_joins = disp_joins,
	en_option_name = en_option_name,
	en_option_value = en_option_value,
	eng_scales = eng_scales,
	ranges = ranges,
}</text>
      <sha1>39ore4pqagg8qc5v05d5r6l2w6h2smh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Date</title>
    <ns>828</ns>
    <id>49576933</id>
    <revision>
      <id>804702703</id>
      <parentid>804702103</parentid>
      <timestamp>2017-10-10T16:33:41Z</timestamp>
      <contributor>
        <username>Zzuuzz</username>
        <id>365454</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Date]]&quot;: [[Wikipedia:High-risk templates|High risk module]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="46225">-- Date functions for use by other modules.
-- I18N and time zones are not supported.

local MINUS = ''  -- Unicode U+2212 MINUS SIGN
local floor = math.floor

local Date, DateDiff, diffmt  -- forward declarations
local uniq = { 'unique identifier' }

local function is_date(t)
	-- The system used to make a date read-only means there is no unique
	-- metatable that is conveniently accessible to check.
	return type(t) == 'table' and t._id == uniq
end

local function is_diff(t)
	return type(t) == 'table' and getmetatable(t) == diffmt
end

local function _list_join(list, sep)
	return table.concat(list, sep)
end

local function collection()
	-- Return a table to hold items.
	return {
		n = 0,
		add = function (self, item)
			self.n = self.n + 1
			self[self.n] = item
		end,
		join = _list_join,
	}
end

local function strip_to_nil(text)
	-- If text is a string, return its trimmed content, or nil if empty.
	-- Otherwise return text (convenient when Date fields are provided from
	-- another module which may pass a string, a number, or another type).
	if type(text) == 'string' then
		text = text:match('(%S.-)%s*$')
	end
	return text
end

local function is_leap_year(year, calname)
	-- Return true if year is a leap year.
	if calname == 'Julian' then
		return year % 4 == 0
	end
	return (year % 4 == 0 and year % 100 ~= 0) or year % 400 == 0
end

local function days_in_month(year, month, calname)
	-- Return number of days (1..31) in given month (1..12).
	if month == 2 and is_leap_year(year, calname) then
		return 29
	end
	return ({ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 })[month]
end

local function h_m_s(time)
	-- Return hour, minute, second extracted from fraction of a day.
	time = floor(time * 24 * 3600 + 0.5)  -- number of seconds
	local second = time % 60
	time = floor(time / 60)
	return floor(time / 60), time % 60, second
end

local function hms(date)
	-- Return fraction of a day from date's time, where (0 &lt;= fraction &lt; 1)
	-- if the values are valid, but could be anything if outside range.
	return (date.hour + (date.minute + date.second / 60) / 60) / 24
end

local function julian_date(date)
	-- Return jd, jdz from a Julian or Gregorian calendar date where
	--   jd = Julian date and its fractional part is zero at noon
	--   jdz = same, but assume time is 00:00:00 if no time given
	-- http://www.tondering.dk/claus/cal/julperiod.php#formula
	-- Testing shows this works for all dates from year -9999 to 9999!
	-- JDN 0 is the 24-hour period starting at noon UTC on Monday
	--    1 January 4713 BC  = (-4712, 1, 1)   Julian calendar
	--   24 November 4714 BC = (-4713, 11, 24) Gregorian calendar
	local offset
	local a = floor((14 - date.month)/12)
	local y = date.year + 4800 - a
	if date.calendar == 'Julian' then
		offset = floor(y/4) - 32083
	else
		offset = floor(y/4) - floor(y/100) + floor(y/400) - 32045
	end
	local m = date.month + 12*a - 3
	local jd = date.day + floor((153*m + 2)/5) + 365*y + offset
	if date.hastime then
		jd = jd + hms(date) - 0.5
		return jd, jd
	end
	return jd, jd - 0.5
end

local function set_date_from_jd(date)
	-- Set the fields of table date from its Julian date field.
	-- Return true if date is valid.
	-- http://www.tondering.dk/claus/cal/julperiod.php#formula
	-- This handles the proleptic Julian and Gregorian calendars.
	-- Negative Julian dates are not defined but they work.
	local calname = date.calendar
	local low, high  -- min/max limits for date ranges 9999-01-01 to 9999-12-31
	if calname == 'Gregorian' then
		low, high = -1930999.5, 5373484.49999
	elseif calname == 'Julian' then
		low, high = -1931076.5, 5373557.49999
	else
		return
	end
	local jd = date.jd
	if not (type(jd) == 'number' and low &lt;= jd and jd &lt;= high) then
		return
	end
	local jdn = floor(jd)
	if date.hastime then
		local time = jd - jdn  -- 0 &lt;= time &lt; 1
		if time &gt;= 0.5 then    -- if at or after midnight of next day
			jdn = jdn + 1
			time = time - 0.5
		else
			time = time + 0.5
		end
		date.hour, date.minute, date.second = h_m_s(time)
	else
		date.second = 0
		date.minute = 0
		date.hour = 0
	end
	local b, c
	if calname == 'Julian' then
		b = 0
		c = jdn + 32082
	else  -- Gregorian
		local a = jdn + 32044
		b = floor((4*a + 3)/146097)
		c = a - floor(146097*b/4)
	end
	local d = floor((4*c + 3)/1461)
	local e = c - floor(1461*d/4)
	local m = floor((5*e + 2)/153)
	date.day = e - floor((153*m + 2)/5) + 1
	date.month = m + 3 - 12*floor(m/10)
	date.year = 100*b + d - 4800 + floor(m/10)
	return true
end

local function fix_numbers(numbers, y, m, d, H, M, S, partial, hastime, calendar)
	-- Put the result of normalizing the given values in table numbers.
	-- The result will have valid m, d values if y is valid; caller checks y.
	-- The logic of PHP mktime is followed where m or d can be zero to mean
	-- the previous unit, and -1 is the one before that, etc.
	-- Positive values carry forward.
	local date
	if not (1 &lt;= m and m &lt;= 12) then
		date = Date(y, 1, 1)
		if not date then return end
		date = date + ((m - 1) .. 'm')
		y, m = date.year, date.month
	end
	local days_hms
	if not partial then
		if hastime and H and M and S then
			if not (0 &lt;= H and H &lt;= 23 and
					0 &lt;= M and M &lt;= 59 and
					0 &lt;= S and S &lt;= 59) then
				days_hms = hms({ hour = H, minute = M, second = S })
			end
		end
		if days_hms or not (1 &lt;= d and d &lt;= days_in_month(y, m, calendar)) then
			date = date or Date(y, m, 1)
			if not date then return end
			date = date + (d - 1 + (days_hms or 0))
			y, m, d = date.year, date.month, date.day
			if days_hms then
				H, M, S = date.hour, date.minute, date.second
			end
		end
	end
	numbers.year = y
	numbers.month = m
	numbers.day = d
	if days_hms then
		-- Don't set H unless it was valid because a valid H will set hastime.
		numbers.hour = H
		numbers.minute = M
		numbers.second = S
	end
end

local function set_date_from_numbers(date, numbers, options)
	-- Set the fields of table date from numeric values.
	-- Return true if date is valid.
	if type(numbers) ~= 'table' then
		return
	end
	local y = numbers.year   or date.year
	local m = numbers.month  or date.month
	local d = numbers.day    or date.day
	local H = numbers.hour
	local M = numbers.minute or date.minute or 0
	local S = numbers.second or date.second or 0
	local need_fix
	if y and m and d then
		date.partial = nil
		if not (-9999 &lt;= y and y &lt;= 9999 and
			1 &lt;= m and m &lt;= 12 and
			1 &lt;= d and d &lt;= days_in_month(y, m, date.calendar)) then
				if not date.want_fix then
					return
				end
				need_fix = true
		end
	elseif y and date.partial then
		if d or not (-9999 &lt;= y and y &lt;= 9999) then
			return
		end
		if m and not (1 &lt;= m and m &lt;= 12) then
			if not date.want_fix then
				return
			end
			need_fix = true
		end
	else
		return
	end
	if date.partial then
		H = nil  -- ignore any time
		M = nil
		S = nil
	else
		if H then
			-- It is not possible to set M or S without also setting H.
			date.hastime = true
		else
			H = 0
		end
		if not (0 &lt;= H and H &lt;= 23 and
				0 &lt;= M and M &lt;= 59 and
				0 &lt;= S and S &lt;= 59) then
			if date.want_fix then
				need_fix = true
			else
				return
			end
		end
	end
	date.want_fix = nil
	if need_fix then
		fix_numbers(numbers, y, m, d, H, M, S, date.partial, date.hastime, date.calendar)
		return set_date_from_numbers(date, numbers, options)
	end
	date.year = y    -- -9999 to 9999 ('n BC'  year = 1 - n)
	date.month = m   -- 1 to 12 (may be nil if partial)
	date.day = d     -- 1 to 31 (* = nil if partial)
	date.hour = H    -- 0 to 59 (*)
	date.minute = M  -- 0 to 59 (*)
	date.second = S  -- 0 to 59 (*)
	if type(options) == 'table' then
		for _, k in ipairs({ 'am', 'era', 'format' }) do
			if options[k] then
				date.options[k] = options[k]
			end
		end
	end
	return true
end

local function make_option_table(options1, options2)
	-- If options1 is a string, return a table with its settings, or
	-- if it is a table, use its settings.
	-- Missing options are set from table options2 or defaults.
	-- If a default is used, a flag is set so caller knows the value was not intentionally set.
	-- Valid option settings are:
	-- am: 'am', 'a.m.', 'AM', 'A.M.'
	--     'pm', 'p.m.', 'PM', 'P.M.' (each has same meaning as corresponding item above)
	-- era: 'BCMINUS', 'BCNEGATIVE', 'BC', 'B.C.', 'BCE', 'B.C.E.', 'AD', 'A.D.', 'CE', 'C.E.'
	-- Option am = 'am' does not mean the hour is AM; it means 'am' or 'pm' is used, depending on the hour,
	--    and am = 'pm' has the same meaning.
	-- Similarly, era = 'BC' means 'BC' is used if year &lt;= 0.
	-- BCMINUS displays a MINUS if year &lt; 0 and the display format does not include %{era}.
	-- BCNEGATIVE is similar but displays a hyphen.
	local result = { bydefault = {} }
	if type(options1) == 'table' then
		result.am = options1.am
		result.era = options1.era
	elseif type(options1) == 'string' then
		-- Example: 'am:AM era:BC' or 'am=AM era=BC'.
		for item in options1:gmatch('%S+') do
			local lhs, rhs = item:match('^(%w+)[:=](.+)$')
			if lhs then
				result[lhs] = rhs
			end
		end
	end
	options2 = type(options2) == 'table' and options2 or {}
	local defaults = { am = 'am', era = 'BC' }
	for k, v in pairs(defaults) do
		if not result[k] then
			if options2[k] then
				result[k] = options2[k]
			else
				result[k] = v
				result.bydefault[k] = true
			end
		end
	end
	return result
end

local ampm_options = {
	-- lhs = input text accepted as an am/pm option
	-- rhs = code used internally
	['am']   = 'am',
	['AM']   = 'AM',
	['a.m.'] = 'a.m.',
	['A.M.'] = 'A.M.',
	['pm']   = 'am',  -- same as am
	['PM']   = 'AM',
	['p.m.'] = 'a.m.',
	['P.M.'] = 'A.M.',
}

local era_text = {
	-- Text for displaying an era with a positive year (after adjusting
	-- by replacing year with 1 - year if date.year &lt;= 0).
	-- options.era = { year&lt;=0 , year&gt;0 }
	['BCMINUS']    = { 'BC'    , ''    , isbc = true, sign = MINUS },
	['BCNEGATIVE'] = { 'BC'    , ''    , isbc = true, sign = '-'   },
	['BC']         = { 'BC'    , ''    , isbc = true },
	['B.C.']       = { 'B.C.'  , ''    , isbc = true },
	['BCE']        = { 'BCE'   , ''    , isbc = true },
	['B.C.E.']     = { 'B.C.E.', ''    , isbc = true },
	['AD']         = { 'BC'    , 'AD'   },
	['A.D.']       = { 'B.C.'  , 'A.D.' },
	['CE']         = { 'BCE'   , 'CE'   },
	['C.E.']       = { 'B.C.E.', 'C.E.' },
}

local function get_era_for_year(era, year)
	return (era_text[era] or era_text['BC'])[year &gt; 0 and 2 or 1] or ''
end

local function strftime(date, format, options)
	-- Return date formatted as a string using codes similar to those
	-- in the C strftime library function.
	local sformat = string.format
	local shortcuts = {
		['%c'] = '%-I:%M %p %-d %B %-Y %{era}',  -- date and time: 2:30 pm 1 April 2016
		['%x'] = '%-d %B %-Y %{era}',            -- date:          1 April 2016
		['%X'] = '%-I:%M %p',                    -- time:          2:30 pm
	}
	if shortcuts[format] then
		format = shortcuts[format]
	end
	local codes = {
		a = { field = 'dayabbr' },
		A = { field = 'dayname' },
		b = { field = 'monthabbr' },
		B = { field = 'monthname' },
		u = { fmt = '%d'  , field = 'dowiso' },
		w = { fmt = '%d'  , field = 'dow' },
		d = { fmt = '%02d', fmt2 = '%d', field = 'day' },
		m = { fmt = '%02d', fmt2 = '%d', field = 'month' },
		Y = { fmt = '%04d', fmt2 = '%d', field = 'year' },
		H = { fmt = '%02d', fmt2 = '%d', field = 'hour' },
		M = { fmt = '%02d', fmt2 = '%d', field = 'minute' },
		S = { fmt = '%02d', fmt2 = '%d', field = 'second' },
		j = { fmt = '%03d', fmt2 = '%d', field = 'dayofyear' },
		I = { fmt = '%02d', fmt2 = '%d', field = 'hour', special = 'hour12' },
		p = { field = 'hour', special = 'am' },
	}
	options = make_option_table(options, date.options)
	local amopt = options.am
	local eraopt = options.era
	local function replace_code(spaces, modifier, id)
		local code = codes[id]
		if code then
			local fmt = code.fmt
			if modifier == '-' and code.fmt2 then
				fmt = code.fmt2
			end
			local value = date[code.field]
			if not value then
				return nil  -- an undefined field in a partial date
			end
			local special = code.special
			if special then
				if special == 'hour12' then
					value = value % 12
					value = value == 0 and 12 or value
				elseif special == 'am' then
					local ap = ({
						['a.m.'] = { 'a.m.', 'p.m.' },
						['AM'] = { 'AM', 'PM' },
						['A.M.'] = { 'A.M.', 'P.M.' },
					})[ampm_options[amopt]] or { 'am', 'pm' }
					return (spaces == '' and '' or '&amp;nbsp;') .. (value &lt; 12 and ap[1] or ap[2])
				end
			end
			if code.field == 'year' then
				local sign = (era_text[eraopt] or {}).sign
				if not sign or format:find('%{era}', 1, true) then
					sign = ''
					if value &lt;= 0 then
						value = 1 - value
					end
				else
					if value &gt;= 0 then
						sign = ''
					else
						value = -value
					end
				end
				return spaces .. sign .. sformat(fmt, value)
			end
			return spaces .. (fmt and sformat(fmt, value) or value)
		end
	end
	local function replace_property(spaces, id)
		if id == 'era' then
			-- Special case so can use local era option.
			local result = get_era_for_year(eraopt, date.year)
			if result == '' then
				return ''
			end
			return (spaces == '' and '' or '&amp;nbsp;') .. result
		end
		local result = date[id]
		if type(result) == 'string' then
			return spaces .. result
		end
		if type(result) == 'number' then
			return  spaces .. tostring(result)
		end
		if type(result) == 'boolean' then
			return  spaces .. (result and '1' or '0')
		end
		-- This occurs if id is an undefined field in a partial date, or is the name of a function.
		return nil
	end
	local PERCENT = '\127PERCENT\127'
	return (format
		:gsub('%%%%', PERCENT)
		:gsub('(%s*)%%{(%w+)}', replace_property)
		:gsub('(%s*)%%(%-?)(%a)', replace_code)
		:gsub(PERCENT, '%%')
	)
end

local function _date_text(date, fmt, options)
	-- Return a formatted string representing the given date.
	if not is_date(date) then
		error('date:text: need a date (use &quot;date:text()&quot; with a colon)', 2)
	end
	if type(fmt) == 'string' and fmt:match('%S') then
		if fmt:find('%', 1, true) then
			return strftime(date, fmt, options)
		end
	elseif date.partial then
		fmt = date.month and 'my' or 'y'
	else
		fmt = 'dmy'
		if date.hastime then
			fmt = (date.second &gt; 0 and 'hms ' or 'hm ') .. fmt
		end
	end
	local function bad_format()
		-- For consistency with other format processing, return given format
		-- (or cleaned format if original was not a string) if invalid.
		return mw.text.nowiki(fmt)
	end
	if date.partial then
		-- Ignore days in standard formats like 'ymd'.
		if fmt == 'ym' or fmt == 'ymd' then
			fmt = date.month and '%Y-%m %{era}' or '%Y %{era}'
		elseif fmt == 'my' or fmt == 'dmy' or fmt == 'mdy' then
			fmt = date.month and '%B %-Y %{era}' or '%-Y %{era}'
		elseif fmt == 'y' then
			fmt = date.month and '%-Y %{era}' or '%-Y %{era}'
		else
			return bad_format()
		end
		return strftime(date, fmt, options)
	end
	local function hm_fmt()
		local plain = make_option_table(options, date.options).bydefault.am
		return plain and '%H:%M' or '%-I:%M %p'
	end
	local need_time = date.hastime
	local t = collection()
	for item in fmt:gmatch('%S+') do
		local f
		if item == 'hm' then
			f = hm_fmt()
			need_time = false
		elseif item == 'hms' then
			f = '%H:%M:%S'
			need_time = false
		elseif item == 'ymd' then
			f = '%Y-%m-%d %{era}'
		elseif item == 'mdy' then
			f = '%B %-d, %-Y %{era}'
		elseif item == 'dmy' then
			f = '%-d %B %-Y %{era}'
		else
			return bad_format()
		end
		t:add(f)
	end
	fmt = t:join(' ')
	if need_time then
		fmt = hm_fmt() .. ' ' .. fmt
	end
	return strftime(date, fmt, options)
end

local day_info = {
	-- 0=Sun to 6=Sat
	[0] = { 'Sun', 'Sunday' },
	{ 'Mon', 'Monday' },
	{ 'Tue', 'Tuesday' },
	{ 'Wed', 'Wednesday' },
	{ 'Thu', 'Thursday' },
	{ 'Fri', 'Friday' },
	{ 'Sat', 'Saturday' },
}

local month_info = {
	-- 1=Jan to 12=Dec
	{ 'Jan', 'January' },
	{ 'Feb', 'February' },
	{ 'Mar', 'March' },
	{ 'Apr', 'April' },
	{ 'May', 'May' },
	{ 'Jun', 'June' },
	{ 'Jul', 'July' },
	{ 'Aug', 'August' },
	{ 'Sep', 'September' },
	{ 'Oct', 'October' },
	{ 'Nov', 'November' },
	{ 'Dec', 'December' },
}

local function name_to_number(text, translate)
	if type(text) == 'string' then
		return translate[text:lower()]
	end
end

local function day_number(text)
	return name_to_number(text, {
		sun = 0, sunday = 0,
		mon = 1, monday = 1,
		tue = 2, tuesday = 2,
		wed = 3, wednesday = 3,
		thu = 4, thursday = 4,
		fri = 5, friday = 5,
		sat = 6, saturday = 6,
	})
end

local function month_number(text)
	return name_to_number(text, {
		jan = 1, january = 1,
		feb = 2, february = 2,
		mar = 3, march = 3,
		apr = 4, april = 4,
		may = 5,
		jun = 6, june = 6,
		jul = 7, july = 7,
		aug = 8, august = 8,
		sep = 9, september = 9, sept = 9,
		oct = 10, october = 10,
		nov = 11, november = 11,
		dec = 12, december = 12,
	})
end

local function _list_text(list, fmt)
	-- Return a list of formatted strings from a list of dates.
	if not type(list) == 'table' then
		error('date:list:text: need &quot;list:text()&quot; with a colon', 2)
	end
	local result = { join = _list_join }
	for i, date in ipairs(list) do
		result[i] = date:text(fmt)
	end
	return result
end

local function _date_list(date, spec)
	-- Return a possibly empty numbered table of dates meeting the specification.
	-- Dates in the list are in ascending order (oldest date first).
	-- The spec should be a string of form &quot;&lt;count&gt; &lt;day&gt; &lt;op&gt;&quot;
	-- where each item is optional and
	--   count = number of items wanted in list
	--   day = abbreviation or name such as Mon or Monday
	--   op = &gt;, &gt;=, &lt;, &lt;= (default is &gt; meaning after date)
	-- If no count is given, the list is for the specified days in date's month.
	-- The default day is date's day.
	-- The spec can also be a positive or negative number:
	--   -5 is equivalent to '5 &lt;'
	--   5  is equivalent to '5' which is '5 &gt;'
	if not is_date(date) then
		error('date:list: need a date (use &quot;date:list()&quot; with a colon)', 2)
	end
	local list = { text = _list_text }
	if date.partial then
		return list
	end
	local count, offset, operation
	local ops = {
		['&gt;='] = { before = false, include = true  },
		['&gt;']  = { before = false, include = false },
		['&lt;='] = { before = true , include = true  },
		['&lt;']  = { before = true , include = false },
	}
	if spec then
		if type(spec) == 'number' then
			count = floor(spec + 0.5)
			if count &lt; 0 then
				count = -count
				operation = ops['&lt;']
			end
		elseif type(spec) == 'string' then
			local num, day, op = spec:match('^%s*(%d*)%s*(%a*)%s*([&lt;&gt;=]*)%s*$')
			if not num then
				return list
			end
			if num ~= '' then
				count = tonumber(num)
			end
			if day ~= '' then
				local dow = day_number(day:gsub('[sS]$', ''))  -- accept plural days
				if not dow then
					return list
				end
				offset = dow - date.dow
			end
			operation = ops[op]
		else
			return list
		end
	end
	offset = offset or 0
	operation = operation or ops['&gt;']
	local datefrom, dayfirst, daylast
	if operation.before then
		if offset &gt; 0 or (offset == 0 and not operation.include) then
			offset = offset - 7
		end
		if count then
			if count &gt; 1 then
				offset = offset - 7*(count - 1)
			end
			datefrom = date + offset
		else
			daylast = date.day + offset
			dayfirst = daylast % 7
			if dayfirst == 0 then
				dayfirst = 7
			end
		end
	else
		if offset &lt; 0 or (offset == 0 and not operation.include) then
			offset = offset + 7
		end
		if count then
			datefrom = date + offset
		else
			dayfirst = date.day + offset
			daylast = date.monthdays
		end
	end
	if not count then
		if daylast &lt; dayfirst then
			return list
		end
		count = floor((daylast - dayfirst)/7) + 1
		datefrom = Date(date, {day = dayfirst})
	end
	for i = 1, count do
		if not datefrom then break end  -- exceeds date limits
		list[i] = datefrom
		datefrom = datefrom + 7
	end
	return list
end

-- A table to get the current date/time (UTC), but only if needed.
local current = setmetatable({}, {
	__index = function (self, key)
		local d = os.date('!*t')
		self.year = d.year
		self.month = d.month
		self.day = d.day
		self.hour = d.hour
		self.minute = d.min
		self.second = d.sec
		return rawget(self, key)
	end })

local function extract_date(newdate, text)
	-- Parse the date/time in text and return n, o where
	--   n = table of numbers with date/time fields
	--   o = table of options for AM/PM or AD/BC or format, if any
	-- or return nothing if date is known to be invalid.
	-- Caller determines if the values in n are valid.
	-- A year must be positive ('1' to '9999'); use 'BC' for BC.
	-- In a y-m-d string, the year must be four digits to avoid ambiguity
	-- ('0001' to '9999'). The only way to enter year &lt;= 0 is by specifying
	-- the date as three numeric parameters like ymd Date(-1, 1, 1).
	-- Dates of form d/m/y, m/d/y, y/m/d are rejected as potentially ambiguous.
	local date, options = {}, {}
	if text:sub(-1) == 'Z' then
		-- Extract date/time from a Wikidata timestamp.
		-- The year can be 1 to 16 digits but this module handles 1 to 4 digits only.
		-- Examples: '+2016-06-21T14:30:00Z', '-0000000180-00-00T00:00:00Z'.
		local sign, y, m, d, H, M, S = text:match('^([+%-])(%d+)%-(%d%d)%-(%d%d)T(%d%d):(%d%d):(%d%d)Z$')
		if sign then
			y = tonumber(y)
			if sign == '-' and y &gt; 0 then
				y = -y
			end
			if y &lt;= 0 then
				options.era = 'BCE'
			end
			date.year = y
			m = tonumber(m)
			d = tonumber(d)
			H = tonumber(H)
			M = tonumber(M)
			S = tonumber(S)
			if m == 0 then
				newdate.partial = true
				return date, options
			end
			date.month = m
			if d == 0 then
				newdate.partial = true
				return date, options
			end
			date.day = d
			if H &gt; 0 or M &gt; 0 or S &gt; 0 then
				date.hour = H
				date.minute = M
				date.second = S
			end
			return date, options
		end
		return
	end
	local function extract_ymd(item)
		-- Called when no day or month has been set.
		local y, m, d = item:match('^(%d%d%d%d)%-(%w+)%-(%d%d?)$')
		if y then
			if date.year then
				return
			end
			if m:match('^%d%d?$') then
				m = tonumber(m)
			else
				m = month_number(m)
			end
			if m then
				date.year = tonumber(y)
				date.month = m
				date.day = tonumber(d)
				return true
			end
		end
	end
	local function extract_day_or_year(item)
		-- Called when a day would be valid, or
		-- when a year would be valid if no year has been set and partial is set.
		local number, suffix = item:match('^(%d%d?%d?%d?)(.*)$')
		if number then
			local n = tonumber(number)
			if #number &lt;= 2 and n &lt;= 31 then
				suffix = suffix:lower()
				if suffix == '' or suffix == 'st' or suffix == 'nd' or suffix == 'rd' or suffix == 'th' then
					date.day = n
					return true
				end
			elseif suffix == '' and newdate.partial and not date.year then
				date.year = n
				return true
			end
		end
	end
	local function extract_month(item)
		-- A month must be given as a name or abbreviation; a number could be ambiguous.
		local m = month_number(item)
		if m then
			date.month = m
			return true
		end
	end
	local function extract_time(item)
		local h, m, s = item:match('^(%d%d?):(%d%d)(:?%d*)$')
		if date.hour or not h then
			return
		end
		if s ~= '' then
			s = s:match('^:(%d%d)$')
			if not s then
				return
			end
		end
		date.hour = tonumber(h)
		date.minute = tonumber(m)
		date.second = tonumber(s)  -- nil if empty string
		return true
	end
	local item_count = 0
	local index_time
	local function set_ampm(item)
		local H = date.hour
		if H and not options.am and index_time + 1 == item_count then
			options.am = ampm_options[item]  -- caller checked this is not nil
			if item:match('^[Aa]') then
				if not (1 &lt;= H and H &lt;= 12) then
					return
				end
				if H == 12 then
					date.hour = 0
				end
			else
				if not (1 &lt;= H and H &lt;= 23) then
					return
				end
				if H &lt;= 11 then
					date.hour = H + 12
				end
			end
			return true
		end
	end
	for item in text:gsub(',', ' '):gsub('&amp;nbsp;', ' '):gmatch('%S+') do
		item_count = item_count + 1
		if era_text[item] then
			-- Era is accepted in peculiar places.
			if options.era then
				return
			end
			options.era = item
		elseif ampm_options[item] then
			if not set_ampm(item) then
				return
			end
		elseif item:find(':', 1, true) then
			if not extract_time(item) then
				return
			end
			index_time = item_count
		elseif date.day and date.month then
			if date.year then
				return  -- should be nothing more so item is invalid
			end
			if not item:match('^(%d%d?%d?%d?)$') then
				return
			end
			date.year = tonumber(item)
		elseif date.day then
			if not extract_month(item) then
				return
			end
		elseif date.month then
			if not extract_day_or_year(item) then
				return
			end
		elseif extract_month(item) then
			options.format = 'mdy'
		elseif extract_ymd(item) then
			options.format = 'ymd'
		elseif extract_day_or_year(item) then
			if date.day then
				options.format = 'dmy'
			end
		else
			return
		end
	end
	if not date.year or date.year == 0 then
		return
	end
	local era = era_text[options.era]
	if era and era.isbc then
		date.year = 1 - date.year
	end
	return date, options
end

local function date_add_sub(lhs, rhs, is_sub)
	-- Return a new date from calculating (lhs + rhs) or (lhs - rhs),
	-- or return nothing if invalid.
	-- The result is nil if the calculated date exceeds allowable limits.
	-- Caller ensures that lhs is a date; its properties are copied for the new date.
	if lhs.partial then
		-- Adding to a partial is not supported.
		-- Can subtract a date or partial from a partial, but this is not called for that.
		return
	end
	local function is_prefix(text, word, minlen)
		local n = #text
		return (minlen or 1) &lt;= n and n &lt;= #word and text == word:sub(1, n)
	end
	local function do_days(n)
		local forcetime, jd
		if floor(n) == n then
			jd = lhs.jd
		else
			forcetime = not lhs.hastime
			jd = lhs.jdz
		end
		jd = jd + (is_sub and -n or n)
		if forcetime then
			jd = tostring(jd)
			if not jd:find('.', 1, true) then
				jd = jd .. '.0'
			end
		end
		return Date(lhs, 'juliandate', jd)
	end
	if type(rhs) == 'number' then
		-- Add/subtract days, including fractional days.
		return do_days(rhs)
	end
	if type(rhs) == 'string' then
		-- rhs is a single component like '26m' or '26 months' (with optional sign).
		-- Fractions like '3.25d' are accepted for the units which are handled as days.
		local sign, numstr, id = rhs:match('^%s*([+-]?)([%d%.]+)%s*(%a+)$')
		if sign then
			if sign == '-' then
				is_sub = not (is_sub and true or false)
			end
			local y, m, days
			local num = tonumber(numstr)
			if not num then
				return
			end
			id = id:lower()
			if is_prefix(id, 'years') then
				y = num
				m = 0
			elseif is_prefix(id, 'months') then
				y = floor(num / 12)
				m = num % 12
			elseif is_prefix(id, 'weeks') then
				days = num * 7
			elseif is_prefix(id, 'days') then
				days = num
			elseif is_prefix(id, 'hours') then
				days = num / 24
			elseif is_prefix(id, 'minutes', 3) then
				days = num / (24 * 60)
			elseif is_prefix(id, 'seconds') then
				days = num / (24 * 3600)
			else
				return
			end
			if days then
				return do_days(days)
			end
			if numstr:find('.', 1, true) then
				return
			end
			if is_sub then
				y = -y
				m = -m
			end
			assert(-11 &lt;= m and m &lt;= 11)
			y = lhs.year + y
			m = lhs.month + m
			if m &gt; 12 then
				y = y + 1
				m = m - 12
			elseif m &lt; 1 then
				y = y - 1
				m = m + 12
			end
			local d = math.min(lhs.day, days_in_month(y, m, lhs.calendar))
			return Date(lhs, y, m, d)
		end
	end
	if is_diff(rhs) then
		local days = rhs.age_days
		if (is_sub or false) ~= (rhs.isnegative or false) then
			days = -days
		end
		return lhs + days
	end
end

local full_date_only = {
	dayabbr = true,
	dayname = true,
	dow = true,
	dayofweek = true,
	dowiso = true,
	dayofweekiso = true,
	dayofyear = true,
	gsd = true,
	juliandate = true,
	jd = true,
	jdz = true,
	jdnoon = true,
}

-- Metatable for a date's calculated fields.
local datemt = {
	__index = function (self, key)
		if rawget(self, 'partial') then
			if full_date_only[key] then return end
			if key == 'monthabbr' or key == 'monthdays' or key == 'monthname' then
				if not self.month then return end
			end
		end
		local value
		if key == 'dayabbr' then
			value = day_info[self.dow][1]
		elseif key == 'dayname' then
			value = day_info[self.dow][2]
		elseif key == 'dow' then
			value = (self.jdnoon + 1) % 7  -- day-of-week 0=Sun to 6=Sat
		elseif key == 'dayofweek' then
			value = self.dow
		elseif key == 'dowiso' then
			value = (self.jdnoon % 7) + 1  -- ISO day-of-week 1=Mon to 7=Sun
		elseif key == 'dayofweekiso' then
			value = self.dowiso
		elseif key == 'dayofyear' then
			local first = Date(self.year, 1, 1, self.calendar).jdnoon
			value = self.jdnoon - first + 1  -- day-of-year 1 to 366
		elseif key == 'era' then
			-- Era text (never a negative sign) from year and options.
			value = get_era_for_year(self.options.era, self.year)
		elseif key == 'format' then
			value = self.options.format or 'dmy'
		elseif key == 'gsd' then
			-- GSD = 1 from 00:00:00 to 23:59:59 on 1 January 1 AD Gregorian calendar,
			-- which is from jd 1721425.5 to 1721426.49999.
			value = floor(self.jd - 1721424.5)
		elseif key == 'juliandate' or key == 'jd' or key == 'jdz' then
			local jd, jdz = julian_date(self)
			rawset(self, 'juliandate', jd)
			rawset(self, 'jd', jd)
			rawset(self, 'jdz', jdz)
			return key == 'jdz' and jdz or jd
		elseif key == 'jdnoon' then
			-- Julian date at noon (an integer) on the calendar day when jd occurs.
			value = floor(self.jd + 0.5)
		elseif key == 'isleapyear' then
			value = is_leap_year(self.year, self.calendar)
		elseif key == 'monthabbr' then
			value = month_info[self.month][1]
		elseif key == 'monthdays' then
			value = days_in_month(self.year, self.month, self.calendar)
		elseif key == 'monthname' then
			value = month_info[self.month][2]
		end
		if value ~= nil then
			rawset(self, key, value)
			return value
		end
	end,
}

-- Date operators.
local function mt_date_add(lhs, rhs)
	if not is_date(lhs) then
		lhs, rhs = rhs, lhs  -- put date on left (it must be a date for this to have been called)
	end
	return date_add_sub(lhs, rhs)
end

local function mt_date_sub(lhs, rhs)
	if is_date(lhs) then
		if is_date(rhs) then
			return DateDiff(lhs, rhs)
		end
		return date_add_sub(lhs, rhs, true)
	end
end

local function mt_date_concat(lhs, rhs)
	return tostring(lhs) .. tostring(rhs)
end

local function mt_date_tostring(self)
	return self:text()
end

local function mt_date_eq(lhs, rhs)
	-- Return true if dates identify same date/time where, for example,
	-- Date(-4712, 1, 1, 'Julian') == Date(-4713, 11, 24, 'Gregorian') is true.
	-- This is called only if lhs and rhs have the same type and the same metamethod.
	if lhs.partial or rhs.partial then
		-- One date is partial; the other is a partial or a full date.
		-- The months may both be nil, but must be the same.
		return lhs.year == rhs.year and lhs.month == rhs.month and lhs.calendar == rhs.calendar
	end
	return lhs.jdz == rhs.jdz
end

local function mt_date_lt(lhs, rhs)
	-- Return true if lhs &lt; rhs, for example,
	-- Date('1 Jan 2016') &lt; Date('06:00 1 Jan 2016') is true.
	-- This is called only if lhs and rhs have the same type and the same metamethod.
	if lhs.partial or rhs.partial then
		-- One date is partial; the other is a partial or a full date.
		if lhs.calendar ~= rhs.calendar then
			return lhs.calendar == 'Julian'
		end
		if lhs.partial then
			lhs = lhs.partial.first
		end
		if rhs.partial then
			rhs = rhs.partial.first
		end
	end
	return lhs.jdz &lt; rhs.jdz
end

--[[ Examples of syntax to construct a date:
Date(y, m, d, 'julian')             default calendar is 'gregorian'
Date(y, m, d, H, M, S, 'julian')
Date('juliandate', jd, 'julian')    if jd contains &quot;.&quot; text output includes H:M:S
Date('currentdate')
Date('currentdatetime')
Date('1 April 1995', 'julian')      parse date from text
Date('1 April 1995 AD', 'julian')   using an era sets a flag to do the same for output
Date('04:30:59 1 April 1995', 'julian')
Date(date)                          copy of an existing date
Date(date, t)                       same, updated with y,m,d,H,M,S fields from table t
Date(t)                       		date with y,m,d,H,M,S fields from table t
]]
function Date(...)  -- for forward declaration above
	-- Return a table holding a date assuming a uniform calendar always applies
	-- (proleptic Gregorian calendar or proleptic Julian calendar), or
	-- return nothing if date is invalid.
	-- A partial date has a valid year, however its month may be nil, and
	-- its day and time fields are nil.
	-- Field partial is set to false (if a full date) or a table (if a partial date).
	local calendars = { julian = 'Julian', gregorian = 'Gregorian' }
	local newdate = {
		_id = uniq,
		calendar = 'Gregorian',  -- default is Gregorian calendar
		hastime = false,  -- true if input sets a time
		hour = 0,  -- always set hour/minute/second so don't have to handle nil
		minute = 0,
		second = 0,
		options = {},
		list = _date_list,
		text = _date_text,
	}
	local argtype, datetext, is_copy, jd_number, tnums
	local numindex = 0
	local numfields = { 'year', 'month', 'day', 'hour', 'minute', 'second' }
	local numbers = {}
	for _, v in ipairs({...}) do
		v = strip_to_nil(v)
		local vlower = type(v) == 'string' and v:lower() or nil
		if v == nil then
			-- Ignore empty arguments after stripping so modules can directly pass template parameters.
		elseif calendars[vlower] then
			newdate.calendar = calendars[vlower]
		elseif vlower == 'partial' then
			newdate.partial = true
		elseif vlower == 'fix' then
			newdate.want_fix = true
		elseif is_date(v) then
			-- Copy existing date (items can be overridden by other arguments).
			if is_copy or tnums then
				return
			end
			is_copy = true
			newdate.calendar = v.calendar
			newdate.partial = v.partial
			newdate.hastime = v.hastime
			newdate.options = v.options
			newdate.year = v.year
			newdate.month = v.month
			newdate.day = v.day
			newdate.hour = v.hour
			newdate.minute = v.minute
			newdate.second = v.second
		elseif type(v) == 'table' then
			if tnums then
				return
			end
			tnums = {}
			local tfields = { year=1, month=1, day=1, hour=2, minute=2, second=2 }
			for tk, tv in pairs(v) do
				if tfields[tk] then
					tnums[tk] = tonumber(tv)
				end
				if tfields[tk] == 2 then
					newdate.hastime = true
				end
			end
		else
			local num = tonumber(v)
			if not num and argtype == 'setdate' and numindex == 1 then
				num = month_number(v)
			end
			if num then
				if not argtype then
					argtype = 'setdate'
				end
				if argtype == 'setdate' and numindex &lt; 6 then
					numindex = numindex + 1
					numbers[numfields[numindex]] = num
				elseif argtype == 'juliandate' and not jd_number then
					jd_number = num
					if type(v) == 'string' then
						if v:find('.', 1, true) then
							newdate.hastime = true
						end
					elseif num ~= floor(num) then
						-- The given value was a number. The time will be used
						-- if the fractional part is nonzero.
						newdate.hastime = true
					end
				else
					return
				end
			elseif argtype then
				return
			elseif type(v) == 'string' then
				if v == 'currentdate' or v == 'currentdatetime' or v == 'juliandate' then
					argtype = v
				else
					argtype = 'datetext'
					datetext = v
				end
			else
				return
			end
		end
	end
	if argtype == 'datetext' then
		if tnums or not set_date_from_numbers(newdate, extract_date(newdate, datetext)) then
			return
		end
	elseif argtype == 'juliandate' then
		newdate.partial = nil
		newdate.jd = jd_number
		if not set_date_from_jd(newdate) then
			return
		end
	elseif argtype == 'currentdate' or argtype == 'currentdatetime' then
		newdate.partial = nil
		newdate.year = current.year
		newdate.month = current.month
		newdate.day = current.day
		if argtype == 'currentdatetime' then
			newdate.hour = current.hour
			newdate.minute = current.minute
			newdate.second = current.second
			newdate.hastime = true
		end
		newdate.calendar = 'Gregorian'  -- ignore any given calendar name
	elseif argtype == 'setdate' then
		if tnums or not set_date_from_numbers(newdate, numbers) then
			return
		end
	elseif not (is_copy or tnums) then
		return
	end
	if tnums then
		newdate.jd = nil  -- force recalculation in case jd was set before changes from tnums
		if not set_date_from_numbers(newdate, tnums) then
			return
		end
	end
	if newdate.partial then
		local year = newdate.year
		local month = newdate.month
		local first = Date(year, month or 1, 1, newdate.calendar)
		month = month or 12
		local last = Date(year, month, days_in_month(year, month), newdate.calendar)
		newdate.partial = { first = first, last = last }
	else
		newdate.partial = false  -- avoid index lookup
	end
	setmetatable(newdate, datemt)
	local readonly = {}
	local mt = {
		__index = newdate,
		__newindex = function(t, k, v) error('date.' .. tostring(k) .. ' is read-only', 2) end,
		__add = mt_date_add,
		__sub = mt_date_sub,
		__concat = mt_date_concat,
		__tostring = mt_date_tostring,
		__eq = mt_date_eq,
		__lt = mt_date_lt,
	}
	return setmetatable(readonly, mt)
end

local function _diff_age(diff, code, options)
	-- Return a tuple of integer values from diff as specified by code, except that
	-- each integer may be a list of two integers for a diff with a partial date, or
	-- return nil if the code is not supported.
	-- If want round, the least significant unit is rounded to nearest whole unit.
	-- For a duration, an extra day is added.
	local wantround, wantduration, wantrange
	if type(options) == 'table' then
		wantround = options.round
		wantduration = options.duration
		wantrange = options.range
	else
		wantround = options
	end
	if not is_diff(diff) then
		local f = wantduration and 'duration' or 'age'
		error(f .. ': need a date difference (use &quot;diff:' .. f .. '()&quot; with a colon)', 2)
	end
	if diff.partial then
		-- Ignore wantround, wantduration.
		local function choose(v)
			if type(v) == 'table' then
				if not wantrange then
					-- Example: Date('partial', 2005) - Date('partial', 2001) gives
					-- diff.years = { 3, 4 } to show the range of possible results.
					-- If do not want a range, choose the second value as more expected.
					return v[2]
				end
			end
			return v
		end
		if code == 'ym' or code == 'ymd' then
			if not wantrange and diff.iszero then
				-- This avoids an unexpected result such as
				-- Date('partial', 2001) - Date('partial', 2001)
				-- giving diff = { years = 0, months = { 0, 11 } }
				-- which would be reported as 0 years and 11 months.
				return 0, 0
			end
			return choose(diff.partial.years), choose(diff.partial.months)
		end
		if code == 'y' then
			return choose(diff.partial.years)
		end
		return nil
	end
	local extra_days = wantduration and 1 or 0
	if code == 'wd' or code == 'w' or code == 'd' then
		local offset = wantround and 0.5 or 0
		local days = diff.age_days + extra_days
		if code == 'wd' or code == 'd' then
			days = floor(days + offset)
			if code == 'd' then
				return days
			end
			return floor(days/7), days % 7
		end
		return floor(days/7 + offset)
	end
	local H, M, S = diff.hours, diff.minutes, diff.seconds
	if code == 'dh' or code == 'dhm' or code == 'dhms' or code == 'h' or code == 'hm' or code == 'hms' then
		local days = floor(diff.age_days + extra_days)
		local inc_hour
		if wantround then
			if code == 'dh' or code == 'h' then
				if M &gt;= 30 then
					inc_hour = true
				end
			elseif code == 'dhm' or code == 'hm' then
				if S &gt;= 30 then
					M = M + 1
					if M &gt;= 60 then
						M = 0
						inc_hour = true
					end
				end
			else
				-- Nothing needed because S is an integer.
			end
			if inc_hour then
				H = H + 1
				if H &gt;= 24 then
					H = 0
					days = days + 1
				end
			end
		end
		if code == 'dh' or code == 'dhm' or code == 'dhms' then
			if code == 'dh' then
				return days, H
			elseif code == 'dhm' then
				return days, H, M
			else
				return days, H, M, S
			end
		end
		local hours = days * 24 + H
		if code == 'h' then
			return hours
		elseif code == 'hm' then
			return hours, M
		end
		return hours, M, S
	end
	if wantround then
		local inc_hour
		if code == 'ymdh' or code == 'ymwdh' then
			if M &gt;= 30 then
				inc_hour = true
			end
		elseif code == 'ymdhm' or code == 'ymwdhm' then
			if S &gt;= 30 then
				M = M + 1
				if M &gt;= 60 then
					M = 0
					inc_hour = true
				end
			end
		elseif code == 'ymd' or code == 'ymwd' or code == 'yd' or code == 'md' then
			if H &gt;= 12 then
				extra_days = extra_days + 1
			end
		end
		if inc_hour then
			H = H + 1
			if H &gt;= 24 then
				H = 0
				extra_days = extra_days + 1
			end
		end
	end
	local y, m, d = diff.years, diff.months, diff.days
	if extra_days &gt; 0 then
		d = d + extra_days
		if d &gt; 28 or code == 'yd' then
			-- Recalculate in case have passed a month.
			diff = diff.date1 + extra_days - diff.date2
			y, m, d = diff.years, diff.months, diff.days
		end
	end
	if code == 'ymd' then
		return y, m, d
	elseif code == 'yd' then
		if y &gt; 0 then
			-- It is known that diff.date1 &gt; diff.date2.
			diff = diff.date1 - (diff.date2 + (y .. 'y'))
		end
		return y, floor(diff.age_days)
	elseif code == 'md' then
		return y * 12 + m, d
	elseif code == 'ym' or code == 'm' then
		if wantround then
			if d &gt;= 16 then
				m = m + 1
				if m &gt;= 12 then
					m = 0
					y = y + 1
				end
			end
		end
		if code == 'ym' then
			return y, m
		end
		return y * 12 + m
	elseif code == 'ymw' then
		local weeks = floor(d/7)
		if wantround then
			local days = d % 7
			if days &gt; 3 or (days == 3 and H &gt;= 12) then
				weeks = weeks + 1
			end
		end
		return y, m, weeks
	elseif code == 'ymwd' then
		return y, m, floor(d/7), d % 7
	elseif code == 'ymdh' then
		return y, m, d, H
	elseif code == 'ymwdh' then
		return y, m, floor(d/7), d % 7, H
	elseif code == 'ymdhm' then
		return y, m, d, H, M
	elseif code == 'ymwdhm' then
		return y, m, floor(d/7), d % 7, H, M
	end
	if code == 'y' then
		if wantround and m &gt;= 6 then
			y = y + 1
		end
		return y
	end
	return nil
end

local function _diff_duration(diff, code, options)
	if type(options) ~= 'table' then
		options = { round = options }
	end
	options.duration = true
	return _diff_age(diff, code, options)
end

-- Metatable for some operations on date differences.
diffmt = {  -- for forward declaration above
	__concat = function (lhs, rhs)
		return tostring(lhs) .. tostring(rhs)
	end,
	__tostring = function (self)
		return tostring(self.age_days)
	end,
	__index = function (self, key)
		local value
		if key == 'age_days' then
			if rawget(self, 'partial') then
				local function jdz(date)
					return (date.partial and date.partial.first or date).jdz
				end
				value = jdz(self.date1) - jdz(self.date2)
			else
				value = self.date1.jdz - self.date2.jdz
			end
		end
		if value ~= nil then
			rawset(self, key, value)
			return value
		end
	end,
}

function DateDiff(date1, date2)  -- for forward declaration above
	-- Return a table with the difference between two dates (date1 - date2).
	-- The difference is negative if date1 is older than date2.
	-- Return nothing if invalid.
	-- If d = date1 - date2 then
	--     date1 = date2 + d
	-- If date1 &gt;= date2 and the dates have no H:M:S time specified then
	--     date1 = date2 + (d.years..'y') + (d.months..'m') + d.days
	-- where the larger time units are added first.
	-- The result of Date(2015,1,x) + '1m' is Date(2015,2,28) for
	-- x = 28, 29, 30, 31. That means, for example,
	--     d = Date(2015,3,3) - Date(2015,1,31)
	-- gives d.years, d.months, d.days = 0, 1, 3 (excluding date1).
	if not (is_date(date1) and is_date(date2) and date1.calendar == date2.calendar) then
		return
	end
	local isnegative = false
	local iszero = false
	if date1 &lt; date2 then
		isnegative = true
		date1, date2 = date2, date1
	elseif date1 == date2 then
		iszero = true
	end
	-- It is known that date1 &gt;= date2 (period is from date2 to date1).
	if date1.partial or date2.partial then
		-- Two partial dates might have timelines:
		---------------------A=================B--- date1 is from A to B inclusive
		--------C=======D-------------------------- date2 is from C to D inclusive
		-- date1 &gt; date2 iff A &gt; C (date1.partial.first &gt; date2.partial.first)
		-- The periods can overlap ('April 2001' - '2001'):
		-------------A===B------------------------- A=2001-04-01  B=2001-04-30
		--------C=====================D------------ C=2001-01-01  D=2001-12-31
		local function zdiff(date1, date2)
			local diff = date1 - date2
			if diff.isnegative then
				return { years = 0, months = 0 }
			end
			return diff
		end
		local function getdate(date, which)
			return date.partial and date.partial[which] or date
		end
		local maxdiff = zdiff(getdate(date1, 'last'), getdate(date2, 'first'))
		local mindiff = zdiff(getdate(date1, 'first'), getdate(date2, 'last'))
		local years, months
		if maxdiff.years == mindiff.years then
			years = maxdiff.years
			if maxdiff.months == mindiff.months then
				months = maxdiff.months
			else
				months = { mindiff.months, maxdiff.months }
			end
		else
			years = { mindiff.years, maxdiff.years }
		end
		return setmetatable({
			date1 = date1,
			date2 = date2,
			partial = { years = years, months = months },
			isnegative = isnegative,
			iszero = iszero,
			age = _diff_age,
			duration = _diff_duration,
		}, diffmt)
	end
	local y1, m1 = date1.year, date1.month
	local y2, m2 = date2.year, date2.month
	local years = y1 - y2
	local months = m1 - m2
	local d1 = date1.day + hms(date1)
	local d2 = date2.day + hms(date2)
	local days, time
	if d1 &gt;= d2 then
		days = d1 - d2
	else
		months = months - 1
		-- Get days in previous month (before the &quot;to&quot; date) given December has 31 days.
		local dpm = m1 &gt; 1 and days_in_month(y1, m1 - 1, date1.calendar) or 31
		if d2 &gt;= dpm then
			days = d1 - hms(date2)
		else
			days = dpm - d2 + d1
		end
	end
	if months &lt; 0 then
		years = years - 1
		months = months + 12
	end
	days, time = math.modf(days)
	local H, M, S = h_m_s(time)
	return setmetatable({
		date1 = date1,
		date2 = date2,
		partial = false,  -- avoid index lookup
		years = years,
		months = months,
		days = days,
		hours = H,
		minutes = M,
		seconds = S,
		isnegative = isnegative,
		iszero = iszero,
		age = _diff_age,
		duration = _diff_duration,
	}, diffmt)
end

return {
	_current = current,
	_Date = Date,
	_days_in_month = days_in_month,
}</text>
      <sha1>ah31oppw5dkh60f0e4ogqsw0fnkawdt</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Delink</title>
    <ns>828</ns>
    <id>38999128</id>
    <revision>
      <id>695173753</id>
      <parentid>617654635</parentid>
      <timestamp>2015-12-14T07:03:21Z</timestamp>
      <contributor>
        <username>The Earwig</username>
        <id>7418060</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Delink]]&quot;: [[WP:High-risk templates|Highly visible template]]: 55,000+ mainspace transclusions ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6545">-- This module de-links most wikitext.

require('Module:No globals')

local p = {}

local getArgs

local function delinkReversePipeTrick(s)
    if s:match(&quot;^%[%[|.*[|\n]&quot;) then -- Check for newlines or multiple pipes.
        return s
    else
        return s:match(&quot;%[%[|(.*)%]%]&quot;)
    end
end

local function delinkPipeTrick(s)
    local linkarea, display = &quot;&quot;, &quot;&quot;
    -- We need to deal with colons, brackets, and commas, per [[Help:Pipe trick]].
    
    -- First, remove the text before the first colon, if any.
    if s:match(&quot;:&quot;) then
        s = s:match(&quot;%[%[.-:(.*)|%]%]&quot;)
    -- If there are no colons, grab all of the text apart from the square brackets and the pipe.
    else
        s = s:match(&quot;%[%[(.*)|%]%]&quot;)
    end
    
    -- Next up, brackets and commas.
    if s:match(&quot;%(.-%)$&quot;) then -- Brackets trump commas.
        s = s:match(&quot;(.-) ?%(.-%)$&quot;)
    elseif s:match(&quot;,&quot;) then -- If there are no brackets, display only the text before the first comma.
        s = s:match(&quot;(.-),.*$&quot;)
    end
    return s
end

local function delinkWikilink(s)
    local result = s
    -- Deal with the reverse pipe trick.
    if result:match(&quot;%[%[|&quot;) then
        return delinkReversePipeTrick(result)
    end
    
    result = mw.uri.decode(result, &quot;PATH&quot;) -- decode percent-encoded entities. Leave underscores and plus signs.
    result = mw.text.decode(result, true) -- decode HTML entities.
    
    -- Check for bad titles. To do this we need to find the
    -- title area of the link, i.e. the part before any pipes.
    local titlearea
    if result:match(&quot;|&quot;) then -- Find if we're dealing with a piped link.
        titlearea = result:match(&quot;^%[%[(.-)|.*%]%]&quot;)
    else
        titlearea = result:match(&quot;^%[%[(.-)%]%]&quot;)
    end
    -- Check for bad characters.
    if mw.ustring.match(titlearea, &quot;[%[%]&lt;&gt;{}%%%c\n]&quot;) then
        return s
    end
    
    -- Check for categories, interwikis, and files.
    local colonprefix = result:match(&quot;%[%[(.-):.*%]%]&quot;) or &quot;&quot; -- Get the text before the first colon.
    local ns = mw.site.namespaces[colonprefix] -- see if this is a known namespace
    if mw.language.isKnownLanguageTag(colonprefix)
    or ( ns and ( ns.canonicalName == &quot;File&quot; or ns.canonicalName == &quot;Category&quot; ) ) then
        return &quot;&quot;
    end
    
    -- Remove the colon if the link is using the [[Help:Colon trick]].
    if result:match(&quot;%[%[:&quot;) then
        result = &quot;[[&quot; .. result:match(&quot;%[%[:(.*%]%])&quot;)
    end
    
    -- Deal with links using the [[Help:Pipe trick]].
    if mw.ustring.match(result, &quot;^%[%[[^|]*|%]%]&quot;) then
        return delinkPipeTrick(result)
    end
    
    -- Find the display area of the wikilink
    if result:match(&quot;|&quot;) then -- Find if we're dealing with a piped link.
        result = result:match(&quot;^%[%[.-|(.+)%]%]&quot;)
        -- Remove new lines from the display of multiline piped links,
        -- where the pipe is before the first new line.
        result = result:gsub(&quot;\n&quot;, &quot;&quot;)
    else
        result = result:match(&quot;^%[%[(.-)%]%]&quot;)
    end

    return result
end

local function delinkURL(s)
    -- Assume we have already delinked internal wikilinks, and that
    -- we have been passed some text between two square brackets [foo].
    
    -- If the text contains a line break it is not formatted as a URL, regardless of other content.
    if s:match(&quot;\n&quot;) then
        return s
    end
    
    -- Check if the text has a valid URL prefix and at least one valid URL character.
    local valid_url_prefixes = {&quot;//&quot;, &quot;http://&quot;, &quot;https://&quot;, &quot;ftp://&quot;, &quot;gopher://&quot;, &quot;mailto:&quot;, &quot;news:&quot;, &quot;irc://&quot;} 
    local url_prefix
    for i,v in ipairs(valid_url_prefixes) do
        if mw.ustring.match(s, '^%[' .. v ..'[^&quot;%s].*%]' ) then
            url_prefix = v
            break
        end
    end
    
    -- Get display text
    if not url_prefix then
        return s
    end
    s = s:match(&quot;^%[&quot; .. url_prefix .. &quot;(.*)%]&quot;) -- Grab all of the text after the URL prefix and before the final square bracket.
    s = s:match('^.-([&quot;&lt;&gt; ].*)') or &quot;&quot; -- Grab all of the text after the first URL separator character (&quot;&lt;&gt; ).
    s = mw.ustring.match(s, &quot;^%s*(%S.*)$&quot;) or &quot;&quot; -- If the separating character was a space, trim it off.
    
    local s_decoded = mw.text.decode(s, true)
    if mw.ustring.match(s_decoded, &quot;%c&quot;) then
        return s
    else    
        return s_decoded
    end
end

local function delinkLinkClass(s, pattern, delinkFunction)
    if not type(s) == &quot;string&quot; then
        error(&quot;Attempt to de-link non-string input.&quot;, 2)
    end
    if not ( type(pattern) == &quot;string&quot; and mw.ustring.sub(pattern, 1, 1) == &quot;^&quot; ) then
        error('Invalid pattern detected. Patterns must begin with &quot;^&quot;.', 2)
    end
    -- Iterate over the text string, and replace any matched text. using the 
    -- delink function. We need to iterate character by character rather 
    -- than just use gsub, otherwise nested links aren't detected properly.
    local result = &quot;&quot;
    while s ~= '' do
        -- Replace text using one iteration of gsub.
        s = mw.ustring.gsub(s, pattern, delinkFunction, 1)
        -- Append the left-most character to the result string.
        result = result .. mw.ustring.sub(s, 1, 1)
        s = mw.ustring.sub(s, 2, -1)
    end
    return result
end

function p._delink(args)
    local text = args[1] or &quot;&quot;
    if args.refs == &quot;yes&quot; then
        -- Remove any [[Help:Strip markers]] representing ref tags. In most situations 
        -- this is not a good idea - only use it if you know what you are doing!
        text = mw.ustring.gsub(text, &quot;UNIQ%w*%-ref%-%d*%-QINU&quot;, &quot;&quot;)
    end
    if not (args.comments == &quot;no&quot;) then
        text = text:gsub(&quot;&lt;!%-%-.-%-%-&gt;&quot;, &quot;&quot;) -- Remove html comments.
    end
    if not (args.wikilinks == &quot;no&quot;) then
        text = delinkLinkClass(text, &quot;^%[%[.-%]%]&quot;, delinkWikilink) -- De-link wikilinks.
    end
    if not (args.urls == &quot;no&quot;) then
        text = delinkLinkClass(text, &quot;^%[.-%]&quot;, delinkURL) -- De-link URLs.
    end
    if not (args.whitespace == &quot;no&quot;) then
        -- Replace single new lines with a single space, but leave double new lines
        -- and new lines only containing spaces or tabs before a second new line.
        text = mw.ustring.gsub(text, &quot;([^\n \t][ \t]*)\n([ \t]*[^\n \t])&quot;, &quot;%1 %2&quot;)
        text = text:gsub(&quot;[ \t]+&quot;, &quot; &quot;) -- Remove extra tabs and spaces.
    end
    return text
end

function p.delink(frame)
    if not getArgs then
    	getArgs = require('Module:Arguments').getArgs
    end
    return p._delink(getArgs(frame, {wrappers = 'Template:Delink'}))
end

return p</text>
      <sha1>9uut60bk5e8nnvyxo8jbf7qt3b17a4v</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Effective protection expiry</title>
    <ns>828</ns>
    <id>48785459</id>
    <revision>
      <id>744227741</id>
      <parentid>740797535</parentid>
      <timestamp>2016-10-13T22:30:40Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>don't error if the page isn't under PC</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1494">local p = {}

-- Returns the expiry of a restriction of an action on a given title, or unknown if it cannot be known.
-- If no title is specified, the title of the page being displayed is used.
function p._main(action, pagename)
	local title
	if type(pagename) == 'table' and pagename.prefixedText then
		title = pagename
	elseif pagename then
		title = mw.title.new(pagename)
	else
		title = mw.title.getCurrentTitle()
	end
	pagename = title.prefixedText
	if action == 'autoreview' then
		local stabilitySettings = mw.ext.FlaggedRevs.getStabilitySettings(title)
		return stabilitySettings and stabilitySettings.expiry or 'unknown'
	elseif action ~= 'edit' and action ~= 'move' and action ~= 'create' and action ~= 'upload' then
		error( 'First parameter must be one of edit, move, create, upload, autoreview', 2 )
	end
	local rawExpiry = mw.getCurrentFrame():callParserFunction('PROTECTIONEXPIRY', action, pagename)
	if rawExpiry == 'infinity' then
		return 'infinity'
	elseif rawExpiry == '' then
		return 'unknown'
	else
		local year, month, day, hour, minute, second = rawExpiry:match(
			'^(%d%d%d%d)(%d%d)(%d%d)(%d%d)(%d%d)(%d%d)$'
		)
		if year then
			return string.format(
				'%s-%s-%sT%s:%s:%s',
				year, month, day, hour, minute, second
			)
		else
			error('internal error in Module:Effective protection expiry; malformed expiry timestamp')
		end
	end
end

setmetatable(p, { __index = function(t, k)
	return function(frame)
		return t._main(k, frame.args[1])
	end
end })

return p</text>
      <sha1>i1wms02y1w048cq6uttka18a5pjzp63</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Effective protection level</title>
    <ns>828</ns>
    <id>41617327</id>
    <revision>
      <id>713934935</id>
      <parentid>708059351</parentid>
      <timestamp>2016-04-06T17:04:11Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>handle extendedconfirmed</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3018">local p = {}

-- Returns the permission required to perform a given action on a given title.
-- If no title is specified, the title of the page being displayed is used.
function p._main(action, pagename)
	local title
	if type(pagename) == 'table' and pagename.prefixedText then
		title = pagename
	elseif pagename then
		title = mw.title.new(pagename)
	else
		title = mw.title.getCurrentTitle()
	end
	pagename = title.prefixedText
	if action == 'autoreview' then
		local level = mw.ext.FlaggedRevs.getStabilitySettings(title)
		level = level and level.autoreview
		if level == 'review' then
			return 'reviewer'
		elseif level ~= '' then
			return level
		else
			return nil -- not '*'. a page not being PC-protected is distinct from it being PC-protected with anyone able to review. also not '', as that would mean PC-protected but nobody can review
		end
	elseif action ~= 'edit' and action ~= 'move' and action ~= 'create' and action ~= 'upload' then
		error( 'First parameter must be one of edit, move, create, upload, autoreview', 2 )
	end
	if title.namespace == 8 then -- MediaWiki namespace
		return 'sysop'
	elseif title.namespace == 2 and title.isSubpage and ( title.contentModel == 'javascript' or title.contentModel == 'css' ) then -- user JS or CSS page
		return 'sysop'
	end
	local level = title.protectionLevels[action] and title.protectionLevels[action][1]
	if level == 'sysop' or level == 'editprotected' then
		return 'sysop'
	elseif title.cascadingProtection.restrictions[action] and title.cascadingProtection.restrictions[action][1] then -- used by a cascading-protected page
		return 'sysop'
	elseif level == 'templateeditor' then
		return 'templateeditor'
	elseif action == 'move' then
		local blacklistentry = mw.ext.TitleBlacklist.test('edit', pagename) -- Testing action edit is correct, since this is for the source page. The target page name gets tested with action move.
		if blacklistentry and not blacklistentry.params.autoconfirmed then
			return 'templateeditor'
		elseif title.namespace == 6 then
			return 'filemover'
		elseif level == 'extendedconfirmed' then
			return 'extendedconfirmed'
		else
			return 'autoconfirmed'
		end
	end
	local blacklistentry = mw.ext.TitleBlacklist.test(action, pagename)
	if blacklistentry then
		if not blacklistentry.params.autoconfirmed then
			return 'templateeditor'
		elseif level == 'extendedconfirmed' then
			return 'extendedconfirmed'
		else
			return 'autoconfirmed'
		end
	elseif level == 'editsemiprotected' then -- create-semiprotected pages return this for some reason
		return 'autoconfirmed'
	elseif level then
		return level
	elseif action == 'upload' then
		return 'autoconfirmed'
	elseif action == 'create' and title.namespace % 2 == 0 and title.namespace ~= 118 then -- You need to be registered, but not autoconfirmed, to create non-talk pages other than drafts
		return 'user'
	else
		return '*'
	end
end

setmetatable(p, { __index = function(t, k)
	return function(frame)
		return t._main(k, frame.args[1])
	end
end })

return p</text>
      <sha1>6hocqvqqlqw255k1l856h6hwlqsf6e1</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Error</title>
    <ns>828</ns>
    <id>38948927</id>
    <revision>
      <id>750709040</id>
      <parentid>636708920</parentid>
      <timestamp>2016-11-21T11:11:11Z</timestamp>
      <contributor>
        <username>Materialscientist</username>
        <id>7852030</id>
      </contributor>
      <minor/>
      <comment>Changed protection level for &quot;[[Module:Error]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1129">-- This module implements {{error}}.

local p = {}

local function _error(args)
    local tag = mw.ustring.lower(tostring(args.tag))

    -- Work out what html tag we should use.
    if not (tag == 'p' or tag == 'span' or tag == 'div') then
        tag = 'strong'
    end

    -- Generate the html.
    return tostring(mw.html.create(tag)
        :addClass('error')
        :wikitext(tostring(args.message or args[1] or error('no message specified', 2)))
    )
end

function p.error(frame)
    local args
    if type(frame.args) == 'table' then
        -- We're being called via #invoke. The args are passed through to the module
        -- from the template page, so use the args that were passed into the template.
        args = frame.args
    else
        -- We're being called from another module or from the debug console, so assume
        -- the args are passed in directly.
        args = frame
    end
    -- if the message parameter is present but blank, change it to nil so that Lua will
    -- consider it false.
    if args.message == &quot;&quot; then
        args.message = nil
    end
    return _error(args)
end

return p</text>
      <sha1>swpvwjcdmj2mkkmx9f7rbsdrfsnmirh</sha1>
    </revision>
  </page>
  <page>
    <title>Module:File link</title>
    <ns>828</ns>
    <id>42903140</id>
    <revision>
      <id>638642222</id>
      <parentid>638639021</parentid>
      <timestamp>2014-12-18T14:05:07Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>when calling this from wikitext use a more readable error message for missing file parameters</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2544">-- This module provides a library for formatting file wikilinks.

local yesno = require('Module:Yesno')
local checkType = require('libraryUtil').checkType

local p = {}

function p._main(args)
	checkType('_main', 1, args, 'table')

	-- This is basically libraryUtil.checkTypeForNamedArg, but we are rolling our
	-- own function to get the right error level.
	local function checkArg(key, val, level)
		if type(val) ~= 'string' then
			error(string.format(
				&quot;type error in '%s' parameter of '_main' (expected string, got %s)&quot;,
				key, type(val)
			), level)
		end
	end

	local ret = {}

	-- Adds a positional parameter to the buffer.
	local function addPositional(key)
		local val = args[key]
		if not val then
			return nil
		end
		checkArg(key, val, 4)
		ret[#ret + 1] = val
	end

	-- Adds a named parameter to the buffer. We assume that the parameter name
	-- is the same as the argument key.
	local function addNamed(key)
		local val = args[key]
		if not val then
			return nil
		end
		checkArg(key, val, 4)
		ret[#ret + 1] = key .. '=' .. val
	end

	-- Filename
	checkArg('file', args.file, 3)
	ret[#ret + 1] = 'File:' .. args.file

	-- Format
	if args.format then
		checkArg('format', args.format)
		if args.formatfile then
			checkArg('formatfile', args.formatfile)
			ret[#ret + 1] = args.format .. '=' .. args.formatfile
		else
			ret[#ret + 1] = args.format
		end
	end

	-- Border
	if yesno(args.border) then
		ret[#ret + 1] = 'border'
	end

	addPositional('location')
	addPositional('alignment')
	addPositional('size')
	addNamed('upright')
	addNamed('link')
	addNamed('alt')
	addNamed('page')
	addNamed('class')
	addNamed('lang')
	addNamed('start')
	addNamed('end')
	addNamed('thumbtime')
	addPositional('caption')

	return string.format('[[%s]]', table.concat(ret, '|'))
end

function p.main(frame)
	local origArgs = require('Module:Arguments').getArgs(frame, {
		wrappers = 'Template:File link'
	})
	if not origArgs.file then
		error(&quot;'file' parameter missing from [[Template:File link]]&quot;, 0)
	end

	-- Copy the arguments that were passed to a new table to avoid looking up
	-- every possible parameter in the frame object.
	local args = {}
	for k, v in pairs(origArgs) do
		-- Make _BLANK a special argument to add a blank parameter. For use in
		-- conditional templates etc. it is useful for blank arguments to be
		-- ignored, but we still need a way to specify them so that we can do
		-- things like [[File:Example.png|link=]].
		if v == '_BLANK' then
			v = ''
		end
		args[k] = v
	end
	return p._main(args)
end

return p</text>
      <sha1>bzc22v133v9z5yc4aisazripn6l94p8</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Footnotes</title>
    <ns>828</ns>
    <id>38969239</id>
    <revision>
      <id>801298978</id>
      <parentid>790056011</parentid>
      <timestamp>2017-09-18T21:30:40Z</timestamp>
      <contributor>
        <username>Trappist the monk</username>
        <id>10289486</id>
      </contributor>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5830">f = {
	args_default = {
		bracket_left = &quot;&quot;,
		bracket_right = &quot;&quot;,
		bracket_year_left = &quot;&quot;,
		bracket_year_right = &quot;&quot;,
		postscript = &quot;&quot;,
		page = &quot;&quot;,
		pages = &quot;&quot;,
		location = &quot;&quot;,
		page_sep = &quot;, p.&amp;nbsp;&quot;,
		pages_sep = &quot;, pp.&amp;nbsp;&quot;,
		ref = &quot;&quot;,
		P1 = &quot;&quot;,
		P2 = &quot;&quot;,
		P3 = &quot;&quot;,
		P4 = &quot;&quot;,
		P5 = &quot;&quot;
	}
};

function trim( str )
	if str == nil then
		return nil;
	end
	return str:match( &quot;^%s*(.-)%s*$&quot;);
end    

local function is_year (param)
	return param:match ('^%d%d%d%d?%l?$') or param:match ('^n%.d%.%l?$') or param:match ('^nd%l?$') or param:match ('^c%. %d%d%d%d?%l?$') or param:match ('^%d%d%d%d%d%d%d%d%l?$');
end


function core( args )
	local result;

	if args.P5 ~= &quot;&quot; then
		if is_year (args.P5) then
			result = table.concat ({args.P1, ' et al. ', args.bracket_year_left, args.P5, args.bracket_year_right});
		else
			args.P5 = '';														-- when P5 not a year don't include in anchor
			result = table.concat ({args.P1, ' et al.'});						-- and don't render it
		end

	elseif args.P4 ~= &quot;&quot; then
		if is_year (args.P4) then
			result = table.concat ({args.P1, ', ', args.P2, ' &amp;amp; ', args.P3, ' ', args.bracket_year_left, args.P4, args.bracket_year_right});	-- three names and a year
		else
			result = table.concat ({args.P1, ' et al.'});						-- four names
		end

	elseif args.P3 ~= &quot;&quot; then
		if is_year (args.P3) then
			result = table.concat ({args.P1, ' &amp;amp; ', args.P2, ' ', args.bracket_year_left, args.P3, args.bracket_year_right});	-- two names and a year
		else
			result = table.concat ({args.P1, ', ', args.P2, ' ', ' &amp;amp; ', args.P3});	-- three names
		end
			
	elseif args.P2 ~= &quot;&quot; then
		if is_year (args.P2) then
			result = table.concat ({args.P1, ' ', args.bracket_year_left, args.P2, args.bracket_year_right});	-- one name and year
		else
			result = table.concat ({args.P1, ' &amp;amp; ', args.P2});				-- two names
		end
		
	else
		result = args.P1;														-- one name
	end

	if ('.' == result:sub(-1)) and ('' == args.page) and ('' == args.pages) and ('' == args.location) then
		args.postscript = '';		-- prevent double periods when date is 'n.d.'
	end
	
	if args.ref ~= 'none' then
		if args.ref ~= &quot;&quot; then
			result = &quot;[[#&quot; .. mw.uri.anchorEncode(args.ref) .. &quot;|&quot; .. result .. &quot;]]&quot;;
		else
			result = &quot;[[#CITEREF&quot; .. mw.uri.anchorEncode(args.P1 .. args.P2 .. args.P3 .. args.P4 .. args.P5) .. &quot;|&quot; .. result .. &quot;]]&quot;;
		end
	end

	if args.page ~= &quot;&quot; then
		result = result .. args.page_sep .. args.page;
	elseif args.pages ~= &quot;&quot; then
		result = result .. args.pages_sep .. args.pages;
	end      

	if args.location ~= &quot;&quot; then
		result = result .. &quot;, &quot; .. args.location;
	end

	result = args.bracket_left .. result .. args.bracket_right .. args.postscript;
	return result;
end

function f.harvard_core( frame )
	local args = {};
	local pframe = frame:getParent();

	args.bracket_left = pframe.args.BracketLeft or &quot;&quot;;
	args.bracket_right = pframe.args.BracketRight or &quot;&quot;;
	args.bracket_year_left = pframe.args.BracketYearLeft or &quot;&quot;;
	args.bracket_year_right = pframe.args.BracketYearRight or &quot;&quot;;
	args.postscript = pframe.args.Postscript or &quot;&quot;;
	if 'none' == args.postscript then
		args.postscript = '';
	end

	args.page = pframe.args.Page or &quot;&quot;;
	args.pages = pframe.args.Pages or &quot;&quot;;
	args.location = pframe.args.Location or &quot;&quot;;
	args.page_sep = pframe.args.PageSep or &quot;&quot;;
	args.pages_sep = pframe.args.PagesSep or &quot;&quot;;
	args.ref = pframe.args.REF or &quot;{{{REF}}}&quot;;
	args.P1 = trim( pframe.args.P1 ) or &quot;&quot;;
	args.P2 = trim( pframe.args.P2 ) or &quot;&quot;;
	args.P3 = trim( pframe.args.P3 ) or &quot;&quot;;
	args.P4 = trim( pframe.args.P4 ) or &quot;&quot;;
	args.P5 = trim( pframe.args.P5 ) or &quot;&quot;;

	return core( args );
end

function f.harvard_citation( frame )
	local args = f.args_default;
	pframe = frame:getParent();

	args.bracket_left = &quot;(&quot;;
	args.bracket_right = &quot;)&quot;;
	args.page = pframe.args.p or pframe.args.page or &quot;&quot;;
	args.pages = pframe.args.pp or pframe.args.pages or &quot;&quot;;
	args.location = pframe.args.loc or &quot;&quot;;
	args.ref = pframe.args.ref or pframe.args.Ref or &quot;&quot;;
	args.P1 = trim( pframe.args[1] ) or &quot;&quot;;
	args.P2 = trim( pframe.args[2] ) or &quot;&quot;;
	args.P3 = trim( pframe.args[3] ) or &quot;&quot;;
	args.P4 = trim( pframe.args[4] ) or &quot;&quot;;
	args.P5 = trim( pframe.args[5] ) or &quot;&quot;;

	return core( args );
end

function f.harvard_citation_no_bracket( frame )
	local args = f.args_default;
	pframe = frame:getParent();

	args.page = pframe.args.p or pframe.args.page or &quot;&quot;;
	args.pages = pframe.args.pp or pframe.args.pages or &quot;&quot;;
	args.location = pframe.args.loc or &quot;&quot;;
	args.ref = pframe.args.ref or pframe.args.Ref or &quot;&quot;;
	args.P1 = trim( pframe.args[1] ) or &quot;&quot;;
	args.P2 = trim( pframe.args[2] ) or &quot;&quot;;
	args.P3 = trim( pframe.args[3] ) or &quot;&quot;;
	args.P4 = trim( pframe.args[4] ) or &quot;&quot;;
	args.P5 = trim( pframe.args[5] ) or &quot;&quot;;

	return core( args );
end

function f.sfn( frame )
	local args = f.args_default;
	for k, v in pairs( frame.args ) do											-- for {{sfnp}}, override default with values provided in the #invoke:
		args[k] = v;	   
	end
	
	pframe = frame:getParent();

	args.postscript = pframe.args.postscript or pframe.args.ps or &quot;.&quot;;
	if 'none' == args.postscript then
		args.postscript = '';
	end
	args.page = pframe.args.p or pframe.args.page or &quot;&quot;;
	args.pages = pframe.args.pp or pframe.args.pages or &quot;&quot;;
	args.location = pframe.args.loc or &quot;&quot;;
	args.ref = pframe.args.ref or pframe.args.Ref or &quot;&quot;;
	args.P1 = trim( pframe.args[1] ) or &quot;&quot;;
	args.P2 = trim( pframe.args[2] ) or &quot;&quot;;
	args.P3 = trim( pframe.args[3] ) or &quot;&quot;;
	args.P4 = trim( pframe.args[4] ) or &quot;&quot;;
	args.P5 = trim( pframe.args[5] ) or &quot;&quot;;

	local result = core( args );
	local name = &quot;FOOTNOTE&quot; .. args.P1 .. args.P2 .. 
	args.P3 .. args.P4 .. args.P5 .. args.page .. args.pages .. args.location;

	result = frame:extensionTag{ name = &quot;ref&quot;, args = {name=name}, content=result };

	return result;
end

return f;</text>
      <sha1>nuapsj7w21sgzxwemfxq4la2bnouwnf</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote</title>
    <ns>828</ns>
    <id>42498502</id>
    <revision>
      <id>779487706</id>
      <parentid>726656423</parentid>
      <timestamp>2017-05-09T05:20:32Z</timestamp>
      <contributor>
        <username>JJMC89</username>
        <id>24812038</id>
      </contributor>
      <comment>Add navigation-not-searchable class per [[Special:Permalink/779475248#Add navigation-not-searchable class|request]] (also see [[phab:T164781|T164781]])</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6703">--------------------------------------------------------------------------------
--                              Module:Hatnote                                --
--                                                                            --
-- This module produces hatnote links and links to related articles. It       --
-- implements the {{hatnote}} and {{format link}} meta-templates and includes --
-- helper functions for other Lua hatnote modules.                            --
--------------------------------------------------------------------------------

local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local mArguments -- lazily initialise [[Module:Arguments]]
local yesno -- lazily initialise [[Module:Yesno]]

local p = {}

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function getArgs(frame)
	-- Fetches the arguments from the parent frame. Whitespace is trimmed and
	-- blanks are removed.
	mArguments = require('Module:Arguments')
	return mArguments.getArgs(frame, {parentOnly = true})
end

local function removeInitialColon(s)
	-- Removes the initial colon from a string, if present.
	return s:match('^:?(.*)')
end

function p.findNamespaceId(link, removeColon)
	-- Finds the namespace id (namespace number) of a link or a pagename. This
	-- function will not work if the link is enclosed in double brackets. Colons
	-- are trimmed from the start of the link by default. To skip colon
	-- trimming, set the removeColon parameter to false.
	checkType('findNamespaceId', 1, link, 'string')
	checkType('findNamespaceId', 2, removeColon, 'boolean', true)
	if removeColon ~= false then
		link = removeInitialColon(link)
	end
	local namespace = link:match('^(.-):')
	if namespace then
		local nsTable = mw.site.namespaces[namespace]
		if nsTable then
			return nsTable.id
		end
	end
	return 0
end

function p.formatPages(...)
	-- Formats a list of pages using formatLink and returns it as an array. Nil
	-- values are not allowed.
	local pages = {...}
	local ret = {}
	for i, page in ipairs(pages) do
		ret[i] = p._formatLink(page)
	end
	return ret
end

function p.formatPageTables(...)
	-- Takes a list of page/display tables and returns it as a list of
	-- formatted links. Nil values are not allowed.
	local pages = {...}
	local links = {}
	for i, t in ipairs(pages) do
		checkType('formatPageTables', i, t, 'table')
		local link = t[1]
		local display = t[2]
		links[i] = p._formatLink(link, display)
	end
	return links
end

function p.makeWikitextError(msg, helpLink, addTrackingCategory, title)
	-- Formats an error message to be returned to wikitext. If
	-- addTrackingCategory is not false after being returned from
	-- [[Module:Yesno]], and if we are not on a talk page, a tracking category
	-- is added.
	checkType('makeWikitextError', 1, msg, 'string')
	checkType('makeWikitextError', 2, helpLink, 'string', true)
	yesno = require('Module:Yesno')
	title = title or mw.title.getCurrentTitle()
	-- Make the help link text.
	local helpText
	if helpLink then
		helpText = ' ([[' .. helpLink .. '|help]])'
	else
		helpText = ''
	end
	-- Make the category text.
	local category
	if not title.isTalkPage and yesno(addTrackingCategory) ~= false then
		category = 'Hatnote templates with errors'
		category = string.format(
			'[[%s:%s]]',
			mw.site.namespaces[14].name,
			category
		)
	else
		category = ''
	end
	return string.format(
		'&lt;strong class=&quot;error&quot;&gt;Error: %s%s.&lt;/strong&gt;%s',
		msg,
		helpText,
		category
	)
end

function p.disambiguate(page, disambiguator)
	-- Formats a page title with a disambiguation parenthetical,
	-- i.e. &quot;Example&quot;  &quot;Example (disambiguation)&quot;.
	checkType('disambiguate', 1, page, 'string')
	checkType('disambiguate', 2, disambiguator, 'string', true)
	disambiguator = disambiguator or 'disambiguation'
	return string.format('%s (%s)', page, disambiguator)
end

--------------------------------------------------------------------------------
-- Format link
--
-- Makes a wikilink from the given link and display values. Links are escaped
-- with colons if necessary, and links to sections are detected and displayed
-- with &quot;  &quot; as a separator rather than the standard MediaWiki &quot;#&quot;. Used in
-- the {{format hatnote link}} template.
--------------------------------------------------------------------------------

function p.formatLink(frame)
	local args = getArgs(frame)
	local link = args[1]
	local display = args[2]
	if not link then
		return p.makeWikitextError(
			'no link specified',
			'Template:Format hatnote link#Errors',
			args.category
		)
	end
	return p._formatLink(link, display)
end

function p._formatLink(link, display)
	checkType('_formatLink', 1, link, 'string')
	checkType('_formatLink', 2, display, 'string', true)

	-- Remove the initial colon for links where it was specified manually.
	link = removeInitialColon(link)

	-- Find whether a faux display value has been added with the {{!}} magic
	-- word.
	if not display then
		local prePipe, postPipe = link:match('^(.-)|(.*)$')
		link = prePipe or link
		display = postPipe
	end

	-- Find the display value.
	if not display then
		local page, section = link:match('^(.-)#(.*)$')
		if page then
			display = page .. ' &amp;nbsp;' .. section
		end
	end

	-- Assemble the link.
	if display then
		return string.format(
			'[[:%s|%s]]',
			string.gsub(link, '|(.*)$', ''), --display overwrites manual piping
			display
		)
	else
		return string.format('[[:%s]]', link)
	end
end

--------------------------------------------------------------------------------
-- Hatnote
--
-- Produces standard hatnote text. Implements the {{hatnote}} template.
--------------------------------------------------------------------------------

function p.hatnote(frame)
	local args = getArgs(frame)
	local s = args[1]
	local options = {}
	if not s then
		return p.makeWikitextError(
			'no text specified',
			'Template:Hatnote#Errors',
			args.category
		)
	end
	options.extraclasses = args.extraclasses
	options.selfref = args.selfref
	return p._hatnote(s, options)
end

function p._hatnote(s, options)
	checkType('_hatnote', 1, s, 'string')
	checkType('_hatnote', 2, options, 'table', true)
	options = options or {}
	local classes = {'hatnote', 'navigation-not-searchable'}
	local extraclasses = options.extraclasses
	local selfref = options.selfref
	if type(extraclasses) == 'string' then
		classes[#classes + 1] = extraclasses
	end
	if selfref then
		classes[#classes + 1] = 'selfref'
	end
	return string.format(
		'&lt;div role=&quot;note&quot; class=&quot;%s&quot;&gt;%s&lt;/div&gt;',
		table.concat(classes, ' '),
		s
	)
end

return p</text>
      <sha1>c5z31x97gktc3q7nnp8mf48t01l4qst</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Hatnote list</title>
    <ns>828</ns>
    <id>50085079</id>
    <revision>
      <id>726904710</id>
      <parentid>719917336</parentid>
      <timestamp>2016-06-25T06:18:53Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Updated from sandbox</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6873">--------------------------------------------------------------------------------
--                           Module:Hatnote list                              --
--                                                                            --
-- This module produces and formats lists for use in hatnotes. In particular, --
-- it implements the for-see list, i.e. lists of &quot;For X, see Y&quot; statements,   --
-- as used in {{about}}, {{redirect}}, and their variants. Also introduced    --
-- are andList &amp; orList helpers for formatting lists with those conjunctions. --
--------------------------------------------------------------------------------

local mArguments --initialize lazily
local mHatnote = require('Module:Hatnote')
local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local p = {}

--------------------------------------------------------------------------------
-- List stringification helper functions
--
-- These functions are used for stringifying lists, usually page lists inside
-- the &quot;Y&quot; portion of &quot;For X, see Y&quot; for-see items.
--------------------------------------------------------------------------------

--default options table used across the list stringification functions
local stringifyListDefaultOptions = {
	conjunction = &quot;and&quot;,
	separator = &quot;,&quot;,
	altSeparator = &quot;;&quot;,
	space = &quot; &quot;,
	formatted = false
}

-- Stringifies a list generically; probably shouldn't be used directly
function stringifyList(list, options)
	-- Type-checks, defaults, and a shortcut
	checkType(&quot;stringifyList&quot;, 1, list, &quot;table&quot;)
	if #list == 0 then return nil end
	checkType(&quot;stringifyList&quot;, 2, options, &quot;table&quot;, true)
	options = options or {}
	for k, v in pairs(stringifyListDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	local s = options.space
	-- Format the list if requested
	if options.formatted then list = mHatnote.formatPages(unpack(list)) end
	-- Set the separator; if any item contains it, use the alternate separator
	local separator = options.separator
	--searches display text only
	function searchDisp(t, f)
		return string.find(string.sub(t, (string.find(t, '|') or 0) + 1), f)
	end
	for k, v in pairs(list) do
		if searchDisp(v, separator) then
			separator = options.altSeparator
			break
		end
	end
	-- Set the conjunction, apply Oxford comma, and force a comma if #1 has &quot;&quot;
	local conjunction = s .. options.conjunction .. s
	if #list == 2 and searchDisp(list[1], &quot;&quot;) or #list &gt; 2 then
		conjunction = separator .. conjunction
	end
	-- Return the formatted string
	return mw.text.listToText(list, separator .. s, conjunction)
end

--DRY function
function conjList (conj, list, fmt)
	return stringifyList(list, {conjunction = conj, formatted = fmt})
end

-- Stringifies lists with &quot;and&quot; or &quot;or&quot;
function p.andList (...) return conjList(&quot;and&quot;, ...) end
function p.orList (...) return conjList(&quot;or&quot;, ...) end

--------------------------------------------------------------------------------
-- For see
--
-- Makes a &quot;For X, see [[Y]].&quot; list from raw parameters. Intended for the
-- {{about}} and {{redirect}} templates and their variants.
--------------------------------------------------------------------------------

--default options table used across the forSee family of functions
local forSeeDefaultOptions = {
	andKeyword = 'and',
	title = mw.title.getCurrentTitle().text,
	otherText = 'other uses',
	forSeeForm = 'For %s, see %s.'
}

--Collapses duplicate punctuation
function punctuationCollapse (text)
	local replacements = {
		[&quot;%.%.$&quot;] = &quot;.&quot;,
		[&quot;%?%.$&quot;] = &quot;?&quot;,
		[&quot;%!%.$&quot;] = &quot;!&quot;,
		[&quot;%.%]%]%.$&quot;] = &quot;.]]&quot;,
		[&quot;%?%]%]%.$&quot;] = &quot;?]]&quot;,
		[&quot;%!%]%]%.$&quot;] = &quot;!]]&quot;
	}
	for k, v in pairs(replacements) do text = string.gsub(text, k, v) end
	return text
end

-- Structures arguments into a table for stringification, &amp; options
function p.forSeeArgsToTable (args, from, options)
	-- Type-checks and defaults
	checkType(&quot;forSeeArgsToTable&quot;, 1, args, 'table')
	checkType(&quot;forSeeArgsToTable&quot;, 2, from, 'number', true)
	from = from or 1
	checkType(&quot;forSeeArgsToTable&quot;, 3, options, 'table', true)
	options = options or {}
	for k, v in pairs(forSeeDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	-- maxArg's gotten manually because getArgs() and table.maxn aren't friends
	local maxArg = 0
	for k, v in pairs(args) do
		if type(k) == 'number' and k &gt; maxArg then maxArg = k end
	end
	-- Structure the data out from the parameter list:
	-- * forTable is the wrapper table, with forRow rows
	-- * Rows are tables of a &quot;use&quot; string &amp; a &quot;pages&quot; table of pagename strings
	-- * Blanks are left empty for defaulting elsewhere, but can terminate list
	local forTable = {}
	local i = from
	local terminated = false
	-- Loop to generate rows
	repeat
		-- New empty row
		local forRow = {}
		-- On blank use, assume list's ended &amp; break at end of this loop
		forRow.use = args[i]
		if not args[i] then terminated = true end
		-- New empty list of pages
		forRow.pages = {}
		-- Insert first pages item if present
		table.insert(forRow.pages, args[i + 1])
		-- If the param after next is &quot;and&quot;, do inner loop to collect params
		-- until the &quot;and&quot;'s stop. Blanks are ignored: &quot;1|and||and|3&quot;  {1, 3}
		while args[i + 2] == options.andKeyword do
			if args[i + 3] then 
				table.insert(forRow.pages, args[i + 3])
			end
			-- Increment to next &quot;and&quot;
			i = i + 2
		end
		-- Increment to next use
		i = i + 2
		-- Append the row
		table.insert(forTable, forRow)
	until terminated or i &gt; maxArg
	
	return forTable
end

-- Stringifies a table as formatted by forSeeArgsToTable
function p.forSeeTableToString (forSeeTable, options)
	-- Type-checks and defaults
	checkType(&quot;forSeeTableToString&quot;, 1, forSeeTable, &quot;table&quot;)
	checkType(&quot;forSeeTableToString&quot;, 2, options, &quot;table&quot;, true)
	options = options or {}
	for k, v in pairs(forSeeDefaultOptions) do
		if options[k] == nil then options[k] = v end
	end
	-- Stringify each for-see item into a list
	local strList = {}
	for k, v in pairs(forSeeTable) do
		local useStr = v.use or options.otherText
		local pagesStr = p.andList(v.pages, true) or
			mHatnote._formatLink(mHatnote.disambiguate(options.title))
		local forSeeStr = string.format(options.forSeeForm, useStr, pagesStr)
		forSeeStr = punctuationCollapse(forSeeStr)
		table.insert(strList, forSeeStr)
	end
	-- Return the concatenated list
	return table.concat(strList, ' ')
end

-- Produces a &quot;For X, see [[Y]]&quot; string from arguments. Expects index gaps
-- but not blank/whitespace values. Ignores named args and args &lt; &quot;from&quot;.
function p._forSee (args, from, options)
	local forSeeTable = p.forSeeArgsToTable(args, from, options)
	return p.forSeeTableToString(forSeeTable, options)
end

-- As _forSee, but uses the frame.
function p.forSee (frame, from, options)
	mArguments = require('Module:Arguments')
	return p._forSee(mArguments.getArgs(frame), from, options)
end

return p</text>
      <sha1>9xow4swjoccg1c9n9r6xhfvxgci3xr1</sha1>
    </revision>
  </page>
  <page>
    <title>Module:InfoboxImage</title>
    <ns>828</ns>
    <id>38581924</id>
    <revision>
      <id>769944044</id>
      <parentid>755884847</parentid>
      <timestamp>2017-03-12T14:50:35Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>add px to sizedefault if just a number</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="9641">-- Inputs:
--    image - Can either be a bare filename (with or without the File:/Image: prefix) or a fully formatted image link
--    page - page to display for multipage images (DjVu)
--    size - size to display the image
--    maxsize - maximum size for image
--    sizedefault - default size to display the image if size param is blank
--    alt - alt text for image
--    title - title text for image
--    border - set to yes if border
--    center - set to yes, if the image has to be centered
--    upright - upright image param
--    suppressplaceholder - if yes then checks to see if image is a placeholder and suppresses it
--    link - page to visit when clicking on image
-- Outputs:
--    Formatted image.
-- More details available at the &quot;Module:InfoboxImage/doc&quot; page

local i = {};

local placeholder_image = {
    &quot;Blue - Replace this image female.svg&quot;,
    &quot;Blue - Replace this image male.svg&quot;,
    &quot;Female no free image yet.png&quot;,
    &quot;Flag of None (square).svg&quot;,
    &quot;Flag of None.svg&quot;,
    &quot;Flag of.svg&quot;,
    &quot;Green - Replace this image female.svg&quot;,
    &quot;Green - Replace this image male.svg&quot;,
    &quot;Image is needed female.svg&quot;,
    &quot;Image is needed male.svg&quot;,
    &quot;Location map of None.svg&quot;,
    &quot;Male no free image yet.png&quot;,
    &quot;Missing flag.png&quot;,
    &quot;No flag.svg&quot;,
    &quot;No free portrait.svg&quot;,
    &quot;No portrait (female).svg&quot;,
    &quot;No portrait (male).svg&quot;,
    &quot;Red - Replace this image female.svg&quot;,
    &quot;Red - Replace this image male.svg&quot;,
    &quot;Replace this image female (blue).svg&quot;,
    &quot;Replace this image female.svg&quot;,
    &quot;Replace this image male (blue).svg&quot;,
    &quot;Replace this image male.svg&quot;,
    &quot;Silver - Replace this image female.svg&quot;,
    &quot;Silver - Replace this image male.svg&quot;,
    &quot;Replace this image.svg&quot;,
	&quot;Cricket no pic.png&quot;,
	&quot;CarersLogo.gif&quot;,
	&quot;Diagram Needed.svg&quot;,
	&quot;Example.jpg&quot;,
	&quot;Image placeholder.png&quot;,
	&quot;No male portrait.svg&quot;,
	&quot;Nocover-upload.png&quot;,
	&quot;NoDVDcover copy.png&quot;,
	&quot;Noribbon.svg&quot;,
	&quot;No portrait-BFD-test.svg&quot;,
	&quot;Placeholder barnstar ribbon.png&quot;,
	&quot;Project Trains no image.png&quot;,
	&quot;Image-request.png&quot;,
	&quot;Sin bandera.svg&quot;,
	&quot;Sin escudo.svg&quot;,
	&quot;Replace this image - temple.png&quot;,
	&quot;Replace this image butterfly.png&quot;,
	&quot;Replace this image.svg&quot;,
	&quot;Replace this image1.svg&quot;,
	&quot;Resolution angle.png&quot;,
	&quot;Image-No portrait-text-BFD-test.svg&quot;,
	&quot;Insert image here.svg&quot;,
	&quot;No image available.png&quot;,
	&quot;NO IMAGE YET square.png&quot;,
	&quot;NO IMAGE YET.png&quot;,
	&quot;No Photo Available.svg&quot;,
	&quot;No Screenshot.svg&quot;,
	&quot;No-image-available.jpg&quot;,
	&quot;Null.png&quot;,
	&quot;PictureNeeded.gif&quot;,
	&quot;Place holder.jpg&quot;,
	&quot;Unbenannt.JPG&quot;,
	&quot;UploadACopyrightFreeImage.svg&quot;,
	&quot;UploadAnImage.gif&quot;,
	&quot;UploadAnImage.svg&quot;,
	&quot;UploadAnImageShort.svg&quot;,
	&quot;CarersLogo.gif&quot;,
	&quot;Diagram Needed.svg&quot;,
	&quot;No male portrait.svg&quot;,
	&quot;NoDVDcover copy.png&quot;,
	&quot;Placeholder barnstar ribbon.png&quot;,
	&quot;Project Trains no image.png&quot;,
	&quot;Image-request.png&quot;,
}

function i.IsPlaceholder(image)
    -- change underscores to spaces
    image = mw.ustring.gsub(image, &quot;_&quot;, &quot; &quot;);
    assert(image ~= nil, 'mw.ustring.gsub(image, &quot;_&quot;, &quot; &quot;) must not return nil')
    -- if image starts with [[ then remove that and anything after |
    if mw.ustring.sub(image,1,2) == &quot;[[&quot; then
        image = mw.ustring.sub(image,3);
        image = mw.ustring.gsub(image, &quot;([^|]*)|.*&quot;, &quot;%1&quot;);
        assert(image ~= nil, 'mw.ustring.gsub(image, &quot;([^|]*)|.*&quot;, &quot;%1&quot;) must not return nil')
    end
    -- Trim spaces
    image = mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1');
    assert(image ~= nil, &quot;mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1') must not return nil&quot;)
    -- remove prefix if exists
    local allNames = mw.site.namespaces[6].aliases
    allNames[#allNames + 1] = mw.site.namespaces[6].name
    allNames[#allNames + 1] = mw.site.namespaces[6].canonicalName
    for i, name in ipairs(allNames) do
        if mw.ustring.lower(mw.ustring.sub(image, 1, mw.ustring.len(name) + 1)) == mw.ustring.lower(name .. &quot;:&quot;) then
            image = mw.ustring.sub(image, mw.ustring.len(name) + 2);
            break
        end
    end
    -- Trim spaces
    image = mw.ustring.gsub(image, '^[ ]*(.-)[ ]*$', '%1');
    -- capitalise first letter
    image = mw.ustring.upper(mw.ustring.sub(image,1,1)) .. mw.ustring.sub(image,2);

    for i,j in pairs(placeholder_image) do
        if image == j then
            return true
        end
    end
    return false
end

function i.InfoboxImage(frame)
    local image = frame.args[&quot;image&quot;];
    
    if image == &quot;&quot; or image == nil then
        return &quot;&quot;;
    end
    if image == &quot;&amp;nbsp;&quot; then
        return image;
    end
    if frame.args[&quot;suppressplaceholder&quot;] ~= &quot;no&quot; then
        if i.IsPlaceholder(image) == true then
            return &quot;&quot;;
        end
    end

    if mw.ustring.lower(mw.ustring.sub(image,1,5)) == &quot;http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,6)) == &quot;[http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,7)) == &quot;[[http:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,6)) == &quot;https:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,7)) == &quot;[https:&quot; then
        return &quot;&quot;;
    end
    if mw.ustring.lower(mw.ustring.sub(image,1,8)) == &quot;[[https:&quot; then
        return &quot;&quot;;
    end

    if mw.ustring.sub(image,1,2) == &quot;[[&quot; then
        -- search for thumbnail images and add to tracking cat if found
        if mw.title.getCurrentTitle().namespace == 0 and (mw.ustring.find(image, &quot;|%s*thumb%s*[|%]]&quot;) or mw.ustring.find(image, &quot;|%s*thumbnail%s*[|%]]&quot;)) then
            return image .. &quot;[[Category:Pages using infoboxes with thumbnail images]]&quot;;
        elseif mw.title.getCurrentTitle().namespace == 0 then
            return image .. &quot;[[Category:Pages using deprecated image syntax]]&quot;;
        else
            return image;
        end
    elseif mw.ustring.sub(image,1,2) == &quot;{{&quot; and mw.ustring.sub(image,1,3) ~= &quot;{{{&quot; then
        return image;
    elseif mw.ustring.sub(image,1,1) == &quot;&lt;&quot; then
        return image;
    elseif mw.ustring.sub(image,1,5) == mw.ustring.char(127)..&quot;UNIQ&quot; then
        -- Found strip marker at begining, so pass don't process at all
        return image;
    elseif mw.ustring.sub(image,4,9) == &quot;`UNIQ-&quot; then
        -- Found strip marker at begining, so pass don't process at all
        return image;
    else
        local result = &quot;&quot;;
        local page = frame.args[&quot;page&quot;];
        local size = frame.args[&quot;size&quot;];
        local maxsize = frame.args[&quot;maxsize&quot;];
        local sizedefault = frame.args[&quot;sizedefault&quot;];
        local alt = frame.args[&quot;alt&quot;];
        local link = frame.args[&quot;link&quot;];
        local title = frame.args[&quot;title&quot;];
        local border = frame.args[&quot;border&quot;];
        local upright = frame.args[&quot;upright&quot;] or &quot;&quot;;
        local thumbtime = frame.args[&quot;thumbtime&quot;] or &quot;&quot;;
        local center= frame.args[&quot;center&quot;];
        
        -- remove prefix if exists
        local allNames = mw.site.namespaces[6].aliases
        allNames[#allNames + 1] = mw.site.namespaces[6].name
        allNames[#allNames + 1] = mw.site.namespaces[6].canonicalName
        for i, name in ipairs(allNames) do
            if mw.ustring.lower(mw.ustring.sub(image, 1, mw.ustring.len(name) + 1)) == mw.ustring.lower(name .. &quot;:&quot;) then
                image = mw.ustring.sub(image, mw.ustring.len(name) + 2);
                break
            end
        end
        
        if maxsize ~= &quot;&quot; and maxsize ~= nil then
            -- if no sizedefault then set to maxsize
            if sizedefault == &quot;&quot; or sizedefault == nil then
                sizedefault = maxsize
            end
            -- check to see if size bigger than maxsize
            if size ~= &quot;&quot; and size ~= nil then
                local sizenumber = tonumber(mw.ustring.match(size,&quot;%d*&quot;)) or 0;
                local maxsizenumber = tonumber(mw.ustring.match(maxsize,&quot;%d*&quot;)) or 0;
                if sizenumber&gt;maxsizenumber and maxsizenumber&gt;0 then
                    size = maxsize;
                end
            end
        end
        -- add px to size if just a number
        if (tonumber(size) or 0) &gt; 0 then
            size = size .. &quot;px&quot;;
        end
        -- add px to sizedefault if just a number
        if (tonumber(sizedefault) or 0) &gt; 0 then
            sizedefault = sizedefault .. &quot;px&quot;;
        end
        
        result = &quot;[[File:&quot; .. image;
        if page ~= &quot;&quot; and page ~= nil then
            result = result .. &quot;|page=&quot; .. page;
        end
        if size ~= &quot;&quot; and size ~= nil then
            result = result .. &quot;|&quot; .. size;
        elseif sizedefault ~= &quot;&quot; and sizedefault ~= nil then
            result = result .. &quot;|&quot; .. sizedefault;
        else
            result = result .. &quot;|frameless&quot;;
        end
        if center == &quot;yes&quot; then
            result = result .. &quot;|center&quot;
        end
        if alt ~= &quot;&quot; and alt ~= nil then
            result = result .. &quot;|alt=&quot; .. alt;
        end
        if link ~= &quot;&quot; and link ~= nil then
            result = result .. &quot;|link=&quot; .. link;
        end
        if border == &quot;yes&quot; then
            result = result .. &quot;|border&quot;;
        end
        if upright == &quot;yes&quot; then
            result = result .. &quot;|upright&quot;;
        elseif upright ~= &quot;&quot; then
            result = result .. &quot;|upright=&quot; .. upright;
        end
        if thumbtime ~= &quot;&quot; then
            result = result .. &quot;|thumbtime=&quot; .. thumbtime;
        end
        if title ~= &quot;&quot; and title ~= nil then
            result = result .. &quot;|&quot; .. title;
        elseif alt ~= &quot;&quot; and alt ~= nil then
            result = result .. &quot;|&quot; .. alt;
        end
        result = result .. &quot;]]&quot;;
        
        return result;
    end
end

return i;</text>
      <sha1>n4nldwdqxa2f7m558z3tw0vr90z070g</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Infobox military conflict</title>
    <ns>828</ns>
    <id>44031516</id>
    <revision>
      <id>789507168</id>
      <parentid>789506357</parentid>
      <timestamp>2017-07-07T19:34:25Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <comment>role = presentation</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7854">require('Module:No globals')

local infoboxStyle = mw.loadData('Module:WPMILHIST Infobox style')

local IMC = {}
IMC.__index = IMC

function IMC:renderPerCombatant(builder, headerText, prefix, suffix)
	prefix = prefix or ''
	suffix = suffix or ''
	local colspans = {}
	
	-- This may result in colspans[1] getting set twice, but
	-- this is no big deal. The second set will be correct.
	local lastCombatant = 1
	
	for i = 1,self.combatants do
		if self.args[prefix .. i .. suffix] then
			colspans[lastCombatant] = i - lastCombatant
			lastCombatant = i
		end
	end

	local jointText = self.args[prefix .. (self.combatants + 1) .. suffix]
	
	if headerText and (colspans[1] or jointText) then
		builder:tag('tr')
			:tag('th')
				:attr('colspan', self.combatants)
				:cssText(infoboxStyle.header_raw)
				:wikitext(headerText)
	end

	-- The only time colspans[1] wouldn't be set is if no
	-- combatant has a field with the given prefix and suffix.
	if colspans[1] then
		-- Since each found argument set the colspan for the previous
		-- one, the final one wasn't set above, so set it now.
		colspans[lastCombatant] = self.combatants - lastCombatant + 1
		builder = builder:tag('tr')
		for i = 1,self.combatants do
			-- At this point, colspans[i] will be set for i=1 unconditionally, and for
			-- any other value of i where self.args[prefix .. i .. suffix] is set.
			if colspans[i] then
				builder:tag('td')
					-- don't bother emitting colspan=&quot;1&quot;
					:attr('colspan', colspans[i] ~= 1 and colspans[i] or nil)
					:css('width', math.floor(100 / self.combatants * colspans[i] + 0.5) .. '%')
					-- no border on the right of the rightmost column
					:css('border-right', i ~= lastCombatant and infoboxStyle.internal_border or nil)
					-- no padding on the left of the leftmost column
					:css('padding-left', i ~= 1 and '0.25em' or nil)
					-- don't show the border if we're directly under a header
					:css('border-top', not headerText and infoboxStyle.internal_border or nil)
					:newline()
					:wikitext(self.args[prefix .. i .. suffix])
			end
		end
	end

	if jointText then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:css('text-align', 'center')
				-- don't show the border if we're directly under a header
				:css('border-top', (not headerText or colspans[1]) and infoboxStyle.internal_border or nil)
				:newline()
				:wikitext(jointText)
	end
end

function IMC:renderHeaderTable(builder)
	builder = builder:tag('table')
		:css('width', '100%')
		:css('margin', 0)
		:css('padding', 0)
		:css('border', 0)

	if self.args.date then
		builder:tag('tr')
			:tag('th')
				:css('padding-right', '1em')
				:wikitext('Date')
			:done()
			:tag('td')
				:wikitext(self.args.date)
	end

	builder = builder:tag('tr')
		:tag('th')
			:css('padding-right', '1em')
			:wikitext('Location')
		:done()
		:tag('td')
			:tag('span')
				:addClass('location')
				:wikitext(self.args.place or '{&amp;#123;{place}&amp;#125;}') -- hack so that people who don't know Lua know that this parameter is required
			:done()
	if self.args.coordinates then
		builder:wikitext('&lt;br /&gt;' .. self.args.coordinates)
	end
	builder = builder:done():done()

	-- only for &quot;Putsch&quot;
    if self.args.action then
		builder:tag('tr')
			:tag('th')
				:css('padding-right', '1em')
				:wikitext(self.args.action and 'Action')
			:done()
			:tag('td')
				:wikitext(self.args.action)
	end

	if self.args.status or self.args.result then
		builder:tag('tr')
			:tag('th')
				:css('padding-right', '1em')
				:wikitext(self.args.status and 'Status' or 'Result')
			:done()
			:tag('td')
				:newline()
				:wikitext(self.args.status or self.args.result)
	end

	if self.args.territory then
		builder:tag('tr')
			:tag('th')
				:css('padding-right', '1em')
				:wikitext('Territorial&lt;br /&gt;changes')
			:done()
			:tag('td')
				:newline()
				:wikitext(self.args.territory)
	end
end

function IMC:render()
	local builder = mw.html.create()
	if self.args.campaignbox then
		builder = builder:tag('table')
			:css('float', 'right')
			:css('clear', 'right')
			:css('background', 'transparent')
			:css('margin', 0)
			:css('padding', 0)
			:addClass('mw-stack mobile-float-reset')
			:attr('role', 'presentation') 
			:tag('tr'):tag('td')
	end
	builder = builder:tag('table')
		:addClass('infobox vevent')
		:cssText(infoboxStyle.main_box_raw_auto_width)
		:css('width', self.args.width or '315px')

	builder:tag('tr')
		:tag('th')
			:addClass('summary')
			:attr('colspan', self.combatants)
			:cssText(infoboxStyle.header_raw)
			:wikitext(self.args.conflict or mw.title.getCurrentTitle().text)
	if self.args.partof then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:cssText(infoboxStyle.sub_header_raw)
				:wikitext('Part of ' .. self.args.partof)
	end
	if self.args.image then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:cssText(infoboxStyle.image_box_raw)
				:wikitext(string.format('%s%s%s',
					require('Module:InfoboxImage').InfoboxImage{args = {
						image = self.args.image,
						size = self.args.image_size,
						sizedefault = 'frameless',
						upright = 1,
						alt = self.args.alt
					}},
					self.args.caption and '&lt;br /&gt;' or '',
					self.args.caption or ''
				))
	end
	self:renderHeaderTable(builder:tag('tr'):tag('td'):attr('colspan', self.combatants))
	self:renderPerCombatant(builder, self.args.combatants_header or 'Belligerents', 'combatant')
	-- can be un-hardcoded once gerrit:165108 is merged
	for _,v in ipairs{'a','b','c','d'} do
		self:renderPerCombatant(builder, nil, 'combatant', v)
	end
	
	self:renderPerCombatant(builder, 'Commanders and leaders', 'commander')
	self:renderPerCombatant(builder, 'Units involved', 'units')
	self:renderPerCombatant(builder, 'Strength', 'strength')
	self:renderPerCombatant(builder, 'Political support', 'polstrength')
	self:renderPerCombatant(builder, 'Military support', 'milstrength')
	self:renderPerCombatant(builder, 'Casualties and losses', 'casualties')

	if self.args.notes then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:css('font-size', '90%')
				:css('border-top', infoboxStyle.section_border)
				:newline()
				:wikitext(self.args.notes)
	end
	if self.args.map_type then
		builder:tag('tr')
			:tag('td')
				:attr('colspan', self.combatants)
				:css('border-top', infoboxStyle.internal_border)
				:tag('center')
					:node(require('Module:Location map').main(self.frame, {
						self.args.map_type,
						relief = self.args.map_relief,
						coordinates = self.args.coordinates,
						width = self.args.map_size or 220,
						float = 'center',
						border = 'none',
						mark = self.args.map_mark,
						marksize = self.args.map_marksize or 8,
						label = self.args.map_label,
						alt = self.args.map_alt,
						caption = self.args.map_caption or ('Location within ' .. self.args.map_type)
					}))
	end
	builder = builder:done()
	if self.args.campaignbox then
		builder = builder:done():done():tag('tr')
			:tag('td')
				:wikitext(self.args.campaignbox)
			:done()
		:done()
	end
	return builder
end

function IMC.new(frame, args)
	if not args then
		args = require('Module:Arguments').getArgs(frame, {wrappers = 'Template:Infobox military conflict'})
	end
	local obj = {
		frame = frame,
		args = args
	}

	-- until gerrit:165108 is merged, there's still a cap on combatants, but as soon as it merges, we can update this little bit of code to uncap it
	-- also, don't try to make this more efficient, or references could be in the wrong order
	obj.combatants = 2
	for _,v in ipairs{'', 'a', 'b', 'c', 'd'} do
		for i = 1,5 do
			if args['combatant' .. i .. v] then
				obj.combatants = math.max(obj.combatants, i)
			end
		end
	end

	return setmetatable(obj, IMC)
end

local p = {}

function p.main(frame)
	return IMC.new(frame):render()
end

return p</text>
      <sha1>k17th5i6e141d00lfxzz7agzxrjp4ne</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Labelled list hatnote</title>
    <ns>828</ns>
    <id>50971703</id>
    <revision>
      <id>763259375</id>
      <parentid>745988142</parentid>
      <timestamp>2017-02-02T05:26:53Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Labelled list hatnote]]&quot;: [[WP:High-risk templates|Highly visible template]] ([Edit=Require template editor access] (indefinite) [Move=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3083">--------------------------------------------------------------------------------
--                               Labelled list                                --
--                                                                            --
-- This module does the core work of creating a hatnote composed of a list    --
-- prefixed by a colon-terminated label, i.e. &quot;LABEL: [andList of pages]&quot;,    --
-- for {{see also}} and similar templates.                                    --
--------------------------------------------------------------------------------

local mHatnote = require('Module:Hatnote')
local mHatlist = require('Module:Hatnote list')
local mArguments --initialize lazily
local p = {}

-- Defaults global to this module
local defaults = {
	label = 'See also', --Final fallback for label argument
	labelForm = '%s: %s',
	prefixes = {'label', 'label ', 'l'},
	template = 'Module:Labelled list hatnote'
}

-- Helper function that pre-combines display parameters into page arguments.
-- Also compresses sparse arrays, as a desirable side-effect.
function p.preprocessDisplays (args, prefixes)
	-- Prefixes specify which parameters, in order, to check for display options
	-- They each have numbers auto-appended, e.g. 'label1', 'label 1', &amp; 'l1'
	prefixes = prefixes or defaults.prefixes
	local pages = {}
	for k, v in pairs(args) do
		if type(k) == 'number' then
			local display
			for i = 1, #prefixes do
				display = args[prefixes[i] .. k]
				if display then break end
			end
			local page = display and
				string.format('%s|%s', string.gsub(v, '|.*$', ''), display) or v
			pages[#pages + 1] = page
		end
	end
	return pages
end

-- Produces a labelled pages-list hatnote.
-- The main frame (template definition) takes 1 or 2 arguments, for a singular
-- and (optionally) plural label respectively:
-- * {{#invoke:Labelled list hatnote|labelledList|Singular label|Plural label}}
-- The resulting template takes pagename &amp; label parameters normally.
function p.labelledList (frame)
	mArguments = require('Module:Arguments')
	local labels = {frame.args[1] or defaults.label}
	labels[2] = frame.args[2] or labels[1]
	local template = frame:getParent():getTitle()
	local args = mArguments.getArgs(frame, {parentOnly = true})
	local pages = p.preprocessDisplays(args)
	local options = {
		extraclasses = frame.args.extraclasses,
		category = args.category,
		selfref = frame.args.selfref or args.selfref,
		template = template
	}
	return p._labelledList(pages, labels, options)
end

function p._labelledList (pages, labels, options)
	labels = labels or {}
	if #pages == 0 then
		return mHatnote.makeWikitextError(
			'no page names specified',
			(options.template or defaults.template) .. '#Errors',
			options.category
		)
	end
	label = (#pages == 1 and labels[1] or labels[2]) or defaults.label
	local text = string.format(
		options.labelForm or defaults.labelForm,
		label,
		mHatlist.andList(pages, true)
	)
	local hnOptions = {
		extraclasses = options.extraclasses,
		selfref = options.selfref
	}
	return mHatnote._hatnote(text, hnOptions)
end

return p</text>
      <sha1>932zychfwl5xu5castj2k9j5qs6lzif</sha1>
    </revision>
  </page>
  <page>
    <title>Module:List</title>
    <ns>828</ns>
    <id>41068627</id>
    <revision>
      <id>794511725</id>
      <parentid>788254921</parentid>
      <timestamp>2017-08-08T13:55:25Z</timestamp>
      <contributor>
        <username>Jdlrobson</username>
        <id>15999850</id>
      </contributor>
      <comment>Minerva skin needs whether an hlist is separated to be explicit (see https://en.wikipedia.org/wiki/Wikipedia:Village_pump_(technical)#Hlist_bullets_not_shown_in_mobile)</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5154">-- This module outputs different kinds of lists. At the moment, bulleted,
-- unbulleted, horizontal, ordered, and horizontal ordered lists are supported.

local libUtil = require('libraryUtil')
local checkType = libUtil.checkType
local mTableTools = require('Module:TableTools')

local p = {}

local listTypes = {
	['bulleted'] = true,
	['unbulleted'] = true,
	['horizontal'] = true,
	['ordered'] = true,
	['horizontal_ordered'] = true
}

function p.makeListData(listType, args)
	-- Constructs a data table to be passed to p.renderList.
	local data = {}

	-- Classes
	data.classes = {}
	if listType == 'horizontal' or listType == 'horizontal_ordered' then
		table.insert(data.classes, 'hlist hlist-separated')
	elseif listType == 'unbulleted' then
		table.insert(data.classes, 'plainlist')
	end
	table.insert(data.classes, args.class)

	-- Main div style
	data.style = args.style

	-- Indent for horizontal lists
	if listType == 'horizontal' or listType == 'horizontal_ordered' then
		local indent = tonumber(args.indent)
		indent = indent and indent * 1.6 or 0
		if indent &gt; 0 then
			data.marginLeft = indent .. 'em'
		end
	end
	
	-- List style types for ordered lists
	-- This could be &quot;1, 2, 3&quot;, &quot;a, b, c&quot;, or a number of others. The list style
	-- type is either set by the &quot;type&quot; attribute or the &quot;list-style-type&quot; CSS
	-- property.
	if listType == 'ordered' or listType == 'horizontal_ordered' then 
		data.listStyleType = args.list_style_type or args['list-style-type']
		data.type = args['type']

		-- Detect invalid type attributes and attempt to convert them to
		-- list-style-type CSS properties.
		if data.type 
			and not data.listStyleType
			and not tostring(data.type):find('^%s*[1AaIi]%s*$')
		then
			data.listStyleType = data.type
			data.type = nil
		end
	end
	
	-- List tag type
	if listType == 'ordered' or listType == 'horizontal_ordered' then
		data.listTag = 'ol'
	else
		data.listTag = 'ul'
	end

	-- Start number for ordered lists
	data.start = args.start
	if listType == 'horizontal_ordered' then
		-- Apply fix to get start numbers working with horizontal ordered lists.
		local startNum = tonumber(data.start)
		if startNum then
			data.counterReset = 'listitem ' .. tostring(startNum - 1)
		end
	end

	-- List style
	 -- ul_style and ol_style are included for backwards compatibility. No
	 -- distinction is made for ordered or unordered lists.
	data.listStyle = args.list_style

	-- List items
	-- li_style is included for backwards compatibility. item_style was included
	-- to be easier to understand for non-coders.
	data.itemStyle = args.item_style or args.li_style
	data.items = {}
	for i, num in ipairs(mTableTools.numKeys(args)) do
		local item = {}
		item.content = args[num]
		item.style = args['item' .. tostring(num) .. '_style']
			or args['item_style' .. tostring(num)]
		item.value = args['item' .. tostring(num) .. '_value']
			or args['item_value' .. tostring(num)]
		table.insert(data.items, item)
	end
	
	return data
end

function p.renderList(data)
	-- Renders the list HTML.
	
	-- Return the blank string if there are no list items.
	if type(data.items) ~= 'table' or #data.items &lt; 1 then
		return ''
	end
	
	-- Render the main div tag.
	local root = mw.html.create('div')
	for i, class in ipairs(data.classes or {}) do
		root:addClass(class)
	end
	root:css{['margin-left'] = data.marginLeft}
	if data.style then
		root:cssText(data.style)
	end

	-- Render the list tag.
	local list = root:tag(data.listTag or 'ul')
	list
		:attr{start = data.start, type = data.type}
		:css{
			['counter-reset'] = data.counterReset,
			['list-style-type'] = data.listStyleType
		}
	if data.listStyle then
		list:cssText(data.listStyle)
	end

	-- Render the list items
	for i, t in ipairs(data.items or {}) do
		local item = list:tag('li')
		if data.itemStyle then
			item:cssText(data.itemStyle)
		end
		if t.style then
			item:cssText(t.style)
		end
		item
			:attr{value = t.value}
			:wikitext(t.content)
	end

	return tostring(root)
end

function p.renderTrackingCategories(args)
	local isDeprecated = false -- Tracks deprecated parameters.
	for k, v in pairs(args) do
		k = tostring(k)
		if k:find('^item_style%d+$') or k:find('^item_value%d+$') then
			isDeprecated = true
			break
		end
	end
	local ret = ''
	if isDeprecated then
		ret = ret .. '[[Category:List templates with deprecated parameters]]'
	end
	return ret
end

function p.makeList(listType, args)
	if not listType or not listTypes[listType] then
		error(string.format(
			&quot;bad argument #1 to 'makeList' ('%s' is not a valid list type)&quot;,
			tostring(listType)
		), 2)
	end
	checkType('makeList', 2, args, 'table')
	local data = p.makeListData(listType, args)
	local list = p.renderList(data)
	local trackingCategories = p.renderTrackingCategories(args)
	return list .. trackingCategories
end

for listType in pairs(listTypes) do
	p[listType] = function (frame)
		local mArguments = require('Module:Arguments')
		local origArgs = mArguments.getArgs(frame)
		-- Copy all the arguments to a new table, for faster indexing.
		local args = {}
		for k, v in pairs(origArgs) do
			args[k] = v
		end
		return p.makeList(listType, args)
	end
end

return p</text>
      <sha1>lkqmcmpfob2c6xhq46f675tm6p136ns</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Main</title>
    <ns>828</ns>
    <id>42570919</id>
    <revision>
      <id>727437646</id>
      <parentid>727363620</parentid>
      <timestamp>2016-06-29T00:34:26Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Removed extraclasses option; those classes appear to be deprecated</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2239">--[[
-- This module produces a link to a main article or articles. It implements the
-- template {{main}}.
-- 
-- If the module is used in category or category talk space, it produces &quot;The
-- main article for this category is xxx&quot;. Otherwise, it produces
-- &quot;Main article: xxx&quot;.
--]]

local mHatnote = require('Module:Hatnote')
local mHatlist = require('Module:Hatnote list')
local mArguments -- lazily initialise
local p = {}

function p.main(frame)
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {parentOnly = true})
	local pages = {}
	for k, v in pairs(args) do
		if type(k) == 'number' then
			local display = args['label ' .. k] or args['l' .. k]
			local page = display and
				string.format('%s|%s', string.gsub(v, '|.*$', ''), display) or v
			pages[#pages + 1] = page
		end
	end
	if #pages == 0 and mw.title.getCurrentTitle().namespace == 0 then
		return mHatnote.makeWikitextError(
			'no page names specified',
			'Template:Main#Errors',
			args.category
		)
	end
	local options = {
		selfref = args.selfref
	}
	return p._main(pages, options)
end

function p._main(args, options)
	-- Get the list of pages. If no first page was specified we use the current
	-- page name.
	local currentTitle = mw.title.getCurrentTitle()
	if #args == 0 then args = {currentTitle.text} end
	local firstPage = string.gsub(args[1], '|.*$', '')
	-- Find the pagetype.
	local pageType = mHatnote.findNamespaceId(firstPage) == 0 and 'article' or 'page'
	-- Make the formatted link text
	list = mHatlist.andList(args, true)
	-- Build the text.
	local isPlural = #args &gt; 1
	local mainForm
	local curNs = currentTitle.namespace
	if (curNs == 14) or (curNs == 15) then --category/talk namespaces
		mainForm = isPlural and
			'The main %ss for this [[Wikipedia:Categorization|category]] are %s'
			or
			'The main %s for this [[Wikipedia:Categorization|category]] is %s'
	else
		mainForm = isPlural and 'Main %ss: %s' or 'Main %s: %s'
	end
	local text = string.format(mainForm, pageType, list)
	-- Process the options and pass the text to the _rellink function in
	-- [[Module:Hatnote]].
	options = options or {}
	local hnOptions = {
		selfref = options.selfref
	}
	return mHatnote._hatnote(text, hnOptions)
end

return p</text>
      <sha1>9iplsr5jg1vj2lm6dkuiqtfon8648ne</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Math</title>
    <ns>828</ns>
    <id>38591527</id>
    <revision>
      <id>712321332</id>
      <parentid>613638641</parentid>
      <timestamp>2016-03-28T12:15:51Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>simplify using a new binary_fold function, per protected edit request by [[User:Esquivalience]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="12811">--[[

This module provides a number of basic mathematical operations.

]]

local yesno, getArgs -- lazily initialized

local p = {} -- Holds functions to be returned from #invoke, and functions to make available to other Lua modules.
local wrap = {} -- Holds wrapper functions that process arguments from #invoke. These act as intemediary between functions meant for #invoke and functions meant for Lua.

--[[
Helper functions used to avoid redundant code.
]]

local function err(msg)
	-- Generates wikitext error messages.
	return mw.ustring.format('&lt;strong class=&quot;error&quot;&gt;Formatting error: %s&lt;/strong&gt;', msg)
end

local function unpackNumberArgs(args)
	-- Returns an unpacked list of arguments specified with numerical keys.
	local ret = {}
	for k, v in pairs(args) do
		if type(k) == 'number' then
			table.insert(ret, v)
		end
	end
	return unpack(ret)
end

local function makeArgArray(...)
	-- Makes an array of arguments from a list of arguments that might include nils.
	local args = {...} -- Table of arguments. It might contain nils or non-number values, so we can't use ipairs.
	local nums = {} -- Stores the numbers of valid numerical arguments.
	local ret = {}
	for k, v in pairs(args) do
		v = p._cleanNumber(v)
		if v then
			nums[#nums + 1] = k
			args[k] = v
		end
	end
	table.sort(nums)
	for i, num in ipairs(nums) do
		ret[#ret + 1] = args[num]
	end
	return ret
end

local function fold(func, ...)
	-- Use a function on all supplied arguments, and return the result. The function must accept two numbers as parameters,
	-- and must return a number as an output. This number is then supplied as input to the next function call.
	local vals = makeArgArray(...)	
	local count = #vals -- The number of valid arguments
	if count == 0 then return
		-- Exit if we have no valid args, otherwise removing the first arg would cause an error.
		nil, 0
	end 
	local ret = table.remove(vals, 1)
	for _, val in ipairs(vals) do
		ret = func(ret, val)
	end
	return ret, count
end

--[[
Fold arguments by selectively choosing values (func should return when to choose the current &quot;dominant&quot; value).
]]
local function binary_fold(func, ...)
	local value = fold((function(a, b) if func(a, b) then return a else return b end end), ...)
	return value
end

--[[
random

Generate a random number

Usage:
{{#invoke: Math | random }}
{{#invoke: Math | random | maximum value }}
{{#invoke: Math | random | minimum value | maximum value }}
]]

function wrap.random(args)
	local first = p._cleanNumber(args[1])
	local second = p._cleanNumber(args[2])
	return p._random(first, second)
end

function p._random(first, second)
	math.randomseed(mw.site.stats.edits + mw.site.stats.pages + os.time() + math.floor(os.clock() * 1000000000))
	-- math.random will throw an error if given an explicit nil parameter, so we need to use if statements to check the params.
	if first and second then
		if first &lt;= second then -- math.random doesn't allow the first number to be greater than the second.
			return math.random(first, second)
		end
	elseif first then
		return math.random(first)
	else
		return math.random()
	end
end

--[[
order

Determine order of magnitude of a number

Usage:
{{#invoke: Math | order | value }}
]]

function wrap.order(args)
	local input_string = (args[1] or args.x or '0');
	local input_number = p._cleanNumber(input_string);
	if input_number == nil then
		return err('order of magnitude input appears non-numeric')
	else
		return p._order(input_number)
	end    
end

function p._order(x)
	if x == 0 then return 0 end
	return math.floor(math.log10(math.abs(x)))
end

--[[
precision

Detemines the precision of a number using the string representation

Usage:
{{ #invoke: Math | precision | value }}
]]

function wrap.precision(args)
	local input_string = (args[1] or args.x or '0');
	local trap_fraction = args.check_fraction;
	local input_number;

	if not yesno then
		yesno = require('Module:Yesno')
	end
	if yesno(trap_fraction, true) then -- Returns true for all input except nil, false, &quot;no&quot;, &quot;n&quot;, &quot;0&quot; and a few others. See [[Module:Yesno]].
		local pos = string.find(input_string, '/', 1, true);
		if pos ~= nil then
			if string.find(input_string, '/', pos + 1, true) == nil then
				local denominator = string.sub(input_string, pos+1, -1);
				local denom_value = tonumber(denominator);
				if denom_value ~= nil then
					return math.log10(denom_value);
				end
			end                        
		end
	end    

	input_number, input_string = p._cleanNumber(input_string);
	if input_string == nil then
		return err('precision input appears non-numeric')
	else
		return p._precision(input_string)
	end    
end

function p._precision(x)
	if type(x) == 'number' then
		x = tostring(x)
	end
	x = string.upper(x)

	local decimal = x:find('%.')
	local exponent_pos = x:find('E')
	local result = 0;

	if exponent_pos ~= nil then
		local exponent = string.sub(x, exponent_pos + 1)
		x = string.sub(x, 1, exponent_pos - 1)
		result = result - tonumber(exponent)
	end    

	if decimal ~= nil then
		result = result + string.len(x) - decimal
		return result
	end

	local pos = string.len(x);
	while x:byte(pos) == string.byte('0') do
		pos = pos - 1
		result = result - 1
		if pos &lt;= 0 then
			return 0
		end
	end

	return result
end


--[[
max

Finds the maximum argument

Usage:
{{#invoke:Math| max | value1 | value2 | ... }}

Note, any values that do not evaluate to numbers are ignored.
]]

function wrap.max(args)
	return p._max(unpackNumberArgs(args))
end

function p._max(...)
	local max_value = binary_fold((function(a, b) return a &gt; b end), ...)
	if max_value then
		return max_value
	end
end

--[[
min 

Finds the minimum argument

Usage:
{{#invoke:Math| min | value1 | value2 | ... }}
OR
{{#invoke:Math| min }}

When used with no arguments, it takes its input from the parent
frame.  Note, any values that do not evaluate to numbers are ignored.
]]

function wrap.min(args)
	return p._min(unpackNumberArgs(args))
end

function p._min(...)
	local min_value = binary_fold((function(a, b) return a &lt; b end), ...)
	if min_value then
		return min_value
	end
end

--[[
average 

Finds the average

Usage:
{{#invoke:Math| average | value1 | value2 | ... }}
OR
{{#invoke:Math| average }}

Note, any values that do not evaluate to numbers are ignored.
]]

function wrap.average(args)
	return p._average(unpackNumberArgs(args))
end

function p._average(...)
	local sum, count = fold((function(a, b) return a + b end), ...)
	if not sum then
		return 0
	else
		return sum / count
	end
end

--[[
round

Rounds a number to specified precision

Usage:
{{#invoke:Math | round | value | precision }}

--]]

function wrap.round(args)
	local value = p._cleanNumber(args[1] or args.value or 0)
	local precision = p._cleanNumber(args[2] or args.precision or 0)
	if value == nil or precision == nil then
		return err('round input appears non-numeric')
	else
		return p._round(value, precision)
	end    
end

function p._round(value, precision)
	local rescale = math.pow(10, precision or 0);
	return math.floor(value * rescale + 0.5) / rescale;
end

--[[
mod

Implements the modulo operator

Usage:
{{#invoke:Math | mod | x | y }}

--]]

function wrap.mod(args)
	local x = p._cleanNumber(args[1])
	local y = p._cleanNumber(args[2])
	if not x then
		return err('first argument to mod appears non-numeric')
	elseif not y then
		return err('second argument to mod appears non-numeric')
	else
		return p._mod(x, y)
	end    
end

function p._mod(x, y)
	local ret = x % y
	if not (0 &lt;= ret and ret &lt; y) then
		ret = 0
	end
	return ret
end

--[[
gcd

Calculates the greatest common divisor of multiple numbers

Usage:
{{#invoke:Math | gcd | value 1 | value 2 | value 3 | ... }}
--]]

function wrap.gcd(args)
	return p._gcd(unpackNumberArgs(args))
end

function p._gcd(...)
	local function findGcd(a, b)
		local r = b
		local oldr = a
		while r ~= 0 do
			local quotient = math.floor(oldr / r)
			oldr, r = r, oldr - quotient * r
		end
		if oldr &lt; 0 then
			oldr = oldr * -1
		end
		return oldr
	end
	local result, count = fold(findGcd, ...)
	return result
end

--[[
precision_format

Rounds a number to the specified precision and formats according to rules 
originally used for {{template:Rnd}}.  Output is a string.

Usage:
{{#invoke: Math | precision_format | number | precision }}
]]

function wrap.precision_format(args)
	local value_string = args[1] or 0
	local precision = args[2] or 0
	return p._precision_format(value_string, precision)
end

function p._precision_format(value_string, precision)
	-- For access to Mediawiki built-in formatter.
	local lang = mw.getContentLanguage();

	local value
	value, value_string = p._cleanNumber(value_string)
	precision = p._cleanNumber(precision)

	-- Check for non-numeric input
	if value == nil or precision == nil then
		return err('invalid input when rounding')
	end

	local current_precision = p._precision(value)
	local order = p._order(value)

	-- Due to round-off effects it is neccesary to limit the returned precision under
	-- some circumstances because the terminal digits will be inaccurately reported.
	if order + precision &gt;= 14 then
		orig_precision = p._precision(value_string)
		if order + orig_precision &gt;= 14 then
			precision = 13 - order;        
		end        
	end

	-- If rounding off, truncate extra digits
	if precision &lt; current_precision then
		value = p._round(value, precision)
		current_precision = p._precision(value)
	end    

	local formatted_num = lang:formatNum(math.abs(value))
	local sign

	-- Use proper unary minus sign rather than ASCII default
	if value &lt; 0 then
		sign = ''
	else
		sign = ''
	end    

	-- Handle cases requiring scientific notation
	if string.find(formatted_num, 'E', 1, true) ~= nil or math.abs(order) &gt;= 9 then
		value = value * math.pow(10, -order)
		current_precision = current_precision + order
		precision = precision + order
		formatted_num = lang:formatNum(math.abs(value))
	else
		order = 0;        
	end
	formatted_num = sign .. formatted_num

	-- Pad with zeros, if needed    
	if current_precision &lt; precision then
		local padding
		if current_precision &lt;= 0 then
			if precision &gt; 0 then
				local zero_sep = lang:formatNum(1.1)
				formatted_num = formatted_num .. zero_sep:sub(2,2)

				padding = precision
				if padding &gt; 20 then
					padding = 20
				end

				formatted_num = formatted_num .. string.rep('0', padding)
			end            
		else                   
			padding = precision - current_precision
			if padding &gt; 20 then
				padding = 20
			end
			formatted_num = formatted_num .. string.rep('0', padding)
		end
	end

	-- Add exponential notation, if necessary.
	if order ~= 0 then
		-- Use proper unary minus sign rather than ASCII default
		if order &lt; 0 then
			order = '' .. lang:formatNum(math.abs(order))
		else
			order = lang:formatNum(order)
		end    

		formatted_num = formatted_num .. '&lt;span style=&quot;margin:0 .15em 0 .25em&quot;&gt;&lt;/span&gt;10&lt;sup&gt;' .. order .. '&lt;/sup&gt;'
	end

	return formatted_num
end

--[[
Helper function that interprets the input numerically.  If the 
input does not appear to be a number, attempts evaluating it as
a parser functions expression.
]]

function p._cleanNumber(number_string)
	if type(number_string) == 'number' then
		-- We were passed a number, so we don't need to do any processing.
		return number_string, tostring(number_string)
	elseif type(number_string) ~= 'string' or not number_string:find('%S') then
		-- We were passed a non-string or a blank string, so exit.
		return nil, nil;
	end

	-- Attempt basic conversion
	local number = tonumber(number_string)

	-- If failed, attempt to evaluate input as an expression
	if number == nil then
		local success, result = pcall(mw.ext.ParserFunctions.expr, number_string)
		if success then
			number = tonumber(result)
			number_string = tostring(number)
		else
			number = nil
			number_string = nil
		end
	else
		number_string = number_string:match(&quot;^%s*(.-)%s*$&quot;) -- String is valid but may contain padding, clean it.
		number_string = number_string:match(&quot;^%+(.*)$&quot;) or number_string -- Trim any leading + signs.
		if number_string:find('^%-?0[xX]') then
			-- Number is using 0xnnn notation to indicate base 16; use the number that Lua detected instead.
			number_string = tostring(number)
		end
	end

	return number, number_string
end

--[[
Wrapper function that does basic argument processing. This ensures that all functions from #invoke can use either the current
frame or the parent frame, and it also trims whitespace for all arguments and removes blank arguments.
]]

local mt = { __index = function(t, k)
	return function(frame)
		if not getArgs then
			getArgs = require('Module:Arguments').getArgs
		end
		return wrap[k](getArgs(frame))  -- Argument processing is left to Module:Arguments. Whitespace is trimmed and blank arguments are removed.
	end
end }

return setmetatable(p, mt)</text>
      <sha1>2oc32zmcprh43j49a7jjarc5hix02hn</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Military navigation</title>
    <ns>828</ns>
    <id>53958334</id>
    <revision>
      <id>785705698</id>
      <parentid>779409669</parentid>
      <timestamp>2017-06-14T23:36:59Z</timestamp>
      <contributor>
        <username>Frietjes</username>
        <id>13791031</id>
      </contributor>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2589">local p = { }

local Navbox = require('Module:Navbox')
local Styles = require('Module:WPMILHIST Infobox style')

local function isblank(s)
	return (not s) or s == ''
end
local function isnotblank(s)
	return s and s ~= ''
end

function p.main(frame)
    local args = { }
    local pargs = frame:getParent().args
    local sargs = {}
    local tcats = ''

	-- process bodystyle and titlestyle
	if (pargs['style'] or '') == 'wide' then
		args['titlestyle'] = Styles['nav_box_wide_header']
		args['bodystyle'] = Styles['nav_box_wide']
	else
		args['titlestyle'] = Styles['nav_box_header']
		if (pargs['border'] or '') == 'child' or 
			(pargs['border'] or '') == 'subgroup' then
			args['bodystyle'] = Styles['nav_box_child']
			tcats = tcats .. '[[Category:Pages using military navigation subgroups without wide style]]'
		else
			args['bodystyle'] = Styles['nav_box']
		end
	end
	sargs['titlestyle'] = 1
	sargs['bodystyle'] = 1

	-- process groupstyle, abovestyle, belowstyle
	args['groupstyle'] = Styles['nav_box_label'] .. (pargs['groupstyle'] or '')
	sargs['groupstyle'] = 1
	args['abovestyle'] = Styles['nav_box_label'] .. (pargs['abovestyle'] or '')
	sargs['abovestyle'] = 1
	args['belowstyle'] = Styles['nav_box_label'] .. (pargs['belowstyle'] or '')
	sargs['belowstyle'] = 1
	-- process oddstyle, evenstyle
	args['oddstyle'] = isnotblank(pargs['odd_color'])
		and ('background:' .. pargs['odd_color']) or nil
	sargs['oddstyle'] = 1
	args['evenstyle'] = isnotblank(pargs['even_color'])
		and ('background:' .. pargs['even_color']) or nil
	sargs['evenstyle'] = 1
	-- process name and rawname
	args['name'] = (isnotblank(pargs['name']) and pargs['name']) or pargs['rawname']
	if isblank(args['name']) then args['navbar'] = 'plain' end
	sargs['name'] = 1
	sargs['rawname'] = 1
	
    -- copy the remaining args
    for k, v in pairs(pargs) do
        if v and v ~= '' and sargs[k] == nil then
            args[k] = v
        end
    end
	-- add allow wrap
	if args['title'] and (pargs['style'] or '') ~= 'wide' then
		if not mw.ustring.match(args['title'], '&lt;span class=&quot;wrap&quot;&gt;') then
			-- probably a more efficient way to match 15 or more characters
			local m = '[^%[%]&lt;&gt;|][^%[%]&lt;&gt;|][^%[%]&lt;&gt;|][^%[%]&lt;&gt;|][^%[%]&lt;&gt;|]'
			m = m .. m .. m
			args['title'] = mw.ustring.gsub(args['title'], 
				'%[%[(' .. m .. '[^%[%]&lt;&gt;|]*)%]%]', 
				'[[%1|&lt;span class=&quot;wrap&quot;&gt;%1&lt;/span&gt;]]')
			args['title'] = mw.ustring.gsub(args['title'], 
				'%[%[([^%[%]&lt;&gt;|]*)|(' .. m .. '[^%[%]&lt;&gt;|]*)%]%]', 
				'[[%1|&lt;span class=&quot;wrap&quot;&gt;%2&lt;/span&gt;]]')
		end
	end
    return tcats .. Navbox._navbox(args)

end  

return p</text>
      <sha1>d9xgb2xizmaizd5itywqxqc57xrt42d</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/config</title>
    <ns>828</ns>
    <id>42256703</id>
    <revision>
      <id>602886681</id>
      <parentid>602823531</parentid>
      <timestamp>2014-04-05T17:03:49Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>use cfg.demopage rather than cfg.page now that the default parameter has been changed on the /data page</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3545">--------------------------------------------------------------------------------
--                    Namespace detect configuration data                     --
--                                                                            --
-- This module stores configuration data for Module:Namespace detect. Here    --
-- you can localise the module to your wiki's language.                       --
--                                                                            --
-- To activate a configuration item, you need to uncomment it. This means     --
-- that you need to remove the text &quot;-- &quot; at the start of the line.           --
--------------------------------------------------------------------------------

local cfg = {} -- Don't edit this line.

--------------------------------------------------------------------------------
--                              Parameter names                               --
-- These configuration items specify custom parameter names. Values added     --
-- here will work in addition to the default English parameter names.         --
-- To add one extra name, you can use this format:                            --
--                                                                            --
-- cfg.foo = 'parameter name'                                                 --
--                                                                            --
-- To add multiple names, you can use this format:                            --
--                                                                            --
-- cfg.foo = {'parameter name 1', 'parameter name 2', 'parameter name 3'}     --
--------------------------------------------------------------------------------

---- This parameter displays content for the main namespace:
-- cfg.main = 'main'

---- This parameter displays in talk namespaces:
-- cfg.talk = 'talk'

---- This parameter displays content for &quot;other&quot; namespaces (namespaces for which
---- parameters have not been specified):
-- cfg.other = 'other'

---- This parameter makes talk pages behave as though they are the corresponding
---- subject namespace. Note that this parameter is used with [[Module:Yesno]].
---- Edit that module to change the default values of &quot;yes&quot;, &quot;no&quot;, etc.
-- cfg.subjectns = 'subjectns'

---- This parameter sets a demonstration namespace:
-- cfg.demospace = 'demospace'

---- This parameter sets a specific page to compare:
cfg.demopage = 'page'

--------------------------------------------------------------------------------
--                           Table configuration                              --
-- These configuration items allow customisation of the &quot;table&quot; function,     --
-- used to generate a table of possible parameters in the module              --
-- documentation.                                                             --
--------------------------------------------------------------------------------

---- The header for the namespace column in the wikitable containing the list of
---- possible subject-space parameters.
-- cfg.wikitableNamespaceHeader = 'Namespace'

---- The header for the wikitable containing the list of possible subject-space
---- parameters.
-- cfg.wikitableAliasesHeader = 'Aliases'

--------------------------------------------------------------------------------
--                        End of configuration data                           --
--------------------------------------------------------------------------------

return cfg -- Don't edit this line.</text>
      <sha1>1o6ozz56i8q0xgyl6xa41n2v7kelhli</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Namespace detect/data</title>
    <ns>828</ns>
    <id>42257476</id>
    <revision>
      <id>602886511</id>
      <parentid>602823622</parentid>
      <timestamp>2014-04-05T17:02:16Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>bug fix - use the demospace parameter as both key and value in the argKeys table</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2569">--------------------------------------------------------------------------------
--                          Namespace detect data                             --
-- This module holds data for [[Module:Namespace detect]] to be loaded per    --
-- page, rather than per #invoke, for performance reasons.                    --
--------------------------------------------------------------------------------

local cfg = require('Module:Namespace detect/config')

local function addKey(t, key, defaultKey)
	if key ~= defaultKey then
		t[#t + 1] = key
	end
end

-- Get a table of parameters to query for each default parameter name.
-- This allows wikis to customise parameter names in the cfg table while
-- ensuring that default parameter names will always work. The cfg table
-- values can be added as a string, or as an array of strings.

local defaultKeys = {
	'main',
	'talk',
	'other',
	'subjectns',
	'demospace',
	'demopage'
}

local argKeys = {}
for i, defaultKey in ipairs(defaultKeys) do
	argKeys[defaultKey] = {defaultKey}
end

for defaultKey, t in pairs(argKeys) do
	local cfgValue = cfg[defaultKey]
	local cfgValueType = type(cfgValue)
	if cfgValueType == 'string' then
		addKey(t, cfgValue, defaultKey)
	elseif cfgValueType == 'table' then
		for i, key in ipairs(cfgValue) do
			addKey(t, key, defaultKey)
		end
	end
	cfg[defaultKey] = nil -- Free the cfg value as we don't need it any more.
end

local function getParamMappings()
	--[[
	-- Returns a table of how parameter names map to namespace names. The keys
	-- are the actual namespace names, in lower case, and the values are the
	-- possible parameter names for that namespace, also in lower case. The
	-- table entries are structured like this:
	-- {
	--   [''] = {'main'},
	--   ['wikipedia'] = {'wikipedia', 'project', 'wp'},
	--   ...
	-- }
	--]]
	local mappings = {}
	local mainNsName = mw.site.subjectNamespaces[0].name
	mainNsName = mw.ustring.lower(mainNsName)
	mappings[mainNsName] = mw.clone(argKeys.main)
	mappings['talk'] = mw.clone(argKeys.talk)
	for nsid, ns in pairs(mw.site.subjectNamespaces) do
		if nsid ~= 0 then -- Exclude main namespace.
			local nsname = mw.ustring.lower(ns.name)
			local canonicalName = mw.ustring.lower(ns.canonicalName)
			mappings[nsname] = {nsname}
			if canonicalName ~= nsname then
				table.insert(mappings[nsname], canonicalName)
			end
			for _, alias in ipairs(ns.aliases) do
				table.insert(mappings[nsname], mw.ustring.lower(alias))
			end
		end
	end
	return mappings
end

return {
	argKeys = argKeys,
	cfg = cfg,
	mappings = getParamMappings()
}</text>
      <sha1>ojp6d3pc8mql5nufaqdg576c9so3479</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Navbar</title>
    <ns>828</ns>
    <id>38827227</id>
    <revision>
      <id>780167786</id>
      <parentid>771417723</parentid>
      <timestamp>2017-05-13T12:41:14Z</timestamp>
      <contributor>
        <username>Primefac</username>
        <id>11508456</id>
      </contributor>
      <comment>update from sandbox per [[Special:Diff/771417737]]</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="2517">local p = {}

local getArgs

function p._navbar(args)
	local titleArg = 1

	if args.collapsible then
		titleArg = 2
		if not args.plain then
			args.mini = 1
		end
		if args.fontcolor then
			args.fontstyle = 'color:' .. args.fontcolor .. ';'
		end
		args.style = 'float:left; text-align:left'
	end

	local titleText = args[titleArg] or (':' .. mw.getCurrentFrame():getParent():getTitle())
	local title = mw.title.new(mw.text.trim(titleText), 'Template');

	if not title then
		error('Invalid title ' .. titleText)
	end

	local talkpage = title.talkPageTitle and title.talkPageTitle.fullText or '';

	local div = mw.html.create():tag('div')
	div
		:addClass('plainlinks')
		:addClass('hlist')
		:addClass('navbar')
		:cssText(args.style)

	if args.mini then div:addClass('mini') end

	if not (args.mini or args.plain) then
		div
			:tag('span')
				:css('word-spacing', 0)
				:cssText(args.fontstyle)
				:wikitext(args.text or 'This box:')
				:wikitext(' ')
	end

	if args.brackets then
		div
			:tag('span')
				:css('margin-right', '-0.125em')
				:cssText(args.fontstyle)
				:wikitext('&amp;#91; ')
	end

	local ul = div:tag('ul');

	ul
		:tag('li')
			:addClass('nv-view')
			:wikitext('[[' .. title.fullText .. '|')
			:tag(args.mini and 'abbr' or 'span')
				:attr('title', 'View this template')
				:cssText(args.fontstyle)
				:wikitext(args.mini and 'v' or 'view')
				:done()
			:wikitext(']]')
			:done()
		:tag('li')
			:addClass('nv-talk')
			:wikitext('[[' .. talkpage .. '|')
			:tag(args.mini and 'abbr' or 'span')
				:attr('title', 'Discuss this template')
				:cssText(args.fontstyle)
				:wikitext(args.mini and 't' or 'talk')
				:done()
			:wikitext(']]');

	if not args.noedit then
		ul
			:tag('li')
				:addClass('nv-edit')
				:wikitext('[' .. title:fullUrl('action=edit') .. ' ')
				:tag(args.mini and 'abbr' or 'span')
					:attr('title', 'Edit this template')
					:cssText(args.fontstyle)
					:wikitext(args.mini and 'e' or 'edit')
					:done()
				:wikitext(']');
	end

	if args.brackets then
		div
			:tag('span')
				:css('margin-left', '-0.125em')
				:cssText(args.fontstyle)
				:wikitext(' &amp;#93;')
	end

	if args.collapsible then
		div
			:done()
		:tag('div')
			:css('font-size', '114%')
			:css('margin', args.mini and '0 4em' or '0 7em')
			:cssText(args.fontstyle)
			:wikitext(args[1])
	end

	return tostring(div:done())
end

function p.navbar(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	return p._navbar(getArgs(frame))
end

return p</text>
      <sha1>9d4ism2psi1oucu9pnyveg4m6i2oobx</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Navbox</title>
    <ns>828</ns>
    <id>38634746</id>
    <revision>
      <id>790205321</id>
      <parentid>788016368</parentid>
      <timestamp>2017-07-12T07:55:41Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <comment>removed .navbox-spacing-temp mask, no longer used by site CSS</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="11599">--
-- This module implements {{Navbox}}
--

local p = {}

local navbar = require('Module:Navbar')._navbar
local getArgs -- lazily initialized

local args
local border
local listnums = {}
local ODD_EVEN_MARKER = '\127_ODDEVEN_\127'
local RESTART_MARKER = '\127_ODDEVEN0_\127'
local REGEX_MARKER = '\127_ODDEVEN(%d?)_\127'

local function striped(wikitext)
	-- Return wikitext with markers replaced for odd/even striping.
	-- Child (subgroup) navboxes are flagged with a category that is removed
	-- by parent navboxes. The result is that the category shows all pages
	-- where a child navbox is not contained in a parent navbox.
	local orphanCat = '[[Category:Navbox orphans]]'
	if border == 'subgroup' and args.orphan ~= 'yes' then
		-- No change; striping occurs in outermost navbox.
		return wikitext .. orphanCat
	end
	local first, second = 'odd', 'even'
	if args.evenodd then
		if args.evenodd == 'swap' then
			first, second = second, first
		else
			first = args.evenodd
			second = first
		end
	end
	local changer
	if first == second then
		changer = first
	else
		local index = 0
		changer = function (code)
			if code == '0' then
				-- Current occurrence is for a group before a nested table.
				-- Set it to first as a valid although pointless class.
				-- The next occurrence will be the first row after a title
				-- in a subgroup and will also be first.
				index = 0
				return first
			end
			index = index + 1
			return index % 2 == 1 and first or second
		end
	end
	local regex = orphanCat:gsub('([%[%]])', '%%%1')
	return (wikitext:gsub(regex, ''):gsub(REGEX_MARKER, changer))  -- () omits gsub count
end

local function processItem(item, nowrapitems)
	if item:sub(1, 2) == '{|' then
		-- Applying nowrap to lines in a table does not make sense.
		-- Add newlines to compensate for trim of x in |parm=x in a template.
		return '\n' .. item ..'\n'
	end
	if nowrapitems == 'yes' then
		local lines = {}
		for line in (item .. '\n'):gmatch('([^\n]*)\n') do
			local prefix, content = line:match('^([*:;#]+)%s*(.*)')
			if prefix and not content:match('^&lt;span class=&quot;nowrap&quot;&gt;') then
				line = prefix .. '&lt;span class=&quot;nowrap&quot;&gt;' .. content .. '&lt;/span&gt;'
			end
			table.insert(lines, line)
		end
		item = table.concat(lines, '\n')
	end
	if item:match('^[*:;#]') then
		return '\n' .. item ..'\n'
	end
	return item
end

local function renderNavBar(titleCell)

	if args.navbar ~= 'off' and args.navbar ~= 'plain' and not (not args.name and mw.getCurrentFrame():getParent():getTitle():gsub('/sandbox$', '') == 'Template:Navbox') then
		titleCell:wikitext(navbar{
			args.name,
			mini = 1,
			fontstyle = (args.basestyle or '') .. ';' .. (args.titlestyle or '') .. ';background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none;'
		})
	end

end

--
--   Title row
--
local function renderTitleRow(tbl)
	if not args.title then return end

	local titleRow = tbl:tag('tr')

	if args.titlegroup then
		titleRow
			:tag('th')
				:attr('scope', 'row')
				:addClass('navbox-group')
				:addClass(args.titlegroupclass)
				:cssText(args.basestyle)
				:cssText(args.groupstyle)
				:cssText(args.titlegroupstyle)
				:wikitext(args.titlegroup)
	end

	local titleCell = titleRow:tag('th'):attr('scope', 'col')

	if args.titlegroup then
		titleCell
			:css('border-left', '2px solid #fdfdfd')
			:css('width', '100%')
	end

	local titleColspan = 2
	if args.imageleft then titleColspan = titleColspan + 1 end
	if args.image then titleColspan = titleColspan + 1 end
	if args.titlegroup then titleColspan = titleColspan - 1 end

	titleCell
		:cssText(args.basestyle)
		:cssText(args.titlestyle)
		:addClass('navbox-title')
		:attr('colspan', titleColspan)

	renderNavBar(titleCell)

	titleCell
		:tag('div')
			:attr('id', mw.uri.anchorEncode(args.title))
			:addClass(args.titleclass)
			:css('font-size', '114%')
			:css('margin', '0 4em')
			:wikitext(processItem(args.title))
end

--
--   Above/Below rows
--

local function getAboveBelowColspan()
	local ret = 2
	if args.imageleft then ret = ret + 1 end
	if args.image then ret = ret + 1 end
	return ret
end

local function renderAboveRow(tbl)
	if not args.above then return end

	tbl:tag('tr')
		:tag('td')
			:addClass('navbox-abovebelow')
			:addClass(args.aboveclass)
			:cssText(args.basestyle)
			:cssText(args.abovestyle)
			:attr('colspan', getAboveBelowColspan())
			:tag('div')
				:wikitext(processItem(args.above, args.nowrapitems))
end

local function renderBelowRow(tbl)
	if not args.below then return end

	tbl:tag('tr')
		:tag('td')
			:addClass('navbox-abovebelow')
			:addClass(args.belowclass)
			:cssText(args.basestyle)
			:cssText(args.belowstyle)
			:attr('colspan', getAboveBelowColspan())
			:tag('div')
				:wikitext(processItem(args.below, args.nowrapitems))
end

--
--   List rows
--
local function renderListRow(tbl, index, listnum)
	local row = tbl:tag('tr')

	if index == 1 and args.imageleft then
		row
			:tag('td')
				:addClass('navbox-image')
				:addClass(args.imageclass)
				:css('width', '1px')               -- Minimize width
				:css('padding', '0px 2px 0px 0px')
				:cssText(args.imageleftstyle)
				:attr('rowspan', #listnums)
				:tag('div')
					:wikitext(processItem(args.imageleft))
	end

	if args['group' .. listnum] then
		local groupCell = row:tag('th')

		groupCell
			:attr('scope', 'row')
			:addClass('navbox-group')
			:addClass(args.groupclass)
			:cssText(args.basestyle)
            :css('width', args.groupwidth or '1%') -- If groupwidth not specified, minimize width

		groupCell
			:cssText(args.groupstyle)
			:cssText(args['group' .. listnum .. 'style'])
			:wikitext(args['group' .. listnum])
	end

	local listCell = row:tag('td')

	if args['group' .. listnum] then
		listCell
			:css('text-align', 'left')
			:css('border-left-width', '2px')
			:css('border-left-style', 'solid')
	else
		listCell:attr('colspan', 2)
	end

	if not args.groupwidth then
		listCell:css('width', '100%')
	end

	local rowstyle  -- usually nil so cssText(rowstyle) usually adds nothing
	if index % 2 == 1 then
		rowstyle = args.oddstyle
	else
		rowstyle = args.evenstyle
	end

	local listText = args['list' .. listnum]
	local oddEven = ODD_EVEN_MARKER
	if listText:sub(1, 12) == '&lt;/div&gt;&lt;table' then
		-- Assume list text is for a subgroup navbox so no automatic striping for this row.
		oddEven = listText:find('&lt;th[^&gt;]*&quot;navbox%-title&quot;') and RESTART_MARKER or 'odd'
	end
	listCell
		:css('padding', '0px')
		:cssText(args.liststyle)
		:cssText(rowstyle)
		:cssText(args['list' .. listnum .. 'style'])
		:addClass('navbox-list')
		:addClass('navbox-' .. oddEven)
		:addClass(args.listclass)
		:tag('div')
			:css('padding', (index == 1 and args.list1padding) or args.listpadding or '0em 0.25em')
			:wikitext(processItem(listText, args.nowrapitems))

	if index == 1 and args.image then
		row
			:tag('td')
				:addClass('navbox-image')
				:addClass(args.imageclass)
				:css('width', '1px')               -- Minimize width
				:css('padding', '0px 0px 0px 2px')
				:cssText(args.imagestyle)
				:attr('rowspan', #listnums)
				:tag('div')
					:wikitext(processItem(args.image))
	end
end


--
--   Tracking categories
--

local function needsHorizontalLists()
	if border == 'subgroup' or args.tracking == 'no' then
		return false
	end
	local listClasses = {
		['plainlist'] = true, ['hlist'] = true, ['hlist hnum'] = true,
		['hlist hwrap'] = true, ['hlist vcard'] = true, ['vcard hlist'] = true,
		['hlist vevent'] = true,
	}
	return not (listClasses[args.listclass] or listClasses[args.bodyclass])
end

local function hasBackgroundColors()
	for _, key in ipairs({'titlestyle', 'groupstyle', 'basestyle'}) do
		if tostring(args[key]):find('background', 1, true) then
			return true
		end
	end
end

local function isIllegible()
	local styleratio = require('Module:Color contrast')._styleratio

	for key, style in pairs(args) do
		if tostring(key):match(&quot;style$&quot;) then
			if styleratio{mw.text.unstripNoWiki(style)} &lt; 4.5 then
				return true
			end
		end
	end
	return false
end

local function getTrackingCategories()
	local cats = {}
	if needsHorizontalLists() then table.insert(cats, 'Navigational boxes without horizontal lists') end
	if hasBackgroundColors() then table.insert(cats, 'Navboxes using background colours') end
	if isIllegible() then table.insert(cats, 'Potentially illegible navboxes') end
	return cats
end

local function renderTrackingCategories(builder)
	local title = mw.title.getCurrentTitle()
	if title.namespace ~= 10 then return end -- not in template space
	local subpage = title.subpageText
	if subpage == 'doc' or subpage == 'sandbox' or subpage == 'testcases' then return end

	for _, cat in ipairs(getTrackingCategories()) do
		builder:wikitext('[[Category:' .. cat .. ']]')
	end
end

--
--   Main navbox tables
--
local function renderMainTable()
	local tbl = mw.html.create('table')
		:addClass('nowraplinks')
		:addClass(args.bodyclass)

	if args.title and (args.state ~= 'plain' and args.state ~= 'off') then
		tbl
			:addClass('collapsible')
			:addClass(args.state or 'autocollapse')
	end

	tbl:css('border-spacing', 0)
	if border == 'subgroup' or border == 'none' then
		tbl
			:addClass('navbox-subgroup')
			:cssText(args.bodystyle)
			:cssText(args.style)
	else  -- regular navbox - bodystyle and style will be applied to the wrapper table
		tbl
			:addClass('navbox-inner')
			:css('background', 'transparent')
			:css('color', 'inherit')
	end
	tbl:cssText(args.innerstyle)

	renderTitleRow(tbl)
	renderAboveRow(tbl)
	for i, listnum in ipairs(listnums) do
		renderListRow(tbl, i, listnum)
	end
	renderBelowRow(tbl)

	return tbl
end

function p._navbox(navboxArgs)
	args = navboxArgs

	for k, _ in pairs(args) do
		if type(k) == 'string' then
			local listnum = k:match('^list(%d+)$')
			if listnum then table.insert(listnums, tonumber(listnum)) end
		end
	end
	table.sort(listnums)

	border = mw.text.trim(args.border or args[1] or '')
	if border == 'child' then
		border = 'subgroup'
	end

	-- render the main body of the navbox
	local tbl = renderMainTable()

	-- render the appropriate wrapper around the navbox, depending on the border param
	local res = mw.html.create()
	if border == 'none' then
		local nav = res:tag('div')
			:attr('role', 'navigation')
			:node(tbl)
		if args.title then
			nav:attr('aria-labelledby', mw.uri.anchorEncode(args.title))
		else
			nav:attr('aria-label', 'Navbox')
		end
	elseif border == 'subgroup' then
		-- We assume that this navbox is being rendered in a list cell of a parent navbox, and is
		-- therefore inside a div with padding:0em 0.25em. We start with a &lt;/div&gt; to avoid the
		-- padding being applied, and at the end add a &lt;div&gt; to balance out the parent's &lt;/div&gt;
		res
			:wikitext('&lt;/div&gt;')
			:node(tbl)
			:wikitext('&lt;div&gt;')
	else
		local nav = res:tag('div')
			:attr('role', 'navigation')
			:addClass('navbox')
			:cssText(args.bodystyle)
			:cssText(args.style)
			:css('padding', '3px')
			:node(tbl)
		if args.title then
			nav:attr('aria-labelledby', mw.uri.anchorEncode(args.title))
		else
			nav:attr('aria-label', 'Navbox')
		end
	end

	renderTrackingCategories(res)

	return striped(tostring(res))
end

function p.navbox(frame)
	if not getArgs then
		getArgs = require('Module:Arguments').getArgs
	end
	args = getArgs(frame, {wrappers = 'Template:Navbox'})

	-- Read the arguments in the order they'll be output in, to make references number in the right order.
	local _
	_ = args.title
	_ = args.above
	for i = 1, 20 do
		_ = args[&quot;group&quot; .. tostring(i)]
		_ = args[&quot;list&quot; .. tostring(i)]
	end
	_ = args.below

	return p._navbox(args)
end

return p</text>
      <sha1>2535j56ygjbxd128b319uose3yh7ngf</sha1>
    </revision>
  </page>
  <page>
    <title>Module:No globals</title>
    <ns>828</ns>
    <id>42567026</id>
    <revision>
      <id>606781024</id>
      <parentid>605595284</parentid>
      <timestamp>2014-05-02T15:35:56Z</timestamp>
      <contributor>
        <username>Jackmcbarn</username>
        <id>19285809</id>
      </contributor>
      <comment>rm name exception</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="307">local mt = getmetatable(_G) or {}
function mt.__index (t, k)
	if k ~= 'arg' then
		error('Tried to read nil global ' .. tostring(k), 2)
	end
	return nil
end
function mt.__newindex(t, k, v)
	if k ~= 'arg' then
		error('Tried to write global ' .. tostring(k), 2)
	end
	rawset(t, k, v)
end
setmetatable(_G, mt)</text>
      <sha1>gggsv54pq7f94l3up48hr91qtxnskdm</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Noinclude</title>
    <ns>828</ns>
    <id>52107793</id>
    <revision>
      <id>746841122</id>
      <parentid>746799326</parentid>
      <timestamp>2016-10-29T22:09:44Z</timestamp>
      <contributor>
        <username>CambridgeBayWeather</username>
        <id>294180</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Module:Noinclude]]&quot;: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Require template editor access] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="143">local p = {}
function p.noinclude(frame)
	return frame:getParent():preprocess(&quot;&lt;noinclude&gt;&quot; .. frame.args.text .. &quot;&lt;/noinclude&gt;&quot;);
end
return p</text>
      <sha1>46540us5h0lf6rm25j7fyb26bxvq4q9</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Ns has subpages</title>
    <ns>828</ns>
    <id>44657407</id>
    <revision>
      <id>637438142</id>
      <parentid>637436476</parentid>
      <timestamp>2014-12-10T06:37:29Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <minor/>
      <comment>Protected Module:Ns has subpages: [[WP:High-risk templates|High-risk Lua module]] ([Edit=Allow only template editors and admins] (indefinite) [Move=Allow only template editors and admins] (indefinite))</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1678">-- This module implements [[Template:Ns has subpages]].
-- While the template is fairly simple, this information is made available to
-- Lua directly, so using a module means that we don't have to update the
-- template as new namespaces are added.

local p = {}

function p._main(ns, frame)
	-- Get the current namespace if we were not passed one.
	if not ns then
		ns = mw.title.getCurrentTitle().namespace
	end

	-- Look up the namespace table from mw.site.namespaces. This should work
	-- for a majority of cases.
	local nsTable = mw.site.namespaces[ns]

	-- Try using string matching to get the namespace from page names.
	-- Do a quick and dirty bad title check to try and make sure we do the same
	-- thing as {{NAMESPACE}} in most cases.
	if not nsTable and type(ns) == 'string' and not ns:find('[&lt;&gt;|%[%]{}]') then
		local nsStripped = ns:gsub('^[_%s]*:', '')
		nsStripped = nsStripped:gsub(':.*$', '')
		nsTable = mw.site.namespaces[nsStripped]
	end

	-- If we still have no match then try the {{NAMESPACE}} parser function,
	-- which should catch the remainder of cases. Don't use a mw.title object,
	-- as this would increment the expensive function count for each new page
	-- tested.
	if not nsTable then
		frame = frame or mw.getCurrentFrame()
		local nsProcessed = frame:callParserFunction('NAMESPACE', ns)
		nsTable = nsProcessed and mw.site.namespaces[nsProcessed]
	end
	
	return nsTable and nsTable.hasSubpages
end

function p.main(frame)
	local ns = frame:getParent().args[1]
	if ns then
		ns = ns:match('^%s*(.-)%s*$') -- trim whitespace
		ns = tonumber(ns) or ns
	end
	local hasSubpages = p._main(ns, frame)
	return hasSubpages and 'yes' or ''
end

return p</text>
      <sha1>qb0b1z2vff7kifnw21v205d791esbiz</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal</title>
    <ns>828</ns>
    <id>38965350</id>
    <revision>
      <id>752302732</id>
      <parentid>729840072</parentid>
      <timestamp>2016-11-30T14:58:40Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>quick hack to prevent p._image from returning filenames with things like &quot;|border&quot; in them</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="10273">--[==[ This module is a Lua implementation of the old {{Portal}} template. As of August 2013 it is used on nearly 5,000,000 articles.
-- Please take care when updating it! It outputs two functions: p.portal, which generates a list of portals, and p.image, which
-- produces the image name for an individual portal.

-- The portal image data is kept in submodules of [[Module:Portal/images]], listed below:
-- [[Module:Portal/images/a]]		- for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]		- for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]		- for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]		- for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]		- for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]		- for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]		- for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]		- for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]		- for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]		- for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]		- for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]		- for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]		- for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]		- for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]		- for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]		- for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]		- for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]		- for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]		- for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]		- for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]		- for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]		- for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]		- for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]		- for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]		- for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]		- for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]	- for portal names beginning with any other letters. This includes numbers,
-- 									  letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]]	- for adding aliases for existing portal names. Use this page for variations
-- 									  in spelling and diacritics, etc., no matter what letter the portal begins with.
--
-- The images data pages are separated by the first letter to reduce server load when images are added, changed, or removed.
-- Previously all the images were on one data page at [[Module:Portal/images]], but this had the disadvantage that all
-- 5,000,000 pages using this module needed to be refreshed every time an image was added or removed.
]==]

local p = {}

local function matchImagePage(s)
	-- Finds the appropriate image subpage given a lower-case
	-- portal name plus the first letter of that portal name.
	if type(s) ~= 'string' or #s &lt; 1 then return end
	local firstLetter = mw.ustring.sub(s, 1, 1)
	local imagePage
	if mw.ustring.find(firstLetter, '^[a-z]') then
		imagePage = 'Module:Portal/images/' .. firstLetter
	else
		imagePage = 'Module:Portal/images/other'
	end
	return mw.loadData(imagePage)[s]
end

local function getAlias(s)
	-- Gets an alias from the image alias data page.
	local aliasData = mw.loadData('Module:Portal/images/aliases')
	for portal, aliases in pairs(aliasData) do
		for _, alias in ipairs(aliases) do
			if alias == s then
				return portal
			end
		end
	end
end

local function getImageName(s)
	-- Gets the image name for a given string.
	local default = 'Portal-puzzle.svg|link=|alt='
	if type(s) ~= 'string' or #s &lt; 1 then
		return default
	end
	s = mw.ustring.lower(s)
	return matchImagePage(s) or matchImagePage(getAlias(s)) or default
end

function p._portal(portals, args)
	-- This function builds the portal box used by the {{portal}} template.
	local root = mw.html.create('div')
		:attr('role', 'navigation')
		:attr('aria-label', 'Portals')
		:addClass('noprint portal plainlist')
		:addClass(args.left and 'tleft' or 'tright')
		:css('margin', args.margin or (args.left == 'yes' and '0.5em 1em 0.5em 0') or '0.5em 0 0.5em 1em')
		:css('border', 'solid #aaa 1px')
		:newline()

	-- If no portals have been specified, display an error and add the page to a tracking category.
	if not portals[1] then
		root:wikitext('&lt;strong class=&quot;error&quot;&gt;No portals specified: please specify at least one portal&lt;/strong&gt;[[Category:Portal templates without a parameter]]')
		return tostring(root)
	end

	-- Start the list. This corresponds to the start of the wikitext table in the old [[Template:Portal]].
	local listroot = root:tag('ul')
		:css('display', 'table')
		:css('box-sizing', 'border-box')
		:css('padding', '0.1em')
		:css('max-width', '175px')
		:css('width', type(args.boxsize) == 'string' and (args.boxsize .. 'px') or nil)
		:css('background', '#f9f9f9')
		:css('font-size', '85%')
		:css('line-height', '110%')
		:css('font-style', 'italic')
		:css('font-weight', 'bold')

	-- Display the portals specified in the positional arguments.
	for _, portal in ipairs(portals) do
		local image = getImageName(portal)

		-- Generate the html for the image and the portal name.
		listroot
			:newline()
			:tag('li')
				:css('display', 'table-row')
				:tag('span')
					:css('display', 'table-cell')
					:css('padding', '0.2em')
					:css('vertical-align', 'middle')
					:css('text-align', 'center')
					:wikitext(string.format('[[File:%s|32x28px|class=noviewer]]', image))
					:done()
				:tag('span')
					:css('display', 'table-cell')
					:css('padding', '0.2em 0.2em 0.2em 0.3em')
					:css('vertical-align', 'middle')
					:wikitext(string.format('[[Portal:%s|%s%sportal]]', portal, portal, args['break'] and '&lt;br /&gt;' or ' '))
	end
	return tostring(root)
end

function p._image(portals)
	-- Wrapper function to allow getImageName() to be accessed through #invoke.
	local name = getImageName(portals[1])
	return name:match('^(.-)|') or name -- FIXME: use a more elegant way to separate borders etc. from the image name
end

local function getAllImageTables()
	-- Returns an array containing all image subpages (minus aliases) as loaded by mw.loadData.
	local images = {}
	for i, subpage in ipairs{'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'other'} do
		images[i] = mw.loadData('Module:Portal/images/' .. subpage)
	end
	return images
end

function p._displayAll(portals, args)
	-- This function displays all portals that have portal images. This function is for maintenance purposes and should not be used in
	-- articles, for two reasons: 1) there are over 1500 portals with portal images, and 2) the module doesn't record how the portal
	-- names are capitalized, so the portal links may be broken.
	local lang = mw.language.getContentLanguage()
	local count = 1
	for _, imageTable in ipairs(getAllImageTables()) do
		for portal in pairs(imageTable) do
			portals[count] = lang:ucfirst(portal)
			count = count + 1
		end
	end
	return p._portal(portals, args)
end

function p._imageDupes()
	-- This function searches the image subpages to find duplicate images. If duplicate images exist, it is not necessarily a bad thing,
	-- as different portals might just happen to choose the same image. However, this function is helpful in identifying images that
	-- should be moved to a portal alias for ease of maintenance.
	local exists, dupes = {}, {}
	for _, imageTable in ipairs(getAllImageTables()) do
		for portal, image in pairs(imageTable) do
			if not exists[image] then
				exists[image] = portal
			else
				table.insert(dupes, string.format('The image &quot;[[:File:%s|%s]]&quot; is used for both portals &quot;%s&quot; and &quot;%s&quot;.', image, image, exists[image], portal))
			end
		end
	end
	if #dupes &lt; 1 then
		return 'No duplicate images found.'
	else
		return 'The following duplicate images were found:\n* ' .. table.concat(dupes, '\n* ')
	end
end

local function processPortalArgs(args)
	-- This function processes a table of arguments and returns two tables: an array of portal names for processing by ipairs, and a table of
	-- the named arguments that specify style options, etc. We need to use ipairs because we want to list all the portals in the order
	-- they were passed to the template, but we also want to be able to deal with positional arguments passed explicitly, for example
	-- {{portal|2=Politics}}. The behaviour of ipairs is undefined if nil values are present, so we need to make sure they are all removed.
	args = type(args) == 'table' and args or {}
	local portals = {}
	local namedArgs = {}
	for k, v in pairs(args) do
		if type(k) == 'number' and type(v) == 'string' then -- Make sure we have no non-string portal names.
			table.insert(portals, k)
		elseif type(k) ~= 'number' then
			namedArgs[k] = v
		end
	end
	table.sort(portals)
	for i, v in ipairs(portals) do
		portals[i] = args[v]
	end
	return portals, namedArgs
end

local function makeWrapper(funcName)
	-- Processes external arguments and sends them to the other functions.
	return function (frame)
		-- If called via #invoke, use the args passed into the invoking
		-- template, or the args passed to #invoke if any exist. Otherwise
		-- assume args are being passed directly in from the debug console
		-- or from another Lua module.
		local origArgs
		if type(frame.getParent) == 'function' then
			origArgs = frame:getParent().args
			for k, v in pairs(frame.args) do
				origArgs = frame.args
				break
			end
		else
			origArgs = frame
		end
		-- Trim whitespace and remove blank arguments.
		local args = {}
		for k, v in pairs(origArgs) do
			if type(v) == 'string' then
				v = mw.text.trim(v)
			end
			if v ~= '' then
				args[k] = v
			end
		end
		return p[funcName](processPortalArgs(args)) -- passes two tables to func: an array of portal names, and a table of named arguments.
	end
end

for _, funcName in ipairs{'portal', 'image', 'imageDupes', 'displayAll'} do
	p[funcName] = makeWrapper('_' .. funcName)
end

return p</text>
      <sha1>7np96ej58kiycf2l3mbp0omxk8k6db5</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/h</title>
    <ns>828</ns>
    <id>40416158</id>
    <revision>
      <id>801016711</id>
      <parentid>801016062</parentid>
      <timestamp>2017-09-17T04:36:18Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;holy roman empire&quot;] = &quot;Reichskrone.jpg|link=|alt=image&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="6544">--[==[ This is the &quot;H&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;H&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;haiti&quot;] = &quot;Flag of Haiti.svg|border|link=|alt=flag&quot;,
	[&quot;halo&quot;] = &quot;Wikihalo.svg|alt=icon&quot;,
	[&quot;hamburg&quot;] = &quot;Coat of arms of Hamburg.svg|link=|alt=&quot;,
	[&quot;hamilton, ontario&quot;] = &quot;Flag of Hamilton.svg|border|link=|alt=flag&quot;,
	[&quot;hampshire&quot;] = &quot;EnglandHampshire.svg|link=|alt=&quot;,
	[&quot;handball&quot;] = &quot;Ballon de handball.svg|link=|alt=&quot;,
	[&quot;harare&quot;] = &quot;Flag of Harare.svg|border|link=|alt=flag&quot;,
	[&quot;harry potter&quot;] = &quot;HP - Harry Potter wordmark.svg|link=|alt=&quot;,
	[&quot;haryana&quot;] = &quot;YamunaRiver.jpg|alt=icon&quot;,
	[&quot;hawaii&quot;] = &quot;Flag of Hawaii.svg|border|link=|alt=flag&quot;,
	[&quot;hazara people&quot;] = &quot;Hazara people portal logo.png|link=|alt=&quot;,
	[&quot;hazardous materials&quot;] = &quot;GHS-pictogram-exclam.svg|link=|alt=&quot;,
	[&quot;health and fitness&quot;] = &quot;Nuvola apps package favorite.svg|alt=icon&quot;,
	[&quot;heathenism&quot;] = &quot;Heathenism symbol.PNG|alt=icon&quot;,
	[&quot;heavy metal&quot;] = &quot;Audio a.svg|link=|alt=&quot;,
	[&quot;hellenismos&quot;] = &quot;Laurel wreath fa13.gif|link=|alt=&quot;,
	[&quot;help&quot;] = &quot;Wikipedia help.png|alt=icon&quot;,
	[&quot;heraldry&quot;] = &quot;Azure, a bend Or.svg|link=|alt=&quot;,
	[&quot;heraldry and vexillology&quot;] = &quot;En-wikipedia arms 9.svg|alt=icon&quot;,
	[&quot;hertfordshire&quot;] = &quot;Hertsflag.jpg|link=|alt=&quot;,
	[&quot;hesse&quot;] = &quot;Flag of Hesse.svg|border|link=|alt=flag&quot;,
	[&quot;himachal pradesh&quot;] = &quot;Kinnaur Kailash.jpg|link=|alt=&quot;,
	[&quot;himalayas&quot;] = &quot;Everest North Face toward Base Camp Tibet Luca Galuzzi 2006.jpg|alt=icon&quot;,
	[&quot;hindu mythology&quot;] = &quot;HinduSwastika.svg|link=|alt=&quot;,
	[&quot;hinduism&quot;] = &quot;Aum Om red.svg|link=|alt=&quot;,
	[&quot;hindustani&quot;] = &quot;Hindustani0804.png|link=|alt=script&quot;,
	[&quot;hip hop&quot;] = &quot;Loudspeaker-crystal-theme.svg|alt=icon&quot;,
	[&quot;hisar&quot;] = &quot;Fort of Firoz Shah Tughlaq at Hisar.jpg|link=|alt=photo&quot;,
	[&quot;hispanic and latino americans&quot;] = &quot;Flag of the Hispanicity.svg|link=|alt=icon&quot;,
	[&quot;history&quot;] = &quot;P history.svg|link=|alt=&quot;,
	[&quot;history of biology&quot;] = &quot;Plato's Academy mosaic from Pompeii.jpg|link=|alt=mosaic&quot;,
	[&quot;history of canada&quot;] = &quot;Canadian Red Ensign (1957-1965).svg|link=|alt=&quot;,
	[&quot;history of imperial china&quot;] = &quot;.jpg|link=|alt=&quot;,
	[&quot;history of nuclear enterprise&quot;] = &quot;HD.6D.142 (10821940184).jpg|link=|alt=photo&quot;,
	[&quot;history of science&quot;] = &quot;Newton's reflecting telescope.jpg|link=|alt=image&quot;,
	[&quot;history of the latter day saint movement&quot;] = &quot;Joseph Smith receiving golden plates.jpg|border|link=|alt=&quot;,
	[&quot;hitchhiker's&quot;] = &quot;Answer to Life.png|link=|alt=icon&quot;,
	[&quot;hitchhiker's guide to the galaxy&quot;] = &quot;Answer to Life.png|link=|alt=icon&quot;,
	[&quot;holidays&quot;] = &quot;Calendar icon.svg|alt=icon&quot;,
	[&quot;holy roman empire&quot;] = &quot;Reichskrone.jpg|link=|alt=image&quot;,
	[&quot;home&quot;] = &quot;Big single-family home 2.jpg|link=|alt=&quot;,
	[&quot;home improvement&quot;] = &quot;Preferences-system.svg|link=|alt=&quot;,
	[&quot;honduras&quot;] = &quot;Flag of Honduras.svg|border|link=|alt=flag&quot;,
	[&quot;hong kong&quot;] = &quot;Hong Kong SAR Regional Emblem.svg|link=|alt=&quot;,
	[&quot;horror fiction&quot;] = &quot;Vampire Smiley.png|alt=icon&quot;,
	[&quot;horse racing&quot;] = &quot;Flat racing clipart.svg|alt=icon&quot;,
	[&quot;horses&quot;] = &quot;Finnhorse stallion.jpg|alt=icon&quot;,
	[&quot;horticulture and gardening&quot;] = &quot;Pieskowa Skaa ogrd zamkowy.jpg|border|link=|alt=image&quot;,
	[&quot;house, m.d.&quot;] = &quot;Television.svg|alt=icon&quot;,
	[&quot;houston&quot;] = &quot;Flag of Houston, Texas.png|border|link=|alt=flag&quot;,
	[&quot;hudson valley&quot;] = &quot;Hudson river from bear mountain bridge.jpg|alt=icon&quot;,
	[&quot;human body&quot;] = &quot;Human.png|link=|alt=&quot;,
	[&quot;human rights&quot;] = &quot;HumanRightsLogo.svg|link=|alt=&quot;,
	[&quot;human spaceflight&quot;] = &quot;STS-41-B MMU.jpg|link=|alt=&quot;,
	[&quot;hungary&quot;] = &quot;Flag of Hungary.svg|border|link=|alt=flag&quot;,
	[&quot;hunger relief&quot;] = &quot;Food Bank icon.svg|link=|alt=&quot;,
	[&quot;hyderabad&quot;] = &quot;Charminar Hyderabad 1.jpg|alt=icon&quot;
}</text>
      <sha1>3chtq800optxc1emii4r5zt0b8eys9g</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/other</title>
    <ns>828</ns>
    <id>40416303</id>
    <revision>
      <id>798262789</id>
      <parentid>798203481</parentid>
      <timestamp>2017-08-31T22:00:57Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>Removed 3:2 aspect image.  No longer user.</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3679">--[==[ This is the &quot;other&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with letters other than A to Z, e.g. numbers, letters with diacritics, and letters in
-- non-Latin alphabets. For aliases to existing portal names, and for portal names that start with other letters, please
-- use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/w]]       - for portal names beginning with &quot;W&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]

return {
	[&quot;24&quot;] = &quot;24DNTV.svg|link=|alt=&quot;,
	[&quot;1920s&quot;] = &quot;Trumpet01.svg|link=|alt=&quot;,
	[&quot;1930s&quot;] = &quot;Lange-MigrantMother02.jpg|link=|alt=&quot;,
	[&quot;1940s&quot;] = &quot;The USS Arizona (BB-39) burning after the Japanese attack on Pearl Harbor - NARA 195617 - Edit.jpg|link=|alt=&quot;,
	[&quot;1950s&quot;] = &quot;Fifties jukebox.png|link=|alt=&quot;,
	[&quot;1960s&quot;] = &quot;Flowerpowerportfolio.jpg|link=|alt=&quot;,
	[&quot;1970s&quot;] = &quot;Mr. Smiley Face.svg|alt=icon&quot;,
	[&quot;1980s&quot;] = &quot;Rubik's cube v3.svg|alt=icon&quot;,
	[&quot;1990s&quot;] = &quot;Alcatel 9109HA.png|alt=icon&quot;,
	[&quot;2000s&quot;] = &quot;Blue iPod Nano.jpg|link=|alt=&quot;,
	[&quot;2010s&quot;] = &quot;Samsung Galaxy S5 Vector.svg|alt=icon&quot;,
	[&quot;land islands&quot;] = &quot;Flag of land.svg|border|link=|alt=flag&quot;,
}</text>
      <sha1>sx1vqml3gsuwmdt8dcr4rqeholnk45l</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Portal/images/w</title>
    <ns>828</ns>
    <id>40416257</id>
    <revision>
      <id>802571143</id>
      <parentid>799128513</parentid>
      <timestamp>2017-09-27T01:17:27Z</timestamp>
      <contributor>
        <username>Buaidh</username>
        <id>122305</id>
      </contributor>
      <comment>[&quot;west virginia university&quot;] = &quot;West Virginia Mountaineers logo.svg|link=|alt=logo&quot;,</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="5822">--[==[ This is the &quot;W&quot; list of portal image names. It contains a list of portal images for use with [[Module:Portal]]
-- for portal names that start with the letter &quot;W&quot;. For aliases to existing portal names, and for portal names that
-- start with other letters, please use the appropriate page from the following list:
 
-- [[Module:Portal/images/a]]       - for portal names beginning with &quot;A&quot;.
-- [[Module:Portal/images/b]]       - for portal names beginning with &quot;B&quot;.
-- [[Module:Portal/images/c]]       - for portal names beginning with &quot;C&quot;.
-- [[Module:Portal/images/d]]       - for portal names beginning with &quot;D&quot;.
-- [[Module:Portal/images/e]]       - for portal names beginning with &quot;E&quot;.
-- [[Module:Portal/images/f]]       - for portal names beginning with &quot;F&quot;.
-- [[Module:Portal/images/g]]       - for portal names beginning with &quot;G&quot;.
-- [[Module:Portal/images/h]]       - for portal names beginning with &quot;H&quot;.
-- [[Module:Portal/images/i]]       - for portal names beginning with &quot;I&quot;.
-- [[Module:Portal/images/j]]       - for portal names beginning with &quot;J&quot;.
-- [[Module:Portal/images/k]]       - for portal names beginning with &quot;K&quot;.
-- [[Module:Portal/images/l]]       - for portal names beginning with &quot;L&quot;.
-- [[Module:Portal/images/m]]       - for portal names beginning with &quot;M&quot;.
-- [[Module:Portal/images/n]]       - for portal names beginning with &quot;N&quot;.
-- [[Module:Portal/images/o]]       - for portal names beginning with &quot;O&quot;.
-- [[Module:Portal/images/p]]       - for portal names beginning with &quot;P&quot;.
-- [[Module:Portal/images/q]]       - for portal names beginning with &quot;Q&quot;.
-- [[Module:Portal/images/r]]       - for portal names beginning with &quot;R&quot;.
-- [[Module:Portal/images/s]]       - for portal names beginning with &quot;S&quot;.
-- [[Module:Portal/images/t]]       - for portal names beginning with &quot;T&quot;.
-- [[Module:Portal/images/u]]       - for portal names beginning with &quot;U&quot;.
-- [[Module:Portal/images/v]]       - for portal names beginning with &quot;V&quot;.
-- [[Module:Portal/images/x]]       - for portal names beginning with &quot;X&quot;.
-- [[Module:Portal/images/y]]       - for portal names beginning with &quot;Y&quot;.
-- [[Module:Portal/images/z]]       - for portal names beginning with &quot;Z&quot;.
-- [[Module:Portal/images/other]]   - for portal names beginning with any other letters. This includes numbers,
--                                    letters with diacritics, and letters in non-Latin alphabets.
-- [[Module:Portal/images/aliases]] - for adding aliases for existing portal names. Use this page for variations
--                                    in spelling and diacritics, etc., no matter what letter the portal begins with.
 
-- When adding entries, please use alphabetical order. The format of the images table entries is as follows:
--          [&quot;portal name&quot;] = &quot;image.svg&quot;,
-- The portal name should be the name of your portal, in lower case. For example, the portal name for 
-- &quot;Portal:United Kingdom&quot; would be &quot;united kingdom&quot;. The image name should be capitalised normally, and the &quot;File:&quot;
-- namespace prefix should be omitted.
]==]
 
return {
	[&quot;wake island&quot;] = &quot;Flag of Wake Island.svg|border|link=|alt=flag&quot;,
	[&quot;wales&quot;] = &quot;Flag of Wales 2.svg|border|link=|alt=flag&quot;,
	[&quot;wallis and futuna&quot;] = &quot;Flag of Wallis and Futuna.svg|border|link=|alt=flag&quot;,
	[&quot;war&quot;] = &quot;Bluetank.png|link=|alt=&quot;,
	[&quot;war of 1812&quot;] = &quot;USS Constitution vs Guerriere.jpg|link=|alt=&quot;,
	[&quot;washington&quot;] = &quot;Flag of Washington.svg|border|link=|alt=flag&quot;,
	[&quot;washington &amp; jefferson college&quot;] = &quot;W&amp;J seal old updated color.svg|link=|alt=&quot;,
	[&quot;washington roads&quot;] = &quot;WA-blank.svg|link=|alt=&quot;,
	[&quot;washington university in st. louis&quot;] = &quot;The Kansas City review of science and industry (1884) (14598227079).jpg|link=|alt=image&quot;,
	[&quot;washington, d.c.&quot;] = &quot;Flag of Washington, D.C..svg|border|link=|alt=flag&quot;,
	[&quot;water&quot;] = &quot;Drinking water.jpg|alt=icon&quot;,
	[&quot;water sports&quot;] = &quot;Kitesurfing.jpg|link=|alt=&quot;,
	[&quot;waterfalls&quot;] = &quot;Victoria falls, zambia.jpg|link=|alt=icon&quot;,
	[&quot;weapons of mass destruction&quot;] = &quot;Operation Castle - Romeo 001.jpg|link=|alt=&quot;,
	[&quot;weather&quot;] = &quot;Cumulus clouds in fair weather.jpeg|alt=icon&quot;,
	[&quot;weimar republic&quot;] = &quot;Wappen Deutsches Reich (Weimarer Republik).svg|alt=icon&quot;,
	[&quot;west bengal&quot;] = &quot;BengaliScriptKo.svg|link=|alt=&quot;,
	[&quot;west germany&quot;] = &quot;Flag of Germany.svg|border|link=|alt=flag&quot;,
	[&quot;west sussex&quot;] = &quot;EnglandWestSussex.svg|link=|alt=&quot;,
	[&quot;west virginia&quot;] = &quot;Flag of West Virginia.svg|border|link=|alt=flag&quot;,
	[&quot;west virginia university&quot;] = &quot;West Virginia Mountaineers logo.svg|link=|alt=logo&quot;,
	[&quot;western australia&quot;] = &quot;Flag of Western Australia.svg|border|link=|alt=flag&quot;,
	[&quot;western region (ghana)&quot;] = &quot;Flag of Western Region (Ghana).gif|border|link=|alt=flag&quot;,
	[&quot;western sahara&quot;] = &quot;Flag of the Sahrawi Arab Democratic Republic.svg|border|link=|alt=flag&quot;,
	[&quot;wetlands&quot;] = &quot;Atchafalaya Basin.jpg|link=|alt=&quot;,
	[&quot;whitney houston&quot;] = &quot;Flickr Whitney Houston performing on GMA 2009 2.jpg|alt=icon&quot;,
	[&quot;wicca&quot;] = &quot;Pentacle 2.svg|link=|alt=&quot;,
	[&quot;wikipedia&quot;] = &quot;X mark.svg|link=|alt=&quot;,
	[&quot;wiltshire&quot;] = &quot;EnglandWiltshire.png|alt=icon&quot;,
	[&quot;wine&quot;] = &quot;Glass of wine.png|alt=icon&quot;,
	[&quot;winter paralympics&quot;] = &quot;IPC logo (2004).svg|link=|alt=&quot;,
	[&quot;wisconsin&quot;] = &quot;Flag of Wisconsin.svg|border|link=|alt=flag&quot;,
	[&quot;women in red&quot;] = &quot;Women in Red logo.svg|link=|alt=logo&quot;,
	[&quot;women scientists&quot;] = &quot;Women Geologists, Spedizione XII, Italiantartide 1995-96.jpg|link=|alt=photo&quot;,
	[&quot;women's association football&quot;] = &quot;Womens-soccer-icon.png|alt=icon&quot;,
	[&quot;women's history&quot;] = &quot;Simone Veil (1984).jpg|alt=icon&quot;,
	[&quot;women's sport&quot;] = &quot;Netball.svg|link=|alt=&quot;,
	[&quot;world war i&quot;] = &quot;Fokker Dr. I (117710246).jpg|border|alt=icon&quot;,
	[&quot;world war ii&quot;] = &quot;Heinkel He 111 during the Battle of Britain.jpg|border|link=|alt=&quot;,
	[&quot;writing&quot;] = &quot;Nuvola apps kmessedwords.png|alt=icon&quot;,
	[&quot;wyoming&quot;] = &quot;Flag of Wyoming.svg|border|link=|alt=flag&quot;
}</text>
      <sha1>2q315ehv2968hfodwjjoze6qcdvinjq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Pp-move-indef</title>
    <ns>828</ns>
    <id>43852218</id>
    <revision>
      <id>626024599</id>
      <parentid>626023280</parentid>
      <timestamp>2014-09-18T01:37:33Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>make fixes for when we are called from #invoke - the title parameter becomes a frame object</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1325">-- This module implements [[Template:Pp-move-indef]].

local p = {}

function p.main(title)
	if type(title) == 'string' then
		title = mw.title.new(title)
	elseif type(title) ~= 'table' or not title.text or not title.getContent then
		-- The title parameter is absent or not a title object. It could be a
		-- frame object if we are being called from #invoke.
		title = mw.title.getCurrentTitle()
	end
	
	local level = title
		and title.protectionLevels
		and title.protectionLevels.move
		and title.protectionLevels.move[1]
	local namespace = title and title.namespace

	local category
	if level == 'sysop' or level == 'templateeditor' then
		if namespace == 2 or namespace == 3 then
			category = 'Wikipedia move-protected user and user talk pages'
		elseif namespace == 4 or namepace == 12 then
			category = 'Wikipedia move-protected project pages'
		elseif namespace == 100 then
			category = 'Wikipedia move-protected portals'
		elseif title.isTalkPage then
			category = 'Wikipedia move-protected talk pages'
		else
			category = 'Wikipedia indefinitely move-protected pages'
		end
	else
		category = 'Wikipedia pages with incorrect protection templates'
	end

	return string.format(
		'[[%s:%s|%s]]',
		mw.site.namespaces[14].name, -- &quot;Category&quot;
		category,
		title.text -- equivalent of {{PAGENAME}}
	)
end

return p</text>
      <sha1>atx7059h6idmnrzpafno6seeehksu5k</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Protection banner</title>
    <ns>828</ns>
    <id>42040984</id>
    <revision>
      <id>741795115</id>
      <parentid>732908599</parentid>
      <timestamp>2016-09-29T18:32:41Z</timestamp>
      <contributor>
        <username>Cenarium</username>
        <id>5711305</id>
      </contributor>
      <comment>remove expiry param (now also automatically retrieved for autoreview) and needsexpiry check</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="25486">-- This module implements {{pp-meta}} and its daughter templates such as
-- {{pp-dispute}}, {{pp-vandalism}} and {{pp-sock}}.

-- Initialise necessary modules.
require('Module:No globals')
local makeFileLink = require('Module:File link')._main
local effectiveProtectionLevel = require('Module:Effective protection level')._main
local effectiveProtectionExpiry = require('Module:Effective protection expiry')._main
local yesno = require('Module:Yesno')

-- Lazily initialise modules and objects we don't always need.
local getArgs, makeMessageBox, lang

-- Set constants.
local CONFIG_MODULE = 'Module:Protection banner/config'

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------

local function makeCategoryLink(cat, sort)
	if cat then
		return string.format(
			'[[%s:%s|%s]]',
			mw.site.namespaces[14].name,
			cat,
			sort
		)
	end
end

-- Validation function for the expiry and the protection date
local function validateDate(dateString, dateType)
	if not lang then
		lang = mw.language.getContentLanguage()
	end
	local success, result = pcall(lang.formatDate, lang, 'U', dateString)
	if success then
		result = tonumber(result)
		if result then
			return result
		end
	end
	error(string.format(
		'invalid %s: %s',
		dateType,
		tostring(dateString)
	), 4)
end

local function makeFullUrl(page, query, display)
	return string.format(
		'[%s %s]',
		tostring(mw.uri.fullUrl(page, query)),
		display
	)
end

-- Given a directed graph formatted as node -&gt; table of direct successors,
-- get a table of all nodes reachable from a given node (though always
-- including the given node).
local function getReachableNodes(graph, start)
	local toWalk, retval = {[start] = true}, {}
	while true do
		-- Can't use pairs() since we're adding and removing things as we're iterating
		local k = next(toWalk) -- This always gets the &quot;first&quot; key
		if k == nil then
			return retval
		end
		toWalk[k] = nil
		retval[k] = true
		for _,v in ipairs(graph[k]) do
			if not retval[v] then
				toWalk[v] = true
			end
		end
	end
end

--------------------------------------------------------------------------------
-- Protection class
--------------------------------------------------------------------------------

local Protection = {}
Protection.__index = Protection

Protection.supportedActions = {
	edit = true,
	move = true,
	autoreview = true,
	upload = true
}

Protection.bannerConfigFields = {
	'text',
	'explanation',
	'tooltip',
	'alt',
	'link',
	'image'
}

function Protection.new(args, cfg, title)
	local obj = {}
	obj._cfg = cfg
	obj.title = title or mw.title.getCurrentTitle()

	-- Set action
	if not args.action then
		obj.action = 'edit'
	elseif Protection.supportedActions[args.action] then
		obj.action = args.action
	else
		error(string.format(
			'invalid action: %s',
			tostring(args.action)
		), 3)
	end

	-- Set level
	obj.level = args.demolevel or effectiveProtectionLevel(obj.action, obj.title)
	if not obj.level or (obj.action == 'move' and obj.level == 'autoconfirmed') then
		-- Users need to be autoconfirmed to move pages anyway, so treat
		-- semi-move-protected pages as unprotected.
		obj.level = '*'
	end

	-- Set expiry
	local effectiveExpiry = effectiveProtectionExpiry(obj.action, obj.title)
	if effectiveExpiry == 'infinity' then
		obj.expiry = 'indef'
	elseif effectiveExpiry ~= 'unknown' then
		obj.expiry = validateDate(effectiveExpiry, 'expiry date')
	end

	-- Set reason
	if args[1] then
		obj.reason = mw.ustring.lower(args[1])
		if obj.reason:find('|') then
			error('reasons cannot contain the pipe character (&quot;|&quot;)', 3)
		end
	end

	-- Set protection date
	if args.date then
		obj.protectionDate = validateDate(args.date, 'protection date')
	end
	
	-- Set banner config
	do
		obj.bannerConfig = {}
		local configTables = {}
		if cfg.banners[obj.action] then
			configTables[#configTables + 1] = cfg.banners[obj.action][obj.reason]
		end
		if cfg.defaultBanners[obj.action] then
			configTables[#configTables + 1] = cfg.defaultBanners[obj.action][obj.level]
			configTables[#configTables + 1] = cfg.defaultBanners[obj.action].default
		end
		configTables[#configTables + 1] = cfg.masterBanner
		for i, field in ipairs(Protection.bannerConfigFields) do
			for j, t in ipairs(configTables) do
				if t[field] then
					obj.bannerConfig[field] = t[field]
					break
				end
			end
		end
	end
	return setmetatable(obj, Protection)
end

function Protection:isProtected()
	return self.level ~= '*'
end

function Protection:isTemporary()
	return type(self.expiry) == 'number'
end

function Protection:makeProtectionCategory()
	local cfg = self._cfg
	local title = self.title
	
	-- Exit if the page is not protected.
	if not self:isProtected() then
		return ''
	end
	
	-- Get the expiry key fragment.
	local expiryFragment
	if self.expiry == 'indef' then
		expiryFragment = self.expiry
	elseif type(self.expiry) == 'number' then
		expiryFragment = 'temp'
	end

	-- Get the namespace key fragment.
	local namespaceFragment = cfg.categoryNamespaceKeys[title.namespace]
	if not namespaceFragment and title.namespace % 2 == 1 then
			namespaceFragment = 'talk'
	end
 
	-- Define the order that key fragments are tested in. This is done with an
	-- array of tables containing the value to be tested, along with its
	-- position in the cfg.protectionCategories table.
	local order = {
		{val = expiryFragment,    keypos = 1},
		{val = namespaceFragment, keypos = 2},
		{val = self.reason,       keypos = 3},
		{val = self.level,        keypos = 4},
		{val = self.action,       keypos = 5}
	}

	--[[
	-- The old protection templates used an ad-hoc protection category system,
	-- with some templates prioritising namespaces in their categories, and
	-- others prioritising the protection reason. To emulate this in this module
	-- we use the config table cfg.reasonsWithNamespacePriority to set the
	-- reasons for which namespaces have priority over protection reason.
	-- If we are dealing with one of those reasons, move the namespace table to
	-- the end of the order table, i.e. give it highest priority. If not, the
	-- reason should have highest priority, so move that to the end of the table
	-- instead.
	--]]
	table.insert(order, table.remove(order, self.reason and cfg.reasonsWithNamespacePriority[self.reason] and 2 or 3))
 
	--[[
	-- Define the attempt order. Inactive subtables (subtables with nil &quot;value&quot;
	-- fields) are moved to the end, where they will later be given the key
	-- &quot;all&quot;. This is to cut down on the number of table lookups in
	-- cfg.protectionCategories, which grows exponentially with the number of
	-- non-nil keys. We keep track of the number of active subtables with the
	-- noActive parameter.
	--]]
	local noActive, attemptOrder
	do
		local active, inactive = {}, {}
		for i, t in ipairs(order) do
			if t.val then
				active[#active + 1] = t
			else
				inactive[#inactive + 1] = t
			end
		end
		noActive = #active
		attemptOrder = active
		for i, t in ipairs(inactive) do
			attemptOrder[#attemptOrder + 1] = t
		end
	end
 
	--[[
	-- Check increasingly generic key combinations until we find a match. If a
	-- specific category exists for the combination of key fragments we are
	-- given, that match will be found first. If not, we keep trying different
	-- key fragment combinations until we match using the key
	-- &quot;all-all-all-all-all&quot;.
	--
	-- To generate the keys, we index the key subtables using a binary matrix
	-- with indexes i and j. j is only calculated up to the number of active
	-- subtables. For example, if there were three active subtables, the matrix
	-- would look like this, with 0 corresponding to the key fragment &quot;all&quot;, and
	-- 1 corresponding to other key fragments.
	-- 
	--   j 1  2  3
	-- i  
	-- 1   1  1  1
	-- 2   0  1  1
	-- 3   1  0  1
	-- 4   0  0  1
	-- 5   1  1  0
	-- 6   0  1  0
	-- 7   1  0  0
	-- 8   0  0  0
	-- 
	-- Values of j higher than the number of active subtables are set
	-- to the string &quot;all&quot;.
	--
	-- A key for cfg.protectionCategories is constructed for each value of i.
	-- The position of the value in the key is determined by the keypos field in
	-- each subtable.
	--]]
	local cats = cfg.protectionCategories
	for i = 1, 2^noActive do
		local key = {}
		for j, t in ipairs(attemptOrder) do
			if j &gt; noActive then
				key[t.keypos] = 'all'
			else
				local quotient = i / 2 ^ (j - 1)
				quotient = math.ceil(quotient)
				if quotient % 2 == 1 then
					key[t.keypos] = t.val
				else
					key[t.keypos] = 'all'
				end
			end
		end
		key = table.concat(key, '|')
		local attempt = cats[key]
		if attempt then
			return makeCategoryLink(attempt, title.text)
		end
	end
	return ''
end

function Protection:isIncorrect()
	local expiry = self.expiry
	return not self:isProtected()
		or type(expiry) == 'number' and expiry &lt; os.time()
end

function Protection:isTemplateProtectedNonTemplate()
	local action, namespace = self.action, self.title.namespace
	return self.level == 'templateeditor'
		and (
			(action ~= 'edit' and action ~= 'move')
			or (namespace ~= 10 and namespace ~= 828)
		)
end

function Protection:makeCategoryLinks()
	local msg = self._cfg.msg
	local ret = { self:makeProtectionCategory() }
	if self:isIncorrect() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-incorrect'],
			self.title.text
		)
	end
	if self:isTemplateProtectedNonTemplate() then
		ret[#ret + 1] = makeCategoryLink(
			msg['tracking-category-template'],
			self.title.text
		)
	end
	return table.concat(ret)
end

--------------------------------------------------------------------------------
-- Blurb class
--------------------------------------------------------------------------------

local Blurb = {}
Blurb.__index = Blurb

Blurb.bannerTextFields = {
	text = true,
	explanation = true,
	tooltip = true,
	alt = true,
	link = true
}

function Blurb.new(protectionObj, args, cfg)
	return setmetatable({
		_cfg = cfg,
		_protectionObj = protectionObj,
		_args = args
	}, Blurb)
end

-- Private methods --

function Blurb:_formatDate(num)
	-- Formats a Unix timestamp into dd Month, YYYY format.
	lang = lang or mw.language.getContentLanguage()
	local success, date = pcall(
		lang.formatDate,
		lang,
		self._cfg.msg['expiry-date-format'] or 'j F Y',
		'@' .. tostring(num)
	)
	if success then
		return date
	end
end

function Blurb:_getExpandedMessage(msgKey)
	return self:_substituteParameters(self._cfg.msg[msgKey])
end

function Blurb:_substituteParameters(msg)
	if not self._params then
		local parameterFuncs = {}

		parameterFuncs.CURRENTVERSION     = self._makeCurrentVersionParameter
		parameterFuncs.EDITREQUEST        = self._makeEditRequestParameter
		parameterFuncs.EXPIRY             = self._makeExpiryParameter
		parameterFuncs.EXPLANATIONBLURB   = self._makeExplanationBlurbParameter
		parameterFuncs.IMAGELINK          = self._makeImageLinkParameter
		parameterFuncs.INTROBLURB         = self._makeIntroBlurbParameter
		parameterFuncs.INTROFRAGMENT      = self._makeIntroFragmentParameter
		parameterFuncs.PAGETYPE           = self._makePagetypeParameter
		parameterFuncs.PROTECTIONBLURB    = self._makeProtectionBlurbParameter
		parameterFuncs.PROTECTIONDATE     = self._makeProtectionDateParameter
		parameterFuncs.PROTECTIONLEVEL    = self._makeProtectionLevelParameter
		parameterFuncs.PROTECTIONLOG      = self._makeProtectionLogParameter
		parameterFuncs.TALKPAGE           = self._makeTalkPageParameter
		parameterFuncs.TOOLTIPBLURB       = self._makeTooltipBlurbParameter
		parameterFuncs.TOOLTIPFRAGMENT    = self._makeTooltipFragmentParameter
		parameterFuncs.VANDAL             = self._makeVandalTemplateParameter
		
		self._params = setmetatable({}, {
			__index = function (t, k)
				local param
				if parameterFuncs[k] then
					param = parameterFuncs[k](self)
				end
				param = param or ''
				t[k] = param
				return param
			end
		})
	end
	
	msg = msg:gsub('${(%u+)}', self._params)
	return msg
end

function Blurb:_makeCurrentVersionParameter()
	-- A link to the page history or the move log, depending on the kind of
	-- protection.
	local pagename = self._protectionObj.title.prefixedText
	if self._protectionObj.action == 'move' then
		-- We need the move log link.
		return makeFullUrl(
			'Special:Log',
			{type = 'move', page = pagename},
			self:_getExpandedMessage('current-version-move-display')
		)
	else
		-- We need the history link.
		return makeFullUrl(
			pagename,
			{action = 'history'},
			self:_getExpandedMessage('current-version-edit-display')
		)
	end
end

function Blurb:_makeEditRequestParameter()
	local mEditRequest = require('Module:Submit an edit request')
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	
	-- Get the edit request type.
	local requestType
	if action == 'edit' then
		if level == 'autoconfirmed' then
			requestType = 'semi'
		elseif level == 'extendedconfirmed' then
			requestType = 'extended'
		elseif level == 'templateeditor' then
			requestType = 'template'
		end
	end
	requestType = requestType or 'full'
	
	-- Get the display value.
	local display = self:_getExpandedMessage('edit-request-display')

	return mEditRequest._link{type = requestType, display = display}
end

function Blurb:_makeExpiryParameter()
	local expiry = self._protectionObj.expiry
	if type(expiry) == 'number' then
		return self:_formatDate(expiry)
	else
		return expiry
	end
end

function Blurb:_makeExplanationBlurbParameter()
	-- Cover special cases first.
	if self._protectionObj.title.namespace == 8 then
		-- MediaWiki namespace
		return self:_getExpandedMessage('explanation-blurb-nounprotect')
	end

	-- Get explanation blurb table keys
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local talkKey = self._protectionObj.title.isTalkPage and 'talk' or 'subject'

	-- Find the message in the explanation blurb table and substitute any
	-- parameters.
	local explanations = self._cfg.explanationBlurbs
	local msg
	if explanations[action][level] and explanations[action][level][talkKey] then
		msg = explanations[action][level][talkKey]
	elseif explanations[action][level] and explanations[action][level].default then
		msg = explanations[action][level].default
	elseif explanations[action].default and explanations[action].default[talkKey] then
		msg = explanations[action].default[talkKey]
	elseif explanations[action].default and explanations[action].default.default then
		msg = explanations[action].default.default
	else
		error(string.format(
			'could not find explanation blurb for action &quot;%s&quot;, level &quot;%s&quot; and talk key &quot;%s&quot;',
			action,
			level,
			talkKey
		), 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeImageLinkParameter()
	local imageLinks = self._cfg.imageLinks
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if imageLinks[action][level] then
		msg = imageLinks[action][level]
	elseif imageLinks[action].default then
		msg = imageLinks[action].default
	else
		msg = imageLinks.edit.default
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeIntroBlurbParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('intro-blurb-expiry')
	else
		return self:_getExpandedMessage('intro-blurb-noexpiry')
	end
end

function Blurb:_makeIntroFragmentParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('intro-fragment-expiry')
	else
		return self:_getExpandedMessage('intro-fragment-noexpiry')
	end
end

function Blurb:_makePagetypeParameter()
	local pagetypes = self._cfg.pagetypes
	return pagetypes[self._protectionObj.title.namespace]
		or pagetypes.default
		or error('no default pagetype defined', 8)
end

function Blurb:_makeProtectionBlurbParameter()
	local protectionBlurbs = self._cfg.protectionBlurbs
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if protectionBlurbs[action][level] then
		msg = protectionBlurbs[action][level]
	elseif protectionBlurbs[action].default then
		msg = protectionBlurbs[action].default
	elseif protectionBlurbs.edit.default then
		msg = protectionBlurbs.edit.default
	else
		error('no protection blurb defined for protectionBlurbs.edit.default', 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeProtectionDateParameter()
	local protectionDate = self._protectionObj.protectionDate
	if type(protectionDate) == 'number' then
		return self:_formatDate(protectionDate)
	else
		return protectionDate
	end
end

function Blurb:_makeProtectionLevelParameter()
	local protectionLevels = self._cfg.protectionLevels
	local action = self._protectionObj.action
	local level = self._protectionObj.level
	local msg
	if protectionLevels[action][level] then
		msg = protectionLevels[action][level]
	elseif protectionLevels[action].default then
		msg = protectionLevels[action].default
	elseif protectionLevels.edit.default then
		msg = protectionLevels.edit.default
	else
		error('no protection level defined for protectionLevels.edit.default', 8)
	end
	return self:_substituteParameters(msg)
end

function Blurb:_makeProtectionLogParameter()
	local pagename = self._protectionObj.title.prefixedText
	if self._protectionObj.action == 'autoreview' then
		-- We need the pending changes log.
		return makeFullUrl(
			'Special:Log',
			{type = 'stable', page = pagename},
			self:_getExpandedMessage('pc-log-display')
		)
	else
		-- We need the protection log.
		return makeFullUrl(
			'Special:Log',
			{type = 'protect', page = pagename},
			self:_getExpandedMessage('protection-log-display')
		)
	end
end

function Blurb:_makeTalkPageParameter()
	return string.format(
		'[[%s:%s#%s|%s]]',
		mw.site.namespaces[self._protectionObj.title.namespace].talk.name,
		self._protectionObj.title.text,
		self._args.section or 'top',
		self:_getExpandedMessage('talk-page-link-display')
	)
end

function Blurb:_makeTooltipBlurbParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('tooltip-blurb-expiry')
	else
		return self:_getExpandedMessage('tooltip-blurb-noexpiry')
	end
end

function Blurb:_makeTooltipFragmentParameter()
	if self._protectionObj:isTemporary() then
		return self:_getExpandedMessage('tooltip-fragment-expiry')
	else
		return self:_getExpandedMessage('tooltip-fragment-noexpiry')
	end
end

function Blurb:_makeVandalTemplateParameter()
	return require('Module:Vandal-m')._main{
		self._args.user or self._protectionObj.title.baseText
	}
end

-- Public methods --

function Blurb:makeBannerText(key)
	-- Validate input.
	if not key or not Blurb.bannerTextFields[key] then
		error(string.format(
			'&quot;%s&quot; is not a valid banner config field',
			tostring(key)
		), 2)
	end

	-- Generate the text.
	local msg = self._protectionObj.bannerConfig[key]
	if type(msg) == 'string' then
		return self:_substituteParameters(msg)
	elseif type(msg) == 'function' then
		msg = msg(self._protectionObj, self._args)
		if type(msg) ~= 'string' then
			error(string.format(
				'bad output from banner config function with key &quot;%s&quot;'
					.. ' (expected string, got %s)',
				tostring(key),
				type(msg)
			), 4)
		end
		return self:_substituteParameters(msg)
	end
end

--------------------------------------------------------------------------------
-- BannerTemplate class
--------------------------------------------------------------------------------

local BannerTemplate = {}
BannerTemplate.__index = BannerTemplate

function BannerTemplate.new(protectionObj, cfg)
	local obj = {}
	obj._cfg = cfg

	-- Set the image filename.
	local imageFilename = protectionObj.bannerConfig.image
	if imageFilename then
		obj._imageFilename = imageFilename
	else
		-- If an image filename isn't specified explicitly in the banner config,
		-- generate it from the protection status and the namespace.
		local action = protectionObj.action
		local level = protectionObj.level
		local namespace = protectionObj.title.namespace
		local reason = protectionObj.reason
		
		-- Deal with special cases first.
		if (
			namespace == 10
			or namespace == 828
			or reason and obj._cfg.indefImageReasons[reason]
			)
			and action == 'edit'
			and level == 'sysop'
			and not protectionObj:isTemporary()
		then
			-- Fully protected modules and templates get the special red &quot;indef&quot;
			-- padlock.
			obj._imageFilename = obj._cfg.msg['image-filename-indef']
		else
			-- Deal with regular protection types.
			local images = obj._cfg.images
			if images[action] then
				if images[action][level] then
					obj._imageFilename = images[action][level]
				elseif images[action].default then
					obj._imageFilename = images[action].default
				end
			end
		end
	end
	return setmetatable(obj, BannerTemplate)
end

function BannerTemplate:renderImage()
	local filename = self._imageFilename
		or self._cfg.msg['image-filename-default']
		or 'Transparent.gif'
	return makeFileLink{
		file = filename,
		size = (self.imageWidth or 20) .. 'px',
		alt = self._imageAlt,
		link = self._imageLink,
		caption = self.imageCaption
	}
end

--------------------------------------------------------------------------------
-- Banner class
--------------------------------------------------------------------------------

local Banner = setmetatable({}, BannerTemplate)
Banner.__index = Banner

function Banner.new(protectionObj, blurbObj, cfg)
	local obj = BannerTemplate.new(protectionObj, cfg) -- This doesn't need the blurb.
	obj.imageWidth = 40
	obj.imageCaption = blurbObj:makeBannerText('alt') -- Large banners use the alt text for the tooltip.
	obj._reasonText = blurbObj:makeBannerText('text')
	obj._explanationText = blurbObj:makeBannerText('explanation')
	obj._page = protectionObj.title.prefixedText -- Only makes a difference in testing.
	return setmetatable(obj, Banner)
end

function Banner:__tostring()
	-- Renders the banner.
	makeMessageBox = makeMessageBox or require('Module:Message box').main
	local reasonText = self._reasonText or error('no reason text set', 2)
	local explanationText = self._explanationText
	local mbargs = {
		page = self._page,
		type = 'protection',
		image = self:renderImage(),
		text = string.format(
			&quot;'''%s'''%s&quot;,
			reasonText,
			explanationText and '&lt;br /&gt;' .. explanationText or ''
		)
	}
	return makeMessageBox('mbox', mbargs)
end

--------------------------------------------------------------------------------
-- Padlock class
--------------------------------------------------------------------------------

local Padlock = setmetatable({}, BannerTemplate)
Padlock.__index = Padlock

function Padlock.new(protectionObj, blurbObj, cfg)
	local obj = BannerTemplate.new(protectionObj, cfg) -- This doesn't need the blurb.
	obj.imageWidth = 20
	obj.imageCaption = blurbObj:makeBannerText('tooltip')
	obj._imageAlt = blurbObj:makeBannerText('alt')
	obj._imageLink = blurbObj:makeBannerText('link')
	obj._indicatorName = cfg.padlockIndicatorNames[protectionObj.action]
		or cfg.padlockIndicatorNames.default
		or 'pp-default'
	return setmetatable(obj, Padlock)
end

function Padlock:__tostring()
	local frame = mw.getCurrentFrame()
	-- The nowiki tag helps prevent whitespace at the top of articles.
	return frame:extensionTag{name = 'nowiki'} .. frame:extensionTag{
		name = 'indicator',
		args = {name = self._indicatorName},
		content = self:renderImage()
	}
end

--------------------------------------------------------------------------------
-- Exports
--------------------------------------------------------------------------------

local p = {}

function p._exportClasses()
	-- This is used for testing purposes.
	return {
		Protection = Protection,
		Blurb = Blurb,
		BannerTemplate = BannerTemplate,
		Banner = Banner,
		Padlock = Padlock,
	}
end

function p._main(args, cfg, title)
	args = args or {}
	cfg = cfg or require(CONFIG_MODULE)

	local protectionObj = Protection.new(args, cfg, title)

	local ret = {}

	-- If a page's edit protection is equally or more restrictive than its
	-- protection from some other action, then don't bother displaying anything
	-- for the other action (except categories).
	if protectionObj.action == 'edit' or
		args.demolevel or
		not getReachableNodes(
			cfg.hierarchy,
			protectionObj.level
		)[effectiveProtectionLevel('edit', protectionObj.title)]
	then
		-- Initialise the blurb object
		local blurbObj = Blurb.new(protectionObj, args, cfg)
	
		-- Render the banner
		if protectionObj:isProtected() then
			ret[#ret + 1] = tostring(
				(yesno(args.small) and Padlock or Banner)
				.new(protectionObj, blurbObj, cfg)
			)
		end
	end

	-- Render the categories
	if yesno(args.category) ~= false then
		ret[#ret + 1] = protectionObj:makeCategoryLinks()
	end
	
	return table.concat(ret)	
end

function p.main(frame, cfg)
	cfg = cfg or require(CONFIG_MODULE)

	-- Find default args, if any.
	local parent = frame.getParent and frame:getParent()
	local defaultArgs = parent and cfg.wrappers[parent:getTitle():gsub('/sandbox$', '')]

	-- Find user args, and use the parent frame if we are being called from a
	-- wrapper template.
	getArgs = getArgs or require('Module:Arguments').getArgs
	local userArgs = getArgs(frame, {
		parentOnly = defaultArgs,
		frameOnly = not defaultArgs
	})

	-- Build the args table. User-specified args overwrite default args.
	local args = {}
	for k, v in pairs(defaultArgs or {}) do
		args[k] = v
	end
	for k, v in pairs(userArgs) do
		args[k] = v
	end
	return p._main(args, cfg)
end

return p</text>
      <sha1>ice162y8kua930ie41kredxjaxhzy3y</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Protection banner/config</title>
    <ns>828</ns>
    <id>42982788</id>
    <revision>
      <id>776490617</id>
      <parentid>772318676</parentid>
      <timestamp>2017-04-21T09:32:57Z</timestamp>
      <contributor>
        <username>Yaris678</username>
        <id>1210941</id>
      </contributor>
      <comment>Let's not get into whether and when we are publishing.  Existing consensus at [[:Template:Protection table]] is &quot;go live&quot; for a very short description... but we have space here to be even more specific</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="46798">-- This module provides configuration data for [[Module:Protection banner]].

return {

--------------------------------------------------------------------------------
--
--                                BANNER DATA
--
--------------------------------------------------------------------------------

--[[
-- Banner data consists of six fields:
-- * text - the main protection text that appears at the top of protection
--   banners.
-- * explanation - the text that appears below the main protection text, used
--   to explain the details of the protection.
-- * tooltip - the tooltip text you see when you move the mouse over a small
--   padlock icon.
-- * link - the page that the small padlock icon links to.
-- * alt - the alt text for the small padlock icon. This is also used as tooltip
--   text for the large protection banners.
-- * image - the padlock image used in both protection banners and small padlock
--   icons.
--
-- The module checks in three separate tables to find a value for each field.
-- First it checks the banners table, which has values specific to the reason
-- for the page being protected. Then the module checks the defaultBanners
-- table, which has values specific to each protection level. Finally, the
-- module checks the masterBanner table, which holds data for protection
-- templates to use if no data has been found in the previous two tables.
--
-- The values in the banner data can take parameters. These are specified
-- using ${TEXTLIKETHIS} (a dollar sign preceding a parameter name
-- enclosed in curly braces).
--
--                          Available parameters:
--
-- ${CURRENTVERSION} - a link to the page history or the move log, with the
-- display message &quot;current-version-edit-display&quot; or
-- &quot;current-version-move-display&quot;.
--
-- ${EDITREQUEST} - a link to create an edit request for the current page.
--
-- ${EXPLANATIONBLURB} - an explanation blurb, e.g. &quot;Please discuss any changes
-- on the talk page; you may submit a request to ask an administrator to make
-- an edit if it is minor or supported by consensus.&quot;
--
-- ${IMAGELINK} - a link to set the image to, depending on the protection
-- action and protection level.
--
-- ${INTROBLURB} - the PROTECTIONBLURB parameter, plus the expiry if an expiry
-- is set. E.g. &quot;Editing of this page by new or unregistered users is currently 
-- disabled until dd Month YYYY.&quot;
--
-- ${INTROFRAGMENT} - the same as ${INTROBLURB}, but without final punctuation
-- so that it can be used in run-on sentences.
--
-- ${PAGETYPE} - the type of the page, e.g. &quot;article&quot; or &quot;template&quot;.
-- Defined in the cfg.pagetypes table.
--
-- ${PROTECTIONBLURB} - a blurb explaining the protection level of the page, e.g.
-- &quot;Editing of this page by new or unregistered users is currently disabled&quot;
--
-- ${PROTECTIONDATE} - the protection date, if it has been supplied to the
-- template.
--
-- ${PROTECTIONLEVEL} - the protection level, e.g. &quot;fully protected&quot; or
-- &quot;semi-protected&quot;.
--
-- ${PROTECTIONLOG} - a link to the protection log or the pending changes log,
-- depending on the protection action.
--
-- ${TALKPAGE} - a link to the talk page. If a section is specified, links
-- straight to that talk page section.
--
-- ${TOOLTIPBLURB} - uses the PAGETYPE, PROTECTIONTYPE and EXPIRY parameters to
-- create a blurb like &quot;This template is semi-protected&quot;, or &quot;This article is
-- move-protected until DD Month YYYY&quot;.
--
-- ${VANDAL} - links for the specified username (or the root page name)
-- using Module:Vandal-m.
--
--                                 Functions
--
-- For advanced users, it is possible to use Lua functions instead of strings
-- in the banner config tables. Using functions gives flexibility that is not
-- possible just by using parameters. Functions take two arguments, the
-- protection object and the template arguments, and they must output a string.
--
-- For example:
--
-- text = function (protectionObj, args)
--     if protectionObj.level == 'autoconfirmed' then
--         return 'foo'
--     else
--         return 'bar'
--     end
-- end
--
-- Some protection object properties and methods that may be useful:
-- protectionObj.action - the protection action
-- protectionObj.level - the protection level
-- protectionObj.reason - the protection reason
-- protectionObj.expiry - the expiry. Nil if unset, the string &quot;indef&quot; if set
--     to indefinite, and the protection time in unix time if temporary.
-- protectionObj.protectionDate - the protection date in unix time, or nil if
--     unspecified.
-- protectionObj.bannerConfig - the banner config found by the module. Beware
--     of editing the config field used by the function, as it could create an
--     infinite loop.
-- protectionObj:isProtected - returns a boolean showing whether the page is
--     protected.
-- protectionObj:isTemporary - returns a boolean showing whether the expiry is
--     temporary.
-- protectionObj:isIncorrect - returns a boolean showing whether the protection
--     template is incorrect.
--]]

-- The master banner data, used if no values have been found in banners or
-- defaultBanners.
masterBanner = {
	text = '${INTROBLURB}',
	explanation = '${EXPLANATIONBLURB}',
	tooltip = '${TOOLTIPBLURB}',
	link = '${IMAGELINK}',
	alt = 'Page ${PROTECTIONLEVEL}'
},

-- The default banner data. This holds banner data for different protection
-- levels.
-- *required* - this table needs edit, move, autoreview and upload subtables.
defaultBanners = {
	edit = {},
	move = {},
	autoreview = {
		autoconfirmed = {
			alt = 'Page protected with pending changes level 1',
			tooltip = 'All edits by unregistered and new users are subject to review prior to becoming visible to unregistered users',
			image = 'Padlock-silver-light.svg'
		},
		default = {
			alt = 'Page protected with pending changes level 2',
			tooltip = 'All edits by users who are not reviewers or administrators are'
				.. ' subject to review prior to becoming visible to unregistered users',
			image = 'Padlock-orange.svg'
		}
	},
	upload = {}
},

-- The banner data. This holds banner data for different protection reasons.
-- In fact, the reasons specified in this table control which reasons are
-- valid inputs to the first positional parameter.
--
-- There is also a non-standard &quot;description&quot; field that can be used for items
-- in this table. This is a description of the protection reason for use in the
-- module documentation.
--
-- *required* - this table needs edit, move, autoreview and upload subtables.
banners = {
	edit = {
		blp = {
			description = 'For pages protected to promote compliance with the'
				.. ' [[Wikipedia:Biographies of living persons'
				.. '|biographies of living persons]] policy',
			text = '${INTROFRAGMENT} to promote compliance with'
				.. ' [[Wikipedia:Biographies of living persons'
				.. &quot;|Wikipedia's&amp;nbsp;policy on&amp;nbsp;the&amp;nbsp;biographies&quot;
				.. ' of&amp;nbsp;living&amp;nbsp;people]].',
			tooltip = '${TOOLTIPFRAGMENT} to promote compliance with the policy on'
				.. ' biographies of living people',
		},
		dmca = {
			description = 'For pages protected by the Wikimedia Foundation'
				.. ' due to [[Digital Millennium Copyright Act]] takedown requests',
			explanation = function (protectionObj, args)
				local ret = 'Pursuant to a rights owner notice under the Digital'
					.. ' Millennium Copyright Act (DMCA) regarding some content'
					.. ' in this article, the Wikimedia Foundation acted under'
					.. ' applicable law and took down and restricted the content'
					.. ' in question.'
				if args.notice then
					ret = ret .. ' A copy of the received notice can be found here: '
						.. args.notice .. '.'
				end
				ret = ret .. ' For more information, including websites discussing'
					.. ' how to file a counter-notice, please see'
					.. &quot; [[Wikipedia:Office actions]] and the article's ${TALKPAGE}.&quot;
					.. &quot;'''Do not remove this template from the article until the&quot;
					.. &quot; restrictions are withdrawn'''.&quot;
				return ret
			end,
			image = 'Padlock-black.svg',
		},
		dispute = {
			description = 'For pages protected due to editing disputes',
			text = function (protectionObj, args)
				-- Find the value of &quot;disputes&quot;.
				local display = 'disputes'
				local disputes
				if args.section then
					disputes = string.format(
						'[[%s:%s#%s|%s]]',
						mw.site.namespaces[protectionObj.title.namespace].talk.name,
						protectionObj.title.text,
						args.section,
						display
					)
				else
					disputes = display
				end

				-- Make the blurb, depending on the expiry.
				local msg
				if type(protectionObj.expiry) == 'number' then
					msg = '${INTROFRAGMENT} or until editing %s have been resolved.'
				else
					msg = '${INTROFRAGMENT} until editing %s have been resolved.'
				end
				return string.format(msg, disputes)
			end,
			explanation = &quot;This protection is '''not''' an endorsement of the&quot;
				.. ' ${CURRENTVERSION}. ${EXPLANATIONBLURB}',
			tooltip = '${TOOLTIPFRAGMENT} due to editing disputes',
		},
		ecp = {
			description = 'For articles in topic areas authorized by'
				.. ' [[Wikipedia:Arbitration Committee|ArbCom]] or'
				.. ' meets the criteria for community use',
			tooltip = 'This ${PAGETYPE} is extended-confirmed protected',
			alt = 'Extended-protected ${PAGETYPE}',
		},
		mainpage = {
			description = 'For pages protected for being displayed on the [[Main Page]]',
			text = 'This file is currently'
				.. ' [[Wikipedia:This page is protected|protected]] from'
				.. ' editing because it is currently or will soon be displayed'
				.. ' on the [[Main Page]].',
			explanation = 'Images on the Main Page are protected due to their high'
				.. ' visibility. Please discuss any necessary changes on the ${TALKPAGE}.'
				.. '&lt;br /&gt;&lt;span style=&quot;font-size:90%;&quot;&gt;'
				.. &quot;'''Administrators:''' Once this image is definitely off the Main Page,&quot;
				.. ' please unprotect this file, or reduce to semi-protection,'
				.. ' as appropriate.&lt;/span&gt;',
		},
		office = {
			description = 'For pages protected by the Wikimedia Foundation',
			text = function (protectionObj, args)
				local ret = 'This ${PAGETYPE} is currently under the'
					.. ' scrutiny of the'
					.. ' [[Wikipedia:Office actions|Wikimedia Foundation Office]]'
					.. ' and is protected.'
				if protectionObj.protectionDate then
					ret = ret .. ' It has been protected since ${PROTECTIONDATE}.'
				end
				return ret
			end,
			explanation = &quot;If you can edit this page, please discuss all changes and&quot;
				.. &quot; additions on the ${TALKPAGE} first. '''Do not remove protection from this&quot;
				.. &quot; page unless you are authorized by the Wikimedia Foundation to do&quot;
				.. &quot; so.'''&quot;,
			image = 'Padlock-black.svg',
		},
		reset = {
			description = 'For pages protected by the Wikimedia Foundation and'
				.. ' &quot;reset&quot; to a bare-bones version',
 			text = 'This ${PAGETYPE} is currently under the'
					.. ' scrutiny of the'
					.. ' [[Wikipedia:Office actions|Wikimedia Foundation Office]]'
					.. ' and is protected.',
			explanation = function (protectionObj, args)
				local ret = ''
				if protectionObj.protectionDate then
					ret = ret .. 'On ${PROTECTIONDATE} this ${PAGETYPE} was'
				else
					ret = ret .. 'This ${PAGETYPE} has been'
				end
				ret = ret .. ' reduced to a'
				.. ' simplified, &quot;bare bones&quot; version so that it may be completely'
				.. ' rewritten to ensure it meets the policies of'
				.. ' [[WP:NPOV|Neutral Point of View]] and [[WP:V|Verifiability]].'
				.. ' Standard Wikipedia policies will apply to its rewritingwhich'
				.. ' will eventually be open to all editorsand will be strictly'
				.. ' enforced. The ${PAGETYPE} has been ${PROTECTIONLEVEL} while'
				.. ' it is being rebuilt.\n\n'
				.. 'Any insertion of material directly from'
				.. ' pre-protection revisions of the ${PAGETYPE} will be removed, as'
				.. ' will any material added to the ${PAGETYPE} that is not properly'
				.. ' sourced. The associated talk page(s) were also cleared on the'
				.. &quot; same date.\n\n&quot;
				.. &quot;If you can edit this page, please discuss all changes and&quot;
				.. &quot; additions on the ${TALKPAGE} first. '''Do not override&quot;
				.. &quot; this action, and do not remove protection from this page,&quot;
				.. &quot; unless you are authorized by the Wikimedia Foundation&quot;
				.. &quot; to do so. No editor may remove this notice.'''&quot;

				return ret
			end,
			image = 'Padlock-black.svg',
		},
		sock = {
			description = 'For pages protected due to'
				.. ' [[Wikipedia:Sock puppetry|sock puppetry]]',
			text = '${INTROFRAGMENT} to prevent [[Wikipedia:Sock puppetry|sock puppets]] of'
				.. ' [[Wikipedia:Blocking policy|blocked]] or'
				.. ' [[Wikipedia:Banning policy|banned users]]'
				.. ' from editing it.',
			tooltip = '${TOOLTIPFRAGMENT} to prevent sock puppets of blocked or banned users from'
				.. ' editing it',
		},
		template = {
			description = 'For [[Wikipedia:High-risk templates|high-risk]]'
				.. ' templates and Lua modules',
			text = 'This is a permanently [[Help:Protection|protected]] ${PAGETYPE},'
				.. ' as it is [[Wikipedia:High-risk templates|high-risk]].',
			explanation = 'Please discuss any changes on the ${TALKPAGE}; you may'
				.. ' ${EDITREQUEST} to ask an'
				.. ' [[Wikipedia:Administrators|administrator]] or'
				.. ' [[Wikipedia:Template editor|template editor]] to make an edit if'
				.. ' it is [[Help:Minor edit#When to mark an edit as a minor edit'
				.. '|uncontroversial]] or supported by'
				.. ' [[Wikipedia:Consensus|consensus]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.',
			tooltip = 'This high-risk ${PAGETYPE} is permanently ${PROTECTIONLEVEL}'
				.. ' to prevent vandalism',
			alt = 'Permanently protected ${PAGETYPE}',
		},
		usertalk = {
			description = 'For pages protected against disruptive edits by a'
				.. ' particular user',
			text = '${INTROFRAGMENT} to prevent ${VANDAL} from using it to make disruptive edits,'
				.. ' such as abusing the'
				.. ' &amp;#123;&amp;#123;[[Template:unblock|unblock]]&amp;#125;&amp;#125; template.',
			explanation = 'If you cannot edit this user talk page and you need to'
				.. ' make a change or leave a message, you can'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for edits to a protected page'
				.. '|request an edit]],'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]],'
				.. ' [[Special:Userlogin|log in]],'
				.. ' or [[Special:UserLogin/signup|create an account]].',
		},
		vandalism = {
			description = 'For pages protected against'
				.. ' [[Wikipedia:Vandalism|vandalism]]',
			text = '${INTROFRAGMENT} due to [[Wikipedia:Vandalism|vandalism]].',
			explanation = function (protectionObj, args)
				local ret = ''
				if protectionObj.level == 'sysop' then
					ret = ret .. &quot;This protection is '''not''' an endorsement of the&quot;
						.. ' ${CURRENTVERSION}. '
				end
				return ret .. '${EXPLANATIONBLURB}'
			end,
			tooltip = '${TOOLTIPFRAGMENT} due to vandalism',
		}
	},
	move = {
		dispute = {
			description = 'For pages protected against page moves due to'
				.. ' disputes over the page title',
			explanation = &quot;This protection is '''not''' an endorsement of the&quot;
				.. ' ${CURRENTVERSION}. ${EXPLANATIONBLURB}',
			image = 'Padlock-olive.svg'
		},
		vandalism = {
			description = 'For pages protected against'
				.. ' [[Wikipedia:Vandalism#Page-move vandalism'
				.. ' |page-move vandalism]]'
		}
	},
	autoreview = {},
	upload = {}
},

--------------------------------------------------------------------------------
--
--                            GENERAL DATA TABLES
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Protection blurbs
--------------------------------------------------------------------------------

-- This table produces the protection blurbs available with the
-- ${PROTECTIONBLURB} parameter. It is sorted by protection action and
-- protection level, and is checked by the module in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
protectionBlurbs = {
	edit = {
		default = 'This ${PAGETYPE} is currently [[Help:Protection|'
			.. 'protected]] from editing',
		autoconfirmed = 'Editing of this ${PAGETYPE} by [[Wikipedia:User access'
			.. ' levels#New users|new]] or [[Wikipedia:User access levels#Unregistered'
			.. ' users|unregistered]] users is currently [[Help:Protection|disabled]]',
		extendedconfirmed = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} as a result of'
			.. ' [[Wikipedia:Arbitration Committee|ArbCom]] enforcement or meets the'
			.. ' [[Wikipedia:Protection policy#extended|criteria for community use]]',
	},
	move = {
		default = 'This ${PAGETYPE} is currently [[Help:Protection|protected]]'
			.. ' from [[Help:Moving a page|page moves]]'
	},
	autoreview = {
		autoconfirmed = 'All edits made to this ${PAGETYPE} by'
			.. ' [[Wikipedia:User access levels#New users|new]] or'
			.. ' [[Wikipedia:User access levels#Unregistered users|unregistered]]'
			.. ' users are currently'
			.. ' [[Wikipedia:Pending changes|subject to review]]',
		default = 'All edits made to this ${PAGETYPE} by users who are not'
			.. ' [[Wikipedia:Reviewing|reviewers]] or'
			.. ' [[Wikipedia:Administrators|administrators]] are currently'
			.. ' [[Wikipedia:Pending changes|subject to review]]'
	},
	upload = {
		default = 'Uploading new versions of this ${PAGETYPE} is currently disabled'
	}
},


--------------------------------------------------------------------------------
-- Explanation blurbs
--------------------------------------------------------------------------------

-- This table produces the explanation blurbs available with the
-- ${EXPLANATIONBLURB} parameter. It is sorted by protection action,
-- protection level, and whether the page is a talk page or not. If the page is
-- a talk page it will have a talk key of &quot;talk&quot;; otherwise it will have a talk
-- key of &quot;subject&quot;. The table is checked in the following order:
-- 1. page's protection action, page's protection level, page's talk key
-- 2. page's protection action, page's protection level, default talk key
-- 3. page's protection action, default protection level, page's talk key
-- 4. page's protection action, default protection level, default talk key
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
explanationBlurbs = {
	edit = {
		autoconfirmed = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details. If you'
				.. ' cannot edit this ${PAGETYPE} and you wish to make a change, you can'
				.. ' ${EDITREQUEST}, discuss changes on the ${TALKPAGE},'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details. If you'
				.. ' cannot edit this ${PAGETYPE} and you wish to make a change, you can'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].',
		},
		extendedconfirmed = {
			default = 'Extended confirmed protection prevents edits from all IP editors'
				.. ' and registered users with fewer than 30 days tenure and 500 edits.'
				.. ' The [[Wikipedia:Protection policy#extended|policy on community use]]'
				.. ' specifies that extended confirmed protection can be applied to combat'
				.. ' disruption, given that semi-protection has proven to be ineffective.'
				.. ' Please discuss any changes on the ${TALKPAGE}; you may'
				.. ' ${EDITREQUEST} to ask for unconversial changes supported by'
				.. ' [[Wikipedia:Consensus|consensus]].'
		},
		default = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Please discuss any changes on the ${TALKPAGE}; you'
				.. ' may ${EDITREQUEST} to ask an'
				.. ' [[Wikipedia:Administrators|administrator]] to make an edit if it'
				.. ' is [[Help:Minor edit#When to mark an edit as a minor edit'
				.. '|uncontroversial]] or supported by [[Wikipedia:Consensus'
				.. '|consensus]]. You may also [[Wikipedia:Requests for'
				.. ' page protection#Current requests for reduction in protection level'
				.. '|request]] that this page be unprotected.',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' You may [[Wikipedia:Requests for page'
				.. ' protection#Current requests for edits to a protected page|request an'
				.. ' edit]] to this page, or [[Wikipedia:Requests for'
				.. ' page protection#Current requests for reduction in protection level'
				.. '|ask]] for it to be unprotected.'
		}
	},
	move = {
		default = {
			subject = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but cannot be moved'
				.. ' until unprotected. Please discuss any suggested moves on the'
				.. ' ${TALKPAGE} or at [[Wikipedia:Requested moves]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but cannot be moved'
				.. ' until unprotected. Please discuss any suggested moves at'
				.. ' [[Wikipedia:Requested moves]]. You can also'
				.. ' [[Wikipedia:Requests for page protection|request]] that the page be'
				.. ' unprotected.'
		}
	},
	autoreview = {
		default = {
			reviewer = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Edits to this ${PAGETYPE} will not be visible to readers'
				.. ' until they are accepted by a reviewer or an administrator.'
				.. ' To avoid the need for your edits to be reviewed, you may'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]]. Experienced editors may also'
				.. ' request the [[Wikipedia:Reviewing|reviewer user right]].',
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' Edits to this ${PAGETYPE} by new and unregistered users'
				.. ' will not be visible to readers until they are accepted by'
				.. ' a reviewer. To avoid the need for your edits to be'
				.. ' reviewed, you may'
				.. ' [[Wikipedia:Requests for page protection'
				.. '#Current requests for reduction in protection level'
				.. '|request unprotection]], [[Special:Userlogin|log in]], or'
				.. ' [[Special:UserLogin/signup|create an account]].'
		},
	},
	upload = {
		default = {
			default = 'See the [[Wikipedia:Protection policy|'
				.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
				.. ' The page may still be edited but new versions of the file'
				.. ' cannot be uploaded until it is unprotected. You can'
				.. ' request that a new version be uploaded by using a'
				.. ' [[Wikipedia:Edit requests|protected edit request]], or you'
				.. ' can  [[Wikipedia:Requests for page protection|request]]'
				.. ' that the file be unprotected.'
		}
	}
},

--------------------------------------------------------------------------------
-- Protection levels
--------------------------------------------------------------------------------

-- This table provides the data for the ${PROTECTIONLEVEL} parameter, which
-- produces a short label for different protection levels. It is sorted by
-- protection action and protection level, and is checked in the following
-- order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
protectionLevels = {
	edit = {
		default = 'protected',
		templateeditor = 'template-protected',
		extendedconfirmed = 'extended-protected',
		autoconfirmed = 'semi-protected',
	},
	move = {
		default = 'move-protected'
	},
	autoreview = {
	},
	upload = {
		default = 'upload-protected'
	}
},

--------------------------------------------------------------------------------
-- Images
--------------------------------------------------------------------------------

-- This table lists different padlock images for each protection action and
-- protection level. It is used if an image is not specified in any of the
-- banner data tables, and if the page does not satisfy the conditions for using
-- the ['image-filename-indef'] image. It is checked in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
images = {
	edit = {
		default = 'Padlock.svg',
		templateeditor = 'Padlock-pink.svg',
		extendedconfirmed = 'Padlock-blue.svg',
		autoconfirmed = 'Padlock-silver.svg'
	},
	move = {
		default = 'Padlock-olive.svg',
	},
	autoreview = {
		autoconfirmed = 'Padlock-silver-light.svg',
		default = 'Padlock-orange.svg'
	},
	upload = {
		default = 'Padlock-purple.svg'
	}
},

-- Pages with a reason specified in this table will show the special &quot;indef&quot;
-- padlock, defined in the 'image-filename-indef' message, if no expiry is set.
indefImageReasons = {
	template = true
},

--------------------------------------------------------------------------------
-- Image links
--------------------------------------------------------------------------------

-- This table provides the data for the ${IMAGELINK} parameter, which gets
-- the image link for small padlock icons based on the page's protection action
-- and protection level. It is checked in the following order:
-- 1. page's protection action, page's protection level
-- 2. page's protection action, default protection level
-- 3. &quot;edit&quot; protection action, default protection level
--
-- It is possible to use banner parameters inside this table.
-- *required* - this table needs edit, move, autoreview and upload subtables.
imageLinks = {
	edit = {
		default = 'Wikipedia:Protection policy#full',
		templateeditor = 'Wikipedia:Protection policy#template',
		extendedconfirmed = 'Wikipedia:Protection policy#extended',
		autoconfirmed = 'Wikipedia:Protection policy#semi'
	},
	move = {
		default = 'Wikipedia:Protection policy#move'
	},
	autoreview = {
		autoconfirmed = 'Wikipedia:Protection policy#pc1',
		reviewer = 'Wikipedia:Protection policy#pc2'
	},
	upload = {
		default = 'Wikipedia:Protection policy#upload'
	}
},

--------------------------------------------------------------------------------
-- Padlock indicator names
--------------------------------------------------------------------------------

-- This table provides the &quot;name&quot; attribute for the &lt;indicator&gt; extension tag
-- with which small padlock icons are generated. All indicator tags on a page
-- are displayed in alphabetical order based on this attribute, and with
-- indicator tags with duplicate names, the last tag on the page wins.
-- The attribute is chosen based on the protection action; table keys must be a
-- protection action name or the string &quot;default&quot;.
padlockIndicatorNames = {
	autoreview = 'pp-autoreview',
	default = 'pp-default'
},

--------------------------------------------------------------------------------
-- Protection categories
--------------------------------------------------------------------------------

--[[
-- The protection categories are stored in the protectionCategories table.
-- Keys to this table are made up of the following strings:
--
-- 1. the expiry date
-- 2. the namespace
-- 3. the protection reason (e.g. &quot;dispute&quot; or &quot;vandalism&quot;)
-- 4. the protection level (e.g. &quot;sysop&quot; or &quot;autoconfirmed&quot;)
-- 5. the action (e.g. &quot;edit&quot; or &quot;move&quot;)
-- 
-- When the module looks up a category in the table, first it will will check to
-- see a key exists that corresponds to all five parameters. For example, a
-- user page semi-protected from vandalism for two weeks would have the key
-- &quot;temp-user-vandalism-autoconfirmed-edit&quot;. If no match is found, the module
-- changes the first part of the key to &quot;all&quot; and checks the table again. It
-- keeps checking increasingly generic key combinations until it finds the
-- field, or until it reaches the key &quot;all-all-all-all-all&quot;.
--
-- The module uses a binary matrix to determine the order in which to search.
-- This is best demonstrated by a table. In this table, the &quot;0&quot; values
-- represent &quot;all&quot;, and the &quot;1&quot; values represent the original data (e.g.
-- &quot;indef&quot; or &quot;file&quot; or &quot;vandalism&quot;).
--
--        expiry    namespace reason   level     action
-- order
-- 1      1         1         1        1         1
-- 2      0         1         1        1         1
-- 3      1         0         1        1         1
-- 4      0         0         1        1         1
-- 5      1         1         0        1         1
-- 6      0         1         0        1         1
-- 7      1         0         0        1         1
-- 8      0         0         0        1         1
-- 9      1         1         1        0         1
-- 10     0         1         1        0         1
-- 11     1         0         1        0         1
-- 12     0         0         1        0         1
-- 13     1         1         0        0         1
-- 14     0         1         0        0         1
-- 15     1         0         0        0         1
-- 16     0         0         0        0         1
-- 17     1         1         1        1         0
-- 18     0         1         1        1         0
-- 19     1         0         1        1         0
-- 20     0         0         1        1         0
-- 21     1         1         0        1         0
-- 22     0         1         0        1         0
-- 23     1         0         0        1         0
-- 24     0         0         0        1         0
-- 25     1         1         1        0         0
-- 26     0         1         1        0         0
-- 27     1         0         1        0         0
-- 28     0         0         1        0         0
-- 29     1         1         0        0         0
-- 30     0         1         0        0         0
-- 31     1         0         0        0         0
-- 32     0         0         0        0         0
--
-- In this scheme the action has the highest priority, as it is the last
-- to change, and the expiry has the least priority, as it changes the most.
-- The priorities of the expiry, the protection level and the action are
-- fixed, but the priorities of the reason and the namespace can be swapped
-- through the use of the cfg.bannerDataNamespaceHasPriority table.
--]]

-- If the reason specified to the template is listed in this table,
-- namespace data will take priority over reason data in the protectionCategories
-- table.
reasonsWithNamespacePriority = {
	vandalism = true,
},

-- The string to use as a namespace key for the protectionCategories table for each
-- namespace number.
categoryNamespaceKeys = {
	[  2] = 'user',
	[  3] = 'user',
	[  4] = 'project',
	[  6] = 'file',
	[  8] = 'mediawiki',
	[ 10] = 'template',
	[ 12] = 'project',
	[ 14] = 'category',
	[100] = 'portal',
	[828] = 'module',
},

protectionCategories = {
	['all|all|all|all|all']                  = 'Wikipedia protected pages',
	['all|all|office|all|all']               = 'Wikipedia Office-protected pages',
	['all|all|reset|all|all']                = 'Wikipedia Office-protected pages',
	['all|all|dmca|all|all']                 = 'Wikipedia Office-protected pages',
	['all|all|mainpage|all|all']             = 'Wikipedia fully-protected main page files',
	['all|all|all|extendedconfirmed|all']    = 'Wikipedia pages under 30-500 editing restriction',
	['all|all|ecp|extendedconfirmed|all']    = 'Wikipedia pages under 30-500 editing restriction',
	['all|template|all|all|edit']            = 'Wikipedia fully-protected templates',
	['all|all|all|autoconfirmed|edit']       = 'Wikipedia semi-protected pages',
	['indef|all|all|autoconfirmed|edit']     = 'Wikipedia indefinitely semi-protected pages',
	['all|all|blp|autoconfirmed|edit']       = 'Wikipedia indefinitely semi-protected biographies of living people',
	['temp|all|blp|autoconfirmed|edit']      = 'Wikipedia temporarily semi-protected biographies of living people',
	['all|all|dispute|autoconfirmed|edit']   = 'Wikipedia pages semi-protected due to dispute',
	['all|all|sock|autoconfirmed|edit']      = 'Wikipedia pages semi-protected from banned users',
	['all|all|vandalism|autoconfirmed|edit'] = 'Wikipedia pages semi-protected against vandalism',
	['all|category|all|autoconfirmed|edit']  = 'Wikipedia semi-protected categories',
	['all|file|all|autoconfirmed|edit']      = 'Wikipedia semi-protected files',
	['all|portal|all|autoconfirmed|edit']    = 'Wikipedia semi-protected portals',
	['all|project|all|autoconfirmed|edit']   = 'Wikipedia semi-protected project pages',
	['all|talk|all|autoconfirmed|edit']      = 'Wikipedia semi-protected talk pages',
	['all|template|all|autoconfirmed|edit']  = 'Wikipedia semi-protected templates',
	['all|user|all|autoconfirmed|edit']      = 'Wikipedia semi-protected user and user talk pages',
	['all|template|all|templateeditor|edit'] = 'Wikipedia template-protected templates',
	['all|all|blp|sysop|edit']               = 'Wikipedia indefinitely protected biographies of living people',
	['temp|all|blp|sysop|edit']              = 'Wikipedia temporarily protected biographies of living people',
	['all|all|dispute|sysop|edit']           = 'Wikipedia pages protected due to dispute',
	['all|all|sock|sysop|edit']              = 'Wikipedia pages protected from banned users',
	['all|all|vandalism|sysop|edit']         = 'Wikipedia pages protected against vandalism',
	['all|category|all|sysop|edit']          = 'Wikipedia protected categories',
	['all|file|all|sysop|edit']              = 'Wikipedia fully-protected files',
	['all|project|all|sysop|edit']           = 'Wikipedia fully-protected project pages',
	['all|talk|all|sysop|edit']              = 'Wikipedia fully-protected talk pages',
	['all|template|all|sysop|edit']          = 'Wikipedia fully-protected templates',
	['all|user|all|sysop|edit']              = 'Wikipedia protected user and user talk pages',
	['all|module|all|all|edit']              = 'Wikipedia fully-protected modules',
	['all|module|all|templateeditor|edit']   = 'Wikipedia template-protected modules',
	['all|module|all|autoconfirmed|edit']    = 'Wikipedia semi-protected modules',
	['all|all|all|sysop|move']               = 'Wikipedia move-protected pages',
	['indef|all|all|sysop|move']             = 'Wikipedia indefinitely move-protected pages',
	['all|all|dispute|sysop|move']           = 'Wikipedia pages move-protected due to dispute',
	['all|all|vandalism|sysop|move']         = 'Wikipedia pages move-protected due to vandalism',
	['all|portal|all|sysop|move']            = 'Wikipedia move-protected portals',
	['all|portal|all|sysop|move']            = 'Wikipedia move-protected portals',
	['all|project|all|sysop|move']           = 'Wikipedia move-protected project pages',
	['all|talk|all|sysop|move']              = 'Wikipedia move-protected talk pages',
	['all|template|all|sysop|move']          = 'Wikipedia move-protected templates',
	['all|user|all|sysop|move']              = 'Wikipedia move-protected user and user talk pages',
	['all|all|all|autoconfirmed|autoreview'] = 'Wikipedia pending changes protected pages (level 1)',
	['all|all|all|reviewer|autoreview']      = 'Wikipedia pending changes protected pages (level 2)',
	['all|file|all|all|upload']              = 'Wikipedia upload-protected files',
},

--------------------------------------------------------------------------------
-- Expiry category config
--------------------------------------------------------------------------------

-- This table configures the expiry category behaviour for each protection
-- action.
-- * If set to true, setting that action will always categorise the page if
--   an expiry parameter is not set.
-- * If set to false, setting that action will never categorise the page.
-- * If set to nil, the module will categorise the page if:
--   1) an expiry parameter is not set, and
--   2) a reason is provided, and
--   3) the specified reason is not blacklisted in the reasonsWithoutExpiryCheck
--      table.

expiryCheckActions = {
	edit = nil,
	move = false,
	autoreview = true,
	upload = false
},

reasonsWithoutExpiryCheck = {
	blp = true,
	template = true,
},

--------------------------------------------------------------------------------
-- Pagetypes
--------------------------------------------------------------------------------

-- This table produces the page types available with the ${PAGETYPE} parameter.
-- Keys are namespace numbers, or the string &quot;default&quot; for the default value.
pagetypes = {
	[0] = 'article',
	[6] = 'file',
	[10] = 'template',
	[14] = 'category',
	[828] = 'module',
	default = 'page'
},

--------------------------------------------------------------------------------
-- Strings marking indefinite protection
--------------------------------------------------------------------------------

-- This table contains values passed to the expiry parameter that mean the page
-- is protected indefinitely.
indefStrings = {
	['indef'] = true,
	['indefinite'] = true,
	['indefinitely'] = true,
	['infinite'] = true,
},

--------------------------------------------------------------------------------
-- Group hierarchy
--------------------------------------------------------------------------------

-- This table maps each group to all groups that have a superset of the original
-- group's page editing permissions.
hierarchy = {
	sysop = {},
	reviewer = {'sysop'},
	filemover = {'sysop'},
	templateeditor = {'sysop'},
	extendedconfirmed = {'sysop'},
	autoconfirmed = {'reviewer', 'filemover', 'templateeditor', 'extendedconfirmed'},
	user = {'autoconfirmed'},
	['*'] = {'user'}
},

--------------------------------------------------------------------------------
-- Wrapper templates and their default arguments
--------------------------------------------------------------------------------

-- This table contains wrapper templates used with the module, and their
-- default arguments. Templates specified in this table should contain the
-- following invocation, and no other template content:
--
-- {{#invoke:Protection banner|main}}
--
-- If other content is desired, it can be added between
-- &lt;noinclude&gt;...&lt;/noinclude&gt; tags.
--
-- When a user calls one of these wrapper templates, they will use the
-- default arguments automatically. However, users can override any of the
-- arguments.
wrappers = {
	['Template:Pp']                         = {},
	['Template:Pp-30-500']                  = {'ecp'},
	['Template:Pp-blp']                     = {'blp'},
	-- we don't need Template:Pp-create
	['Template:Pp-dispute']                 = {'dispute'},
	['Template:Pp-main-page']               = {'mainpage'},
	['Template:Pp-move']                    = {action = 'move'},
	['Template:Pp-move-dispute']            = {'dispute', action = 'move'},
	-- we don't need Template:Pp-move-indef
	['Template:Pp-move-vandalism']          = {'vandalism', action = 'move'},
	['Template:Pp-office']                  = {'office'},
	['Template:Pp-office-dmca']             = {'dmca'},
	['Template:Pp-pc1']                     = {action = 'autoreview', small = true},
	['Template:Pp-pc2']                     = {action = 'autoreview', small = true},
	['Template:Pp-reset']                   = {'reset'},
	['Template:Pp-semi-indef']              = {small = true},
	['Template:Pp-sock']                    = {'sock'},
	['Template:Pp-template']                = {'template', small = true},
	['Template:Pp-upload']                  = {action = 'upload'},
	['Template:Pp-usertalk']                = {'usertalk'},
	['Template:Pp-vandalism']               = {'vandalism'},
},

--------------------------------------------------------------------------------
-- 
--                                 MESSAGES
-- 
--------------------------------------------------------------------------------

msg = {

--------------------------------------------------------------------------------
-- Intro blurb and intro fragment
--------------------------------------------------------------------------------

-- These messages specify what is produced by the ${INTROBLURB} and
-- ${INTROFRAGMENT} parameters. If the protection is temporary they use the
-- intro-blurb-expiry or intro-fragment-expiry, and if not they use
-- intro-blurb-noexpiry or intro-fragment-noexpiry.
-- It is possible to use banner parameters in these messages.
['intro-blurb-expiry'] = '${PROTECTIONBLURB} until ${EXPIRY}.',
['intro-blurb-noexpiry'] = '${PROTECTIONBLURB}.',
['intro-fragment-expiry'] = '${PROTECTIONBLURB} until ${EXPIRY},',
['intro-fragment-noexpiry'] = '${PROTECTIONBLURB}',

--------------------------------------------------------------------------------
-- Tooltip blurb
--------------------------------------------------------------------------------

-- These messages specify what is produced by the ${TOOLTIPBLURB} parameter.
-- If the protection is temporary the tooltip-blurb-expiry message is used, and
-- if not the tooltip-blurb-noexpiry message is used.
-- It is possible to use banner parameters in these messages.
['tooltip-blurb-expiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} until ${EXPIRY}.',
['tooltip-blurb-noexpiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL}.',
['tooltip-fragment-expiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL} until ${EXPIRY},',
['tooltip-fragment-noexpiry'] = 'This ${PAGETYPE} is ${PROTECTIONLEVEL}',

--------------------------------------------------------------------------------
-- Special explanation blurb
--------------------------------------------------------------------------------

-- An explanation blurb for pages that cannot be unprotected, e.g. for pages
-- in the MediaWiki namespace.
-- It is possible to use banner parameters in this message.
['explanation-blurb-nounprotect'] = 'See the [[Wikipedia:Protection policy|'
	.. 'protection policy]] and ${PROTECTIONLOG} for more details.'
	.. ' Please discuss any changes on the ${TALKPAGE}; you'
	.. ' may ${EDITREQUEST} to ask an'
	.. ' [[Wikipedia:Administrators|administrator]] to make an edit if it'
	.. ' is [[Help:Minor edit#When to mark an edit as a minor edit'
	.. '|uncontroversial]] or supported by [[Wikipedia:Consensus'
	.. '|consensus]].',

--------------------------------------------------------------------------------
-- Protection log display values
--------------------------------------------------------------------------------

-- These messages determine the display values for the protection log link
-- or the pending changes log link produced by the ${PROTECTIONLOG} parameter.
-- It is possible to use banner parameters in these messages.
['protection-log-display'] = 'protection log',
['pc-log-display'] = 'pending changes log',

--------------------------------------------------------------------------------
-- Current version display values
--------------------------------------------------------------------------------

-- These messages determine the display values for the page history link
-- or the move log link produced by the ${CURRENTVERSION} parameter.
-- It is possible to use banner parameters in these messages.
['current-version-move-display'] = 'current title',
['current-version-edit-display'] = 'current version',

--------------------------------------------------------------------------------
-- Talk page
--------------------------------------------------------------------------------

-- This message determines the display value of the talk page link produced
-- with the ${TALKPAGE} parameter.
-- It is possible to use banner parameters in this message.
['talk-page-link-display'] = 'talk page',

--------------------------------------------------------------------------------
-- Edit requests
--------------------------------------------------------------------------------

-- This message determines the display value of the edit request link produced
-- with the ${EDITREQUEST} parameter.
-- It is possible to use banner parameters in this message.
['edit-request-display'] = 'submit an edit request',

--------------------------------------------------------------------------------
-- Expiry date format
--------------------------------------------------------------------------------

-- This is the format for the blurb expiry date. It should be valid input for
-- the first parameter of the #time parser function.
['expiry-date-format'] = 'F j, Y',

--------------------------------------------------------------------------------
-- Tracking categories
--------------------------------------------------------------------------------

-- These messages determine which tracking categories the module outputs.
['tracking-category-incorrect'] = 'Wikipedia pages with incorrect protection templates',
['tracking-category-template'] = 'Wikipedia template-protected pages other than templates and modules',

--------------------------------------------------------------------------------
-- Images
--------------------------------------------------------------------------------

-- These are images that are not defined by their protection action and protection level.
['image-filename-indef'] = 'Padlock.svg',
['image-filename-default'] = 'Transparent.gif',

--------------------------------------------------------------------------------
-- End messages
--------------------------------------------------------------------------------
}

--------------------------------------------------------------------------------
-- End configuration
--------------------------------------------------------------------------------
}</text>
      <sha1>g3n16lqu6gf1ld30xbaqxxwq3e4n8ka</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Redirect</title>
    <ns>828</ns>
    <id>38849415</id>
    <revision>
      <id>773537701</id>
      <parentid>673312597</parentid>
      <timestamp>2017-04-03T01:02:46Z</timestamp>
      <contributor>
        <username>Nyttend</username>
        <id>1960810</id>
      </contributor>
      <comment>Copying change per request of AlexTheWhovian.  Please revert me if this causes some sort of error</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3689">-- This module provides functions for getting the target of a redirect page.

local p = {}

-- Gets a mw.title object, using pcall to avoid generating script errors if we
-- are over the expensive function count limit (among other possible causes).
local function getTitle(...)
	local success, titleObj = pcall(mw.title.new, ...)
	if success then
		return titleObj
	else
		return nil
	end
end

-- Gets the name of a page that a redirect leads to, or nil if it isn't a
-- redirect.
function p.getTargetFromText(text)
	return string.match(
		text,
		&quot;^%s*#[Rr][Ee][Dd][Ii][Rr][Ee][Cc][Tt]%s*:?%s*%[%[([^%[%]|]-)%]%]&quot;
	) or string.match(
		text,
		&quot;^%s*#[Rr][Ee][Dd][Ii][Rr][Ee][Cc][Tt]%s*:?%s*%[%[([^%[%]|]-)|[^%[%]]-%]%]&quot;
	)
end

-- Gets the target of a redirect. If the page specified is not a redirect,
-- returns nil.
function p.getTarget(page, fulltext)
	-- Get the title object. Both page names and title objects are allowed
	-- as input.
	local titleObj
	if type(page) == 'string' or type(page) == 'number' then
		titleObj = getTitle(page)
	elseif type(page) == 'table' and type(page.getContent) == 'function' then
		titleObj = page
	else
		error(string.format(
			&quot;bad argument #1 to 'getTarget'&quot;
				.. &quot; (string, number, or title object expected, got %s)&quot;,
			type(page)
		), 2)
	end
	if not titleObj or not titleObj.isRedirect then
		return nil
	end
	
	-- Find the target by using string matching on the page content.
	local target = p.getTargetFromText(titleObj:getContent() or &quot;&quot;)
	if target then
		local targetTitle = getTitle(target)
		if targetTitle then
			if fulltext then
				return targetTitle.fullText
			else
				return targetTitle.prefixedText
			end
		else
			return nil
		end
	else
		-- The page is a redirect, but matching failed. This indicates a bug in
		-- the redirect matching pattern, so throw an error.
		error(string.format(
			'could not parse redirect on page &quot;%s&quot;',
			fulltext and titleObj.fullText or titleObj.prefixedText
		))
	end
end

--[[
-- Given a single page name determines what page it redirects to and returns the
-- target page name, or the passed page name when not a redirect. The passed
-- page name can be given as plain text or as a page link.
-- 
-- Returns page name as plain text, or when the bracket parameter is given, as a
-- page link. Returns an error message when page does not exist or the redirect
-- target cannot be determined for some reason.
--]]
function p.luaMain(rname, bracket, fulltext)
	if type(rname) ~= &quot;string&quot; or not rname:find(&quot;%S&quot;) then
		return nil
	end
	bracket = bracket and &quot;[[%s]]&quot; or &quot;%s&quot;
	rname = rname:match(&quot;%[%[(.+)%]%]&quot;) or rname
	local target = p.getTarget(rname, fulltext)
	local ret = target or rname
	ret = getTitle(ret)
	if ret then
		if fulltext then
			ret = ret.fullText
		else
			ret = ret.prefixedText
		end
		return bracket:format(ret)
	else
		return nil
	end
end

-- Provides access to the luaMain function from wikitext.
function p.main(frame)
	local args = require('Module:Arguments').getArgs(frame, {frameOnly = true})
	return p.luaMain(args[1], args.bracket, args.fulltext) or ''
end

-- Returns true if the specified page is a redirect, and false otherwise.
function p.luaIsRedirect(page)
	local titleObj = getTitle(page)
	if not titleObj then
		return false
	end
	if titleObj.isRedirect then
		return true
	else
		return false
	end
end

-- Provides access to the luaIsRedirect function from wikitext, returning 'yes'
-- if the specified page is a redirect, and the blank string otherwise.
function p.isRedirect(frame)
	local args = require('Module:Arguments').getArgs(frame, {frameOnly = true})
	if p.luaIsRedirect(args[1]) then
		return 'yes'
	else
		return ''
	end
end

return p</text>
      <sha1>ada8ml76e2w9edlkodgxumwd5ucz0bf</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Redirect-multi</title>
    <ns>828</ns>
    <id>50525063</id>
    <revision>
      <id>728234376</id>
      <parentid>726661153</parentid>
      <timestamp>2016-07-04T04:20:43Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Tweaked defaulting to better match the templates it's replacing</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1140">local mRedirectHatnote = require('Module:Redirect hatnote')
local mArguments = require('Module:Arguments')
local mHatnote = require('Module:Hatnote')
local p = {}

function p.redirectMulti (frame)
	local args = mArguments.getArgs(frame)
	--Get maxArg manually because getArgs and table.maxn aren't friends
	local maxArg = 0
	for k, v in pairs(args) do
		if type(k) == 'number' and k &gt; maxArg then maxArg = k end
	end
	--Get number of redirects then remove it from the args table
	local numRedirects = tonumber(args[1]) or 1
	--Manual downshift of arguments; not using table.remove because getArgs is
	--gnarly and it's not a sequence anyway
	for i = 2, maxArg + 1 do args[i - 1] = args[i] end
	--if no arguments past redirects exist, add in a default set
	if maxArg - 2 &lt;= numRedirects then
		for i = 1, numRedirects do
			args[numRedirects + (2 * i)] = args[i] and mHatnote.disambiguate(args[i])
			--this does add in an &quot;and&quot; after the last item, but it's ignored
			args[numRedirects + (2 * i) + 1] = 'and'
		end
	end
	local options = {selfref = args.selfref}
	return mRedirectHatnote._redirect(args, numRedirects, options)
end

return p</text>
      <sha1>scgugk98siz6zwiz9wdklf236c2qagl</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Redirect hatnote</title>
    <ns>828</ns>
    <id>42680232</id>
    <revision>
      <id>726676462</id>
      <parentid>719088191</parentid>
      <timestamp>2016-06-23T17:28:48Z</timestamp>
      <contributor>
        <username>Nihiltres</username>
        <id>236191</id>
      </contributor>
      <comment>Rephrased error message to make more sense for version with multiple redirects</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3887">--[[
-- This module produces a &quot;redirect&quot; hatnote. It looks like this:
-- '&quot;X&quot; redirects here. For other uses, see Y.'
-- It implements the {{redirect}} template.
--]]

local mHatnote = require('Module:Hatnote')
local mHatList = require('Module:Hatnote list')
local mArguments --lazily initialize
local libraryUtil = require('libraryUtil')
local checkType = libraryUtil.checkType
local checkTypeMulti = libraryUtil.checkTypeMulti

local p = {}

local function getTitle(...)
	local success, titleObj = pcall(mw.title.new, ...)
	if success then
		return titleObj
	else
		return nil
	end
end

function p.redirect(frame)
	mArguments = require('Module:Arguments')
	local args = mArguments.getArgs(frame, {parentOnly=true})
	--Get number of redirects
	local numRedirects = tonumber(frame.args[1]) or 1
	-- Create the options table.
	local options = {}
	options.selfref = args.selfref
	return p._redirect(args, numRedirects, options)
end

function p._redirect(args, numRedirects, options, currentTitle, redirectTitle, targetTitle)
	-- Validate the input. Don't bother checking currentTitle, redirectTitle or
	-- targetTitle, as they are only used in testing.
	checkType('_redirect', 1, args, 'table')
	checkType('_redirect', 2, numRedirects, 'number', true)
	numRedirects = numRedirects or 1
	checkType('_redirect', 3, options, 'table', true)
	options = options or {}
	currentTitle = currentTitle or mw.title.getCurrentTitle()
	-- Get the table of redirects
	local redirect = {}
	for i = 1, numRedirects do
		-- Return an error if a redirect parameter is missing.
		if not args[i] then
			return mHatnote.makeWikitextError(
				'missing redirect parameter',
				'Template:Redirect#Errors',
				args.category
			)
		end
		redirect[i] = args[i]
	end
	-- Generate the text.
	local formattedRedirect = {}
	for k,v in pairs(redirect) do
		formattedRedirect[k] = '&quot;' .. v .. '&quot;'
	end
	local text = {
		mHatList.andList(formattedRedirect) .. ' ' .. (#redirect == 1 and 'redirects' or 'redirect') .. ' here.',
		mHatList._forSee(args, #redirect + 1, {title = redirect[1]})
	}
	text = table.concat(text, ' ')
	-- Functionality for adding categories	
	local categoryTable = {}
	function addCategory(cat)
		if cat and cat ~= '' then
			-- Add by index to avoid duplicates
			categoryTable[string.format('[[Category:%s]]', cat)] = true
		end
	end
	--Generate tracking categories
	local mhOptions = {}
	for k,v in pairs(redirect) do
		-- We don't need a tracking category if the template invocation has been
		-- copied directly from the docs, or if we aren't in main- or category-space.
		if not v:find('^REDIRECT%d*$') and v ~= 'TERM' -- 
			and currentTitle.namespace == 0 or currentTitle.namespace == 14
		then
			redirectTitle = redirectTitle or getTitle(v)
			if not redirectTitle or not redirectTitle.exists then
				addCategory('Missing redirects')
			elseif not redirectTitle.isRedirect then
				addCategory('Articles with redirect hatnotes needing review')
			else
				local mRedirect = require('Module:Redirect')
				local target = mRedirect.getTarget(redirectTitle)
				targetTitle = targetTitle or target and getTitle(target)
				if targetTitle and targetTitle ~= currentTitle then
					addCategory('Articles with redirect hatnotes needing review')
				end
			end
		end

		-- Generate the options to pass to [[Module:Hatnote]].
		if currentTitle.namespace == 0 and not mhOptions.selfref
			and redirectTitle and redirectTitle.namespace ~= 0
		then
			-- We are on a mainspace page, and the hatnote starts with something
			-- like &quot;Wikipedia:Foo redirects here&quot;, so automatically label it as
			-- a self-reference.
			mhOptions.selfref = true
		else
			mhOptions.selfref = options.selfref
		end
	end
	--concatenate all the categories
	local category = ''
	for k,v in pairs(categoryTable) do
		category = category .. k
	end

	return mHatnote._hatnote(text, mhOptions) .. category
end
 
return p</text>
      <sha1>9hm3qnb9a1vg7dj9xxe1p46p0tk3bco</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Sidebar</title>
    <ns>828</ns>
    <id>38866323</id>
    <revision>
      <id>783543324</id>
      <parentid>783542180</parentid>
      <timestamp>2017-06-03T00:20:26Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <comment>self rv per trouble reports</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7699">--
-- This module implements {{Sidebar}}
--
require('Module:No globals')

local p = {}

local getArgs = require('Module:Arguments').getArgs
local navbar = require('Module:Navbar')._navbar

local function trimAndAddAutomaticNewline(s)
	-- For compatibility with the original {{sidebar with collapsible lists}}
	-- implementation, which passed some parameters through {{#if}} to trim
	-- their whitespace. This also triggered the automatic newline behavior.
	-- ([[meta:Help:Newlines and spaces#Automatic newline]])
	s = mw.ustring.gsub(s, &quot;^%s*(.-)%s*$&quot;, &quot;%1&quot;)
	if mw.ustring.find(s, '^[#*:;]') or mw.ustring.find(s, '^{|') then
		return '\n' .. s
	else
		return s
	end
end

function p.sidebar(frame, args)
	if not args then
		args = getArgs(frame)
	end
	local root = mw.html.create()
	local child = args.child and mw.text.trim(args.child) == 'yes'

	if not child then
		root = root
			:tag('table')
			:addClass('vertical-navbox')
			:addClass(args.wraplinks ~= 'true' and 'nowraplinks' or nil)
			:addClass(args.bodyclass or args.class)
			:css('float', args.float or 'right')
			:css('clear', (args.float == 'none' and 'both') or args.float or 'right')
			:css('width', args.width or '22.0em')
			:css('margin', args.float == 'left' and '0 1.0em 1.0em 0' or '0 0 1.0em 1.0em')
			:css('background', '#f9f9f9')
			:css('border', '1px solid #aaa')
			:css('padding', '0.2em')
			:css('border-spacing', '0.4em 0')
			:css('text-align', 'center')
			:css('line-height', '1.4em')
			:css('font-size', '88%')
			:cssText(args.bodystyle or args.style)

		if args.outertitle then
			root
				:tag('caption')
					:addClass(args.outertitleclass)
					:css('padding-bottom', '0.2em')
					:css('font-size', '125%')
					:css('line-height', '1.2em')
					:css('font-weight', 'bold')
					:cssText(args.outertitlestyle)
					:wikitext(args.outertitle)
		end

		if args.topimage then
			local imageCell = root:tag('tr'):tag('td')

			imageCell
				:addClass(args.topimageclass)
				:css('padding', '0.4em 0')
				:cssText(args.topimagestyle)
				:wikitext(args.topimage)

			if args.topcaption then
				imageCell
					:tag('div')
						:css('padding-top', '0.2em')
						:css('line-height', '1.2em')
						:cssText(args.topcaptionstyle)
						:wikitext(args.topcaption)
			end
		end

		if args.pretitle then
			root
				:tag('tr')
					:tag('td')
						:addClass(args.pretitleclass)
						:cssText(args.basestyle)
						:css('padding-top', args.topimage and '0.2em' or '0.4em')
						:css('line-height', '1.2em')
						:cssText(args.pretitlestyle)
						:wikitext(args.pretitle)
		end

	end

	if args.title then
		if child then
			root
				:wikitext(args.title)
				:wikitext('&lt;/th&gt;&lt;/tr&gt;') -- @todo replace this with unclosed again once mw.html gets it
		else
			root
				:tag('tr')
					:tag('th')
						:addClass(args.titleclass)
						:cssText(args.basestyle)
						:css('padding', '0.2em 0.4em 0.2em')
						:css('padding-top', args.pretitle and 0)
						:css('font-size', '145%')
						:css('line-height', '1.2em')
						:cssText(args.titlestyle)
						:wikitext(args.title)
		end
	end

	if args.image then
		local imageCell = root:tag('tr'):tag('td')

		imageCell
			:addClass(args.imageclass)
			:css('padding', '0.2em 0 0.4em')
			:cssText(args.imagestyle)
			:wikitext(args.image)

		if args.caption then
			imageCell
				:tag('div')
					:css('padding-top', '0.2em')
					:css('line-height', '1.2em')
					:cssText(args.captionstyle)
					:wikitext(args.caption)
		end
	end

	if args.above then
		root
			:tag('tr')
				:tag('td')
					:addClass(args.aboveclass)
					:css('padding', '0.3em 0.4em 0.3em')
					:css('font-weight', 'bold')
					:cssText(args.abovestyle)
					:newline() -- newline required for bullet-points to work
					:wikitext(args.above)
	end

	local rowNums = {}
	for k, v in pairs(args) do
		k = '' .. k
		local num = k:match('^heading(%d+)$') or k:match('^content(%d+)$')
		if num then table.insert(rowNums, tonumber(num)) end
	end
	table.sort(rowNums)
	-- remove duplicates from the list (e.g. 3 will be duplicated if both heading3 and content3 are specified)
	for i = #rowNums, 1, -1 do
		if rowNums[i] == rowNums[i - 1] then
			table.remove(rowNums, i)
		end
	end

	for i, num in ipairs(rowNums) do
		local heading = args['heading' .. num]
		if heading then
			root
				:tag('tr')
					:tag('th')
						:addClass(args.headingclass)
						:css('padding', '0.1em')
						:cssText(args.basestyle)
						:cssText(args.headingstyle)
						:cssText(args['heading' .. num .. 'style'])
						:newline()
						:wikitext(heading)
		end

		local content = args['content' .. num]
		if content then
			root
				:tag('tr')
					:tag('td')
						:addClass(args.contentclass)
						:css('padding', '0 0.1em 0.4em')
						:cssText(args.contentstyle)
						:cssText(args['content' .. num .. 'style'])
						:newline()
						:wikitext(content)
						:done()
					:newline() -- Without a linebreak after the &lt;/td&gt;, a nested list like &quot;* {{hlist| ...}}&quot; doesn't parse correctly.
		end
	end

	if args.below then
		root
			:tag('tr')
				:tag('td')
					:addClass(args.belowclass)
					:css('padding', '0.3em 0.4em 0.3em')
					:css('font-weight', 'bold')
					:cssText(args.belowstyle)
					:newline()
					:wikitext(args.below)
	end

	if not child then
		local navbarArg = args.navbar or args.tnavbar
		if navbarArg ~= 'none' and navbarArg ~= 'off' and (args.name or frame:getParent():getTitle():gsub('/sandbox$', '') ~= 'Template:Sidebar') then
			root
				:tag('tr')
					:tag('td')
						:css('text-align', 'right')
						:css('font-size', '115%')
						:cssText(args.navbarstyle or args.tnavbarstyle)
						:wikitext(navbar{
							args.name,
							mini = 1,
							fontstyle = args.navbarfontstyle or args.tnavbarfontstyle
						})
		end
	end

	return tostring(root)
end

function p.collapsible(frame)
	local args = getArgs(frame)

	args.abovestyle = 'border-top: 1px solid #aaa; border-bottom: 1px solid #aaa;' .. (args.abovestyle or '')
	args.belowstyle = 'border-top: 1px solid #aaa; border-bottom: 1px solid #aaa;' .. (args.belowstyle or '')
	args.navbarstyle = 'padding-top: 0.6em;' .. (args.navbarstyle or args.tnavbarstyle or '')
	if not args.name and frame:getParent():getTitle():gsub('/sandbox$', '') == 'Template:Sidebar with collapsible lists' then
		args.navbar = 'none'
	end

	local contentArgs = {}

	for k, v in pairs(args) do
		local num = string.match(k, '^list(%d+)$')
		if num then
			local expand = args.expanded and (args.expanded == 'all' or args.expanded == args['list' .. num .. 'name'])

			local row = mw.html.create('div')
			row
				:addClass('NavFrame')
				:addClass((not expand) and 'collapsed' or nil)
				:css('border', 'none')
				:css('padding', 0)
				:cssText(args.listframestyle)
				:cssText(args['list' .. num .. 'framestyle'])
				:tag('div')
					:addClass('NavHead')
					:addClass(args.listtitleclass)
					:css('font-size', '105%')
					:css('background', 'transparent')
					:css('text-align', 'left')
					:cssText(args.basestyle)
					:cssText(args.listtitlestyle)
					:cssText(args['list' .. num .. 'titlestyle'])
					:wikitext(trimAndAddAutomaticNewline(args['list' .. num .. 'title'] or 'List'))
					:done()
				:tag('div')
					:addClass('NavContent')
					:addClass(args.listclass)
					:addClass(args['list' .. num .. 'class'])
					:css('font-size', '105%')
					:css('padding', '0.2em 0 0.4em')
					:css('text-align', 'center')
					:cssText(args.liststyle)
					:cssText(args['list' .. num .. 'style'])
					:wikitext(trimAndAddAutomaticNewline(args['list' .. num]))

			contentArgs['content' .. num] = tostring(row)
		end
	end

	for k, v in pairs(contentArgs) do
		args[k] = v
	end

	return p.sidebar(frame, args)
end

return p</text>
      <sha1>l6zoluu1lnfyh4erg0fldjiuth4dnq1</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Subject bar</title>
    <ns>828</ns>
    <id>40791023</id>
    <revision>
      <id>757011060</id>
      <parentid>757008690</parentid>
      <timestamp>2016-12-28T06:16:42Z</timestamp>
      <contributor>
        <username>Matt Fitzpatrick</username>
        <id>291848</id>
      </contributor>
      <minor/>
      <comment>increasing width, decreasing margins to fit long book and portal titles</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="7852">local getPortalImage = require('Module:Portal').image

local p = {}

local function getArgNums(prefix, args)
    -- Returns a table containing the numbers of the arguments that exist for the specified prefix. For example, if the
    -- prefix was 'data', and 'data1', 'data2', and 'data5' exist, it would return {1, 2, 5}.
    local nums = {}
    for k, v in pairs(args) do
        local num = tostring(k):match('^' .. prefix .. '([1-9]%d*)$')
        if num then table.insert(nums, tonumber(num)) end
    end
    table.sort(nums)
    return nums
end

local function makeHorizontalRule()
    local row = mw.html.create('tr')
    row
        :tag('td')
            :attr('colspan', '2')
            :tag('hr', {selfClosing = true})
    return tostring(row)
end

local function makeItem(image, text)
    local root = mw.html.create('li')
    root
        :css('float', 'left')
        :css('margin-left', '0.3em')
        :css('height', '3.6em')
        :tag('span')
            :css('display', 'inline-block')
            :css('margin-right', '0.3em')
            :css('width', '30px')
            :css('line-height', '3.6em')
            :css('text-align', 'center')
            :wikitext(image)
            :done()
        :tag('span')
            :css('display', 'inline-block')
            :css('width', '11em')
            :css('vertical-align', 'middle')
            :wikitext(text)
    return tostring(root)
end

local function makeRow(items, heading, subheading, options)
    if #items &lt; 1 then return end
    local swapHeadingSize = type(options) == 'table' and options.swapHeadingSize or false
    local row = mw.html.create('tr')
    row
        :tag('td')
            :css('width', '175px')
            :tag('span')
                :css('font-size', swapHeadingSize and '90%' or '125%')
                :wikitext(heading)
                :done()
            :tag('br', {selfClosing = true})
                :done()
            :tag('span')
                :css('font-size', swapHeadingSize and '125%' or '90%')
                :wikitext(subheading)
    local list = row:tag('td'):css('text-align', 'left'):tag('ul')
    for i, item in ipairs(items) do
        local image = item[1]
        local text = item[2]
        list
            :wikitext(makeItem(image, text))
    end
    return tostring(row)
end

local function makeNumberedRow(prefix, args, heading, subheading, getItemValsFunc, options)
    if args[prefix] then
        args[prefix .. '1'] = args[prefix]
    end
    local argNums = getArgNums(prefix, args)
    local items = {}
    for i, argNum in ipairs(argNums) do
        local image, text = getItemValsFunc(args[prefix .. tostring(argNum)])
        table.insert(items, {image, text})
    end
    return makeRow(items, heading, subheading, options)
end

function p._main(args)
    local rows = {}

    -- Get the book row text.
    local bookHeading = &quot;'''[[Wikipedia:Books|Books]]'''&quot;
    local bookSubheading = 'View or order collections of articles'
    local function getBookItemVals(book)
        local image = '[[File:Office-book.svg|30px|alt=|link=]]'
        local text = mw.ustring.format(&quot;'''''[[Book:%s|%s]]'''''&quot;, book, book)
        return image, text
    end
    local bookRow = makeNumberedRow('book', args, bookHeading, bookSubheading, getBookItemVals)
    table.insert(rows, bookRow)

    -- Get the portal row text
    local portalHeading = &quot;'''[[Portal:Contents/Portals|Portals]]'''&quot;
    local portalSubheading = 'Access related topics'
    local function getPortalItemVals(portal)
        local image = mw.ustring.format('[[File:%s|30x30px]]', getPortalImage{portal})
        local text = mw.ustring.format(&quot;'''''[[Portal:%s|%s portal]]'''''&quot;, portal, portal)
        return image, text
    end
    local portalRow = makeNumberedRow('portal', args, portalHeading, portalSubheading, getPortalItemVals)
    table.insert(rows, portalRow)

    -- Get the sister projects row text.
    local sisters = {
        {arg = 'commons', image = 'Commons-logo.svg', prefix = 'commons', display = 'Media', from = 'Commons'},
        {arg = 'species', image = 'Wikispecies-logo.svg', prefix = 'wikispecies', display = 'Species directories', from = 'Wikispecies'},
        {arg = 'voy', image = 'Wikivoyage-Logo-v3-icon.svg', prefix = 'voy', display = 'Travel guides', from = 'Wikivoyage'},
        {arg = 'n', image = 'Wikinews-logo.svg', prefix = 'wikinews', display = 'News stories', from = 'Wikinews'},
        {arg = 'wikt', image = 'Wiktionary-logo-v2.svg', prefix = 'wiktionary', postfix = 'English', display = 'Definitions', from = 'Wiktionary'},
        {arg = 'b', image = 'Wikibooks-logo.svg', prefix = 'wikibooks', display = 'Textbooks', from = 'Wikibooks'},
        {arg = 'q', image = 'Wikiquote-logo.svg', prefix = 'wikiquote', display = 'Quotations', from = 'Wikiquote'},
        {arg = 's', image = 'Wikisource-logo.svg', prefix = 'wikisource', display = 'Source texts', from = 'Wikisource'},
        {arg = 'v', image = 'Wikiversity-logo.svg', prefix = 'wikiversity', display = 'Learning resources', from = 'Wikiversity'},
        {arg = 'd', image = 'Wikidata-logo.svg', prefix = 'wikidata', display = 'Data', from = 'Wikidata'},
        {arg = 'spoken', image = 'Sound-icon.svg', prefix = 'spoken wikipedia', display = 'Listen to this page', from = 'Spoken Wikipedia'},
    }
    local sisterItems = {}
    for i, t in ipairs(sisters) do
        if args[t.arg] then
            -- Get the image value.
            local image = mw.ustring.format('[[File:%s|30x30px|alt=|link=]]', t.image)
            -- Get the text value.
            local prefix = t.prefix
            local search = args[t.arg .. '-search'] or mw.title.getCurrentTitle().text
            local postfix = t.postfix
            postfix = postfix and ('#' .. postfix) or ''
            local display = t.display
            local from = t.from
            local text = mw.ustring.format(
                '[[%s:Special:Search/%s%s|%s]]&lt;br /&gt;from %s',
                prefix,    search,    postfix, display, from
            )
            if t.arg == 'spoken' then
            	 text = mw.ustring.format('%s on %s&lt;br /&gt;[[File:%s]]',
                				display, from, args[t.arg] 
                )		
            end
            -- Add the values to the items table.
            table.insert(sisterItems, {image, text})
        end
    end
    local sisterHeading = &quot;Find out more on Wikipedia's&quot;
    local sisterSubheading = &quot;'''[[Wikipedia:Wikimedia sister projects|Sister projects]]'''&quot;
    local sisterRow = makeRow(sisterItems, sisterHeading, sisterSubheading, {swapHeadingSize = true})
    table.insert(rows, sisterRow)

    -- Make the table.
    local root = mw.html.create('table')
    root
        :attr('role', 'presentation')
        :addClass('noprint')
        :addClass('navbox')
        :addClass('metadata')
        :addClass('plainlist')
        :css('background-color', '#f9f9f9')
        :css('border', '1px solid #aaa')
        :css('clear', 'both')
        :css('margin-bottom', '0.5em')
        :css('margin-top', '0.5em')
        :wikitext(table.concat(rows, makeHorizontalRule()))

    return tostring(root)
end

function p.main(frame)
    -- If called via #invoke, use the args passed into the invoking template, or the args passed to #invoke if any exist. Otherwise
    -- assume args are being passed directly in from the debug console or from another Lua module.
    local origArgs
    if frame == mw.getCurrentFrame() then
        origArgs = frame:getParent().args
        for k, v in pairs(frame.args) do
            origArgs = frame.args
            break
        end
    else
        origArgs = frame
    end
    -- Remove blank arguments.
    local args = {}
    for k, v in pairs(origArgs) do
        if v ~= '' then
            args[k] = v
        end
    end
    return p._main(args)
end

return p</text>
      <sha1>cn8hmp3hsgy1cr9mztaae3a30jhtn4o</sha1>
    </revision>
  </page>
  <page>
    <title>Module:TableTools</title>
    <ns>828</ns>
    <id>41371028</id>
    <revision>
      <id>610073853</id>
      <parentid>587870113</parentid>
      <timestamp>2014-05-25T14:11:02Z</timestamp>
      <contributor>
        <username>Mr. Stradivarius</username>
        <id>4708675</id>
      </contributor>
      <comment>fix cleanPattern function - some of the character classes were still being magic even when they were inside the set, so escape them all</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="8030">--[[
------------------------------------------------------------------------------------
--                               TableTools                                       --
--                                                                                --
-- This module includes a number of functions for dealing with Lua tables.        --
-- It is a meta-module, meant to be called from other Lua modules, and should     --
-- not be called directly from #invoke.                                           --
------------------------------------------------------------------------------------
--]]

local libraryUtil = require('libraryUtil')

local p = {}

-- Define often-used variables and functions.
local floor = math.floor
local infinity = math.huge
local checkType = libraryUtil.checkType

--[[
------------------------------------------------------------------------------------
-- isPositiveInteger
--
-- This function returns true if the given value is a positive integer, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a given table key is in the array part or the
-- hash part of a table.
------------------------------------------------------------------------------------
--]]
function p.isPositiveInteger(v)
	if type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- isNan
--
-- This function returns true if the given number is a NaN value, and false
-- if not. Although it doesn't operate on tables, it is included here as it is
-- useful for determining whether a value can be a valid table key. Lua will
-- generate an error if a NaN is used as a table key.
------------------------------------------------------------------------------------
--]]
function p.isNan(v)
	if type(v) == 'number' and tostring(v) == '-nan' then
		return true
	else
		return false
	end
end

--[[
------------------------------------------------------------------------------------
-- shallowClone
--
-- This returns a clone of a table. The value returned is a new table, but all
-- subtables and functions are shared. Metamethods are respected, but the returned
-- table will have no metatable of its own.
------------------------------------------------------------------------------------
--]]
function p.shallowClone(t)
	local ret = {}
	for k, v in pairs(t) do
		ret[k] = v
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- removeDuplicates
--
-- This removes duplicate values from an array. Non-positive-integer keys are
-- ignored. The earliest value is kept, and all subsequent duplicate values are
-- removed, but otherwise the array order is unchanged.
------------------------------------------------------------------------------------
--]]
function p.removeDuplicates(t)
	checkType('removeDuplicates', 1, t, 'table')
	local isNan = p.isNan
	local ret, exists = {}, {}
	for i, v in ipairs(t) do
		if isNan(v) then
			-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.
			ret[#ret + 1] = v
		else
			if not exists[v] then
				ret[#ret + 1] = v
				exists[v] = true
			end
		end	
	end
	return ret
end			

--[[
------------------------------------------------------------------------------------
-- numKeys
--
-- This takes a table and returns an array containing the numbers of any numerical
-- keys that have non-nil values, sorted in numerical order.
------------------------------------------------------------------------------------
--]]
function p.numKeys(t)
	checkType('numKeys', 1, t, 'table')
	local isPositiveInteger = p.isPositiveInteger
	local nums = {}
	for k, v in pairs(t) do
		if isPositiveInteger(k) then
			nums[#nums + 1] = k
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- affixNums
--
-- This takes a table and returns an array containing the numbers of keys with the
-- specified prefix and suffix. For example, for the table
-- {a1 = 'foo', a3 = 'bar', a6 = 'baz'} and the prefix &quot;a&quot;, affixNums will
-- return {1, 3, 6}.
------------------------------------------------------------------------------------
--]]
function p.affixNums(t, prefix, suffix)
	checkType('affixNums', 1, t, 'table')
	checkType('affixNums', 2, prefix, 'string', true)
	checkType('affixNums', 3, suffix, 'string', true)

	local function cleanPattern(s)
		-- Cleans a pattern so that the magic characters ()%.[]*+-?^$ are interpreted literally.
		s = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')
		return s
	end

	prefix = prefix or ''
	suffix = suffix or ''
	prefix = cleanPattern(prefix)
	suffix = cleanPattern(suffix)
	local pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'

	local nums = {}
	for k, v in pairs(t) do
		if type(k) == 'string' then			
			local num = mw.ustring.match(k, pattern)
			if num then
				nums[#nums + 1] = tonumber(num)
			end
		end
	end
	table.sort(nums)
	return nums
end

--[[
------------------------------------------------------------------------------------
-- numData
--
-- Given a table with keys like (&quot;foo1&quot;, &quot;bar1&quot;, &quot;foo2&quot;, &quot;baz2&quot;), returns a table
-- of subtables in the format 
-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }
-- Keys that don't end with an integer are stored in a subtable named &quot;other&quot;.
-- The compress option compresses the table so that it can be iterated over with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.numData(t, compress)
	checkType('numData', 1, t, 'table')
	checkType('numData', 2, compress, 'boolean', true)
	local ret = {}
	for k, v in pairs(t) do
		local prefix, num = mw.ustring.match(tostring(k), '^([^0-9]*)([1-9][0-9]*)$')
		if num then
			num = tonumber(num)
			local subtable = ret[num] or {}
			if prefix == '' then
				-- Positional parameters match the blank string; put them at the start of the subtable instead.
				prefix = 1
			end
			subtable[prefix] = v
			ret[num] = subtable
		else
			local subtable = ret.other or {}
			subtable[k] = v
			ret.other = subtable
		end
	end
	if compress then
		local other = ret.other
		ret = p.compressSparseArray(ret)
		ret.other = other
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- compressSparseArray
--
-- This takes an array with one or more nil values, and removes the nil values
-- while preserving the order, so that the array can be safely traversed with
-- ipairs.
------------------------------------------------------------------------------------
--]]
function p.compressSparseArray(t)
	checkType('compressSparseArray', 1, t, 'table')
	local ret = {}
	local nums = p.numKeys(t)
	for _, num in ipairs(nums) do
		ret[#ret + 1] = t[num]
	end
	return ret
end

--[[
------------------------------------------------------------------------------------
-- sparseIpairs
--
-- This is an iterator for sparse arrays. It can be used like ipairs, but can
-- handle nil values.
------------------------------------------------------------------------------------
--]]
function p.sparseIpairs(t)
	checkType('sparseIpairs', 1, t, 'table')
	local nums = p.numKeys(t)
	local i = 0
	local lim = #nums
	return function ()
		i = i + 1
		if i &lt;= lim then
			local key = nums[i]
			return key, t[key]
		else
			return nil, nil
		end
	end
end

--[[
------------------------------------------------------------------------------------
-- size
--
-- This returns the size of a key/value pair table. It will also work on arrays,
-- but for arrays it is more efficient to use the # operator.
------------------------------------------------------------------------------------
--]]
function p.size(t)
	checkType('size', 1, t, 'table')
	local i = 0
	for k in pairs(t) do
		i = i + 1
	end
	return i
end

return p</text>
      <sha1>k1omc17qij757n8hd68yihcqxo4biqi</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Unsubst</title>
    <ns>828</ns>
    <id>40945493</id>
    <revision>
      <id>784254967</id>
      <parentid>784251604</parentid>
      <timestamp>2017-06-07T09:01:50Z</timestamp>
      <contributor>
        <username>Jc86035</username>
        <id>17245768</id>
      </contributor>
      <minor/>
      <comment>fix whitespace removal; remove empty parameters after handling aliases and prevent removal of two or fewer consecutive empty parameters in a sequence</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="3688">local checkType = require('libraryUtil').checkType

local p = {}

local BODY_PARAM = '$B'

local specialParams = {
	['$params'] = 'parameter list',
	['$aliases'] = 'parameter aliases',
	['$flags'] = 'flags',
	['$B'] = 'template content'
}

function p.main(frame, body)
	-- If we are substing, this function returns a template invocation, and if
	-- not, it returns the template body. The template body can be specified in
	-- the body parameter, or in the template parameter defined in the
	-- BODY_PARAM variable. This function can be called from Lua or from
	-- #invoke.

	-- Return the template body if we aren't substing.
	if not mw.isSubsting() then
		if body ~= nil then
			return body
		elseif frame.args[BODY_PARAM] ~= nil then
			return frame.args[BODY_PARAM]
		else
			error(string.format(
				&quot;no template content specified (use parameter '%s' from #invoke)&quot;,
				BODY_PARAM
			), 2)
		end
	end

	-- Sanity check for the frame object.
	if type(frame) ~= 'table'
		or type(frame.getParent) ~= 'function'
		or not frame:getParent()
	then
		error(
			&quot;argument #1 to 'main' must be a frame object with a parent &quot; ..
			&quot;frame available&quot;,
			2
		)
	end

	-- Find the invocation name.
	local mTemplateInvocation = require('Module:Template invocation')
	local name = mTemplateInvocation.name(frame:getParent():getTitle())

	-- Combine passed args with passed defaults
	local args = {}
	if string.find( ','..(frame.args['$flags'] or '')..',', ',%s*override%s*,' ) then
		for k, v in pairs( frame:getParent().args ) do
			args[k] = v
		end
		for k, v in pairs( frame.args ) do
			if not specialParams[k] then
				if v == '__DATE__' then
					v = mw.getContentLanguage():formatDate( 'F Y' )
				end
				args[k] = v
			end
		end
	else
		for k, v in pairs( frame.args ) do
			if not specialParams[k] then
				if v == '__DATE__' then
					v = mw.getContentLanguage():formatDate( 'F Y' )
				end
				args[k] = v
			end
		end
		for k, v in pairs( frame:getParent().args ) do
			args[k] = v
		end
	end

	-- Trim parameters, if not specified otherwise
	if not string.find( ','..(frame.args['$flags'] or '')..',', ',%s*keep%-whitespace%s*,' ) then
		for k, v in pairs( args ) do args[k] = mw.ustring.match(v, '^%s*(.*)%s*$') or '' end
	end

	-- Pull information from parameter aliases
	local aliases = {}
	if frame.args['$aliases'] then
		local list = mw.text.split( frame.args['$aliases'], '%s*,%s*' )
		for k, v in ipairs( list ) do
			local tmp = mw.text.split( v, '%s*&gt;%s*' )
			aliases[tonumber(mw.ustring.match(tmp[1], '^[1-9][0-9]*$')) or tmp[1]] = ((tonumber(mw.ustring.match(tmp[2], '^[1-9][0-9]*$'))) or tmp[2])
		end
	end
	for k, v in pairs( aliases ) do
		if args[k] and ( not args[v] or args[v] == '' ) then
			args[v] = args[k]
		end
		args[k] = nil
	end

	-- Remove empty parameters, if specified
	if string.find( ','..(frame.args['$flags'] or '')..',', ',%s*remove%-empty%s*,' ) then
		local tmp = 0
		for k, v in ipairs( args ) do
			if v ~= '' or ( args[k+1] and args[k+1] ~= '' ) or ( args[k+2] and args[k+2] ~= '' ) then
				tmp = k
			else
				break
			end
		end
		for k, v in pairs( args ) do
			if v == '' then
				if not (type(k) == 'number' and k &lt; tmp) then args[k] = nil end
			end
		end
	end

	-- Order parameters
	if frame.args['$params'] then
		local params, tmp = mw.text.split( frame.args['$params'], '%s*,%s*' ), {}
		for k, v in ipairs(params) do
			v = tonumber(mw.ustring.match(v, '^[1-9][0-9]*$')) or v
			if args[v] then tmp[v], args[v] = args[v], nil end
		end
		for k, v in pairs(args) do tmp[k], args[k] = args[k], nil end
		args = tmp
	end

	return mTemplateInvocation.invocation(name, args)
end

p[''] = p.main -- For backwards compatibility

return p</text>
      <sha1>dnfbu3ol9y1rn4f58ap519pwafevpgq</sha1>
    </revision>
  </page>
  <page>
    <title>Module:WPMILHIST Infobox style</title>
    <ns>828</ns>
    <id>44048523</id>
    <revision>
      <id>666797202</id>
      <parentid>656893709</parentid>
      <timestamp>2015-06-13T19:09:51Z</timestamp>
      <contributor>
        <username>Izkala</username>
        <id>23051379</id>
      </contributor>
      <comment>Caption text is too small; rm redundant rules</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="1213">local retval = {
	main_box_raw_auto_width = 'border-spacing:2px;',
	header_raw = 'background-color:#B0C4DE;text-align:center;vertical-align:middle;font-size:110%;',
	sub_header_raw = 'background-color:#DCDCDC;text-align:center;vertical-align:middle;',
	header_color = 'background-color:#B0C4DE;',
	nav_box = 'margin:0;float:right;clear:right;width:315px;margin-bottom:0.5em;margin-left:1em;',
	nav_box_child = 'margin:0;float:right;clear:right;width:305px;margin-bottom:0.5em;',
	nav_box_wide =  '',
	nav_box_header = 'background-color:#B0C4DE;',
	nav_box_wide_header = 'background-color:#B0C4DE;',
	nav_box_label = 'background-color:#DCDCDC;',
	image_box_raw = 'text-align:center;border-bottom:1px solid #aaa;line-height:1.5em;',
	image_box_plain_raw = 'text-align:center;line-height:1.5em;',
	internal_border = '1px dotted #aaa;',
	section_border = '1px solid #aaa;'
}

retval.main_box_raw = 'width:315px;' .. retval.main_box_raw_auto_width
retval.header_bar = 'style=&quot;' .. retval.header_raw .. '&quot;'
retval.sub_header_bar = 'style=&quot;' .. retval.sub_header_raw .. '&quot;'
retval.image_box = 'style=&quot;' .. retval.image_box_raw .. '&quot;'
retval.image_box_plain = 'style=&quot;' .. retval.image_box_plain_raw .. '&quot;'

return retval</text>
      <sha1>9w9q5n74gm4r248xarj846fr58ktuhr</sha1>
    </revision>
  </page>
  <page>
    <title>Module:Yesno</title>
    <ns>828</ns>
    <id>38665046</id>
    <revision>
      <id>659459801</id>
      <parentid>604718900</parentid>
      <timestamp>2015-04-27T10:43:30Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <comment>recognise &quot;t&quot; for true and &quot;f&quot; for false, per request</comment>
      <model>Scribunto</model>
      <format>text/plain</format>
      <text xml:space="preserve" bytes="710">-- Function allowing for consistent treatment of boolean-like wikitext input.
-- It works similarly to the template {{yesno}}.

return function (val, default)
	-- If your wiki uses non-ascii characters for any of &quot;yes&quot;, &quot;no&quot;, etc., you
	-- should replace &quot;val:lower()&quot; with &quot;mw.ustring.lower(val)&quot; in the
	-- following line.
	val = type(val) == 'string' and val:lower() or val
	if val == nil then
		return nil
	elseif val == true 
		or val == 'yes'
		or val == 'y'
		or val == 'true'
		or val == 't'
		or tonumber(val) == 1
	then
		return true
	elseif val == false
		or val == 'no'
		or val == 'n'
		or val == 'false'
		or val == 'f'
		or tonumber(val) == 0
	then
		return false
	else
		return default
	end
end</text>
      <sha1>266x81qzpz9iq1b5gft4zsdy5qzbnwi</sha1>
    </revision>
  </page>
</mediawiki>
